; ModuleID = '/llk/IR/drivers/net/usb/r8152.c_pt.bc'
source_filename = "../drivers/net/usb/r8152.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rtl8152_get_version:\09\09\09\09\09"
module asm "\09.asciz \09\22rtl8152_get_version\22\09\09\09\09\09"
module asm "__kstrtabns_rtl8152_get_version:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i32 }
%struct.usb_driver = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.usb_dynids, %struct.usbdrv_wrap, i8 }
%struct.usb_dynids = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.list_head = type { ptr, ptr }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.module = type { i32, %struct.list_head, [60 x i8], %struct.module_kobject, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, i32, ptr, ptr, i8, i8, i32, ptr, ptr, [48 x i8], %struct.module_layout, %struct.module_layout, %struct.mod_arch_specific, i32, i32, %struct.list_head, ptr, ptr, %struct.mod_kallsyms, ptr, ptr, ptr, ptr, i32, ptr, i32, i32, ptr, i32, ptr, i32, ptr, ptr, i32, ptr, i32, %struct.list_head, %struct.list_head, ptr, %struct.atomic_t, [40 x i8] }
%struct.module_kobject = type { %struct.kobject, ptr, ptr, ptr, ptr }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.module_layout = type { ptr, i32, i32, i32, i32, %struct.mod_tree_node }
%struct.mod_tree_node = type { ptr, %struct.latch_tree_node }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.rb_node = type { i32, ptr, ptr }
%struct.mod_arch_specific = type { [7 x ptr], %struct.mod_plt_sec, %struct.mod_plt_sec }
%struct.mod_plt_sec = type { ptr, ptr, i32 }
%struct.mod_kallsyms = type { ptr, i32, ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.lock_class_key = type {}
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ethtool_ops = type { i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.usb_interface = type { ptr, ptr, i32, ptr, i32, i32, i8, %struct.device, ptr, %struct.work_struct }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_host_config = type { %struct.usb_config_descriptor, ptr, [16 x ptr], [32 x ptr], [32 x ptr], ptr, i32 }
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, ptr, ptr, ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.121, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [8 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, %struct.possible_net_t, ptr, i32, %union.anon.138, %struct.device, [4 x ptr], ptr, ptr, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], %struct.netdevice_tracker, %struct.netdevice_tracker, [48 x i8] }
%struct.anon.121 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.hlist_node = type { ptr, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.ref_tracker_dir = type {}
%struct.possible_net_t = type {}
%union.anon.138 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.netdevice_tracker = type {}
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, i32, ptr, i32, [2 x i32], ptr, ptr, %struct.usb_host_endpoint, [4 x i8], %struct.device, %struct.usb_device_descriptor, [2 x i8], ptr, ptr, ptr, [16 x ptr], [16 x ptr], ptr, i16, i8, i8, i8, i16, i8, i32, ptr, ptr, ptr, %struct.list_head, i32, i32, %struct.atomic_t, i32, i32, i8, [3 x i8], ptr, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, [5 x i8] }>
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, ptr, ptr, ptr, i32, i32, i32 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.r8152 = type { i32, ptr, %struct.napi_struct, ptr, ptr, ptr, [4 x %struct.tx_agg], %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.sk_buff_head, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, %struct.delayed_work, %struct.delayed_work, %struct.mii_if_info, %struct.mutex, %struct.notifier_block, %struct.tasklet_struct, %struct.rtl_ops, %struct.ups_info, %struct.rtl_fw, %struct.atomic_t, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i16, ptr, i8, i8, i8 }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.tx_agg = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32 }
%struct.sk_buff_head = type { %union.anon.76, i32, %struct.spinlock }
%union.anon.76 = type { %struct.anon.77 }
%struct.anon.77 = type { ptr, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.mii_if_info = type { i32, i32, i32, i32, i8, ptr, ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.tasklet_struct = type { ptr, i32, %struct.atomic_t, i8, %union.anon.141, i32 }
%union.anon.141 = type { ptr }
%struct.rtl_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ups_info = type { i24 }
%struct.rtl_fw = type { ptr, ptr, [32 x i8], ptr, ptr, i8 }
%struct.netdev_queue = type { ptr, %struct.netdevice_tracker, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, [4 x i8], %struct.spinlock, i32, i32, i32, [48 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [52 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [24 x i8] }
%struct.firmware = type { i32, ptr, ptr }
%struct.crypto_shash = type { i32, [60 x i8], %struct.crypto_tfm }
%struct.crypto_tfm = type { i32, i32, ptr, ptr, [48 x i8], [0 x ptr] }
%struct.fw_header = type { [32 x i8], [32 x i8], [0 x %struct.fw_block] }
%struct.fw_block = type { i32, i32 }
%struct.fw_phy_nc = type { %struct.fw_block, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], [0 x i8] }
%struct.fw_phy_fixup = type { %struct.fw_block, %struct.fw_phy_set, i16, i16 }
%struct.fw_phy_set = type { i16, i16 }
%struct.fw_phy_speed_up = type { %struct.fw_block, i16, i16, i16, i16, [0 x i8] }
%struct.fw_phy_ver = type { %struct.fw_block, %struct.fw_phy_set, i32 }
%struct.vlan_hdr = type { i16, i16 }
%struct.anon.49 = type { ptr, ptr, %union.anon.50 }
%union.anon.50 = type { ptr }
%struct.sk_buff = type { %union.anon.48, %union.anon.51, %union.anon.52, [48 x i8], %union.anon.53, i32, i32, i16, i16, i16, [0 x i8], i8, i8, %union.anon.55, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.48 = type { %struct.anon.49 }
%union.anon.51 = type { ptr }
%union.anon.52 = type { i64 }
%union.anon.53 = type { %struct.anon.54 }
%struct.anon.54 = type { i32, ptr }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { [0 x i8], i16, [0 x i8], i16, %union.anon.57, i32, i32, i32, i16, i16, %union.anon.59, %union.anon.60, %union.anon.61, i16, i16, i16, i16, i16, i16, i16 }
%union.anon.57 = type { i32 }
%union.anon.59 = type { i32 }
%union.anon.60 = type { i32 }
%union.anon.61 = type { i16 }
%struct.sk_buff_list = type { ptr, ptr }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.69 }
%union.anon.69 = type { [4 x i32] }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.tx_desc = type { i32, i32 }
%struct.urb = type { %struct.kref, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, ptr, ptr, ptr, i32, i32, i32, i32, ptr, i32, ptr, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, ptr, ptr, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.rx_agg = type { %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr }
%struct.page = type { i32, %union.anon.1, %union.anon.115, %struct.atomic_t }
%union.anon.1 = type { %struct.anon }
%struct.anon = type { %struct.list_head, ptr, i32, i32 }
%union.anon.115 = type { %struct.atomic_t }
%struct.rx_desc = type { i32, i32, i32, i32, i32, i32 }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.fw_mac = type <{ %struct.fw_block, i16, i16, i16, i16, i16, i16, i16, i16, [16 x i16], i32, i16, i8, [0 x i8] }>
%struct.fw_phy_patch_key = type { %struct.fw_block, i16, i16, i32 }
%struct.fw_phy_union = type <{ %struct.fw_block, i16, i16, [2 x %struct.fw_phy_set], [8 x %struct.fw_phy_set], %struct.fw_phy_set, i8, i8, [0 x i8] }>
%struct.netdev_hw_addr = type { %struct.list_head, %struct.rb_node, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.ifreq = type { %union.anon.122, %union.anon.123 }
%union.anon.122 = type { [16 x i8] }
%union.anon.123 = type { %struct.ifmap }
%struct.ifmap = type { i32, i32, i16, i8, i8, i8 }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.usb_bus = type { ptr, ptr, i32, ptr, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, ptr, ptr, i32, i32, i32, i32 }
%struct.usb_devmap = type { [4 x i32] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.tally_counter = type { i64, i64, i64, i32, i16, i16, i32, i32, i64, i64, i32, i16, i16 }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x ptr] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.137, i32 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.137 = type { [3 x i32], [3 x i32], [3 x i32] }

@__UNIQUE_ID_firmware481 = internal constant [31 x i8] c"firmware=rtl_nic/rtl8153a-2.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware482 = internal constant [31 x i8] c"firmware=rtl_nic/rtl8153a-3.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware483 = internal constant [31 x i8] c"firmware=rtl_nic/rtl8153a-4.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware484 = internal constant [31 x i8] c"firmware=rtl_nic/rtl8153b-2.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware485 = internal constant [31 x i8] c"firmware=rtl_nic/rtl8153c-1.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware486 = internal constant [31 x i8] c"firmware=rtl_nic/rtl8156a-2.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware487 = internal constant [31 x i8] c"firmware=rtl_nic/rtl8156b-2.fw\00", section ".modinfo", align 1
@.str = private unnamed_addr constant [24 x i8] c"Unknown version 0x%04x\0A\00", align 1
@__kstrtab_rtl8152_get_version = external dso_local constant [0 x i8], align 1
@__kstrtabns_rtl8152_get_version = external dso_local constant [0 x i8], align 1
@__ksymtab_rtl8152_get_version = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rtl8152_get_version to i32), ptr @__kstrtab_rtl8152_get_version, ptr @__kstrtabns_rtl8152_get_version }, section "___ksymtab_gpl+rtl8152_get_version", align 4
@rtl8152_table = internal constant [45 x %struct.usb_device_id] [%struct.usb_device_id { i16 131, i16 3034, i16 -32688, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32688, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 3034, i16 -32685, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32685, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 3034, i16 -32430, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32430, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 3034, i16 -32429, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32429, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 3034, i16 -32427, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32427, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 3034, i16 -32426, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 3034, i16 -32426, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 1118, i16 1963, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 1118, i16 1963, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 1118, i16 1990, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 1118, i16 1990, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 1118, i16 2343, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 1118, i16 2343, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 1256, i16 -24319, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 1256, i16 -24319, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12367, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12367, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12386, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12386, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12393, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12393, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 12418, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 12418, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 29189, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 29189, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 29196, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 29196, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 29204, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 29204, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 29214, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 29214, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 6127, i16 -23673, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 6127, i16 -23673, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 5041, i16 65, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 5041, i16 65, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 2389, i16 2559, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 2389, i16 2559, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 131, i16 9047, i16 1537, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i32 0 }, %struct.usb_device_id { i16 899, i16 9047, i16 1537, i16 0, i16 0, i8 0, i8 0, i8 0, i8 2, i8 6, i8 0, i8 0, i32 0 }, %struct.usb_device_id zeroinitializer], align 4
@__UNIQUE_ID_author488 = internal constant [60 x i8] c"author=Realtek linux nic maintainers <nic_swsd@realtek.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_description489 = internal constant [64 x i8] c"description=Realtek RTL8152/RTL8153 Based USB Ethernet Adapters\00", section ".modinfo", align 1
@__UNIQUE_ID_license490 = internal constant [12 x i8] c"license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_version491 = internal constant [17 x i8] c"version=v1.12.12\00", section ".modinfo", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@rtl8152_driver = internal global %struct.usb_driver { ptr @.str.1, ptr @rtl8152_probe, ptr @rtl8152_disconnect, ptr null, ptr @rtl8152_suspend, ptr @rtl8152_resume, ptr @rtl8152_reset_resume, ptr @rtl8152_pre_reset, ptr @rtl8152_post_reset, ptr @rtl8152_table, ptr null, %struct.usb_dynids zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 6 }, align 4
@__this_module = external dso_local global %struct.module, align 64
@.str.1 = private unnamed_addr constant [6 x i8] c"r8152\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"Out of memory\0A\00", align 1
@rtl8152_probe.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"&tp->control\00", align 1
@rtl8152_netdev_ops = internal constant %struct.net_device_ops { ptr null, ptr null, ptr @rtl8152_open, ptr @rtl8152_close, ptr @rtl8152_start_xmit, ptr @rtl8152_features_check, ptr null, ptr null, ptr @rtl8152_set_rx_mode, ptr @rtl8152_set_mac_address, ptr @eth_validate_addr, ptr null, ptr @rtl8152_ioctl, ptr null, ptr null, ptr null, ptr null, ptr @rtl8152_change_mtu, ptr null, ptr @rtl8152_tx_timeout, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @rtl8152_set_features, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"000001000000\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"000002000000\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"Dell TB16 Dock, disable RX aggregation\00", align 1
@ops = internal constant %struct.ethtool_ops { i8 0, i32 17, i32 0, ptr @rtl8152_get_drvinfo, ptr null, ptr null, ptr @rtl8152_get_wol, ptr @rtl8152_set_wol, ptr @rtl8152_get_msglevel, ptr @rtl8152_set_msglevel, ptr @rtl8152_nway_reset, ptr @ethtool_op_get_link, ptr null, ptr null, ptr null, ptr null, ptr @rtl8152_get_coalesce, ptr @rtl8152_set_coalesce, ptr @rtl8152_get_ringparam, ptr @rtl8152_set_ringparam, ptr null, ptr @rtl8152_get_pauseparam, ptr @rtl8152_set_pauseparam, ptr null, ptr @rtl8152_get_strings, ptr null, ptr @rtl8152_get_ethtool_stats, ptr null, ptr null, ptr null, ptr null, ptr @rtl8152_get_sset_count, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @rtl_ethtool_get_eee, ptr @rtl_ethtool_set_eee, ptr @rtl8152_get_tunable, ptr @rtl8152_set_tunable, ptr null, ptr null, ptr @rtl8152_get_link_ksettings, ptr @rtl8152_set_link_ksettings, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@system_long_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.7 = private unnamed_addr constant [30 x i8] c"couldn't register the device\0A\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"v1.12.12\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Unexpected Device\0A\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"Expected endpoints are not found\0A\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"Invalid Rx endpoint address\0A\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"Invalid Tx endpoint address\0A\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"Invalid interrupt endpoint address\0A\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"Unknown Device\0A\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"drivers/net/usb/r8152.c\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"load %s successfully\0A\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"PHY patch request fail\0A\00", align 1
@rtl_patch_key_set.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"ram code speedup mode timeout\0A\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"ram code speedup mode fail\0A\00", align 1
@r8153_set_rx_early_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@r8156_init.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"wol setting is changed\0A\00", align 1
@r8156_hw_phy_cfg.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@r8156b_hw_phy_cfg.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153a-2.fw\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153a-3.fw\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153a-4.fw\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153b-2.fw\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8156a-2.fw\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8156b-2.fw\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"rtl_nic/rtl8153c-1.fw\00", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.29 = private unnamed_addr constant [12 x i8] c"carrier on\0A\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"carrier off\0A\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"Couldn't submit rx[%p], ret = %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"maybe reset is needed?\0A\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"Rx status %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"Promiscuous mode enabled\0A\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"skip request firmware\0A\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"unable to load firmware patch %s (%ld)\0A\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"file too small\0A\00", align 1
@.str.38 = private unnamed_addr constant [34 x i8] c"multiple PLA firmware encountered\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"check PLA firmware failed\0A\00", align 1
@.str.40 = private unnamed_addr constant [34 x i8] c"multiple USB firmware encountered\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"check USB firmware failed\0A\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"check PHY_START fail\0A\00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c"Invalid length for PHY_START\0A\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"Check PHY_STOP fail\0A\00", align 1
@.str.45 = private unnamed_addr constant [29 x i8] c"Invalid length for PHY_STOP\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"check PHY_NC fail\0A\00", align 1
@.str.47 = private unnamed_addr constant [29 x i8] c"multiple PHY NC encountered\0A\00", align 1
@.str.48 = private unnamed_addr constant [30 x i8] c"check PHY NC firmware failed\0A\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"PHY_UNION_NC out of order\0A\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"multiple PHY_UNION_NC encountered\0A\00", align 1
@.str.51 = private unnamed_addr constant [27 x i8] c"check PHY_UNION_NC failed\0A\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"PHY_UNION_NC1 out of order\0A\00", align 1
@.str.53 = private unnamed_addr constant [30 x i8] c"multiple PHY NC1 encountered\0A\00", align 1
@.str.54 = private unnamed_addr constant [28 x i8] c"check PHY_UNION_NC1 failed\0A\00", align 1
@.str.55 = private unnamed_addr constant [28 x i8] c"PHY_UNION_NC2 out of order\0A\00", align 1
@.str.56 = private unnamed_addr constant [30 x i8] c"multiple PHY NC2 encountered\0A\00", align 1
@.str.57 = private unnamed_addr constant [28 x i8] c"check PHY_UNION_NC2 failed\0A\00", align 1
@.str.58 = private unnamed_addr constant [28 x i8] c"PHY_UNION_UC2 out of order\0A\00", align 1
@.str.59 = private unnamed_addr constant [30 x i8] c"multiple PHY UC2 encountered\0A\00", align 1
@.str.60 = private unnamed_addr constant [28 x i8] c"check PHY_UNION_UC2 failed\0A\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"PHY_UNION_UC out of order\0A\00", align 1
@.str.62 = private unnamed_addr constant [29 x i8] c"multiple PHY UC encountered\0A\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"check PHY_UNION_UC failed\0A\00", align 1
@.str.64 = private unnamed_addr constant [36 x i8] c"check RTL_FW_PHY_UNION_MISC failed\0A\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"check PHY fixup failed\0A\00", align 1
@.str.66 = private unnamed_addr constant [34 x i8] c"multiple PHY firmware encountered\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"check PHY speed up failed\0A\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"Invalid order to set PHY version\0A\00", align 1
@.str.69 = private unnamed_addr constant [33 x i8] c"multiple PHY version encountered\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"check PHY version failed\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"Unknown type %u is found\0A\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"without PHY_STOP\0A\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"sha256\00", align 1
@.str.74 = private unnamed_addr constant [27 x i8] c"digestsize incorrect (%u)\0A\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"checksum fail\0A\00", align 1
@.str.76 = private unnamed_addr constant [21 x i8] c"fw_offset too small\0A\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"invalid fw_offset\0A\00", align 1
@.str.78 = private unnamed_addr constant [22 x i8] c"invalid block length\0A\00", align 1
@.str.79 = private unnamed_addr constant [35 x i8] c"invalid register to load firmware\0A\00", align 1
@.str.80 = private unnamed_addr constant [31 x i8] c"invalid base address register\0A\00", align 1
@.str.81 = private unnamed_addr constant [31 x i8] c"invalid enabled mask register\0A\00", align 1
@.str.82 = private unnamed_addr constant [39 x i8] c"invalid start register of break point\0A\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"invalid break point number\0A\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"unused bp%u is not zero\0A\00", align 1
@.str.85 = private unnamed_addr constant [37 x i8] c"invalid patch mode enabled register\0A\00", align 1
@.str.86 = private unnamed_addr constant [37 x i8] c"invalid register to switch the mode\0A\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"invalid pre_num %d\0A\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"invalid bp_num %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [19 x i8] c"invalid phy fixup\0A\00", align 1
@.str.90 = private unnamed_addr constant [22 x i8] c"invalid phy ver addr\0A\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"failed tx_urb %d\0A\00", align 1
@r8152_tx_csum.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.92 = private unnamed_addr constant [39 x i8] c"Invalid transport offset 0x%x for TSO\0A\00", align 1
@r8152_tx_csum.__already_done.93 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.94 = private unnamed_addr constant [31 x i8] c"Invalid transport offset 0x%x\0A\00", align 1
@r8152_tx_csum.__already_done.95 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.96 = private unnamed_addr constant [24 x i8] c"include/linux/if_vlan.h\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"Tx status %d\0A\00", align 1
@.str.98 = private unnamed_addr constant [28 x i8] c"intr_urb submit failed: %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [33 x i8] c"Stop submitting intr, status %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [24 x i8] c"intr status -EOVERFLOW\0A\00", align 1
@.str.101 = private unnamed_addr constant [16 x i8] c"intr status %d\0A\00", align 1
@.str.102 = private unnamed_addr constant [32 x i8] c"can't resubmit intr, status %d\0A\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"Tx timeout\0A\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"usb-%s-%s\00", align 1
@rtl8152_gstrings = internal unnamed_addr constant [13 x [32 x i8]] [[32 x i8] c"tx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_missed\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"align_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_single_collisions\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_multi_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"rx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_aborted\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"tx_underrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 1
@.str.105 = private unnamed_addr constant [29 x i8] c"Invalid rx copy break value\0A\00", align 1
@.str.106 = private unnamed_addr constant [21 x i8] c"Get ether addr fail\0A\00", align 1
@.str.107 = private unnamed_addr constant [24 x i8] c"Invalid ether addr %pM\0A\00", align 1
@.str.108 = private unnamed_addr constant [23 x i8] c"Random ether addr %pM\0A\00", align 1
@.str.117 = private unnamed_addr constant [14 x i8] c"linking down\0A\00", align 1
@llvm.compiler.used = appending global [12 x ptr] [ptr @__UNIQUE_ID_author488, ptr @__UNIQUE_ID_description489, ptr @__UNIQUE_ID_firmware481, ptr @__UNIQUE_ID_firmware482, ptr @__UNIQUE_ID_firmware483, ptr @__UNIQUE_ID_firmware484, ptr @__UNIQUE_ID_firmware485, ptr @__UNIQUE_ID_firmware486, ptr @__UNIQUE_ID_firmware487, ptr @__UNIQUE_ID_license490, ptr @__UNIQUE_ID_version491, ptr @__ksymtab_rtl8152_get_version], section "llvm.metadata"
@switch.table.rtl8152_probe = private unnamed_addr constant [14 x i32] [i32 9194, i32 9194, i32 9194, i32 9194, i32 1500, i32 9194, i32 9194, i32 1500, i32 15338, i32 15338, i32 16362, i32 16362, i32 9194, i32 16362], align 4
@switch.table.r8153_init = private unnamed_addr constant [4 x i32] [i32 250000, i32 524280, i32 85000, i32 85000], align 4
@switch.table.rtl8152_is_fw_mac_ok = private unnamed_addr constant [16 x i32] [i32 0, i32 0, i32 64568, i32 64568, i32 64568, i32 64568, i32 0, i32 64568, i32 64568, i32 0, i32 0, i32 64568, i32 64568, i32 64568, i32 64584, i32 64568], align 4
@switch.table.rtl8152_is_fw_mac_ok.118 = private unnamed_addr constant [16 x i32] [i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 16, i32 8], align 4
@switch.table.rtl8152_is_fw_mac_ok.119 = private unnamed_addr constant [14 x i32] [i32 63488, i32 63488, i32 63488, i32 63488, i32 63488, i32 58880, i32 58880, i32 63488, i32 63488, i32 58880, i32 58880, i32 58880, i32 58880, i32 58880], align 4
@switch.table.rtl8152_is_fw_mac_ok.120 = private unnamed_addr constant [14 x i32] [i32 64568, i32 64568, i32 64568, i32 64568, i32 64568, i32 64584, i32 64584, i32 64568, i32 64568, i32 64584, i32 64584, i32 64584, i32 64584, i32 64584], align 4
@switch.table.rtl8152_is_fw_mac_ok.121 = private unnamed_addr constant [14 x i32] [i32 8, i32 8, i32 8, i32 8, i32 8, i32 16, i32 16, i32 8, i32 8, i32 16, i32 16, i32 16, i32 16, i32 16], align 4

@__mod_usb__rtl8152_table_device_table = dso_local alias [45 x %struct.usb_device_id], ptr @rtl8152_table

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i8 @rtl8152_get_version(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 1
  %3 = load ptr, ptr %2, align 4
  %4 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %5 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3264, i32 noundef 4) #23
  %6 = icmp eq ptr %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %1
  %8 = getelementptr i8, ptr %3, i32 -128
  %9 = load i32, ptr %8, align 8
  %10 = shl i32 %9, 8
  %11 = or i32 %10, -2147483520
  %12 = tail call i32 @usb_control_msg(ptr noundef %8, i32 noundef %11, i8 noundef zeroext 5, i8 noundef zeroext -64, i16 noundef zeroext -6640, i16 noundef zeroext 256, ptr noundef nonnull %5, i16 noundef zeroext 4, i32 noundef 500) #24
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void @kfree(ptr noundef nonnull %5) #24
  br label %34

15:                                               ; preds = %7
  %16 = load i32, ptr %5, align 8
  %17 = lshr i32 %16, 16
  %18 = and i32 %17, 31984
  tail call void @kfree(ptr noundef nonnull %5) #24
  switch i32 %18, label %34 [
    i32 19456, label %37
    i32 19472, label %19
    i32 23552, label %20
    i32 23568, label %21
    i32 23584, label %22
    i32 23600, label %23
    i32 18432, label %24
    i32 24576, label %25
    i32 24592, label %26
    i32 28688, label %27
    i32 28704, label %28
    i32 28720, label %29
    i32 29696, label %30
    i32 29712, label %31
    i32 25600, label %32
    i32 29728, label %33
  ]

19:                                               ; preds = %15
  br label %37

20:                                               ; preds = %15
  br label %37

21:                                               ; preds = %15
  br label %37

22:                                               ; preds = %15
  br label %37

23:                                               ; preds = %15
  br label %37

24:                                               ; preds = %15
  br label %37

25:                                               ; preds = %15
  br label %37

26:                                               ; preds = %15
  br label %37

27:                                               ; preds = %15
  br label %37

28:                                               ; preds = %15
  br label %37

29:                                               ; preds = %15
  br label %37

30:                                               ; preds = %15
  br label %37

31:                                               ; preds = %15
  br label %37

32:                                               ; preds = %15
  br label %37

33:                                               ; preds = %15
  br label %37

34:                                               ; preds = %15, %14
  %35 = phi i32 [ 0, %14 ], [ %18, %15 ]
  %36 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %36, ptr noundef nonnull @.str, i32 noundef %35) #25
  br label %37

37:                                               ; preds = %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %15, %1
  %38 = phi i8 [ 0, %1 ], [ 0, %34 ], [ 16, %33 ], [ 15, %32 ], [ 14, %31 ], [ 13, %30 ], [ 12, %29 ], [ 11, %28 ], [ 10, %27 ], [ 9, %26 ], [ 8, %25 ], [ 7, %24 ], [ 6, %23 ], [ 5, %22 ], [ 4, %21 ], [ 3, %20 ], [ 2, %19 ], [ 1, %15 ]
  ret i8 %38
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_control_msg(ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext, ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local i32 @init_module() local_unnamed_addr #4 section ".init.text" {
  %1 = tail call i32 @usb_register_driver(ptr noundef nonnull @rtl8152_driver, ptr noundef nonnull @__this_module, ptr noundef nonnull @.str.1) #24
  ret i32 %1
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @cleanup_module() local_unnamed_addr #4 section ".exit.text" {
  tail call void @usb_deregister(ptr noundef nonnull @rtl8152_driver) #24
  ret void
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_register_driver(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_probe(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = alloca %struct.sockaddr, align 2
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 4
  %8 = alloca ptr, align 4
  %9 = alloca ptr, align 4
  %10 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr i8, ptr %11, i32 -128
  %13 = tail call zeroext i8 @rtl8152_get_version(ptr noundef %0)
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %414, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.usb_interface_descriptor, ptr %17, i32 0, i32 5
  %19 = load i8, ptr %18, align 1
  %20 = icmp eq i8 %19, -1
  br i1 %20, label %21, label %42

21:                                               ; preds = %15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store ptr null, ptr %7, align 4, !annotation !8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store ptr null, ptr %8, align 4, !annotation !8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store ptr null, ptr %9, align 4, !annotation !8
  %22 = call i32 @usb_find_common_endpoints(ptr noundef %17, ptr noundef nonnull %7, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef null) #24
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %77, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %7, align 4
  %26 = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %25, i32 0, i32 2
  %27 = load i8, ptr %26, align 1
  %28 = and i8 %27, 15
  %29 = icmp eq i8 %28, 1
  br i1 %29, label %30, label %77

30:                                               ; preds = %24
  %31 = load ptr, ptr %8, align 4
  %32 = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %31, i32 0, i32 2
  %33 = load i8, ptr %32, align 1
  %34 = and i8 %33, 15
  %35 = icmp eq i8 %34, 2
  br i1 %35, label %36, label %77

36:                                               ; preds = %30
  %37 = load ptr, ptr %9, align 4
  %38 = getelementptr inbounds %struct.usb_endpoint_descriptor, ptr %37, i32 0, i32 2
  %39 = load i8, ptr %38, align 1
  %40 = and i8 %39, 15
  %41 = icmp eq i8 %40, 3
  br i1 %41, label %80, label %77

42:                                               ; preds = %15
  %43 = load ptr, ptr %10, align 4
  %44 = getelementptr i8, ptr %43, i32 -128
  %45 = getelementptr i8, ptr %43, i32 489
  %46 = load i8, ptr %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp ult i8 %46, 2
  br i1 %48, label %414, label %49

49:                                               ; preds = %42
  %50 = getelementptr i8, ptr %43, i32 496
  %51 = load ptr, ptr %50, align 8
  br label %52

52:                                               ; preds = %65, %49
  %53 = phi i32 [ %66, %65 ], [ 0, %49 ]
  %54 = phi ptr [ %67, %65 ], [ %51, %49 ]
  %55 = getelementptr inbounds %struct.usb_config_descriptor, ptr %54, i32 0, i32 3
  %56 = load i8, ptr %55, align 4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.usb_host_config, ptr %54, i32 0, i32 4
  %60 = load ptr, ptr %59, align 4
  %61 = getelementptr inbounds %struct.usb_interface_cache, ptr %60, i32 0, i32 2
  %62 = getelementptr inbounds %struct.usb_interface_descriptor, ptr %61, i32 0, i32 5
  %63 = load i8, ptr %62, align 1
  %64 = icmp eq i8 %63, -1
  br i1 %64, label %69, label %65

65:                                               ; preds = %58, %52
  %66 = add nuw nsw i32 %53, 1
  %67 = getelementptr %struct.usb_host_config, ptr %54, i32 1
  %68 = icmp eq i32 %66, %47
  br i1 %68, label %75, label %52

69:                                               ; preds = %58
  %70 = getelementptr inbounds %struct.usb_config_descriptor, ptr %54, i32 0, i32 4
  %71 = load i8, ptr %70, align 1
  %72 = zext i8 %71 to i32
  %73 = tail call i32 @usb_driver_set_configuration(ptr noundef %44, i32 noundef %72) #24
  %74 = icmp eq i32 %53, %47
  br i1 %74, label %75, label %414

75:                                               ; preds = %69, %65
  %76 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %76, ptr noundef nonnull @.str.10) #25
  br label %414

77:                                               ; preds = %36, %30, %24, %21
  %78 = phi ptr [ @.str.11, %21 ], [ @.str.12, %24 ], [ @.str.13, %30 ], [ @.str.14, %36 ]
  %79 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %79, ptr noundef nonnull %78) #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  br label %414

80:                                               ; preds = %36
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %81 = call i32 @usb_reset_device(ptr noundef %12) #24
  %82 = call ptr @alloc_etherdev_mqs(i32 noundef 808, i32 noundef 1, i32 noundef 1) #24
  %83 = icmp eq ptr %82, null
  %84 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7
  br i1 %83, label %85, label %86

85:                                               ; preds = %80
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %84, ptr noundef nonnull @.str.2) #25
  br label %414

86:                                               ; preds = %80
  %87 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 111, i32 1
  store ptr %84, ptr %87, align 4
  %88 = getelementptr i8, ptr %82, i32 1408
  %89 = getelementptr i8, ptr %82, i32 2140
  store i32 32767, ptr %89, align 4
  %90 = getelementptr i8, ptr %82, i32 1412
  store ptr %12, ptr %90, align 4
  %91 = getelementptr i8, ptr %82, i32 1636
  store ptr %82, ptr %91, align 4
  %92 = getelementptr i8, ptr %82, i32 1632
  store ptr %0, ptr %92, align 8
  %93 = getelementptr i8, ptr %82, i32 2208
  store i8 %13, ptr %93, align 8
  %94 = load i32, ptr %12, align 8
  %95 = shl i32 %94, 8
  %96 = or i32 %95, -2147483520
  %97 = getelementptr i8, ptr %82, i32 2188
  store i32 %96, ptr %97, align 4
  %98 = load i32, ptr %12, align 8
  %99 = shl i32 %98, 8
  %100 = or i32 %99, -2147483648
  %101 = getelementptr i8, ptr %82, i32 2192
  store i32 %100, ptr %101, align 8
  %102 = load i32, ptr %12, align 8
  %103 = shl i32 %102, 8
  %104 = or i32 %103, -1073708928
  %105 = getelementptr i8, ptr %82, i32 2176
  store i32 %104, ptr %105, align 8
  %106 = load i32, ptr %12, align 8
  %107 = shl i32 %106, 8
  %108 = or i32 %107, -1073676288
  %109 = getelementptr i8, ptr %82, i32 2180
  store i32 %108, ptr %109, align 4
  %110 = load i32, ptr %12, align 8
  %111 = shl i32 %110, 8
  %112 = or i32 %111, 1073840256
  %113 = getelementptr i8, ptr %82, i32 2184
  store i32 %112, ptr %113, align 8
  switch i8 %13, label %118 [
    i8 1, label %114
    i8 2, label %114
    i8 7, label %114
  ]

114:                                              ; preds = %86, %86, %86
  %115 = getelementptr i8, ptr %82, i32 1948
  %116 = load i8, ptr %115, align 4
  %117 = and i8 %116, -5
  store i8 %117, ptr %115, align 4
  br label %122

118:                                              ; preds = %86
  %119 = getelementptr i8, ptr %82, i32 1948
  %120 = load i8, ptr %119, align 4
  %121 = or i8 %120, 4
  store i8 %121, ptr %119, align 4
  br label %122

122:                                              ; preds = %118, %114
  %123 = getelementptr i8, ptr %82, i32 2020
  switch i8 %13, label %226 [
    i8 1, label %124
    i8 2, label %124
    i8 7, label %124
    i8 3, label %138
    i8 4, label %138
    i8 5, label %138
    i8 6, label %138
    i8 8, label %157
    i8 9, label %157
    i8 12, label %172
    i8 11, label %175
    i8 13, label %191
    i8 14, label %191
    i8 16, label %195
    i8 15, label %210
  ]

124:                                              ; preds = %122, %122, %122
  store ptr @r8152b_init, ptr %123, align 4
  %125 = getelementptr i8, ptr %82, i32 2024
  store ptr @rtl8152_enable, ptr %125, align 4
  %126 = getelementptr i8, ptr %82, i32 2028
  store ptr @rtl8152_disable, ptr %126, align 4
  %127 = getelementptr i8, ptr %82, i32 2032
  store ptr @rtl8152_up, ptr %127, align 4
  %128 = getelementptr i8, ptr %82, i32 2036
  store ptr @rtl8152_down, ptr %128, align 4
  %129 = getelementptr i8, ptr %82, i32 2040
  store ptr @rtl8152_unload, ptr %129, align 4
  %130 = getelementptr i8, ptr %82, i32 2044
  store ptr @r8152_get_eee, ptr %130, align 4
  %131 = getelementptr i8, ptr %82, i32 2048
  store ptr @r8152_set_eee, ptr %131, align 4
  %132 = getelementptr i8, ptr %82, i32 2052
  store ptr @rtl8152_in_nway, ptr %132, align 4
  %133 = getelementptr i8, ptr %82, i32 2056
  store ptr @r8152b_hw_phy_cfg, ptr %133, align 4
  %134 = getelementptr i8, ptr %82, i32 2060
  store ptr @rtl_runtime_suspend_enable, ptr %134, align 4
  %135 = getelementptr i8, ptr %82, i32 2156
  store i32 16384, ptr %135, align 4
  %136 = getelementptr i8, ptr %82, i32 2128
  store i8 1, ptr %136, align 8
  %137 = getelementptr i8, ptr %82, i32 2202
  store i16 2, ptr %137, align 2
  br label %227

138:                                              ; preds = %122, %122, %122, %122
  store ptr @r8153_init, ptr %123, align 4
  %139 = getelementptr i8, ptr %82, i32 2024
  store ptr @rtl8153_enable, ptr %139, align 4
  %140 = getelementptr i8, ptr %82, i32 2028
  store ptr @rtl8153_disable, ptr %140, align 4
  %141 = getelementptr i8, ptr %82, i32 2032
  store ptr @rtl8153_up, ptr %141, align 4
  %142 = getelementptr i8, ptr %82, i32 2036
  store ptr @rtl8153_down, ptr %142, align 4
  %143 = getelementptr i8, ptr %82, i32 2040
  store ptr @rtl8153_unload, ptr %143, align 4
  %144 = getelementptr i8, ptr %82, i32 2044
  store ptr @r8153_get_eee, ptr %144, align 4
  %145 = getelementptr i8, ptr %82, i32 2048
  store ptr @r8152_set_eee, ptr %145, align 4
  %146 = getelementptr i8, ptr %82, i32 2052
  store ptr @rtl8153_in_nway, ptr %146, align 4
  %147 = getelementptr i8, ptr %82, i32 2056
  store ptr @r8153_hw_phy_cfg, ptr %147, align 4
  %148 = getelementptr i8, ptr %82, i32 2060
  store ptr @rtl8153_runtime_enable, ptr %148, align 4
  %149 = getelementptr i8, ptr %82, i32 2064
  store ptr @rtl8153_change_mtu, ptr %149, align 4
  %150 = getelementptr i8, ptr %11, i32 -100
  %151 = load i32, ptr %150, align 4
  %152 = icmp ult i32 %151, 5
  %153 = select i1 %152, i32 16384, i32 32768
  %154 = getelementptr i8, ptr %82, i32 2156
  store i32 %153, ptr %154, align 4
  %155 = getelementptr i8, ptr %82, i32 2128
  store i8 1, ptr %155, align 8
  %156 = getelementptr i8, ptr %82, i32 2202
  store i16 6, ptr %156, align 2
  br label %227

157:                                              ; preds = %122, %122
  store ptr @r8153b_init, ptr %123, align 4
  %158 = getelementptr i8, ptr %82, i32 2024
  store ptr @rtl8153_enable, ptr %158, align 4
  %159 = getelementptr i8, ptr %82, i32 2028
  store ptr @rtl8153_disable, ptr %159, align 4
  %160 = getelementptr i8, ptr %82, i32 2032
  store ptr @rtl8153b_up, ptr %160, align 4
  %161 = getelementptr i8, ptr %82, i32 2036
  store ptr @rtl8153b_down, ptr %161, align 4
  %162 = getelementptr i8, ptr %82, i32 2040
  store ptr @rtl8153b_unload, ptr %162, align 4
  %163 = getelementptr i8, ptr %82, i32 2044
  store ptr @r8153_get_eee, ptr %163, align 4
  %164 = getelementptr i8, ptr %82, i32 2048
  store ptr @r8152_set_eee, ptr %164, align 4
  %165 = getelementptr i8, ptr %82, i32 2052
  store ptr @rtl8153_in_nway, ptr %165, align 4
  %166 = getelementptr i8, ptr %82, i32 2056
  store ptr @r8153b_hw_phy_cfg, ptr %166, align 4
  %167 = getelementptr i8, ptr %82, i32 2060
  store ptr @rtl8153b_runtime_enable, ptr %167, align 4
  %168 = getelementptr i8, ptr %82, i32 2064
  store ptr @rtl8153_change_mtu, ptr %168, align 4
  %169 = getelementptr i8, ptr %82, i32 2156
  store i32 32768, ptr %169, align 4
  %170 = getelementptr i8, ptr %82, i32 2128
  store i8 1, ptr %170, align 8
  %171 = getelementptr i8, ptr %82, i32 2202
  store i16 6, ptr %171, align 2
  br label %227

172:                                              ; preds = %122
  %173 = getelementptr i8, ptr %82, i32 2128
  store i8 1, ptr %173, align 8
  %174 = getelementptr i8, ptr %82, i32 2202
  store i16 6, ptr %174, align 2
  br label %175

175:                                              ; preds = %172, %122
  store ptr @r8156_init, ptr %123, align 4
  %176 = getelementptr i8, ptr %82, i32 2024
  store ptr @rtl8156_enable, ptr %176, align 4
  %177 = getelementptr i8, ptr %82, i32 2028
  store ptr @rtl8153_disable, ptr %177, align 4
  %178 = getelementptr i8, ptr %82, i32 2032
  store ptr @rtl8156_up, ptr %178, align 4
  %179 = getelementptr i8, ptr %82, i32 2036
  store ptr @rtl8156_down, ptr %179, align 4
  %180 = getelementptr i8, ptr %82, i32 2040
  store ptr @rtl8153_unload, ptr %180, align 4
  %181 = getelementptr i8, ptr %82, i32 2044
  store ptr @r8153_get_eee, ptr %181, align 4
  %182 = getelementptr i8, ptr %82, i32 2048
  store ptr @r8152_set_eee, ptr %182, align 4
  %183 = getelementptr i8, ptr %82, i32 2052
  store ptr @rtl8153_in_nway, ptr %183, align 4
  %184 = getelementptr i8, ptr %82, i32 2056
  store ptr @r8156_hw_phy_cfg, ptr %184, align 4
  %185 = getelementptr i8, ptr %82, i32 2060
  store ptr @rtl8156_runtime_enable, ptr %185, align 4
  %186 = getelementptr i8, ptr %82, i32 2064
  store ptr @rtl8156_change_mtu, ptr %186, align 4
  %187 = getelementptr i8, ptr %82, i32 2156
  store i32 49152, ptr %187, align 4
  %188 = getelementptr i8, ptr %82, i32 2196
  %189 = load i8, ptr %188, align 4
  %190 = or i8 %189, 1
  store i8 %190, ptr %188, align 4
  br label %227

191:                                              ; preds = %122, %122
  %192 = getelementptr i8, ptr %82, i32 2196
  %193 = load i8, ptr %192, align 4
  %194 = or i8 %193, 1
  store i8 %194, ptr %192, align 4
  br label %195

195:                                              ; preds = %191, %122
  %196 = getelementptr i8, ptr %82, i32 2128
  store i8 1, ptr %196, align 8
  %197 = getelementptr i8, ptr %82, i32 2202
  store i16 6, ptr %197, align 2
  store ptr @r8156b_init, ptr %123, align 4
  %198 = getelementptr i8, ptr %82, i32 2024
  store ptr @rtl8156b_enable, ptr %198, align 4
  %199 = getelementptr i8, ptr %82, i32 2028
  store ptr @rtl8153_disable, ptr %199, align 4
  %200 = getelementptr i8, ptr %82, i32 2032
  store ptr @rtl8156_up, ptr %200, align 4
  %201 = getelementptr i8, ptr %82, i32 2036
  store ptr @rtl8156_down, ptr %201, align 4
  %202 = getelementptr i8, ptr %82, i32 2040
  store ptr @rtl8153_unload, ptr %202, align 4
  %203 = getelementptr i8, ptr %82, i32 2044
  store ptr @r8153_get_eee, ptr %203, align 4
  %204 = getelementptr i8, ptr %82, i32 2048
  store ptr @r8152_set_eee, ptr %204, align 4
  %205 = getelementptr i8, ptr %82, i32 2052
  store ptr @rtl8153_in_nway, ptr %205, align 4
  %206 = getelementptr i8, ptr %82, i32 2056
  store ptr @r8156b_hw_phy_cfg, ptr %206, align 4
  %207 = getelementptr i8, ptr %82, i32 2060
  store ptr @rtl8156_runtime_enable, ptr %207, align 4
  %208 = getelementptr i8, ptr %82, i32 2064
  store ptr @rtl8156_change_mtu, ptr %208, align 4
  %209 = getelementptr i8, ptr %82, i32 2156
  store i32 49152, ptr %209, align 4
  br label %227

210:                                              ; preds = %122
  store ptr @r8153c_init, ptr %123, align 4
  %211 = getelementptr i8, ptr %82, i32 2024
  store ptr @rtl8153_enable, ptr %211, align 4
  %212 = getelementptr i8, ptr %82, i32 2028
  store ptr @rtl8153_disable, ptr %212, align 4
  %213 = getelementptr i8, ptr %82, i32 2032
  store ptr @rtl8153c_up, ptr %213, align 4
  %214 = getelementptr i8, ptr %82, i32 2036
  store ptr @rtl8153b_down, ptr %214, align 4
  %215 = getelementptr i8, ptr %82, i32 2040
  store ptr @rtl8153_unload, ptr %215, align 4
  %216 = getelementptr i8, ptr %82, i32 2044
  store ptr @r8153_get_eee, ptr %216, align 4
  %217 = getelementptr i8, ptr %82, i32 2048
  store ptr @r8152_set_eee, ptr %217, align 4
  %218 = getelementptr i8, ptr %82, i32 2052
  store ptr @rtl8153_in_nway, ptr %218, align 4
  %219 = getelementptr i8, ptr %82, i32 2056
  store ptr @r8153c_hw_phy_cfg, ptr %219, align 4
  %220 = getelementptr i8, ptr %82, i32 2060
  store ptr @rtl8153c_runtime_enable, ptr %220, align 4
  %221 = getelementptr i8, ptr %82, i32 2064
  store ptr @rtl8153c_change_mtu, ptr %221, align 4
  %222 = getelementptr i8, ptr %82, i32 2156
  store i32 32768, ptr %222, align 4
  %223 = getelementptr i8, ptr %82, i32 2128
  store i8 1, ptr %223, align 8
  %224 = getelementptr i8, ptr %82, i32 2202
  store i16 6, ptr %224, align 2
  %225 = getelementptr i8, ptr %82, i32 2072
  br label %243

226:                                              ; preds = %122
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %84, ptr noundef nonnull @.str.15) #25
  br label %412

227:                                              ; preds = %195, %175, %157, %138, %124
  %228 = getelementptr i8, ptr %82, i32 2072
  switch i8 %13, label %247 [
    i8 4, label %229
    i8 5, label %232
    i8 6, label %235
    i8 9, label %237
    i8 12, label %240
    i8 14, label %242
    i8 16, label %242
    i8 15, label %243
  ]

229:                                              ; preds = %227
  store ptr @.str.22, ptr %228, align 4
  %230 = getelementptr i8, ptr %82, i32 2112
  store ptr @r8153_pre_firmware_1, ptr %230, align 4
  %231 = getelementptr i8, ptr %82, i32 2116
  store ptr @r8153_post_firmware_1, ptr %231, align 4
  br label %247

232:                                              ; preds = %227
  store ptr @.str.23, ptr %228, align 4
  %233 = getelementptr i8, ptr %82, i32 2112
  store ptr @r8153_pre_firmware_2, ptr %233, align 4
  %234 = getelementptr i8, ptr %82, i32 2116
  store ptr @r8153_post_firmware_2, ptr %234, align 4
  br label %247

235:                                              ; preds = %227
  store ptr @.str.24, ptr %228, align 4
  %236 = getelementptr i8, ptr %82, i32 2116
  store ptr @r8153_post_firmware_3, ptr %236, align 4
  br label %247

237:                                              ; preds = %227
  store ptr @.str.25, ptr %228, align 4
  %238 = getelementptr i8, ptr %82, i32 2112
  store ptr @r8153b_pre_firmware_1, ptr %238, align 4
  %239 = getelementptr i8, ptr %82, i32 2116
  store ptr @r8153b_post_firmware_1, ptr %239, align 4
  br label %247

240:                                              ; preds = %227
  store ptr @.str.26, ptr %228, align 4
  %241 = getelementptr i8, ptr %82, i32 2116
  store ptr @r8156a_post_firmware_1, ptr %241, align 4
  br label %247

242:                                              ; preds = %227, %227
  store ptr @.str.27, ptr %228, align 4
  br label %247

243:                                              ; preds = %227, %210
  %244 = phi ptr [ %225, %210 ], [ %228, %227 ]
  store ptr @.str.28, ptr %244, align 4
  %245 = getelementptr i8, ptr %82, i32 2112
  store ptr @r8153b_pre_firmware_1, ptr %245, align 4
  %246 = getelementptr i8, ptr %82, i32 2116
  store ptr @r8153c_post_firmware_1, ptr %246, align 4
  br label %247

247:                                              ; preds = %243, %242, %240, %237, %235, %232, %229, %227
  %248 = getelementptr i8, ptr %82, i32 1964
  call void @__mutex_init(ptr noundef %248, ptr noundef nonnull @.str.3, ptr noundef nonnull @rtl8152_probe.__key) #24
  %249 = getelementptr i8, ptr %82, i32 1844
  store i32 -32, ptr %249, align 4
  %250 = getelementptr i8, ptr %82, i32 1848
  store volatile ptr %250, ptr %250, align 4
  %251 = getelementptr i8, ptr %82, i32 1852
  store ptr %250, ptr %251, align 4
  %252 = getelementptr i8, ptr %82, i32 1856
  store ptr @rtl_work_func_t, ptr %252, align 4
  %253 = getelementptr i8, ptr %82, i32 1860
  call void @init_timer_key(ptr noundef %253, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #24
  %254 = getelementptr i8, ptr %82, i32 1888
  store i32 -32, ptr %254, align 8
  %255 = getelementptr i8, ptr %82, i32 1892
  store volatile ptr %255, ptr %255, align 4
  %256 = getelementptr i8, ptr %82, i32 1896
  store ptr %255, ptr %256, align 4
  %257 = getelementptr i8, ptr %82, i32 1900
  store ptr @rtl_hw_phy_work_func_t, ptr %257, align 4
  %258 = getelementptr i8, ptr %82, i32 1904
  call void @init_timer_key(ptr noundef %258, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #24
  %259 = getelementptr i8, ptr %82, i32 1996
  call void @tasklet_setup(ptr noundef %259, ptr noundef nonnull @bottom_half) #24
  %260 = getelementptr i8, ptr %82, i32 2004
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %260) #24, !srcloc !9
  %261 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %260, ptr %260, i32 1, ptr elementtype(i32) %260) #24, !srcloc !10
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !11
  call void @tasklet_unlock_wait(ptr noundef %259) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !12
  %262 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 16
  store ptr @rtl8152_netdev_ops, ptr %262, align 8
  %263 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 96
  store i32 500, ptr %263, align 8
  %264 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 23
  %265 = load i64, ptr %264, align 16
  %266 = or i64 %265, 1099512742355
  store i64 %266, ptr %264, align 16
  %267 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 24
  store i64 1099512742355, ptr %267, align 8
  %268 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 26
  store i64 1114227, ptr %268, align 8
  %269 = load i8, ptr %93, align 8
  %270 = icmp eq i8 %269, 1
  br i1 %270, label %271, label %273

271:                                              ; preds = %247
  %272 = and i64 %266, -1099511627777
  store i64 %272, ptr %264, align 16
  store i64 1114579, ptr %267, align 8
  br label %273

273:                                              ; preds = %271, %247
  %274 = getelementptr i8, ptr %11, i32 480
  %275 = load i16, ptr %274, align 8
  %276 = icmp eq i16 %275, 6127
  br i1 %276, label %277, label %284

277:                                              ; preds = %273
  %278 = getelementptr i8, ptr %11, i32 482
  %279 = load i16, ptr %278, align 2
  switch i16 %279, label %284 [
    i16 12418, label %280
    i16 -23673, label %280
  ]

280:                                              ; preds = %277, %277
  %281 = getelementptr i8, ptr %82, i32 2196
  %282 = load i8, ptr %281, align 4
  %283 = or i8 %282, 2
  store i8 %283, ptr %281, align 4
  br label %284

284:                                              ; preds = %280, %277, %273
  %285 = getelementptr i8, ptr %11, i32 484
  %286 = load i16, ptr %285, align 4
  %287 = icmp eq i16 %286, 12305
  br i1 %287, label %288, label %302

288:                                              ; preds = %284
  %289 = getelementptr i8, ptr %11, i32 656
  %290 = load ptr, ptr %289, align 8
  %291 = icmp eq ptr %290, null
  br i1 %291, label %302, label %292

292:                                              ; preds = %288
  %293 = call i32 @strcmp(ptr noundef nonnull %290, ptr noundef nonnull dereferenceable(13) @.str.4)
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %298, label %295

295:                                              ; preds = %292
  %296 = call i32 @strcmp(ptr noundef nonnull %290, ptr noundef nonnull dereferenceable(13) @.str.5)
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %302

298:                                              ; preds = %295, %292
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %11, ptr noundef nonnull @.str.6) #25
  %299 = getelementptr i8, ptr %82, i32 2196
  %300 = load i8, ptr %299, align 4
  %301 = or i8 %300, 4
  store i8 %301, ptr %299, align 4
  br label %302

302:                                              ; preds = %298, %295, %288, %284
  %303 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 42
  store ptr @ops, ptr %303, align 8
  %304 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 115
  store volatile i32 16354, ptr %304, align 32
  %305 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 30
  store i32 68, ptr %305, align 8
  %306 = load i8, ptr %93, align 8
  %307 = add i8 %306, -3
  %308 = icmp ult i8 %307, 14
  br i1 %308, label %309, label %313

309:                                              ; preds = %302
  %310 = sext i8 %307 to i32
  %311 = getelementptr inbounds [14 x i32], ptr @switch.table.rtl8152_probe, i32 0, i32 %310
  %312 = load i32, ptr %311, align 4
  br label %313

313:                                              ; preds = %309, %302
  %314 = phi i32 [ %312, %309 ], [ 1500, %302 ]
  %315 = getelementptr inbounds %struct.net_device, ptr %82, i32 0, i32 31
  store i32 %314, ptr %315, align 4
  %316 = getelementptr i8, ptr %82, i32 1932
  %317 = getelementptr i8, ptr %82, i32 1952
  store ptr %82, ptr %317, align 4
  %318 = getelementptr i8, ptr %82, i32 1956
  store ptr @read_mii_word, ptr %318, align 4
  %319 = getelementptr i8, ptr %82, i32 1960
  store ptr @write_mii_word, ptr %319, align 4
  %320 = getelementptr i8, ptr %82, i32 1940
  store i32 63, ptr %320, align 4
  %321 = getelementptr i8, ptr %82, i32 1944
  store i32 31, ptr %321, align 4
  store i32 32, ptr %316, align 4
  %322 = getelementptr i8, ptr %82, i32 2210
  store i8 1, ptr %322, align 2
  %323 = getelementptr i8, ptr %82, i32 2200
  store i16 100, ptr %323, align 8
  %324 = getelementptr i8, ptr %82, i32 2152
  store i32 15, ptr %324, align 8
  %325 = getelementptr i8, ptr %82, i32 1948
  %326 = load i8, ptr %325, align 4
  %327 = and i8 %326, 4
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %343, label %329

329:                                              ; preds = %313
  %330 = getelementptr i8, ptr %82, i32 2196
  %331 = load i8, ptr %330, align 4
  %332 = and i8 %331, 1
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %340, label %334

334:                                              ; preds = %329
  %335 = load ptr, ptr %90, align 4
  %336 = getelementptr inbounds %struct.usb_device, ptr %335, i32 0, i32 4
  %337 = load i32, ptr %336, align 4
  %338 = icmp ugt i32 %337, 4
  br i1 %338, label %339, label %340

339:                                              ; preds = %334
  store i16 2500, ptr %323, align 8
  store i32 79, ptr %324, align 8
  br label %341

340:                                              ; preds = %334, %329
  store i16 1000, ptr %323, align 8
  br label %341

341:                                              ; preds = %340, %339
  %342 = phi i32 [ 47, %340 ], [ 111, %339 ]
  store i32 %342, ptr %324, align 8
  br label %343

343:                                              ; preds = %341, %313
  %344 = getelementptr i8, ptr %82, i32 2209
  store i8 1, ptr %344, align 1
  %345 = getelementptr i8, ptr %82, i32 2160
  store i32 256, ptr %345, align 8
  %346 = getelementptr i8, ptr %82, i32 2164
  store i32 100, ptr %346, align 4
  %347 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 6
  %348 = load i8, ptr %347, align 8
  %349 = or i8 %348, 8
  store i8 %349, ptr %347, align 8
  %350 = load ptr, ptr %90, align 4
  %351 = getelementptr inbounds %struct.usb_device, ptr %350, i32 0, i32 20
  %352 = load ptr, ptr %351, align 4
  %353 = getelementptr inbounds %struct.usb_config_descriptor, ptr %352, i32 0, i32 6
  %354 = load i8, ptr %353, align 1
  %355 = and i8 %354, 32
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %343
  call fastcc void @__rtl_set_wol(ptr noundef %88, i32 noundef 0)
  br label %378

358:                                              ; preds = %343
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %359 = call fastcc i32 @generic_ocp_read(ptr noundef %88, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 307) #24
  %360 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %361 = lshr i32 %360, 4
  %362 = and i32 %361, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %363 = call fastcc i32 @generic_ocp_read(ptr noundef %88, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 460) #24
  %364 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %365 = lshr i32 %364, 19
  %366 = and i32 %365, 2
  %367 = or i32 %366, %362
  %368 = and i32 %365, 8
  %369 = or i32 %367, %368
  %370 = and i32 %365, 4
  %371 = or i32 %369, %370
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %372 = call fastcc i32 @generic_ocp_read(ptr noundef %88, i16 noundef zeroext -16204, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %373 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %374 = lshr i32 %373, 11
  %375 = and i32 %374, 32
  %376 = or i32 %371, %375
  %377 = getelementptr i8, ptr %82, i32 2136
  store i32 %376, ptr %377, align 8
  br label %378

378:                                              ; preds = %358, %357
  %379 = load ptr, ptr %123, align 4
  call void %379(ptr noundef %88) #24
  %380 = load ptr, ptr @system_long_wq, align 4
  %381 = call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %380, ptr noundef %254, i32 noundef 0) #24
  %382 = load ptr, ptr %91, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #24
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 2 dereferenceable(16) %3, i8 0, i32 16, i1 false) #24, !annotation !8
  %383 = call fastcc i32 @determine_ethernet_addr(ptr noundef %88, ptr noundef nonnull %3) #24
  %384 = icmp slt i32 %383, 0
  br i1 %384, label %392, label %385

385:                                              ; preds = %378
  %386 = load i8, ptr %93, align 8
  %387 = icmp eq i8 %386, 1
  br i1 %387, label %388, label %390

388:                                              ; preds = %385
  %389 = getelementptr inbounds %struct.sockaddr, ptr %3, i32 0, i32 1
  call void @dev_addr_mod(ptr noundef %382, i32 noundef 0, ptr noundef %389, i32 noundef 6) #24
  br label %392

390:                                              ; preds = %385
  %391 = call fastcc i32 @__rtl8152_set_mac_address(ptr noundef %382, ptr noundef nonnull %3, i1 noundef zeroext false) #24
  br label %392

392:                                              ; preds = %390, %388, %378
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #24
  %393 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 8
  store ptr %88, ptr %393, align 8
  %394 = getelementptr i8, ptr %82, i32 2196
  %395 = load i8, ptr %394, align 4
  %396 = and i8 %395, 1
  %397 = icmp eq i8 %396, 0
  %398 = getelementptr i8, ptr %82, i32 1416
  %399 = select i1 %397, i32 64, i32 256
  call void @netif_napi_add(ptr noundef nonnull %82, ptr noundef %398, ptr noundef nonnull @r8152_poll, i32 noundef %399) #24
  %400 = call i32 @register_netdev(ptr noundef nonnull %82) #24
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %403, label %402

402:                                              ; preds = %392
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %84, ptr noundef nonnull @.str.7) #25
  call void @tasklet_kill(ptr noundef %259) #24
  store ptr null, ptr %393, align 8
  br label %412

403:                                              ; preds = %392
  %404 = getelementptr i8, ptr %82, i32 2136
  %405 = load i32, ptr %404, align 8
  %406 = icmp ne i32 %405, 0
  %407 = call i32 @device_set_wakeup_enable(ptr noundef %11, i1 noundef zeroext %406) #24
  %408 = load i32, ptr %89, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %414, label %411

411:                                              ; preds = %403
  call void (ptr, ptr, ...) @netdev_info(ptr noundef nonnull %82, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9) #25
  br label %414

412:                                              ; preds = %402, %226
  %413 = phi i32 [ -19, %226 ], [ %400, %402 ]
  call void @free_netdev(ptr noundef nonnull %82) #24
  br label %414

414:                                              ; preds = %412, %411, %403, %85, %77, %75, %69, %42, %2
  %415 = phi i32 [ %413, %412 ], [ -12, %85 ], [ -19, %2 ], [ -19, %77 ], [ 0, %411 ], [ 0, %403 ], [ -19, %42 ], [ -19, %75 ], [ -19, %69 ]
  ret i32 %415
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_disconnect(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 8
  %3 = load ptr, ptr %2, align 8
  store ptr null, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 1
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.usb_device, ptr %7, i32 0, i32 3
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  tail call void @_set_bit(i32 noundef 0, ptr noundef nonnull %3) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %12

12:                                               ; preds = %11, %5
  %13 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 4
  %14 = load ptr, ptr %13, align 4
  tail call void @unregister_netdev(ptr noundef %14) #24
  %15 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 20
  tail call void @tasklet_kill(ptr noundef %15) #24
  %16 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 16
  %17 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %16) #24
  %18 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 21, i32 5
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %12
  tail call void %19(ptr noundef nonnull %3) #24
  br label %22

22:                                               ; preds = %21, %12
  %23 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 23, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  %26 = icmp ugt ptr %24, inttoptr (i32 -4096 to ptr)
  %27 = or i1 %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  tail call void @release_firmware(ptr noundef nonnull %24) #24
  store ptr null, ptr %23, align 4
  br label %29

29:                                               ; preds = %28, %22
  %30 = load ptr, ptr %13, align 4
  tail call void @free_netdev(ptr noundef %30) #24
  br label %31

31:                                               ; preds = %29, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_suspend(ptr nocapture noundef readonly %0, [1 x i32] %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = extractvalue [1 x i32] %1, 0
  %10 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 8
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 18
  tail call void @mutex_lock(ptr noundef %12) #24
  %13 = and i32 %9, 1024
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 4
  br i1 %14, label %138, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 21, i32 10
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %160, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr %15, align 4
  tail call void @_set_bit(i32 noundef 4, ptr noundef %11) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !14
  %22 = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 6
  %23 = load volatile i32, ptr %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %160, label %26

26:                                               ; preds = %20
  %27 = load volatile i32, ptr %11, align 4
  %28 = and i32 %27, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %160, label %30

30:                                               ; preds = %26
  %31 = load volatile i32, ptr %22, align 4
  %32 = and i32 %31, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %83

34:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %35 = call fastcc i32 @generic_ocp_read(ptr noundef %11, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 256) #24
  %36 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %37 = and i32 %36, -16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 %37, ptr %7, align 4
  %38 = load volatile i32, ptr %11, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %57

41:                                               ; preds = %34
  %42 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %43 = icmp eq ptr %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 1
  %46 = load ptr, ptr %45, align 4
  %47 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 41
  %48 = load i32, ptr %47, align 8
  %49 = call i32 @usb_control_msg(ptr noundef %46, i32 noundef %48, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %42, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %42) #24
  %50 = icmp eq i32 %49, -19
  br i1 %50, label %51, label %57

51:                                               ; preds = %44
  %52 = load ptr, ptr %45, align 4
  %53 = getelementptr inbounds %struct.usb_device, ptr %52, i32 0, i32 3
  %54 = load i32, ptr %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  call void @_set_bit(i32 noundef 0, ptr noundef %11) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %57

57:                                               ; preds = %56, %51, %44, %41, %34
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call fastcc void @rxdy_gated_en(ptr noundef %11, i1 noundef zeroext true) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %58 = call fastcc i32 @generic_ocp_read(ptr noundef %11, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 256) #24
  %59 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %60 = and i32 %59, 268435456
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %83

62:                                               ; preds = %57
  call fastcc void @rxdy_gated_en(ptr noundef %11, i1 noundef zeroext false) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %36, ptr %5, align 4
  %63 = load volatile i32, ptr %11, align 4
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %62
  %67 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %68 = icmp eq ptr %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 1
  %71 = load ptr, ptr %70, align 4
  %72 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 41
  %73 = load i32, ptr %72, align 8
  %74 = call i32 @usb_control_msg(ptr noundef %71, i32 noundef %73, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %67, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %67) #24
  %75 = icmp eq i32 %74, -19
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = load ptr, ptr %70, align 4
  %78 = getelementptr inbounds %struct.usb_device, ptr %77, i32 0, i32 3
  %79 = load i32, ptr %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  call void @_set_bit(i32 noundef 0, ptr noundef %11) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %82

82:                                               ; preds = %81, %76, %69, %66, %62
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @_clear_bit(i32 noundef 4, ptr noundef %11) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !15
  br label %160

83:                                               ; preds = %57, %30
  %84 = phi i32 [ 0, %30 ], [ %36, %57 ]
  call void @_clear_bit(i32 noundef 2, ptr noundef %11) #24
  %85 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 5
  %86 = load ptr, ptr %85, align 8
  call void @usb_kill_urb(ptr noundef %86) #24
  %87 = load ptr, ptr %17, align 4
  call void %87(ptr noundef %11, i1 noundef zeroext true) #24
  %88 = load volatile i32, ptr %22, align 4
  %89 = and i32 %88, 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %113

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 2
  call void @napi_disable(ptr noundef %92) #24
  call fastcc void @rtl_stop_rx(ptr noundef %11) #24
  call fastcc void @rxdy_gated_en(ptr noundef %11, i1 noundef zeroext false) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %84, ptr %4, align 4
  %93 = load volatile i32, ptr %11, align 4
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %112

96:                                               ; preds = %91
  %97 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %98 = icmp eq ptr %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 1
  %101 = load ptr, ptr %100, align 4
  %102 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 41
  %103 = load i32, ptr %102, align 8
  %104 = call i32 @usb_control_msg(ptr noundef %101, i32 noundef %103, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %97, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %97) #24
  %105 = icmp eq i32 %104, -19
  br i1 %105, label %106, label %112

106:                                              ; preds = %99
  %107 = load ptr, ptr %100, align 4
  %108 = getelementptr inbounds %struct.usb_device, ptr %107, i32 0, i32 3
  %109 = load i32, ptr %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %106
  call void @_set_bit(i32 noundef 0, ptr noundef %11) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %112

112:                                              ; preds = %111, %106, %99, %96, %91
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @napi_enable(ptr noundef %92) #24
  br label %113

113:                                              ; preds = %112, %83
  %114 = load ptr, ptr %15, align 4
  %115 = getelementptr inbounds %struct.net_device, ptr %114, i32 0, i32 6
  %116 = load volatile i32, ptr %115, align 4
  %117 = and i32 %116, 4
  %118 = icmp eq i32 %117, 0
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %119 = call fastcc i32 @generic_ocp_read(ptr noundef %11, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %120 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %121 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 15
  %122 = call i32 @work_busy(ptr noundef %121) #24
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %137

124:                                              ; preds = %113
  %125 = and i32 %120, 2
  %126 = icmp eq i32 %125, 0
  %127 = xor i1 %118, %126
  br i1 %127, label %128, label %137

128:                                              ; preds = %124
  br i1 %118, label %133, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 21, i32 8
  %131 = load ptr, ptr %130, align 4
  %132 = call zeroext i1 %131(ptr noundef %11) #24
  br i1 %132, label %137, label %133

133:                                              ; preds = %129, %128
  %134 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 11
  %135 = load ptr, ptr %134, align 4
  %136 = icmp eq ptr %135, %134
  br i1 %136, label %160, label %137

137:                                              ; preds = %133, %129, %124, %113
  call fastcc void @rtl8152_runtime_resume(ptr noundef %11) #24
  br label %160

138:                                              ; preds = %2
  %139 = load ptr, ptr %15, align 4
  tail call void @netif_device_detach(ptr noundef %139) #24
  %140 = getelementptr inbounds %struct.net_device, ptr %139, i32 0, i32 6
  %141 = load volatile i32, ptr %140, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %138
  %145 = load volatile i32, ptr %11, align 4
  %146 = and i32 %145, 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %160, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 2
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %11) #24
  %150 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 5
  %151 = load ptr, ptr %150, align 8
  tail call void @usb_kill_urb(ptr noundef %151) #24
  %152 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 20
  %153 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 20, i32 2
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %153) #24, !srcloc !9
  %154 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %153, ptr %153, i32 1, ptr elementtype(i32) %153) #24, !srcloc !10
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !11
  tail call void @tasklet_unlock_wait(ptr noundef %152) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !12
  tail call void @napi_disable(ptr noundef %149) #24
  %155 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 15
  %156 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %155) #24
  %157 = getelementptr inbounds %struct.r8152, ptr %11, i32 0, i32 21, i32 4
  %158 = load ptr, ptr %157, align 4
  tail call void %158(ptr noundef %11) #24
  tail call void @napi_enable(ptr noundef %149) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %153) #24, !srcloc !9
  %159 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %153, ptr %153, i32 1, ptr elementtype(i32) %153) #24, !srcloc !17
  br label %160

160:                                              ; preds = %148, %144, %138, %137, %133, %82, %26, %20, %16
  %161 = phi i32 [ -16, %16 ], [ 0, %26 ], [ 0, %20 ], [ -16, %137 ], [ 0, %133 ], [ -16, %82 ], [ 0, %138 ], [ 0, %144 ], [ 0, %148 ]
  call void @mutex_unlock(ptr noundef %12) #24
  ret i32 %161
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_resume(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 18
  tail call void @mutex_lock(ptr noundef %4) #24
  %5 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 43
  store i16 -1, ptr %5, align 2
  %6 = load volatile i32, ptr %3, align 4
  %7 = and i32 %6, 16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call fastcc void @rtl8152_runtime_resume(ptr noundef %3)
  br label %28

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 4
  %12 = load ptr, ptr %11, align 4
  tail call void @netif_device_attach(ptr noundef %12) #24
  %13 = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 6
  %14 = load volatile i32, ptr %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 14
  %19 = load i32, ptr %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 21, i32 3
  %24 = load ptr, ptr %23, align 4
  tail call void %24(ptr noundef %3) #24
  tail call void @netif_carrier_off(ptr noundef %12) #24
  tail call void @_set_bit(i32 noundef 2, ptr noundef %3) #24
  %25 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 5
  %26 = load ptr, ptr %25, align 8
  %27 = tail call i32 @usb_submit_urb(ptr noundef %26, i32 noundef 3072) #24
  br label %28

28:                                               ; preds = %22, %17, %10, %9
  tail call void @mutex_unlock(ptr noundef %4) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_reset_resume(ptr nocapture noundef readonly %0) #0 {
  %2 = alloca %struct.sockaddr, align 2
  %3 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 8
  %4 = load ptr, ptr %3, align 8
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %4) #24
  %5 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 43
  store i16 -1, ptr %5, align 2
  %6 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 21
  %7 = load ptr, ptr %6, align 4
  tail call void %7(ptr noundef %4) #24
  %8 = load ptr, ptr @system_long_wq, align 4
  %9 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 16
  %10 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %8, ptr noundef %9, i32 noundef 0) #24
  %11 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 4
  %12 = load ptr, ptr %11, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #24
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 2 dereferenceable(16) %2, i8 0, i32 16, i1 false) #24, !annotation !8
  %13 = call fastcc i32 @determine_ethernet_addr(ptr noundef %4, ptr noundef nonnull %2) #24
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 47
  %17 = load i8, ptr %16, align 8
  %18 = icmp eq i8 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sockaddr, ptr %2, i32 0, i32 1
  call void @dev_addr_mod(ptr noundef %12, i32 noundef 0, ptr noundef %20, i32 noundef 6) #24
  br label %23

21:                                               ; preds = %15
  %22 = call fastcc i32 @__rtl8152_set_mac_address(ptr noundef %12, ptr noundef nonnull %2, i1 noundef zeroext true) #24
  br label %23

23:                                               ; preds = %21, %19, %1
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #24
  %24 = call i32 @rtl8152_resume(ptr noundef %0)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_pre_reset(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 4
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 6
  %9 = load volatile i32, ptr %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 87
  %14 = load ptr, ptr %13, align 64
  %15 = getelementptr inbounds %struct.netdev_queue, ptr %14, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %15) #24
  %16 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 20
  %17 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 20, i32 2
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %17) #24, !srcloc !9
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %17, ptr %17, i32 1, ptr elementtype(i32) %17) #24, !srcloc !10
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !11
  tail call void @tasklet_unlock_wait(ptr noundef %16) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !12
  tail call void @_clear_bit(i32 noundef 2, ptr noundef nonnull %3) #24
  %19 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 5
  %20 = load ptr, ptr %19, align 8
  tail call void @usb_kill_urb(ptr noundef %20) #24
  %21 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 15
  %22 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %21) #24
  %23 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 2
  tail call void @napi_disable(ptr noundef %23) #24
  %24 = load volatile i32, ptr %8, align 4
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %12
  %28 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 18
  tail call void @mutex_lock(ptr noundef %28) #24
  %29 = getelementptr inbounds %struct.r8152, ptr %3, i32 0, i32 21, i32 2
  %30 = load ptr, ptr %29, align 4
  tail call void %30(ptr noundef nonnull %3) #24
  tail call void @mutex_unlock(ptr noundef %28) #24
  br label %31

31:                                               ; preds = %27, %12, %5, %1
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_post_reset(ptr nocapture noundef readonly %0) #0 {
  %2 = alloca %struct.sockaddr, align 2
  %3 = getelementptr inbounds %struct.usb_interface, ptr %0, i32 0, i32 7, i32 8
  %4 = load ptr, ptr %3, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #24
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 2 dereferenceable(16) %2, i8 0, i32 16, i1 false), !annotation !8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %1
  %7 = call fastcc i32 @determine_ethernet_addr(ptr noundef nonnull %4, ptr noundef nonnull %2)
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %13

9:                                                ; preds = %6
  call void @rtnl_lock() #24
  %10 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 4
  %11 = load ptr, ptr %10, align 4
  %12 = call i32 @dev_set_mac_address(ptr noundef %11, ptr noundef nonnull %2, ptr noundef null) #24
  call void @rtnl_unlock() #24
  br label %13

13:                                               ; preds = %9, %6
  %14 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 4
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 6
  %17 = load volatile i32, ptr %16, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %13
  call void @_set_bit(i32 noundef 2, ptr noundef nonnull %4) #24
  %21 = load volatile i32, ptr %16, align 4
  %22 = and i32 %21, 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 18
  call void @mutex_lock(ptr noundef %25) #24
  %26 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 21, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = call i32 %27(ptr noundef nonnull %4) #24
  call fastcc void @rtl_start_rx(ptr noundef nonnull %4)
  call fastcc void @_rtl8152_set_rx_mode(ptr noundef %15)
  call void @mutex_unlock(ptr noundef %25) #24
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 2
  call void @napi_enable(ptr noundef %30) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !16
  %31 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 20, i32 2
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %31) #24, !srcloc !9
  %32 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %31, ptr %31, i32 1, ptr elementtype(i32) %31) #24, !srcloc !17
  %33 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 87
  %34 = load ptr, ptr %33, align 64
  call void @netif_tx_wake_queue(ptr noundef %34) #24
  %35 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 5
  %36 = load ptr, ptr %35, align 8
  %37 = call i32 @usb_submit_urb(ptr noundef %36, i32 noundef 3264) #24
  %38 = getelementptr inbounds %struct.r8152, ptr %4, i32 0, i32 9
  %39 = load volatile ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %38
  br i1 %40, label %44, label %41

41:                                               ; preds = %29
  %42 = call zeroext i1 @napi_schedule_prep(ptr noundef %30) #24
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  call void @__napi_schedule(ptr noundef %30) #24
  br label %44

44:                                               ; preds = %43, %41, %29, %13, %1
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_reset_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_etherdev_mqs(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl_work_func_t(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr i8, ptr %0, i32 -436
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %115

7:                                                ; preds = %1
  %8 = getelementptr i8, ptr %0, i32 -208
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 6
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %115, label %14

14:                                               ; preds = %7
  %15 = getelementptr i8, ptr %0, i32 -212
  %16 = load ptr, ptr %15, align 8
  %17 = tail call i32 @usb_autopm_get_interface(ptr noundef %16) #24
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %115, label %19

19:                                               ; preds = %14
  %20 = load volatile i32, ptr %3, align 4
  %21 = and i32 %20, 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %113, label %23

23:                                               ; preds = %19
  %24 = getelementptr i8, ptr %0, i32 120
  %25 = tail call i32 @mutex_trylock(ptr noundef %24) #24
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = load ptr, ptr @system_wq, align 4
  %29 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %28, ptr noundef %0, i32 noundef 0) #24
  br label %113

30:                                               ; preds = %23
  %31 = tail call i32 @_test_and_clear_bit(i32 noundef 3, ptr noundef %3) #24
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %85, label %33

33:                                               ; preds = %30
  %34 = load ptr, ptr %8, align 4
  %35 = getelementptr i8, ptr %0, i32 -428
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %36 = call fastcc i32 @generic_ocp_read(ptr noundef %3, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 307) #24
  %37 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %struct.net_device, ptr %34, i32 0, i32 6
  %41 = load volatile i32, ptr %40, align 4
  %42 = and i32 %41, 4
  %43 = icmp eq i32 %42, 0
  br i1 %39, label %72, label %44

44:                                               ; preds = %33
  br i1 %43, label %58, label %45

45:                                               ; preds = %44
  %46 = getelementptr i8, ptr %0, i32 180
  %47 = load ptr, ptr %46, align 4
  %48 = call i32 %47(ptr noundef %3) #24
  %49 = getelementptr inbounds %struct.net_device, ptr %34, i32 0, i32 87
  %50 = load ptr, ptr %49, align 64
  %51 = getelementptr inbounds %struct.netdev_queue, ptr %50, i32 0, i32 12
  call void @_set_bit(i32 noundef 0, ptr noundef %51) #24
  call void @napi_disable(ptr noundef %35) #24
  call void @netif_carrier_on(ptr noundef %34) #24
  call fastcc void @rtl_start_rx(ptr noundef %3) #24
  call void @_clear_bit(i32 noundef 1, ptr noundef %3) #24
  call fastcc void @_rtl8152_set_rx_mode(ptr noundef %34) #24
  call void @napi_enable(ptr noundef %35) #24
  %52 = load ptr, ptr %49, align 64
  call void @netif_tx_wake_queue(ptr noundef %52) #24
  %53 = getelementptr i8, ptr %0, i32 296
  %54 = load i32, ptr %53, align 4
  %55 = and i32 %54, 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %85, label %57

57:                                               ; preds = %45
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %34, ptr noundef nonnull @.str.29) #25
  br label %85

58:                                               ; preds = %44
  %59 = getelementptr inbounds %struct.net_device, ptr %34, i32 0, i32 87
  %60 = load ptr, ptr %59, align 64
  %61 = getelementptr inbounds %struct.netdev_queue, ptr %60, i32 0, i32 12
  %62 = load volatile i32, ptr %61, align 4
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %58
  %66 = getelementptr i8, ptr %0, i32 -32
  %67 = load i32, ptr %66, align 4
  %68 = getelementptr i8, ptr %0, i32 300
  %69 = load i32, ptr %68, align 8
  %70 = icmp ult i32 %67, %69
  br i1 %70, label %71, label %85

71:                                               ; preds = %65
  call void @netif_tx_wake_queue(ptr noundef %60) #24
  br label %85

72:                                               ; preds = %33
  br i1 %43, label %73, label %85

73:                                               ; preds = %72
  call void @netif_carrier_off(ptr noundef %34) #24
  %74 = getelementptr i8, ptr %0, i32 152
  %75 = getelementptr i8, ptr %0, i32 160
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %75) #24, !srcloc !9
  %76 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %75, ptr %75, i32 1, ptr elementtype(i32) %75) #24, !srcloc !10
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !11
  call void @tasklet_unlock_wait(ptr noundef %74) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !12
  call void @napi_disable(ptr noundef %35) #24
  %77 = getelementptr i8, ptr %0, i32 184
  %78 = load ptr, ptr %77, align 4
  call void %78(ptr noundef %3) #24
  call void @napi_enable(ptr noundef %35) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !16
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %75) #24, !srcloc !9
  %79 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %75, ptr %75, i32 1, ptr elementtype(i32) %75) #24, !srcloc !17
  %80 = getelementptr i8, ptr %0, i32 296
  %81 = load i32, ptr %80, align 4
  %82 = and i32 %81, 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %73
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %34, ptr noundef nonnull @.str.30) #25
  br label %85

85:                                               ; preds = %84, %73, %72, %71, %65, %58, %57, %45, %30
  %86 = call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %3) #24
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = load ptr, ptr %8, align 4
  call fastcc void @_rtl8152_set_rx_mode(ptr noundef %89)
  br label %90

90:                                               ; preds = %88, %85
  %91 = call i32 @_test_and_clear_bit(i32 noundef 6, ptr noundef %3) #24
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %90
  %94 = load ptr, ptr %8, align 4
  %95 = getelementptr inbounds %struct.net_device, ptr %94, i32 0, i32 6
  %96 = load volatile i32, ptr %95, align 4
  %97 = and i32 %96, 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = getelementptr i8, ptr %0, i32 152
  call fastcc void @tasklet_schedule(ptr noundef %100)
  br label %101

101:                                              ; preds = %99, %93, %90
  %102 = call i32 @_test_and_clear_bit(i32 noundef 8, ptr noundef %3) #24
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %101
  %105 = getelementptr i8, ptr %0, i32 -56
  %106 = load volatile ptr, ptr %105, align 4
  %107 = icmp eq ptr %106, %105
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = getelementptr i8, ptr %0, i32 -428
  %110 = call zeroext i1 @napi_schedule_prep(ptr noundef %109) #24
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @__napi_schedule(ptr noundef %109) #24
  br label %112

112:                                              ; preds = %111, %108, %104, %101
  call void @mutex_unlock(ptr noundef %24) #24
  br label %113

113:                                              ; preds = %112, %27, %19
  %114 = load ptr, ptr %15, align 8
  call void @usb_autopm_put_interface(ptr noundef %114) #24
  br label %115

115:                                              ; preds = %113, %14, %7, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl_hw_phy_work_func_t(ptr noundef %0) #0 {
  %2 = alloca [32 x i8], align 1
  %3 = alloca i32, align 4
  %4 = getelementptr i8, ptr %0, i32 -480
  %5 = load volatile i32, ptr %4, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %599

8:                                                ; preds = %1
  %9 = getelementptr i8, ptr %0, i32 -256
  %10 = load ptr, ptr %9, align 8
  %11 = tail call i32 @usb_autopm_get_interface(ptr noundef %10) #24
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %599, label %13

13:                                               ; preds = %8
  %14 = getelementptr i8, ptr %0, i32 76
  tail call void @mutex_lock(ptr noundef %14) #24
  %15 = getelementptr i8, ptr %0, i32 184
  %16 = getelementptr i8, ptr %0, i32 188
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = load ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %19, %13
  %23 = load ptr, ptr %9, align 8
  %24 = getelementptr inbounds %struct.usb_interface, ptr %23, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %24, ptr noundef nonnull @.str.35) #25
  br label %584

25:                                               ; preds = %19
  %26 = load ptr, ptr %9, align 8
  %27 = getelementptr inbounds %struct.usb_interface, ptr %26, i32 0, i32 7
  %28 = tail call i32 @request_firmware(ptr noundef %16, ptr noundef nonnull %20, ptr noundef %27) #24
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %570, label %30

30:                                               ; preds = %25
  %31 = load ptr, ptr %16, align 4
  %32 = getelementptr inbounds %struct.firmware, ptr %31, i32 0, i32 1
  %33 = load ptr, ptr %32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3)
  store i32 0, ptr %3, align 4
  %34 = load i32, ptr %31, align 4
  %35 = icmp ult i32 %34, 64
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = load ptr, ptr %9, align 8
  %38 = getelementptr inbounds %struct.usb_interface, ptr %37, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %38, ptr noundef nonnull @.str.37) #25
  br label %563

39:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #24
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(32) %2, i8 0, i32 32, i1 false) #24, !annotation !8
  %40 = tail call ptr @crypto_alloc_shash(ptr noundef nonnull @.str.73, i32 noundef 0, i32 noundef 0) #24
  %41 = icmp ugt ptr %40, inttoptr (i32 -4096 to ptr)
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = ptrtoint ptr %40 to i32
  br label %72

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.crypto_shash, ptr %40, i32 0, i32 2, i32 3
  %46 = load ptr, ptr %45, align 4
  %47 = getelementptr i8, ptr %46, i32 -64
  %48 = load i32, ptr %47, align 64
  %49 = icmp eq i32 %48, 32
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = load ptr, ptr %9, align 8
  %52 = getelementptr inbounds %struct.usb_interface, ptr %51, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %52, ptr noundef nonnull @.str.74, i32 noundef %48) #25
  br label %69

53:                                               ; preds = %44
  %54 = load i32, ptr %40, align 64
  %55 = add i32 %54, 8
  %56 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %55, i32 noundef 3264) #26
  %57 = icmp eq ptr %56, null
  br i1 %57, label %69, label %58

58:                                               ; preds = %53
  store ptr %40, ptr %56, align 64
  %59 = add i32 %34, -32
  %60 = getelementptr inbounds %struct.fw_header, ptr %33, i32 0, i32 1
  %61 = call i32 @crypto_shash_digest(ptr noundef nonnull %56, ptr noundef %60, i32 noundef %59, ptr noundef nonnull %2) #24
  call void @kfree(ptr noundef nonnull %56) #24
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %58
  %64 = call i32 @bcmp(ptr noundef dereferenceable(32) %33, ptr noundef nonnull dereferenceable(32) %2, i32 32) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = load ptr, ptr %9, align 8
  %68 = getelementptr inbounds %struct.usb_interface, ptr %67, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %68, ptr noundef nonnull @.str.75) #25
  br label %69

69:                                               ; preds = %66, %63, %58, %53, %50
  %70 = phi i32 [ -14, %50 ], [ %61, %58 ], [ -14, %66 ], [ 0, %63 ], [ -12, %53 ]
  %71 = getelementptr inbounds %struct.crypto_shash, ptr %40, i32 0, i32 2
  call void @crypto_destroy_tfm(ptr noundef %40, ptr noundef %71) #24
  br label %72

72:                                               ; preds = %69, %42
  %73 = phi i32 [ %43, %42 ], [ %70, %69 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #24
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %565

75:                                               ; preds = %72
  %76 = load i32, ptr %31, align 4
  %77 = icmp ugt i32 %76, 64
  br i1 %77, label %78, label %552

78:                                               ; preds = %75
  %79 = getelementptr i8, ptr %0, i32 320
  br label %80

80:                                               ; preds = %544, %78
  %81 = phi i32 [ %76, %78 ], [ %550, %544 ]
  %82 = phi i32 [ 64, %78 ], [ %549, %544 ]
  %83 = load ptr, ptr %32, align 4
  %84 = getelementptr i8, ptr %83, i32 %82
  %85 = add i32 %82, 8
  %86 = icmp ugt i32 %85, %81
  br i1 %86, label %563, label %87

87:                                               ; preds = %80
  %88 = load i32, ptr %84, align 1
  switch i32 %88, label %541 [
    i32 0, label %89
    i32 1, label %93
    i32 2, label %108
    i32 3, label %123
    i32 4, label %163
    i32 5, label %183
    i32 7, label %253
    i32 8, label %295
    i32 9, label %333
    i32 10, label %367
    i32 11, label %397
    i32 12, label %423
    i32 6, label %428
    i32 13, label %449
    i32 14, label %484
  ]

89:                                               ; preds = %87
  %90 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %91 = load i32, ptr %90, align 1
  %92 = icmp eq i32 %91, 8
  br i1 %92, label %552, label %563

93:                                               ; preds = %87
  %94 = load volatile i32, ptr %3, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = load ptr, ptr %9, align 8
  %99 = getelementptr inbounds %struct.usb_interface, ptr %98, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %99, ptr noundef nonnull @.str.38) #25
  br label %563

100:                                              ; preds = %93
  %101 = call fastcc zeroext i1 @rtl8152_is_fw_mac_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %101, label %105, label %102

102:                                              ; preds = %100
  %103 = load ptr, ptr %9, align 8
  %104 = getelementptr inbounds %struct.usb_interface, ptr %103, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %104, ptr noundef nonnull @.str.39) #25
  br label %563

105:                                              ; preds = %100
  %106 = load i32, ptr %3, align 4
  %107 = or i32 %106, 2
  store i32 %107, ptr %3, align 4
  br label %544

108:                                              ; preds = %87
  %109 = load volatile i32, ptr %3, align 4
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  %113 = load ptr, ptr %9, align 8
  %114 = getelementptr inbounds %struct.usb_interface, ptr %113, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %114, ptr noundef nonnull @.str.40) #25
  br label %563

115:                                              ; preds = %108
  %116 = call fastcc zeroext i1 @rtl8152_is_fw_mac_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %116, label %120, label %117

117:                                              ; preds = %115
  %118 = load ptr, ptr %9, align 8
  %119 = getelementptr inbounds %struct.usb_interface, ptr %118, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %119, ptr noundef nonnull @.str.41) #25
  br label %563

120:                                              ; preds = %115
  %121 = load i32, ptr %3, align 4
  %122 = or i32 %121, 1
  store i32 %122, ptr %3, align 4
  br label %544

123:                                              ; preds = %87
  %124 = load volatile i32, ptr %3, align 4
  %125 = and i32 %124, 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %151

127:                                              ; preds = %123
  %128 = load volatile i32, ptr %3, align 4
  %129 = and i32 %128, 16
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %151

131:                                              ; preds = %127
  %132 = load volatile i32, ptr %3, align 4
  %133 = and i32 %132, 32
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %151

135:                                              ; preds = %131
  %136 = load volatile i32, ptr %3, align 4
  %137 = and i32 %136, 64
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %135
  %140 = load volatile i32, ptr %3, align 4
  %141 = and i32 %140, 128
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = load volatile i32, ptr %3, align 4
  %145 = and i32 %144, 256
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = load volatile i32, ptr %3, align 4
  %149 = and i32 %148, 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %147, %143, %139, %135, %131, %127, %123
  %152 = load ptr, ptr %9, align 8
  %153 = getelementptr inbounds %struct.usb_interface, ptr %152, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %153, ptr noundef nonnull @.str.42) #25
  br label %563

154:                                              ; preds = %147
  %155 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %156 = load i32, ptr %155, align 1
  %157 = icmp eq i32 %156, 16
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = load ptr, ptr %9, align 8
  %160 = getelementptr inbounds %struct.usb_interface, ptr %159, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %160, ptr noundef nonnull @.str.43) #25
  br label %563

161:                                              ; preds = %154
  %162 = or i32 %148, 4
  store i32 %162, ptr %3, align 4
  br label %544

163:                                              ; preds = %87
  %164 = load volatile i32, ptr %3, align 4
  %165 = and i32 %164, 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %163
  %168 = load volatile i32, ptr %3, align 4
  %169 = and i32 %168, 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %167, %163
  %172 = load ptr, ptr %9, align 8
  %173 = getelementptr inbounds %struct.usb_interface, ptr %172, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %173, ptr noundef nonnull @.str.44) #25
  br label %563

174:                                              ; preds = %167
  %175 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %176 = load i32, ptr %175, align 1
  %177 = icmp eq i32 %176, 8
  br i1 %177, label %181, label %178

178:                                              ; preds = %174
  %179 = load ptr, ptr %9, align 8
  %180 = getelementptr inbounds %struct.usb_interface, ptr %179, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %180, ptr noundef nonnull @.str.45) #25
  br label %563

181:                                              ; preds = %174
  %182 = or i32 %168, 8
  store i32 %182, ptr %3, align 4
  br label %544

183:                                              ; preds = %87
  %184 = load volatile i32, ptr %3, align 4
  %185 = and i32 %184, 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %183
  %188 = load volatile i32, ptr %3, align 4
  %189 = and i32 %188, 8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %187, %183
  %192 = load ptr, ptr %9, align 8
  %193 = getelementptr inbounds %struct.usb_interface, ptr %192, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %193, ptr noundef nonnull @.str.46) #25
  br label %563

194:                                              ; preds = %187
  %195 = load volatile i32, ptr %3, align 4
  %196 = and i32 %195, 16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = load ptr, ptr %9, align 8
  %200 = getelementptr inbounds %struct.usb_interface, ptr %199, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %200, ptr noundef nonnull @.str.47) #25
  br label %563

201:                                              ; preds = %194
  %202 = load i8, ptr %79, align 8
  %203 = add i8 %202, -4
  %204 = icmp ult i8 %203, 3
  br i1 %204, label %205, label %248

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.fw_phy_nc, ptr %84, i32 0, i32 1
  %207 = load i16, ptr %206, align 1
  %208 = zext i16 %207 to i32
  %209 = icmp ult i16 %207, 40
  br i1 %209, label %244, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %212 = load i32, ptr %211, align 1
  %213 = icmp ult i32 %212, %208
  br i1 %213, label %244, label %214

214:                                              ; preds = %210
  %215 = icmp eq i32 %212, %208
  br i1 %215, label %244, label %216

216:                                              ; preds = %214
  %217 = sub i32 %212, %208
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %244

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.fw_phy_nc, ptr %84, i32 0, i32 2
  %222 = load i16, ptr %221, align 1
  %223 = icmp eq i16 %222, -24556
  br i1 %223, label %224, label %244

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.fw_phy_nc, ptr %84, i32 0, i32 3
  %226 = load i16, ptr %225, align 1
  %227 = icmp eq i16 %226, -24558
  br i1 %227, label %228, label %244

228:                                              ; preds = %224
  %229 = getelementptr inbounds %struct.fw_phy_nc, ptr %84, i32 0, i32 5
  %230 = load i16, ptr %229, align 1
  %231 = icmp eq i16 %230, -24550
  br i1 %231, label %232, label %244

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.fw_phy_nc, ptr %84, i32 0, i32 7
  %234 = load i16, ptr %233, align 1
  %235 = icmp eq i16 %234, -18400
  br i1 %235, label %236, label %244

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.fw_phy_nc, ptr %84, i32 0, i32 11
  %238 = load i16, ptr %237, align 1
  %239 = icmp eq i16 %238, -24576
  br i1 %239, label %240, label %244

240:                                              ; preds = %236
  %241 = getelementptr inbounds %struct.fw_phy_nc, ptr %84, i32 0, i32 12
  %242 = load i16, ptr %241, align 1
  %243 = icmp ugt i16 %242, 4
  br i1 %243, label %244, label %251

244:                                              ; preds = %240, %236, %232, %228, %224, %220, %216, %214, %210, %205
  %245 = phi ptr [ @.str.76, %205 ], [ @.str.77, %210 ], [ @.str.78, %214 ], [ @.str.78, %216 ], [ @.str.79, %220 ], [ @.str.80, %224 ], [ @.str.85, %228 ], [ @.str.86, %232 ], [ @.str.82, %236 ], [ @.str.83, %240 ]
  %246 = load ptr, ptr %9, align 8
  %247 = getelementptr inbounds %struct.usb_interface, ptr %246, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %247, ptr noundef nonnull %245) #25
  br label %248

248:                                              ; preds = %244, %201
  %249 = load ptr, ptr %9, align 8
  %250 = getelementptr inbounds %struct.usb_interface, ptr %249, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %250, ptr noundef nonnull @.str.48) #25
  br label %563

251:                                              ; preds = %240
  %252 = or i32 %195, 16
  store i32 %252, ptr %3, align 4
  br label %544

253:                                              ; preds = %87
  %254 = load volatile i32, ptr %3, align 4
  %255 = and i32 %254, 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %277, label %257

257:                                              ; preds = %253
  %258 = load volatile i32, ptr %3, align 4
  %259 = and i32 %258, 32
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %277

261:                                              ; preds = %257
  %262 = load volatile i32, ptr %3, align 4
  %263 = and i32 %262, 64
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %277

265:                                              ; preds = %261
  %266 = load volatile i32, ptr %3, align 4
  %267 = and i32 %266, 128
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %277

269:                                              ; preds = %265
  %270 = load volatile i32, ptr %3, align 4
  %271 = and i32 %270, 256
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %277

273:                                              ; preds = %269
  %274 = load volatile i32, ptr %3, align 4
  %275 = and i32 %274, 8
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %280, label %277

277:                                              ; preds = %273, %269, %265, %261, %257, %253
  %278 = load ptr, ptr %9, align 8
  %279 = getelementptr inbounds %struct.usb_interface, ptr %278, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %279, ptr noundef nonnull @.str.49) #25
  br label %563

280:                                              ; preds = %273
  %281 = load volatile i32, ptr %3, align 4
  %282 = and i32 %281, 16
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %280
  %285 = load ptr, ptr %9, align 8
  %286 = getelementptr inbounds %struct.usb_interface, ptr %285, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %286, ptr noundef nonnull @.str.50) #25
  br label %563

287:                                              ; preds = %280
  %288 = call fastcc zeroext i1 @rtl8152_is_fw_phy_union_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %288, label %292, label %289

289:                                              ; preds = %287
  %290 = load ptr, ptr %9, align 8
  %291 = getelementptr inbounds %struct.usb_interface, ptr %290, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %291, ptr noundef nonnull @.str.51) #25
  br label %563

292:                                              ; preds = %287
  %293 = load i32, ptr %3, align 4
  %294 = or i32 %293, 16
  store i32 %294, ptr %3, align 4
  br label %544

295:                                              ; preds = %87
  %296 = load volatile i32, ptr %3, align 4
  %297 = and i32 %296, 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %295
  %300 = load volatile i32, ptr %3, align 4
  %301 = and i32 %300, 64
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %315

303:                                              ; preds = %299
  %304 = load volatile i32, ptr %3, align 4
  %305 = and i32 %304, 128
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %315

307:                                              ; preds = %303
  %308 = load volatile i32, ptr %3, align 4
  %309 = and i32 %308, 256
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %315

311:                                              ; preds = %307
  %312 = load volatile i32, ptr %3, align 4
  %313 = and i32 %312, 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %318, label %315

315:                                              ; preds = %311, %307, %303, %299, %295
  %316 = load ptr, ptr %9, align 8
  %317 = getelementptr inbounds %struct.usb_interface, ptr %316, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %317, ptr noundef nonnull @.str.52) #25
  br label %563

318:                                              ; preds = %311
  %319 = load volatile i32, ptr %3, align 4
  %320 = and i32 %319, 32
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %318
  %323 = load ptr, ptr %9, align 8
  %324 = getelementptr inbounds %struct.usb_interface, ptr %323, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %324, ptr noundef nonnull @.str.53) #25
  br label %563

325:                                              ; preds = %318
  %326 = call fastcc zeroext i1 @rtl8152_is_fw_phy_union_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %326, label %330, label %327

327:                                              ; preds = %325
  %328 = load ptr, ptr %9, align 8
  %329 = getelementptr inbounds %struct.usb_interface, ptr %328, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %329, ptr noundef nonnull @.str.54) #25
  br label %563

330:                                              ; preds = %325
  %331 = load i32, ptr %3, align 4
  %332 = or i32 %331, 32
  store i32 %332, ptr %3, align 4
  br label %544

333:                                              ; preds = %87
  %334 = load volatile i32, ptr %3, align 4
  %335 = and i32 %334, 4
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %349, label %337

337:                                              ; preds = %333
  %338 = load volatile i32, ptr %3, align 4
  %339 = and i32 %338, 128
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %349

341:                                              ; preds = %337
  %342 = load volatile i32, ptr %3, align 4
  %343 = and i32 %342, 256
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %349

345:                                              ; preds = %341
  %346 = load volatile i32, ptr %3, align 4
  %347 = and i32 %346, 8
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %352, label %349

349:                                              ; preds = %345, %341, %337, %333
  %350 = load ptr, ptr %9, align 8
  %351 = getelementptr inbounds %struct.usb_interface, ptr %350, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %351, ptr noundef nonnull @.str.55) #25
  br label %563

352:                                              ; preds = %345
  %353 = load volatile i32, ptr %3, align 4
  %354 = and i32 %353, 64
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %359, label %356

356:                                              ; preds = %352
  %357 = load ptr, ptr %9, align 8
  %358 = getelementptr inbounds %struct.usb_interface, ptr %357, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %358, ptr noundef nonnull @.str.56) #25
  br label %563

359:                                              ; preds = %352
  %360 = call fastcc zeroext i1 @rtl8152_is_fw_phy_union_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %360, label %364, label %361

361:                                              ; preds = %359
  %362 = load ptr, ptr %9, align 8
  %363 = getelementptr inbounds %struct.usb_interface, ptr %362, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %363, ptr noundef nonnull @.str.57) #25
  br label %563

364:                                              ; preds = %359
  %365 = load i32, ptr %3, align 4
  %366 = or i32 %365, 64
  store i32 %366, ptr %3, align 4
  br label %544

367:                                              ; preds = %87
  %368 = load volatile i32, ptr %3, align 4
  %369 = and i32 %368, 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %379, label %371

371:                                              ; preds = %367
  %372 = load volatile i32, ptr %3, align 4
  %373 = and i32 %372, 256
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %379

375:                                              ; preds = %371
  %376 = load volatile i32, ptr %3, align 4
  %377 = and i32 %376, 8
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %375, %371, %367
  %380 = load ptr, ptr %9, align 8
  %381 = getelementptr inbounds %struct.usb_interface, ptr %380, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %381, ptr noundef nonnull @.str.58) #25
  br label %563

382:                                              ; preds = %375
  %383 = load volatile i32, ptr %3, align 4
  %384 = and i32 %383, 128
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %389, label %386

386:                                              ; preds = %382
  %387 = load ptr, ptr %9, align 8
  %388 = getelementptr inbounds %struct.usb_interface, ptr %387, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %388, ptr noundef nonnull @.str.59) #25
  br label %563

389:                                              ; preds = %382
  %390 = call fastcc zeroext i1 @rtl8152_is_fw_phy_union_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %390, label %394, label %391

391:                                              ; preds = %389
  %392 = load ptr, ptr %9, align 8
  %393 = getelementptr inbounds %struct.usb_interface, ptr %392, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %393, ptr noundef nonnull @.str.60) #25
  br label %563

394:                                              ; preds = %389
  %395 = load i32, ptr %3, align 4
  %396 = or i32 %395, 128
  store i32 %396, ptr %3, align 4
  br label %544

397:                                              ; preds = %87
  %398 = load volatile i32, ptr %3, align 4
  %399 = and i32 %398, 4
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %405, label %401

401:                                              ; preds = %397
  %402 = load volatile i32, ptr %3, align 4
  %403 = and i32 %402, 8
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %408, label %405

405:                                              ; preds = %401, %397
  %406 = load ptr, ptr %9, align 8
  %407 = getelementptr inbounds %struct.usb_interface, ptr %406, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %407, ptr noundef nonnull @.str.61) #25
  br label %563

408:                                              ; preds = %401
  %409 = load volatile i32, ptr %3, align 4
  %410 = and i32 %409, 256
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %415, label %412

412:                                              ; preds = %408
  %413 = load ptr, ptr %9, align 8
  %414 = getelementptr inbounds %struct.usb_interface, ptr %413, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %414, ptr noundef nonnull @.str.62) #25
  br label %563

415:                                              ; preds = %408
  %416 = call fastcc zeroext i1 @rtl8152_is_fw_phy_union_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %416, label %420, label %417

417:                                              ; preds = %415
  %418 = load ptr, ptr %9, align 8
  %419 = getelementptr inbounds %struct.usb_interface, ptr %418, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %419, ptr noundef nonnull @.str.63) #25
  br label %563

420:                                              ; preds = %415
  %421 = load i32, ptr %3, align 4
  %422 = or i32 %421, 256
  store i32 %422, ptr %3, align 4
  br label %544

423:                                              ; preds = %87
  %424 = call fastcc zeroext i1 @rtl8152_is_fw_phy_union_ok(ptr noundef %4, ptr noundef %84) #24
  br i1 %424, label %544, label %425

425:                                              ; preds = %423
  %426 = load ptr, ptr %9, align 8
  %427 = getelementptr inbounds %struct.usb_interface, ptr %426, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %427, ptr noundef nonnull @.str.64) #25
  br label %563

428:                                              ; preds = %87
  %429 = load i8, ptr %79, align 8
  switch i8 %429, label %446 [
    i8 11, label %430
    i8 12, label %430
    i8 13, label %430
    i8 14, label %430
    i8 16, label %430
  ]

430:                                              ; preds = %428, %428, %428, %428, %428
  %431 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %432 = load i32, ptr %431, align 1
  %433 = icmp eq i32 %432, 16
  br i1 %433, label %434, label %442

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.fw_phy_fixup, ptr %84, i32 0, i32 1
  %436 = load i16, ptr %435, align 1
  %437 = icmp eq i16 %436, -18400
  br i1 %437, label %438, label %442

438:                                              ; preds = %434
  %439 = getelementptr inbounds %struct.fw_phy_fixup, ptr %84, i32 0, i32 1, i32 1
  %440 = load i16, ptr %439, align 1
  %441 = icmp eq i16 %440, 128
  br i1 %441, label %544, label %442

442:                                              ; preds = %438, %434, %430
  %443 = phi ptr [ @.str.78, %430 ], [ @.str.89, %434 ], [ @.str.89, %438 ]
  %444 = load ptr, ptr %9, align 8
  %445 = getelementptr inbounds %struct.usb_interface, ptr %444, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %445, ptr noundef nonnull %443) #25
  br label %446

446:                                              ; preds = %442, %428
  %447 = load ptr, ptr %9, align 8
  %448 = getelementptr inbounds %struct.usb_interface, ptr %447, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %448, ptr noundef nonnull @.str.65) #25
  br label %563

449:                                              ; preds = %87
  %450 = load volatile i32, ptr %3, align 4
  %451 = and i32 %450, 512
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %456, label %453

453:                                              ; preds = %449
  %454 = load ptr, ptr %9, align 8
  %455 = getelementptr inbounds %struct.usb_interface, ptr %454, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %455, ptr noundef nonnull @.str.66) #25
  br label %563

456:                                              ; preds = %449
  %457 = load i8, ptr %79, align 8
  switch i8 %457, label %458 [
    i8 1, label %479
    i8 2, label %479
    i8 3, label %479
    i8 4, label %479
    i8 5, label %479
    i8 6, label %479
    i8 7, label %479
    i8 8, label %479
    i8 9, label %479
    i8 11, label %479
    i8 12, label %479
    i8 13, label %479
    i8 15, label %479
  ]

458:                                              ; preds = %456
  %459 = getelementptr inbounds %struct.fw_phy_speed_up, ptr %84, i32 0, i32 1
  %460 = load i16, ptr %459, align 1
  %461 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %462 = load i32, ptr %461, align 1
  %463 = zext i16 %460 to i32
  %464 = icmp ugt i16 %460, 15
  %465 = icmp ugt i32 %462, %463
  %466 = select i1 %464, i1 %465, i1 false
  br i1 %466, label %467, label %475

467:                                              ; preds = %458
  %468 = sub i32 %462, %463
  %469 = and i32 %468, 3
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %475

471:                                              ; preds = %467
  %472 = getelementptr inbounds %struct.fw_phy_speed_up, ptr %84, i32 0, i32 3
  %473 = load i16, ptr %472, align 1
  %474 = icmp eq i16 %473, -26112
  br i1 %474, label %482, label %475

475:                                              ; preds = %471, %467, %458
  %476 = phi ptr [ @.str.77, %458 ], [ @.str.78, %467 ], [ @.str.79, %471 ]
  %477 = load ptr, ptr %9, align 8
  %478 = getelementptr inbounds %struct.usb_interface, ptr %477, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %478, ptr noundef nonnull %476) #25
  br label %479

479:                                              ; preds = %475, %456, %456, %456, %456, %456, %456, %456, %456, %456, %456, %456, %456, %456
  %480 = load ptr, ptr %9, align 8
  %481 = getelementptr inbounds %struct.usb_interface, ptr %480, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %481, ptr noundef nonnull @.str.67) #25
  br label %563

482:                                              ; preds = %471
  %483 = or i32 %450, 512
  store i32 %483, ptr %3, align 4
  br label %544

484:                                              ; preds = %87
  %485 = load volatile i32, ptr %3, align 4
  %486 = and i32 %485, 4
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %512

488:                                              ; preds = %484
  %489 = load volatile i32, ptr %3, align 4
  %490 = and i32 %489, 16
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %512

492:                                              ; preds = %488
  %493 = load volatile i32, ptr %3, align 4
  %494 = and i32 %493, 32
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %512

496:                                              ; preds = %492
  %497 = load volatile i32, ptr %3, align 4
  %498 = and i32 %497, 64
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %512

500:                                              ; preds = %496
  %501 = load volatile i32, ptr %3, align 4
  %502 = and i32 %501, 128
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %512

504:                                              ; preds = %500
  %505 = load volatile i32, ptr %3, align 4
  %506 = and i32 %505, 256
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %512

508:                                              ; preds = %504
  %509 = load volatile i32, ptr %3, align 4
  %510 = and i32 %509, 8
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %515, label %512

512:                                              ; preds = %508, %504, %500, %496, %492, %488, %484
  %513 = load ptr, ptr %9, align 8
  %514 = getelementptr inbounds %struct.usb_interface, ptr %513, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %514, ptr noundef nonnull @.str.68) #25
  br label %563

515:                                              ; preds = %508
  %516 = load volatile i32, ptr %3, align 4
  %517 = and i32 %516, 1024
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %522, label %519

519:                                              ; preds = %515
  %520 = load ptr, ptr %9, align 8
  %521 = getelementptr inbounds %struct.usb_interface, ptr %520, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %521, ptr noundef nonnull @.str.69) #25
  br label %563

522:                                              ; preds = %515
  %523 = load i8, ptr %79, align 8
  switch i8 %523, label %536 [
    i8 11, label %524
    i8 12, label %524
    i8 13, label %524
    i8 14, label %524
    i8 16, label %524
  ]

524:                                              ; preds = %522, %522, %522, %522, %522
  %525 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %526 = load i32, ptr %525, align 1
  %527 = icmp eq i32 %526, 16
  br i1 %527, label %528, label %532

528:                                              ; preds = %524
  %529 = getelementptr inbounds %struct.fw_phy_ver, ptr %84, i32 0, i32 1
  %530 = load i16, ptr %529, align 1
  %531 = icmp eq i16 %530, -32738
  br i1 %531, label %539, label %532

532:                                              ; preds = %528, %524
  %533 = phi ptr [ @.str.78, %524 ], [ @.str.90, %528 ]
  %534 = load ptr, ptr %9, align 8
  %535 = getelementptr inbounds %struct.usb_interface, ptr %534, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %535, ptr noundef nonnull %533) #25
  br label %536

536:                                              ; preds = %532, %522
  %537 = load ptr, ptr %9, align 8
  %538 = getelementptr inbounds %struct.usb_interface, ptr %537, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %538, ptr noundef nonnull @.str.70) #25
  br label %563

539:                                              ; preds = %528
  %540 = or i32 %516, 1024
  store i32 %540, ptr %3, align 4
  br label %544

541:                                              ; preds = %87
  %542 = load ptr, ptr %9, align 8
  %543 = getelementptr inbounds %struct.usb_interface, ptr %542, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %543, ptr noundef nonnull @.str.71, i32 noundef %88) #25
  br label %544

544:                                              ; preds = %541, %539, %482, %438, %423, %420, %394, %364, %330, %292, %251, %181, %161, %120, %105
  %545 = getelementptr inbounds %struct.fw_block, ptr %84, i32 0, i32 1
  %546 = load i32, ptr %545, align 1
  %547 = add i32 %546, 7
  %548 = and i32 %547, -8
  %549 = add i32 %548, %82
  %550 = load i32, ptr %31, align 4
  %551 = icmp ult i32 %549, %550
  br i1 %551, label %80, label %552

552:                                              ; preds = %544, %89, %75
  %553 = load volatile i32, ptr %3, align 4
  %554 = and i32 %553, 4
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %564, label %556

556:                                              ; preds = %552
  %557 = load volatile i32, ptr %3, align 4
  %558 = and i32 %557, 8
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %564

560:                                              ; preds = %556
  %561 = load ptr, ptr %9, align 8
  %562 = getelementptr inbounds %struct.usb_interface, ptr %561, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %562, ptr noundef nonnull @.str.72) #25
  br label %563

563:                                              ; preds = %560, %536, %519, %512, %479, %453, %446, %425, %417, %412, %405, %391, %386, %379, %361, %356, %349, %327, %322, %315, %289, %284, %277, %248, %198, %191, %178, %171, %158, %151, %117, %112, %102, %97, %89, %80, %36
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3)
  br label %567

564:                                              ; preds = %556, %552
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3)
  br label %584

565:                                              ; preds = %72
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3)
  %566 = icmp slt i32 %73, 0
  br i1 %566, label %567, label %570

567:                                              ; preds = %565, %563
  %568 = phi i32 [ -14, %563 ], [ %73, %565 ]
  %569 = load ptr, ptr %16, align 4
  call void @release_firmware(ptr noundef %569) #24
  br label %570

570:                                              ; preds = %567, %565, %25
  %571 = phi i32 [ %73, %565 ], [ %568, %567 ], [ %28, %25 ]
  %572 = inttoptr i32 %571 to ptr
  store ptr %572, ptr %16, align 4
  %573 = load ptr, ptr %9, align 8
  %574 = getelementptr inbounds %struct.usb_interface, ptr %573, i32 0, i32 7
  %575 = load ptr, ptr %15, align 4
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %574, ptr noundef nonnull @.str.36, ptr noundef %575, i32 noundef %571) #25
  %576 = icmp eq i32 %571, -19
  br i1 %576, label %577, label %584

577:                                              ; preds = %570
  %578 = getelementptr i8, ptr %0, i32 232
  %579 = load i8, ptr %578, align 8, !range !18
  %580 = icmp eq i8 %579, 0
  br i1 %580, label %584, label %581

581:                                              ; preds = %577
  store i8 0, ptr %578, align 8
  store ptr null, ptr %16, align 4
  %582 = load ptr, ptr @system_long_wq, align 4
  %583 = call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %582, ptr noundef %0, i32 noundef 1000) #24
  br label %597

584:                                              ; preds = %577, %570, %564, %22
  %585 = getelementptr i8, ptr %0, i32 168
  %586 = load ptr, ptr %585, align 4
  call void %586(ptr noundef %4) #24
  %587 = getelementptr i8, ptr %0, i32 322
  %588 = load i8, ptr %587, align 2
  %589 = getelementptr i8, ptr %0, i32 312
  %590 = load i16, ptr %589, align 8
  %591 = zext i16 %590 to i32
  %592 = getelementptr i8, ptr %0, i32 321
  %593 = load i8, ptr %592, align 1
  %594 = getelementptr i8, ptr %0, i32 264
  %595 = load i32, ptr %594, align 8
  %596 = call fastcc i32 @rtl8152_set_speed(ptr noundef %4, i8 noundef zeroext %588, i32 noundef %591, i8 noundef zeroext %593, i32 noundef %595)
  br label %597

597:                                              ; preds = %584, %581
  call void @mutex_unlock(ptr noundef %14) #24
  %598 = load ptr, ptr %9, align 8
  call void @usb_autopm_put_interface(ptr noundef %598) #24
  br label %599

599:                                              ; preds = %597, %8, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tasklet_setup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @bottom_half(ptr noundef %0) #0 {
  %2 = alloca %struct.sk_buff_head, align 4
  %3 = alloca %struct.vlan_hdr, align 4
  %4 = alloca %struct.vlan_hdr, align 4
  %5 = alloca %struct.sk_buff_head, align 4
  %6 = getelementptr i8, ptr %0, i32 -588
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %504

10:                                               ; preds = %1
  %11 = load volatile i32, ptr %6, align 4
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %504, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %0, i32 -360
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 6
  %18 = load volatile i32, ptr %17, align 4
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %504

21:                                               ; preds = %14
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %6) #24
  %22 = getelementptr i8, ptr %0, i32 -192
  %23 = getelementptr i8, ptr %0, i32 -200
  %24 = getelementptr i8, ptr %0, i32 -156
  %25 = getelementptr inbounds i8, ptr %5, i32 12
  %26 = getelementptr inbounds %struct.anon.77, ptr %5, i32 0, i32 1
  %27 = getelementptr inbounds %struct.sk_buff_head, ptr %5, i32 0, i32 1
  %28 = getelementptr i8, ptr %0, i32 -180
  %29 = getelementptr i8, ptr %0, i32 -188
  %30 = getelementptr i8, ptr %0, i32 -184
  %31 = getelementptr i8, ptr %0, i32 144
  %32 = getelementptr i8, ptr %0, i32 200
  %33 = getelementptr inbounds i8, ptr %2, i32 12
  %34 = getelementptr inbounds %struct.anon.77, ptr %2, i32 0, i32 1
  %35 = getelementptr inbounds %struct.sk_buff_head, ptr %2, i32 0, i32 1
  %36 = getelementptr i8, ptr %0, i32 148
  %37 = getelementptr i8, ptr %0, i32 -364
  %38 = getelementptr i8, ptr %0, i32 -584
  %39 = getelementptr i8, ptr %0, i32 184
  br label %40

40:                                               ; preds = %481, %21
  %41 = load ptr, ptr %15, align 4
  %42 = load ptr, ptr %22, align 4
  %43 = icmp eq ptr %42, %22
  br i1 %43, label %504, label %44

44:                                               ; preds = %40
  %45 = load volatile ptr, ptr %23, align 4
  %46 = icmp eq ptr %45, %23
  br i1 %46, label %504, label %47

47:                                               ; preds = %44
  %48 = call i32 @_raw_spin_lock_irqsave(ptr noundef %24) #24
  %49 = load volatile ptr, ptr %23, align 4
  %50 = icmp eq ptr %49, %23
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  call void @_raw_spin_unlock_irqrestore(ptr noundef %24, i32 noundef %48) #24
  br label %504

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = load ptr, ptr %49, align 4
  %56 = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  store ptr %54, ptr %56, align 4
  store volatile ptr %55, ptr %54, align 4
  store volatile ptr %49, ptr %49, align 4
  store ptr %49, ptr %53, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %24, i32 noundef %48) #24
  %57 = icmp eq ptr %49, null
  br i1 %57, label %504, label %58

58:                                               ; preds = %52
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #24
  store i32 0, ptr %25, align 4, !annotation !8
  store ptr %5, ptr %5, align 4
  store ptr %5, ptr %26, align 4
  store i32 0, ptr %27, align 4
  call void @_raw_spin_lock(ptr noundef %28) #24
  %59 = load ptr, ptr %22, align 4
  %60 = icmp eq ptr %59, %22
  br i1 %60, label %69, label %61

61:                                               ; preds = %58
  %62 = load ptr, ptr %5, align 4
  %63 = load ptr, ptr %29, align 4
  %64 = getelementptr inbounds %struct.anon.49, ptr %59, i32 0, i32 1
  store volatile ptr %5, ptr %64, align 4
  store volatile ptr %59, ptr %5, align 8
  store volatile ptr %62, ptr %63, align 8
  %65 = getelementptr inbounds %struct.anon.49, ptr %62, i32 0, i32 1
  store volatile ptr %63, ptr %65, align 4
  %66 = load i32, ptr %30, align 4
  %67 = load i32, ptr %27, align 4
  %68 = add i32 %67, %66
  store i32 %68, ptr %27, align 4
  store ptr %22, ptr %22, align 4
  store ptr %22, ptr %29, align 4
  store i32 0, ptr %30, align 4
  br label %69

69:                                               ; preds = %61, %58
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !19
  %70 = load i16, ptr %28, align 4
  %71 = add i16 %70, 1
  store i16 %71, ptr %28, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #24, !srcloc !20
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #24, !srcloc !21
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !22
  %72 = getelementptr inbounds %struct.tx_agg, ptr %49, i32 0, i32 4
  %73 = load ptr, ptr %72, align 4
  %74 = getelementptr inbounds %struct.tx_agg, ptr %49, i32 0, i32 5
  store i32 0, ptr %74, align 4
  %75 = getelementptr inbounds %struct.tx_agg, ptr %49, i32 0, i32 6
  store i32 0, ptr %75, align 4
  br label %76

76:                                               ; preds = %416, %69
  %77 = phi ptr [ %73, %69 ], [ %418, %416 ]
  %78 = phi i32 [ 16384, %69 ], [ %417, %416 ]
  %79 = load ptr, ptr %5, align 4
  %80 = icmp eq ptr %79, %5
  %81 = icmp eq ptr %79, null
  %82 = or i1 %80, %81
  br i1 %82, label %420, label %83

83:                                               ; preds = %76
  %84 = load i32, ptr %27, align 4
  %85 = add i32 %84, -1
  store volatile i32 %85, ptr %27, align 4
  %86 = load ptr, ptr %79, align 8
  %87 = getelementptr inbounds %struct.anon.49, ptr %79, i32 0, i32 1
  %88 = load ptr, ptr %87, align 4
  store ptr null, ptr %87, align 4
  store ptr null, ptr %79, align 8
  %89 = getelementptr inbounds %struct.anon.49, ptr %86, i32 0, i32 1
  store volatile ptr %88, ptr %89, align 4
  store volatile ptr %86, ptr %88, align 8
  %90 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 5
  %91 = load i32, ptr %90, align 8
  %92 = add i32 %91, 8
  %93 = icmp ugt i32 %92, %78
  br i1 %93, label %94, label %99

94:                                               ; preds = %83
  %95 = load ptr, ptr %5, align 4
  store volatile ptr %95, ptr %79, align 8
  store volatile ptr %5, ptr %87, align 4
  %96 = getelementptr inbounds %struct.sk_buff_list, ptr %95, i32 0, i32 1
  store volatile ptr %79, ptr %96, align 4
  store volatile ptr %79, ptr %5, align 4
  %97 = load i32, ptr %27, align 4
  %98 = add i32 %97, 1
  store volatile i32 %98, ptr %27, align 4
  br label %423

99:                                               ; preds = %83
  %100 = ptrtoint ptr %77 to i32
  %101 = add i32 %100, 3
  %102 = and i32 %101, -4
  %103 = inttoptr i32 %102 to ptr
  %104 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 16
  %105 = load ptr, ptr %104, align 8
  %106 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 17
  %107 = load i16, ptr %106, align 2
  %108 = zext i16 %107 to i32
  %109 = getelementptr i8, ptr %105, i32 %108
  %110 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 17
  %111 = load ptr, ptr %110, align 4
  %112 = ptrtoint ptr %109 to i32
  %113 = ptrtoint ptr %111 to i32
  %114 = sub i32 %112, %113
  %115 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 15
  %116 = load ptr, ptr %115, align 4
  %117 = getelementptr inbounds %struct.skb_shared_info, ptr %116, i32 0, i32 4
  %118 = load i16, ptr %117, align 4
  %119 = icmp ugt i32 %91, 262143
  %120 = load i1, ptr @r8152_tx_csum.__already_done, align 1
  %121 = xor i1 %120, true
  %122 = select i1 %119, i1 %121, i1 false
  br i1 %122, label %123, label %124, !prof !23

123:                                              ; preds = %99
  store i1 true, ptr @r8152_tx_csum.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 2163, i32 noundef 9, ptr noundef null) #24
  br label %124

124:                                              ; preds = %123, %99
  %125 = or i32 %91, -1073741824
  %126 = icmp eq i16 %118, 0
  br i1 %126, label %226, label %127

127:                                              ; preds = %124
  %128 = icmp ugt i32 %114, 127
  br i1 %128, label %129, label %133

129:                                              ; preds = %127
  %130 = load i32, ptr %31, align 4
  %131 = and i32 %130, 128
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %315, label %312

133:                                              ; preds = %127
  %134 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 16
  %135 = load i16, ptr %134, align 8
  %136 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 7
  %137 = load i16, ptr %136, align 8
  %138 = zext i16 %137 to i32
  switch i16 %135, label %176 [
    i16 -22392, label %139
    i16 129, label %139
  ]

139:                                              ; preds = %133, %133
  %140 = icmp eq i16 %137, 0
  br i1 %140, label %146, label %141

141:                                              ; preds = %139
  %142 = icmp ult i16 %137, 4
  br i1 %142, label %143, label %144, !prof !23

143:                                              ; preds = %141
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.96, i32 noundef 598, i32 noundef 9, ptr noundef null) #24
  br label %216

144:                                              ; preds = %141
  %145 = add nsw i32 %138, -4
  br label %146

146:                                              ; preds = %144, %139
  %147 = phi i32 [ %145, %144 ], [ 14, %139 ]
  %148 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 6
  br label %149

149:                                              ; preds = %174, %146
  %150 = phi i32 [ %147, %146 ], [ %175, %174 ]
  %151 = phi i32 [ 8, %146 ], [ %167, %174 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %152 = load i32, ptr %90, align 8
  %153 = load i32, ptr %148, align 4
  %154 = add i32 %150, %153
  %155 = sub i32 %152, %154
  %156 = icmp sgt i32 %155, 3
  br i1 %156, label %157, label %160, !prof !24

157:                                              ; preds = %149
  %158 = load ptr, ptr %110, align 4
  %159 = getelementptr i8, ptr %158, i32 %150
  br label %164

160:                                              ; preds = %149
  %161 = call i32 @skb_copy_bits(ptr noundef nonnull %79, i32 noundef %150, ptr noundef nonnull %4, i32 noundef 4) #24
  %162 = icmp slt i32 %161, 0
  %163 = select i1 %162, ptr null, ptr %4, !prof !23
  br label %164

164:                                              ; preds = %160, %157
  %165 = phi ptr [ %159, %157 ], [ %163, %160 ]
  %166 = icmp eq ptr %165, null
  %167 = add nsw i32 %151, -1
  %168 = icmp eq i32 %167, 0
  %169 = select i1 %166, i1 true, i1 %168, !prof !23
  br i1 %169, label %170, label %171, !prof !23

170:                                              ; preds = %164
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %216

171:                                              ; preds = %164
  %172 = getelementptr inbounds %struct.vlan_hdr, ptr %165, i32 0, i32 1
  %173 = load i16, ptr %172, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  switch i16 %173, label %176 [
    i16 -22392, label %174
    i16 129, label %174
  ]

174:                                              ; preds = %171, %171
  %175 = add nsw i32 %150, 4
  br label %149

176:                                              ; preds = %171, %133
  %177 = phi i16 [ %135, %133 ], [ %173, %171 ]
  switch i16 %177, label %216 [
    i16 8, label %178
    i16 -8826, label %180
  ]

178:                                              ; preds = %176
  %179 = or i32 %91, -805306368
  br label %219

180:                                              ; preds = %176
  %181 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 11
  %182 = load i8, ptr %181, align 2
  %183 = and i8 %182, 1
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %196, label %185

185:                                              ; preds = %180
  %186 = load ptr, ptr %115, align 4
  %187 = getelementptr inbounds %struct.skb_shared_info, ptr %186, i32 0, i32 10
  %188 = load volatile i32, ptr %187, align 4
  %189 = and i32 %188, 65535
  %190 = ashr i32 %188, 16
  %191 = sub nsw i32 %189, %190
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = call i32 @pskb_expand_head(ptr noundef %79, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #24
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %315

196:                                              ; preds = %193, %185, %180
  %197 = load ptr, ptr %104, align 8
  %198 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 18
  %199 = load i16, ptr %198, align 4
  %200 = zext i16 %199 to i32
  %201 = getelementptr i8, ptr %197, i32 %200
  %202 = load i16, ptr %106, align 2
  %203 = zext i16 %202 to i32
  %204 = getelementptr i8, ptr %197, i32 %203
  %205 = getelementptr inbounds %struct.ipv6hdr, ptr %201, i32 0, i32 2
  store i16 0, ptr %205, align 4
  %206 = getelementptr inbounds %struct.ipv6hdr, ptr %201, i32 0, i32 5
  %207 = getelementptr inbounds %struct.ipv6hdr, ptr %201, i32 0, i32 6
  %208 = call i32 @__csum_ipv6_magic(ptr noundef %206, ptr noundef %207, i32 noundef 0, i32 noundef 100663296, i32 noundef 0) #24
  %209 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %208) #27, !srcloc !25
  %210 = xor i32 %209, -1
  %211 = lshr i32 %210, 16
  %212 = trunc i32 %211 to i16
  %213 = xor i16 %212, -1
  %214 = getelementptr inbounds %struct.tcphdr, ptr %204, i32 0, i32 6
  store i16 %213, ptr %214, align 4
  %215 = or i32 %91, -939524096
  br label %219

216:                                              ; preds = %176, %170, %143
  %217 = load i1, ptr @r8152_tx_csum.__already_done.93, align 1
  br i1 %217, label %219, label %218, !prof !24

218:                                              ; preds = %216
  store i1 true, ptr @r8152_tx_csum.__already_done.93, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 2191, i32 noundef 9, ptr noundef null) #24
  br label %219

219:                                              ; preds = %218, %216, %196, %178
  %220 = phi i32 [ %215, %196 ], [ %179, %178 ], [ %125, %218 ], [ %125, %216 ]
  %221 = shl i32 %114, 18
  %222 = or i32 %220, %221
  %223 = call i16 @llvm.umin.i16(i16 %118, i16 2047) #24
  %224 = zext i16 %223 to i32
  %225 = shl nuw nsw i32 %224, 17
  br label %369

226:                                              ; preds = %124
  %227 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13
  %228 = load i16, ptr %227, align 8
  %229 = and i16 %228, 96
  %230 = icmp eq i16 %229, 96
  br i1 %230, label %231, label %369

231:                                              ; preds = %226
  %232 = icmp ugt i32 %114, 2047
  br i1 %232, label %233, label %237

233:                                              ; preds = %231
  %234 = load i32, ptr %31, align 4
  %235 = and i32 %234, 128
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %315, label %312

237:                                              ; preds = %231
  %238 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 16
  %239 = load i16, ptr %238, align 8
  %240 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 7
  %241 = load i16, ptr %240, align 8
  %242 = zext i16 %241 to i32
  switch i16 %239, label %280 [
    i16 -22392, label %243
    i16 129, label %243
  ]

243:                                              ; preds = %237, %237
  %244 = icmp eq i16 %241, 0
  br i1 %244, label %250, label %245

245:                                              ; preds = %243
  %246 = icmp ult i16 %241, 4
  br i1 %246, label %247, label %248, !prof !23

247:                                              ; preds = %245
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.96, i32 noundef 598, i32 noundef 9, ptr noundef null) #24
  br label %304

248:                                              ; preds = %245
  %249 = add nsw i32 %242, -4
  br label %250

250:                                              ; preds = %248, %243
  %251 = phi i32 [ %249, %248 ], [ 14, %243 ]
  %252 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 6
  br label %253

253:                                              ; preds = %278, %250
  %254 = phi i32 [ %251, %250 ], [ %279, %278 ]
  %255 = phi i32 [ 8, %250 ], [ %271, %278 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %256 = load i32, ptr %90, align 8
  %257 = load i32, ptr %252, align 4
  %258 = add i32 %254, %257
  %259 = sub i32 %256, %258
  %260 = icmp sgt i32 %259, 3
  br i1 %260, label %261, label %264, !prof !24

261:                                              ; preds = %253
  %262 = load ptr, ptr %110, align 4
  %263 = getelementptr i8, ptr %262, i32 %254
  br label %268

264:                                              ; preds = %253
  %265 = call i32 @skb_copy_bits(ptr noundef nonnull %79, i32 noundef %254, ptr noundef nonnull %3, i32 noundef 4) #24
  %266 = icmp slt i32 %265, 0
  %267 = select i1 %266, ptr null, ptr %3, !prof !23
  br label %268

268:                                              ; preds = %264, %261
  %269 = phi ptr [ %263, %261 ], [ %267, %264 ]
  %270 = icmp eq ptr %269, null
  %271 = add nsw i32 %255, -1
  %272 = icmp eq i32 %271, 0
  %273 = select i1 %270, i1 true, i1 %272, !prof !23
  br i1 %273, label %274, label %275, !prof !23

274:                                              ; preds = %268
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %304

275:                                              ; preds = %268
  %276 = getelementptr inbounds %struct.vlan_hdr, ptr %269, i32 0, i32 1
  %277 = load i16, ptr %276, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  switch i16 %277, label %280 [
    i16 -22392, label %278
    i16 129, label %278
  ]

278:                                              ; preds = %275, %275
  %279 = add nsw i32 %254, 4
  br label %253

280:                                              ; preds = %275, %237
  %281 = phi i16 [ %239, %237 ], [ %277, %275 ]
  switch i16 %281, label %304 [
    i16 8, label %282
    i16 -8826, label %289
  ]

282:                                              ; preds = %280
  %283 = load ptr, ptr %104, align 8
  %284 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 18
  %285 = load i16, ptr %284, align 4
  %286 = zext i16 %285 to i32
  %287 = getelementptr i8, ptr %283, i32 %286
  %288 = getelementptr inbounds %struct.iphdr, ptr %287, i32 0, i32 6
  br label %296

289:                                              ; preds = %280
  %290 = load ptr, ptr %104, align 8
  %291 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 18
  %292 = load i16, ptr %291, align 4
  %293 = zext i16 %292 to i32
  %294 = getelementptr i8, ptr %290, i32 %293
  %295 = getelementptr inbounds %struct.ipv6hdr, ptr %294, i32 0, i32 3
  br label %296

296:                                              ; preds = %289, %282
  %297 = phi i32 [ 268435456, %289 ], [ 536870912, %282 ]
  %298 = phi ptr [ %295, %289 ], [ %288, %282 ]
  %299 = load i8, ptr %298, align 1
  switch i8 %299, label %304 [
    i8 6, label %300
    i8 17, label %302
  ]

300:                                              ; preds = %296
  %301 = or i32 %297, 1073741824
  br label %308

302:                                              ; preds = %296
  %303 = or i32 %297, -2147483648
  br label %308

304:                                              ; preds = %296, %280, %274, %247
  %305 = phi i32 [ %297, %296 ], [ 0, %280 ], [ 0, %247 ], [ 0, %274 ]
  %306 = load i1, ptr @r8152_tx_csum.__already_done.95, align 1
  br i1 %306, label %308, label %307, !prof !24

307:                                              ; preds = %304
  store i1 true, ptr @r8152_tx_csum.__already_done.95, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 2229, i32 noundef 9, ptr noundef null) #24
  br label %308

308:                                              ; preds = %307, %304, %302, %300
  %309 = phi i32 [ %301, %300 ], [ %303, %302 ], [ %305, %307 ], [ %305, %304 ]
  %310 = shl i32 %114, 17
  %311 = or i32 %309, %310
  br label %369

312:                                              ; preds = %233, %129
  %313 = phi ptr [ @.str.92, %129 ], [ @.str.94, %233 ]
  %314 = load ptr, ptr %15, align 4
  call void (ptr, ptr, ...) @netdev_warn(ptr noundef %314, ptr noundef nonnull %313, i32 noundef %114) #25
  br label %315

315:                                              ; preds = %312, %233, %193, %129
  %316 = load ptr, ptr %115, align 4
  %317 = getelementptr inbounds %struct.skb_shared_info, ptr %316, i32 0, i32 4
  %318 = load i16, ptr %317, align 4
  %319 = icmp eq i16 %318, 0
  br i1 %319, label %351, label %320

320:                                              ; preds = %315
  %321 = load ptr, ptr %15, align 4
  %322 = getelementptr inbounds %struct.net_device, ptr %321, i32 0, i32 23
  %323 = load i64, ptr %322, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #24
  store i32 0, ptr %33, align 4, !annotation !8
  %324 = and i64 %323, -1048594
  %325 = call ptr @__skb_gso_segment(ptr noundef %79, i64 noundef %324, i1 noundef zeroext true) #24
  %326 = icmp ugt ptr %325, inttoptr (i32 -4096 to ptr)
  %327 = icmp eq ptr %325, null
  %328 = or i1 %326, %327
  br i1 %328, label %350, label %329

329:                                              ; preds = %320
  store ptr %2, ptr %2, align 4
  store ptr %2, ptr %34, align 4
  store i32 0, ptr %35, align 4
  br label %330

330:                                              ; preds = %330, %329
  %331 = phi ptr [ %325, %329 ], [ %332, %330 ]
  %332 = load ptr, ptr %331, align 8
  store ptr null, ptr %331, align 8
  %333 = load ptr, ptr %34, align 4
  store volatile ptr %2, ptr %331, align 8
  %334 = getelementptr inbounds %struct.anon.49, ptr %331, i32 0, i32 1
  store volatile ptr %333, ptr %334, align 4
  store volatile ptr %331, ptr %34, align 4
  store volatile ptr %331, ptr %333, align 4
  %335 = load i32, ptr %35, align 4
  %336 = add i32 %335, 1
  store volatile i32 %336, ptr %35, align 4
  %337 = icmp eq ptr %332, null
  br i1 %337, label %338, label %330

338:                                              ; preds = %330
  %339 = load ptr, ptr %2, align 4
  %340 = icmp eq ptr %339, %2
  br i1 %340, label %349, label %341

341:                                              ; preds = %338
  %342 = load ptr, ptr %5, align 4
  %343 = load ptr, ptr %34, align 4
  %344 = getelementptr inbounds %struct.anon.49, ptr %339, i32 0, i32 1
  store volatile ptr %5, ptr %344, align 4
  store volatile ptr %339, ptr %5, align 8
  store volatile ptr %342, ptr %343, align 8
  %345 = getelementptr inbounds %struct.anon.49, ptr %342, i32 0, i32 1
  store volatile ptr %343, ptr %345, align 4
  %346 = load i32, ptr %35, align 4
  %347 = load i32, ptr %27, align 4
  %348 = add i32 %347, %346
  store i32 %348, ptr %27, align 4
  br label %349

349:                                              ; preds = %341, %338
  call void @consume_skb(ptr noundef %79) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #24
  br label %416

350:                                              ; preds = %320
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #24
  br label %364

351:                                              ; preds = %315
  %352 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13
  %353 = load i16, ptr %352, align 8
  %354 = and i16 %353, 96
  %355 = icmp eq i16 %354, 96
  br i1 %355, label %356, label %364

356:                                              ; preds = %351
  %357 = call i32 @skb_checksum_help(ptr noundef %79) #24
  %358 = icmp slt i32 %357, 0
  br i1 %358, label %364, label %359

359:                                              ; preds = %356
  %360 = load ptr, ptr %5, align 4
  store volatile ptr %360, ptr %79, align 8
  store volatile ptr %5, ptr %87, align 4
  %361 = getelementptr inbounds %struct.sk_buff_list, ptr %360, i32 0, i32 1
  store volatile ptr %79, ptr %361, align 4
  store volatile ptr %79, ptr %5, align 4
  %362 = load i32, ptr %27, align 4
  %363 = add i32 %362, 1
  store volatile i32 %363, ptr %27, align 4
  br label %416

364:                                              ; preds = %356, %351, %350
  %365 = load ptr, ptr %15, align 4
  %366 = getelementptr inbounds %struct.net_device, ptr %365, i32 0, i32 36, i32 7
  %367 = load i32, ptr %366, align 4
  %368 = add i32 %367, 1
  store i32 %368, ptr %366, align 4
  call void @consume_skb(ptr noundef %79) #24
  br label %416

369:                                              ; preds = %308, %226, %219
  %370 = phi i32 [ %225, %219 ], [ %311, %308 ], [ 0, %226 ]
  %371 = phi i32 [ %222, %219 ], [ %125, %308 ], [ %125, %226 ]
  %372 = getelementptr inbounds %struct.tx_desc, ptr %103, i32 0, i32 1
  store i32 %370, ptr %372, align 4
  store i32 %371, ptr %103, align 4
  %373 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 3
  %374 = load i16, ptr %373, align 2
  %375 = and i16 %374, 1
  %376 = icmp eq i16 %375, 0
  br i1 %376, label %384, label %377

377:                                              ; preds = %369
  %378 = getelementptr inbounds %struct.sk_buff, ptr %79, i32 0, i32 13, i32 0, i32 9
  %379 = load i16, ptr %378, align 2
  %380 = call i16 @llvm.bswap.i16(i16 %379) #24
  %381 = zext i16 %380 to i32
  %382 = or i32 %370, %381
  %383 = or i32 %382, 65536
  store i32 %383, ptr %372, align 4
  br label %384

384:                                              ; preds = %377, %369
  %385 = getelementptr i8, ptr %103, i32 8
  %386 = load i32, ptr %90, align 8
  %387 = call i32 @skb_copy_bits(ptr noundef nonnull %79, i32 noundef 0, ptr noundef %385, i32 noundef %386) #24
  %388 = icmp slt i32 %387, 0
  br i1 %388, label %389, label %394

389:                                              ; preds = %384
  %390 = load ptr, ptr %15, align 4
  %391 = getelementptr inbounds %struct.net_device, ptr %390, i32 0, i32 36, i32 7
  %392 = load i32, ptr %391, align 4
  %393 = add i32 %392, 1
  store i32 %393, ptr %391, align 4
  call void @__dev_kfree_skb_any(ptr noundef %79, i32 noundef 1) #24
  br label %416

394:                                              ; preds = %384
  %395 = getelementptr i8, ptr %385, i32 %386
  %396 = load i32, ptr %75, align 4
  %397 = add i32 %396, %386
  store i32 %397, ptr %75, align 4
  %398 = load ptr, ptr %115, align 4
  %399 = getelementptr inbounds %struct.skb_shared_info, ptr %398, i32 0, i32 5
  %400 = load i16, ptr %399, align 2
  %401 = icmp eq i16 %400, 0
  %402 = select i1 %401, i16 1, i16 %400
  %403 = zext i16 %402 to i32
  %404 = load i32, ptr %74, align 4
  %405 = add i32 %404, %403
  store i32 %405, ptr %74, align 4
  call void @__dev_kfree_skb_any(ptr noundef %79, i32 noundef 1) #24
  %406 = ptrtoint ptr %395 to i32
  %407 = add i32 %406, 3
  %408 = and i32 %407, -4
  %409 = load ptr, ptr %72, align 4
  %410 = ptrtoint ptr %409 to i32
  %411 = sub i32 16384, %408
  %412 = add i32 %411, %410
  %413 = load i8, ptr %32, align 4
  %414 = and i8 %413, 4
  %415 = icmp eq i8 %414, 0
  br i1 %415, label %416, label %420

416:                                              ; preds = %394, %389, %364, %359, %349
  %417 = phi i32 [ %78, %389 ], [ %78, %349 ], [ %78, %359 ], [ %78, %364 ], [ %412, %394 ]
  %418 = phi ptr [ %103, %389 ], [ %103, %349 ], [ %103, %359 ], [ %103, %364 ], [ %395, %394 ]
  %419 = icmp ugt i32 %417, 67
  br i1 %419, label %76, label %420

420:                                              ; preds = %416, %394, %76
  %421 = phi ptr [ %418, %416 ], [ %77, %76 ], [ %395, %394 ]
  %422 = load ptr, ptr %5, align 4
  br label %423

423:                                              ; preds = %420, %94
  %424 = phi ptr [ %79, %94 ], [ %422, %420 ]
  %425 = phi ptr [ %77, %94 ], [ %421, %420 ]
  %426 = icmp eq ptr %424, %5
  br i1 %426, label %441, label %427

427:                                              ; preds = %423
  call void @_raw_spin_lock(ptr noundef %28) #24
  %428 = load ptr, ptr %5, align 4
  %429 = icmp eq ptr %428, %5
  br i1 %429, label %438, label %430

430:                                              ; preds = %427
  %431 = load ptr, ptr %22, align 4
  %432 = load ptr, ptr %26, align 4
  %433 = getelementptr inbounds %struct.anon.49, ptr %428, i32 0, i32 1
  store volatile ptr %22, ptr %433, align 4
  store volatile ptr %428, ptr %22, align 8
  store volatile ptr %431, ptr %432, align 8
  %434 = getelementptr inbounds %struct.anon.49, ptr %431, i32 0, i32 1
  store volatile ptr %432, ptr %434, align 4
  %435 = load i32, ptr %27, align 4
  %436 = load i32, ptr %30, align 4
  %437 = add i32 %436, %435
  store i32 %437, ptr %30, align 4
  br label %438

438:                                              ; preds = %430, %427
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !19
  %439 = load i16, ptr %28, align 4
  %440 = add i16 %439, 1
  store i16 %440, ptr %28, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #24, !srcloc !20
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #24, !srcloc !21
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !22
  br label %441

441:                                              ; preds = %438, %423
  %442 = load ptr, ptr %15, align 4
  call void @netif_tx_lock(ptr noundef %442) #24
  %443 = load ptr, ptr %15, align 4
  %444 = getelementptr inbounds %struct.net_device, ptr %443, i32 0, i32 87
  %445 = load ptr, ptr %444, align 64
  %446 = getelementptr inbounds %struct.netdev_queue, ptr %445, i32 0, i32 12
  %447 = load volatile i32, ptr %446, align 4
  %448 = and i32 %447, 1
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %456, label %450

450:                                              ; preds = %441
  %451 = load i32, ptr %30, align 4
  %452 = load i32, ptr %36, align 8
  %453 = icmp ult i32 %451, %452
  br i1 %453, label %454, label %456

454:                                              ; preds = %450
  call void @netif_tx_wake_queue(ptr noundef %445) #24
  %455 = load ptr, ptr %15, align 4
  br label %456

456:                                              ; preds = %454, %450, %441
  %457 = phi ptr [ %455, %454 ], [ %443, %450 ], [ %443, %441 ]
  call void @netif_tx_unlock(ptr noundef %457) #24
  %458 = load ptr, ptr %37, align 8
  %459 = call i32 @usb_autopm_get_interface_async(ptr noundef %458) #24
  %460 = icmp slt i32 %459, 0
  br i1 %460, label %481, label %461

461:                                              ; preds = %456
  %462 = getelementptr inbounds %struct.tx_agg, ptr %49, i32 0, i32 1
  %463 = load ptr, ptr %462, align 4
  %464 = load ptr, ptr %38, align 4
  %465 = load i32, ptr %39, align 4
  %466 = load ptr, ptr %72, align 4
  %467 = ptrtoint ptr %425 to i32
  %468 = ptrtoint ptr %466 to i32
  %469 = sub i32 %467, %468
  %470 = getelementptr inbounds %struct.urb, ptr %463, i32 0, i32 8
  store ptr %464, ptr %470, align 4
  %471 = getelementptr inbounds %struct.urb, ptr %463, i32 0, i32 10
  store i32 %465, ptr %471, align 4
  %472 = getelementptr inbounds %struct.urb, ptr %463, i32 0, i32 14
  store ptr %466, ptr %472, align 4
  %473 = getelementptr inbounds %struct.urb, ptr %463, i32 0, i32 19
  store i32 %469, ptr %473, align 4
  %474 = getelementptr inbounds %struct.urb, ptr %463, i32 0, i32 28
  store ptr @write_bulk_callback, ptr %474, align 4
  %475 = getelementptr inbounds %struct.urb, ptr %463, i32 0, i32 27
  store ptr %49, ptr %475, align 4
  %476 = load ptr, ptr %462, align 4
  %477 = call i32 @usb_submit_urb(ptr noundef %476, i32 noundef 2592) #24
  %478 = icmp slt i32 %477, 0
  br i1 %478, label %479, label %481

479:                                              ; preds = %461
  %480 = load ptr, ptr %37, align 8
  call void @usb_autopm_put_interface_async(ptr noundef %480) #24
  br label %481

481:                                              ; preds = %479, %461, %456
  %482 = phi i32 [ %459, %456 ], [ %477, %479 ], [ %477, %461 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #24
  switch i32 %482, label %490 [
    i32 0, label %40
    i32 -19, label %483
  ]

483:                                              ; preds = %481
  %484 = load ptr, ptr %38, align 4
  %485 = getelementptr inbounds %struct.usb_device, ptr %484, i32 0, i32 3
  %486 = load i32, ptr %485, align 8
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %483
  call void @_set_bit(i32 noundef 0, ptr noundef %6) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %489

489:                                              ; preds = %488, %483
  call void @netif_device_detach(ptr noundef %41) #24
  br label %504

490:                                              ; preds = %481
  %491 = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %492 = load i32, ptr %31, align 4
  %493 = and i32 %492, 128
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %496, label %495

495:                                              ; preds = %490
  call void (ptr, ptr, ...) @netdev_warn(ptr noundef %41, ptr noundef nonnull @.str.91, i32 noundef %482) #25
  br label %496

496:                                              ; preds = %495, %490
  %497 = load i32, ptr %74, align 4
  %498 = getelementptr inbounds %struct.net_device, ptr %41, i32 0, i32 36, i32 7
  %499 = load i32, ptr %498, align 4
  %500 = add i32 %499, %497
  store i32 %500, ptr %498, align 4
  %501 = call i32 @_raw_spin_lock_irqsave(ptr noundef %24) #24
  %502 = getelementptr i8, ptr %0, i32 -196
  %503 = load ptr, ptr %502, align 4
  store ptr %49, ptr %502, align 4
  store ptr %23, ptr %49, align 4
  store ptr %503, ptr %491, align 4
  store volatile ptr %49, ptr %503, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %24, i32 noundef %501) #24
  br label %504

504:                                              ; preds = %496, %489, %52, %51, %44, %40, %14, %10, %1
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #9

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @read_mii_word(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr i8, ptr %0, i32 1408
  %5 = load volatile i32, ptr %4, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = icmp eq i32 %1, 32
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = trunc i32 %2 to i16
  %12 = shl i16 %11, 1
  %13 = add i16 %12, -23552
  %14 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %4, i16 noundef zeroext %13) #24
  %15 = zext i16 %14 to i32
  br label %16

16:                                               ; preds = %10, %8, %3
  %17 = phi i32 [ %15, %10 ], [ -19, %3 ], [ -22, %8 ]
  ret i32 %17
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @write_mii_word(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = getelementptr i8, ptr %0, i32 1408
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = icmp eq i32 %1, 32
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %16

11:                                               ; preds = %4
  %12 = trunc i32 %2 to i16
  %13 = shl i16 %12, 1
  %14 = add i16 %13, -23552
  %15 = trunc i32 %3 to i16
  tail call fastcc void @ocp_reg_write(ptr noundef %5, i16 noundef zeroext %14, i16 noundef zeroext %15) #24
  br label %16

16:                                               ; preds = %11, %4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__rtl_set_wol(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 192, ptr %10, align 4
  %11 = load volatile i32, ptr %0, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %2
  %15 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %16 = icmp eq ptr %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %21 = load i32, ptr %20, align 8
  %22 = call i32 @usb_control_msg(ptr noundef %19, i32 noundef %21, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %15, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %15) #24
  %23 = icmp eq i32 %22, -19
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = load ptr, ptr %18, align 4
  %26 = getelementptr inbounds %struct.usb_device, ptr %25, i32 0, i32 3
  %27 = load i32, ptr %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %30

30:                                               ; preds = %29, %24, %17, %14, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %31 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %32 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %33 = and i32 %32, 65519
  %34 = shl i32 %1, 4
  %35 = and i32 %34, 16
  %36 = or i32 %33, %35
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %36, ptr %8, align 4
  %37 = load volatile i32, ptr %0, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %56

40:                                               ; preds = %30
  %41 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %42 = icmp eq ptr %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %47 = load i32, ptr %46, align 8
  %48 = call i32 @usb_control_msg(ptr noundef %45, i32 noundef %47, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6112, i16 noundef zeroext 307, ptr noundef nonnull %41, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %41) #24
  %49 = icmp eq i32 %48, -19
  br i1 %49, label %50, label %56

50:                                               ; preds = %43
  %51 = load ptr, ptr %44, align 4
  %52 = getelementptr inbounds %struct.usb_device, ptr %51, i32 0, i32 3
  %53 = load i32, ptr %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %56

56:                                               ; preds = %55, %50, %43, %40, %30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %57 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 460) #24
  %58 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %59 = and i32 %58, -7405568
  %60 = shl i32 %1, 19
  %61 = and i32 %60, 7340032
  %62 = or i32 %61, %59
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %62, ptr %6, align 4
  %63 = load volatile i32, ptr %0, align 4
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %56
  %67 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %68 = icmp eq ptr %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 4
  %72 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %73 = load i32, ptr %72, align 8
  %74 = call i32 @usb_control_msg(ptr noundef %71, i32 noundef %73, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6112, i16 noundef zeroext 460, ptr noundef nonnull %67, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %67) #24
  %75 = icmp eq i32 %74, -19
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = load ptr, ptr %70, align 4
  %78 = getelementptr inbounds %struct.usb_device, ptr %77, i32 0, i32 3
  %79 = load i32, ptr %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %82

82:                                               ; preds = %81, %76, %69, %66, %56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4
  %83 = load volatile i32, ptr %0, align 4
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %102

86:                                               ; preds = %82
  %87 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %88 = icmp eq ptr %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %91 = load ptr, ptr %90, align 4
  %92 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %93 = load i32, ptr %92, align 8
  %94 = call i32 @usb_control_msg(ptr noundef %91, i32 noundef %93, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %87, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %87) #24
  %95 = icmp eq i32 %94, -19
  br i1 %95, label %96, label %102

96:                                               ; preds = %89
  %97 = load ptr, ptr %90, align 4
  %98 = getelementptr inbounds %struct.usb_device, ptr %97, i32 0, i32 3
  %99 = load i32, ptr %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %96
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %102

102:                                              ; preds = %101, %96, %89, %86, %82
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %103 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16204, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %104 = load i32, ptr %4, align 4
  %105 = lshr i32 %104, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %106 = and i32 %105, 65534
  %107 = and i32 %1, 32
  %108 = icmp eq i32 %107, 0
  %109 = or i32 %105, 1
  %110 = select i1 %108, i32 %106, i32 %109
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %111 = shl nuw i32 %110, 16
  store i32 %111, ptr %3, align 4
  %112 = load volatile i32, ptr %0, align 4
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %131

115:                                              ; preds = %102
  %116 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %117 = icmp eq ptr %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %120 = load ptr, ptr %119, align 4
  %121 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %122 = load i32, ptr %121, align 8
  %123 = call i32 @usb_control_msg(ptr noundef %120, i32 noundef %122, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16204, i16 noundef zeroext 460, ptr noundef nonnull %116, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %116) #24
  %124 = icmp eq i32 %123, -19
  br i1 %124, label %125, label %131

125:                                              ; preds = %118
  %126 = load ptr, ptr %119, align 4
  %127 = getelementptr inbounds %struct.usb_device, ptr %126, i32 0, i32 3
  %128 = load i32, ptr %127, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %125
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %131

131:                                              ; preds = %130, %125, %118, %115, %102
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %132 = and i32 %1, 47
  %133 = icmp ne i32 %132, 0
  %134 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %135 = load ptr, ptr %134, align 4
  %136 = getelementptr inbounds %struct.usb_device, ptr %135, i32 0, i32 15
  %137 = call i32 @device_set_wakeup_enable(ptr noundef %136, i1 noundef zeroext %133) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8152_poll(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.list_head, align 8
  %4 = getelementptr i8, ptr %0, i32 -8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #24
  %5 = getelementptr i8, ptr %0, i32 404
  %6 = load ptr, ptr %5, align 4
  %7 = icmp ne ptr %6, %5
  %8 = icmp sgt i32 %1, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %40

10:                                               ; preds = %2
  %11 = getelementptr i8, ptr %0, i32 412
  %12 = getelementptr i8, ptr %0, i32 220
  %13 = icmp eq ptr %6, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %35, %10
  %15 = phi i32 [ %28, %35 ], [ 0, %10 ]
  %16 = phi ptr [ %36, %35 ], [ %6, %10 ]
  %17 = load i32, ptr %11, align 4
  %18 = add i32 %17, -1
  store volatile i32 %18, ptr %11, align 4
  %19 = load ptr, ptr %16, align 8
  %20 = getelementptr inbounds %struct.anon.49, ptr %16, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  store ptr null, ptr %20, align 4
  store ptr null, ptr %16, align 8
  %22 = getelementptr inbounds %struct.anon.49, ptr %19, i32 0, i32 1
  store volatile ptr %21, ptr %22, align 4
  store volatile ptr %19, ptr %21, align 8
  %23 = load ptr, ptr %12, align 4
  %24 = getelementptr inbounds %struct.net_device, ptr %23, i32 0, i32 36
  %25 = getelementptr inbounds %struct.sk_buff, ptr %16, i32 0, i32 5
  %26 = load i32, ptr %25, align 8
  %27 = tail call i32 @napi_gro_receive(ptr noundef %0, ptr noundef nonnull %16) #24
  %28 = add nuw nsw i32 %15, 1
  %29 = load i32, ptr %24, align 4
  %30 = add i32 %29, 1
  store i32 %30, ptr %24, align 4
  %31 = getelementptr inbounds %struct.net_device, ptr %23, i32 0, i32 36, i32 2
  %32 = load i32, ptr %31, align 4
  %33 = add i32 %32, %26
  store i32 %33, ptr %31, align 4
  %34 = icmp eq i32 %28, %1
  br i1 %34, label %40, label %35

35:                                               ; preds = %14
  %36 = load ptr, ptr %5, align 4
  %37 = icmp eq ptr %36, %5
  %38 = icmp eq ptr %36, null
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %14

40:                                               ; preds = %35, %14, %10, %2
  %41 = phi i32 [ 0, %2 ], [ 0, %10 ], [ %28, %35 ], [ %1, %14 ]
  %42 = getelementptr i8, ptr %0, i32 372
  %43 = load volatile ptr, ptr %42, align 4
  %44 = icmp eq ptr %43, %42
  br i1 %44, label %418, label %45

45:                                               ; preds = %40
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %4) #24
  store volatile ptr %3, ptr %3, align 8
  %46 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  store ptr %3, ptr %46, align 4
  %47 = getelementptr i8, ptr %0, i32 420
  %48 = call i32 @_raw_spin_lock_irqsave(ptr noundef %47) #24
  %49 = load volatile ptr, ptr %42, align 4
  %50 = icmp eq ptr %49, %42
  br i1 %50, label %57, label %51

51:                                               ; preds = %45
  %52 = load ptr, ptr %3, align 8
  %53 = getelementptr i8, ptr %0, i32 376
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  store ptr %3, ptr %55, align 4
  store ptr %49, ptr %3, align 8
  store ptr %52, ptr %54, align 4
  %56 = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 1
  store ptr %54, ptr %56, align 4
  store volatile ptr %42, ptr %42, align 4
  store ptr %42, ptr %53, align 4
  br label %57

57:                                               ; preds = %51, %45
  call void @_raw_spin_unlock_irqrestore(ptr noundef %47, i32 noundef %48) #24
  %58 = load ptr, ptr %3, align 8
  %59 = icmp eq ptr %58, %3
  br i1 %59, label %404, label %60

60:                                               ; preds = %57
  %61 = getelementptr i8, ptr %0, i32 364
  %62 = getelementptr i8, ptr %0, i32 708
  %63 = getelementptr i8, ptr %0, i32 748
  %64 = getelementptr i8, ptr %0, i32 220
  %65 = getelementptr i8, ptr %0, i32 412
  %66 = getelementptr i8, ptr %0, i32 744
  %67 = getelementptr i8, ptr %0, i32 408
  %68 = getelementptr i8, ptr %0, i32 368
  br label %69

69:                                               ; preds = %401, %60
  %70 = phi ptr [ %58, %60 ], [ %73, %401 ]
  %71 = phi i32 [ 0, %60 ], [ %402, %401 ]
  %72 = phi i32 [ %41, %60 ], [ %393, %401 ]
  %73 = load ptr, ptr %70, align 4
  %74 = getelementptr inbounds %struct.list_head, ptr %70, i32 0, i32 1
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.list_head, ptr %73, i32 0, i32 1
  store ptr %75, ptr %76, align 4
  store volatile ptr %73, ptr %75, align 4
  store volatile ptr %70, ptr %70, align 4
  store ptr %70, ptr %74, align 4
  %77 = getelementptr inbounds %struct.rx_agg, ptr %70, i32 0, i32 2
  %78 = load ptr, ptr %77, align 4
  %79 = getelementptr inbounds %struct.urb, ptr %78, i32 0, i32 12
  %80 = load i32, ptr %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %390

82:                                               ; preds = %69
  %83 = getelementptr inbounds %struct.urb, ptr %78, i32 0, i32 20
  %84 = load i32, ptr %83, align 4
  %85 = icmp ult i32 %84, 60
  br i1 %85, label %390, label %86

86:                                               ; preds = %82
  %87 = call i32 @_raw_spin_lock_irqsave(ptr noundef %47) #24
  %88 = load ptr, ptr %61, align 4
  %89 = icmp eq ptr %88, %61
  br i1 %89, label %90, label %91

90:                                               ; preds = %86
  call void @_raw_spin_unlock_irqrestore(ptr noundef %47, i32 noundef %87) #24
  br label %157

91:                                               ; preds = %151, %86
  %92 = phi ptr [ %94, %151 ], [ %88, %86 ]
  %93 = phi ptr [ %152, %151 ], [ null, %86 ]
  %94 = load ptr, ptr %92, align 4
  %95 = getelementptr inbounds %struct.rx_agg, ptr %92, i32 0, i32 4
  %96 = load ptr, ptr %95, align 4
  %97 = getelementptr inbounds %struct.page, ptr %96, i32 0, i32 1
  %98 = load volatile i32, ptr %97, align 4
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101, !prof !24

101:                                              ; preds = %91
  %102 = add i32 %98, -1
  br label %105

103:                                              ; preds = %91
  %104 = ptrtoint ptr %96 to i32
  br label %105

105:                                              ; preds = %103, %101
  %106 = phi i32 [ %102, %101 ], [ %104, %103 ]
  %107 = inttoptr i32 %106 to ptr
  %108 = getelementptr inbounds %struct.page, ptr %107, i32 0, i32 3
  %109 = load volatile i32, ptr %108, align 4
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %151

111:                                              ; preds = %105
  %112 = icmp eq ptr %93, null
  br i1 %112, label %113, label %117

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.list_head, ptr %92, i32 0, i32 1
  %115 = load ptr, ptr %114, align 4
  %116 = getelementptr inbounds %struct.list_head, ptr %94, i32 0, i32 1
  store ptr %115, ptr %116, align 4
  store volatile ptr %94, ptr %115, align 4
  store volatile ptr %92, ptr %92, align 4
  store ptr %92, ptr %114, align 4
  br label %151

117:                                              ; preds = %111
  %118 = load volatile i32, ptr %62, align 4
  %119 = icmp sgt i32 %118, 10
  br i1 %119, label %120, label %154

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.rx_agg, ptr %92, i32 0, i32 4
  %122 = getelementptr inbounds %struct.list_head, ptr %92, i32 0, i32 1
  %123 = load ptr, ptr %122, align 4
  %124 = getelementptr inbounds %struct.list_head, ptr %94, i32 0, i32 1
  store ptr %123, ptr %124, align 4
  store volatile ptr %94, ptr %123, align 4
  store volatile ptr %92, ptr %92, align 4
  store ptr %92, ptr %122, align 4
  %125 = getelementptr inbounds %struct.rx_agg, ptr %92, i32 0, i32 1
  %126 = getelementptr inbounds %struct.rx_agg, ptr %92, i32 0, i32 1, i32 1
  %127 = load ptr, ptr %126, align 4
  %128 = load ptr, ptr %125, align 4
  %129 = getelementptr inbounds %struct.list_head, ptr %128, i32 0, i32 1
  store ptr %127, ptr %129, align 4
  store volatile ptr %128, ptr %127, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %125, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %126, align 4
  %130 = getelementptr inbounds %struct.rx_agg, ptr %92, i32 0, i32 2
  %131 = load ptr, ptr %130, align 4
  call void @usb_free_urb(ptr noundef %131) #24
  %132 = load ptr, ptr %121, align 4
  %133 = getelementptr inbounds %struct.page, ptr %132, i32 0, i32 1
  %134 = load volatile i32, ptr %133, align 4
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %139, label %137, !prof !24

137:                                              ; preds = %120
  %138 = add i32 %134, -1
  br label %141

139:                                              ; preds = %120
  %140 = ptrtoint ptr %132 to i32
  br label %141

141:                                              ; preds = %139, %137
  %142 = phi i32 [ %138, %137 ], [ %140, %139 ]
  %143 = inttoptr i32 %142 to ptr
  %144 = getelementptr inbounds %struct.page, ptr %143, i32 0, i32 3
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !26
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %144) #24, !srcloc !9
  %145 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %144, ptr %144, i32 1, ptr elementtype(i32) %144) #24, !srcloc !27
  %146 = extractvalue { i32, i32 } %145, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !28
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %141
  call void @__put_page(ptr noundef %143) #24
  br label %149

149:                                              ; preds = %148, %141
  call void @kfree(ptr noundef %92) #24
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %62) #24, !srcloc !9
  %150 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %62, ptr %62, i32 1, ptr elementtype(i32) %62) #24, !srcloc !17
  br label %154

151:                                              ; preds = %113, %105
  %152 = phi ptr [ %92, %113 ], [ %93, %105 ]
  %153 = icmp eq ptr %94, %61
  br i1 %153, label %155, label %91

154:                                              ; preds = %149, %117
  call void @_raw_spin_unlock_irqrestore(ptr noundef %47, i32 noundef %87) #24
  br label %163

155:                                              ; preds = %151
  call void @_raw_spin_unlock_irqrestore(ptr noundef %47, i32 noundef %87) #24
  %156 = icmp eq ptr %152, null
  br i1 %156, label %157, label %163

157:                                              ; preds = %155, %90
  %158 = load volatile i32, ptr %62, align 4
  %159 = load i32, ptr %63, align 4
  %160 = icmp ult i32 %158, %159
  br i1 %160, label %161, label %163

161:                                              ; preds = %157
  %162 = call fastcc ptr @alloc_rx_agg(ptr noundef %4, i32 noundef 2592) #24
  br label %163

163:                                              ; preds = %161, %157, %155, %154
  %164 = phi ptr [ %152, %155 ], [ %162, %161 ], [ null, %157 ], [ %93, %154 ]
  %165 = getelementptr inbounds %struct.rx_agg, ptr %70, i32 0, i32 5
  %166 = load i32, ptr %83, align 4
  %167 = icmp ugt i32 %166, 24
  br i1 %167, label %168, label %340

168:                                              ; preds = %163
  %169 = load ptr, ptr %165, align 4
  %170 = icmp eq ptr %164, null
  %171 = getelementptr inbounds %struct.rx_agg, ptr %70, i32 0, i32 4
  br label %172

172:                                              ; preds = %324, %168
  %173 = phi i32 [ %166, %168 ], [ %338, %324 ]
  %174 = phi i32 [ %72, %168 ], [ %326, %324 ]
  %175 = phi i32 [ 24, %168 ], [ %337, %324 ]
  %176 = phi ptr [ %169, %168 ], [ %333, %324 ]
  %177 = load ptr, ptr %64, align 4
  %178 = getelementptr inbounds %struct.net_device, ptr %177, i32 0, i32 36
  %179 = load i32, ptr %65, align 4
  %180 = icmp ugt i32 %179, 999
  br i1 %180, label %340, label %181, !prof !23

181:                                              ; preds = %172
  %182 = load i32, ptr %176, align 4
  %183 = and i32 %182, 32767
  %184 = icmp ult i32 %183, 60
  %185 = add i32 %183, %175
  %186 = icmp ult i32 %173, %185
  %187 = select i1 %184, i1 true, i1 %186
  br i1 %187, label %340, label %188

188:                                              ; preds = %181
  %189 = add nsw i32 %183, -4
  %190 = getelementptr i8, ptr %176, i32 24
  br i1 %170, label %194, label %191

191:                                              ; preds = %188
  %192 = load i32, ptr %66, align 8
  %193 = call i32 @llvm.umin.i32(i32 %192, i32 %189) #24
  br label %194

194:                                              ; preds = %191, %188
  %195 = phi i32 [ %189, %188 ], [ %193, %191 ]
  %196 = call ptr @__napi_alloc_skb(ptr noundef %0, i32 noundef %195, i32 noundef 2592) #24
  %197 = icmp eq ptr %196, null
  br i1 %197, label %198, label %202

198:                                              ; preds = %194
  %199 = getelementptr inbounds %struct.net_device, ptr %177, i32 0, i32 36, i32 6
  %200 = load i32, ptr %199, align 4
  %201 = add i32 %200, 1
  store i32 %201, ptr %199, align 4
  br label %324

202:                                              ; preds = %194
  %203 = load ptr, ptr %64, align 4
  %204 = getelementptr inbounds %struct.net_device, ptr %203, i32 0, i32 23
  %205 = load i64, ptr %204, align 16
  %206 = and i64 %205, 1099511627776
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %241, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %struct.rx_desc, ptr %176, i32 0, i32 1
  %210 = load i32, ptr %209, align 4
  %211 = getelementptr inbounds %struct.rx_desc, ptr %176, i32 0, i32 2
  %212 = load i32, ptr %211, align 4
  %213 = and i32 %210, 524288
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %232, label %215

215:                                              ; preds = %208
  %216 = and i32 %212, 8388608
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %241

218:                                              ; preds = %215
  %219 = and i32 %210, 8388608
  %220 = icmp ne i32 %219, 0
  %221 = and i32 %212, 4194304
  %222 = icmp eq i32 %221, 0
  %223 = select i1 %220, i1 %222, i1 false
  br i1 %223, label %244, label %224

224:                                              ; preds = %218
  %225 = and i32 %210, 4194304
  %226 = icmp ne i32 %225, 0
  %227 = and i32 %212, 2097152
  %228 = icmp eq i32 %227, 0
  %229 = select i1 %226, i1 %228, i1 false
  %230 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13
  %231 = load i16, ptr %230, align 8
  br i1 %229, label %255, label %258

232:                                              ; preds = %208
  %233 = and i32 %210, 1048576
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %241, label %235

235:                                              ; preds = %232
  %236 = and i32 %210, 8388608
  %237 = icmp ne i32 %236, 0
  %238 = and i32 %212, 4194304
  %239 = icmp eq i32 %238, 0
  %240 = select i1 %237, i1 %239, i1 false
  br i1 %240, label %244, label %247

241:                                              ; preds = %232, %215, %202
  %242 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13
  %243 = load i16, ptr %242, align 8
  br label %258

244:                                              ; preds = %235, %218
  %245 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13
  %246 = load i16, ptr %245, align 8
  br label %255

247:                                              ; preds = %235
  %248 = and i32 %210, 4194304
  %249 = icmp ne i32 %248, 0
  %250 = and i32 %212, 2097152
  %251 = icmp eq i32 %250, 0
  %252 = select i1 %249, i1 %251, i1 false
  %253 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13
  %254 = load i16, ptr %253, align 8
  br i1 %252, label %255, label %258

255:                                              ; preds = %247, %244, %224
  %256 = phi i16 [ %246, %244 ], [ %254, %247 ], [ %231, %224 ]
  %257 = phi ptr [ %245, %244 ], [ %253, %247 ], [ %230, %224 ]
  br label %258

258:                                              ; preds = %255, %247, %241, %224
  %259 = phi i16 [ %256, %255 ], [ %254, %247 ], [ %243, %241 ], [ %231, %224 ]
  %260 = phi ptr [ %257, %255 ], [ %253, %247 ], [ %242, %241 ], [ %230, %224 ]
  %261 = phi i16 [ 32, %255 ], [ 0, %247 ], [ 0, %241 ], [ 0, %224 ]
  %262 = and i16 %259, -97
  %263 = or i16 %261, %262
  store i16 %263, ptr %260, align 8
  %264 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 17
  %265 = load ptr, ptr %264, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %265, ptr align 1 %190, i32 %195, i1 false) #24
  %266 = call ptr @skb_put(ptr noundef nonnull %196, i32 noundef %195) #24
  %267 = sub nsw i32 %189, %195
  %268 = getelementptr i8, ptr %190, i32 %195
  %269 = icmp eq i32 %267, 0
  br i1 %269, label %292, label %270

270:                                              ; preds = %258
  %271 = load ptr, ptr %171, align 4
  %272 = load ptr, ptr %165, align 4
  %273 = ptrtoint ptr %268 to i32
  %274 = ptrtoint ptr %272 to i32
  %275 = sub i32 %273, %274
  %276 = add nsw i32 %267, 63
  %277 = and i32 %276, -64
  call void @skb_add_rx_frag(ptr noundef nonnull %196, i32 noundef 0, ptr noundef %271, i32 noundef %275, i32 noundef %267, i32 noundef %277) #24
  %278 = load ptr, ptr %171, align 4
  %279 = getelementptr inbounds %struct.page, ptr %278, i32 0, i32 1
  %280 = load volatile i32, ptr %279, align 4
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %285, label %283, !prof !24

283:                                              ; preds = %270
  %284 = add i32 %280, -1
  br label %287

285:                                              ; preds = %270
  %286 = ptrtoint ptr %278 to i32
  br label %287

287:                                              ; preds = %285, %283
  %288 = phi i32 [ %284, %283 ], [ %286, %285 ]
  %289 = inttoptr i32 %288 to ptr
  %290 = getelementptr inbounds %struct.page, ptr %289, i32 0, i32 3
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %290) #24, !srcloc !9
  %291 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %290, ptr %290, i32 1, ptr elementtype(i32) %290) #24, !srcloc !10
  br label %292

292:                                              ; preds = %287, %258
  %293 = call zeroext i16 @eth_type_trans(ptr noundef nonnull %196, ptr noundef %177) #24
  %294 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13, i32 0, i32 16
  store i16 %293, ptr %294, align 8
  %295 = getelementptr inbounds %struct.rx_desc, ptr %176, i32 0, i32 1
  %296 = load i32, ptr %295, align 4
  %297 = and i32 %296, 65536
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %307, label %299

299:                                              ; preds = %292
  %300 = trunc i32 %296 to i16
  %301 = call i16 @llvm.bswap.i16(i16 %300) #24
  %302 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13, i32 0, i32 8
  store i16 129, ptr %302, align 4
  %303 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13, i32 0, i32 9
  store i16 %301, ptr %303, align 2
  %304 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 13, i32 0, i32 3
  %305 = load i16, ptr %304, align 2
  %306 = or i16 %305, 1
  store i16 %306, ptr %304, align 2
  br label %307

307:                                              ; preds = %299, %292
  %308 = icmp slt i32 %174, %1
  br i1 %308, label %309, label %319

309:                                              ; preds = %307
  %310 = add nsw i32 %174, 1
  %311 = load i32, ptr %178, align 4
  %312 = add i32 %311, 1
  store i32 %312, ptr %178, align 4
  %313 = getelementptr inbounds %struct.sk_buff, ptr %196, i32 0, i32 5
  %314 = load i32, ptr %313, align 8
  %315 = getelementptr inbounds %struct.net_device, ptr %177, i32 0, i32 36, i32 2
  %316 = load i32, ptr %315, align 4
  %317 = add i32 %316, %314
  store i32 %317, ptr %315, align 4
  %318 = call i32 @napi_gro_receive(ptr noundef %0, ptr noundef nonnull %196) #24
  br label %324

319:                                              ; preds = %307
  %320 = load ptr, ptr %67, align 4
  store volatile ptr %5, ptr %196, align 8
  %321 = getelementptr inbounds %struct.anon.49, ptr %196, i32 0, i32 1
  store volatile ptr %320, ptr %321, align 4
  store volatile ptr %196, ptr %67, align 4
  store volatile ptr %196, ptr %320, align 4
  %322 = load i32, ptr %65, align 4
  %323 = add i32 %322, 1
  store volatile i32 %323, ptr %65, align 4
  br label %324

324:                                              ; preds = %319, %309, %198
  %325 = phi ptr [ %268, %309 ], [ %268, %319 ], [ %190, %198 ]
  %326 = phi i32 [ %310, %309 ], [ %174, %319 ], [ %174, %198 ]
  %327 = phi i32 [ %267, %309 ], [ %267, %319 ], [ %189, %198 ]
  %328 = getelementptr i8, ptr %325, i32 4
  %329 = getelementptr i8, ptr %328, i32 %327
  %330 = ptrtoint ptr %329 to i32
  %331 = add i32 %330, 7
  %332 = and i32 %331, -8
  %333 = inttoptr i32 %332 to ptr
  %334 = load ptr, ptr %165, align 4
  %335 = ptrtoint ptr %334 to i32
  %336 = sub i32 24, %335
  %337 = add i32 %332, %336
  %338 = load i32, ptr %83, align 4
  %339 = icmp ugt i32 %338, %337
  br i1 %339, label %172, label %340

340:                                              ; preds = %324, %181, %172, %163
  %341 = phi i32 [ %72, %163 ], [ %326, %324 ], [ %174, %172 ], [ %174, %181 ]
  %342 = icmp eq ptr %164, null
  br i1 %342, label %343, label %361

343:                                              ; preds = %340
  %344 = getelementptr inbounds %struct.rx_agg, ptr %70, i32 0, i32 4
  %345 = load ptr, ptr %344, align 4
  %346 = getelementptr inbounds %struct.page, ptr %345, i32 0, i32 1
  %347 = load volatile i32, ptr %346, align 4
  %348 = and i32 %347, 1
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %352, label %350, !prof !24

350:                                              ; preds = %343
  %351 = add i32 %347, -1
  br label %354

352:                                              ; preds = %343
  %353 = ptrtoint ptr %345 to i32
  br label %354

354:                                              ; preds = %352, %350
  %355 = phi i32 [ %351, %350 ], [ %353, %352 ]
  %356 = inttoptr i32 %355 to ptr
  %357 = getelementptr inbounds %struct.page, ptr %356, i32 0, i32 3
  %358 = load volatile i32, ptr %357, align 4
  %359 = icmp sgt i32 %358, 1
  br i1 %359, label %360, label %390, !prof !23

360:                                              ; preds = %354
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 2526, i32 noundef 9, ptr noundef null) #24
  br label %390

361:                                              ; preds = %340
  %362 = call i32 @_raw_spin_lock_irqsave(ptr noundef %47) #24
  %363 = getelementptr inbounds %struct.rx_agg, ptr %70, i32 0, i32 4
  %364 = load ptr, ptr %363, align 4
  %365 = getelementptr inbounds %struct.page, ptr %364, i32 0, i32 1
  %366 = load volatile i32, ptr %365, align 4
  %367 = and i32 %366, 1
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %371, label %369, !prof !24

369:                                              ; preds = %361
  %370 = add i32 %366, -1
  br label %373

371:                                              ; preds = %361
  %372 = ptrtoint ptr %364 to i32
  br label %373

373:                                              ; preds = %371, %369
  %374 = phi i32 [ %370, %369 ], [ %372, %371 ]
  %375 = inttoptr i32 %374 to ptr
  %376 = getelementptr inbounds %struct.page, ptr %375, i32 0, i32 3
  %377 = load volatile i32, ptr %376, align 4
  %378 = icmp eq i32 %377, 1
  br i1 %378, label %379, label %383

379:                                              ; preds = %373
  %380 = load ptr, ptr %61, align 4
  %381 = getelementptr inbounds %struct.list_head, ptr %380, i32 0, i32 1
  store ptr %164, ptr %381, align 4
  store ptr %380, ptr %164, align 4
  %382 = getelementptr inbounds %struct.list_head, ptr %164, i32 0, i32 1
  store ptr %61, ptr %382, align 4
  store volatile ptr %164, ptr %61, align 4
  br label %387

383:                                              ; preds = %373
  %384 = load ptr, ptr %68, align 4
  store ptr %70, ptr %68, align 4
  store ptr %61, ptr %70, align 4
  store ptr %384, ptr %74, align 4
  store volatile ptr %70, ptr %384, align 4
  %385 = getelementptr inbounds %struct.rx_agg, ptr %164, i32 0, i32 2
  %386 = load ptr, ptr %385, align 4
  br label %387

387:                                              ; preds = %383, %379
  %388 = phi ptr [ %70, %379 ], [ %164, %383 ]
  %389 = phi ptr [ %78, %379 ], [ %386, %383 ]
  call void @_raw_spin_unlock_irqrestore(ptr noundef %47, i32 noundef %362) #24
  br label %390

390:                                              ; preds = %387, %360, %354, %82, %69
  %391 = phi ptr [ %70, %69 ], [ %70, %82 ], [ %388, %387 ], [ %70, %360 ], [ %70, %354 ]
  %392 = phi ptr [ %78, %69 ], [ %78, %82 ], [ %389, %387 ], [ %78, %360 ], [ %78, %354 ]
  %393 = phi i32 [ %72, %69 ], [ %72, %82 ], [ %341, %387 ], [ %341, %360 ], [ %341, %354 ]
  %394 = icmp eq i32 %71, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %390
  %396 = call fastcc i32 @r8152_submit_rx(ptr noundef %4, ptr noundef %391, i32 noundef 2592) #24
  br label %401

397:                                              ; preds = %390
  %398 = getelementptr inbounds %struct.urb, ptr %392, i32 0, i32 20
  store i32 0, ptr %398, align 4
  %399 = load ptr, ptr %76, align 4
  store ptr %391, ptr %76, align 4
  store ptr %73, ptr %391, align 4
  %400 = getelementptr inbounds %struct.list_head, ptr %391, i32 0, i32 1
  store ptr %399, ptr %400, align 4
  store volatile ptr %391, ptr %399, align 4
  br label %401

401:                                              ; preds = %397, %395
  %402 = phi i32 [ %71, %397 ], [ %396, %395 ]
  %403 = icmp eq ptr %73, %3
  br i1 %403, label %404, label %69

404:                                              ; preds = %401, %57
  %405 = phi i32 [ %41, %57 ], [ %393, %401 ]
  %406 = load volatile ptr, ptr %3, align 8
  %407 = icmp eq ptr %406, %3
  br i1 %407, label %418, label %408

408:                                              ; preds = %404
  %409 = call i32 @_raw_spin_lock_irqsave(ptr noundef %47) #24
  %410 = load volatile ptr, ptr %3, align 8
  %411 = icmp eq ptr %410, %3
  br i1 %411, label %417, label %412

412:                                              ; preds = %408
  %413 = getelementptr i8, ptr %0, i32 376
  %414 = load ptr, ptr %413, align 4
  %415 = load ptr, ptr %46, align 4
  %416 = getelementptr inbounds %struct.list_head, ptr %410, i32 0, i32 1
  store ptr %414, ptr %416, align 4
  store ptr %410, ptr %414, align 4
  store ptr %42, ptr %415, align 4
  store ptr %415, ptr %413, align 4
  br label %417

417:                                              ; preds = %412, %408
  call void @_raw_spin_unlock_irqrestore(ptr noundef %47, i32 noundef %409) #24
  br label %418

418:                                              ; preds = %417, %404, %40
  %419 = phi i32 [ %41, %40 ], [ %405, %404 ], [ %405, %417 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #24
  %420 = icmp slt i32 %419, %1
  br i1 %420, label %421, label %429

421:                                              ; preds = %418
  %422 = call zeroext i1 @napi_complete_done(ptr noundef %0, i32 noundef %419) #24
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  %424 = load volatile ptr, ptr %42, align 4
  %425 = icmp eq ptr %424, %42
  br i1 %425, label %429, label %426

426:                                              ; preds = %423
  %427 = call zeroext i1 @napi_schedule_prep(ptr noundef %0) #24
  br i1 %427, label %428, label %429

428:                                              ; preds = %426
  call void @__napi_schedule(ptr noundef %0) #24
  br label %429

429:                                              ; preds = %428, %426, %423, %421, %418
  ret i32 %419
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_set_wakeup_enable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @tasklet_kill(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_driver_set_configuration(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_find_common_endpoints(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8152b_init(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = load volatile i32, ptr %0, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %140

14:                                               ; preds = %1
  %15 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %16 = and i16 %15, 2048
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = and i16 %15, -2049
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %19) #24
  br label %20

20:                                               ; preds = %18, %14
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext 784) #24
  tail call void @msleep(i32 noundef 20) #24
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %22 = load i8, ptr %21, align 8
  %23 = icmp eq i8 %22, 1
  br i1 %23, label %24, label %48

24:                                               ; preds = %20
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %25 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8816, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 460) #24
  %26 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %27 = and i32 %26, -117506048
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 %27, ptr %9, align 4
  %28 = load volatile i32, ptr %0, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %47

31:                                               ; preds = %24
  %32 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %33 = icmp eq ptr %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %38 = load i32, ptr %37, align 8
  %39 = call i32 @usb_control_msg(ptr noundef %36, i32 noundef %38, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8816, i16 noundef zeroext 460, ptr noundef nonnull %32, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %32) #24
  %40 = icmp eq i32 %39, -19
  br i1 %40, label %41, label %47

41:                                               ; preds = %34
  %42 = load ptr, ptr %35, align 4
  %43 = getelementptr inbounds %struct.usb_device, ptr %42, i32 0, i32 3
  %44 = load i32, ptr %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %47

47:                                               ; preds = %46, %41, %34, %31, %24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  br label %48

48:                                               ; preds = %47, %20
  call fastcc void @r8152_power_cut_en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %49 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 307) #24
  %50 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %51 = and i32 %50, 65343
  %52 = or i32 %51, 192
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 %52, ptr %7, align 4
  %53 = load volatile i32, ptr %0, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %72

56:                                               ; preds = %48
  %57 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %58 = icmp eq ptr %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 4
  %62 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %63 = load i32, ptr %62, align 8
  %64 = call i32 @usb_control_msg(ptr noundef %61, i32 noundef %63, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 307, ptr noundef nonnull %57, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %57) #24
  %65 = icmp eq i32 %64, -19
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = load ptr, ptr %60, align 4
  %68 = getelementptr inbounds %struct.usb_device, ptr %67, i32 0, i32 3
  %69 = load i32, ptr %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %66
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %72

72:                                               ; preds = %71, %66, %59, %56, %48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %73 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8000, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 256) #24
  %74 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %75 = and i32 %74, -252661520
  %76 = or i32 %75, 117526279
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %76, ptr %5, align 4
  %77 = load volatile i32, ptr %0, align 4
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %96

80:                                               ; preds = %72
  %81 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %82 = icmp eq ptr %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %85 = load ptr, ptr %84, align 4
  %86 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %87 = load i32, ptr %86, align 8
  %88 = call i32 @usb_control_msg(ptr noundef %85, i32 noundef %87, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8000, i16 noundef zeroext 511, ptr noundef nonnull %81, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %81) #24
  %89 = icmp eq i32 %88, -19
  br i1 %89, label %90, label %96

90:                                               ; preds = %83
  %91 = load ptr, ptr %84, align 4
  %92 = getelementptr inbounds %struct.usb_device, ptr %91, i32 0, i32 3
  %93 = load i32, ptr %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %90
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %96

96:                                               ; preds = %95, %90, %83, %80, %72
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 983040, ptr %4, align 4
  %97 = load volatile i32, ptr %0, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %116

100:                                              ; preds = %96
  %101 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %102 = icmp eq ptr %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %105 = load ptr, ptr %104, align 4
  %106 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %107 = load i32, ptr %106, align 8
  %108 = call i32 @usb_control_msg(ptr noundef %105, i32 noundef %107, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8160, i16 noundef zeroext 460, ptr noundef nonnull %101, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %101) #24
  %109 = icmp eq i32 %108, -19
  br i1 %109, label %110, label %116

110:                                              ; preds = %103
  %111 = load ptr, ptr %104, align 4
  %112 = getelementptr inbounds %struct.usb_device, ptr %111, i32 0, i32 3
  %113 = load i32, ptr %112, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %110
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %116

116:                                              ; preds = %115, %110, %103, %100, %96
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call fastcc void @rtl_tally_reset(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %117 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %118 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %119 = and i32 %118, -9502720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %119, ptr %2, align 4
  %120 = load volatile i32, ptr %0, align 4
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %139

123:                                              ; preds = %116
  %124 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %125 = icmp eq ptr %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %128 = load ptr, ptr %127, align 4
  %129 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %130 = load i32, ptr %129, align 8
  %131 = call i32 @usb_control_msg(ptr noundef %128, i32 noundef %130, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %124, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %124) #24
  %132 = icmp eq i32 %131, -19
  br i1 %132, label %133, label %139

133:                                              ; preds = %126
  %134 = load ptr, ptr %127, align 4
  %135 = getelementptr inbounds %struct.usb_device, ptr %134, i32 0, i32 3
  %136 = load i32, ptr %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %133
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %139

139:                                              ; preds = %138, %133, %126, %123, %116
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  br label %140

140:                                              ; preds = %139, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_enable(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = load volatile i32, ptr %0, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 20
  %10 = load i32, ptr %9, align 4
  %11 = add i32 %10, 30
  %12 = udiv i32 16384, %11
  %13 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 29
  store i32 %12, ptr %13, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %14 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 307) #24
  %15 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %16 = and i32 %15, 4
  %17 = icmp ne i32 %16, 0
  call fastcc void @rtl_eee_plus_en(ptr noundef %0, i1 noundef zeroext %17) #24
  call fastcc void @rtl_enable(ptr noundef %0)
  br label %18

18:                                               ; preds = %6, %1
  %19 = phi i32 [ 0, %6 ], [ -19, %1 ]
  ret i32 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_disable(ptr noundef %0) #0 {
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext 784) #24
  tail call void @msleep(i32 noundef 20) #24
  tail call fastcc void @rtl_disable(ptr noundef %0)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext -31984) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_up(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = load volatile i32, ptr %0, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %412

29:                                               ; preds = %1
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext 784) #24
  tail call void @msleep(i32 noundef 20) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #24
  store i32 0, ptr %25, align 4, !annotation !8
  %30 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %25, i16 noundef zeroext 256) #24
  %31 = load i32, ptr %25, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #24
  %32 = and i32 %31, -16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %24) #24
  store i32 %32, ptr %24, align 4
  %33 = load volatile i32, ptr %0, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %52

36:                                               ; preds = %29
  %37 = call ptr @kmemdup(ptr noundef nonnull %24, i32 noundef 4, i32 noundef 3264) #24
  %38 = icmp eq ptr %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %43 = load i32, ptr %42, align 8
  %44 = call i32 @usb_control_msg(ptr noundef %41, i32 noundef %43, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %37, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %37) #24
  %45 = icmp eq i32 %44, -19
  br i1 %45, label %46, label %52

46:                                               ; preds = %39
  %47 = load ptr, ptr %40, align 4
  %48 = getelementptr inbounds %struct.usb_device, ptr %47, i32 0, i32 3
  %49 = load i32, ptr %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %52

52:                                               ; preds = %51, %46, %39, %36, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %24) #24
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext true) #24
  call fastcc void @r8153_teredo_off(ptr noundef %0) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %23) #24
  store i32 0, ptr %23, align 4
  %53 = load volatile i32, ptr %0, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %72

56:                                               ; preds = %52
  %57 = call ptr @kmemdup(ptr noundef nonnull %23, i32 noundef 4, i32 noundef 3264) #24
  %58 = icmp eq ptr %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 4
  %62 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %63 = load i32, ptr %62, align 8
  %64 = call i32 @usb_control_msg(ptr noundef %61, i32 noundef %63, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %57, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %57) #24
  %65 = icmp eq i32 %64, -19
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = load ptr, ptr %60, align 4
  %68 = getelementptr inbounds %struct.usb_device, ptr %67, i32 0, i32 3
  %69 = load i32, ptr %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %66
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %72

72:                                               ; preds = %71, %66, %59, %56, %52
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #24
  store i32 0, ptr %22, align 4
  %73 = load volatile i32, ptr %0, align 4
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %92

76:                                               ; preds = %72
  %77 = call ptr @kmemdup(ptr noundef nonnull %22, i32 noundef 4, i32 noundef 3264) #24
  %78 = icmp eq ptr %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %81 = load ptr, ptr %80, align 4
  %82 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %83 = load i32, ptr %82, align 8
  %84 = call i32 @usb_control_msg(ptr noundef %81, i32 noundef %83, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6128, i16 noundef zeroext 392, ptr noundef nonnull %77, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %77) #24
  %85 = icmp eq i32 %84, -19
  br i1 %85, label %86, label %92

86:                                               ; preds = %79
  %87 = load ptr, ptr %80, align 4
  %88 = getelementptr inbounds %struct.usb_device, ptr %87, i32 0, i32 3
  %89 = load i32, ptr %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %86
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %92

92:                                               ; preds = %91, %86, %79, %76, %72
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #24
  store i32 0, ptr %21, align 4, !annotation !8
  %93 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %21, i16 noundef zeroext 256) #24
  %94 = load i32, ptr %21, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #24
  %95 = and i32 %94, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #24
  store i32 %95, ptr %20, align 4
  %96 = load volatile i32, ptr %0, align 4
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %115

99:                                               ; preds = %92
  %100 = call ptr @kmemdup(ptr noundef nonnull %20, i32 noundef 4, i32 noundef 3264) #24
  %101 = icmp eq ptr %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %104 = load ptr, ptr %103, align 4
  %105 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %106 = load i32, ptr %105, align 8
  %107 = call i32 @usb_control_msg(ptr noundef %104, i32 noundef %106, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %100, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %100) #24
  %108 = icmp eq i32 %107, -19
  br i1 %108, label %109, label %115

109:                                              ; preds = %102
  %110 = load ptr, ptr %103, align 4
  %111 = getelementptr inbounds %struct.usb_device, ptr %110, i32 0, i32 3
  %112 = load i32, ptr %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %109
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %115

115:                                              ; preds = %114, %109, %102, %99, %92
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #24
  store i32 0, ptr %19, align 4, !annotation !8
  %116 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %19, i16 noundef zeroext 460) #24
  %117 = load i32, ptr %19, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #24
  %118 = and i32 %117, -1073807360
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #24
  store i32 %118, ptr %18, align 4
  %119 = load volatile i32, ptr %0, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %115
  %123 = call ptr @kmemdup(ptr noundef nonnull %18, i32 noundef 4, i32 noundef 3264) #24
  %124 = icmp eq ptr %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %127 = load ptr, ptr %126, align 4
  %128 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %129 = load i32, ptr %128, align 8
  %130 = call i32 @usb_control_msg(ptr noundef %127, i32 noundef %129, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %123, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %123) #24
  %131 = icmp eq i32 %130, -19
  br i1 %131, label %132, label %138

132:                                              ; preds = %125
  %133 = load ptr, ptr %126, align 4
  %134 = getelementptr inbounds %struct.usb_device, ptr %133, i32 0, i32 3
  %135 = load i32, ptr %134, align 8
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %138

138:                                              ; preds = %137, %132, %125, %122, %115
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #24
  br label %139

139:                                              ; preds = %145, %138
  %140 = phi i32 [ 0, %138 ], [ %146, %145 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 0, ptr %17, align 4, !annotation !8
  %141 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %17, i16 noundef zeroext 256) #24
  %142 = load i32, ptr %17, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  %143 = and i32 %142, 33554432
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %139
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %146 = add nuw nsw i32 %140, 1
  %147 = icmp eq i32 %146, 1000
  br i1 %147, label %148, label %139

148:                                              ; preds = %145, %139
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 0, ptr %16, align 4, !annotation !8
  %149 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %16, i16 noundef zeroext 460) #24
  %150 = load i32, ptr %16, align 4
  %151 = and i32 %150, 2147418112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  %152 = or i32 %151, -2147483648
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 %152, ptr %15, align 4
  %153 = load volatile i32, ptr %0, align 4
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %172

156:                                              ; preds = %148
  %157 = call ptr @kmemdup(ptr noundef nonnull %15, i32 noundef 4, i32 noundef 3264) #24
  %158 = icmp eq ptr %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %161 = load ptr, ptr %160, align 4
  %162 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %163 = load i32, ptr %162, align 8
  %164 = call i32 @usb_control_msg(ptr noundef %161, i32 noundef %163, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %157, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %157) #24
  %165 = icmp eq i32 %164, -19
  br i1 %165, label %166, label %172

166:                                              ; preds = %159
  %167 = load ptr, ptr %160, align 4
  %168 = getelementptr inbounds %struct.usb_device, ptr %167, i32 0, i32 3
  %169 = load i32, ptr %168, align 8
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %166
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %172

172:                                              ; preds = %171, %166, %159, %156, %148
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  br label %173

173:                                              ; preds = %179, %172
  %174 = phi i32 [ 0, %172 ], [ %180, %179 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 0, ptr %14, align 4, !annotation !8
  %175 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %14, i16 noundef zeroext 256) #24
  %176 = load i32, ptr %14, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  %177 = and i32 %176, 33554432
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %173
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %180 = add nuw nsw i32 %174, 1
  %181 = icmp eq i32 %180, 1000
  br i1 %181, label %182, label %173

182:                                              ; preds = %179, %173
  call fastcc void @rtl8152_nic_reset(ptr noundef %0) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 524290, ptr %13, align 4
  %183 = load volatile i32, ptr %0, align 4
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %202

186:                                              ; preds = %182
  %187 = call ptr @kmemdup(ptr noundef nonnull %13, i32 noundef 4, i32 noundef 3264) #24
  %188 = icmp eq ptr %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %191 = load ptr, ptr %190, align 4
  %192 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %193 = load i32, ptr %192, align 8
  %194 = call i32 @usb_control_msg(ptr noundef %191, i32 noundef %193, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16224, i16 noundef zeroext 511, ptr noundef nonnull %187, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %187) #24
  %195 = icmp eq i32 %194, -19
  br i1 %195, label %196, label %202

196:                                              ; preds = %189
  %197 = load ptr, ptr %190, align 4
  %198 = getelementptr inbounds %struct.usb_device, ptr %197, i32 0, i32 3
  %199 = load i32, ptr %198, align 8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %196
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %202

202:                                              ; preds = %201, %196, %189, %186, %182
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %203 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %204 = load ptr, ptr %203, align 4
  %205 = getelementptr inbounds %struct.usb_device, ptr %204, i32 0, i32 4
  %206 = load i32, ptr %205, align 4
  %207 = add i32 %206, -1
  %208 = icmp ult i32 %207, 2
  br i1 %208, label %209, label %248

209:                                              ; preds = %202
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 96, ptr %12, align 4
  %210 = load volatile i32, ptr %0, align 4
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %228

213:                                              ; preds = %209
  %214 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %215 = icmp eq ptr %214, null
  br i1 %215, label %228, label %216

216:                                              ; preds = %213
  %217 = load ptr, ptr %203, align 4
  %218 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %219 = load i32, ptr %218, align 8
  %220 = call i32 @usb_control_msg(ptr noundef %217, i32 noundef %219, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16220, i16 noundef zeroext 511, ptr noundef nonnull %214, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %214) #24
  %221 = icmp eq i32 %220, -19
  br i1 %221, label %222, label %228

222:                                              ; preds = %216
  %223 = load ptr, ptr %203, align 4
  %224 = getelementptr inbounds %struct.usb_device, ptr %223, i32 0, i32 3
  %225 = load i32, ptr %224, align 8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %222
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %228

228:                                              ; preds = %227, %222, %216, %213, %209
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 120, ptr %11, align 4
  %229 = load volatile i32, ptr %0, align 4
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %247

232:                                              ; preds = %228
  %233 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %234 = icmp eq ptr %233, null
  br i1 %234, label %247, label %235

235:                                              ; preds = %232
  %236 = load ptr, ptr %203, align 4
  %237 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %238 = load i32, ptr %237, align 8
  %239 = call i32 @usb_control_msg(ptr noundef %236, i32 noundef %238, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16216, i16 noundef zeroext 511, ptr noundef nonnull %233, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %233) #24
  %240 = icmp eq i32 %239, -19
  br i1 %240, label %241, label %247

241:                                              ; preds = %235
  %242 = load ptr, ptr %203, align 4
  %243 = getelementptr inbounds %struct.usb_device, ptr %242, i32 0, i32 3
  %244 = load i32, ptr %243, align 8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %241
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %247

247:                                              ; preds = %246, %241, %235, %232, %228
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  br label %287

248:                                              ; preds = %202
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 56, ptr %10, align 4
  %249 = load volatile i32, ptr %0, align 4
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %267

252:                                              ; preds = %248
  %253 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %254 = icmp eq ptr %253, null
  br i1 %254, label %267, label %255

255:                                              ; preds = %252
  %256 = load ptr, ptr %203, align 4
  %257 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %258 = load i32, ptr %257, align 8
  %259 = call i32 @usb_control_msg(ptr noundef %256, i32 noundef %258, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16220, i16 noundef zeroext 511, ptr noundef nonnull %253, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %253) #24
  %260 = icmp eq i32 %259, -19
  br i1 %260, label %261, label %267

261:                                              ; preds = %255
  %262 = load ptr, ptr %203, align 4
  %263 = getelementptr inbounds %struct.usb_device, ptr %262, i32 0, i32 3
  %264 = load i32, ptr %263, align 8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %261
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %267

267:                                              ; preds = %266, %261, %255, %252, %248
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 72, ptr %9, align 4
  %268 = load volatile i32, ptr %0, align 4
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %286

271:                                              ; preds = %267
  %272 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %273 = icmp eq ptr %272, null
  br i1 %273, label %286, label %274

274:                                              ; preds = %271
  %275 = load ptr, ptr %203, align 4
  %276 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %277 = load i32, ptr %276, align 8
  %278 = call i32 @usb_control_msg(ptr noundef %275, i32 noundef %277, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16216, i16 noundef zeroext 511, ptr noundef nonnull %272, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %272) #24
  %279 = icmp eq i32 %278, -19
  br i1 %279, label %280, label %286

280:                                              ; preds = %274
  %281 = load ptr, ptr %203, align 4
  %282 = getelementptr inbounds %struct.usb_device, ptr %281, i32 0, i32 3
  %283 = load i32, ptr %282, align 8
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %280
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %286

286:                                              ; preds = %285, %280, %274, %271, %267
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  br label %287

287:                                              ; preds = %286, %247
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 16777224, ptr %8, align 4
  %288 = load volatile i32, ptr %0, align 4
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %306

291:                                              ; preds = %287
  %292 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %293 = icmp eq ptr %292, null
  br i1 %293, label %306, label %294

294:                                              ; preds = %291
  %295 = load ptr, ptr %203, align 4
  %296 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %297 = load i32, ptr %296, align 8
  %298 = call i32 @usb_control_msg(ptr noundef %295, i32 noundef %297, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6632, i16 noundef zeroext 511, ptr noundef nonnull %292, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %292) #24
  %299 = icmp eq i32 %298, -19
  br i1 %299, label %300, label %306

300:                                              ; preds = %294
  %301 = load ptr, ptr %203, align 4
  %302 = getelementptr inbounds %struct.usb_device, ptr %301, i32 0, i32 3
  %303 = load i32, ptr %302, align 8
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %300
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %306

306:                                              ; preds = %305, %300, %294, %291, %287
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 196608, ptr %7, align 4
  %307 = load volatile i32, ptr %0, align 4
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %325

310:                                              ; preds = %306
  %311 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %312 = icmp eq ptr %311, null
  br i1 %312, label %325, label %313

313:                                              ; preds = %310
  %314 = load ptr, ptr %203, align 4
  %315 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %316 = load i32, ptr %315, align 8
  %317 = call i32 @usb_control_msg(ptr noundef %314, i32 noundef %316, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11256, i16 noundef zeroext 68, ptr noundef nonnull %311, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %311) #24
  %318 = icmp eq i32 %317, -19
  br i1 %318, label %319, label %325

319:                                              ; preds = %313
  %320 = load ptr, ptr %203, align 4
  %321 = getelementptr inbounds %struct.usb_device, ptr %320, i32 0, i32 3
  %322 = load i32, ptr %321, align 8
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %319
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %325

325:                                              ; preds = %324, %319, %313, %310, %306
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 2048000384, ptr %6, align 4
  %326 = load volatile i32, ptr %0, align 4
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %344

329:                                              ; preds = %325
  %330 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %331 = icmp eq ptr %330, null
  br i1 %331, label %344, label %332

332:                                              ; preds = %329
  %333 = load ptr, ptr %203, align 4
  %334 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %335 = load i32, ptr %334, align 8
  %336 = call i32 @usb_control_msg(ptr noundef %333, i32 noundef %335, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11252, i16 noundef zeroext 255, ptr noundef nonnull %330, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %330) #24
  %337 = icmp eq i32 %336, -19
  br i1 %337, label %338, label %344

338:                                              ; preds = %332
  %339 = load ptr, ptr %203, align 4
  %340 = getelementptr inbounds %struct.usb_device, ptr %339, i32 0, i32 3
  %341 = load i32, ptr %340, align 8
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %338
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %344

344:                                              ; preds = %343, %338, %332, %329, %325
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 257, ptr %5, align 4
  %345 = load volatile i32, ptr %0, align 4
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %363

348:                                              ; preds = %344
  %349 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %350 = icmp eq ptr %349, null
  br i1 %350, label %363, label %351

351:                                              ; preds = %348
  %352 = load ptr, ptr %203, align 4
  %353 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %354 = load i32, ptr %353, align 8
  %355 = call i32 @usb_control_msg(ptr noundef %352, i32 noundef %354, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11212, i16 noundef zeroext 255, ptr noundef nonnull %349, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %349) #24
  %356 = icmp eq i32 %355, -19
  br i1 %356, label %357, label %363

357:                                              ; preds = %351
  %358 = load ptr, ptr %203, align 4
  %359 = getelementptr inbounds %struct.usb_device, ptr %358, i32 0, i32 3
  %360 = load i32, ptr %359, align 8
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %357
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %363

363:                                              ; preds = %362, %357, %351, %348, %344
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %364 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %365 = load ptr, ptr %364, align 4
  %366 = getelementptr inbounds %struct.net_device, ptr %365, i32 0, i32 23
  %367 = load i64, ptr %366, align 16
  %368 = and i64 %367, 256
  %369 = icmp ne i64 %368, 0
  call fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext %369) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 99745792, ptr %4, align 4
  %370 = load volatile i32, ptr %0, align 4
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %388

373:                                              ; preds = %363
  %374 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %375 = icmp eq ptr %374, null
  br i1 %375, label %388, label %376

376:                                              ; preds = %373
  %377 = load ptr, ptr %203, align 4
  %378 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %379 = load i32, ptr %378, align 8
  %380 = call i32 @usb_control_msg(ptr noundef %377, i32 noundef %379, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16364, i16 noundef zeroext 460, ptr noundef nonnull %374, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %374) #24
  %381 = icmp eq i32 %380, -19
  br i1 %381, label %382, label %388

382:                                              ; preds = %376
  %383 = load ptr, ptr %203, align 4
  %384 = getelementptr inbounds %struct.usb_device, ptr %383, i32 0, i32 3
  %385 = load i32, ptr %384, align 8
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %388

387:                                              ; preds = %382
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %388

388:                                              ; preds = %387, %382, %376, %373, %363
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %389 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6640, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %390 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %391 = and i32 %390, 65407
  %392 = or i32 %391, 128
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %392, ptr %2, align 4
  %393 = load volatile i32, ptr %0, align 4
  %394 = and i32 %393, 1
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %411

396:                                              ; preds = %388
  %397 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %398 = icmp eq ptr %397, null
  br i1 %398, label %411, label %399

399:                                              ; preds = %396
  %400 = load ptr, ptr %203, align 4
  %401 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %402 = load i32, ptr %401, align 8
  %403 = call i32 @usb_control_msg(ptr noundef %400, i32 noundef %402, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6640, i16 noundef zeroext 307, ptr noundef nonnull %397, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %397) #24
  %404 = icmp eq i32 %403, -19
  br i1 %404, label %405, label %411

405:                                              ; preds = %399
  %406 = load ptr, ptr %203, align 4
  %407 = getelementptr inbounds %struct.usb_device, ptr %406, i32 0, i32 3
  %408 = load i32, ptr %407, align 8
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %405
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %411

411:                                              ; preds = %410, %405, %399, %396, %388
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext -31984) #24
  br label %412

412:                                              ; preds = %411, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_down(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = load volatile i32, ptr %0, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %1
  tail call fastcc void @rtl_drop_queued_tx(ptr noundef %0)
  br label %241

22:                                               ; preds = %1
  tail call fastcc void @r8152_power_cut_en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext 784) #24
  tail call void @msleep(i32 noundef 20) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 0, ptr %17, align 4, !annotation !8
  %23 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %17, i16 noundef zeroext 256) #24
  %24 = load i32, ptr %17, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  %25 = and i32 %24, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 %25, ptr %16, align 4
  %26 = load volatile i32, ptr %0, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %22
  %30 = call ptr @kmemdup(ptr noundef nonnull %16, i32 noundef 4, i32 noundef 3264) #24
  %31 = icmp eq ptr %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %36 = load i32, ptr %35, align 8
  %37 = call i32 @usb_control_msg(ptr noundef %34, i32 noundef %36, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %30, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %30) #24
  %38 = icmp eq i32 %37, -19
  br i1 %38, label %39, label %45

39:                                               ; preds = %32
  %40 = load ptr, ptr %33, align 4
  %41 = getelementptr inbounds %struct.usb_device, ptr %40, i32 0, i32 3
  %42 = load i32, ptr %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %45

45:                                               ; preds = %44, %39, %32, %29, %22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 25165827, ptr %15, align 4
  %46 = load volatile i32, ptr %0, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %45
  %50 = call ptr @kmemdup(ptr noundef nonnull %15, i32 noundef 4, i32 noundef 3264) #24
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %56 = load i32, ptr %55, align 8
  %57 = call i32 @usb_control_msg(ptr noundef %54, i32 noundef %56, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16224, i16 noundef zeroext 511, ptr noundef nonnull %50, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %50) #24
  %58 = icmp eq i32 %57, -19
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = load ptr, ptr %53, align 4
  %61 = getelementptr inbounds %struct.usb_device, ptr %60, i32 0, i32 3
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %65

65:                                               ; preds = %64, %59, %52, %49, %45
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 74, ptr %14, align 4
  %66 = load volatile i32, ptr %0, align 4
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %85

69:                                               ; preds = %65
  %70 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %71 = icmp eq ptr %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %74 = load ptr, ptr %73, align 4
  %75 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %76 = load i32, ptr %75, align 8
  %77 = call i32 @usb_control_msg(ptr noundef %74, i32 noundef %76, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16220, i16 noundef zeroext 511, ptr noundef nonnull %70, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %70) #24
  %78 = icmp eq i32 %77, -19
  br i1 %78, label %79, label %85

79:                                               ; preds = %72
  %80 = load ptr, ptr %73, align 4
  %81 = getelementptr inbounds %struct.usb_device, ptr %80, i32 0, i32 3
  %82 = load i32, ptr %81, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %79
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %85

85:                                               ; preds = %84, %79, %72, %69, %65
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 90, ptr %13, align 4
  %86 = load volatile i32, ptr %0, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %105

89:                                               ; preds = %85
  %90 = call ptr @kmemdup(ptr noundef nonnull %13, i32 noundef 4, i32 noundef 3264) #24
  %91 = icmp eq ptr %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %94 = load ptr, ptr %93, align 4
  %95 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %96 = load i32, ptr %95, align 8
  %97 = call i32 @usb_control_msg(ptr noundef %94, i32 noundef %96, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16216, i16 noundef zeroext 511, ptr noundef nonnull %90, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %90) #24
  %98 = icmp eq i32 %97, -19
  br i1 %98, label %99, label %105

99:                                               ; preds = %92
  %100 = load ptr, ptr %93, align 4
  %101 = getelementptr inbounds %struct.usb_device, ptr %100, i32 0, i32 3
  %102 = load i32, ptr %101, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %105

105:                                              ; preds = %104, %99, %92, %89, %85
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  call fastcc void @rtl_disable(ptr noundef %0) #24
  br label %106

106:                                              ; preds = %112, %105
  %107 = phi i32 [ 0, %105 ], [ %113, %112 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 0, ptr %12, align 4, !annotation !8
  %108 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %12, i16 noundef zeroext 256) #24
  %109 = load i32, ptr %12, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  %110 = and i32 %109, 33554432
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %113 = add nuw nsw i32 %107, 1
  %114 = icmp eq i32 %113, 1000
  br i1 %114, label %115, label %106

115:                                              ; preds = %112, %106
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %116 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 460) #24
  %117 = load i32, ptr %11, align 4
  %118 = and i32 %117, 2147418112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %119 = or i32 %118, -2147483648
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 %119, ptr %10, align 4
  %120 = load volatile i32, ptr %0, align 4
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %139

123:                                              ; preds = %115
  %124 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %125 = icmp eq ptr %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %128 = load ptr, ptr %127, align 4
  %129 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %130 = load i32, ptr %129, align 8
  %131 = call i32 @usb_control_msg(ptr noundef %128, i32 noundef %130, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %124, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %124) #24
  %132 = icmp eq i32 %131, -19
  br i1 %132, label %133, label %139

133:                                              ; preds = %126
  %134 = load ptr, ptr %127, align 4
  %135 = getelementptr inbounds %struct.usb_device, ptr %134, i32 0, i32 3
  %136 = load i32, ptr %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %133
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %139

139:                                              ; preds = %138, %133, %126, %123, %115
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  br label %140

140:                                              ; preds = %146, %139
  %141 = phi i32 [ 0, %139 ], [ %147, %146 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %142 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 256) #24
  %143 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %144 = and i32 %143, 33554432
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %140
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %147 = add nuw nsw i32 %141, 1
  %148 = icmp eq i32 %147, 1000
  br i1 %148, label %149, label %140

149:                                              ; preds = %146, %140
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 99745792, ptr %8, align 4
  %150 = load volatile i32, ptr %0, align 4
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %169

153:                                              ; preds = %149
  %154 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %155 = icmp eq ptr %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %158 = load ptr, ptr %157, align 4
  %159 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %160 = load i32, ptr %159, align 8
  %161 = call i32 @usb_control_msg(ptr noundef %158, i32 noundef %160, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16364, i16 noundef zeroext 460, ptr noundef nonnull %154, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %154) #24
  %162 = icmp eq i32 %161, -19
  br i1 %162, label %163, label %169

163:                                              ; preds = %156
  %164 = load ptr, ptr %157, align 4
  %165 = getelementptr inbounds %struct.usb_device, ptr %164, i32 0, i32 3
  %166 = load i32, ptr %165, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %163
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %169

169:                                              ; preds = %168, %163, %156, %153, %149
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext true) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %170 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11872, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %171 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %172 = and i32 %171, 65534
  %173 = or i32 %172, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %173, ptr %6, align 4
  %174 = load volatile i32, ptr %0, align 4
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %193

177:                                              ; preds = %169
  %178 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %179 = icmp eq ptr %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %182 = load ptr, ptr %181, align 4
  %183 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %184 = load i32, ptr %183, align 8
  %185 = call i32 @usb_control_msg(ptr noundef %182, i32 noundef %184, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11872, i16 noundef zeroext 307, ptr noundef nonnull %178, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %178) #24
  %186 = icmp eq i32 %185, -19
  br i1 %186, label %187, label %193

187:                                              ; preds = %180
  %188 = load ptr, ptr %181, align 4
  %189 = getelementptr inbounds %struct.usb_device, ptr %188, i32 0, i32 3
  %190 = load i32, ptr %189, align 8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %187
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %193

193:                                              ; preds = %192, %187, %180, %177, %169
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %194 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  %195 = load i32, ptr %5, align 4
  %196 = and i32 %195, 2113929216
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %197 = or i32 %196, -2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %197, ptr %4, align 4
  %198 = load volatile i32, ptr %0, align 4
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %217

201:                                              ; preds = %193
  %202 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %203 = icmp eq ptr %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %206 = load ptr, ptr %205, align 4
  %207 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %208 = load i32, ptr %207, align 8
  %209 = call i32 @usb_control_msg(ptr noundef %206, i32 noundef %208, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %202, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %202) #24
  %210 = icmp eq i32 %209, -19
  br i1 %210, label %211, label %217

211:                                              ; preds = %204
  %212 = load ptr, ptr %205, align 4
  %213 = getelementptr inbounds %struct.usb_device, ptr %212, i32 0, i32 3
  %214 = load i32, ptr %213, align 8
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %211
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %217

217:                                              ; preds = %216, %211, %204, %201, %193
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext false) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %218 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 256) #24
  %219 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %220 = or i32 %219, 14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %220, ptr %2, align 4
  %221 = load volatile i32, ptr %0, align 4
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %240

224:                                              ; preds = %217
  %225 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %226 = icmp eq ptr %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %229 = load ptr, ptr %228, align 4
  %230 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %231 = load i32, ptr %230, align 8
  %232 = call i32 @usb_control_msg(ptr noundef %229, i32 noundef %231, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %225, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %225) #24
  %233 = icmp eq i32 %232, -19
  br i1 %233, label %234, label %240

234:                                              ; preds = %227
  %235 = load ptr, ptr %228, align 4
  %236 = getelementptr inbounds %struct.usb_device, ptr %235, i32 0, i32 3
  %237 = load i32, ptr %236, align 8
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %234
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %240

240:                                              ; preds = %239, %234, %227, %224, %217
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext -31984) #24
  br label %241

241:                                              ; preds = %240, %21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_unload(ptr noundef %0) #0 {
  %2 = load volatile i32, ptr %0, align 4
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %7 = load i8, ptr %6, align 8
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call fastcc void @r8152_power_cut_en(ptr noundef %0, i1 noundef zeroext true)
  br label %10

10:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8152_get_eee(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 3) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23524, i16 noundef zeroext 20) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 16387) #24
  %3 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23524) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 0) #24
  %4 = zext i16 %3 to i32
  %5 = shl nuw nsw i32 %4, 2
  %6 = and i32 %5, 8
  %7 = shl nuw nsw i32 %4, 3
  %8 = and i32 %7, 32
  %9 = or i32 %8, %6
  %10 = shl nuw nsw i32 %4, 9
  %11 = and i32 %10, 4096
  %12 = or i32 %9, %11
  %13 = shl nuw nsw i32 %4, 13
  %14 = and i32 %13, 131072
  %15 = or i32 %12, %14
  %16 = and i32 %13, 262144
  %17 = or i32 %15, %16
  %18 = and i32 %13, 524288
  %19 = or i32 %17, %18
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 7) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23524, i16 noundef zeroext 60) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 16391) #24
  %20 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23524) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 0) #24
  %21 = zext i16 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = and i32 %22, 8
  %24 = shl nuw nsw i32 %21, 3
  %25 = and i32 %24, 32
  %26 = or i32 %25, %23
  %27 = shl nuw nsw i32 %21, 9
  %28 = and i32 %27, 4096
  %29 = or i32 %26, %28
  %30 = shl nuw nsw i32 %21, 13
  %31 = and i32 %30, 131072
  %32 = or i32 %29, %31
  %33 = and i32 %30, 262144
  %34 = or i32 %32, %33
  %35 = and i32 %30, 524288
  %36 = or i32 %34, %35
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 7) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23524, i16 noundef zeroext 61) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 16391) #24
  %37 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23524) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 0) #24
  %38 = zext i16 %37 to i32
  %39 = shl nuw nsw i32 %38, 2
  %40 = and i32 %39, 8
  %41 = shl nuw nsw i32 %38, 3
  %42 = and i32 %41, 32
  %43 = or i32 %42, %40
  %44 = shl nuw nsw i32 %38, 9
  %45 = and i32 %44, 4096
  %46 = or i32 %43, %45
  %47 = shl nuw nsw i32 %38, 13
  %48 = and i32 %47, 131072
  %49 = or i32 %46, %48
  %50 = and i32 %47, 262144
  %51 = or i32 %49, %50
  %52 = and i32 %47, 524288
  %53 = or i32 %51, %52
  %54 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %55 = load i8, ptr %54, align 8, !range !18
  %56 = zext i8 %55 to i32
  %57 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 5
  store i32 %56, ptr %57, align 4
  %58 = and i32 %36, %19
  %59 = and i32 %58, %53
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i32
  %62 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 4
  store i32 %61, ptr %62, align 4
  %63 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 1
  store i32 %19, ptr %63, align 4
  %64 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 45
  %65 = load i16, ptr %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 2
  store i32 %66, ptr %67, align 4
  %68 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 3
  store i32 %53, ptr %68, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8152_set_eee(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 2
  %4 = load i32, ptr %3, align 4
  %5 = trunc i32 %4 to i16
  %6 = lshr i16 %5, 2
  %7 = and i16 %6, 2
  %8 = lshr i16 %5, 3
  %9 = and i16 %8, 4
  %10 = or i16 %9, %7
  %11 = lshr i16 %5, 9
  %12 = and i16 %11, 8
  %13 = or i16 %10, %12
  %14 = lshr i32 %4, 13
  %15 = trunc i32 %14 to i16
  %16 = and i16 %15, 16
  %17 = or i16 %13, %16
  %18 = and i16 %15, 32
  %19 = or i16 %17, %18
  %20 = and i16 %15, 64
  %21 = or i16 %19, %20
  %22 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = icmp ne i32 %23, 0
  %25 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %26 = zext i1 %24 to i8
  store i8 %26, ptr %25, align 8
  %27 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 45
  store i16 %21, ptr %27, align 2
  tail call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext %24)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal zeroext i1 @rtl8152_in_nway(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 8192, ptr %4, align 4
  %5 = load volatile i32, ptr %0, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %10 = icmp eq ptr %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %15 = load i32, ptr %14, align 8
  %16 = call i32 @usb_control_msg(ptr noundef %13, i32 noundef %15, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6036, i16 noundef zeroext 307, ptr noundef nonnull %9, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %9) #24
  %17 = icmp eq i32 %16, -19
  br i1 %17, label %18, label %24

18:                                               ; preds = %11
  %19 = load ptr, ptr %12, align 4
  %20 = getelementptr inbounds %struct.usb_device, ptr %19, i32 0, i32 3
  %21 = load i32, ptr %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %24

24:                                               ; preds = %23, %18, %11, %8, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %25 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 43
  store i16 8192, ptr %25, align 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 76, ptr %3, align 4
  %26 = load volatile i32, ptr %0, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %24
  %30 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %31 = icmp eq ptr %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %36 = load i32, ptr %35, align 8
  %37 = call i32 @usb_control_msg(ptr noundef %34, i32 noundef %36, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -20460, i16 noundef zeroext 273, ptr noundef nonnull %30, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %30) #24
  %38 = icmp eq i32 %37, -19
  br i1 %38, label %39, label %45

39:                                               ; preds = %32
  %40 = load ptr, ptr %33, align 4
  %41 = getelementptr inbounds %struct.usb_device, ptr %40, i32 0, i32 3
  %42 = load i32, ptr %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %45

45:                                               ; preds = %44, %39, %32, %29, %24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %46 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -20456, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 460) #24
  %47 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %48 = icmp ult i32 %47, 1073741824
  ret i1 %48
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8152b_hw_phy_cfg(ptr noundef %0) #0 {
  tail call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext false)
  %2 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %3 = load i8, ptr %2, align 8, !range !18
  %4 = icmp ne i8 %3, 0
  tail call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext %4)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8208, i16 noundef zeroext -31984) #24
  %5 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23544) #24
  %6 = or i16 %5, 3072
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23544, i16 noundef zeroext %6) #24
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %8 = load i32, ptr %7, align 4
  %9 = or i32 %8, 131072
  store i32 %9, ptr %7, align 4
  tail call void @_set_bit(i32 noundef 5, ptr noundef %0) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  br i1 %1, label %11, label %76

11:                                               ; preds = %2
  tail call fastcc void @__rtl_set_wol(ptr noundef %0, i32 noundef 47)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 192, ptr %10, align 4
  %12 = load volatile i32, ptr %0, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %11
  %16 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %22 = load i32, ptr %21, align 8
  %23 = call i32 @usb_control_msg(ptr noundef %20, i32 noundef %22, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %16, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %16) #24
  %24 = icmp eq i32 %23, -19
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load ptr, ptr %19, align 4
  %27 = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 3
  %28 = load i32, ptr %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %31

31:                                               ; preds = %30, %25, %18, %15, %11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %32 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %33 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %34 = and i32 %33, 65527
  %35 = or i32 %34, 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %35, ptr %8, align 4
  %36 = load volatile i32, ptr %0, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %55

39:                                               ; preds = %31
  %40 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %41 = icmp eq ptr %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %46 = load i32, ptr %45, align 8
  %47 = call i32 @usb_control_msg(ptr noundef %44, i32 noundef %46, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6112, i16 noundef zeroext 307, ptr noundef nonnull %40, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %40) #24
  %48 = icmp eq i32 %47, -19
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = load ptr, ptr %43, align 4
  %51 = getelementptr inbounds %struct.usb_device, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %55

55:                                               ; preds = %54, %49, %42, %39, %31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4
  %56 = load volatile i32, ptr %0, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %75

59:                                               ; preds = %55
  %60 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %61 = icmp eq ptr %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %66 = load i32, ptr %65, align 8
  %67 = call i32 @usb_control_msg(ptr noundef %64, i32 noundef %66, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %60, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %60) #24
  %68 = icmp eq i32 %67, -19
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  %70 = load ptr, ptr %63, align 4
  %71 = getelementptr inbounds %struct.usb_device, ptr %70, i32 0, i32 3
  %72 = load i32, ptr %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %75

75:                                               ; preds = %74, %69, %62, %59, %55
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  br label %142

76:                                               ; preds = %2
  %77 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 27
  %78 = load i32, ptr %77, align 8
  tail call fastcc void @__rtl_set_wol(ptr noundef %0, i32 noundef %78)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 192, ptr %6, align 4
  %79 = load volatile i32, ptr %0, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %98

82:                                               ; preds = %76
  %83 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %84 = icmp eq ptr %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %87 = load ptr, ptr %86, align 4
  %88 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %89 = load i32, ptr %88, align 8
  %90 = call i32 @usb_control_msg(ptr noundef %87, i32 noundef %89, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %83, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %83) #24
  %91 = icmp eq i32 %90, -19
  br i1 %91, label %92, label %98

92:                                               ; preds = %85
  %93 = load ptr, ptr %86, align 4
  %94 = getelementptr inbounds %struct.usb_device, ptr %93, i32 0, i32 3
  %95 = load i32, ptr %94, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %98

98:                                               ; preds = %97, %92, %85, %82, %76
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %99 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 307) #24
  %100 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %101 = and i32 %100, 65527
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %101, ptr %4, align 4
  %102 = load volatile i32, ptr %0, align 4
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %121

105:                                              ; preds = %98
  %106 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %107 = icmp eq ptr %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %110 = load ptr, ptr %109, align 4
  %111 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %112 = load i32, ptr %111, align 8
  %113 = call i32 @usb_control_msg(ptr noundef %110, i32 noundef %112, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6112, i16 noundef zeroext 307, ptr noundef nonnull %106, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %106) #24
  %114 = icmp eq i32 %113, -19
  br i1 %114, label %115, label %121

115:                                              ; preds = %108
  %116 = load ptr, ptr %109, align 4
  %117 = getelementptr inbounds %struct.usb_device, ptr %116, i32 0, i32 3
  %118 = load i32, ptr %117, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %115
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %121

121:                                              ; preds = %120, %115, %108, %105, %98
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4
  %122 = load volatile i32, ptr %0, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %141

125:                                              ; preds = %121
  %126 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %127 = icmp eq ptr %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %130 = load ptr, ptr %129, align 4
  %131 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %132 = load i32, ptr %131, align 8
  %133 = call i32 @usb_control_msg(ptr noundef %130, i32 noundef %132, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %126, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %126) #24
  %134 = icmp eq i32 %133, -19
  br i1 %134, label %135, label %141

135:                                              ; preds = %128
  %136 = load ptr, ptr %129, align 4
  %137 = getelementptr inbounds %struct.usb_device, ptr %136, i32 0, i32 3
  %138 = load i32, ptr %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %135
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %141

141:                                              ; preds = %140, %135, %128, %125, %121
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %142

142:                                              ; preds = %141, %75
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8153_init(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [8 x i8], align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca [8 x i8], align 8
  %36 = load volatile i32, ptr %0, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %492

39:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %35) #24
  store i64 0, ptr %35, align 8
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -11120, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef nonnull %35, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %35) #24
  br label %40

40:                                               ; preds = %46, %39
  %41 = phi i32 [ 0, %39 ], [ %50, %46 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %34) #24
  store i32 0, ptr %34, align 4, !annotation !8
  %42 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %34, i16 noundef zeroext 307) #24
  %43 = load i32, ptr %34, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %34) #24
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %40
  call void @msleep(i32 noundef 20) #24
  %47 = load volatile i32, ptr %0, align 4
  %48 = and i32 %47, 1
  %49 = icmp ne i32 %48, 0
  %50 = add nuw nsw i32 %41, 1
  %51 = icmp eq i32 %50, 500
  %52 = select i1 %49, i1 true, i1 %51
  br i1 %52, label %53, label %40

53:                                               ; preds = %46, %40
  br label %54

54:                                               ; preds = %62, %53
  %55 = phi i32 [ %66, %62 ], [ 0, %53 ]
  %56 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %57 = and i16 %56, 7
  %58 = icmp eq i16 %57, 5
  %59 = and i16 %56, 6
  %60 = icmp eq i16 %59, 2
  %61 = or i1 %60, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %54
  call void @msleep(i32 noundef 20) #24
  %63 = load volatile i32, ptr %0, align 4
  %64 = and i32 %63, 1
  %65 = icmp ne i32 %64, 0
  %66 = add nuw nsw i32 %55, 1
  %67 = icmp eq i32 %66, 500
  %68 = select i1 %65, i1 true, i1 %67
  br i1 %68, label %69, label %54

69:                                               ; preds = %62, %54
  %70 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %71 = load i8, ptr %70, align 8
  %72 = add i8 %71, -3
  %73 = icmp ult i8 %72, 3
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17402, i16 noundef zeroext 448)
  br label %75

75:                                               ; preds = %74, %69
  %76 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %77 = and i16 %76, 2048
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = and i16 %76, -2049
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %80) #24
  br label %81

81:                                               ; preds = %79, %75
  br label %82

82:                                               ; preds = %87, %81
  %83 = phi i32 [ %91, %87 ], [ 0, %81 ]
  %84 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %85 = and i16 %84, 7
  %86 = icmp eq i16 %85, 3
  br i1 %86, label %94, label %87

87:                                               ; preds = %82
  call void @msleep(i32 noundef 20) #24
  %88 = load volatile i32, ptr %0, align 4
  %89 = and i32 %88, 1
  %90 = icmp ne i32 %89, 0
  %91 = add nuw nsw i32 %83, 1
  %92 = icmp eq i32 %91, 500
  %93 = select i1 %90, i1 true, i1 %92
  br i1 %93, label %94, label %82

94:                                               ; preds = %87, %82
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  %95 = load i8, ptr %70, align 8
  switch i8 %95, label %259 [
    i8 4, label %96
    i8 5, label %145
    i8 6, label %198
  ]

96:                                               ; preds = %94
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %33) #24
  store i32 0, ptr %33, align 4, !annotation !8
  %97 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19416, i16 noundef zeroext 4, ptr noundef nonnull %33, i16 noundef zeroext 51) #24
  %98 = load i32, ptr %33, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %33) #24
  %99 = and i32 %98, 49153
  %100 = or i32 %99, 192
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %32) #24
  store i32 %100, ptr %32, align 4
  %101 = load volatile i32, ptr %0, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %120

104:                                              ; preds = %96
  %105 = call ptr @kmemdup(ptr noundef nonnull %32, i32 noundef 4, i32 noundef 3264) #24
  %106 = icmp eq ptr %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %109 = load ptr, ptr %108, align 4
  %110 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %111 = load i32, ptr %110, align 8
  %112 = call i32 @usb_control_msg(ptr noundef %109, i32 noundef %111, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19416, i16 noundef zeroext 51, ptr noundef nonnull %105, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %105) #24
  %113 = icmp eq i32 %112, -19
  br i1 %113, label %114, label %120

114:                                              ; preds = %107
  %115 = load ptr, ptr %108, align 4
  %116 = getelementptr inbounds %struct.usb_device, ptr %115, i32 0, i32 3
  %117 = load i32, ptr %116, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %114
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %120

120:                                              ; preds = %119, %114, %107, %104, %96
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %32) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %31) #24
  store i32 0, ptr %31, align 4, !annotation !8
  %121 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19428, i16 noundef zeroext 4, ptr noundef nonnull %31, i16 noundef zeroext 0) #24
  %122 = load i32, ptr %31, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %31) #24
  %123 = and i32 %122, 16515072
  %124 = or i32 %123, 196608
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %30) #24
  store i32 %124, ptr %30, align 4
  %125 = load volatile i32, ptr %0, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %144

128:                                              ; preds = %120
  %129 = call ptr @kmemdup(ptr noundef nonnull %30, i32 noundef 4, i32 noundef 3264) #24
  %130 = icmp eq ptr %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %133 = load ptr, ptr %132, align 4
  %134 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %135 = load i32, ptr %134, align 8
  %136 = call i32 @usb_control_msg(ptr noundef %133, i32 noundef %135, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19428, i16 noundef zeroext 68, ptr noundef nonnull %129, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %129) #24
  %137 = icmp eq i32 %136, -19
  br i1 %137, label %138, label %144

138:                                              ; preds = %131
  %139 = load ptr, ptr %132, align 4
  %140 = getelementptr inbounds %struct.usb_device, ptr %139, i32 0, i32 3
  %141 = load i32, ptr %140, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %138
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %144

144:                                              ; preds = %143, %138, %131, %128, %120
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %30) #24
  br label %259

145:                                              ; preds = %94
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %29) #24
  store i32 0, ptr %29, align 4, !annotation !8
  %146 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16208, i16 noundef zeroext 4, ptr noundef nonnull %29, i16 noundef zeroext 256) #24
  %147 = load i32, ptr %29, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %29) #24
  %148 = and i32 %147, 253
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %28) #24
  store i32 %148, ptr %28, align 4
  %149 = load volatile i32, ptr %0, align 4
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %168

152:                                              ; preds = %145
  %153 = call ptr @kmemdup(ptr noundef nonnull %28, i32 noundef 4, i32 noundef 3264) #24
  %154 = icmp eq ptr %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %157 = load ptr, ptr %156, align 4
  %158 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %159 = load i32, ptr %158, align 8
  %160 = call i32 @usb_control_msg(ptr noundef %157, i32 noundef %159, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16208, i16 noundef zeroext 273, ptr noundef nonnull %153, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %153) #24
  %161 = icmp eq i32 %160, -19
  br i1 %161, label %162, label %168

162:                                              ; preds = %155
  %163 = load ptr, ptr %156, align 4
  %164 = getelementptr inbounds %struct.usb_device, ptr %163, i32 0, i32 3
  %165 = load i32, ptr %164, align 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %162
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %168

168:                                              ; preds = %167, %162, %155, %152, %145
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %28) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %27) #24
  store i32 0, ptr %27, align 4, !annotation !8
  %169 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19356, i16 noundef zeroext 4, ptr noundef nonnull %27, i16 noundef zeroext 0) #24
  %170 = load i32, ptr %27, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %27) #24
  %171 = and i32 %170, 254
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %26) #24
  store i32 0, ptr %26, align 4, !annotation !8
  %172 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12352, i16 noundef zeroext 4, ptr noundef nonnull %26, i16 noundef zeroext 51) #24
  %173 = load i32, ptr %26, align 4
  %174 = trunc i32 %173 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #24
  %175 = icmp ne i16 %174, 0
  %176 = zext i1 %175 to i32
  %177 = or i32 %171, %176
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #24
  store i32 %177, ptr %25, align 4
  %178 = load volatile i32, ptr %0, align 4
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %197

181:                                              ; preds = %168
  %182 = call ptr @kmemdup(ptr noundef nonnull %25, i32 noundef 4, i32 noundef 3264) #24
  %183 = icmp eq ptr %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %186 = load ptr, ptr %185, align 4
  %187 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %188 = load i32, ptr %187, align 8
  %189 = call i32 @usb_control_msg(ptr noundef %186, i32 noundef %188, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19356, i16 noundef zeroext 17, ptr noundef nonnull %182, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %182) #24
  %190 = icmp eq i32 %189, -19
  br i1 %190, label %191, label %197

191:                                              ; preds = %184
  %192 = load ptr, ptr %185, align 4
  %193 = getelementptr inbounds %struct.usb_device, ptr %192, i32 0, i32 3
  %194 = load i32, ptr %193, align 8
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %191
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %197

197:                                              ; preds = %196, %191, %184, %181, %168
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #24
  br label %259

198:                                              ; preds = %94
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %24) #24
  store i32 0, ptr %24, align 4, !annotation !8
  %199 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19356, i16 noundef zeroext 4, ptr noundef nonnull %24, i16 noundef zeroext 0) #24
  %200 = load i32, ptr %24, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %24) #24
  %201 = and i32 %200, 254
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %23) #24
  store i32 0, ptr %23, align 4, !annotation !8
  %202 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12352, i16 noundef zeroext 4, ptr noundef nonnull %23, i16 noundef zeroext 51) #24
  %203 = load i32, ptr %23, align 4
  %204 = trunc i32 %203 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #24
  %205 = icmp ne i16 %204, 0
  %206 = zext i1 %205 to i32
  %207 = or i32 %201, %206
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #24
  store i32 %207, ptr %22, align 4
  %208 = load volatile i32, ptr %0, align 4
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %227

211:                                              ; preds = %198
  %212 = call ptr @kmemdup(ptr noundef nonnull %22, i32 noundef 4, i32 noundef 3264) #24
  %213 = icmp eq ptr %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %216 = load ptr, ptr %215, align 4
  %217 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %218 = load i32, ptr %217, align 8
  %219 = call i32 @usb_control_msg(ptr noundef %216, i32 noundef %218, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19356, i16 noundef zeroext 17, ptr noundef nonnull %212, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %212) #24
  %220 = icmp eq i32 %219, -19
  br i1 %220, label %221, label %227

221:                                              ; preds = %214
  %222 = load ptr, ptr %215, align 4
  %223 = getelementptr inbounds %struct.usb_device, ptr %222, i32 0, i32 3
  %224 = load i32, ptr %223, align 8
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %221
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %227

227:                                              ; preds = %226, %221, %214, %211, %198
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #24
  call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #24
  store i32 0, ptr %21, align 4, !annotation !8
  %228 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11368, i16 noundef zeroext 4, ptr noundef nonnull %21, i16 noundef zeroext 307) #24
  %229 = load i32, ptr %21, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #24
  store i32 0, ptr %20, align 4, !annotation !8
  %230 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %20, i16 noundef zeroext 307) #24
  %231 = load i32, ptr %20, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #24
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = or i32 %229, 32768
  %235 = and i32 %229, 32766
  %236 = select i1 %233, i32 %235, i32 %234
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #24
  %237 = and i32 %236, 65534
  %238 = or i32 %237, 1
  store i32 %238, ptr %19, align 4
  %239 = load volatile i32, ptr %0, align 4
  %240 = and i32 %239, 1
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %258

242:                                              ; preds = %227
  %243 = call ptr @kmemdup(ptr noundef nonnull %19, i32 noundef 4, i32 noundef 3264) #24
  %244 = icmp eq ptr %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %247 = load ptr, ptr %246, align 4
  %248 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %249 = load i32, ptr %248, align 8
  %250 = call i32 @usb_control_msg(ptr noundef %247, i32 noundef %249, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11368, i16 noundef zeroext 307, ptr noundef nonnull %243, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %243) #24
  %251 = icmp eq i32 %250, -19
  br i1 %251, label %252, label %258

252:                                              ; preds = %245
  %253 = load ptr, ptr %246, align 4
  %254 = getelementptr inbounds %struct.usb_device, ptr %253, i32 0, i32 3
  %255 = load i32, ptr %254, align 8
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %252
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %258

258:                                              ; preds = %257, %252, %245, %242, %227
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #24
  br label %259

259:                                              ; preds = %258, %197, %144, %94
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #24
  store i32 0, ptr %18, align 4, !annotation !8
  %260 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19356, i16 noundef zeroext 4, ptr noundef nonnull %18, i16 noundef zeroext 0) #24
  %261 = load i32, ptr %18, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #24
  %262 = and i32 %261, 16646144
  %263 = or i32 %262, 65536
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 %263, ptr %17, align 4
  %264 = load volatile i32, ptr %0, align 4
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %283

267:                                              ; preds = %259
  %268 = call ptr @kmemdup(ptr noundef nonnull %17, i32 noundef 4, i32 noundef 3264) #24
  %269 = icmp eq ptr %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %272 = load ptr, ptr %271, align 4
  %273 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %274 = load i32, ptr %273, align 8
  %275 = call i32 @usb_control_msg(ptr noundef %272, i32 noundef %274, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19356, i16 noundef zeroext 68, ptr noundef nonnull %268, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %268) #24
  %276 = icmp eq i32 %275, -19
  br i1 %276, label %277, label %283

277:                                              ; preds = %270
  %278 = load ptr, ptr %271, align 4
  %279 = getelementptr inbounds %struct.usb_device, ptr %278, i32 0, i32 3
  %280 = load i32, ptr %279, align 8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %277
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %283

283:                                              ; preds = %282, %277, %270, %267, %259
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 0, ptr %16, align 4, !annotation !8
  %284 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7108, i16 noundef zeroext 4, ptr noundef nonnull %16, i16 noundef zeroext 51) #24
  %285 = load i32, ptr %16, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  %286 = and i32 %285, 65534
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 %286, ptr %15, align 4
  %287 = load volatile i32, ptr %0, align 4
  %288 = and i32 %287, 1
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %306

290:                                              ; preds = %283
  %291 = call ptr @kmemdup(ptr noundef nonnull %15, i32 noundef 4, i32 noundef 3264) #24
  %292 = icmp eq ptr %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %295 = load ptr, ptr %294, align 4
  %296 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %297 = load i32, ptr %296, align 8
  %298 = call i32 @usb_control_msg(ptr noundef %295, i32 noundef %297, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7108, i16 noundef zeroext 51, ptr noundef nonnull %291, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %291) #24
  %299 = icmp eq i32 %298, -19
  br i1 %299, label %300, label %306

300:                                              ; preds = %293
  %301 = load ptr, ptr %294, align 4
  %302 = getelementptr inbounds %struct.usb_device, ptr %301, i32 0, i32 3
  %303 = load i32, ptr %302, align 8
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %300
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %306

306:                                              ; preds = %305, %300, %293, %290, %283
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 0, ptr %14, align 4, !annotation !8
  %307 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8816, i16 noundef zeroext 4, ptr noundef nonnull %14, i16 noundef zeroext 460) #24
  %308 = load i32, ptr %14, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  %309 = and i32 %308, -117506048
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 %309, ptr %13, align 4
  %310 = load volatile i32, ptr %0, align 4
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %329

313:                                              ; preds = %306
  %314 = call ptr @kmemdup(ptr noundef nonnull %13, i32 noundef 4, i32 noundef 3264) #24
  %315 = icmp eq ptr %314, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %313
  %317 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %318 = load ptr, ptr %317, align 4
  %319 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %320 = load i32, ptr %319, align 8
  %321 = call i32 @usb_control_msg(ptr noundef %318, i32 noundef %320, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8816, i16 noundef zeroext 460, ptr noundef nonnull %314, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %314) #24
  %322 = icmp eq i32 %321, -19
  br i1 %322, label %323, label %329

323:                                              ; preds = %316
  %324 = load ptr, ptr %317, align 4
  %325 = getelementptr inbounds %struct.usb_device, ptr %324, i32 0, i32 3
  %326 = load i32, ptr %325, align 8
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %323
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %329

329:                                              ; preds = %328, %323, %316, %313, %306
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %330 = load i8, ptr %70, align 8
  %331 = icmp eq i8 %330, 4
  br i1 %331, label %332, label %338

332:                                              ; preds = %329
  %333 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %334 = load ptr, ptr %333, align 4
  %335 = getelementptr inbounds %struct.usb_device, ptr %334, i32 0, i32 4
  %336 = load i32, ptr %335, align 4
  %337 = icmp ult i32 %336, 5
  br i1 %337, label %339, label %338

338:                                              ; preds = %332, %329
  br label %339

339:                                              ; preds = %338, %332
  %340 = phi i32 [ 4063232, %338 ], [ 3538944, %332 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 %340, ptr %12, align 4
  %341 = load volatile i32, ptr %0, align 4
  %342 = and i32 %341, 1
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %360

344:                                              ; preds = %339
  %345 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %346 = icmp eq ptr %345, null
  br i1 %346, label %360, label %347

347:                                              ; preds = %344
  %348 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %349 = load ptr, ptr %348, align 4
  %350 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %351 = load i32, ptr %350, align 8
  %352 = call i32 @usb_control_msg(ptr noundef %349, i32 noundef %351, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11240, i16 noundef zeroext 68, ptr noundef nonnull %345, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %345) #24
  %353 = icmp eq i32 %352, -19
  br i1 %353, label %354, label %360

354:                                              ; preds = %347
  %355 = load ptr, ptr %348, align 4
  %356 = getelementptr inbounds %struct.usb_device, ptr %355, i32 0, i32 3
  %357 = load i32, ptr %356, align 8
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %354
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %360

360:                                              ; preds = %359, %354, %347, %344, %339
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %361 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10204, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 51) #24
  %362 = load i32, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %363 = and i32 %362, 1791
  %364 = or i32 %363, 41216
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 %364, ptr %10, align 4
  %365 = load volatile i32, ptr %0, align 4
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %384

368:                                              ; preds = %360
  %369 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %370 = icmp eq ptr %369, null
  br i1 %370, label %384, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %373 = load ptr, ptr %372, align 4
  %374 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %375 = load i32, ptr %374, align 8
  %376 = call i32 @usb_control_msg(ptr noundef %373, i32 noundef %375, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10204, i16 noundef zeroext 51, ptr noundef nonnull %369, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %369) #24
  %377 = icmp eq i32 %376, -19
  br i1 %377, label %378, label %384

378:                                              ; preds = %371
  %379 = load ptr, ptr %372, align 4
  %380 = getelementptr inbounds %struct.usb_device, ptr %379, i32 0, i32 3
  %381 = load i32, ptr %380, align 8
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %378
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %384

384:                                              ; preds = %383, %378, %371, %368, %360
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 1, ptr %9, align 4
  %385 = load volatile i32, ptr %0, align 4
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %404

388:                                              ; preds = %384
  %389 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %390 = icmp eq ptr %389, null
  br i1 %390, label %404, label %391

391:                                              ; preds = %388
  %392 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %393 = load ptr, ptr %392, align 4
  %394 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %395 = load i32, ptr %394, align 8
  %396 = call i32 @usb_control_msg(ptr noundef %393, i32 noundef %395, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -13320, i16 noundef zeroext 51, ptr noundef nonnull %389, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %389) #24
  %397 = icmp eq i32 %396, -19
  br i1 %397, label %398, label %404

398:                                              ; preds = %391
  %399 = load ptr, ptr %392, align 4
  %400 = getelementptr inbounds %struct.usb_device, ptr %399, i32 0, i32 3
  %401 = load i32, ptr %400, align 8
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %398
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %404

404:                                              ; preds = %403, %398, %391, %388, %384
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call fastcc void @r8153_power_cut_en(ptr noundef %0)
  call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153_mac_clk_speed_down(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #24
  store i64 -1, ptr %8, align 8
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -11120, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef nonnull %8, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #24
  %405 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %406 = load ptr, ptr %405, align 4
  call void @usb_enable_lpm(ptr noundef %406) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %407 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 256) #24
  %408 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %409 = and i32 %408, 16646144
  %410 = or i32 %409, 65536
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %410, ptr %6, align 4
  %411 = load volatile i32, ptr %0, align 4
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %429

414:                                              ; preds = %404
  %415 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %416 = icmp eq ptr %415, null
  br i1 %416, label %429, label %417

417:                                              ; preds = %414
  %418 = load ptr, ptr %405, align 4
  %419 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %420 = load i32, ptr %419, align 8
  %421 = call i32 @usb_control_msg(ptr noundef %418, i32 noundef %420, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5880, i16 noundef zeroext 324, ptr noundef nonnull %415, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %415) #24
  %422 = icmp eq i32 %421, -19
  br i1 %422, label %423, label %429

423:                                              ; preds = %417
  %424 = load ptr, ptr %405, align 4
  %425 = getelementptr inbounds %struct.usb_device, ptr %424, i32 0, i32 3
  %426 = load i32, ptr %425, align 8
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %423
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %429

429:                                              ; preds = %428, %423, %417, %414, %404
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %430 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  %431 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %432 = and i32 %431, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %432, ptr %4, align 4
  %433 = load volatile i32, ptr %0, align 4
  %434 = and i32 %433, 1
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %451

436:                                              ; preds = %429
  %437 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %438 = icmp eq ptr %437, null
  br i1 %438, label %451, label %439

439:                                              ; preds = %436
  %440 = load ptr, ptr %405, align 4
  %441 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %442 = load i32, ptr %441, align 8
  %443 = call i32 @usb_control_msg(ptr noundef %440, i32 noundef %442, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8188, i16 noundef zeroext 392, ptr noundef nonnull %437, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %437) #24
  %444 = icmp eq i32 %443, -19
  br i1 %444, label %445, label %451

445:                                              ; preds = %439
  %446 = load ptr, ptr %405, align 4
  %447 = getelementptr inbounds %struct.usb_device, ptr %446, i32 0, i32 3
  %448 = load i32, ptr %447, align 8
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %445
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %451

451:                                              ; preds = %450, %445, %439, %436, %429
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %452 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %453 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %454 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 42
  %455 = load i8, ptr %454, align 4
  %456 = shl i8 %455, 2
  %457 = and i8 %456, 16
  %458 = zext i8 %457 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  %459 = shl nuw nsw i32 %458, 16
  %460 = and i32 %453, -9502720
  %461 = or i32 %459, %460
  store i32 %461, ptr %2, align 4
  %462 = load volatile i32, ptr %0, align 4
  %463 = and i32 %462, 1
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %480

465:                                              ; preds = %451
  %466 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %467 = icmp eq ptr %466, null
  br i1 %467, label %480, label %468

468:                                              ; preds = %465
  %469 = load ptr, ptr %405, align 4
  %470 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %471 = load i32, ptr %470, align 8
  %472 = call i32 @usb_control_msg(ptr noundef %469, i32 noundef %471, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %466, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %466) #24
  %473 = icmp eq i32 %472, -19
  br i1 %473, label %474, label %480

474:                                              ; preds = %468
  %475 = load ptr, ptr %405, align 4
  %476 = getelementptr inbounds %struct.usb_device, ptr %475, i32 0, i32 3
  %477 = load i32, ptr %476, align 8
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %480

479:                                              ; preds = %474
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %480

480:                                              ; preds = %479, %474, %468, %465, %451
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  call fastcc void @rtl_tally_reset(ptr noundef %0)
  %481 = load ptr, ptr %405, align 4
  %482 = getelementptr inbounds %struct.usb_device, ptr %481, i32 0, i32 4
  %483 = load i32, ptr %482, align 4
  %484 = add i32 %483, -3
  %485 = icmp ult i32 %484, 4
  br i1 %485, label %486, label %489

486:                                              ; preds = %480
  %487 = getelementptr inbounds [4 x i32], ptr @switch.table.r8153_init, i32 0, i32 %484
  %488 = load i32, ptr %487, align 4
  br label %489

489:                                              ; preds = %486, %480
  %490 = phi i32 [ %488, %486 ], [ 524280, %480 ]
  %491 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 30
  store i32 %490, ptr %491, align 4
  br label %492

492:                                              ; preds = %489, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8153_enable(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = load volatile i32, ptr %0, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %73

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 20
  %14 = load i32, ptr %13, align 4
  %15 = add i32 %14, 30
  %16 = udiv i32 16384, %15
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 29
  store i32 %16, ptr %17, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %18 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 307) #24
  %19 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %20 = and i32 %19, 4
  %21 = icmp ne i32 %20, 0
  call fastcc void @rtl_eee_plus_en(ptr noundef %0, i1 noundef zeroext %21) #24
  call fastcc void @r8153_set_rx_early_timeout(ptr noundef %0)
  call fastcc void @r8153_set_rx_early_size(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %22 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 307) #24
  %23 = load i32, ptr %5, align 4
  %24 = trunc i32 %23 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call fastcc void @rtl_set_ifg(ptr noundef %0, i16 noundef zeroext %24)
  %25 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %26 = load i8, ptr %25, align 8
  switch i8 %26, label %72 [
    i8 9, label %27
    i8 15, label %27
  ]

27:                                               ; preds = %10, %10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %28 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11032, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 51) #24
  %29 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %30 = and i32 %29, 65533
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %30, ptr %3, align 4
  %31 = load volatile i32, ptr %0, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %27
  %35 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %36 = icmp eq ptr %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %41 = load i32, ptr %40, align 8
  %42 = call i32 @usb_control_msg(ptr noundef %39, i32 noundef %41, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11032, i16 noundef zeroext 51, ptr noundef nonnull %35, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %35) #24
  %43 = icmp eq i32 %42, -19
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = load ptr, ptr %38, align 4
  %46 = getelementptr inbounds %struct.usb_device, ptr %45, i32 0, i32 3
  %47 = load i32, ptr %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %50

50:                                               ; preds = %49, %44, %37, %34, %27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %51 = or i32 %30, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %51, ptr %2, align 4
  %52 = load volatile i32, ptr %0, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %50
  %56 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %57 = icmp eq ptr %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %60 = load ptr, ptr %59, align 4
  %61 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %62 = load i32, ptr %61, align 8
  %63 = call i32 @usb_control_msg(ptr noundef %60, i32 noundef %62, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11032, i16 noundef zeroext 51, ptr noundef nonnull %56, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %56) #24
  %64 = icmp eq i32 %63, -19
  br i1 %64, label %65, label %71

65:                                               ; preds = %58
  %66 = load ptr, ptr %59, align 4
  %67 = getelementptr inbounds %struct.usb_device, ptr %66, i32 0, i32 3
  %68 = load i32, ptr %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %65
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %71

71:                                               ; preds = %70, %65, %58, %55, %50
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  br label %72

72:                                               ; preds = %71, %10
  call fastcc void @rtl_enable(ptr noundef %0)
  br label %73

73:                                               ; preds = %72, %1
  %74 = phi i32 [ 0, %72 ], [ -19, %1 ]
  ret i32 %74
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153_disable(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %4 = and i16 %3, -5
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %4) #24
  br label %5

5:                                                ; preds = %5, %1
  %6 = phi i32 [ 0, %1 ], [ %11, %5 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %7 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 307) #24
  %8 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %9 = and i32 %8, 256
  %10 = icmp ne i32 %9, 0
  %11 = add nuw nsw i32 %6, 1
  %12 = icmp eq i32 %11, 20
  %13 = select i1 %10, i1 true, i1 %12
  br i1 %13, label %14, label %5

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, -9
  store i32 %17, ptr %15, align 4
  call fastcc void @rtl_disable(ptr noundef %0)
  call fastcc void @rtl_reset_bmu(ptr noundef %0)
  %18 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %19 = or i16 %18, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %19) #24
  %20 = load i32, ptr %15, align 4
  %21 = or i32 %20, 8
  store i32 %21, ptr %15, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153_up(ptr noundef %0) #0 {
  %2 = alloca [8 x i8], align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [8 x i8], align 8
  %11 = load volatile i32, ptr %0, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %110

14:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #24
  store i64 0, ptr %10, align 8
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -11120, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef nonnull %10, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #24
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  %15 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %16 = and i16 %15, -5
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %16) #24
  br label %17

17:                                               ; preds = %17, %14
  %18 = phi i32 [ 0, %14 ], [ %23, %17 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %19 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %20 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %21 = and i32 %20, 256
  %22 = icmp ne i32 %21, 0
  %23 = add nuw nsw i32 %18, 1
  %24 = icmp eq i32 %23, 20
  %25 = select i1 %22, i1 true, i1 %24
  br i1 %25, label %26, label %17

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, -9
  store i32 %29, ptr %27, align 4
  call fastcc void @r8153_first_init(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %30 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 256) #24
  %31 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %32 = and i32 %31, 16646144
  %33 = or i32 %32, 65536
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 %33, ptr %7, align 4
  %34 = load volatile i32, ptr %0, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %26
  %38 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %39 = icmp eq ptr %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %44 = load i32, ptr %43, align 8
  %45 = call i32 @usb_control_msg(ptr noundef %42, i32 noundef %44, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5880, i16 noundef zeroext 324, ptr noundef nonnull %38, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %38) #24
  %46 = icmp eq i32 %45, -19
  br i1 %46, label %47, label %53

47:                                               ; preds = %40
  %48 = load ptr, ptr %41, align 4
  %49 = getelementptr inbounds %struct.usb_device, ptr %48, i32 0, i32 3
  %50 = load i32, ptr %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %53

53:                                               ; preds = %52, %47, %40, %37, %26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %54 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 256) #24
  %55 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %56 = and i32 %55, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %56, ptr %5, align 4
  %57 = load volatile i32, ptr %0, align 4
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %76

60:                                               ; preds = %53
  %61 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %62 = icmp eq ptr %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %65 = load ptr, ptr %64, align 4
  %66 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %67 = load i32, ptr %66, align 8
  %68 = call i32 @usb_control_msg(ptr noundef %65, i32 noundef %67, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8188, i16 noundef zeroext 392, ptr noundef nonnull %61, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %61) #24
  %69 = icmp eq i32 %68, -19
  br i1 %69, label %70, label %76

70:                                               ; preds = %63
  %71 = load ptr, ptr %64, align 4
  %72 = getelementptr inbounds %struct.usb_device, ptr %71, i32 0, i32 3
  %73 = load i32, ptr %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %76

76:                                               ; preds = %75, %70, %63, %60, %53
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %77 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19420, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 204) #24
  %78 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %79 = and i32 %78, -196608
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %79, ptr %3, align 4
  %80 = load volatile i32, ptr %0, align 4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %99

83:                                               ; preds = %76
  %84 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %85 = icmp eq ptr %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %88 = load ptr, ptr %87, align 4
  %89 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %90 = load i32, ptr %89, align 8
  %91 = call i32 @usb_control_msg(ptr noundef %88, i32 noundef %90, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19420, i16 noundef zeroext 204, ptr noundef nonnull %84, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %84) #24
  %92 = icmp eq i32 %91, -19
  br i1 %92, label %93, label %99

93:                                               ; preds = %86
  %94 = load ptr, ptr %87, align 4
  %95 = getelementptr inbounds %struct.usb_device, ptr %94, i32 0, i32 3
  %96 = load i32, ptr %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %99

99:                                               ; preds = %98, %93, %86, %83, %76
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %100 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %101 = or i16 %100, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %101) #24
  %102 = load i32, ptr %27, align 4
  %103 = or i32 %102, 8
  store i32 %103, ptr %27, align 4
  %104 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %105 = load i8, ptr %104, align 8
  %106 = add i8 %105, -3
  %107 = icmp ult i8 %106, 2
  br i1 %107, label %109, label %108

108:                                              ; preds = %99
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext true)
  br label %109

109:                                              ; preds = %108, %99
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #24
  store i64 -1, ptr %2, align 8
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -11120, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef nonnull %2, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #24
  br label %110

110:                                              ; preds = %109, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153_down(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [8 x i8], align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load volatile i32, ptr %0, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call fastcc void @rtl_drop_queued_tx(ptr noundef %0)
  br label %53

10:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %11 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  %12 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %13 = and i32 %12, 16646144
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %13, ptr %4, align 4
  %14 = load volatile i32, ptr %0, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %19 = icmp eq ptr %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %24 = load i32, ptr %23, align 8
  %25 = call i32 @usb_control_msg(ptr noundef %22, i32 noundef %24, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5880, i16 noundef zeroext 324, ptr noundef nonnull %18, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %18) #24
  %26 = icmp eq i32 %25, -19
  br i1 %26, label %27, label %33

27:                                               ; preds = %20
  %28 = load ptr, ptr %21, align 4
  %29 = getelementptr inbounds %struct.usb_device, ptr %28, i32 0, i32 3
  %30 = load i32, ptr %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %33

33:                                               ; preds = %32, %27, %20, %17, %10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #24
  store i64 0, ptr %3, align 8
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -11120, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef nonnull %3, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #24
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153_power_cut_en(ptr noundef %0)
  %34 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %35 = and i16 %34, -5
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %35) #24
  br label %36

36:                                               ; preds = %36, %33
  %37 = phi i32 [ 0, %33 ], [ %42, %36 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %38 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 307) #24
  %39 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %40 = and i32 %39, 256
  %41 = icmp ne i32 %40, 0
  %42 = add nuw nsw i32 %37, 1
  %43 = icmp eq i32 %42, 20
  %44 = select i1 %41, i1 true, i1 %43
  br i1 %44, label %45, label %36

45:                                               ; preds = %36
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %47 = load i32, ptr %46, align 4
  %48 = and i32 %47, -9
  store i32 %48, ptr %46, align 4
  call fastcc void @r8153_enter_oob(ptr noundef %0)
  %49 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %50 = or i16 %49, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %50) #24
  %51 = load i32, ptr %46, align 4
  %52 = or i32 %51, 8
  store i32 %52, ptr %46, align 4
  br label %53

53:                                               ; preds = %45, %9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153_unload(ptr noundef %0) #0 {
  %2 = load volatile i32, ptr %0, align 4
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call fastcc void @r8153_power_cut_en(ptr noundef %0)
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153_get_eee(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23100)
  %4 = zext i16 %3 to i32
  %5 = shl nuw nsw i32 %4, 2
  %6 = and i32 %5, 8
  %7 = shl nuw nsw i32 %4, 3
  %8 = and i32 %7, 32
  %9 = or i32 %8, %6
  %10 = shl nuw nsw i32 %4, 9
  %11 = and i32 %10, 4096
  %12 = or i32 %9, %11
  %13 = shl nuw nsw i32 %4, 13
  %14 = and i32 %13, 131072
  %15 = or i32 %12, %14
  %16 = and i32 %13, 262144
  %17 = or i32 %15, %16
  %18 = and i32 %13, 524288
  %19 = or i32 %17, %18
  %20 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23088)
  %21 = zext i16 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = and i32 %22, 8
  %24 = shl nuw nsw i32 %21, 3
  %25 = and i32 %24, 32
  %26 = or i32 %25, %23
  %27 = shl nuw nsw i32 %21, 9
  %28 = and i32 %27, 4096
  %29 = or i32 %26, %28
  %30 = shl nuw nsw i32 %21, 13
  %31 = and i32 %30, 131072
  %32 = or i32 %29, %31
  %33 = and i32 %30, 262144
  %34 = or i32 %32, %33
  %35 = and i32 %30, 524288
  %36 = or i32 %34, %35
  %37 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23086)
  %38 = zext i16 %37 to i32
  %39 = shl nuw nsw i32 %38, 2
  %40 = and i32 %39, 8
  %41 = shl nuw nsw i32 %38, 3
  %42 = and i32 %41, 32
  %43 = or i32 %42, %40
  %44 = shl nuw nsw i32 %38, 9
  %45 = and i32 %44, 4096
  %46 = or i32 %43, %45
  %47 = shl nuw nsw i32 %38, 13
  %48 = and i32 %47, 131072
  %49 = or i32 %46, %48
  %50 = and i32 %47, 262144
  %51 = or i32 %49, %50
  %52 = and i32 %47, 524288
  %53 = or i32 %51, %52
  %54 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %55 = load i8, ptr %54, align 8, !range !18
  %56 = zext i8 %55 to i32
  %57 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 5
  store i32 %56, ptr %57, align 4
  %58 = and i32 %36, %19
  %59 = and i32 %58, %53
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i32
  %62 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 4
  store i32 %61, ptr %62, align 4
  %63 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 1
  store i32 %19, ptr %63, align 4
  %64 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 45
  %65 = load i16, ptr %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 2
  store i32 %66, ptr %67, align 4
  %68 = getelementptr inbounds %struct.ethtool_eee, ptr %1, i32 0, i32 3
  store i32 %53, ptr %68, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal zeroext i1 @rtl8153_in_nway(ptr noundef %0) #0 {
  %2 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -22776)
  %3 = and i16 %2, 255
  %4 = add nsw i16 %3, -3
  %5 = icmp ult i16 %4, -2
  ret i1 %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8153_hw_phy_cfg(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %6 = and i16 %5, -5
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %6) #24
  br label %7

7:                                                ; preds = %7, %1
  %8 = phi i32 [ 0, %1 ], [ %13, %7 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %9 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 307) #24
  %10 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %11 = and i32 %10, 256
  %12 = icmp ne i32 %11, 0
  %13 = add nuw nsw i32 %8, 1
  %14 = icmp eq i32 %13, 20
  %15 = select i1 %12, i1 true, i1 %14
  br i1 %15, label %16, label %7

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, -9
  store i32 %19, ptr %17, align 4
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext false)
  %20 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %21 = load i8, ptr %20, align 8
  %22 = icmp eq i8 %21, 3
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23502)
  %25 = and i16 %24, -65
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23502, i16 noundef zeroext %25)
  br label %26

26:                                               ; preds = %23, %16
  %27 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504)
  %28 = or i16 %27, -32768
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %28)
  %29 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23486)
  %30 = or i16 %29, 128
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23486, i16 noundef zeroext %30)
  %31 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504)
  %32 = or i16 %31, 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %32)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32636) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 2835) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %33 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %34 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %35 = and i32 %34, 65471
  %36 = or i32 %35, 64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %36, ptr %2, align 4
  %37 = load volatile i32, ptr %0, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %56

40:                                               ; preds = %26
  %41 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %42 = icmp eq ptr %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %47 = load i32, ptr %46, align 8
  %48 = call i32 @usb_control_msg(ptr noundef %45, i32 noundef %47, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 307, ptr noundef nonnull %41, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %41) #24
  %49 = icmp eq i32 %48, -19
  br i1 %49, label %50, label %56

50:                                               ; preds = %43
  %51 = load ptr, ptr %44, align 4
  %52 = getelementptr inbounds %struct.usb_device, ptr %51, i32 0, i32 3
  %53 = load i32, ptr %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %56

56:                                               ; preds = %55, %50, %43, %40, %26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32750) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -2289) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32640) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 175) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32638) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 520) #24
  %57 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %58 = load i8, ptr %57, align 8, !range !18
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext true)
  br label %61

61:                                               ; preds = %60, %56
  %62 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %63 = or i16 %62, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %63) #24
  %64 = load i32, ptr %17, align 4
  %65 = or i32 %64, 8
  store i32 %65, ptr %17, align 4
  %66 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23544) #24
  %67 = or i16 %66, 3072
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23544, i16 noundef zeroext %67) #24
  %68 = load i32, ptr %17, align 4
  %69 = or i32 %68, 131072
  store i32 %69, ptr %17, align 4
  %70 = load i8, ptr %20, align 8
  %71 = add i8 %70, -3
  %72 = icmp ult i8 %71, 2
  br i1 %72, label %74, label %73

73:                                               ; preds = %61
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext true)
  br label %74

74:                                               ; preds = %73, %61
  call void @_set_bit(i32 noundef 5, ptr noundef %0) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153_runtime_enable(ptr noundef %0, i1 noundef zeroext %1) #0 {
  %3 = alloca [8 x i8], align 8
  %4 = alloca [8 x i8], align 8
  br i1 %1, label %5, label %6

5:                                                ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #24
  store i64 0, ptr %4, align 8
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -11120, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef nonnull %4, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #24
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext true)
  br label %13

6:                                                ; preds = %2
  tail call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %8 = load i8, ptr %7, align 8
  %9 = add i8 %8, -3
  %10 = icmp ult i8 %9, 2
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext true)
  br label %12

12:                                               ; preds = %11, %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #24
  store i64 -1, ptr %3, align 8
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -11120, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef nonnull %3, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #24
  br label %13

13:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153_change_mtu(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 20
  %7 = load i32, ptr %6, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %8 = shl i32 %7, 16
  %9 = add i32 %8, 1441792
  store i32 %9, ptr %3, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %1
  %14 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16364, i16 noundef zeroext 460, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 49152, ptr %2, align 4
  %30 = load volatile i32, ptr %0, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29
  %34 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %35 = icmp eq ptr %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %40 = load i32, ptr %39, align 8
  %41 = call i32 @usb_control_msg(ptr noundef %38, i32 noundef %40, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6636, i16 noundef zeroext 290, ptr noundef nonnull %34, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %34) #24
  %42 = icmp eq i32 %41, -19
  br i1 %42, label %43, label %49

43:                                               ; preds = %36
  %44 = load ptr, ptr %37, align 4
  %45 = getelementptr inbounds %struct.usb_device, ptr %44, i32 0, i32 3
  %46 = load i32, ptr %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %49

49:                                               ; preds = %48, %43, %36, %33, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8153b_init(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = load volatile i32, ptr %0, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %205

17:                                               ; preds = %1
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  br label %18

18:                                               ; preds = %24, %17
  %19 = phi i32 [ 0, %17 ], [ %28, %24 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %20 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 307) #24
  %21 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  call void @msleep(i32 noundef 20) #24
  %25 = load volatile i32, ptr %0, align 4
  %26 = and i32 %25, 1
  %27 = icmp ne i32 %26, 0
  %28 = add nuw nsw i32 %19, 1
  %29 = icmp eq i32 %28, 500
  %30 = select i1 %27, i1 true, i1 %29
  br i1 %30, label %31, label %18

31:                                               ; preds = %24, %18
  br label %32

32:                                               ; preds = %40, %31
  %33 = phi i32 [ %44, %40 ], [ 0, %31 ]
  %34 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %35 = and i16 %34, 7
  %36 = icmp eq i16 %35, 5
  %37 = and i16 %34, 6
  %38 = icmp eq i16 %37, 2
  %39 = or i1 %38, %36
  br i1 %39, label %47, label %40

40:                                               ; preds = %32
  call void @msleep(i32 noundef 20) #24
  %41 = load volatile i32, ptr %0, align 4
  %42 = and i32 %41, 1
  %43 = icmp ne i32 %42, 0
  %44 = add nuw nsw i32 %33, 1
  %45 = icmp eq i32 %44, 500
  %46 = select i1 %43, i1 true, i1 %45
  br i1 %46, label %47, label %32

47:                                               ; preds = %40, %32
  %48 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %49 = and i16 %48, 2048
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = and i16 %48, -2049
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %52) #24
  br label %53

53:                                               ; preds = %51, %47
  br label %54

54:                                               ; preds = %59, %53
  %55 = phi i32 [ %63, %59 ], [ 0, %53 ]
  %56 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %57 = and i16 %56, 7
  %58 = icmp eq i16 %57, 3
  br i1 %58, label %66, label %59

59:                                               ; preds = %54
  call void @msleep(i32 noundef 20) #24
  %60 = load volatile i32, ptr %0, align 4
  %61 = and i32 %60, 1
  %62 = icmp ne i32 %61, 0
  %63 = add nuw nsw i32 %55, 1
  %64 = icmp eq i32 %63, 500
  %65 = select i1 %62, i1 true, i1 %64
  br i1 %65, label %66, label %54

66:                                               ; preds = %59, %54
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 4095, ptr %12, align 4
  %67 = load volatile i32, ptr %0, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %86

70:                                               ; preds = %66
  %71 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %72 = icmp eq ptr %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %77 = load i32, ptr %76, align 8
  %78 = call i32 @usb_control_msg(ptr noundef %75, i32 noundef %77, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -13316, i16 noundef zeroext 51, ptr noundef nonnull %71, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %71) #24
  %79 = icmp eq i32 %78, -19
  br i1 %79, label %80, label %86

80:                                               ; preds = %73
  %81 = load ptr, ptr %74, align 4
  %82 = getelementptr inbounds %struct.usb_device, ptr %81, i32 0, i32 3
  %83 = load i32, ptr %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %86

86:                                               ; preds = %85, %80, %73, %70, %66
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  call fastcc void @r8153b_power_cut_en(ptr noundef %0)
  call fastcc void @r8153b_ups_en(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %87 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11368, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 307) #24
  %88 = load i32, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %89 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 307) #24
  %90 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = or i32 %88, 32768
  %94 = and i32 %88, 32766
  %95 = select i1 %92, i32 %94, i32 %93
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  %96 = and i32 %95, 65534
  %97 = or i32 %96, 1
  store i32 %97, ptr %9, align 4
  %98 = load volatile i32, ptr %0, align 4
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %117

101:                                              ; preds = %86
  %102 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %103 = icmp eq ptr %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %106 = load ptr, ptr %105, align 4
  %107 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %108 = load i32, ptr %107, align 8
  %109 = call i32 @usb_control_msg(ptr noundef %106, i32 noundef %108, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11368, i16 noundef zeroext 307, ptr noundef nonnull %102, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %102) #24
  %110 = icmp eq i32 %109, -19
  br i1 %110, label %111, label %117

111:                                              ; preds = %104
  %112 = load ptr, ptr %105, align 4
  %113 = getelementptr inbounds %struct.usb_device, ptr %112, i32 0, i32 3
  %114 = load i32, ptr %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %117

117:                                              ; preds = %116, %111, %104, %101, %86
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %118 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %119 = load ptr, ptr %118, align 4
  %120 = getelementptr inbounds %struct.usb_device, ptr %119, i32 0, i32 4
  %121 = load i32, ptr %120, align 4
  %122 = icmp ugt i32 %121, 4
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  %124 = load ptr, ptr %118, align 4
  br label %125

125:                                              ; preds = %123, %117
  %126 = phi ptr [ %124, %123 ], [ %119, %117 ]
  call void @usb_enable_lpm(ptr noundef %126) #24
  call fastcc void @r8153_mac_clk_speed_down(ptr noundef %0, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %127 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 307) #24
  %128 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %129 = and i32 %128, 49151
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 %129, ptr %7, align 4
  %130 = load volatile i32, ptr %0, align 4
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %148

133:                                              ; preds = %125
  %134 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %135 = icmp eq ptr %134, null
  br i1 %135, label %148, label %136

136:                                              ; preds = %133
  %137 = load ptr, ptr %118, align 4
  %138 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %139 = load i32, ptr %138, align 8
  %140 = call i32 @usb_control_msg(ptr noundef %137, i32 noundef %139, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %134, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %134) #24
  %141 = icmp eq i32 %140, -19
  br i1 %141, label %142, label %148

142:                                              ; preds = %136
  %143 = load ptr, ptr %118, align 4
  %144 = getelementptr inbounds %struct.usb_device, ptr %143, i32 0, i32 3
  %145 = load i32, ptr %144, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %142
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %148

148:                                              ; preds = %147, %142, %136, %133, %125
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %149 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %150 = load i8, ptr %149, align 8
  %151 = icmp eq i8 %150, 9
  br i1 %151, label %152, label %181

152:                                              ; preds = %148
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %153 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -9216, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 256) #24
  %154 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %155 = and i32 %154, 32
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %181, label %157

157:                                              ; preds = %152
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %158 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 307) #24
  %159 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %160 = and i32 %159, 65519
  %161 = or i32 %160, 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %161, ptr %4, align 4
  %162 = load volatile i32, ptr %0, align 4
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  %166 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %167 = icmp eq ptr %166, null
  br i1 %167, label %180, label %168

168:                                              ; preds = %165
  %169 = load ptr, ptr %118, align 4
  %170 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %171 = load i32, ptr %170, align 8
  %172 = call i32 @usb_control_msg(ptr noundef %169, i32 noundef %171, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 307, ptr noundef nonnull %166, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %166) #24
  %173 = icmp eq i32 %172, -19
  br i1 %173, label %174, label %180

174:                                              ; preds = %168
  %175 = load ptr, ptr %118, align 4
  %176 = getelementptr inbounds %struct.usb_device, ptr %175, i32 0, i32 3
  %177 = load i32, ptr %176, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %174
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %180

180:                                              ; preds = %179, %174, %168, %165, %157
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %181

181:                                              ; preds = %180, %152, %148
  call void @_set_bit(i32 noundef 7, ptr noundef %0) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %182 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %183 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %184 = and i32 %183, -9502720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %184, ptr %2, align 4
  %185 = load volatile i32, ptr %0, align 4
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %203

188:                                              ; preds = %181
  %189 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %190 = icmp eq ptr %189, null
  br i1 %190, label %203, label %191

191:                                              ; preds = %188
  %192 = load ptr, ptr %118, align 4
  %193 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %194 = load i32, ptr %193, align 8
  %195 = call i32 @usb_control_msg(ptr noundef %192, i32 noundef %194, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %189, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %189) #24
  %196 = icmp eq i32 %195, -19
  br i1 %196, label %197, label %203

197:                                              ; preds = %191
  %198 = load ptr, ptr %118, align 4
  %199 = getelementptr inbounds %struct.usb_device, ptr %198, i32 0, i32 3
  %200 = load i32, ptr %199, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %197
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %203

203:                                              ; preds = %202, %197, %191, %188, %181
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  call fastcc void @rtl_tally_reset(ptr noundef %0)
  %204 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 30
  store i32 15000, ptr %204, align 4
  br label %205

205:                                              ; preds = %203, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153b_up(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load volatile i32, ptr %0, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %78

9:                                                ; preds = %1
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  %10 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %11 = and i16 %10, -5
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %11) #24
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i32 [ 0, %9 ], [ %18, %12 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %14 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 307) #24
  %15 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %16 = and i32 %15, 256
  %17 = icmp ne i32 %16, 0
  %18 = add nuw nsw i32 %13, 1
  %19 = icmp eq i32 %18, 20
  %20 = select i1 %17, i1 true, i1 %19
  br i1 %20, label %21, label %12

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, -9
  store i32 %24, ptr %22, align 4
  call fastcc void @r8153_first_init(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 65537, ptr %4, align 4
  %25 = load volatile i32, ptr %0, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %44

28:                                               ; preds = %21
  %29 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %30 = icmp eq ptr %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 4
  %34 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %35 = load i32, ptr %34, align 8
  %36 = call i32 @usb_control_msg(ptr noundef %33, i32 noundef %35, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11252, i16 noundef zeroext 255, ptr noundef nonnull %29, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %29) #24
  %37 = icmp eq i32 %36, -19
  br i1 %37, label %38, label %44

38:                                               ; preds = %31
  %39 = load ptr, ptr %32, align 4
  %40 = getelementptr inbounds %struct.usb_device, ptr %39, i32 0, i32 3
  %41 = load i32, ptr %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %44

44:                                               ; preds = %43, %38, %31, %28, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %45 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %46 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %47 = and i32 %46, 49151
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %47, ptr %2, align 4
  %48 = load volatile i32, ptr %0, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %67

51:                                               ; preds = %44
  %52 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %53 = icmp eq ptr %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 4
  %57 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %58 = load i32, ptr %57, align 8
  %59 = call i32 @usb_control_msg(ptr noundef %56, i32 noundef %58, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %52, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %52) #24
  %60 = icmp eq i32 %59, -19
  br i1 %60, label %61, label %67

61:                                               ; preds = %54
  %62 = load ptr, ptr %55, align 4
  %63 = getelementptr inbounds %struct.usb_device, ptr %62, i32 0, i32 3
  %64 = load i32, ptr %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %67

67:                                               ; preds = %66, %61, %54, %51, %44
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %68 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %69 = or i16 %68, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %69) #24
  %70 = load i32, ptr %22, align 4
  %71 = or i32 %70, 8
  store i32 %71, ptr %22, align 4
  %72 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %73 = load ptr, ptr %72, align 4
  %74 = getelementptr inbounds %struct.usb_device, ptr %73, i32 0, i32 4
  %75 = load i32, ptr %74, align 4
  %76 = icmp ugt i32 %75, 4
  br i1 %76, label %77, label %78

77:                                               ; preds = %67
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  br label %78

78:                                               ; preds = %77, %67, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153b_down(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load volatile i32, ptr %0, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call fastcc void @rtl_drop_queued_tx(ptr noundef %0)
  br label %53

9:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %10 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 307) #24
  %11 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %12 = and i32 %11, 49151
  %13 = or i32 %12, 16384
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %13, ptr %3, align 4
  %14 = load volatile i32, ptr %0, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %9
  %18 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %19 = icmp eq ptr %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %24 = load i32, ptr %23, align 8
  %25 = call i32 @usb_control_msg(ptr noundef %22, i32 noundef %24, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %18, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %18) #24
  %26 = icmp eq i32 %25, -19
  br i1 %26, label %27, label %33

27:                                               ; preds = %20
  %28 = load ptr, ptr %21, align 4
  %29 = getelementptr inbounds %struct.usb_device, ptr %28, i32 0, i32 3
  %30 = load i32, ptr %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %33

33:                                               ; preds = %32, %27, %20, %17, %9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153b_power_cut_en(ptr noundef %0)
  %34 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %35 = and i16 %34, -5
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %35) #24
  br label %36

36:                                               ; preds = %36, %33
  %37 = phi i32 [ 0, %33 ], [ %42, %36 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %38 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 307) #24
  %39 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %40 = and i32 %39, 256
  %41 = icmp ne i32 %40, 0
  %42 = add nuw nsw i32 %37, 1
  %43 = icmp eq i32 %42, 20
  %44 = select i1 %41, i1 true, i1 %43
  br i1 %44, label %45, label %36

45:                                               ; preds = %36
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %47 = load i32, ptr %46, align 4
  %48 = and i32 %47, -9
  store i32 %48, ptr %46, align 4
  call fastcc void @r8153_enter_oob(ptr noundef %0)
  %49 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %50 = or i16 %49, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %50) #24
  %51 = load i32, ptr %46, align 4
  %52 = or i32 %51, 8
  store i32 %52, ptr %46, align 4
  br label %53

53:                                               ; preds = %45, %8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153b_unload(ptr noundef %0) #0 {
  %2 = load volatile i32, ptr %0, align 4
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call fastcc void @r8153b_power_cut_en(ptr noundef %0)
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8153b_hw_phy_cfg(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 0, ptr %12, align 4, !annotation !8
  %13 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %12, i16 noundef zeroext 204) #24
  %14 = load i32, ptr %12, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  %15 = and i32 %14, 65536
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %1
  %18 = and i32 %14, -131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 %18, ptr %11, align 4
  %19 = load volatile i32, ptr %0, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %24 = icmp eq ptr %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %29 = load i32, ptr %28, align 8
  %30 = call i32 @usb_control_msg(ptr noundef %27, i32 noundef %29, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10216, i16 noundef zeroext 204, ptr noundef nonnull %23, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %23) #24
  %31 = icmp eq i32 %30, -19
  br i1 %31, label %32, label %38

32:                                               ; preds = %25
  %33 = load ptr, ptr %26, align 4
  %34 = getelementptr inbounds %struct.usb_device, ptr %33, i32 0, i32 3
  %35 = load i32, ptr %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %38

38:                                               ; preds = %37, %32, %25, %22, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  br label %39

39:                                               ; preds = %38, %1
  %40 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %41 = and i16 %40, -5
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %41) #24
  br label %42

42:                                               ; preds = %42, %39
  %43 = phi i32 [ 0, %39 ], [ %48, %42 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %44 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 307) #24
  %45 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %46 = and i32 %45, 256
  %47 = icmp ne i32 %46, 0
  %48 = add nuw nsw i32 %43, 1
  %49 = icmp eq i32 %48, 20
  %50 = select i1 %47, i1 true, i1 %49
  br i1 %50, label %51, label %42

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %53 = load i32, ptr %52, align 4
  %54 = and i32 %53, -9
  store i32 %54, ptr %52, align 4
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 32768000, ptr %9, align 4
  %55 = load volatile i32, ptr %0, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %74

58:                                               ; preds = %51
  %59 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %60 = icmp eq ptr %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %63 = load ptr, ptr %62, align 4
  %64 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %65 = load i32, ptr %64, align 8
  %66 = call i32 @usb_control_msg(ptr noundef %63, i32 noundef %65, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11048, i16 noundef zeroext 204, ptr noundef nonnull %59, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %59) #24
  %67 = icmp eq i32 %66, -19
  br i1 %67, label %68, label %74

68:                                               ; preds = %61
  %69 = load ptr, ptr %62, align 4
  %70 = getelementptr inbounds %struct.usb_device, ptr %69, i32 0, i32 3
  %71 = load i32, ptr %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %74

74:                                               ; preds = %73, %68, %61, %58, %51
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  br label %75

75:                                               ; preds = %83, %74
  %76 = phi i32 [ 0, %74 ], [ %87, %83 ]
  %77 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %78 = and i16 %77, 7
  %79 = icmp eq i16 %78, 5
  %80 = and i16 %77, 6
  %81 = icmp eq i16 %80, 2
  %82 = or i1 %81, %79
  br i1 %82, label %90, label %83

83:                                               ; preds = %75
  call void @msleep(i32 noundef 20) #24
  %84 = load volatile i32, ptr %0, align 4
  %85 = and i32 %84, 1
  %86 = icmp ne i32 %85, 0
  %87 = add nuw nsw i32 %76, 1
  %88 = icmp eq i32 %87, 500
  %89 = select i1 %86, i1 true, i1 %88
  br i1 %89, label %90, label %75

90:                                               ; preds = %83, %75
  %91 = trunc i16 %77 to i3
  switch i3 %91, label %95 [
    i3 -3, label %92
    i3 2, label %92
  ]

92:                                               ; preds = %90, %90
  call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext true)
  %93 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %94 = and i16 %93, -2049
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %94) #24
  br label %96

95:                                               ; preds = %90
  call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext false)
  br label %96

96:                                               ; preds = %95, %92
  %97 = load volatile i32, ptr %0, align 4
  %98 = and i32 %97, 128
  %99 = icmp eq i32 %98, 0
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32699) #24
  %100 = select i1 %99, i16 9284, i16 0
  %101 = select i1 %99, i16 9284, i16 4642
  %102 = select i1 %99, i16 9284, i16 34
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %100) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32691) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %101) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32675) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %102) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  %103 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %104 = or i16 %103, -32768
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %104) #24
  %105 = load i32, ptr %52, align 4
  %106 = or i32 %105, 65536
  store i32 %106, ptr %52, align 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  %107 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %108 = or i16 %107, 2048
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %108) #24
  %109 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23508)
  %110 = or i16 %109, 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23508, i16 noundef zeroext %110)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 -2139291648, ptr %8, align 4
  %111 = load volatile i32, ptr %0, align 4
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %130

114:                                              ; preds = %96
  %115 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %116 = icmp eq ptr %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %119 = load ptr, ptr %118, align 4
  %120 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %121 = load i32, ptr %120, align 8
  %122 = call i32 @usb_control_msg(ptr noundef %119, i32 noundef %121, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8960, i16 noundef zeroext 460, ptr noundef nonnull %115, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %115) #24
  %123 = icmp eq i32 %122, -19
  br i1 %123, label %124, label %130

124:                                              ; preds = %117
  %125 = load ptr, ptr %118, align 4
  %126 = getelementptr inbounds %struct.usb_device, ptr %125, i32 0, i32 3
  %127 = load i32, ptr %126, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %124
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %130

130:                                              ; preds = %129, %124, %117, %114, %96
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %131 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8960, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 460) #24
  %132 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %133 = lshr i32 %132, 7
  %134 = and i32 %133, 65536
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %135 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8960, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 307) #24
  %136 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %137 = and i32 %136, 65520
  %138 = or i32 %137, %134
  %139 = lshr exact i32 %138, 1
  %140 = and i32 %136, 7
  %141 = or i32 %139, %140
  %142 = icmp eq i32 %141, 65535
  br i1 %142, label %145, label %143

143:                                              ; preds = %130
  %144 = trunc i32 %141 to i16
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17156, i16 noundef zeroext %144)
  br label %145

145:                                              ; preds = %143, %130
  %146 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -15322)
  %147 = and i16 %146, 16383
  %148 = icmp eq i16 %147, 0
  br i1 %148, label %178, label %149

149:                                              ; preds = %145
  %150 = zext i16 %147 to i32
  %151 = udiv i32 16000000, %150
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %152 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10176, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 204) #24
  %153 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  %154 = shl i32 %151, 16
  %155 = and i32 %154, 268369920
  %156 = and i32 %153, -268435456
  %157 = or i32 %156, %155
  store i32 %157, ptr %4, align 4
  %158 = load volatile i32, ptr %0, align 4
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %177

161:                                              ; preds = %149
  %162 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %163 = icmp eq ptr %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %166 = load ptr, ptr %165, align 4
  %167 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %168 = load i32, ptr %167, align 8
  %169 = call i32 @usb_control_msg(ptr noundef %166, i32 noundef %168, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10176, i16 noundef zeroext 204, ptr noundef nonnull %162, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %162) #24
  %170 = icmp eq i32 %169, -19
  br i1 %170, label %171, label %177

171:                                              ; preds = %164
  %172 = load ptr, ptr %165, align 4
  %173 = getelementptr inbounds %struct.usb_device, ptr %172, i32 0, i32 3
  %174 = load i32, ptr %173, align 8
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %171
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %177

177:                                              ; preds = %176, %171, %164, %161, %149
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %178

178:                                              ; preds = %177, %145
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %179 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %180 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %181 = and i32 %180, 65471
  %182 = or i32 %181, 64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %182, ptr %2, align 4
  %183 = load volatile i32, ptr %0, align 4
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %202

186:                                              ; preds = %178
  %187 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %188 = icmp eq ptr %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %191 = load ptr, ptr %190, align 4
  %192 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %193 = load i32, ptr %192, align 8
  %194 = call i32 @usb_control_msg(ptr noundef %191, i32 noundef %193, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 307, ptr noundef nonnull %187, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %187) #24
  %195 = icmp eq i32 %194, -19
  br i1 %195, label %196, label %202

196:                                              ; preds = %189
  %197 = load ptr, ptr %190, align 4
  %198 = getelementptr inbounds %struct.usb_device, ptr %197, i32 0, i32 3
  %199 = load i32, ptr %198, align 8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %196
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %202

202:                                              ; preds = %201, %196, %189, %186, %178
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %203 = call fastcc i32 @rtl_phy_patch_request(ptr noundef %0, i1 noundef zeroext true, i1 noundef zeroext true)
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %226

205:                                              ; preds = %202
  %206 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504)
  %207 = or i16 %206, -32768
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %207)
  %208 = load i32, ptr %52, align 4
  %209 = or i32 %208, 4096
  store i32 %209, ptr %52, align 4
  %210 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23486)
  %211 = or i16 %210, 26624
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23486, i16 noundef zeroext %211)
  %212 = load i32, ptr %52, align 4
  %213 = or i32 %212, 49154
  store i32 %213, ptr %52, align 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -15338, i16 noundef zeroext 0)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -15338, i16 noundef zeroext 80)
  %214 = load i32, ptr %52, align 4
  %215 = or i32 %214, 4
  store i32 %215, ptr %52, align 4
  %216 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400) #24
  %217 = and i16 %216, -17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %217) #24
  br label %218

218:                                              ; preds = %218, %205
  %219 = phi i32 [ 0, %205 ], [ %223, %218 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %220 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432) #24
  %221 = and i16 %220, 64
  %222 = icmp ne i16 %221, 0
  %223 = add nuw nsw i32 %219, 1
  %224 = icmp ult i32 %219, 4999
  %225 = select i1 %222, i1 %224, i1 false
  br i1 %225, label %218, label %226

226:                                              ; preds = %218, %202
  %227 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %228 = load i8, ptr %227, align 8, !range !18
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %231, label %230

230:                                              ; preds = %226
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext true)
  br label %231

231:                                              ; preds = %230, %226
  %232 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %233 = or i16 %232, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %233) #24
  %234 = load i32, ptr %52, align 4
  %235 = or i32 %234, 8
  store i32 %235, ptr %52, align 4
  %236 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23544) #24
  %237 = or i16 %236, 3072
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23544, i16 noundef zeroext %237) #24
  %238 = load i32, ptr %52, align 4
  %239 = or i32 %238, 131072
  store i32 %239, ptr %52, align 4
  call void @_set_bit(i32 noundef 5, ptr noundef %0) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153b_runtime_enable(ptr noundef %0, i1 noundef zeroext %1) #0 {
  br i1 %1, label %3, label %4

3:                                                ; preds = %2
  tail call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext true)
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  tail call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext true)
  tail call fastcc void @r8153b_ups_en(ptr noundef %0, i1 noundef zeroext true)
  br label %11

4:                                                ; preds = %2
  tail call fastcc void @r8153b_ups_en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  tail call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  %5 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.usb_device, ptr %6, i32 0, i32 4
  %8 = load i32, ptr %7, align 4
  %9 = icmp ugt i32 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  br label %11

11:                                               ; preds = %10, %4, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8156_init(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = load volatile i32, ptr %0, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %299

22:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #24
  store i32 0, ptr %18, align 4, !annotation !8
  %23 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11672, i16 noundef zeroext 4, ptr noundef nonnull %18, i16 noundef zeroext 0) #24
  %24 = load i32, ptr %18, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #24
  %25 = and i32 %24, -33554432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 %25, ptr %17, align 4
  %26 = load volatile i32, ptr %0, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %22
  %30 = call ptr @kmemdup(ptr noundef nonnull %17, i32 noundef 4, i32 noundef 3264) #24
  %31 = icmp eq ptr %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %36 = load i32, ptr %35, align 8
  %37 = call i32 @usb_control_msg(ptr noundef %34, i32 noundef %36, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11672, i16 noundef zeroext 136, ptr noundef nonnull %30, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %30) #24
  %38 = icmp eq i32 %37, -19
  br i1 %38, label %39, label %45

39:                                               ; preds = %32
  %40 = load ptr, ptr %33, align 4
  %41 = getelementptr inbounds %struct.usb_device, ptr %40, i32 0, i32 3
  %42 = load i32, ptr %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %45

45:                                               ; preds = %44, %39, %32, %29, %22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 0, ptr %16, align 4
  %46 = load volatile i32, ptr %0, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %45
  %50 = call ptr @kmemdup(ptr noundef nonnull %16, i32 noundef 4, i32 noundef 3264) #24
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %56 = load i32, ptr %55, align 8
  %57 = call i32 @usb_control_msg(ptr noundef %54, i32 noundef %56, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11480, i16 noundef zeroext 204, ptr noundef nonnull %50, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %50) #24
  %58 = icmp eq i32 %57, -19
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = load ptr, ptr %53, align 4
  %61 = getelementptr inbounds %struct.usb_device, ptr %60, i32 0, i32 3
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %65

65:                                               ; preds = %64, %59, %52, %49, %45
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4, !annotation !8
  %66 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12308, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext 204) #24
  %67 = load i32, ptr %15, align 4
  %68 = and i32 %67, -2162688
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  %69 = or i32 %68, 2097152
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 %69, ptr %14, align 4
  %70 = load volatile i32, ptr %0, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %89

73:                                               ; preds = %65
  %74 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %75 = icmp eq ptr %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %78 = load ptr, ptr %77, align 4
  %79 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %80 = load i32, ptr %79, align 8
  %81 = call i32 @usb_control_msg(ptr noundef %78, i32 noundef %80, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12308, i16 noundef zeroext 204, ptr noundef nonnull %74, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %74) #24
  %82 = icmp eq i32 %81, -19
  br i1 %82, label %83, label %89

83:                                               ; preds = %76
  %84 = load ptr, ptr %77, align 4
  %85 = getelementptr inbounds %struct.usb_device, ptr %84, i32 0, i32 3
  %86 = load i32, ptr %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %83
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %89

89:                                               ; preds = %88, %83, %76, %73, %65
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  br label %94

90:                                               ; preds = %100
  %91 = add nuw nsw i32 %95, 1
  %92 = icmp eq i32 %91, 500
  br i1 %92, label %93, label %94

93:                                               ; preds = %94, %90
  br label %104

94:                                               ; preds = %90, %89
  %95 = phi i32 [ 0, %89 ], [ %91, %90 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %96 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 307) #24
  %97 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %93

100:                                              ; preds = %94
  call void @msleep(i32 noundef 20) #24
  %101 = load volatile i32, ptr %0, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %90, label %299

104:                                              ; preds = %112, %93
  %105 = phi i32 [ %116, %112 ], [ 0, %93 ]
  %106 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %107 = and i16 %106, 7
  %108 = icmp eq i16 %107, 5
  %109 = and i16 %106, 6
  %110 = icmp eq i16 %109, 2
  %111 = or i1 %110, %108
  br i1 %111, label %119, label %112

112:                                              ; preds = %104
  call void @msleep(i32 noundef 20) #24
  %113 = load volatile i32, ptr %0, align 4
  %114 = and i32 %113, 1
  %115 = icmp ne i32 %114, 0
  %116 = add nuw nsw i32 %105, 1
  %117 = icmp eq i32 %116, 500
  %118 = select i1 %115, i1 true, i1 %117
  br i1 %118, label %119, label %104

119:                                              ; preds = %112, %104
  %120 = icmp eq i16 %107, 2
  br i1 %120, label %121, label %124

121:                                              ; preds = %119
  %122 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23448)
  %123 = and i16 %122, -11
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23448, i16 noundef zeroext %123)
  br label %124

124:                                              ; preds = %121, %119
  %125 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %126 = and i16 %125, 2048
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = and i16 %125, -2049
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %129) #24
  br label %130

130:                                              ; preds = %128, %124
  br label %131

131:                                              ; preds = %136, %130
  %132 = phi i32 [ %140, %136 ], [ 0, %130 ]
  %133 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %134 = and i16 %133, 7
  %135 = icmp eq i16 %134, 3
  br i1 %135, label %146, label %136

136:                                              ; preds = %131
  call void @msleep(i32 noundef 20) #24
  %137 = load volatile i32, ptr %0, align 4
  %138 = and i32 %137, 1
  %139 = icmp ne i32 %138, 0
  %140 = add nuw nsw i32 %132, 1
  %141 = icmp eq i32 %140, 500
  %142 = select i1 %139, i1 true, i1 %141
  br i1 %142, label %143, label %131

143:                                              ; preds = %136
  %144 = load i1, ptr @r8156_init.__already_done, align 1
  br i1 %144, label %146, label %145, !prof !24

145:                                              ; preds = %143
  store i1 true, ptr @r8156_init.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 8004, i32 noundef 9, ptr noundef null) #24
  br label %146

146:                                              ; preds = %145, %143, %131
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 4095, ptr %12, align 4
  %147 = load volatile i32, ptr %0, align 4
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %166

150:                                              ; preds = %146
  %151 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %152 = icmp eq ptr %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %155 = load ptr, ptr %154, align 4
  %156 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %157 = load i32, ptr %156, align 8
  %158 = call i32 @usb_control_msg(ptr noundef %155, i32 noundef %157, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -13316, i16 noundef zeroext 51, ptr noundef nonnull %151, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %151) #24
  %159 = icmp eq i32 %158, -19
  br i1 %159, label %160, label %166

160:                                              ; preds = %153
  %161 = load ptr, ptr %154, align 4
  %162 = getelementptr inbounds %struct.usb_device, ptr %161, i32 0, i32 3
  %163 = load i32, ptr %162, align 8
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %160
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %166

166:                                              ; preds = %165, %160, %153, %150, %146
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 32768000, ptr %11, align 4
  %167 = load volatile i32, ptr %0, align 4
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %186

170:                                              ; preds = %166
  %171 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %172 = icmp eq ptr %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %175 = load ptr, ptr %174, align 4
  %176 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %177 = load i32, ptr %176, align 8
  %178 = call i32 @usb_control_msg(ptr noundef %175, i32 noundef %177, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11048, i16 noundef zeroext 204, ptr noundef nonnull %171, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %171) #24
  %179 = icmp eq i32 %178, -19
  br i1 %179, label %180, label %186

180:                                              ; preds = %173
  %181 = load ptr, ptr %174, align 4
  %182 = getelementptr inbounds %struct.usb_device, ptr %181, i32 0, i32 3
  %183 = load i32, ptr %182, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %180
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %186

186:                                              ; preds = %185, %180, %173, %170, %166
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  call fastcc void @r8153b_power_cut_en(ptr noundef %0)
  call fastcc void @r8156_ups_en(ptr noundef %0)
  call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  %187 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %188 = load ptr, ptr %187, align 4
  %189 = getelementptr inbounds %struct.usb_device, ptr %188, i32 0, i32 4
  %190 = load i32, ptr %189, align 4
  %191 = icmp ugt i32 %190, 4
  br i1 %191, label %192, label %194

192:                                              ; preds = %186
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  %193 = load ptr, ptr %187, align 4
  br label %194

194:                                              ; preds = %192, %186
  %195 = phi ptr [ %193, %192 ], [ %188, %186 ]
  call void @usb_enable_lpm(ptr noundef %195) #24
  call fastcc void @r8156_mac_clk_spd(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %196 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 307) #24
  %197 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %198 = and i32 %197, 49151
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 %198, ptr %9, align 4
  %199 = load volatile i32, ptr %0, align 4
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %217

202:                                              ; preds = %194
  %203 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %204 = icmp eq ptr %203, null
  br i1 %204, label %217, label %205

205:                                              ; preds = %202
  %206 = load ptr, ptr %187, align 4
  %207 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %208 = load i32, ptr %207, align 8
  %209 = call i32 @usb_control_msg(ptr noundef %206, i32 noundef %208, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %203, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %203) #24
  %210 = icmp eq i32 %209, -19
  br i1 %210, label %211, label %217

211:                                              ; preds = %205
  %212 = load ptr, ptr %187, align 4
  %213 = getelementptr inbounds %struct.usb_device, ptr %212, i32 0, i32 3
  %214 = load i32, ptr %213, align 8
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %211
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %217

217:                                              ; preds = %216, %211, %205, %202, %194
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %218 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11368, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 307) #24
  %219 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %220 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %221 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = or i32 %219, 32768
  %225 = and i32 %219, 32766
  %226 = select i1 %223, i32 %225, i32 %224
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  %227 = and i32 %226, 65534
  %228 = or i32 %227, 1
  store i32 %228, ptr %6, align 4
  %229 = load volatile i32, ptr %0, align 4
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %247

232:                                              ; preds = %217
  %233 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %234 = icmp eq ptr %233, null
  br i1 %234, label %247, label %235

235:                                              ; preds = %232
  %236 = load ptr, ptr %187, align 4
  %237 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %238 = load i32, ptr %237, align 8
  %239 = call i32 @usb_control_msg(ptr noundef %236, i32 noundef %238, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11368, i16 noundef zeroext 307, ptr noundef nonnull %233, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %233) #24
  %240 = icmp eq i32 %239, -19
  br i1 %240, label %241, label %247

241:                                              ; preds = %235
  %242 = load ptr, ptr %187, align 4
  %243 = getelementptr inbounds %struct.usb_device, ptr %242, i32 0, i32 3
  %244 = load i32, ptr %243, align 8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %241
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %247

247:                                              ; preds = %246, %241, %235, %232, %217
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @_set_bit(i32 noundef 7, ptr noundef %0) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %248 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 204) #24
  %249 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %250 = and i32 %249, -9502720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %250, ptr %4, align 4
  %251 = load volatile i32, ptr %0, align 4
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %269

254:                                              ; preds = %247
  %255 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %256 = icmp eq ptr %255, null
  br i1 %256, label %269, label %257

257:                                              ; preds = %254
  %258 = load ptr, ptr %187, align 4
  %259 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %260 = load i32, ptr %259, align 8
  %261 = call i32 @usb_control_msg(ptr noundef %258, i32 noundef %260, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %255, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %255) #24
  %262 = icmp eq i32 %261, -19
  br i1 %262, label %263, label %269

263:                                              ; preds = %257
  %264 = load ptr, ptr %187, align 4
  %265 = getelementptr inbounds %struct.usb_device, ptr %264, i32 0, i32 3
  %266 = load i32, ptr %265, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %263
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %269

269:                                              ; preds = %268, %263, %257, %254, %247
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %270 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11084, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 0) #24
  %271 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %272 = and i32 %271, 253
  %273 = or i32 %272, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %273, ptr %2, align 4
  %274 = load volatile i32, ptr %0, align 4
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %292

277:                                              ; preds = %269
  %278 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %279 = icmp eq ptr %278, null
  br i1 %279, label %292, label %280

280:                                              ; preds = %277
  %281 = load ptr, ptr %187, align 4
  %282 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %283 = load i32, ptr %282, align 8
  %284 = call i32 @usb_control_msg(ptr noundef %281, i32 noundef %283, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11084, i16 noundef zeroext 17, ptr noundef nonnull %278, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %278) #24
  %285 = icmp eq i32 %284, -19
  br i1 %285, label %286, label %292

286:                                              ; preds = %280
  %287 = load ptr, ptr %187, align 4
  %288 = getelementptr inbounds %struct.usb_device, ptr %287, i32 0, i32 3
  %289 = load i32, ptr %288, align 8
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %286
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %292

292:                                              ; preds = %291, %286, %280, %277, %269
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %293 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23116) #24
  %294 = icmp sgt i16 %293, -1
  br i1 %294, label %297, label %295

295:                                              ; preds = %292
  %296 = and i16 %293, 32767
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23116, i16 noundef zeroext %296) #24
  br label %297

297:                                              ; preds = %295, %292
  call fastcc void @rtl_tally_reset(ptr noundef %0)
  %298 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 30
  store i32 15000, ptr %298, align 4
  br label %299

299:                                              ; preds = %297, %100, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8156_enable(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %141

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 20
  %17 = load i32, ptr %16, align 4
  %18 = add i32 %17, 30
  %19 = udiv i32 16384, %18
  %20 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 29
  store i32 %19, ptr %20, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %21 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %22 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %23 = and i32 %22, 4
  %24 = icmp ne i32 %23, 0
  call fastcc void @rtl_eee_plus_en(ptr noundef %0, i1 noundef zeroext %24) #24
  call fastcc void @r8153_set_rx_early_timeout(ptr noundef %0)
  call fastcc void @r8153_set_rx_early_size(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %25 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 307) #24
  %26 = load i32, ptr %8, align 4
  %27 = trunc i32 %26 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call fastcc void @rtl_set_ifg(ptr noundef %0, i16 noundef zeroext %27)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %28 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 460) #24
  %29 = load i32, ptr %7, align 4
  %30 = lshr i32 %29, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %31 = and i32 %26, 1024
  %32 = icmp eq i32 %31, 0
  %33 = and i32 %30, 65471
  %34 = or i32 %30, 64
  %35 = select i1 %32, i32 %34, i32 %33
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  %36 = shl nuw i32 %35, 16
  store i32 %36, ptr %6, align 4
  %37 = load volatile i32, ptr %0, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %56

40:                                               ; preds = %13
  %41 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %42 = icmp eq ptr %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %47 = load i32, ptr %46, align 8
  %48 = call i32 @usb_control_msg(ptr noundef %45, i32 noundef %47, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 460, ptr noundef nonnull %41, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %41) #24
  %49 = icmp eq i32 %48, -19
  br i1 %49, label %50, label %56

50:                                               ; preds = %43
  %51 = load ptr, ptr %44, align 4
  %52 = getelementptr inbounds %struct.usb_device, ptr %51, i32 0, i32 3
  %53 = load i32, ptr %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %56

56:                                               ; preds = %55, %50, %43, %40, %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %57 = and i32 %26, 16
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %80, label %59

59:                                               ; preds = %56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 17, ptr %5, align 4
  %60 = load volatile i32, ptr %0, align 4
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %79

63:                                               ; preds = %59
  %64 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %65 = icmp eq ptr %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %68 = load ptr, ptr %67, align 4
  %69 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %70 = load i32, ptr %69, align 8
  %71 = call i32 @usb_control_msg(ptr noundef %68, i32 noundef %70, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8116, i16 noundef zeroext 307, ptr noundef nonnull %64, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %64) #24
  %72 = icmp eq i32 %71, -19
  br i1 %72, label %73, label %79

73:                                               ; preds = %66
  %74 = load ptr, ptr %67, align 4
  %75 = getelementptr inbounds %struct.usb_device, ptr %74, i32 0, i32 3
  %76 = load i32, ptr %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %79

79:                                               ; preds = %78, %73, %66, %63, %59
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  br label %104

80:                                               ; preds = %56
  %81 = and i32 %26, 256
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %104, label %83

83:                                               ; preds = %80
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 61, ptr %4, align 4
  %84 = load volatile i32, ptr %0, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %103

87:                                               ; preds = %83
  %88 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %89 = icmp eq ptr %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %92 = load ptr, ptr %91, align 4
  %93 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %94 = load i32, ptr %93, align 8
  %95 = call i32 @usb_control_msg(ptr noundef %92, i32 noundef %94, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8116, i16 noundef zeroext 307, ptr noundef nonnull %88, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %88) #24
  %96 = icmp eq i32 %95, -19
  br i1 %96, label %97, label %103

97:                                               ; preds = %90
  %98 = load ptr, ptr %91, align 4
  %99 = getelementptr inbounds %struct.usb_device, ptr %98, i32 0, i32 3
  %100 = load i32, ptr %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %97
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %103

103:                                              ; preds = %102, %97, %90, %87, %83
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %104

104:                                              ; preds = %103, %80, %79
  %105 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %106 = load ptr, ptr %105, align 4
  %107 = getelementptr inbounds %struct.usb_device, ptr %106, i32 0, i32 4
  %108 = load i32, ptr %107, align 4
  %109 = icmp eq i32 %108, 3
  br i1 %109, label %110, label %140

110:                                              ; preds = %104
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %111 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19364, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %112 = load i32, ptr %3, align 4
  %113 = lshr i32 %112, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %114 = and i32 %113, 65520
  %115 = and i32 %26, 96
  %116 = icmp eq i32 %115, 96
  %117 = or i32 %113, 15
  %118 = or i32 %114, 1
  %119 = select i1 %116, i32 %117, i32 %118
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  %120 = shl nuw i32 %119, 16
  store i32 %120, ptr %2, align 4
  %121 = load volatile i32, ptr %0, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %139

124:                                              ; preds = %110
  %125 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %126 = icmp eq ptr %125, null
  br i1 %126, label %139, label %127

127:                                              ; preds = %124
  %128 = load ptr, ptr %105, align 4
  %129 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %130 = load i32, ptr %129, align 8
  %131 = call i32 @usb_control_msg(ptr noundef %128, i32 noundef %130, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19364, i16 noundef zeroext 204, ptr noundef nonnull %125, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %125) #24
  %132 = icmp eq i32 %131, -19
  br i1 %132, label %133, label %139

133:                                              ; preds = %127
  %134 = load ptr, ptr %105, align 4
  %135 = getelementptr inbounds %struct.usb_device, ptr %134, i32 0, i32 3
  %136 = load i32, ptr %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %133
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %139

139:                                              ; preds = %138, %133, %127, %124, %110
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  br label %140

140:                                              ; preds = %139, %104
  call fastcc void @rtl_enable(ptr noundef %0)
  br label %141

141:                                              ; preds = %140, %1
  %142 = phi i32 [ 0, %140 ], [ -19, %1 ]
  ret i32 %142
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8156_up(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = load volatile i32, ptr %0, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %276

24:                                               ; preds = %1
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  %25 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %26 = and i16 %25, -5
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %26) #24
  br label %27

27:                                               ; preds = %27, %24
  %28 = phi i32 [ 0, %24 ], [ %33, %27 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #24
  store i32 0, ptr %20, align 4, !annotation !8
  %29 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %20, i16 noundef zeroext 307) #24
  %30 = load i32, ptr %20, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #24
  %31 = and i32 %30, 256
  %32 = icmp ne i32 %31, 0
  %33 = add nuw nsw i32 %28, 1
  %34 = icmp eq i32 %33, 20
  %35 = select i1 %32, i1 true, i1 %34
  br i1 %35, label %36, label %27

36:                                               ; preds = %27
  %37 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %38 = load i32, ptr %37, align 4
  %39 = and i32 %38, -9
  store i32 %39, ptr %37, align 4
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext true)
  call fastcc void @r8153_teredo_off(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #24
  store i32 0, ptr %19, align 4, !annotation !8
  %40 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %19, i16 noundef zeroext 256) #24
  %41 = load i32, ptr %19, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #24
  %42 = and i32 %41, -16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #24
  store i32 %42, ptr %18, align 4
  %43 = load volatile i32, ptr %0, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %36
  %47 = call ptr @kmemdup(ptr noundef nonnull %18, i32 noundef 4, i32 noundef 3264) #24
  %48 = icmp eq ptr %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %51 = load ptr, ptr %50, align 4
  %52 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %53 = load i32, ptr %52, align 8
  %54 = call i32 @usb_control_msg(ptr noundef %51, i32 noundef %53, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %47, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %47) #24
  %55 = icmp eq i32 %54, -19
  br i1 %55, label %56, label %62

56:                                               ; preds = %49
  %57 = load ptr, ptr %50, align 4
  %58 = getelementptr inbounds %struct.usb_device, ptr %57, i32 0, i32 3
  %59 = load i32, ptr %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %62

62:                                               ; preds = %61, %56, %49, %46, %36
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #24
  call fastcc void @rtl8152_nic_reset(ptr noundef %0)
  call fastcc void @rtl_reset_bmu(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 0, ptr %17, align 4, !annotation !8
  %63 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %17, i16 noundef zeroext 256) #24
  %64 = load i32, ptr %17, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  %65 = and i32 %64, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 %65, ptr %16, align 4
  %66 = load volatile i32, ptr %0, align 4
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %85

69:                                               ; preds = %62
  %70 = call ptr @kmemdup(ptr noundef nonnull %16, i32 noundef 4, i32 noundef 3264) #24
  %71 = icmp eq ptr %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %74 = load ptr, ptr %73, align 4
  %75 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %76 = load i32, ptr %75, align 8
  %77 = call i32 @usb_control_msg(ptr noundef %74, i32 noundef %76, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %70, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %70) #24
  %78 = icmp eq i32 %77, -19
  br i1 %78, label %79, label %85

79:                                               ; preds = %72
  %80 = load ptr, ptr %73, align 4
  %81 = getelementptr inbounds %struct.usb_device, ptr %80, i32 0, i32 3
  %82 = load i32, ptr %81, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %79
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %85

85:                                               ; preds = %84, %79, %72, %69, %62
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4, !annotation !8
  %86 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext 460) #24
  %87 = load i32, ptr %15, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  %88 = and i32 %87, -1073807360
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 %88, ptr %14, align 4
  %89 = load volatile i32, ptr %0, align 4
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %108

92:                                               ; preds = %85
  %93 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %94 = icmp eq ptr %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %97 = load ptr, ptr %96, align 4
  %98 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %99 = load i32, ptr %98, align 8
  %100 = call i32 @usb_control_msg(ptr noundef %97, i32 noundef %99, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %93, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %93) #24
  %101 = icmp eq i32 %100, -19
  br i1 %101, label %102, label %108

102:                                              ; preds = %95
  %103 = load ptr, ptr %96, align 4
  %104 = getelementptr inbounds %struct.usb_device, ptr %103, i32 0, i32 3
  %105 = load i32, ptr %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %102
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %108

108:                                              ; preds = %107, %102, %95, %92, %85
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  %109 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %110 = load ptr, ptr %109, align 4
  %111 = getelementptr inbounds %struct.net_device, ptr %110, i32 0, i32 23
  %112 = load i64, ptr %111, align 16
  %113 = and i64 %112, 256
  %114 = icmp ne i64 %113, 0
  call fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext %114)
  call void @rtl8156_change_mtu(ptr noundef %0)
  %115 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %116 = load i8, ptr %115, align 8
  %117 = add i8 %116, -10
  %118 = icmp ult i8 %117, 3
  br i1 %118, label %119, label %144

119:                                              ; preds = %108
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %120 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11084, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 51) #24
  %121 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %122 = and i32 %121, 65533
  %123 = or i32 %122, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 %123, ptr %12, align 4
  %124 = load volatile i32, ptr %0, align 4
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %143

127:                                              ; preds = %119
  %128 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %129 = icmp eq ptr %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %132 = load ptr, ptr %131, align 4
  %133 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %134 = load i32, ptr %133, align 8
  %135 = call i32 @usb_control_msg(ptr noundef %132, i32 noundef %134, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11084, i16 noundef zeroext 51, ptr noundef nonnull %128, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %128) #24
  %136 = icmp eq i32 %135, -19
  br i1 %136, label %137, label %143

137:                                              ; preds = %130
  %138 = load ptr, ptr %131, align 4
  %139 = getelementptr inbounds %struct.usb_device, ptr %138, i32 0, i32 3
  %140 = load i32, ptr %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %137
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %143

143:                                              ; preds = %142, %137, %130, %127, %119
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  br label %144

144:                                              ; preds = %143, %108
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %145 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16224, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 460) #24
  %146 = load i32, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %147 = and i32 %146, -268435456
  %148 = or i32 %147, 524288
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 %148, ptr %10, align 4
  %149 = load volatile i32, ptr %0, align 4
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %168

152:                                              ; preds = %144
  %153 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %154 = icmp eq ptr %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %157 = load ptr, ptr %156, align 4
  %158 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %159 = load i32, ptr %158, align 8
  %160 = call i32 @usb_control_msg(ptr noundef %157, i32 noundef %159, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16224, i16 noundef zeroext 460, ptr noundef nonnull %153, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %153) #24
  %161 = icmp eq i32 %160, -19
  br i1 %161, label %162, label %168

162:                                              ; preds = %155
  %163 = load ptr, ptr %156, align 4
  %164 = getelementptr inbounds %struct.usb_device, ptr %163, i32 0, i32 3
  %165 = load i32, ptr %164, align 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %162
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %168

168:                                              ; preds = %167, %162, %155, %152, %144
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %169 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %170 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %171 = and i32 %170, 49151
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %171, ptr %8, align 4
  %172 = load volatile i32, ptr %0, align 4
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %191

175:                                              ; preds = %168
  %176 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %177 = icmp eq ptr %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %180 = load ptr, ptr %179, align 4
  %181 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %182 = load i32, ptr %181, align 8
  %183 = call i32 @usb_control_msg(ptr noundef %180, i32 noundef %182, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %176, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %176) #24
  %184 = icmp eq i32 %183, -19
  br i1 %184, label %185, label %191

185:                                              ; preds = %178
  %186 = load ptr, ptr %179, align 4
  %187 = getelementptr inbounds %struct.usb_device, ptr %186, i32 0, i32 3
  %188 = load i32, ptr %187, align 8
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %185
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %191

191:                                              ; preds = %190, %185, %178, %175, %168
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %192 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11480, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 204) #24
  %193 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %194 = and i32 %193, -50397184
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %194, ptr %6, align 4
  %195 = load volatile i32, ptr %0, align 4
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %214

198:                                              ; preds = %191
  %199 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %200 = icmp eq ptr %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %203 = load ptr, ptr %202, align 4
  %204 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %205 = load i32, ptr %204, align 8
  %206 = call i32 @usb_control_msg(ptr noundef %203, i32 noundef %205, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11480, i16 noundef zeroext 204, ptr noundef nonnull %199, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %199) #24
  %207 = icmp eq i32 %206, -19
  br i1 %207, label %208, label %214

208:                                              ; preds = %201
  %209 = load ptr, ptr %202, align 4
  %210 = getelementptr inbounds %struct.usb_device, ptr %209, i32 0, i32 3
  %211 = load i32, ptr %210, align 8
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %208
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %214

214:                                              ; preds = %213, %208, %201, %198, %191
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 6292480, ptr %5, align 4
  %215 = load volatile i32, ptr %0, align 4
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %234

218:                                              ; preds = %214
  %219 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %220 = icmp eq ptr %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %223 = load ptr, ptr %222, align 4
  %224 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %225 = load i32, ptr %224, align 8
  %226 = call i32 @usb_control_msg(ptr noundef %223, i32 noundef %225, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11252, i16 noundef zeroext 255, ptr noundef nonnull %219, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %219) #24
  %227 = icmp eq i32 %226, -19
  br i1 %227, label %228, label %234

228:                                              ; preds = %221
  %229 = load ptr, ptr %222, align 4
  %230 = getelementptr inbounds %struct.usb_device, ptr %229, i32 0, i32 3
  %231 = load i32, ptr %230, align 8
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %228
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %234

234:                                              ; preds = %233, %228, %221, %218, %214
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %235 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 27
  %236 = load i32, ptr %235, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %237 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 307) #24
  %238 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %239 = lshr i32 %238, 4
  %240 = and i32 %239, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %241 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 460) #24
  %242 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %243 = lshr i32 %242, 19
  %244 = and i32 %243, 2
  %245 = or i32 %244, %240
  %246 = and i32 %243, 8
  %247 = or i32 %245, %246
  %248 = and i32 %243, 4
  %249 = or i32 %247, %248
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %250 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16204, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 460) #24
  %251 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %252 = lshr i32 %251, 11
  %253 = and i32 %252, 32
  %254 = or i32 %249, %253
  %255 = icmp eq i32 %236, %254
  br i1 %255, label %265, label %256

256:                                              ; preds = %234
  %257 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 28
  %258 = load i32, ptr %257, align 4
  %259 = and i32 %258, 32
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %256
  %262 = load ptr, ptr %109, align 4
  call void (ptr, ptr, ...) @netdev_warn(ptr noundef %262, ptr noundef nonnull @.str.21) #25
  br label %263

263:                                              ; preds = %261, %256
  %264 = load i32, ptr %235, align 8
  call fastcc void @__rtl_set_wol(ptr noundef %0, i32 noundef %264)
  br label %265

265:                                              ; preds = %263, %234
  %266 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %267 = or i16 %266, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %267) #24
  %268 = load i32, ptr %37, align 4
  %269 = or i32 %268, 8
  store i32 %269, ptr %37, align 4
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext true)
  %270 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %271 = load ptr, ptr %270, align 4
  %272 = getelementptr inbounds %struct.usb_device, ptr %271, i32 0, i32 4
  %273 = load i32, ptr %272, align 4
  %274 = icmp ugt i32 %273, 4
  br i1 %274, label %275, label %276

275:                                              ; preds = %265
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  br label %276

276:                                              ; preds = %275, %265, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8156_down(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = load volatile i32, ptr %0, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  tail call fastcc void @rtl_drop_queued_tx(ptr noundef %0)
  br label %150

16:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %17 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 307) #24
  %18 = load i32, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %19 = and i32 %18, 49151
  %20 = or i32 %19, 16384
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 %20, ptr %10, align 4
  %21 = load volatile i32, ptr %0, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %16
  %25 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %26 = icmp eq ptr %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %31 = load i32, ptr %30, align 8
  %32 = call i32 @usb_control_msg(ptr noundef %29, i32 noundef %31, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %25, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %25) #24
  %33 = icmp eq i32 %32, -19
  br i1 %33, label %34, label %40

34:                                               ; preds = %27
  %35 = load ptr, ptr %28, align 4
  %36 = getelementptr inbounds %struct.usb_device, ptr %35, i32 0, i32 3
  %37 = load i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %40

40:                                               ; preds = %39, %34, %27, %24, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153b_power_cut_en(ptr noundef %0)
  %41 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %42 = and i16 %41, -5
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %42) #24
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i32 [ 0, %40 ], [ %49, %43 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %45 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %46 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %47 = and i32 %46, 256
  %48 = icmp ne i32 %47, 0
  %49 = add nuw nsw i32 %44, 1
  %50 = icmp eq i32 %49, 20
  %51 = select i1 %48, i1 true, i1 %50
  br i1 %51, label %52, label %43

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %54 = load i32, ptr %53, align 4
  %55 = and i32 %54, -9
  store i32 %55, ptr %53, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %56 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 256) #24
  %57 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %58 = and i32 %57, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 %58, ptr %7, align 4
  %59 = load volatile i32, ptr %0, align 4
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %78

62:                                               ; preds = %52
  %63 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %64 = icmp eq ptr %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %67 = load ptr, ptr %66, align 4
  %68 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %69 = load i32, ptr %68, align 8
  %70 = call i32 @usb_control_msg(ptr noundef %67, i32 noundef %69, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %63, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %63) #24
  %71 = icmp eq i32 %70, -19
  br i1 %71, label %72, label %78

72:                                               ; preds = %65
  %73 = load ptr, ptr %66, align 4
  %74 = getelementptr inbounds %struct.usb_device, ptr %73, i32 0, i32 3
  %75 = load i32, ptr %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %72
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %78

78:                                               ; preds = %77, %72, %65, %62, %52
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call fastcc void @rtl_disable(ptr noundef %0)
  call fastcc void @rtl_reset_bmu(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 255, ptr %6, align 4
  %79 = load volatile i32, ptr %0, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %98

82:                                               ; preds = %78
  %83 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %84 = icmp eq ptr %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %87 = load ptr, ptr %86, align 4
  %88 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %89 = load i32, ptr %88, align 8
  %90 = call i32 @usb_control_msg(ptr noundef %87, i32 noundef %89, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16188, i16 noundef zeroext 307, ptr noundef nonnull %83, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %83) #24
  %91 = icmp eq i32 %90, -19
  br i1 %91, label %92, label %98

92:                                               ; preds = %85
  %93 = load ptr, ptr %86, align 4
  %94 = getelementptr inbounds %struct.usb_device, ptr %93, i32 0, i32 3
  %95 = load i32, ptr %94, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %98

98:                                               ; preds = %97, %92, %85, %82, %78
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %99 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  %100 = load i32, ptr %5, align 4
  %101 = and i32 %100, 2130706432
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %102 = or i32 %101, -2147483648
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %102, ptr %4, align 4
  %103 = load volatile i32, ptr %0, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %122

106:                                              ; preds = %98
  %107 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %108 = icmp eq ptr %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %111 = load ptr, ptr %110, align 4
  %112 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %113 = load i32, ptr %112, align 8
  %114 = call i32 @usb_control_msg(ptr noundef %111, i32 noundef %113, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %107, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %107) #24
  %115 = icmp eq i32 %114, -19
  br i1 %115, label %116, label %122

116:                                              ; preds = %109
  %117 = load ptr, ptr %110, align 4
  %118 = getelementptr inbounds %struct.usb_device, ptr %117, i32 0, i32 3
  %119 = load i32, ptr %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %116
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %122

122:                                              ; preds = %121, %116, %109, %106, %98
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext true)
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %123 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 256) #24
  %124 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %125 = or i32 %124, 14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %125, ptr %2, align 4
  %126 = load volatile i32, ptr %0, align 4
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %145

129:                                              ; preds = %122
  %130 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %131 = icmp eq ptr %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %134 = load ptr, ptr %133, align 4
  %135 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %136 = load i32, ptr %135, align 8
  %137 = call i32 @usb_control_msg(ptr noundef %134, i32 noundef %136, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %130, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %130) #24
  %138 = icmp eq i32 %137, -19
  br i1 %138, label %139, label %145

139:                                              ; preds = %132
  %140 = load ptr, ptr %133, align 4
  %141 = getelementptr inbounds %struct.usb_device, ptr %140, i32 0, i32 3
  %142 = load i32, ptr %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %139
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %145

145:                                              ; preds = %144, %139, %132, %129, %122
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %146 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %147 = or i16 %146, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %147) #24
  %148 = load i32, ptr %53, align 4
  %149 = or i32 %148, 8
  store i32 %149, ptr %53, align 4
  br label %150

150:                                              ; preds = %145, %15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8156_hw_phy_cfg(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 0, ptr %12, align 4, !annotation !8
  %13 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %12, i16 noundef zeroext 204) #24
  %14 = load i32, ptr %12, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  %15 = and i32 %14, 65536
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %1
  %18 = and i32 %14, -131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 %18, ptr %11, align 4
  %19 = load volatile i32, ptr %0, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %24 = icmp eq ptr %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %29 = load i32, ptr %28, align 8
  %30 = call i32 @usb_control_msg(ptr noundef %27, i32 noundef %29, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10216, i16 noundef zeroext 204, ptr noundef nonnull %23, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %23) #24
  %31 = icmp eq i32 %30, -19
  br i1 %31, label %32, label %38

32:                                               ; preds = %25
  %33 = load ptr, ptr %26, align 4
  %34 = getelementptr inbounds %struct.usb_device, ptr %33, i32 0, i32 3
  %35 = load i32, ptr %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %38

38:                                               ; preds = %37, %32, %25, %22, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  br label %39

39:                                               ; preds = %38, %1
  br label %40

40:                                               ; preds = %48, %39
  %41 = phi i32 [ %52, %48 ], [ 0, %39 ]
  %42 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %43 = and i16 %42, 7
  %44 = icmp eq i16 %43, 5
  %45 = and i16 %42, 6
  %46 = icmp eq i16 %45, 2
  %47 = or i1 %46, %44
  br i1 %47, label %55, label %48

48:                                               ; preds = %40
  call void @msleep(i32 noundef 20) #24
  %49 = load volatile i32, ptr %0, align 4
  %50 = and i32 %49, 1
  %51 = icmp ne i32 %50, 0
  %52 = add nuw nsw i32 %41, 1
  %53 = icmp eq i32 %52, 500
  %54 = select i1 %51, i1 true, i1 %53
  br i1 %54, label %55, label %40

55:                                               ; preds = %48, %40
  %56 = icmp eq i16 %43, 2
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext true)
  %58 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23448)
  %59 = and i16 %58, -11
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23448, i16 noundef zeroext %59)
  br label %61

60:                                               ; preds = %55
  call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext false)
  br label %61

61:                                               ; preds = %60, %57
  %62 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %63 = and i16 %62, -5
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %63) #24
  br label %64

64:                                               ; preds = %64, %61
  %65 = phi i32 [ 0, %61 ], [ %70, %64 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %66 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 307) #24
  %67 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %68 = and i32 %67, 256
  %69 = icmp ne i32 %68, 0
  %70 = add nuw nsw i32 %65, 1
  %71 = icmp eq i32 %70, 20
  %72 = select i1 %69, i1 true, i1 %71
  br i1 %72, label %73, label %64

73:                                               ; preds = %64
  %74 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %75 = load i32, ptr %74, align 4
  %76 = and i32 %75, -9
  store i32 %76, ptr %74, align 4
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext false)
  br label %77

77:                                               ; preds = %82, %73
  %78 = phi i32 [ 0, %73 ], [ %86, %82 ]
  %79 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %80 = and i16 %79, 7
  %81 = icmp eq i16 %80, 3
  br i1 %81, label %92, label %82

82:                                               ; preds = %77
  call void @msleep(i32 noundef 20) #24
  %83 = load volatile i32, ptr %0, align 4
  %84 = and i32 %83, 1
  %85 = icmp ne i32 %84, 0
  %86 = add nuw nsw i32 %78, 1
  %87 = icmp eq i32 %86, 500
  %88 = select i1 %85, i1 true, i1 %87
  br i1 %88, label %89, label %77

89:                                               ; preds = %82
  %90 = load i1, ptr @r8156_hw_phy_cfg.__already_done, align 1
  br i1 %90, label %92, label %91, !prof !24

91:                                               ; preds = %89
  store i1 true, ptr @r8156_hw_phy_cfg.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 7236, i32 noundef 9, ptr noundef null) #24
  br label %92

92:                                               ; preds = %91, %89, %77
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %93 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %94 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %95 = and i32 %94, 65471
  %96 = or i32 %95, 64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %96, ptr %8, align 4
  %97 = load volatile i32, ptr %0, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %116

100:                                              ; preds = %92
  %101 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %102 = icmp eq ptr %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %105 = load ptr, ptr %104, align 4
  %106 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %107 = load i32, ptr %106, align 8
  %108 = call i32 @usb_control_msg(ptr noundef %105, i32 noundef %107, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 307, ptr noundef nonnull %101, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %101) #24
  %109 = icmp eq i32 %108, -19
  br i1 %109, label %110, label %116

110:                                              ; preds = %103
  %111 = load ptr, ptr %104, align 4
  %112 = getelementptr inbounds %struct.usb_device, ptr %111, i32 0, i32 3
  %113 = load i32, ptr %112, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %110
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %116

116:                                              ; preds = %115, %110, %103, %100, %92
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %117 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %118 = load i8, ptr %117, align 8
  switch i8 %118, label %389 [
    i8 11, label %119
    i8 12, label %187
  ]

119:                                              ; preds = %116
  %120 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21184)
  %121 = and i16 %120, -1024
  %122 = or i16 %121, 132
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21184, i16 noundef zeroext %122)
  %123 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21170)
  %124 = or i16 %123, 16
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21170, i16 noundef zeroext %124)
  %125 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21226)
  %126 = and i16 %125, -1024
  %127 = or i16 %126, 6
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21226, i16 noundef zeroext %127)
  %128 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21198)
  %129 = and i16 %128, -64
  %130 = or i16 %129, 6
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21198, i16 noundef zeroext %130)
  %131 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21496)
  %132 = and i16 %131, -4353
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21496, i16 noundef zeroext %132)
  %133 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21366)
  %134 = and i16 %133, 4095
  %135 = or i16 %134, 28672
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21366, i16 noundef zeroext %135)
  %136 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21224)
  %137 = or i16 %136, 1024
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21224, i16 noundef zeroext %137)
  %138 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21222)
  %139 = or i16 %138, 1023
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21222, i16 noundef zeroext %139)
  %140 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21220)
  %141 = or i16 %140, 1023
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21220, i16 noundef zeroext %141)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32534) #24
  %142 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %143 = and i16 %142, 255
  %144 = or i16 %143, -15360
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32534) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %144) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32533) #24
  %145 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %146 = and i16 %145, -1793
  %147 = or i16 %146, 768
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32533) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %147) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32520) #24
  %148 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %149 = and i16 %148, 255
  %150 = or i16 %149, 7168
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32520) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %150) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32527) #24
  %151 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %152 = and i16 %151, 255
  %153 = or i16 %152, 12288
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32527) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %153) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32514) #24
  %154 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %155 = and i16 %154, 255
  %156 = or i16 %155, -23296
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32514) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %156) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32510) #24
  %157 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %158 = and i16 %157, 255
  %159 = or i16 %158, 20480
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32510) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %159) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32747) #24
  %160 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %161 = and i16 %160, 255
  %162 = or i16 %161, 13056
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32747) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %162) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32512) #24
  %163 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %164 = and i16 %163, 255
  %165 = or i16 %164, 28672
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32512) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %165) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32748) #24
  %166 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %167 = and i16 %166, 255
  %168 = or i16 %167, -4096
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32748) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %168) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32746) #24
  %169 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %170 = and i16 %169, 255
  %171 = or i16 %170, 25856
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32746) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %171) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32548) #24
  %172 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %173 = and i16 %172, 255
  %174 = or i16 %173, -4864
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32548) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %174) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32545) #24
  %175 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %176 = or i16 %175, 256
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32545) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %176) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32543) #24
  %177 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %178 = and i16 %177, -257
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32543) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %178) #24
  %179 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16634)
  %180 = and i16 %179, -64
  %181 = or i16 %180, 56
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16634, i16 noundef zeroext %181)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32353) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -8778) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17356, i16 noundef zeroext 21845)
  %182 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16630)
  %183 = and i16 %182, -3585
  %184 = or i16 %183, 2560
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16630, i16 noundef zeroext %184)
  %185 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17108)
  %186 = and i16 %185, -8193
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17108, i16 noundef zeroext %186)
  br label %389

187:                                              ; preds = %116
  %188 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21226)
  %189 = or i16 %188, 1023
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21226, i16 noundef zeroext %189)
  %190 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21198)
  %191 = and i16 %190, -64
  %192 = or i16 %191, 6
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21198, i16 noundef zeroext %192)
  %193 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21496)
  %194 = and i16 %193, -4353
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21496, i16 noundef zeroext %194)
  %195 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21312)
  %196 = and i16 %195, -4
  %197 = or i16 %196, 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21312, i16 noundef zeroext %197)
  %198 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21184)
  %199 = and i16 %198, -232
  %200 = or i16 %199, 68
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21184, i16 noundef zeroext %200)
  %201 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21484)
  %202 = and i16 %201, -129
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21484, i16 noundef zeroext %202)
  %203 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21376)
  %204 = and i16 %203, -769
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21376, i16 noundef zeroext %204)
  %205 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21410)
  %206 = and i16 %205, -8
  %207 = or i16 %206, 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21410, i16 noundef zeroext %207)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21172, i16 noundef zeroext 168)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21412, i16 noundef zeroext 511)
  %208 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21366)
  %209 = and i16 %208, -241
  %210 = or i16 %209, 48
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21366, i16 noundef zeroext %210)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32425)
  %211 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18306)
  %212 = and i16 %211, 255
  %213 = or i16 %212, 1280
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext %213)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32423)
  %214 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18306)
  %215 = and i16 %214, 255
  %216 = or i16 %215, 1792
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext %216)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32606)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 339)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32612)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 339)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 86, ptr %7, align 4
  %217 = load volatile i32, ptr %0, align 4
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %236

220:                                              ; preds = %187
  %221 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %222 = icmp eq ptr %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %225 = load ptr, ptr %224, align 4
  %226 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %227 = load i32, ptr %226, align 8
  %228 = call i32 @usb_control_msg(ptr noundef %225, i32 noundef %227, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8104, i16 noundef zeroext 307, ptr noundef nonnull %221, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %221) #24
  %229 = icmp eq i32 %228, -19
  br i1 %229, label %230, label %236

230:                                              ; preds = %223
  %231 = load ptr, ptr %224, align 4
  %232 = getelementptr inbounds %struct.usb_device, ptr %231, i32 0, i32 3
  %233 = load i32, ptr %232, align 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %230
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %236

236:                                              ; preds = %235, %230, %223, %220, %187
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %237 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5808, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 460) #24
  %238 = load i32, ptr %6, align 4
  %239 = and i32 %238, -458752
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %240 = or i32 %239, 393216
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %240, ptr %5, align 4
  %241 = load volatile i32, ptr %0, align 4
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %260

244:                                              ; preds = %236
  %245 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %246 = icmp eq ptr %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %249 = load ptr, ptr %248, align 4
  %250 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %251 = load i32, ptr %250, align 8
  %252 = call i32 @usb_control_msg(ptr noundef %249, i32 noundef %251, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5808, i16 noundef zeroext 460, ptr noundef nonnull %245, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %245) #24
  %253 = icmp eq i32 %252, -19
  br i1 %253, label %254, label %260

254:                                              ; preds = %247
  %255 = load ptr, ptr %248, align 4
  %256 = getelementptr inbounds %struct.usb_device, ptr %255, i32 0, i32 3
  %257 = load i32, ptr %256, align 8
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %254
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %260

260:                                              ; preds = %259, %254, %247, %244, %236
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32169) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 527) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32534) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 30787) #24
  %261 = call fastcc i32 @rtl_phy_patch_request(ptr noundef %0, i1 noundef zeroext true, i1 noundef zeroext true)
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %420

263:                                              ; preds = %260
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %264 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %265 = load i32, ptr %4, align 4
  %266 = and i32 %265, -131072
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %267 = or i32 %266, 65536
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %267, ptr %3, align 4
  %268 = load volatile i32, ptr %0, align 4
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %287

271:                                              ; preds = %263
  %272 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %273 = icmp eq ptr %272, null
  br i1 %273, label %287, label %274

274:                                              ; preds = %271
  %275 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %276 = load ptr, ptr %275, align 4
  %277 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %278 = load i32, ptr %277, align 8
  %279 = call i32 @usb_control_msg(ptr noundef %276, i32 noundef %278, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 460, ptr noundef nonnull %272, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %272) #24
  %280 = icmp eq i32 %279, -19
  br i1 %280, label %281, label %287

281:                                              ; preds = %274
  %282 = load ptr, ptr %275, align 4
  %283 = getelementptr inbounds %struct.usb_device, ptr %282, i32 0, i32 3
  %284 = load i32, ptr %283, align 8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %281
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %287

287:                                              ; preds = %286, %281, %274, %271, %263
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %288 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23486)
  %289 = and i16 %288, -14337
  %290 = or i16 %289, 2048
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23486, i16 noundef zeroext %290)
  %291 = load i32, ptr %74, align 4
  %292 = and i32 %291, -24579
  %293 = or i32 %292, 2
  store i32 %293, ptr %74, align 4
  %294 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504)
  %295 = and i16 %294, 32767
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %295)
  %296 = load i32, ptr %74, align 4
  %297 = and i32 %296, -4097
  store i32 %297, ptr %74, align 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -15338, i16 noundef zeroext 0)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -15338, i16 noundef zeroext 1280)
  %298 = load i32, ptr %74, align 4
  %299 = and i32 %298, -5
  store i32 %299, ptr %74, align 4
  %300 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400) #24
  %301 = and i16 %300, -17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %301) #24
  br label %302

302:                                              ; preds = %302, %287
  %303 = phi i32 [ 0, %287 ], [ %307, %302 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %304 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432) #24
  %305 = and i16 %304, 64
  %306 = icmp ne i16 %305, 0
  %307 = add nuw nsw i32 %303, 1
  %308 = icmp ult i32 %303, 4999
  %309 = select i1 %306, i1 %308, i1 false
  br i1 %309, label %302, label %310

310:                                              ; preds = %302
  %311 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -12184)
  %312 = or i16 %311, 8192
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %312)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32350) #24
  %313 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %314 = and i16 %313, -257
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32350) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %314) #24
  %315 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -19124)
  %316 = and i16 %315, 255
  %317 = or i16 %316, -9472
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -19124, i16 noundef zeroext %317)
  %318 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23468)
  %319 = and i16 %318, -2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23468, i16 noundef zeroext %319)
  %320 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23084)
  %321 = or i16 %320, 32
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23084, i16 noundef zeroext %321)
  %322 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21170)
  %323 = and i16 %322, -17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21170, i16 noundef zeroext %323)
  %324 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -22422)
  %325 = and i16 %324, -2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -22422, i16 noundef zeroext %325)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %326 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10176, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 204) #24
  %327 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %328 = and i32 %327, 2097152
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %389, label %330

330:                                              ; preds = %310
  %331 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -12184)
  %332 = and i16 %331, 2
  %333 = icmp eq i16 %332, 0
  br i1 %333, label %389, label %334

334:                                              ; preds = %330
  %335 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -12184)
  %336 = and i16 %335, -32
  %337 = or i16 %336, 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %337)
  %338 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -12182)
  %339 = or i16 %336, 25
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %339)
  %340 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -12182)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %337)
  %341 = and i16 %338, -2048
  %342 = and i16 %340, 2047
  %343 = or i16 %342, %341
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12182, i16 noundef zeroext %343)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %339)
  %344 = and i16 %340, -2048
  %345 = and i16 %338, 2047
  %346 = or i16 %344, %345
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12182, i16 noundef zeroext %346)
  %347 = or i16 %336, 9
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %347)
  %348 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -12182)
  %349 = or i16 %336, 17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %349)
  %350 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -12182)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %347)
  %351 = and i16 %348, -2048
  %352 = and i16 %350, 2047
  %353 = or i16 %352, %351
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12182, i16 noundef zeroext %353)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12184, i16 noundef zeroext %349)
  %354 = and i16 %350, -2048
  %355 = and i16 %348, 2047
  %356 = or i16 %354, %355
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -12182, i16 noundef zeroext %356)
  %357 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17062)
  %358 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17060)
  %359 = and i16 %357, -7968
  %360 = shl i16 %358, 8
  %361 = and i16 %360, 7936
  %362 = or i16 %361, %359
  %363 = lshr i16 %358, 8
  %364 = and i16 %363, 31
  %365 = or i16 %362, %364
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17062, i16 noundef zeroext %365)
  %366 = and i16 %358, -7968
  %367 = shl i16 %357, 8
  %368 = and i16 %367, 7936
  %369 = or i16 %368, %366
  %370 = lshr i16 %357, 8
  %371 = and i16 %370, 31
  %372 = or i16 %369, %371
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17060, i16 noundef zeroext %372)
  %373 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17384)
  %374 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17382)
  %375 = and i16 %373, -7968
  %376 = shl i16 %374, 8
  %377 = and i16 %376, 7936
  %378 = or i16 %377, %375
  %379 = lshr i16 %374, 8
  %380 = and i16 %379, 31
  %381 = or i16 %378, %380
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17384, i16 noundef zeroext %381)
  %382 = and i16 %374, -7968
  %383 = shl i16 %373, 8
  %384 = and i16 %383, 7936
  %385 = or i16 %384, %382
  %386 = lshr i16 %373, 8
  %387 = and i16 %386, 31
  %388 = or i16 %385, %387
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17382, i16 noundef zeroext %388)
  br label %389

389:                                              ; preds = %334, %330, %310, %119, %116
  %390 = load volatile i32, ptr %0, align 4
  %391 = and i32 %390, 128
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  %392 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %393 = and i16 %392, 32767
  %394 = shl nuw nsw i32 %391, 9
  %395 = trunc i32 %391 to i16
  %396 = shl nuw i16 %395, 8
  %397 = or i16 %393, %396
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %397) #24
  %398 = load i32, ptr %74, align 4
  %399 = and i32 %398, -65537
  %400 = or i32 %399, %394
  store i32 %400, ptr %74, align 4
  %401 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23512)
  %402 = and i16 %401, -513
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23512, i16 noundef zeroext %402)
  %403 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23062)
  %404 = and i16 %403, -2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23062, i16 noundef zeroext %404)
  %405 = load i32, ptr %74, align 4
  %406 = and i32 %405, -49
  store i32 %406, ptr %74, align 4
  %407 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %408 = load i8, ptr %407, align 8, !range !18
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %411, label %410

410:                                              ; preds = %389
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext true)
  br label %411

411:                                              ; preds = %410, %389
  %412 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %413 = or i16 %412, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %413) #24
  %414 = load i32, ptr %74, align 4
  %415 = or i32 %414, 8
  store i32 %415, ptr %74, align 4
  %416 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23544) #24
  %417 = or i16 %416, 3072
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23544, i16 noundef zeroext %417) #24
  %418 = load i32, ptr %74, align 4
  %419 = or i32 %418, 131072
  store i32 %419, ptr %74, align 4
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext true)
  call void @_set_bit(i32 noundef 5, ptr noundef %0) #24
  br label %420

420:                                              ; preds = %411, %260
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8156_runtime_enable(ptr noundef %0, i1 noundef zeroext %1) #0 {
  br i1 %1, label %3, label %4

3:                                                ; preds = %2
  tail call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext true)
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  tail call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext true)
  br label %11

4:                                                ; preds = %2
  tail call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  tail call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext true)
  %5 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.usb_device, ptr %6, i32 0, i32 4
  %8 = load i32, ptr %7, align 4
  %9 = icmp ugt i32 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  br label %11

11:                                               ; preds = %10, %4, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8156_change_mtu(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 20
  %13 = load i32, ptr %12, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  %14 = shl i32 %13, 16
  %15 = add i32 %14, 1441792
  store i32 %15, ptr %9, align 4
  %16 = load volatile i32, ptr %0, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %35

19:                                               ; preds = %1
  %20 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %21 = icmp eq ptr %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %26 = load i32, ptr %25, align 8
  %27 = call i32 @usb_control_msg(ptr noundef %24, i32 noundef %26, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16364, i16 noundef zeroext 460, ptr noundef nonnull %20, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %20) #24
  %28 = icmp eq i32 %27, -19
  br i1 %28, label %29, label %35

29:                                               ; preds = %22
  %30 = load ptr, ptr %23, align 4
  %31 = getelementptr inbounds %struct.usb_device, ptr %30, i32 0, i32 3
  %32 = load i32, ptr %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %35

35:                                               ; preds = %34, %29, %22, %19, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 49152, ptr %8, align 4
  %36 = load volatile i32, ptr %0, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %41 = icmp eq ptr %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %46 = load i32, ptr %45, align 8
  %47 = call i32 @usb_control_msg(ptr noundef %44, i32 noundef %46, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6636, i16 noundef zeroext 290, ptr noundef nonnull %40, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %40) #24
  %48 = icmp eq i32 %47, -19
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = load ptr, ptr %43, align 4
  %51 = getelementptr inbounds %struct.usb_device, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %55

55:                                               ; preds = %54, %49, %42, %39, %35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %56 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 35
  %57 = load i32, ptr %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = load ptr, ptr %10, align 4
  %61 = getelementptr inbounds %struct.net_device, ptr %60, i32 0, i32 20
  %62 = load i32, ptr %61, align 4
  %63 = add i32 %62, 7189
  %64 = and i32 %63, -1024
  br label %65

65:                                               ; preds = %59, %55
  %66 = phi i32 [ %64, %59 ], [ %57, %55 ]
  %67 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 36
  %68 = load i32, ptr %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = load ptr, ptr %10, align 4
  %72 = getelementptr inbounds %struct.net_device, ptr %71, i32 0, i32 20
  %73 = load i32, ptr %72, align 4
  %74 = add i32 %73, 15381
  %75 = and i32 %74, -1024
  br label %76

76:                                               ; preds = %70, %65
  %77 = phi i32 [ %75, %70 ], [ %68, %65 ]
  %78 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %79 = load i8, ptr %78, align 8
  switch i8 %79, label %170 [
    i8 11, label %80
    i8 12, label %80
    i8 13, label %125
    i8 14, label %125
    i8 16, label %125
  ]

80:                                               ; preds = %76, %76
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  %81 = shl i32 %66, 13
  %82 = and i32 %81, -65536
  store i32 %82, ptr %7, align 4
  %83 = load volatile i32, ptr %0, align 4
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %102

86:                                               ; preds = %80
  %87 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %88 = icmp eq ptr %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %91 = load ptr, ptr %90, align 4
  %92 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %93 = load i32, ptr %92, align 8
  %94 = call i32 @usb_control_msg(ptr noundef %91, i32 noundef %93, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16220, i16 noundef zeroext 460, ptr noundef nonnull %87, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %87) #24
  %95 = icmp eq i32 %94, -19
  br i1 %95, label %96, label %102

96:                                               ; preds = %89
  %97 = load ptr, ptr %90, align 4
  %98 = getelementptr inbounds %struct.usb_device, ptr %97, i32 0, i32 3
  %99 = load i32, ptr %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %96
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %102

102:                                              ; preds = %101, %96, %89, %86, %80
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  %103 = shl i32 %77, 13
  %104 = and i32 %103, -65536
  store i32 %104, ptr %6, align 4
  %105 = load volatile i32, ptr %0, align 4
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %124

108:                                              ; preds = %102
  %109 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %110 = icmp eq ptr %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %113 = load ptr, ptr %112, align 4
  %114 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %115 = load i32, ptr %114, align 8
  %116 = call i32 @usb_control_msg(ptr noundef %113, i32 noundef %115, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16216, i16 noundef zeroext 460, ptr noundef nonnull %109, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %109) #24
  %117 = icmp eq i32 %116, -19
  br i1 %117, label %118, label %124

118:                                              ; preds = %111
  %119 = load ptr, ptr %112, align 4
  %120 = getelementptr inbounds %struct.usb_device, ptr %119, i32 0, i32 3
  %121 = load i32, ptr %120, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %118
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %124

124:                                              ; preds = %123, %118, %111, %108, %102
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  br label %170

125:                                              ; preds = %76, %76, %76
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  %126 = shl i32 %66, 12
  %127 = and i32 %126, -65536
  store i32 %127, ptr %5, align 4
  %128 = load volatile i32, ptr %0, align 4
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %147

131:                                              ; preds = %125
  %132 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %133 = icmp eq ptr %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %136 = load ptr, ptr %135, align 4
  %137 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %138 = load i32, ptr %137, align 8
  %139 = call i32 @usb_control_msg(ptr noundef %136, i32 noundef %138, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16220, i16 noundef zeroext 460, ptr noundef nonnull %132, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %132) #24
  %140 = icmp eq i32 %139, -19
  br i1 %140, label %141, label %147

141:                                              ; preds = %134
  %142 = load ptr, ptr %135, align 4
  %143 = getelementptr inbounds %struct.usb_device, ptr %142, i32 0, i32 3
  %144 = load i32, ptr %143, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %141
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %147

147:                                              ; preds = %146, %141, %134, %131, %125
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  %148 = shl i32 %77, 12
  %149 = and i32 %148, -65536
  store i32 %149, ptr %4, align 4
  %150 = load volatile i32, ptr %0, align 4
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %169

153:                                              ; preds = %147
  %154 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %155 = icmp eq ptr %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %158 = load ptr, ptr %157, align 4
  %159 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %160 = load i32, ptr %159, align 8
  %161 = call i32 @usb_control_msg(ptr noundef %158, i32 noundef %160, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16216, i16 noundef zeroext 460, ptr noundef nonnull %154, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %154) #24
  %162 = icmp eq i32 %161, -19
  br i1 %162, label %163, label %169

163:                                              ; preds = %156
  %164 = load ptr, ptr %157, align 4
  %165 = getelementptr inbounds %struct.usb_device, ptr %164, i32 0, i32 3
  %166 = load i32, ptr %165, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %163
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %169

169:                                              ; preds = %168, %163, %156, %153, %147
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %170

170:                                              ; preds = %169, %124, %76
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 8, ptr %3, align 4
  %171 = load volatile i32, ptr %0, align 4
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %190

174:                                              ; preds = %170
  %175 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %176 = icmp eq ptr %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %179 = load ptr, ptr %178, align 4
  %180 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %181 = load i32, ptr %180, align 8
  %182 = call i32 @usb_control_msg(ptr noundef %179, i32 noundef %181, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6632, i16 noundef zeroext 307, ptr noundef nonnull %175, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %175) #24
  %183 = icmp eq i32 %182, -19
  br i1 %183, label %184, label %190

184:                                              ; preds = %177
  %185 = load ptr, ptr %178, align 4
  %186 = getelementptr inbounds %struct.usb_device, ptr %185, i32 0, i32 3
  %187 = load i32, ptr %186, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %184
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %190

190:                                              ; preds = %189, %184, %177, %174, %170
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  %191 = shl i32 %13, 12
  %192 = add i32 %191, 4313088
  %193 = and i32 %192, -4194304
  store i32 %193, ptr %2, align 4
  %194 = load volatile i32, ptr %0, align 4
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %213

197:                                              ; preds = %190
  %198 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %199 = icmp eq ptr %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %202 = load ptr, ptr %201, align 4
  %203 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %204 = load i32, ptr %203, align 8
  %205 = call i32 @usb_control_msg(ptr noundef %202, i32 noundef %204, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6632, i16 noundef zeroext 460, ptr noundef nonnull %198, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %198) #24
  %206 = icmp eq i32 %205, -19
  br i1 %206, label %207, label %213

207:                                              ; preds = %200
  %208 = load ptr, ptr %201, align 4
  %209 = getelementptr inbounds %struct.usb_device, ptr %208, i32 0, i32 3
  %210 = load i32, ptr %209, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %207
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %213

213:                                              ; preds = %212, %207, %200, %197, %190
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8156b_init(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = load volatile i32, ptr %0, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %427

32:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %28) #24
  store i32 0, ptr %28, align 4, !annotation !8
  %33 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11672, i16 noundef zeroext 4, ptr noundef nonnull %28, i16 noundef zeroext 0) #24
  %34 = load i32, ptr %28, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %28) #24
  %35 = and i32 %34, -33554432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %27) #24
  store i32 %35, ptr %27, align 4
  %36 = load volatile i32, ptr %0, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %55

39:                                               ; preds = %32
  %40 = call ptr @kmemdup(ptr noundef nonnull %27, i32 noundef 4, i32 noundef 3264) #24
  %41 = icmp eq ptr %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %46 = load i32, ptr %45, align 8
  %47 = call i32 @usb_control_msg(ptr noundef %44, i32 noundef %46, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11672, i16 noundef zeroext 136, ptr noundef nonnull %40, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %40) #24
  %48 = icmp eq i32 %47, -19
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = load ptr, ptr %43, align 4
  %51 = getelementptr inbounds %struct.usb_device, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %55

55:                                               ; preds = %54, %49, %42, %39, %32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %27) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %26) #24
  store i32 0, ptr %26, align 4
  %56 = load volatile i32, ptr %0, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %75

59:                                               ; preds = %55
  %60 = call ptr @kmemdup(ptr noundef nonnull %26, i32 noundef 4, i32 noundef 3264) #24
  %61 = icmp eq ptr %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %66 = load i32, ptr %65, align 8
  %67 = call i32 @usb_control_msg(ptr noundef %64, i32 noundef %66, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11480, i16 noundef zeroext 204, ptr noundef nonnull %60, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %60) #24
  %68 = icmp eq i32 %67, -19
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  %70 = load ptr, ptr %63, align 4
  %71 = getelementptr inbounds %struct.usb_device, ptr %70, i32 0, i32 3
  %72 = load i32, ptr %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %75

75:                                               ; preds = %74, %69, %62, %59, %55
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #24
  store i32 0, ptr %25, align 4, !annotation !8
  %76 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12308, i16 noundef zeroext 4, ptr noundef nonnull %25, i16 noundef zeroext 204) #24
  %77 = load i32, ptr %25, align 4
  %78 = and i32 %77, -2162688
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #24
  %79 = or i32 %78, 2097152
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %24) #24
  store i32 %79, ptr %24, align 4
  %80 = load volatile i32, ptr %0, align 4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %99

83:                                               ; preds = %75
  %84 = call ptr @kmemdup(ptr noundef nonnull %24, i32 noundef 4, i32 noundef 3264) #24
  %85 = icmp eq ptr %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %88 = load ptr, ptr %87, align 4
  %89 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %90 = load i32, ptr %89, align 8
  %91 = call i32 @usb_control_msg(ptr noundef %88, i32 noundef %90, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12308, i16 noundef zeroext 204, ptr noundef nonnull %84, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %84) #24
  %92 = icmp eq i32 %91, -19
  br i1 %92, label %93, label %99

93:                                               ; preds = %86
  %94 = load ptr, ptr %87, align 4
  %95 = getelementptr inbounds %struct.usb_device, ptr %94, i32 0, i32 3
  %96 = load i32, ptr %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %99

99:                                               ; preds = %98, %93, %86, %83, %75
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %24) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %23) #24
  store i32 0, ptr %23, align 4, !annotation !8
  %100 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19360, i16 noundef zeroext 4, ptr noundef nonnull %23, i16 noundef zeroext 51) #24
  %101 = load i32, ptr %23, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #24
  %102 = and i32 %101, 65527
  %103 = or i32 %102, 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #24
  store i32 %103, ptr %22, align 4
  %104 = load volatile i32, ptr %0, align 4
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %123

107:                                              ; preds = %99
  %108 = call ptr @kmemdup(ptr noundef nonnull %22, i32 noundef 4, i32 noundef 3264) #24
  %109 = icmp eq ptr %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %112 = load ptr, ptr %111, align 4
  %113 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %114 = load i32, ptr %113, align 8
  %115 = call i32 @usb_control_msg(ptr noundef %112, i32 noundef %114, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19360, i16 noundef zeroext 51, ptr noundef nonnull %108, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %108) #24
  %116 = icmp eq i32 %115, -19
  br i1 %116, label %117, label %123

117:                                              ; preds = %110
  %118 = load ptr, ptr %111, align 4
  %119 = getelementptr inbounds %struct.usb_device, ptr %118, i32 0, i32 3
  %120 = load i32, ptr %119, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %117
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %123

123:                                              ; preds = %122, %117, %110, %107, %99
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #24
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  %124 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %125 = load i8, ptr %124, align 8
  switch i8 %125, label %127 [
    i8 14, label %126
    i8 16, label %126
  ]

126:                                              ; preds = %123, %123
  call fastcc void @r8156b_wait_loading_flash(ptr noundef %0)
  br label %127

127:                                              ; preds = %126, %123
  br label %132

128:                                              ; preds = %138
  %129 = add nuw nsw i32 %133, 1
  %130 = icmp eq i32 %129, 500
  br i1 %130, label %131, label %132

131:                                              ; preds = %132, %128
  br label %142

132:                                              ; preds = %128, %127
  %133 = phi i32 [ %129, %128 ], [ 0, %127 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #24
  store i32 0, ptr %21, align 4, !annotation !8
  %134 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %21, i16 noundef zeroext 307) #24
  %135 = load i32, ptr %21, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #24
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %131

138:                                              ; preds = %132
  call void @msleep(i32 noundef 20) #24
  %139 = load volatile i32, ptr %0, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %128, label %427

142:                                              ; preds = %150, %131
  %143 = phi i32 [ %154, %150 ], [ 0, %131 ]
  %144 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %145 = and i16 %144, 7
  %146 = icmp eq i16 %145, 5
  %147 = and i16 %144, 6
  %148 = icmp eq i16 %147, 2
  %149 = or i1 %148, %146
  br i1 %149, label %157, label %150

150:                                              ; preds = %142
  call void @msleep(i32 noundef 20) #24
  %151 = load volatile i32, ptr %0, align 4
  %152 = and i32 %151, 1
  %153 = icmp ne i32 %152, 0
  %154 = add nuw nsw i32 %143, 1
  %155 = icmp eq i32 %154, 500
  %156 = select i1 %153, i1 true, i1 %155
  br i1 %156, label %157, label %142

157:                                              ; preds = %150, %142
  %158 = icmp eq i16 %145, 2
  br i1 %158, label %159, label %164

159:                                              ; preds = %157
  %160 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23448)
  %161 = and i16 %160, -11
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23448, i16 noundef zeroext %161)
  %162 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23450)
  %163 = and i16 %162, -2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23450, i16 noundef zeroext %163)
  br label %164

164:                                              ; preds = %159, %157
  %165 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %166 = and i16 %165, 2048
  %167 = icmp eq i16 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %164
  %169 = and i16 %165, -2049
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %169) #24
  br label %170

170:                                              ; preds = %168, %164
  br label %171

171:                                              ; preds = %176, %170
  %172 = phi i32 [ %180, %176 ], [ 0, %170 ]
  %173 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %174 = and i16 %173, 7
  %175 = icmp eq i16 %174, 3
  br i1 %175, label %183, label %176

176:                                              ; preds = %171
  call void @msleep(i32 noundef 20) #24
  %177 = load volatile i32, ptr %0, align 4
  %178 = and i32 %177, 1
  %179 = icmp ne i32 %178, 0
  %180 = add nuw nsw i32 %172, 1
  %181 = icmp eq i32 %180, 500
  %182 = select i1 %179, i1 true, i1 %181
  br i1 %182, label %183, label %171

183:                                              ; preds = %176, %171
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #24
  store i32 4095, ptr %20, align 4
  %184 = load volatile i32, ptr %0, align 4
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %203

187:                                              ; preds = %183
  %188 = call ptr @kmemdup(ptr noundef nonnull %20, i32 noundef 4, i32 noundef 3264) #24
  %189 = icmp eq ptr %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %192 = load ptr, ptr %191, align 4
  %193 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %194 = load i32, ptr %193, align 8
  %195 = call i32 @usb_control_msg(ptr noundef %192, i32 noundef %194, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -13316, i16 noundef zeroext 51, ptr noundef nonnull %188, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %188) #24
  %196 = icmp eq i32 %195, -19
  br i1 %196, label %197, label %203

197:                                              ; preds = %190
  %198 = load ptr, ptr %191, align 4
  %199 = getelementptr inbounds %struct.usb_device, ptr %198, i32 0, i32 3
  %200 = load i32, ptr %199, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %197
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %203

203:                                              ; preds = %202, %197, %190, %187, %183
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #24
  store i32 32768000, ptr %19, align 4
  %204 = load volatile i32, ptr %0, align 4
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %223

207:                                              ; preds = %203
  %208 = call ptr @kmemdup(ptr noundef nonnull %19, i32 noundef 4, i32 noundef 3264) #24
  %209 = icmp eq ptr %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %212 = load ptr, ptr %211, align 4
  %213 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %214 = load i32, ptr %213, align 8
  %215 = call i32 @usb_control_msg(ptr noundef %212, i32 noundef %214, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11048, i16 noundef zeroext 204, ptr noundef nonnull %208, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %208) #24
  %216 = icmp eq i32 %215, -19
  br i1 %216, label %217, label %223

217:                                              ; preds = %210
  %218 = load ptr, ptr %211, align 4
  %219 = getelementptr inbounds %struct.usb_device, ptr %218, i32 0, i32 3
  %220 = load i32, ptr %219, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %217
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %223

223:                                              ; preds = %222, %217, %210, %207, %203
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #24
  call fastcc void @r8153b_power_cut_en(ptr noundef %0)
  call fastcc void @r8156_ups_en(ptr noundef %0)
  call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  %224 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %225 = load ptr, ptr %224, align 4
  %226 = getelementptr inbounds %struct.usb_device, ptr %225, i32 0, i32 4
  %227 = load i32, ptr %226, align 4
  %228 = icmp ugt i32 %227, 4
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  %230 = load ptr, ptr %224, align 4
  br label %231

231:                                              ; preds = %229, %223
  %232 = phi ptr [ %230, %229 ], [ %225, %223 ]
  call void @usb_enable_lpm(ptr noundef %232) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #24
  store i32 0, ptr %18, align 4, !annotation !8
  %233 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %18, i16 noundef zeroext 307) #24
  %234 = load i32, ptr %18, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #24
  %235 = and i32 %234, 63487
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 %235, ptr %17, align 4
  %236 = load volatile i32, ptr %0, align 4
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %254

239:                                              ; preds = %231
  %240 = call ptr @kmemdup(ptr noundef nonnull %17, i32 noundef 4, i32 noundef 3264) #24
  %241 = icmp eq ptr %240, null
  br i1 %241, label %254, label %242

242:                                              ; preds = %239
  %243 = load ptr, ptr %224, align 4
  %244 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %245 = load i32, ptr %244, align 8
  %246 = call i32 @usb_control_msg(ptr noundef %243, i32 noundef %245, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 307, ptr noundef nonnull %240, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %240) #24
  %247 = icmp eq i32 %246, -19
  br i1 %247, label %248, label %254

248:                                              ; preds = %242
  %249 = load ptr, ptr %224, align 4
  %250 = getelementptr inbounds %struct.usb_device, ptr %249, i32 0, i32 3
  %251 = load i32, ptr %250, align 8
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %248
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %254

254:                                              ; preds = %253, %248, %242, %239, %231
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 0, ptr %16, align 4, !annotation !8
  %255 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6060, i16 noundef zeroext 4, ptr noundef nonnull %16, i16 noundef zeroext 307) #24
  %256 = load i32, ptr %16, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  %257 = and i32 %256, 65534
  %258 = or i32 %257, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 %258, ptr %15, align 4
  %259 = load volatile i32, ptr %0, align 4
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %277

262:                                              ; preds = %254
  %263 = call ptr @kmemdup(ptr noundef nonnull %15, i32 noundef 4, i32 noundef 3264) #24
  %264 = icmp eq ptr %263, null
  br i1 %264, label %277, label %265

265:                                              ; preds = %262
  %266 = load ptr, ptr %224, align 4
  %267 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %268 = load i32, ptr %267, align 8
  %269 = call i32 @usb_control_msg(ptr noundef %266, i32 noundef %268, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6060, i16 noundef zeroext 307, ptr noundef nonnull %263, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %263) #24
  %270 = icmp eq i32 %269, -19
  br i1 %270, label %271, label %277

271:                                              ; preds = %265
  %272 = load ptr, ptr %224, align 4
  %273 = getelementptr inbounds %struct.usb_device, ptr %272, i32 0, i32 3
  %274 = load i32, ptr %273, align 8
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %271
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %277

277:                                              ; preds = %276, %271, %265, %262, %254
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 32843, ptr %14, align 4
  %278 = load volatile i32, ptr %0, align 4
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %296

281:                                              ; preds = %277
  %282 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %283 = icmp eq ptr %282, null
  br i1 %283, label %296, label %284

284:                                              ; preds = %281
  %285 = load ptr, ptr %224, align 4
  %286 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %287 = load i32, ptr %286, align 8
  %288 = call i32 @usb_control_msg(ptr noundef %285, i32 noundef %287, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11456, i16 noundef zeroext 51, ptr noundef nonnull %282, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %282) #24
  %289 = icmp eq i32 %288, -19
  br i1 %289, label %290, label %296

290:                                              ; preds = %284
  %291 = load ptr, ptr %224, align 4
  %292 = getelementptr inbounds %struct.usb_device, ptr %291, i32 0, i32 3
  %293 = load i32, ptr %292, align 8
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %290
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %296

296:                                              ; preds = %295, %290, %284, %281, %277
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %297 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11468, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 51) #24
  %298 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 0, ptr %12, align 4, !annotation !8
  %299 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -9112, i16 noundef zeroext 4, ptr noundef nonnull %12, i16 noundef zeroext 460) #24
  %300 = load i32, ptr %12, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  %301 = or i32 %298, 256
  %302 = icmp slt i32 %300, 0
  %303 = select i1 %302, i32 %298, i32 %301
  %304 = and i32 %303, 65527
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 %304, ptr %11, align 4
  %305 = load volatile i32, ptr %0, align 4
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %323

308:                                              ; preds = %296
  %309 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %310 = icmp eq ptr %309, null
  br i1 %310, label %323, label %311

311:                                              ; preds = %308
  %312 = load ptr, ptr %224, align 4
  %313 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %314 = load i32, ptr %313, align 8
  %315 = call i32 @usb_control_msg(ptr noundef %312, i32 noundef %314, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11468, i16 noundef zeroext 51, ptr noundef nonnull %309, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %309) #24
  %316 = icmp eq i32 %315, -19
  br i1 %316, label %317, label %323

317:                                              ; preds = %311
  %318 = load ptr, ptr %224, align 4
  %319 = getelementptr inbounds %struct.usb_device, ptr %318, i32 0, i32 3
  %320 = load i32, ptr %319, align 8
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %317
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %323

323:                                              ; preds = %322, %317, %311, %308, %296
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %324 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11032, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 51) #24
  %325 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %326 = and i32 %325, 65533
  %327 = or i32 %326, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 %327, ptr %9, align 4
  %328 = load volatile i32, ptr %0, align 4
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %346

331:                                              ; preds = %323
  %332 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %333 = icmp eq ptr %332, null
  br i1 %333, label %346, label %334

334:                                              ; preds = %331
  %335 = load ptr, ptr %224, align 4
  %336 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %337 = load i32, ptr %336, align 8
  %338 = call i32 @usb_control_msg(ptr noundef %335, i32 noundef %337, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11032, i16 noundef zeroext 51, ptr noundef nonnull %332, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %332) #24
  %339 = icmp eq i32 %338, -19
  br i1 %339, label %340, label %346

340:                                              ; preds = %334
  %341 = load ptr, ptr %224, align 4
  %342 = getelementptr inbounds %struct.usb_device, ptr %341, i32 0, i32 3
  %343 = load i32, ptr %342, align 8
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %340
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %346

346:                                              ; preds = %345, %340, %334, %331, %323
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call fastcc void @r8156_mac_clk_spd(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %347 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 307) #24
  %348 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %349 = and i32 %348, 49151
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 %349, ptr %7, align 4
  %350 = load volatile i32, ptr %0, align 4
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %368

353:                                              ; preds = %346
  %354 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %355 = icmp eq ptr %354, null
  br i1 %355, label %368, label %356

356:                                              ; preds = %353
  %357 = load ptr, ptr %224, align 4
  %358 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %359 = load i32, ptr %358, align 8
  %360 = call i32 @usb_control_msg(ptr noundef %357, i32 noundef %359, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %354, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %354) #24
  %361 = icmp eq i32 %360, -19
  br i1 %361, label %362, label %368

362:                                              ; preds = %356
  %363 = load ptr, ptr %224, align 4
  %364 = getelementptr inbounds %struct.usb_device, ptr %363, i32 0, i32 3
  %365 = load i32, ptr %364, align 8
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %362
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %368

368:                                              ; preds = %367, %362, %356, %353, %346
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %369 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11368, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 307) #24
  %370 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %371 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 307) #24
  %372 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = or i32 %370, 32768
  %376 = and i32 %370, 32766
  %377 = select i1 %374, i32 %376, i32 %375
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  %378 = and i32 %377, 65534
  %379 = or i32 %378, 1
  store i32 %379, ptr %4, align 4
  %380 = load volatile i32, ptr %0, align 4
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %398

383:                                              ; preds = %368
  %384 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %385 = icmp eq ptr %384, null
  br i1 %385, label %398, label %386

386:                                              ; preds = %383
  %387 = load ptr, ptr %224, align 4
  %388 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %389 = load i32, ptr %388, align 8
  %390 = call i32 @usb_control_msg(ptr noundef %387, i32 noundef %389, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11368, i16 noundef zeroext 307, ptr noundef nonnull %384, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %384) #24
  %391 = icmp eq i32 %390, -19
  br i1 %391, label %392, label %398

392:                                              ; preds = %386
  %393 = load ptr, ptr %224, align 4
  %394 = getelementptr inbounds %struct.usb_device, ptr %393, i32 0, i32 3
  %395 = load i32, ptr %394, align 8
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %392
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %398

398:                                              ; preds = %397, %392, %386, %383, %368
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @_set_bit(i32 noundef 7, ptr noundef %0) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %399 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %400 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %401 = and i32 %400, -9502720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %401, ptr %2, align 4
  %402 = load volatile i32, ptr %0, align 4
  %403 = and i32 %402, 1
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %420

405:                                              ; preds = %398
  %406 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %407 = icmp eq ptr %406, null
  br i1 %407, label %420, label %408

408:                                              ; preds = %405
  %409 = load ptr, ptr %224, align 4
  %410 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %411 = load i32, ptr %410, align 8
  %412 = call i32 @usb_control_msg(ptr noundef %409, i32 noundef %411, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %406, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %406) #24
  %413 = icmp eq i32 %412, -19
  br i1 %413, label %414, label %420

414:                                              ; preds = %408
  %415 = load ptr, ptr %224, align 4
  %416 = getelementptr inbounds %struct.usb_device, ptr %415, i32 0, i32 3
  %417 = load i32, ptr %416, align 8
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %414
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %420

420:                                              ; preds = %419, %414, %408, %405, %398
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %421 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23116) #24
  %422 = icmp sgt i16 %421, -1
  br i1 %422, label %425, label %423

423:                                              ; preds = %420
  %424 = and i16 %421, 32767
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23116, i16 noundef zeroext %424) #24
  br label %425

425:                                              ; preds = %423, %420
  call fastcc void @rtl_tally_reset(ptr noundef %0)
  %426 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 30
  store i32 15000, ptr %426, align 4
  br label %427

427:                                              ; preds = %425, %138, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8156b_enable(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = load volatile i32, ptr %0, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %161

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 20
  %20 = load i32, ptr %19, align 4
  %21 = add i32 %20, 30
  %22 = udiv i32 16384, %21
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 29
  store i32 %22, ptr %23, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 0, ptr %12, align 4, !annotation !8
  %24 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %12, i16 noundef zeroext 307) #24
  %25 = load i32, ptr %12, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  %26 = and i32 %25, 4
  %27 = icmp ne i32 %26, 0
  call fastcc void @rtl_eee_plus_en(ptr noundef %0, i1 noundef zeroext %27) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %28 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11028, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 204) #24
  %29 = load i32, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %30 = and i32 %29, -33554432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 %30, ptr %10, align 4
  %31 = load volatile i32, ptr %0, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %16
  %35 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %36 = icmp eq ptr %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %41 = load i32, ptr %40, align 8
  %42 = call i32 @usb_control_msg(ptr noundef %39, i32 noundef %41, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11028, i16 noundef zeroext 204, ptr noundef nonnull %35, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %35) #24
  %43 = icmp eq i32 %42, -19
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = load ptr, ptr %38, align 4
  %46 = getelementptr inbounds %struct.usb_device, ptr %45, i32 0, i32 3
  %47 = load i32, ptr %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %50

50:                                               ; preds = %49, %44, %37, %34, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call fastcc void @r8153_set_rx_early_timeout(ptr noundef %0)
  call fastcc void @r8153_set_rx_early_size(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %51 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %52 = load i32, ptr %9, align 4
  %53 = trunc i32 %52 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call fastcc void @rtl_set_ifg(ptr noundef %0, i16 noundef zeroext %53)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %54 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 460) #24
  %55 = load i32, ptr %8, align 4
  %56 = lshr i32 %55, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %57 = and i32 %52, 1024
  %58 = icmp eq i32 %57, 0
  %59 = and i32 %56, 65471
  %60 = or i32 %56, 64
  %61 = select i1 %58, i32 %60, i32 %59
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  %62 = shl nuw i32 %61, 16
  store i32 %62, ptr %7, align 4
  %63 = load volatile i32, ptr %0, align 4
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %50
  %67 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %68 = icmp eq ptr %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 4
  %72 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %73 = load i32, ptr %72, align 8
  %74 = call i32 @usb_control_msg(ptr noundef %71, i32 noundef %73, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 460, ptr noundef nonnull %67, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %67) #24
  %75 = icmp eq i32 %74, -19
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = load ptr, ptr %70, align 4
  %78 = getelementptr inbounds %struct.usb_device, ptr %77, i32 0, i32 3
  %79 = load i32, ptr %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %82

82:                                               ; preds = %81, %76, %69, %66, %50
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %83 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %84 = load ptr, ptr %83, align 4
  %85 = getelementptr inbounds %struct.usb_device, ptr %84, i32 0, i32 4
  %86 = load i32, ptr %85, align 4
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %88, label %118

88:                                               ; preds = %82
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %89 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19364, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 204) #24
  %90 = load i32, ptr %6, align 4
  %91 = lshr i32 %90, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %92 = and i32 %91, 65520
  %93 = and i32 %52, 96
  %94 = icmp eq i32 %93, 96
  %95 = or i32 %91, 15
  %96 = or i32 %92, 1
  %97 = select i1 %94, i32 %95, i32 %96
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  %98 = shl nuw i32 %97, 16
  store i32 %98, ptr %5, align 4
  %99 = load volatile i32, ptr %0, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %117

102:                                              ; preds = %88
  %103 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %104 = icmp eq ptr %103, null
  br i1 %104, label %117, label %105

105:                                              ; preds = %102
  %106 = load ptr, ptr %83, align 4
  %107 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %108 = load i32, ptr %107, align 8
  %109 = call i32 @usb_control_msg(ptr noundef %106, i32 noundef %108, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19364, i16 noundef zeroext 204, ptr noundef nonnull %103, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %103) #24
  %110 = icmp eq i32 %109, -19
  br i1 %110, label %111, label %117

111:                                              ; preds = %105
  %112 = load ptr, ptr %83, align 4
  %113 = getelementptr inbounds %struct.usb_device, ptr %112, i32 0, i32 3
  %114 = load i32, ptr %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %117

117:                                              ; preds = %116, %111, %105, %102, %88
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  br label %118

118:                                              ; preds = %117, %82
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %119 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11032, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 51) #24
  %120 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %121 = and i32 %120, 65533
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %121, ptr %3, align 4
  %122 = load volatile i32, ptr %0, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %140

125:                                              ; preds = %118
  %126 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %127 = icmp eq ptr %126, null
  br i1 %127, label %140, label %128

128:                                              ; preds = %125
  %129 = load ptr, ptr %83, align 4
  %130 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %131 = load i32, ptr %130, align 8
  %132 = call i32 @usb_control_msg(ptr noundef %129, i32 noundef %131, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11032, i16 noundef zeroext 51, ptr noundef nonnull %126, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %126) #24
  %133 = icmp eq i32 %132, -19
  br i1 %133, label %134, label %140

134:                                              ; preds = %128
  %135 = load ptr, ptr %83, align 4
  %136 = getelementptr inbounds %struct.usb_device, ptr %135, i32 0, i32 3
  %137 = load i32, ptr %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %134
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %140

140:                                              ; preds = %139, %134, %128, %125, %118
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %141 = or i32 %121, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %141, ptr %2, align 4
  %142 = load volatile i32, ptr %0, align 4
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %160

145:                                              ; preds = %140
  %146 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %147 = icmp eq ptr %146, null
  br i1 %147, label %160, label %148

148:                                              ; preds = %145
  %149 = load ptr, ptr %83, align 4
  %150 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %151 = load i32, ptr %150, align 8
  %152 = call i32 @usb_control_msg(ptr noundef %149, i32 noundef %151, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11032, i16 noundef zeroext 51, ptr noundef nonnull %146, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %146) #24
  %153 = icmp eq i32 %152, -19
  br i1 %153, label %154, label %160

154:                                              ; preds = %148
  %155 = load ptr, ptr %83, align 4
  %156 = getelementptr inbounds %struct.usb_device, ptr %155, i32 0, i32 3
  %157 = load i32, ptr %156, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %154
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %160

160:                                              ; preds = %159, %154, %148, %145, %140
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  call fastcc void @rtl_enable(ptr noundef %0)
  br label %161

161:                                              ; preds = %160, %1
  %162 = phi i32 [ 0, %160 ], [ -19, %1 ]
  ret i32 %162
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8156b_hw_phy_cfg(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %12 = load i8, ptr %11, align 8
  switch i8 %12, label %24 [
    i8 13, label %13
    i8 14, label %23
    i8 16, label %23
  ]

13:                                               ; preds = %1
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16506, i16 noundef zeroext -28672)
  %14 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -15358)
  %15 = or i16 %14, 1024
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -15358, i16 noundef zeroext %15)
  %16 = and i16 %14, -1025
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -15358, i16 noundef zeroext %16)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17018, i16 noundef zeroext 4112)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17016, i16 noundef zeroext 4112)
  %17 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17074)
  %18 = and i16 %17, -3073
  %19 = or i16 %18, 2048
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17074, i16 noundef zeroext %19)
  %20 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16570)
  %21 = and i16 %20, -3841
  %22 = or i16 %21, 1792
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16570, i16 noundef zeroext %22)
  br label %24

23:                                               ; preds = %1, %1
  tail call fastcc void @r8156b_wait_loading_flash(ptr noundef %0)
  br label %24

24:                                               ; preds = %23, %13, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %25 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 204) #24
  %26 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %27 = and i32 %26, 65536
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %24
  %30 = and i32 %26, -131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 %30, ptr %9, align 4
  %31 = load volatile i32, ptr %0, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %29
  %35 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %36 = icmp eq ptr %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %41 = load i32, ptr %40, align 8
  %42 = call i32 @usb_control_msg(ptr noundef %39, i32 noundef %41, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10216, i16 noundef zeroext 204, ptr noundef nonnull %35, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %35) #24
  %43 = icmp eq i32 %42, -19
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = load ptr, ptr %38, align 4
  %46 = getelementptr inbounds %struct.usb_device, ptr %45, i32 0, i32 3
  %47 = load i32, ptr %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %50

50:                                               ; preds = %49, %44, %37, %34, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  br label %51

51:                                               ; preds = %50, %24
  br label %52

52:                                               ; preds = %60, %51
  %53 = phi i32 [ %64, %60 ], [ 0, %51 ]
  %54 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %55 = and i16 %54, 7
  %56 = icmp eq i16 %55, 5
  %57 = and i16 %54, 6
  %58 = icmp eq i16 %57, 2
  %59 = or i1 %58, %56
  br i1 %59, label %67, label %60

60:                                               ; preds = %52
  call void @msleep(i32 noundef 20) #24
  %61 = load volatile i32, ptr %0, align 4
  %62 = and i32 %61, 1
  %63 = icmp ne i32 %62, 0
  %64 = add nuw nsw i32 %53, 1
  %65 = icmp eq i32 %64, 500
  %66 = select i1 %63, i1 true, i1 %65
  br i1 %66, label %67, label %52

67:                                               ; preds = %60, %52
  %68 = icmp eq i16 %55, 2
  br i1 %68, label %69, label %74

69:                                               ; preds = %67
  call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext true)
  %70 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23450)
  %71 = and i16 %70, -2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23450, i16 noundef zeroext %71)
  %72 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23448)
  %73 = and i16 %72, -11
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23448, i16 noundef zeroext %73)
  br label %75

74:                                               ; preds = %67
  call fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext false)
  br label %75

75:                                               ; preds = %74, %69
  %76 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %77 = and i16 %76, 2048
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = and i16 %76, -2049
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %80) #24
  br label %81

81:                                               ; preds = %79, %75
  %82 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %83 = and i16 %82, -5
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %83) #24
  br label %84

84:                                               ; preds = %84, %81
  %85 = phi i32 [ 0, %81 ], [ %90, %84 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %86 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 307) #24
  %87 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %88 = and i32 %87, 256
  %89 = icmp ne i32 %88, 0
  %90 = add nuw nsw i32 %85, 1
  %91 = icmp eq i32 %90, 20
  %92 = select i1 %89, i1 true, i1 %91
  br i1 %92, label %93, label %84

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %95 = load i32, ptr %94, align 4
  %96 = and i32 %95, -9
  store i32 %96, ptr %94, align 4
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext false)
  br label %97

97:                                               ; preds = %102, %93
  %98 = phi i32 [ 0, %93 ], [ %106, %102 ]
  %99 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %100 = and i16 %99, 7
  %101 = icmp eq i16 %100, 3
  br i1 %101, label %112, label %102

102:                                              ; preds = %97
  call void @msleep(i32 noundef 20) #24
  %103 = load volatile i32, ptr %0, align 4
  %104 = and i32 %103, 1
  %105 = icmp ne i32 %104, 0
  %106 = add nuw nsw i32 %98, 1
  %107 = icmp eq i32 %106, 500
  %108 = select i1 %105, i1 true, i1 %107
  br i1 %108, label %109, label %97

109:                                              ; preds = %102
  %110 = load i1, ptr @r8156b_hw_phy_cfg.__already_done, align 1
  br i1 %110, label %112, label %111, !prof !24

111:                                              ; preds = %109
  store i1 true, ptr @r8156b_hw_phy_cfg.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 7618, i32 noundef 9, ptr noundef null) #24
  br label %112

112:                                              ; preds = %111, %109, %97
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %113 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %114 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %115 = and i32 %114, 65471
  %116 = or i32 %115, 64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %116, ptr %6, align 4
  %117 = load volatile i32, ptr %0, align 4
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %136

120:                                              ; preds = %112
  %121 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %122 = icmp eq ptr %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %125 = load ptr, ptr %124, align 4
  %126 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %127 = load i32, ptr %126, align 8
  %128 = call i32 @usb_control_msg(ptr noundef %125, i32 noundef %127, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 307, ptr noundef nonnull %121, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %121) #24
  %129 = icmp eq i32 %128, -19
  br i1 %129, label %130, label %136

130:                                              ; preds = %123
  %131 = load ptr, ptr %124, align 4
  %132 = getelementptr inbounds %struct.usb_device, ptr %131, i32 0, i32 3
  %133 = load i32, ptr %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %136

136:                                              ; preds = %135, %130, %123, %120, %112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %137 = load i8, ptr %11, align 8
  switch i8 %137, label %253 [
    i8 13, label %138
    i8 14, label %233
    i8 16, label %240
  ]

138:                                              ; preds = %136
  %139 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17400)
  %140 = or i16 %139, 12
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17400, i16 noundef zeroext %140)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -28673) #24
  %141 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %142 = and i16 %141, 255
  %143 = or i16 %142, 1024
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -28673) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %143) #24
  %144 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21286)
  %145 = or i16 %144, -256
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21286, i16 noundef zeroext %145)
  %146 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21282)
  %147 = or i16 %146, -4096
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21282, i16 noundef zeroext %147)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21364, i16 noundef zeroext 4092)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21434, i16 noundef zeroext -18508)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21424, i16 noundef zeroext 4028)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21444, i16 noundef zeroext -28096)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21426, i16 noundef zeroext 3508)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21306, i16 noundef zeroext 1799)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21304, i16 noundef zeroext -24365)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21240, i16 noundef zeroext 7)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31392)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 6604)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31390)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 6604)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31388)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 6604)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31386)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 5245)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31384)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 5245)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31382)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 5245)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28674)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 2311)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32554)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 10241)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32526)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 10241)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32524)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 24695)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -19194, i16 noundef zeroext 487)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32749)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 1792)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28743)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 10241)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28742)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 256)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28740)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 6400)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28738)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -7936)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28736)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 2048)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28734)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -6912)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28732)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 3840)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28730)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -3840)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28728)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 1024)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28726)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -3328)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28724)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -768)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28722)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -256)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28720)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -1280)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28718)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 256)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28716)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -3072)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28714)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -256)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -28712)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -2560)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %148 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5808, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  %149 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %150 = and i32 %149, 16318464
  %151 = or i32 %150, 393216
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %151, ptr %4, align 4
  %152 = load volatile i32, ptr %0, align 4
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %171

155:                                              ; preds = %138
  %156 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %157 = icmp eq ptr %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %160 = load ptr, ptr %159, align 4
  %161 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %162 = load i32, ptr %161, align 8
  %163 = call i32 @usb_control_msg(ptr noundef %160, i32 noundef %162, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5808, i16 noundef zeroext 324, ptr noundef nonnull %156, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %156) #24
  %164 = icmp eq i32 %163, -19
  br i1 %164, label %165, label %171

165:                                              ; preds = %158
  %166 = load ptr, ptr %159, align 4
  %167 = getelementptr inbounds %struct.usb_device, ptr %166, i32 0, i32 3
  %168 = load i32, ptr %167, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %165
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %171

171:                                              ; preds = %170, %165, %158, %155, %138
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32451)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 14606)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32433)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 30990)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32592)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 3889)
  %172 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16564)
  %173 = or i16 %172, 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16564, i16 noundef zeroext %173)
  %174 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -17206)
  %175 = or i16 %174, 768
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -17206, i16 noundef zeroext %175)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32447)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 12814)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32429)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 29198)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31447)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 1294)
  %176 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23502)
  %177 = and i16 %176, -65
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23502, i16 noundef zeroext %177)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32404) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -15200) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32400) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -15200) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32396) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1184) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32392) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1184) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32388) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1817) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -28684) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1024) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -28687) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1028) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16566, i16 noundef zeroext 27)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32717)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 31763)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32713)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 31763)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32709)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext -974)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32705)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 31763)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32701)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 31763)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32697)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 31763)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32443)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 14094)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32425)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 30478)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32407)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 3338)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32389)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 7434)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32233) #24
  %178 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %179 = and i16 %178, 255
  %180 = or i16 %179, 20480
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32233) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %180) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32230) #24
  %181 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %182 = and i16 %181, 255
  %183 = or i16 %182, 20480
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32230) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %183) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32550) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1027) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32548) #24
  %184 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %185 = and i16 %184, 255
  %186 = or i16 %185, 4096
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32548) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %186) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32589) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 900) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32585) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 8199) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32582) #24
  %187 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %188 = and i16 %187, 255
  %189 = or i16 %188, 27648
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32582) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %189) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32587) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -4087) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32579) #24
  %190 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %191 = and i16 %190, 255
  %192 = or i16 %191, -24832
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32579) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %192) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32569) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -3965) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32547) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1008) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32545) #24
  %193 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %194 = and i16 %193, 255
  %195 = or i16 %194, 4096
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32545) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %195) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32565) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 8199) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32562) #24
  %196 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %197 = and i16 %196, 255
  %198 = or i16 %197, 27648
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32562) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %198) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32567) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -32759) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32559) #24
  %199 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %200 = and i16 %199, 255
  %201 = or i16 %200, -32768
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32559) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %201) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32605) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 8202) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32603) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext -3923) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32609) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 24691) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32607) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 11) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32599) #24
  %202 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %203 = and i16 %202, 255
  %204 = or i16 %203, -16384
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32599) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %204) #24
  %205 = call fastcc i32 @rtl_phy_patch_request(ptr noundef %0, i1 noundef zeroext true, i1 noundef zeroext true)
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %332

207:                                              ; preds = %171
  %208 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18282)
  %209 = and i16 %208, -2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18282, i16 noundef zeroext %209)
  %210 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18286)
  %211 = and i16 %210, 255
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18286, i16 noundef zeroext %211)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18290, i16 noundef zeroext -15810)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18288, i16 noundef zeroext 0)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18290, i16 noundef zeroext -15808)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18288, i16 noundef zeroext 259)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18290, i16 noundef zeroext -15806)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18288, i16 noundef zeroext 1287)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18290, i16 noundef zeroext -15804)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18288, i16 noundef zeroext 2315)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18290, i16 noundef zeroext -15802)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18288, i16 noundef zeroext 3086)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18290, i16 noundef zeroext -15800)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18288, i16 noundef zeroext 4114)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18290, i16 noundef zeroext -15798)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18288, i16 noundef zeroext 5142)
  %212 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18282)
  %213 = or i16 %212, 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18282, i16 noundef zeroext %213)
  %214 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400) #24
  %215 = and i16 %214, -17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %215) #24
  br label %216

216:                                              ; preds = %216, %207
  %217 = phi i32 [ 0, %207 ], [ %221, %216 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %218 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432) #24
  %219 = and i16 %218, 64
  %220 = icmp ne i16 %219, 0
  %221 = add nuw nsw i32 %217, 1
  %222 = icmp ult i32 %217, 4999
  %223 = select i1 %220, i1 %222, i1 false
  br i1 %223, label %216, label %224

224:                                              ; preds = %216
  %225 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -22422)
  %226 = or i16 %225, 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -22422, i16 noundef zeroext %226)
  %227 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -22800)
  %228 = or i16 %227, 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -22800, i16 noundef zeroext %228)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16480, i16 noundef zeroext -10483)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16478, i16 noundef zeroext 16640)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16476, i16 noundef zeroext -6040)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16474, i16 noundef zeroext -9127)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -19124, i16 noundef zeroext 15384)
  %229 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16476)
  %230 = and i16 %229, -33
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16476, i16 noundef zeroext %230)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32387) #24
  %231 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %232 = or i16 %231, 4096
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32387) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %232) #24
  br label %253

233:                                              ; preds = %136
  %234 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21434)
  %235 = and i16 %234, -241
  %236 = or i16 %235, 144
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21434, i16 noundef zeroext %236)
  %237 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -21200)
  %238 = and i16 %237, -4
  %239 = or i16 %238, 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -21200, i16 noundef zeroext %239)
  br label %240

240:                                              ; preds = %233, %136
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32523)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 30222)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -32505)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext 13838)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18308, i16 noundef zeroext -31407)
  %241 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18306)
  %242 = and i16 %241, 255
  %243 = or i16 %242, 2048
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18306, i16 noundef zeroext %243)
  %244 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16640)
  %245 = and i16 %244, 8191
  %246 = or i16 %245, -24576
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16640, i16 noundef zeroext %246)
  %247 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16570)
  %248 = and i16 %247, -3841
  %249 = or i16 %248, 768
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16570, i16 noundef zeroext %249)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32700) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32694) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32688) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32682) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32676) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32670) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32664) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32658) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32652) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32646) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 9239) #24
  %250 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -16508)
  %251 = and i16 %250, 8191
  %252 = or i16 %251, -24576
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -16508, i16 noundef zeroext %252)
  br label %253

253:                                              ; preds = %240, %224, %136
  %254 = call fastcc i32 @rtl_phy_patch_request(ptr noundef %0, i1 noundef zeroext true, i1 noundef zeroext true)
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %332

256:                                              ; preds = %253
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %257 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 460) #24
  %258 = load i32, ptr %3, align 4
  %259 = and i32 %258, -131072
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %260 = or i32 %259, 65536
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %260, ptr %2, align 4
  %261 = load volatile i32, ptr %0, align 4
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %280

264:                                              ; preds = %256
  %265 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %266 = icmp eq ptr %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %269 = load ptr, ptr %268, align 4
  %270 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %271 = load i32, ptr %270, align 8
  %272 = call i32 @usb_control_msg(ptr noundef %269, i32 noundef %271, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 460, ptr noundef nonnull %265, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %265) #24
  %273 = icmp eq i32 %272, -19
  br i1 %273, label %274, label %280

274:                                              ; preds = %267
  %275 = load ptr, ptr %268, align 4
  %276 = getelementptr inbounds %struct.usb_device, ptr %275, i32 0, i32 3
  %277 = load i32, ptr %276, align 8
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %274
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %280

280:                                              ; preds = %279, %274, %267, %264, %256
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %281 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23486)
  %282 = and i16 %281, -14337
  %283 = or i16 %282, 2048
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23486, i16 noundef zeroext %283)
  %284 = load i32, ptr %94, align 4
  %285 = and i32 %284, -24579
  %286 = or i32 %285, 2
  store i32 %286, ptr %94, align 4
  %287 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504)
  %288 = and i16 %287, 32767
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %288)
  %289 = load i32, ptr %94, align 4
  %290 = and i32 %289, -4097
  store i32 %290, ptr %94, align 4
  %291 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400) #24
  %292 = and i16 %291, -17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %292) #24
  br label %293

293:                                              ; preds = %293, %280
  %294 = phi i32 [ 0, %280 ], [ %298, %293 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %295 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432) #24
  %296 = and i16 %295, 64
  %297 = icmp ne i16 %296, 0
  %298 = add nuw nsw i32 %294, 1
  %299 = icmp ult i32 %294, 4999
  %300 = select i1 %297, i1 %299, i1 false
  br i1 %300, label %293, label %301

301:                                              ; preds = %293
  %302 = load volatile i32, ptr %0, align 4
  %303 = and i32 %302, 128
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  %304 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %305 = and i16 %304, 32767
  %306 = shl nuw nsw i32 %303, 9
  %307 = trunc i32 %303 to i16
  %308 = shl nuw i16 %307, 8
  %309 = or i16 %305, %308
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32751) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %309) #24
  %310 = load i32, ptr %94, align 4
  %311 = and i32 %310, -65537
  %312 = or i32 %311, %306
  store i32 %312, ptr %94, align 4
  %313 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23512)
  %314 = and i16 %313, -513
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23512, i16 noundef zeroext %314)
  %315 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23062)
  %316 = and i16 %315, -2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23062, i16 noundef zeroext %316)
  %317 = load i32, ptr %94, align 4
  %318 = and i32 %317, -49
  store i32 %318, ptr %94, align 4
  %319 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 25
  %320 = load i8, ptr %319, align 8, !range !18
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %323, label %322

322:                                              ; preds = %301
  call fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext true)
  br label %323

323:                                              ; preds = %322, %301
  %324 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %325 = or i16 %324, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %325) #24
  %326 = load i32, ptr %94, align 4
  %327 = or i32 %326, 8
  store i32 %327, ptr %94, align 4
  %328 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23544) #24
  %329 = or i16 %328, 3072
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23544, i16 noundef zeroext %329) #24
  %330 = load i32, ptr %94, align 4
  %331 = or i32 %330, 131072
  store i32 %331, ptr %94, align 4
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext true)
  call void @_set_bit(i32 noundef 5, ptr noundef %0) #24
  br label %332

332:                                              ; preds = %323, %253, %171
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8153c_init(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = load volatile i32, ptr %0, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %234

19:                                               ; preds = %1
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 192, ptr %15, align 4
  %20 = load volatile i32, ptr %0, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %39

23:                                               ; preds = %19
  %24 = call ptr @kmemdup(ptr noundef nonnull %15, i32 noundef 4, i32 noundef 3264) #24
  %25 = icmp eq ptr %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %30 = load i32, ptr %29, align 8
  %31 = call i32 @usb_control_msg(ptr noundef %28, i32 noundef %30, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %24, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %24) #24
  %32 = icmp eq i32 %31, -19
  br i1 %32, label %33, label %39

33:                                               ; preds = %26
  %34 = load ptr, ptr %27, align 4
  %35 = getelementptr inbounds %struct.usb_device, ptr %34, i32 0, i32 3
  %36 = load i32, ptr %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %39

39:                                               ; preds = %38, %33, %26, %23, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 0, ptr %14, align 4, !annotation !8
  %40 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %14, i16 noundef zeroext 460) #24
  %41 = load i32, ptr %14, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  %42 = and i32 %41, -589824
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 %42, ptr %13, align 4
  %43 = load volatile i32, ptr %0, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %39
  %47 = call ptr @kmemdup(ptr noundef nonnull %13, i32 noundef 4, i32 noundef 3264) #24
  %48 = icmp eq ptr %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %51 = load ptr, ptr %50, align 4
  %52 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %53 = load i32, ptr %52, align 8
  %54 = call i32 @usb_control_msg(ptr noundef %51, i32 noundef %53, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6112, i16 noundef zeroext 460, ptr noundef nonnull %47, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %47) #24
  %55 = icmp eq i32 %54, -19
  br i1 %55, label %56, label %62

56:                                               ; preds = %49
  %57 = load ptr, ptr %50, align 4
  %58 = getelementptr inbounds %struct.usb_device, ptr %57, i32 0, i32 3
  %59 = load i32, ptr %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %62

62:                                               ; preds = %61, %56, %49, %46, %39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 0, ptr %12, align 4, !annotation !8
  %63 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -13328, i16 noundef zeroext 4, ptr noundef nonnull %12, i16 noundef zeroext 51) #24
  %64 = load i32, ptr %12, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  %65 = and i32 %64, 65533
  %66 = or i32 %65, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 %66, ptr %11, align 4
  %67 = load volatile i32, ptr %0, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %86

70:                                               ; preds = %62
  %71 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %72 = icmp eq ptr %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %77 = load i32, ptr %76, align 8
  %78 = call i32 @usb_control_msg(ptr noundef %75, i32 noundef %77, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -13328, i16 noundef zeroext 51, ptr noundef nonnull %71, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %71) #24
  %79 = icmp eq i32 %78, -19
  br i1 %79, label %80, label %86

80:                                               ; preds = %73
  %81 = load ptr, ptr %74, align 4
  %82 = getelementptr inbounds %struct.usb_device, ptr %81, i32 0, i32 3
  %83 = load i32, ptr %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %86

86:                                               ; preds = %85, %80, %73, %70, %62
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  br label %91

87:                                               ; preds = %97
  %88 = add nuw nsw i32 %92, 1
  %89 = icmp eq i32 %88, 500
  br i1 %89, label %90, label %91

90:                                               ; preds = %91, %87
  br label %101

91:                                               ; preds = %87, %86
  %92 = phi i32 [ 0, %86 ], [ %88, %87 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %93 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 307) #24
  %94 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %90

97:                                               ; preds = %91
  call void @msleep(i32 noundef 20) #24
  %98 = load volatile i32, ptr %0, align 4
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %87, label %234

101:                                              ; preds = %109, %90
  %102 = phi i32 [ %113, %109 ], [ 0, %90 ]
  %103 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %104 = and i16 %103, 7
  %105 = icmp eq i16 %104, 5
  %106 = and i16 %103, 6
  %107 = icmp eq i16 %106, 2
  %108 = or i1 %107, %105
  br i1 %108, label %116, label %109

109:                                              ; preds = %101
  call void @msleep(i32 noundef 20) #24
  %110 = load volatile i32, ptr %0, align 4
  %111 = and i32 %110, 1
  %112 = icmp ne i32 %111, 0
  %113 = add nuw nsw i32 %102, 1
  %114 = icmp eq i32 %113, 500
  %115 = select i1 %112, i1 true, i1 %114
  br i1 %115, label %116, label %101

116:                                              ; preds = %109, %101
  %117 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %118 = and i16 %117, 2048
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  %121 = and i16 %117, -2049
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %121) #24
  br label %122

122:                                              ; preds = %120, %116
  br label %123

123:                                              ; preds = %128, %122
  %124 = phi i32 [ %132, %128 ], [ 0, %122 ]
  %125 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23520) #24
  %126 = and i16 %125, 7
  %127 = icmp eq i16 %126, 3
  br i1 %127, label %135, label %128

128:                                              ; preds = %123
  call void @msleep(i32 noundef 20) #24
  %129 = load volatile i32, ptr %0, align 4
  %130 = and i32 %129, 1
  %131 = icmp ne i32 %130, 0
  %132 = add nuw nsw i32 %124, 1
  %133 = icmp eq i32 %132, 500
  %134 = select i1 %131, i1 true, i1 %133
  br i1 %134, label %135, label %123

135:                                              ; preds = %128, %123
  call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 4095, ptr %9, align 4
  %136 = load volatile i32, ptr %0, align 4
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %155

139:                                              ; preds = %135
  %140 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %141 = icmp eq ptr %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %144 = load ptr, ptr %143, align 4
  %145 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %146 = load i32, ptr %145, align 8
  %147 = call i32 @usb_control_msg(ptr noundef %144, i32 noundef %146, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -13316, i16 noundef zeroext 51, ptr noundef nonnull %140, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %140) #24
  %148 = icmp eq i32 %147, -19
  br i1 %148, label %149, label %155

149:                                              ; preds = %142
  %150 = load ptr, ptr %143, align 4
  %151 = getelementptr inbounds %struct.usb_device, ptr %150, i32 0, i32 3
  %152 = load i32, ptr %151, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %149
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %155

155:                                              ; preds = %154, %149, %142, %139, %135
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call fastcc void @r8153b_power_cut_en(ptr noundef %0)
  call fastcc void @r8153c_ups_en(ptr noundef %0, i1 noundef zeroext false)
  call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %156 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11368, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 307) #24
  %157 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %158 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %159 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = or i32 %157, 32768
  %163 = and i32 %157, 32766
  %164 = select i1 %161, i32 %163, i32 %162
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  %165 = and i32 %164, 65534
  %166 = or i32 %165, 1
  store i32 %166, ptr %6, align 4
  %167 = load volatile i32, ptr %0, align 4
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %186

170:                                              ; preds = %155
  %171 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %172 = icmp eq ptr %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %175 = load ptr, ptr %174, align 4
  %176 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %177 = load i32, ptr %176, align 8
  %178 = call i32 @usb_control_msg(ptr noundef %175, i32 noundef %177, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11368, i16 noundef zeroext 307, ptr noundef nonnull %171, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %171) #24
  %179 = icmp eq i32 %178, -19
  br i1 %179, label %180, label %186

180:                                              ; preds = %173
  %181 = load ptr, ptr %174, align 4
  %182 = getelementptr inbounds %struct.usb_device, ptr %181, i32 0, i32 3
  %183 = load i32, ptr %182, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %180
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %186

186:                                              ; preds = %185, %180, %173, %170, %155
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  %187 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %188 = load ptr, ptr %187, align 4
  call void @usb_enable_lpm(ptr noundef %188) #24
  call fastcc void @r8153_mac_clk_speed_down(ptr noundef %0, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %189 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12292, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 0) #24
  %190 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %191 = and i32 %190, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %191, ptr %4, align 4
  %192 = load volatile i32, ptr %0, align 4
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %210

195:                                              ; preds = %186
  %196 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %197 = icmp eq ptr %196, null
  br i1 %197, label %210, label %198

198:                                              ; preds = %195
  %199 = load ptr, ptr %187, align 4
  %200 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %201 = load i32, ptr %200, align 8
  %202 = call i32 @usb_control_msg(ptr noundef %199, i32 noundef %201, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12292, i16 noundef zeroext 136, ptr noundef nonnull %196, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %196) #24
  %203 = icmp eq i32 %202, -19
  br i1 %203, label %204, label %210

204:                                              ; preds = %198
  %205 = load ptr, ptr %187, align 4
  %206 = getelementptr inbounds %struct.usb_device, ptr %205, i32 0, i32 3
  %207 = load i32, ptr %206, align 8
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %204
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %210

210:                                              ; preds = %209, %204, %198, %195, %186
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @_set_bit(i32 noundef 7, ptr noundef %0) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %211 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %212 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %213 = and i32 %212, -9502720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %213, ptr %2, align 4
  %214 = load volatile i32, ptr %0, align 4
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %232

217:                                              ; preds = %210
  %218 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %219 = icmp eq ptr %218, null
  br i1 %219, label %232, label %220

220:                                              ; preds = %217
  %221 = load ptr, ptr %187, align 4
  %222 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %223 = load i32, ptr %222, align 8
  %224 = call i32 @usb_control_msg(ptr noundef %221, i32 noundef %223, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %218, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %218) #24
  %225 = icmp eq i32 %224, -19
  br i1 %225, label %226, label %232

226:                                              ; preds = %220
  %227 = load ptr, ptr %187, align 4
  %228 = getelementptr inbounds %struct.usb_device, ptr %227, i32 0, i32 3
  %229 = load i32, ptr %228, align 8
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %226
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %232

232:                                              ; preds = %231, %226, %220, %217, %210
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  call fastcc void @rtl_tally_reset(ptr noundef %0)
  %233 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 30
  store i32 15000, ptr %233, align 4
  br label %234

234:                                              ; preds = %232, %97, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153c_up(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = load volatile i32, ptr %0, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %353

27:                                               ; preds = %1
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  %28 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %29 = and i16 %28, -5
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %29) #24
  br label %30

30:                                               ; preds = %30, %27
  %31 = phi i32 [ 0, %27 ], [ %36, %30 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %23) #24
  store i32 0, ptr %23, align 4, !annotation !8
  %32 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8192, i16 noundef zeroext 4, ptr noundef nonnull %23, i16 noundef zeroext 307) #24
  %33 = load i32, ptr %23, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #24
  %34 = and i32 %33, 256
  %35 = icmp ne i32 %34, 0
  %36 = add nuw nsw i32 %31, 1
  %37 = icmp eq i32 %36, 20
  %38 = select i1 %35, i1 true, i1 %37
  br i1 %38, label %39, label %30

39:                                               ; preds = %30
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %41 = load i32, ptr %40, align 4
  %42 = and i32 %41, -9
  store i32 %42, ptr %40, align 4
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext true)
  call fastcc void @r8153_teredo_off(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #24
  store i32 0, ptr %22, align 4, !annotation !8
  %43 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %22, i16 noundef zeroext 256) #24
  %44 = load i32, ptr %22, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #24
  %45 = and i32 %44, -16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #24
  store i32 %45, ptr %21, align 4
  %46 = load volatile i32, ptr %0, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %39
  %50 = call ptr @kmemdup(ptr noundef nonnull %21, i32 noundef 4, i32 noundef 3264) #24
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %56 = load i32, ptr %55, align 8
  %57 = call i32 @usb_control_msg(ptr noundef %54, i32 noundef %56, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %50, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %50) #24
  %58 = icmp eq i32 %57, -19
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = load ptr, ptr %53, align 4
  %61 = getelementptr inbounds %struct.usb_device, ptr %60, i32 0, i32 3
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %65

65:                                               ; preds = %64, %59, %52, %49, %39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #24
  call fastcc void @rtl8152_nic_reset(ptr noundef %0)
  call fastcc void @rtl_reset_bmu(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #24
  store i32 0, ptr %20, align 4, !annotation !8
  %66 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %20, i16 noundef zeroext 256) #24
  %67 = load i32, ptr %20, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #24
  %68 = and i32 %67, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #24
  store i32 %68, ptr %19, align 4
  %69 = load volatile i32, ptr %0, align 4
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %88

72:                                               ; preds = %65
  %73 = call ptr @kmemdup(ptr noundef nonnull %19, i32 noundef 4, i32 noundef 3264) #24
  %74 = icmp eq ptr %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %77 = load ptr, ptr %76, align 4
  %78 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %79 = load i32, ptr %78, align 8
  %80 = call i32 @usb_control_msg(ptr noundef %77, i32 noundef %79, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %73, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %73) #24
  %81 = icmp eq i32 %80, -19
  br i1 %81, label %82, label %88

82:                                               ; preds = %75
  %83 = load ptr, ptr %76, align 4
  %84 = getelementptr inbounds %struct.usb_device, ptr %83, i32 0, i32 3
  %85 = load i32, ptr %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %88

88:                                               ; preds = %87, %82, %75, %72, %65
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #24
  store i32 0, ptr %18, align 4, !annotation !8
  %89 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %18, i16 noundef zeroext 460) #24
  %90 = load i32, ptr %18, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #24
  %91 = and i32 %90, -1073807360
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 %91, ptr %17, align 4
  %92 = load volatile i32, ptr %0, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %111

95:                                               ; preds = %88
  %96 = call ptr @kmemdup(ptr noundef nonnull %17, i32 noundef 4, i32 noundef 3264) #24
  %97 = icmp eq ptr %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %100 = load ptr, ptr %99, align 4
  %101 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %102 = load i32, ptr %101, align 8
  %103 = call i32 @usb_control_msg(ptr noundef %100, i32 noundef %102, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %96, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %96) #24
  %104 = icmp eq i32 %103, -19
  br i1 %104, label %105, label %111

105:                                              ; preds = %98
  %106 = load ptr, ptr %99, align 4
  %107 = getelementptr inbounds %struct.usb_device, ptr %106, i32 0, i32 3
  %108 = load i32, ptr %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %105
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %111

111:                                              ; preds = %110, %105, %98, %95, %88
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  br label %112

112:                                              ; preds = %118, %111
  %113 = phi i32 [ 0, %111 ], [ %119, %118 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 0, ptr %16, align 4, !annotation !8
  %114 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %16, i16 noundef zeroext 256) #24
  %115 = load i32, ptr %16, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  %116 = and i32 %115, 33554432
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %119 = add nuw nsw i32 %113, 1
  %120 = icmp eq i32 %119, 1000
  br i1 %120, label %121, label %112

121:                                              ; preds = %118, %112
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4, !annotation !8
  %122 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext 460) #24
  %123 = load i32, ptr %15, align 4
  %124 = and i32 %123, 2147418112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  %125 = or i32 %124, -2147483648
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 %125, ptr %14, align 4
  %126 = load volatile i32, ptr %0, align 4
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %145

129:                                              ; preds = %121
  %130 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %131 = icmp eq ptr %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %134 = load ptr, ptr %133, align 4
  %135 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %136 = load i32, ptr %135, align 8
  %137 = call i32 @usb_control_msg(ptr noundef %134, i32 noundef %136, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %130, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %130) #24
  %138 = icmp eq i32 %137, -19
  br i1 %138, label %139, label %145

139:                                              ; preds = %132
  %140 = load ptr, ptr %133, align 4
  %141 = getelementptr inbounds %struct.usb_device, ptr %140, i32 0, i32 3
  %142 = load i32, ptr %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %139
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %145

145:                                              ; preds = %144, %139, %132, %129, %121
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  br label %146

146:                                              ; preds = %152, %145
  %147 = phi i32 [ 0, %145 ], [ %153, %152 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %148 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 256) #24
  %149 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %150 = and i32 %149, 33554432
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %146
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %153 = add nuw nsw i32 %147, 1
  %154 = icmp eq i32 %153, 1000
  br i1 %154, label %155, label %146

155:                                              ; preds = %152, %146
  %156 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %157 = load ptr, ptr %156, align 4
  %158 = getelementptr inbounds %struct.net_device, ptr %157, i32 0, i32 23
  %159 = load i64, ptr %158, align 16
  %160 = and i64 %159, 256
  %161 = icmp ne i64 %160, 0
  call fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext %161)
  call void @rtl8153c_change_mtu(ptr noundef %0)
  call fastcc void @rtl8152_nic_reset(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 2, ptr %12, align 4
  %162 = load volatile i32, ptr %0, align 4
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %181

165:                                              ; preds = %155
  %166 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %167 = icmp eq ptr %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %170 = load ptr, ptr %169, align 4
  %171 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %172 = load i32, ptr %171, align 8
  %173 = call i32 @usb_control_msg(ptr noundef %170, i32 noundef %172, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16224, i16 noundef zeroext 273, ptr noundef nonnull %166, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %166) #24
  %174 = icmp eq i32 %173, -19
  br i1 %174, label %175, label %181

175:                                              ; preds = %168
  %176 = load ptr, ptr %169, align 4
  %177 = getelementptr inbounds %struct.usb_device, ptr %176, i32 0, i32 3
  %178 = load i32, ptr %177, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %175
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %181

181:                                              ; preds = %180, %175, %168, %165, %155
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 524288, ptr %11, align 4
  %182 = load volatile i32, ptr %0, align 4
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %201

185:                                              ; preds = %181
  %186 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %187 = icmp eq ptr %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %190 = load ptr, ptr %189, align 4
  %191 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %192 = load i32, ptr %191, align 8
  %193 = call i32 @usb_control_msg(ptr noundef %190, i32 noundef %192, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16224, i16 noundef zeroext 324, ptr noundef nonnull %186, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %186) #24
  %194 = icmp eq i32 %193, -19
  br i1 %194, label %195, label %201

195:                                              ; preds = %188
  %196 = load ptr, ptr %189, align 4
  %197 = getelementptr inbounds %struct.usb_device, ptr %196, i32 0, i32 3
  %198 = load i32, ptr %197, align 8
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %195
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %201

201:                                              ; preds = %200, %195, %188, %185, %181
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 160, ptr %10, align 4
  %202 = load volatile i32, ptr %0, align 4
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %221

205:                                              ; preds = %201
  %206 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %207 = icmp eq ptr %206, null
  br i1 %207, label %221, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %210 = load ptr, ptr %209, align 4
  %211 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %212 = load i32, ptr %211, align 8
  %213 = call i32 @usb_control_msg(ptr noundef %210, i32 noundef %212, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16220, i16 noundef zeroext 307, ptr noundef nonnull %206, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %206) #24
  %214 = icmp eq i32 %213, -19
  br i1 %214, label %215, label %221

215:                                              ; preds = %208
  %216 = load ptr, ptr %209, align 4
  %217 = getelementptr inbounds %struct.usb_device, ptr %216, i32 0, i32 3
  %218 = load i32, ptr %217, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %215
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %221

221:                                              ; preds = %220, %215, %208, %205, %201
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 272, ptr %9, align 4
  %222 = load volatile i32, ptr %0, align 4
  %223 = and i32 %222, 1
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %241

225:                                              ; preds = %221
  %226 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %227 = icmp eq ptr %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %230 = load ptr, ptr %229, align 4
  %231 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %232 = load i32, ptr %231, align 8
  %233 = call i32 @usb_control_msg(ptr noundef %230, i32 noundef %232, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16216, i16 noundef zeroext 307, ptr noundef nonnull %226, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %226) #24
  %234 = icmp eq i32 %233, -19
  br i1 %234, label %235, label %241

235:                                              ; preds = %228
  %236 = load ptr, ptr %229, align 4
  %237 = getelementptr inbounds %struct.usb_device, ptr %236, i32 0, i32 3
  %238 = load i32, ptr %237, align 8
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %235
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %241

241:                                              ; preds = %240, %235, %228, %225, %221
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 65537, ptr %8, align 4
  %242 = load volatile i32, ptr %0, align 4
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %261

245:                                              ; preds = %241
  %246 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %247 = icmp eq ptr %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %250 = load ptr, ptr %249, align 4
  %251 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %252 = load i32, ptr %251, align 8
  %253 = call i32 @usb_control_msg(ptr noundef %250, i32 noundef %252, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11252, i16 noundef zeroext 255, ptr noundef nonnull %246, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %246) #24
  %254 = icmp eq i32 %253, -19
  br i1 %254, label %255, label %261

255:                                              ; preds = %248
  %256 = load ptr, ptr %249, align 4
  %257 = getelementptr inbounds %struct.usb_device, ptr %256, i32 0, i32 3
  %258 = load i32, ptr %257, align 8
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %255
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %261

261:                                              ; preds = %260, %255, %248, %245, %241
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 192, ptr %7, align 4
  %262 = load volatile i32, ptr %0, align 4
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %281

265:                                              ; preds = %261
  %266 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %267 = icmp eq ptr %266, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %270 = load ptr, ptr %269, align 4
  %271 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %272 = load i32, ptr %271, align 8
  %273 = call i32 @usb_control_msg(ptr noundef %270, i32 noundef %272, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %266, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %266) #24
  %274 = icmp eq i32 %273, -19
  br i1 %274, label %275, label %281

275:                                              ; preds = %268
  %276 = load ptr, ptr %269, align 4
  %277 = getelementptr inbounds %struct.usb_device, ptr %276, i32 0, i32 3
  %278 = load i32, ptr %277, align 8
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %275
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %281

281:                                              ; preds = %280, %275, %268, %265, %261
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %282 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 307) #24
  %283 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %284 = and i32 %283, 65279
  %285 = or i32 %284, 256
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %285, ptr %5, align 4
  %286 = load volatile i32, ptr %0, align 4
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %305

289:                                              ; preds = %281
  %290 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %291 = icmp eq ptr %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %294 = load ptr, ptr %293, align 4
  %295 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %296 = load i32, ptr %295, align 8
  %297 = call i32 @usb_control_msg(ptr noundef %294, i32 noundef %296, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6112, i16 noundef zeroext 307, ptr noundef nonnull %290, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %290) #24
  %298 = icmp eq i32 %297, -19
  br i1 %298, label %299, label %305

299:                                              ; preds = %292
  %300 = load ptr, ptr %293, align 4
  %301 = getelementptr inbounds %struct.usb_device, ptr %300, i32 0, i32 3
  %302 = load i32, ptr %301, align 8
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %299
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %305

305:                                              ; preds = %304, %299, %292, %289, %281
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4
  %306 = load volatile i32, ptr %0, align 4
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %325

309:                                              ; preds = %305
  %310 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %311 = icmp eq ptr %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %309
  %313 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %314 = load ptr, ptr %313, align 4
  %315 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %316 = load i32, ptr %315, align 8
  %317 = call i32 @usb_control_msg(ptr noundef %314, i32 noundef %316, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %310, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %310) #24
  %318 = icmp eq i32 %317, -19
  br i1 %318, label %319, label %325

319:                                              ; preds = %312
  %320 = load ptr, ptr %313, align 4
  %321 = getelementptr inbounds %struct.usb_device, ptr %320, i32 0, i32 3
  %322 = load i32, ptr %321, align 8
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %319
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %325

325:                                              ; preds = %324, %319, %312, %309, %305
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %326 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %327 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %328 = and i32 %327, 49151
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %328, ptr %2, align 4
  %329 = load volatile i32, ptr %0, align 4
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %348

332:                                              ; preds = %325
  %333 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %334 = icmp eq ptr %333, null
  br i1 %334, label %348, label %335

335:                                              ; preds = %332
  %336 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %337 = load ptr, ptr %336, align 4
  %338 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %339 = load i32, ptr %338, align 8
  %340 = call i32 @usb_control_msg(ptr noundef %337, i32 noundef %339, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 307, ptr noundef nonnull %333, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %333) #24
  %341 = icmp eq i32 %340, -19
  br i1 %341, label %342, label %348

342:                                              ; preds = %335
  %343 = load ptr, ptr %336, align 4
  %344 = getelementptr inbounds %struct.usb_device, ptr %343, i32 0, i32 3
  %345 = load i32, ptr %344, align 8
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %342
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %348

348:                                              ; preds = %347, %342, %335, %332, %325
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %349 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23504) #24
  %350 = or i16 %349, 4
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23504, i16 noundef zeroext %350) #24
  %351 = load i32, ptr %40, align 4
  %352 = or i32 %351, 8
  store i32 %352, ptr %40, align 4
  call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  br label %353

353:                                              ; preds = %348, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @r8153c_hw_phy_cfg(ptr noundef %0) #0 {
  tail call void @r8153b_hw_phy_cfg(ptr noundef %0)
  %2 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %3 = load i32, ptr %2, align 4
  %4 = or i32 %3, 1
  store i32 %4, ptr %2, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153c_runtime_enable(ptr noundef %0, i1 noundef zeroext %1) #0 {
  br i1 %1, label %3, label %4

3:                                                ; preds = %2
  tail call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext true)
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext false)
  tail call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext true)
  tail call fastcc void @r8153c_ups_en(ptr noundef %0, i1 noundef zeroext true)
  br label %5

4:                                                ; preds = %2
  tail call fastcc void @r8153c_ups_en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext false)
  tail call void @rtl_runtime_suspend_enable(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext true)
  br label %5

5:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8153c_change_mtu(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 20
  %10 = load i32, ptr %9, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  %11 = shl i32 %10, 16
  %12 = add i32 %11, 1441792
  store i32 %12, ptr %6, align 4
  %13 = load volatile i32, ptr %0, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %1
  %17 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %18 = icmp eq ptr %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %23 = load i32, ptr %22, align 8
  %24 = call i32 @usb_control_msg(ptr noundef %21, i32 noundef %23, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16364, i16 noundef zeroext 460, ptr noundef nonnull %17, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %17) #24
  %25 = icmp eq i32 %24, -19
  br i1 %25, label %26, label %32

26:                                               ; preds = %19
  %27 = load ptr, ptr %20, align 4
  %28 = getelementptr inbounds %struct.usb_device, ptr %27, i32 0, i32 3
  %29 = load i32, ptr %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %32

32:                                               ; preds = %31, %26, %19, %16, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 40960, ptr %5, align 4
  %33 = load volatile i32, ptr %0, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %52

36:                                               ; preds = %32
  %37 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %38 = icmp eq ptr %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %43 = load i32, ptr %42, align 8
  %44 = call i32 @usb_control_msg(ptr noundef %41, i32 noundef %43, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6636, i16 noundef zeroext 290, ptr noundef nonnull %37, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %37) #24
  %45 = icmp eq i32 %44, -19
  br i1 %45, label %46, label %52

46:                                               ; preds = %39
  %47 = load ptr, ptr %40, align 4
  %48 = getelementptr inbounds %struct.usb_device, ptr %47, i32 0, i32 3
  %49 = load i32, ptr %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %52

52:                                               ; preds = %51, %46, %39, %36, %32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 8, ptr %4, align 4
  %53 = load volatile i32, ptr %0, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %72

56:                                               ; preds = %52
  %57 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %58 = icmp eq ptr %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 4
  %62 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %63 = load i32, ptr %62, align 8
  %64 = call i32 @usb_control_msg(ptr noundef %61, i32 noundef %63, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6632, i16 noundef zeroext 307, ptr noundef nonnull %57, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %57) #24
  %65 = icmp eq i32 %64, -19
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = load ptr, ptr %60, align 4
  %68 = getelementptr inbounds %struct.usb_device, ptr %67, i32 0, i32 3
  %69 = load i32, ptr %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %66
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %72

72:                                               ; preds = %71, %66, %59, %56, %52
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %73 = load ptr, ptr %7, align 4
  %74 = getelementptr inbounds %struct.net_device, ptr %73, i32 0, i32 20
  %75 = load i32, ptr %74, align 4
  %76 = icmp ult i32 %75, 8000
  br i1 %76, label %77, label %98

77:                                               ; preds = %72
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 16777216, ptr %3, align 4
  %78 = load volatile i32, ptr %0, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %97

81:                                               ; preds = %77
  %82 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %83 = icmp eq ptr %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %86 = load ptr, ptr %85, align 4
  %87 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %88 = load i32, ptr %87, align 8
  %89 = call i32 @usb_control_msg(ptr noundef %86, i32 noundef %88, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6632, i16 noundef zeroext 460, ptr noundef nonnull %82, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %82) #24
  %90 = icmp eq i32 %89, -19
  br i1 %90, label %91, label %97

91:                                               ; preds = %84
  %92 = load ptr, ptr %85, align 4
  %93 = getelementptr inbounds %struct.usb_device, ptr %92, i32 0, i32 3
  %94 = load i32, ptr %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %97

97:                                               ; preds = %96, %91, %84, %81, %77
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %119

98:                                               ; preds = %72
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 7340032, ptr %2, align 4
  %99 = load volatile i32, ptr %0, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %118

102:                                              ; preds = %98
  %103 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %104 = icmp eq ptr %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %107 = load ptr, ptr %106, align 4
  %108 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %109 = load i32, ptr %108, align 8
  %110 = call i32 @usb_control_msg(ptr noundef %107, i32 noundef %109, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6632, i16 noundef zeroext 460, ptr noundef nonnull %103, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %103) #24
  %111 = icmp eq i32 %110, -19
  br i1 %111, label %112, label %118

112:                                              ; preds = %105
  %113 = load ptr, ptr %106, align 4
  %114 = getelementptr inbounds %struct.usb_device, ptr %113, i32 0, i32 3
  %115 = load i32, ptr %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %112
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %118

118:                                              ; preds = %117, %112, %105, %102, %98
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  br label %119

119:                                              ; preds = %118, %97
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8152_power_cut_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %7 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10240, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 51) #24
  %8 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %9 = and i32 %8, 65279
  %10 = or i32 %9, 256
  %11 = select i1 %1, i32 %10, i32 %9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %11, ptr %5, align 4
  %12 = load volatile i32, ptr %0, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %2
  %16 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %22 = load i32, ptr %21, align 8
  %23 = call i32 @usb_control_msg(ptr noundef %20, i32 noundef %22, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10240, i16 noundef zeroext 51, ptr noundef nonnull %16, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %16) #24
  %24 = icmp eq i32 %23, -19
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load ptr, ptr %19, align 4
  %27 = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 3
  %28 = load i32, ptr %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %31

31:                                               ; preds = %30, %25, %18, %15, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %32 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11216, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 204) #24
  %33 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %34 = and i32 %33, -131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %34, ptr %3, align 4
  %35 = load volatile i32, ptr %0, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %54

38:                                               ; preds = %31
  %39 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %40 = icmp eq ptr %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %43 = load ptr, ptr %42, align 4
  %44 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %45 = load i32, ptr %44, align 8
  %46 = call i32 @usb_control_msg(ptr noundef %43, i32 noundef %45, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11216, i16 noundef zeroext 204, ptr noundef nonnull %39, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %39) #24
  %47 = icmp eq i32 %46, -19
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = load ptr, ptr %42, align 4
  %50 = getelementptr inbounds %struct.usb_device, ptr %49, i32 0, i32 3
  %51 = load i32, ptr %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %54

54:                                               ; preds = %53, %48, %41, %38, %31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_tally_reset(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %4 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6144, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %5 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %6 = and i32 %5, 65534
  %7 = or i32 %6, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %7, ptr %2, align 4
  %8 = load volatile i32, ptr %0, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %1
  %12 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %13 = icmp eq ptr %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %18 = load i32, ptr %17, align 8
  %19 = call i32 @usb_control_msg(ptr noundef %16, i32 noundef %18, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6144, i16 noundef zeroext 307, ptr noundef nonnull %12, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %12) #24
  %20 = icmp eq i32 %19, -19
  br i1 %20, label %21, label %27

21:                                               ; preds = %14
  %22 = load ptr, ptr %15, align 4
  %23 = getelementptr inbounds %struct.usb_device, ptr %22, i32 0, i32 3
  %24 = load i32, ptr %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %27

27:                                               ; preds = %26, %21, %14, %11, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = and i16 %1, -4096
  %6 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 43
  %7 = load i16, ptr %6, align 2
  %8 = icmp eq i16 %5, %7
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = zext i16 %5 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %10, ptr %4, align 4
  %11 = load volatile i32, ptr %0, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %9
  %15 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %16 = icmp eq ptr %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %21 = load i32, ptr %20, align 8
  %22 = call i32 @usb_control_msg(ptr noundef %19, i32 noundef %21, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6036, i16 noundef zeroext 307, ptr noundef nonnull %15, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %15) #24
  %23 = icmp eq i32 %22, -19
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = load ptr, ptr %18, align 4
  %26 = getelementptr inbounds %struct.usb_device, ptr %25, i32 0, i32 3
  %27 = load i32, ptr %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %30

30:                                               ; preds = %29, %24, %17, %14, %9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  store i16 %5, ptr %6, align 2
  br label %31

31:                                               ; preds = %30, %2
  %32 = and i16 %1, 4092
  %33 = or i16 %32, -20480
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %34 = and i16 %1, 2
  %35 = shl nuw nsw i16 51, %34
  %36 = or i16 %35, 256
  %37 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext %33, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext %36) #24
  %38 = load i32, ptr %3, align 4
  %39 = shl nuw nsw i16 %34, 3
  %40 = zext i16 %39 to i32
  %41 = lshr i32 %38, %40
  %42 = trunc i32 %41 to i16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret i16 %42
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext %1, i16 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = and i16 %1, -4096
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 43
  %8 = load i16, ptr %7, align 2
  %9 = icmp eq i16 %6, %8
  br i1 %9, label %32, label %10

10:                                               ; preds = %3
  %11 = zext i16 %6 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %11, ptr %5, align 4
  %12 = load volatile i32, ptr %0, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %10
  %16 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %22 = load i32, ptr %21, align 8
  %23 = call i32 @usb_control_msg(ptr noundef %20, i32 noundef %22, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6036, i16 noundef zeroext 307, ptr noundef nonnull %16, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %16) #24
  %24 = icmp eq i32 %23, -19
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load ptr, ptr %19, align 4
  %27 = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 3
  %28 = load i32, ptr %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %31

31:                                               ; preds = %30, %25, %18, %15, %10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  store i16 %6, ptr %7, align 2
  br label %32

32:                                               ; preds = %31, %3
  %33 = and i16 %1, 4095
  %34 = or i16 %33, -20480
  %35 = zext i16 %2 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  %36 = and i16 %1, 2
  %37 = icmp eq i16 %36, 0
  %38 = shl nuw nsw i16 %36, 3
  %39 = and i16 %34, -16388
  %40 = select i1 %37, i16 %34, i16 %39
  %41 = zext i16 %38 to i32
  %42 = shl nuw i32 %35, %41
  %43 = select i1 %37, i16 51, i16 204
  store i32 %42, ptr %4, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %40, i16 noundef zeroext %43, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 256) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext %1, i16 noundef zeroext %2, ptr noundef writeonly %3, i16 noundef zeroext %4) unnamed_addr #0 {
  %6 = load volatile i32, ptr %0, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %41

9:                                                ; preds = %5
  %10 = zext i16 %2 to i32
  %11 = and i32 %10, 3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %41

13:                                               ; preds = %9
  %14 = zext i16 %1 to i32
  %15 = and i32 %14, 3
  %16 = icmp ne i32 %15, 0
  %17 = icmp eq ptr %3, null
  %18 = or i1 %16, %17
  %19 = add nuw nsw i32 %10, %14
  %20 = icmp ugt i32 %19, 65535
  %21 = select i1 %18, i1 true, i1 %20
  br i1 %21, label %41, label %22

22:                                               ; preds = %13
  %23 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %10, i32 noundef 3264) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %41, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 40
  %29 = load i32, ptr %28, align 4
  %30 = tail call i32 @usb_control_msg(ptr noundef %27, i32 noundef %29, i8 noundef zeroext 5, i8 noundef zeroext -64, i16 noundef zeroext %1, i16 noundef zeroext %4, ptr noundef nonnull %23, i16 noundef zeroext %2, i32 noundef 500) #24
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %25
  tail call void @llvm.memcpy.p0.p0.i32(ptr nonnull align 1 %3, ptr nonnull align 64 %23, i32 %10, i1 false) #24
  tail call void @kfree(ptr noundef nonnull %23) #24
  br label %41

33:                                               ; preds = %25
  tail call void @llvm.memset.p0.i32(ptr nonnull align 1 %3, i8 -1, i32 %10, i1 false) #24
  tail call void @kfree(ptr noundef nonnull %23) #24
  %34 = icmp eq i32 %30, -19
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = load ptr, ptr %26, align 4
  %37 = getelementptr inbounds %struct.usb_device, ptr %36, i32 0, i32 3
  %38 = load i32, ptr %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  tail call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %41

41:                                               ; preds = %40, %35, %33, %32, %22, %13, %9, %5
  %42 = phi i32 [ -19, %5 ], [ -1, %13 ], [ -1, %9 ], [ %30, %33 ], [ %30, %32 ], [ -19, %35 ], [ -19, %40 ], [ -12, %22 ]
  ret i32 %42
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3, ptr noundef %4, i16 noundef zeroext %5) unnamed_addr #0 {
  %7 = load volatile i32, ptr %0, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %101

10:                                               ; preds = %6
  %11 = zext i16 %3 to i32
  %12 = and i32 %11, 3
  %13 = icmp eq i32 %12, 0
  %14 = icmp ne i16 %3, 0
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %101

16:                                               ; preds = %10
  %17 = zext i16 %1 to i32
  %18 = and i32 %17, 3
  %19 = icmp ne i32 %18, 0
  %20 = icmp eq ptr %4, null
  %21 = or i1 %19, %20
  %22 = add nuw nsw i32 %11, %17
  %23 = icmp ugt i32 %22, 65535
  %24 = select i1 %21, i1 true, i1 %23
  br i1 %24, label %101, label %25

25:                                               ; preds = %16
  %26 = and i16 %2, 240
  %27 = tail call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %28 = icmp eq ptr %27, null
  br i1 %28, label %101, label %29

29:                                               ; preds = %25
  %30 = and i16 %2, 15
  %31 = mul nuw nsw i16 %30, 17
  %32 = or i16 %31, %5
  %33 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %36 = load i32, ptr %35, align 8
  %37 = tail call i32 @usb_control_msg(ptr noundef %34, i32 noundef %36, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext %1, i16 noundef zeroext %32, ptr noundef nonnull %27, i16 noundef zeroext 4, i32 noundef 500) #24
  tail call void @kfree(ptr noundef nonnull %27) #24
  %38 = icmp slt i32 %37, 0
  %39 = icmp eq i16 %3, 4
  %40 = or i1 %39, %38
  br i1 %40, label %92, label %41

41:                                               ; preds = %29
  %42 = getelementptr i8, ptr %4, i32 4
  %43 = add i16 %1, 4
  %44 = add i16 %3, -8
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %41
  %47 = or i16 %5, 255
  %48 = icmp ugt i16 %44, 512
  br i1 %48, label %49, label %65

49:                                               ; preds = %60, %46
  %50 = phi i16 [ %61, %60 ], [ %43, %46 ]
  %51 = phi i16 [ %63, %60 ], [ %44, %46 ]
  %52 = phi ptr [ %62, %60 ], [ %42, %46 ]
  %53 = tail call ptr @kmemdup(ptr noundef %52, i32 noundef 512, i32 noundef 3264) #24
  %54 = icmp eq ptr %53, null
  br i1 %54, label %101, label %55

55:                                               ; preds = %49
  %56 = load ptr, ptr %33, align 4
  %57 = load i32, ptr %35, align 8
  %58 = tail call i32 @usb_control_msg(ptr noundef %56, i32 noundef %57, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext %50, i16 noundef zeroext %47, ptr noundef nonnull %53, i16 noundef zeroext 512, i32 noundef 500) #24
  tail call void @kfree(ptr noundef nonnull %53) #24
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %55
  %61 = add i16 %50, 512
  %62 = getelementptr i8, ptr %52, i32 512
  %63 = add i16 %51, -512
  %64 = icmp ugt i16 %63, 512
  br i1 %64, label %49, label %65

65:                                               ; preds = %60, %46
  %66 = phi ptr [ %42, %46 ], [ %62, %60 ]
  %67 = phi i16 [ %44, %46 ], [ %63, %60 ]
  %68 = phi i16 [ %43, %46 ], [ %61, %60 ]
  %69 = zext i16 %67 to i32
  %70 = tail call ptr @kmemdup(ptr noundef %66, i32 noundef %69, i32 noundef 3264) #24
  %71 = icmp eq ptr %70, null
  br i1 %71, label %101, label %72

72:                                               ; preds = %65
  %73 = load ptr, ptr %33, align 4
  %74 = load i32, ptr %35, align 8
  %75 = tail call i32 @usb_control_msg(ptr noundef %73, i32 noundef %74, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext %68, i16 noundef zeroext %47, ptr noundef nonnull %70, i16 noundef zeroext %67, i32 noundef 500) #24
  tail call void @kfree(ptr noundef nonnull %70) #24
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = add i16 %67, %68
  %79 = getelementptr i8, ptr %66, i32 %69
  br label %80

80:                                               ; preds = %77, %41
  %81 = phi i16 [ %78, %77 ], [ %43, %41 ]
  %82 = phi ptr [ %79, %77 ], [ %42, %41 ]
  %83 = tail call ptr @kmemdup(ptr noundef %82, i32 noundef 4, i32 noundef 3264) #24
  %84 = icmp eq ptr %83, null
  br i1 %84, label %101, label %85

85:                                               ; preds = %80
  %86 = lshr exact i16 %26, 4
  %87 = or i16 %86, %26
  %88 = or i16 %87, %5
  %89 = load ptr, ptr %33, align 4
  %90 = load i32, ptr %35, align 8
  %91 = tail call i32 @usb_control_msg(ptr noundef %89, i32 noundef %90, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext %81, i16 noundef zeroext %88, ptr noundef nonnull %83, i16 noundef zeroext 4, i32 noundef 500) #24
  tail call void @kfree(ptr noundef nonnull %83) #24
  br label %92

92:                                               ; preds = %85, %72, %55, %29
  %93 = phi i32 [ %37, %29 ], [ %75, %72 ], [ %91, %85 ], [ %58, %55 ]
  %94 = icmp eq i32 %93, -19
  br i1 %94, label %95, label %101

95:                                               ; preds = %92
  %96 = load ptr, ptr %33, align 4
  %97 = getelementptr inbounds %struct.usb_device, ptr %96, i32 0, i32 3
  %98 = load i32, ptr %97, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %95
  tail call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %101

101:                                              ; preds = %100, %95, %92, %80, %65, %49, %25, %16, %10, %6
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_enable(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %8 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16204, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %9 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %10 = and i32 %9, 65534
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %10, ptr %6, align 4
  %11 = load volatile i32, ptr %0, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %1
  %15 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %16 = icmp eq ptr %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %21 = load i32, ptr %20, align 8
  %22 = call i32 @usb_control_msg(ptr noundef %19, i32 noundef %21, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16204, i16 noundef zeroext 307, ptr noundef nonnull %15, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %15) #24
  %23 = icmp eq i32 %22, -19
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = load ptr, ptr %18, align 4
  %26 = getelementptr inbounds %struct.usb_device, ptr %25, i32 0, i32 3
  %27 = load i32, ptr %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %30

30:                                               ; preds = %29, %24, %17, %14, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %31 = or i32 %10, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %31, ptr %5, align 4
  %32 = load volatile i32, ptr %0, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %30
  %36 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %37 = icmp eq ptr %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %42 = load i32, ptr %41, align 8
  %43 = call i32 @usb_control_msg(ptr noundef %40, i32 noundef %42, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16204, i16 noundef zeroext 307, ptr noundef nonnull %36, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %36) #24
  %44 = icmp eq i32 %43, -19
  br i1 %44, label %45, label %51

45:                                               ; preds = %38
  %46 = load ptr, ptr %39, align 4
  %47 = getelementptr inbounds %struct.usb_device, ptr %46, i32 0, i32 3
  %48 = load i32, ptr %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %51

51:                                               ; preds = %50, %45, %38, %35, %30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %52 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6128, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 256) #24
  %53 = load i32, ptr %4, align 4
  %54 = and i32 %53, -218103808
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %55 = or i32 %54, 201326592
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %55, ptr %3, align 4
  %56 = load volatile i32, ptr %0, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %75

59:                                               ; preds = %51
  %60 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %61 = icmp eq ptr %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %66 = load i32, ptr %65, align 8
  %67 = call i32 @usb_control_msg(ptr noundef %64, i32 noundef %66, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6128, i16 noundef zeroext 392, ptr noundef nonnull %60, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %60) #24
  %68 = icmp eq i32 %67, -19
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  %70 = load ptr, ptr %63, align 4
  %71 = getelementptr inbounds %struct.usb_device, ptr %70, i32 0, i32 3
  %72 = load i32, ptr %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %75

75:                                               ; preds = %74, %69, %62, %59, %51
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %77 = load i8, ptr %76, align 8
  switch i8 %77, label %99 [
    i8 8, label %78
    i8 9, label %78
    i8 15, label %78
  ]

78:                                               ; preds = %75, %75, %75
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 50331648, ptr %2, align 4
  %79 = load volatile i32, ptr %0, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %98

82:                                               ; preds = %78
  %83 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %84 = icmp eq ptr %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %87 = load ptr, ptr %86, align 4
  %88 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %89 = load i32, ptr %88, align 8
  %90 = call i32 @usb_control_msg(ptr noundef %87, i32 noundef %89, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11212, i16 noundef zeroext 136, ptr noundef nonnull %83, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %83) #24
  %91 = icmp eq i32 %90, -19
  br i1 %91, label %92, label %98

92:                                               ; preds = %85
  %93 = load ptr, ptr %86, align 4
  %94 = getelementptr inbounds %struct.usb_device, ptr %93, i32 0, i32 3
  %95 = load i32, ptr %94, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %98

98:                                               ; preds = %97, %92, %85, %82, %78
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  br label %99

99:                                               ; preds = %98, %75
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext false)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_eee_plus_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8064, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 307) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = and i32 %6, 65533
  %8 = or i32 %7, 2
  %9 = select i1 %1, i32 %8, i32 %7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %9, ptr %3, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %2
  %14 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8064, i16 noundef zeroext 307, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6056, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %6 = load i32, ptr %4, align 4
  %7 = lshr i32 %6, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %8 = or i32 %7, 8
  %9 = and i32 %7, 65527
  %10 = select i1 %1, i32 %8, i32 %9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %11 = shl nuw i32 %10, 16
  store i32 %11, ptr %3, align 4
  %12 = load volatile i32, ptr %0, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %2
  %16 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %22 = load i32, ptr %21, align 8
  %23 = call i32 @usb_control_msg(ptr noundef %20, i32 noundef %22, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6056, i16 noundef zeroext 460, ptr noundef nonnull %16, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %16) #24
  %24 = icmp eq i32 %23, -19
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load ptr, ptr %19, align 4
  %27 = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 3
  %28 = load i32, ptr %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %31

31:                                               ; preds = %30, %25, %18, %15, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_disable(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load volatile i32, ptr %0, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call fastcc void @rtl_drop_queued_tx(ptr noundef %0)
  br label %62

10:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %11 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  %12 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %13 = and i32 %12, -16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %13, ptr %4, align 4
  %14 = load volatile i32, ptr %0, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %10
  %18 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %19 = icmp eq ptr %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %24 = load i32, ptr %23, align 8
  %25 = call i32 @usb_control_msg(ptr noundef %22, i32 noundef %24, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %18, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %18) #24
  %26 = icmp eq i32 %25, -19
  br i1 %26, label %27, label %33

27:                                               ; preds = %20
  %28 = load ptr, ptr %21, align 4
  %29 = getelementptr inbounds %struct.usb_device, ptr %28, i32 0, i32 3
  %30 = load i32, ptr %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %33

33:                                               ; preds = %32, %27, %20, %17, %10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call fastcc void @rtl_drop_queued_tx(ptr noundef %0)
  %34 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 0, i32 1
  %35 = load ptr, ptr %34, align 4
  call void @usb_kill_urb(ptr noundef %35) #24
  %36 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 1, i32 1
  %37 = load ptr, ptr %36, align 4
  call void @usb_kill_urb(ptr noundef %37) #24
  %38 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 2, i32 1
  %39 = load ptr, ptr %38, align 4
  call void @usb_kill_urb(ptr noundef %39) #24
  %40 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 3, i32 1
  %41 = load ptr, ptr %40, align 4
  call void @usb_kill_urb(ptr noundef %41) #24
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext true)
  br label %42

42:                                               ; preds = %48, %33
  %43 = phi i32 [ 0, %33 ], [ %49, %48 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %44 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 256) #24
  %45 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %46 = and i32 %45, 805306368
  %47 = icmp eq i32 %46, 805306368
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %49 = add nuw nsw i32 %43, 1
  %50 = icmp eq i32 %49, 1000
  br i1 %50, label %51, label %42

51:                                               ; preds = %48, %42
  br label %52

52:                                               ; preds = %58, %51
  %53 = phi i32 [ %59, %58 ], [ 0, %51 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %54 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6640, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 307) #24
  %55 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %56 = and i32 %55, 2048
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %59 = add nuw nsw i32 %53, 1
  %60 = icmp eq i32 %59, 1000
  br i1 %60, label %61, label %52

61:                                               ; preds = %58, %52
  call fastcc void @rtl_stop_rx(ptr noundef %0)
  call fastcc void @rtl8152_nic_reset(ptr noundef %0)
  br label %62

62:                                               ; preds = %61, %9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_drop_queued_tx(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.sk_buff_head, align 4
  %3 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #24
  %5 = getelementptr inbounds i8, ptr %2, i32 12
  store i32 0, ptr %5, align 4, !annotation !8
  %6 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 11
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, %6
  br i1 %8, label %46, label %9

9:                                                ; preds = %1
  store ptr %2, ptr %2, align 4
  %10 = getelementptr inbounds %struct.anon.77, ptr %2, i32 0, i32 1
  store ptr %2, ptr %10, align 4
  %11 = getelementptr inbounds %struct.sk_buff_head, ptr %2, i32 0, i32 1
  store i32 0, ptr %11, align 4
  %12 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 11, i32 2
  call void @_raw_spin_lock_bh(ptr noundef %12) #24
  %13 = load ptr, ptr %6, align 4
  %14 = icmp eq ptr %13, %6
  br i1 %14, label %25, label %15

15:                                               ; preds = %9
  %16 = load ptr, ptr %2, align 4
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 11, i32 0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.anon.49, ptr %13, i32 0, i32 1
  store volatile ptr %2, ptr %19, align 4
  store volatile ptr %13, ptr %2, align 8
  store volatile ptr %16, ptr %18, align 8
  %20 = getelementptr inbounds %struct.anon.49, ptr %16, i32 0, i32 1
  store volatile ptr %18, ptr %20, align 4
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 11, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = load i32, ptr %11, align 4
  %24 = add i32 %23, %22
  store i32 %24, ptr %11, align 4
  store ptr %6, ptr %6, align 4
  store ptr %6, ptr %17, align 4
  store i32 0, ptr %21, align 4
  br label %25

25:                                               ; preds = %15, %9
  call void @_raw_spin_unlock_bh(ptr noundef %12) #24
  %26 = load ptr, ptr %2, align 4
  %27 = icmp eq ptr %26, %2
  %28 = icmp eq ptr %26, null
  %29 = or i1 %27, %28
  br i1 %29, label %46, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 36, i32 7
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi ptr [ %26, %30 ], [ %42, %32 ]
  %34 = load i32, ptr %11, align 4
  %35 = add i32 %34, -1
  store volatile i32 %35, ptr %11, align 4
  %36 = load ptr, ptr %33, align 8
  %37 = getelementptr inbounds %struct.anon.49, ptr %33, i32 0, i32 1
  %38 = load ptr, ptr %37, align 4
  store ptr null, ptr %37, align 4
  store ptr null, ptr %33, align 8
  %39 = getelementptr inbounds %struct.anon.49, ptr %36, i32 0, i32 1
  store volatile ptr %38, ptr %39, align 4
  store volatile ptr %36, ptr %38, align 8
  call void @consume_skb(ptr noundef nonnull %33) #24
  %40 = load i32, ptr %31, align 4
  %41 = add i32 %40, 1
  store i32 %41, ptr %31, align 4
  %42 = load ptr, ptr %2, align 4
  %43 = icmp eq ptr %42, %2
  %44 = icmp eq ptr %42, null
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %32

46:                                               ; preds = %32, %25, %1
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_kill_urb(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_stop_rx(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.list_head, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #24
  store volatile ptr %2, ptr %2, align 8
  %3 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  store ptr %2, ptr %3, align 4
  %4 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 13
  %5 = call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %6 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 7
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, %6
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = load ptr, ptr %2, align 8
  %11 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %2, ptr %13, align 4
  store ptr %7, ptr %2, align 8
  store ptr %10, ptr %12, align 4
  %14 = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  store ptr %12, ptr %14, align 4
  store volatile ptr %6, ptr %6, align 4
  store ptr %6, ptr %11, align 4
  br label %15

15:                                               ; preds = %9, %1
  call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %5) #24
  %16 = load ptr, ptr %2, align 8
  %17 = icmp eq ptr %16, %2
  br i1 %17, label %70, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 24
  br label %20

20:                                               ; preds = %68, %18
  %21 = phi ptr [ %16, %18 ], [ %23, %68 ]
  %22 = getelementptr i8, ptr %21, i32 -8
  %23 = load ptr, ptr %21, align 4
  %24 = getelementptr i8, ptr %21, i32 16
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.page, ptr %25, i32 0, i32 1
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30, !prof !24

30:                                               ; preds = %20
  %31 = add i32 %27, -1
  br label %34

32:                                               ; preds = %20
  %33 = ptrtoint ptr %25 to i32
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i32 [ %31, %30 ], [ %33, %32 ]
  %36 = inttoptr i32 %35 to ptr
  %37 = getelementptr inbounds %struct.page, ptr %36, i32 0, i32 3
  %38 = load volatile i32, ptr %37, align 4
  %39 = icmp sgt i32 %38, 1
  br i1 %39, label %40, label %65

40:                                               ; preds = %34
  %41 = getelementptr i8, ptr %21, i32 4
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  store ptr %42, ptr %43, align 4
  store volatile ptr %23, ptr %42, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %21, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %41, align 4
  %44 = getelementptr i8, ptr %21, i32 8
  %45 = load ptr, ptr %44, align 4
  call void @usb_free_urb(ptr noundef %45) #24
  %46 = load ptr, ptr %24, align 4
  %47 = getelementptr inbounds %struct.page, ptr %46, i32 0, i32 1
  %48 = load volatile i32, ptr %47, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51, !prof !24

51:                                               ; preds = %40
  %52 = add i32 %48, -1
  br label %55

53:                                               ; preds = %40
  %54 = ptrtoint ptr %46 to i32
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i32 [ %52, %51 ], [ %54, %53 ]
  %57 = inttoptr i32 %56 to ptr
  %58 = getelementptr inbounds %struct.page, ptr %57, i32 0, i32 3
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !26
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %58) #24, !srcloc !9
  %59 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %58, ptr %58, i32 1, ptr elementtype(i32) %58) #24, !srcloc !27
  %60 = extractvalue { i32, i32 } %59, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !28
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %55
  call void @__put_page(ptr noundef %57) #24
  br label %63

63:                                               ; preds = %62, %55
  call void @kfree(ptr noundef %22) #24
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %19) #24, !srcloc !9
  %64 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %19, ptr %19, i32 1, ptr elementtype(i32) %19) #24, !srcloc !17
  br label %68

65:                                               ; preds = %34
  %66 = getelementptr i8, ptr %21, i32 8
  %67 = load ptr, ptr %66, align 4
  call void @usb_kill_urb(ptr noundef %67) #24
  br label %68

68:                                               ; preds = %65, %63
  %69 = icmp eq ptr %23, %2
  br i1 %69, label %70, label %20

70:                                               ; preds = %68, %15
  %71 = call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %72 = load volatile ptr, ptr %6, align 4
  %73 = icmp eq ptr %72, %6
  br i1 %73, label %75, label %74, !prof !24

74:                                               ; preds = %70
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 2966, i32 noundef 9, ptr noundef null) #24
  br label %75

75:                                               ; preds = %74, %70
  %76 = load volatile ptr, ptr %2, align 8
  %77 = icmp eq ptr %76, %2
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = load ptr, ptr %6, align 4
  %80 = load ptr, ptr %3, align 4
  %81 = getelementptr inbounds %struct.list_head, ptr %76, i32 0, i32 1
  store ptr %6, ptr %81, align 4
  store ptr %76, ptr %6, align 4
  store ptr %79, ptr %80, align 4
  %82 = getelementptr inbounds %struct.list_head, ptr %79, i32 0, i32 1
  store ptr %80, ptr %82, align 4
  br label %83

83:                                               ; preds = %78, %75
  call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %71) #24
  %84 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 12
  %85 = load ptr, ptr %84, align 4
  %86 = icmp eq ptr %85, %84
  br i1 %86, label %102, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 12, i32 1
  br label %89

89:                                               ; preds = %99, %87
  %90 = phi ptr [ %85, %87 ], [ %100, %99 ]
  %91 = icmp eq ptr %90, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %89
  %93 = load i32, ptr %88, align 4
  %94 = add i32 %93, -1
  store volatile i32 %94, ptr %88, align 4
  %95 = load ptr, ptr %90, align 8
  %96 = getelementptr inbounds %struct.anon.49, ptr %90, i32 0, i32 1
  %97 = load ptr, ptr %96, align 4
  store ptr null, ptr %96, align 4
  store ptr null, ptr %90, align 8
  %98 = getelementptr inbounds %struct.anon.49, ptr %95, i32 0, i32 1
  store volatile ptr %97, ptr %98, align 4
  store volatile ptr %95, ptr %97, align 8
  br label %99

99:                                               ; preds = %92, %89
  call void @consume_skb(ptr noundef %90) #24
  %100 = load ptr, ptr %84, align 4
  %101 = icmp eq ptr %100, %84
  br i1 %101, label %102, label %89

102:                                              ; preds = %99, %83
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl8152_nic_reset(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %17 = load i8, ptr %16, align 8
  %18 = add i8 %17, -10
  %19 = icmp ult i8 %18, 3
  br i1 %19, label %20, label %161

20:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4, !annotation !8
  %21 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6128, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext 256) #24
  %22 = load i32, ptr %15, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  %23 = and i32 %22, -83886080
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 %23, ptr %14, align 4
  %24 = load volatile i32, ptr %0, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %43

27:                                               ; preds = %20
  %28 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %29 = icmp eq ptr %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  %33 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %34 = load i32, ptr %33, align 8
  %35 = call i32 @usb_control_msg(ptr noundef %32, i32 noundef %34, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6128, i16 noundef zeroext 392, ptr noundef nonnull %28, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %28) #24
  %36 = icmp eq i32 %35, -19
  br i1 %36, label %37, label %43

37:                                               ; preds = %30
  %38 = load ptr, ptr %31, align 4
  %39 = getelementptr inbounds %struct.usb_device, ptr %38, i32 0, i32 3
  %40 = load i32, ptr %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %43

43:                                               ; preds = %42, %37, %30, %27, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %44 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11088, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 51) #24
  %45 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %46 = and i32 %45, 65534
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 %46, ptr %12, align 4
  %47 = load volatile i32, ptr %0, align 4
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %66

50:                                               ; preds = %43
  %51 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %52 = icmp eq ptr %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %55 = load ptr, ptr %54, align 4
  %56 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %57 = load i32, ptr %56, align 8
  %58 = call i32 @usb_control_msg(ptr noundef %55, i32 noundef %57, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11088, i16 noundef zeroext 51, ptr noundef nonnull %51, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %51) #24
  %59 = icmp eq i32 %58, -19
  br i1 %59, label %60, label %66

60:                                               ; preds = %53
  %61 = load ptr, ptr %54, align 4
  %62 = getelementptr inbounds %struct.usb_device, ptr %61, i32 0, i32 3
  %63 = load i32, ptr %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %60
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %66

66:                                               ; preds = %65, %60, %53, %50, %43
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %67 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 204) #24
  %68 = load i32, ptr %11, align 4
  %69 = and i32 %68, -589824
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %70 = or i32 %69, 524288
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 %70, ptr %10, align 4
  %71 = load volatile i32, ptr %0, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %90

74:                                               ; preds = %66
  %75 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %76 = icmp eq ptr %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %79 = load ptr, ptr %78, align 4
  %80 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %81 = load i32, ptr %80, align 8
  %82 = call i32 @usb_control_msg(ptr noundef %79, i32 noundef %81, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %75, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %75) #24
  %83 = icmp eq i32 %82, -19
  br i1 %83, label %84, label %90

84:                                               ; preds = %77
  %85 = load ptr, ptr %78, align 4
  %86 = getelementptr inbounds %struct.usb_device, ptr %85, i32 0, i32 3
  %87 = load i32, ptr %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %84
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %90

90:                                               ; preds = %89, %84, %77, %74, %66
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %91 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6128, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 256) #24
  %92 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %93 = and i32 %92, -150994944
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %93, ptr %8, align 4
  %94 = load volatile i32, ptr %0, align 4
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %113

97:                                               ; preds = %90
  %98 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %99 = icmp eq ptr %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %102 = load ptr, ptr %101, align 4
  %103 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %104 = load i32, ptr %103, align 8
  %105 = call i32 @usb_control_msg(ptr noundef %102, i32 noundef %104, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6128, i16 noundef zeroext 392, ptr noundef nonnull %98, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %98) #24
  %106 = icmp eq i32 %105, -19
  br i1 %106, label %107, label %113

107:                                              ; preds = %100
  %108 = load ptr, ptr %101, align 4
  %109 = getelementptr inbounds %struct.usb_device, ptr %108, i32 0, i32 3
  %110 = load i32, ptr %109, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %113

113:                                              ; preds = %112, %107, %100, %97, %90
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %114 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11088, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 51) #24
  %115 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %116 = and i32 %115, 65534
  %117 = or i32 %116, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %117, ptr %6, align 4
  %118 = load volatile i32, ptr %0, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %137

121:                                              ; preds = %113
  %122 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %123 = icmp eq ptr %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %126 = load ptr, ptr %125, align 4
  %127 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %128 = load i32, ptr %127, align 8
  %129 = call i32 @usb_control_msg(ptr noundef %126, i32 noundef %128, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11088, i16 noundef zeroext 51, ptr noundef nonnull %122, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %122) #24
  %130 = icmp eq i32 %129, -19
  br i1 %130, label %131, label %137

131:                                              ; preds = %124
  %132 = load ptr, ptr %125, align 4
  %133 = getelementptr inbounds %struct.usb_device, ptr %132, i32 0, i32 3
  %134 = load i32, ptr %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %131
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %137

137:                                              ; preds = %136, %131, %124, %121, %113
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %138 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11260, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 204) #24
  %139 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %140 = and i32 %139, -589824
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %140, ptr %4, align 4
  %141 = load volatile i32, ptr %0, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %160

144:                                              ; preds = %137
  %145 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %146 = icmp eq ptr %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %149 = load ptr, ptr %148, align 4
  %150 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %151 = load i32, ptr %150, align 8
  %152 = call i32 @usb_control_msg(ptr noundef %149, i32 noundef %151, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11260, i16 noundef zeroext 204, ptr noundef nonnull %145, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %145) #24
  %153 = icmp eq i32 %152, -19
  br i1 %153, label %154, label %160

154:                                              ; preds = %147
  %155 = load ptr, ptr %148, align 4
  %156 = getelementptr inbounds %struct.usb_device, ptr %155, i32 0, i32 3
  %157 = load i32, ptr %156, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %154
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %160

160:                                              ; preds = %159, %154, %147, %144, %137
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %191

161:                                              ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 268435456, ptr %3, align 4
  %162 = load volatile i32, ptr %0, align 4
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %181

165:                                              ; preds = %161
  %166 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %167 = icmp eq ptr %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %170 = load ptr, ptr %169, align 4
  %171 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %172 = load i32, ptr %171, align 8
  %173 = call i32 @usb_control_msg(ptr noundef %170, i32 noundef %172, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6128, i16 noundef zeroext 392, ptr noundef nonnull %166, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %166) #24
  %174 = icmp eq i32 %173, -19
  br i1 %174, label %175, label %181

175:                                              ; preds = %168
  %176 = load ptr, ptr %169, align 4
  %177 = getelementptr inbounds %struct.usb_device, ptr %176, i32 0, i32 3
  %178 = load i32, ptr %177, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %175
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %181

181:                                              ; preds = %180, %175, %168, %165, %161
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %182

182:                                              ; preds = %188, %181
  %183 = phi i32 [ 0, %181 ], [ %189, %188 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %184 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6128, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 256) #24
  %185 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %186 = and i32 %185, 268435456
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %182
  call void @usleep_range_state(i32 noundef 100, i32 noundef 400, i32 noundef 2) #24
  %189 = add nuw nsw i32 %183, 1
  %190 = icmp eq i32 %189, 1000
  br i1 %190, label %191, label %182

191:                                              ; preds = %188, %182, %160
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_free_urb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_teredo_off(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %9 = load i8, ptr %8, align 8
  %10 = add i8 %9, -1
  %11 = icmp ult i8 %10, 7
  br i1 %11, label %12, label %36

12:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %13 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16196, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %14 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %15 = and i32 %14, 32512
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %15, ptr %6, align 4
  %16 = load volatile i32, ptr %0, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %35

19:                                               ; preds = %12
  %20 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %21 = icmp eq ptr %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %26 = load i32, ptr %25, align 8
  %27 = call i32 @usb_control_msg(ptr noundef %24, i32 noundef %26, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16196, i16 noundef zeroext 307, ptr noundef nonnull %20, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %20) #24
  %28 = icmp eq i32 %27, -19
  br i1 %28, label %29, label %35

29:                                               ; preds = %22
  %30 = load ptr, ptr %23, align 4
  %31 = getelementptr inbounds %struct.usb_device, ptr %30, i32 0, i32 3
  %32 = load i32, ptr %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %35

35:                                               ; preds = %34, %29, %22, %19, %12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  br label %57

36:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 255, ptr %5, align 4
  %37 = load volatile i32, ptr %0, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %56

40:                                               ; preds = %36
  %41 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %42 = icmp eq ptr %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %47 = load i32, ptr %46, align 8
  %48 = call i32 @usb_control_msg(ptr noundef %45, i32 noundef %47, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16196, i16 noundef zeroext 273, ptr noundef nonnull %41, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %41) #24
  %49 = icmp eq i32 %48, -19
  br i1 %49, label %50, label %56

50:                                               ; preds = %43
  %51 = load ptr, ptr %44, align 4
  %52 = getelementptr inbounds %struct.usb_device, ptr %51, i32 0, i32 3
  %53 = load i32, ptr %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %56

56:                                               ; preds = %55, %50, %43, %40, %36
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  br label %57

57:                                               ; preds = %56, %35
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 16, ptr %4, align 4
  %58 = load volatile i32, ptr %0, align 4
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %77

61:                                               ; preds = %57
  %62 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %63 = icmp eq ptr %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %66 = load ptr, ptr %65, align 4
  %67 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %68 = load i32, ptr %67, align 8
  %69 = call i32 @usb_control_msg(ptr noundef %66, i32 noundef %68, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7128, i16 noundef zeroext 307, ptr noundef nonnull %62, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %62) #24
  %70 = icmp eq i32 %69, -19
  br i1 %70, label %71, label %77

71:                                               ; preds = %64
  %72 = load ptr, ptr %65, align 4
  %73 = getelementptr inbounds %struct.usb_device, ptr %72, i32 0, i32 3
  %74 = load i32, ptr %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %77

77:                                               ; preds = %76, %71, %64, %61, %57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4
  %78 = load volatile i32, ptr %0, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %97

81:                                               ; preds = %77
  %82 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %83 = icmp eq ptr %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %86 = load ptr, ptr %85, align 4
  %87 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %88 = load i32, ptr %87, align 8
  %89 = call i32 @usb_control_msg(ptr noundef %86, i32 noundef %88, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11544, i16 noundef zeroext 307, ptr noundef nonnull %82, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %82) #24
  %90 = icmp eq i32 %89, -19
  br i1 %90, label %91, label %97

91:                                               ; preds = %84
  %92 = load ptr, ptr %85, align 4
  %93 = getelementptr inbounds %struct.usb_device, ptr %92, i32 0, i32 3
  %94 = load i32, ptr %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %97

97:                                               ; preds = %96, %91, %84, %81, %77
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4
  %98 = load volatile i32, ptr %0, align 4
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %117

101:                                              ; preds = %97
  %102 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %103 = icmp eq ptr %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %106 = load ptr, ptr %105, align 4
  %107 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %108 = load i32, ptr %107, align 8
  %109 = call i32 @usb_control_msg(ptr noundef %106, i32 noundef %108, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11572, i16 noundef zeroext 511, ptr noundef nonnull %102, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %102) #24
  %110 = icmp eq i32 %109, -19
  br i1 %110, label %111, label %117

111:                                              ; preds = %104
  %112 = load ptr, ptr %105, align 4
  %113 = getelementptr inbounds %struct.usb_device, ptr %112, i32 0, i32 3
  %114 = load i32, ptr %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %117

117:                                              ; preds = %116, %111, %104, %101, %97
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %8 = load i8, ptr %7, align 8
  switch i8 %8, label %35 [
    i8 1, label %9
    i8 2, label %9
    i8 3, label %9
    i8 4, label %9
    i8 5, label %9
    i8 6, label %9
    i8 7, label %9
    i8 8, label %9
    i8 9, label %9
    i8 15, label %9
  ]

9:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %10 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6060, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 307) #24
  %11 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %12 = and i32 %11, 65471
  %13 = or i32 %12, 64
  %14 = select i1 %1, i32 %13, i32 %12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %14, ptr %5, align 4
  %15 = load volatile i32, ptr %0, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %9
  %19 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %20 = icmp eq ptr %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %25 = load i32, ptr %24, align 8
  %26 = call i32 @usb_control_msg(ptr noundef %23, i32 noundef %25, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6060, i16 noundef zeroext 307, ptr noundef nonnull %19, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %19) #24
  %27 = icmp eq i32 %26, -19
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  %29 = load ptr, ptr %22, align 4
  %30 = getelementptr inbounds %struct.usb_device, ptr %29, i32 0, i32 3
  %31 = load i32, ptr %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %34

34:                                               ; preds = %33, %28, %21, %18, %9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  br label %63

35:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %36 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %37 = load i32, ptr %4, align 4
  %38 = lshr i32 %37, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %39 = or i32 %38, 192
  %40 = and i32 %38, 65343
  %41 = select i1 %1, i32 %39, i32 %40
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %42 = shl nuw i32 %41, 16
  store i32 %42, ptr %3, align 4
  %43 = load volatile i32, ptr %0, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %35
  %47 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %48 = icmp eq ptr %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %51 = load ptr, ptr %50, align 4
  %52 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %53 = load i32, ptr %52, align 8
  %54 = call i32 @usb_control_msg(ptr noundef %51, i32 noundef %53, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 460, ptr noundef nonnull %47, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %47) #24
  %55 = icmp eq i32 %54, -19
  br i1 %55, label %56, label %62

56:                                               ; preds = %49
  %57 = load ptr, ptr %50, align 4
  %58 = getelementptr inbounds %struct.usb_device, ptr %57, i32 0, i32 3
  %59 = load i32, ptr %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %62

62:                                               ; preds = %61, %56, %49, %46, %35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %63

63:                                               ; preds = %62, %34
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_eee_enable(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %4 = load i8, ptr %3, align 8
  switch i8 %4, label %24 [
    i8 1, label %5
    i8 2, label %5
    i8 7, label %5
    i8 3, label %10
    i8 4, label %10
    i8 5, label %10
    i8 6, label %10
    i8 8, label %10
    i8 9, label %10
    i8 15, label %10
    i8 11, label %15
    i8 12, label %15
    i8 13, label %15
    i8 14, label %15
    i8 16, label %15
  ]

5:                                                ; preds = %2, %2, %2
  br i1 %1, label %6, label %9

6:                                                ; preds = %5
  tail call fastcc void @r8152_eee_en(ptr noundef %0, i1 noundef zeroext true)
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 45
  %8 = load i16, ptr %7, align 2
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 7) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23524, i16 noundef zeroext 60) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 16391) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23524, i16 noundef zeroext %8) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 0) #24
  br label %24

9:                                                ; preds = %5
  tail call fastcc void @r8152_eee_en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 7) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23524, i16 noundef zeroext 60) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 16391) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23524, i16 noundef zeroext 0) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23526, i16 noundef zeroext 0) #24
  br label %24

10:                                               ; preds = %2, %2, %2, %2, %2, %2, %2
  br i1 %1, label %11, label %14

11:                                               ; preds = %10
  tail call fastcc void @r8153_eee_en(ptr noundef %0, i1 noundef zeroext true)
  %12 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 45
  %13 = load i16, ptr %12, align 2
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23088, i16 noundef zeroext %13)
  br label %24

14:                                               ; preds = %10
  tail call fastcc void @r8153_eee_en(ptr noundef %0, i1 noundef zeroext false)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23088, i16 noundef zeroext 0)
  br label %24

15:                                               ; preds = %2, %2, %2, %2, %2
  br i1 %1, label %16, label %21

16:                                               ; preds = %15
  tail call fastcc void @r8153_eee_en(ptr noundef %0, i1 noundef zeroext true) #24
  %17 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -22828) #24
  %18 = or i16 %17, 1
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -22828, i16 noundef zeroext %18) #24
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 45
  %20 = load i16, ptr %19, align 2
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23088, i16 noundef zeroext %20)
  br label %24

21:                                               ; preds = %15
  tail call fastcc void @r8153_eee_en(ptr noundef %0, i1 noundef zeroext false) #24
  %22 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -22828) #24
  %23 = and i16 %22, -2
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -22828, i16 noundef zeroext %23) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23088, i16 noundef zeroext 0)
  br label %24

24:                                               ; preds = %21, %16, %14, %11, %9, %6, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8152_eee_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8128, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 307) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext 8320)
  %8 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext 8338)
  %9 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext 8340)
  %10 = and i32 %6, 65532
  br i1 %1, label %11, label %18

11:                                               ; preds = %2
  %12 = and i16 %9, 127
  %13 = and i16 %7, -13169
  %14 = or i32 %10, 3
  %15 = or i16 %13, 13072
  %16 = or i16 %8, 1536
  %17 = or i16 %12, 5376
  br label %23

18:                                               ; preds = %2
  %19 = and i16 %7, -13169
  %20 = or i16 %19, 112
  %21 = and i16 %8, -1537
  %22 = or i16 %9, -128
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi i16 [ %15, %11 ], [ %20, %18 ]
  %25 = phi i16 [ %16, %11 ], [ %21, %18 ]
  %26 = phi i16 [ %17, %11 ], [ %22, %18 ]
  %27 = phi i32 [ %14, %11 ], [ %10, %18 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %28 = and i32 %27, 65535
  store i32 %28, ptr %3, align 4
  %29 = load volatile i32, ptr %0, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %23
  %33 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %34 = icmp eq ptr %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %39 = load i32, ptr %38, align 8
  %40 = call i32 @usb_control_msg(ptr noundef %37, i32 noundef %39, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8128, i16 noundef zeroext 307, ptr noundef nonnull %33, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %33) #24
  %41 = icmp eq i32 %40, -19
  br i1 %41, label %42, label %48

42:                                               ; preds = %35
  %43 = load ptr, ptr %36, align 4
  %44 = getelementptr inbounds %struct.usb_device, ptr %43, i32 0, i32 3
  %45 = load i32, ptr %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %48

48:                                               ; preds = %47, %42, %35, %32, %23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8320, i16 noundef zeroext %24)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8338, i16 noundef zeroext %25)
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext 8340, i16 noundef zeroext %26)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_eee_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8128, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 307) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = and i32 %6, 65532
  %8 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23502)
  %9 = or i32 %7, 3
  %10 = select i1 %1, i32 %9, i32 %7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %10, ptr %3, align 4
  %11 = load volatile i32, ptr %0, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %2
  %15 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %16 = icmp eq ptr %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %21 = load i32, ptr %20, align 8
  %22 = call i32 @usb_control_msg(ptr noundef %19, i32 noundef %21, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8128, i16 noundef zeroext 307, ptr noundef nonnull %15, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %15) #24
  %23 = icmp eq i32 %22, -19
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = load ptr, ptr %18, align 4
  %26 = getelementptr inbounds %struct.usb_device, ptr %25, i32 0, i32 3
  %27 = load i32, ptr %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %30

30:                                               ; preds = %29, %24, %17, %14, %2
  %31 = and i16 %8, -17
  %32 = select i1 %1, i16 16, i16 0
  %33 = or i16 %31, %32
  %34 = select i1 %1, i32 1024, i32 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23502, i16 noundef zeroext %33)
  %35 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %36 = load i32, ptr %35, align 4
  %37 = and i32 %36, -1025
  %38 = or i32 %37, %34
  store i32 %38, ptr %35, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl8152_apply_firmware(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 23, i32 1
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  %48 = icmp ugt ptr %46, inttoptr (i32 -4096 to ptr)
  %49 = or i1 %47, %48
  br i1 %49, label %705, label %50

50:                                               ; preds = %2
  %51 = getelementptr inbounds %struct.firmware, ptr %46, i32 0, i32 1
  %52 = load ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 23, i32 3
  %54 = load ptr, ptr %53, align 4
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  %57 = tail call i32 %54(ptr noundef %0) #24
  br label %58

58:                                               ; preds = %56, %50
  %59 = load i32, ptr %46, align 4
  %60 = icmp ugt i32 %59, 64
  br i1 %60, label %61, label %691

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %63 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %64 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %65 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 43
  %66 = xor i1 %1, true
  %67 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  br label %68

68:                                               ; preds = %681, %61
  %69 = phi i32 [ 1, %61 ], [ %683, %681 ]
  %70 = phi i32 [ 64, %61 ], [ %688, %681 ]
  %71 = phi i16 [ 0, %61 ], [ %682, %681 ]
  %72 = load ptr, ptr %51, align 4
  %73 = getelementptr i8, ptr %72, i32 %70
  %74 = load i32, ptr %73, align 1
  switch i32 %74, label %681 [
    i32 0, label %691
    i32 13, label %578
    i32 6, label %551
    i32 3, label %409
    i32 4, label %419
    i32 5, label %435
    i32 14, label %485
    i32 7, label %494
    i32 8, label %494
    i32 9, label %494
    i32 10, label %494
    i32 11, label %494
    i32 12, label %494
    i32 1, label %76
    i32 2, label %75
  ]

75:                                               ; preds = %68
  br label %76

76:                                               ; preds = %75, %68
  %77 = phi i1 [ false, %75 ], [ true, %68 ]
  %78 = phi i1 [ true, %75 ], [ false, %68 ]
  %79 = phi i16 [ 0, %75 ], [ 256, %68 ]
  %80 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 11
  %81 = load i16, ptr %80, align 1
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %95, label %83

83:                                               ; preds = %76
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %44) #24
  store i32 0, ptr %44, align 4, !annotation !8
  %84 = and i16 %81, -4
  %85 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext %84, i16 noundef zeroext 4, ptr noundef nonnull %44, i16 noundef zeroext 0) #24
  %86 = load i32, ptr %44, align 4
  %87 = shl i16 %81, 3
  %88 = and i16 %87, 24
  %89 = zext i16 %88 to i32
  %90 = lshr i32 %86, %89
  %91 = trunc i32 %90 to i8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %44) #24
  %92 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 12
  %93 = load i8, ptr %92, align 1
  %94 = icmp ugt i8 %93, %91
  br i1 %94, label %95, label %681

95:                                               ; preds = %83, %76
  %96 = load i8, ptr %62, align 8
  switch i8 %96, label %99 [
    i8 1, label %282
    i8 2, label %282
    i8 7, label %282
    i8 3, label %97
    i8 4, label %97
    i8 5, label %97
    i8 6, label %97
    i8 15, label %98
  ]

97:                                               ; preds = %95, %95, %95, %95
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %43) #24
  store i32 0, ptr %43, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -968, i16 noundef zeroext 17, i16 noundef zeroext 4, ptr noundef nonnull %43, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %43) #24
  br label %282

98:                                               ; preds = %95
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %42) #24
  store i32 0, ptr %42, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -952, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %42, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %42) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %41) #24
  store i32 0, ptr %41, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -968, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %41, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %41) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %40) #24
  store i32 0, ptr %40, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -968, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %40, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %40) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %39) #24
  store i32 0, ptr %39, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -964, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %39, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %39) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %38) #24
  store i32 0, ptr %38, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -964, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %38, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %38) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %37) #24
  store i32 0, ptr %37, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -960, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %37, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %37) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %36) #24
  store i32 0, ptr %36, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -960, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %36, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %36) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %35) #24
  store i32 0, ptr %35, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -956, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %35, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %35) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %34) #24
  store i32 0, ptr %34, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -956, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %34, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %34) #24
  br label %282

99:                                               ; preds = %95
  br i1 %78, label %100, label %263

100:                                              ; preds = %99
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %33) #24
  store i32 0, ptr %33, align 4
  %101 = load volatile i32, ptr %0, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %118

104:                                              ; preds = %100
  %105 = call ptr @kmemdup(ptr noundef nonnull %33, i32 noundef 4, i32 noundef 3264) #24
  %106 = icmp eq ptr %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %104
  %108 = load ptr, ptr %63, align 4
  %109 = load i32, ptr %64, align 8
  %110 = call i32 @usb_control_msg(ptr noundef %108, i32 noundef %109, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -952, i16 noundef zeroext 51, ptr noundef nonnull %105, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %105) #24
  %111 = icmp eq i32 %110, -19
  br i1 %111, label %112, label %118

112:                                              ; preds = %107
  %113 = load ptr, ptr %63, align 4
  %114 = getelementptr inbounds %struct.usb_device, ptr %113, i32 0, i32 3
  %115 = load i32, ptr %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %112
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %118

118:                                              ; preds = %117, %112, %107, %104, %100
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %33) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %32) #24
  store i32 0, ptr %32, align 4
  %119 = load volatile i32, ptr %0, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %136

122:                                              ; preds = %118
  %123 = call ptr @kmemdup(ptr noundef nonnull %32, i32 noundef 4, i32 noundef 3264) #24
  %124 = icmp eq ptr %123, null
  br i1 %124, label %136, label %125

125:                                              ; preds = %122
  %126 = load ptr, ptr %63, align 4
  %127 = load i32, ptr %64, align 8
  %128 = call i32 @usb_control_msg(ptr noundef %126, i32 noundef %127, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -968, i16 noundef zeroext 51, ptr noundef nonnull %123, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %123) #24
  %129 = icmp eq i32 %128, -19
  br i1 %129, label %130, label %136

130:                                              ; preds = %125
  %131 = load ptr, ptr %63, align 4
  %132 = getelementptr inbounds %struct.usb_device, ptr %131, i32 0, i32 3
  %133 = load i32, ptr %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %136

136:                                              ; preds = %135, %130, %125, %122, %118
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %32) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %31) #24
  store i32 0, ptr %31, align 4
  %137 = load volatile i32, ptr %0, align 4
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %154

140:                                              ; preds = %136
  %141 = call ptr @kmemdup(ptr noundef nonnull %31, i32 noundef 4, i32 noundef 3264) #24
  %142 = icmp eq ptr %141, null
  br i1 %142, label %154, label %143

143:                                              ; preds = %140
  %144 = load ptr, ptr %63, align 4
  %145 = load i32, ptr %64, align 8
  %146 = call i32 @usb_control_msg(ptr noundef %144, i32 noundef %145, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -968, i16 noundef zeroext 204, ptr noundef nonnull %141, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %141) #24
  %147 = icmp eq i32 %146, -19
  br i1 %147, label %148, label %154

148:                                              ; preds = %143
  %149 = load ptr, ptr %63, align 4
  %150 = getelementptr inbounds %struct.usb_device, ptr %149, i32 0, i32 3
  %151 = load i32, ptr %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %154

154:                                              ; preds = %153, %148, %143, %140, %136
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %31) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %30) #24
  store i32 0, ptr %30, align 4
  %155 = load volatile i32, ptr %0, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %172

158:                                              ; preds = %154
  %159 = call ptr @kmemdup(ptr noundef nonnull %30, i32 noundef 4, i32 noundef 3264) #24
  %160 = icmp eq ptr %159, null
  br i1 %160, label %172, label %161

161:                                              ; preds = %158
  %162 = load ptr, ptr %63, align 4
  %163 = load i32, ptr %64, align 8
  %164 = call i32 @usb_control_msg(ptr noundef %162, i32 noundef %163, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -964, i16 noundef zeroext 51, ptr noundef nonnull %159, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %159) #24
  %165 = icmp eq i32 %164, -19
  br i1 %165, label %166, label %172

166:                                              ; preds = %161
  %167 = load ptr, ptr %63, align 4
  %168 = getelementptr inbounds %struct.usb_device, ptr %167, i32 0, i32 3
  %169 = load i32, ptr %168, align 8
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %166
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %172

172:                                              ; preds = %171, %166, %161, %158, %154
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %30) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %29) #24
  store i32 0, ptr %29, align 4
  %173 = load volatile i32, ptr %0, align 4
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %190

176:                                              ; preds = %172
  %177 = call ptr @kmemdup(ptr noundef nonnull %29, i32 noundef 4, i32 noundef 3264) #24
  %178 = icmp eq ptr %177, null
  br i1 %178, label %190, label %179

179:                                              ; preds = %176
  %180 = load ptr, ptr %63, align 4
  %181 = load i32, ptr %64, align 8
  %182 = call i32 @usb_control_msg(ptr noundef %180, i32 noundef %181, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -964, i16 noundef zeroext 204, ptr noundef nonnull %177, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %177) #24
  %183 = icmp eq i32 %182, -19
  br i1 %183, label %184, label %190

184:                                              ; preds = %179
  %185 = load ptr, ptr %63, align 4
  %186 = getelementptr inbounds %struct.usb_device, ptr %185, i32 0, i32 3
  %187 = load i32, ptr %186, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %184
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %190

190:                                              ; preds = %189, %184, %179, %176, %172
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %29) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %28) #24
  store i32 0, ptr %28, align 4
  %191 = load volatile i32, ptr %0, align 4
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %208

194:                                              ; preds = %190
  %195 = call ptr @kmemdup(ptr noundef nonnull %28, i32 noundef 4, i32 noundef 3264) #24
  %196 = icmp eq ptr %195, null
  br i1 %196, label %208, label %197

197:                                              ; preds = %194
  %198 = load ptr, ptr %63, align 4
  %199 = load i32, ptr %64, align 8
  %200 = call i32 @usb_control_msg(ptr noundef %198, i32 noundef %199, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -960, i16 noundef zeroext 51, ptr noundef nonnull %195, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %195) #24
  %201 = icmp eq i32 %200, -19
  br i1 %201, label %202, label %208

202:                                              ; preds = %197
  %203 = load ptr, ptr %63, align 4
  %204 = getelementptr inbounds %struct.usb_device, ptr %203, i32 0, i32 3
  %205 = load i32, ptr %204, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %202
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %208

208:                                              ; preds = %207, %202, %197, %194, %190
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %28) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %27) #24
  store i32 0, ptr %27, align 4
  %209 = load volatile i32, ptr %0, align 4
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %226

212:                                              ; preds = %208
  %213 = call ptr @kmemdup(ptr noundef nonnull %27, i32 noundef 4, i32 noundef 3264) #24
  %214 = icmp eq ptr %213, null
  br i1 %214, label %226, label %215

215:                                              ; preds = %212
  %216 = load ptr, ptr %63, align 4
  %217 = load i32, ptr %64, align 8
  %218 = call i32 @usb_control_msg(ptr noundef %216, i32 noundef %217, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -960, i16 noundef zeroext 204, ptr noundef nonnull %213, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %213) #24
  %219 = icmp eq i32 %218, -19
  br i1 %219, label %220, label %226

220:                                              ; preds = %215
  %221 = load ptr, ptr %63, align 4
  %222 = getelementptr inbounds %struct.usb_device, ptr %221, i32 0, i32 3
  %223 = load i32, ptr %222, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %220
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %226

226:                                              ; preds = %225, %220, %215, %212, %208
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %27) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %26) #24
  store i32 0, ptr %26, align 4
  %227 = load volatile i32, ptr %0, align 4
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %244

230:                                              ; preds = %226
  %231 = call ptr @kmemdup(ptr noundef nonnull %26, i32 noundef 4, i32 noundef 3264) #24
  %232 = icmp eq ptr %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %230
  %234 = load ptr, ptr %63, align 4
  %235 = load i32, ptr %64, align 8
  %236 = call i32 @usb_control_msg(ptr noundef %234, i32 noundef %235, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -956, i16 noundef zeroext 51, ptr noundef nonnull %231, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %231) #24
  %237 = icmp eq i32 %236, -19
  br i1 %237, label %238, label %244

238:                                              ; preds = %233
  %239 = load ptr, ptr %63, align 4
  %240 = getelementptr inbounds %struct.usb_device, ptr %239, i32 0, i32 3
  %241 = load i32, ptr %240, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %238
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %244

244:                                              ; preds = %243, %238, %233, %230, %226
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #24
  store i32 0, ptr %25, align 4
  %245 = load volatile i32, ptr %0, align 4
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %262

248:                                              ; preds = %244
  %249 = call ptr @kmemdup(ptr noundef nonnull %25, i32 noundef 4, i32 noundef 3264) #24
  %250 = icmp eq ptr %249, null
  br i1 %250, label %262, label %251

251:                                              ; preds = %248
  %252 = load ptr, ptr %63, align 4
  %253 = load i32, ptr %64, align 8
  %254 = call i32 @usb_control_msg(ptr noundef %252, i32 noundef %253, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -956, i16 noundef zeroext 204, ptr noundef nonnull %249, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %249) #24
  %255 = icmp eq i32 %254, -19
  br i1 %255, label %256, label %262

256:                                              ; preds = %251
  %257 = load ptr, ptr %63, align 4
  %258 = getelementptr inbounds %struct.usb_device, ptr %257, i32 0, i32 3
  %259 = load i32, ptr %258, align 8
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %256
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %262

262:                                              ; preds = %261, %256, %251, %248, %244
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #24
  br label %282

263:                                              ; preds = %99
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %24) #24
  store i32 0, ptr %24, align 4
  %264 = load volatile i32, ptr %0, align 4
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %281

267:                                              ; preds = %263
  %268 = call ptr @kmemdup(ptr noundef nonnull %24, i32 noundef 4, i32 noundef 3264) #24
  %269 = icmp eq ptr %268, null
  br i1 %269, label %281, label %270

270:                                              ; preds = %267
  %271 = load ptr, ptr %63, align 4
  %272 = load i32, ptr %64, align 8
  %273 = call i32 @usb_control_msg(ptr noundef %271, i32 noundef %272, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -968, i16 noundef zeroext 273, ptr noundef nonnull %268, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %268) #24
  %274 = icmp eq i32 %273, -19
  br i1 %274, label %275, label %281

275:                                              ; preds = %270
  %276 = load ptr, ptr %63, align 4
  %277 = getelementptr inbounds %struct.usb_device, ptr %276, i32 0, i32 3
  %278 = load i32, ptr %277, align 8
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %275
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %281

281:                                              ; preds = %280, %275, %270, %267, %263
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %24) #24
  br label %282

282:                                              ; preds = %281, %262, %98, %97, %95, %95, %95
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %23) #24
  store i32 0, ptr %23, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -984, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %23, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #24
  store i32 0, ptr %22, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -984, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %22, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #24
  store i32 0, ptr %21, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -980, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %21, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #24
  store i32 0, ptr %20, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -980, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %20, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #24
  store i32 0, ptr %19, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -976, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %19, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #24
  store i32 0, ptr %18, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -976, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %18, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 0, ptr %17, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -972, i16 noundef zeroext 51, i16 noundef zeroext 4, ptr noundef nonnull %17, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 0, ptr %16, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -972, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %16, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  call void @usleep_range_state(i32 noundef 3000, i32 noundef 6000, i32 noundef 2) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext -988, i16 noundef zeroext 204, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  %283 = load i8, ptr %62, align 8
  %284 = icmp eq i8 %283, 4
  %285 = and i1 %77, %284
  br i1 %285, label %286, label %328

286:                                              ; preds = %282
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 0, ptr %14, align 4, !annotation !8
  %287 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11380, i16 noundef zeroext 4, ptr noundef nonnull %14, i16 noundef zeroext 460) #24
  %288 = load i32, ptr %14, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  %289 = and i32 %288, 65536
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %328

291:                                              ; preds = %286
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 130, ptr %13, align 4
  %292 = load volatile i32, ptr %0, align 4
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %309

295:                                              ; preds = %291
  %296 = call ptr @kmemdup(ptr noundef nonnull %13, i32 noundef 4, i32 noundef 3264) #24
  %297 = icmp eq ptr %296, null
  br i1 %297, label %309, label %298

298:                                              ; preds = %295
  %299 = load ptr, ptr %63, align 4
  %300 = load i32, ptr %64, align 8
  %301 = call i32 @usb_control_msg(ptr noundef %299, i32 noundef %300, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11380, i16 noundef zeroext 307, ptr noundef nonnull %296, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %296) #24
  %302 = icmp eq i32 %301, -19
  br i1 %302, label %303, label %309

303:                                              ; preds = %298
  %304 = load ptr, ptr %63, align 4
  %305 = getelementptr inbounds %struct.usb_device, ptr %304, i32 0, i32 3
  %306 = load i32, ptr %305, align 8
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %303
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %309

309:                                              ; preds = %308, %303, %298, %295, %291
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 8519680, ptr %12, align 4
  %310 = load volatile i32, ptr %0, align 4
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %327

313:                                              ; preds = %309
  %314 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %315 = icmp eq ptr %314, null
  br i1 %315, label %327, label %316

316:                                              ; preds = %313
  %317 = load ptr, ptr %63, align 4
  %318 = load i32, ptr %64, align 8
  %319 = call i32 @usb_control_msg(ptr noundef %317, i32 noundef %318, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11380, i16 noundef zeroext 460, ptr noundef nonnull %314, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %314) #24
  %320 = icmp eq i32 %319, -19
  br i1 %320, label %321, label %327

321:                                              ; preds = %316
  %322 = load ptr, ptr %63, align 4
  %323 = getelementptr inbounds %struct.usb_device, ptr %322, i32 0, i32 3
  %324 = load i32, ptr %323, align 8
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %321
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %327

327:                                              ; preds = %326, %321, %316, %313, %309
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  br label %328

328:                                              ; preds = %327, %286, %282
  %329 = getelementptr inbounds %struct.fw_block, ptr %73, i32 0, i32 1
  %330 = load i32, ptr %329, align 1
  %331 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 1
  %332 = load i16, ptr %331, align 1
  %333 = zext i16 %332 to i32
  %334 = getelementptr i8, ptr %73, i32 %333
  %335 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 2
  %336 = load i16, ptr %335, align 1
  %337 = trunc i32 %330 to i16
  %338 = sub i16 %337, %332
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %336, i16 noundef zeroext 255, i16 noundef zeroext %338, ptr noundef %334, i16 noundef zeroext %79) #24
  %339 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 3
  %340 = load i16, ptr %339, align 1
  %341 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 4
  %342 = load i16, ptr %341, align 1
  %343 = zext i16 %342 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  %344 = and i16 %340, 2
  %345 = icmp eq i16 %344, 0
  %346 = shl nuw nsw i16 %344, 3
  %347 = and i16 %340, -4
  %348 = select i1 %345, i16 %340, i16 %347
  %349 = zext i16 %346 to i32
  %350 = shl nuw i32 %343, %349
  %351 = select i1 %345, i16 51, i16 204
  store i32 %350, ptr %11, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %348, i16 noundef zeroext %351, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %352 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 8
  %353 = load i16, ptr %352, align 1
  %354 = zext i16 %353 to i32
  %355 = icmp eq i16 %353, 0
  br i1 %355, label %376, label %356

356:                                              ; preds = %328
  %357 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 7
  %358 = load i16, ptr %357, align 1
  br label %359

359:                                              ; preds = %359, %356
  %360 = phi i32 [ %374, %359 ], [ 0, %356 ]
  %361 = phi i16 [ %373, %359 ], [ %358, %356 ]
  %362 = getelementptr %struct.fw_mac, ptr %73, i32 0, i32 9, i32 %360
  %363 = load i16, ptr %362, align 1
  %364 = zext i16 %363 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  %365 = and i16 %361, 2
  %366 = icmp eq i16 %365, 0
  %367 = shl nuw nsw i16 %365, 3
  %368 = and i16 %361, -4
  %369 = select i1 %366, i16 %361, i16 %368
  %370 = zext i16 %367 to i32
  %371 = shl nuw i32 %364, %370
  %372 = select i1 %366, i16 51, i16 204
  store i32 %371, ptr %10, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %369, i16 noundef zeroext %372, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %373 = add i16 %361, 2
  %374 = add nuw nsw i32 %360, 1
  %375 = icmp eq i32 %374, %354
  br i1 %375, label %376, label %359

376:                                              ; preds = %359, %328
  %377 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 5
  %378 = load i16, ptr %377, align 1
  %379 = icmp eq i16 %378, 0
  br i1 %379, label %392, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 6
  %382 = load i16, ptr %381, align 1
  %383 = zext i16 %382 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  %384 = and i16 %378, 2
  %385 = icmp eq i16 %384, 0
  %386 = shl nuw nsw i16 %384, 3
  %387 = and i16 %378, -4
  %388 = select i1 %385, i16 %378, i16 %387
  %389 = zext i16 %386 to i32
  %390 = shl nuw i32 %383, %389
  %391 = select i1 %385, i16 51, i16 204
  store i32 %390, ptr %9, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %388, i16 noundef zeroext %391, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext %79) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  br label %392

392:                                              ; preds = %380, %376
  br i1 %82, label %681, label %393

393:                                              ; preds = %392
  %394 = getelementptr inbounds %struct.fw_mac, ptr %73, i32 0, i32 12
  %395 = load i8, ptr %394, align 1
  %396 = zext i8 %395 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  %397 = and i16 %81, 3
  %398 = icmp eq i16 %397, 0
  br i1 %398, label %405, label %399

399:                                              ; preds = %393
  %400 = shl nuw nsw i16 17, %397
  %401 = shl nuw nsw i16 %397, 3
  %402 = zext i16 %401 to i32
  %403 = shl nuw i32 %396, %402
  %404 = and i16 %81, -4
  br label %405

405:                                              ; preds = %399, %393
  %406 = phi i16 [ %404, %399 ], [ %81, %393 ]
  %407 = phi i32 [ %403, %399 ], [ %396, %393 ]
  %408 = phi i16 [ %400, %399 ], [ 17, %393 ]
  store i32 %407, ptr %8, align 4
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %406, i16 noundef zeroext %408, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  br label %681

409:                                              ; preds = %68
  %410 = icmp eq i32 %69, 0
  br i1 %410, label %681, label %411

411:                                              ; preds = %409
  %412 = getelementptr inbounds %struct.fw_phy_patch_key, ptr %73, i32 0, i32 1
  %413 = load i16, ptr %412, align 1
  %414 = getelementptr inbounds %struct.fw_phy_patch_key, ptr %73, i32 0, i32 2
  %415 = load i16, ptr %414, align 1
  %416 = call fastcc i32 @rtl_phy_patch_request(ptr noundef %0, i1 noundef zeroext true, i1 noundef zeroext %66) #24
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %681

418:                                              ; preds = %411
  call fastcc void @rtl_patch_key_set(ptr noundef %0, i16 noundef zeroext %413, i16 noundef zeroext %415) #24
  br label %681

419:                                              ; preds = %68
  %420 = icmp eq i32 %69, 0
  br i1 %420, label %681, label %421

421:                                              ; preds = %419
  %422 = icmp eq i16 %71, 0
  br i1 %422, label %423, label %424, !prof !23

423:                                              ; preds = %421
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 5088, i32 noundef 9, ptr noundef null) #24
  br label %424

424:                                              ; preds = %423, %421
  call fastcc void @rtl_patch_key_set(ptr noundef %0, i16 noundef zeroext %71, i16 noundef zeroext 0) #24
  %425 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400) #24
  %426 = and i16 %425, -17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %426) #24
  br i1 %1, label %681, label %427

427:                                              ; preds = %427, %424
  %428 = phi i32 [ %432, %427 ], [ 0, %424 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %429 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432) #24
  %430 = and i16 %429, 64
  %431 = icmp ne i16 %430, 0
  %432 = add nuw nsw i32 %428, 1
  %433 = icmp ult i32 %428, 4999
  %434 = select i1 %431, i1 %433, i1 false
  br i1 %434, label %427, label %681

435:                                              ; preds = %68
  store i16 -1, ptr %65, align 2
  %436 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 7
  %437 = load i16, ptr %436, align 1
  %438 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 8
  %439 = load i16, ptr %438, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %437) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %439) #24
  %440 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 3
  %441 = load i16, ptr %440, align 1
  %442 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 4
  %443 = load i16, ptr %442, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %441) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %443) #24
  %444 = getelementptr inbounds %struct.fw_block, ptr %73, i32 0, i32 1
  %445 = load i32, ptr %444, align 1
  %446 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 1
  %447 = load i16, ptr %446, align 1
  %448 = zext i16 %447 to i32
  %449 = sub i32 %445, %448
  %450 = getelementptr i8, ptr %73, i32 %448
  %451 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 2
  %452 = load i16, ptr %451, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %452) #24
  %453 = icmp ult i32 %449, 2
  br i1 %453, label %462, label %454

454:                                              ; preds = %435
  %455 = lshr i32 %449, 1
  br label %456

456:                                              ; preds = %456, %454
  %457 = phi i32 [ %460, %456 ], [ 0, %454 ]
  %458 = getelementptr i16, ptr %450, i32 %457
  %459 = load i16, ptr %458, align 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %459) #24
  %460 = add nuw nsw i32 %457, 1
  %461 = icmp eq i32 %460, %455
  br i1 %461, label %462, label %456

462:                                              ; preds = %456, %435
  %463 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 5
  %464 = load i16, ptr %463, align 1
  %465 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 6
  %466 = load i16, ptr %465, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %464) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %466) #24
  %467 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 12
  %468 = load i16, ptr %467, align 1
  %469 = zext i16 %468 to i32
  %470 = icmp eq i16 %468, 0
  br i1 %470, label %482, label %471

471:                                              ; preds = %462
  %472 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 11
  %473 = load i16, ptr %472, align 1
  br label %474

474:                                              ; preds = %474, %471
  %475 = phi i32 [ %480, %474 ], [ 0, %471 ]
  %476 = phi i16 [ %479, %474 ], [ %473, %471 ]
  %477 = getelementptr %struct.fw_phy_nc, ptr %73, i32 0, i32 13, i32 %475
  %478 = load i16, ptr %477, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %476) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %478) #24
  %479 = add i16 %476, 2
  %480 = add nuw nsw i32 %475, 1
  %481 = icmp eq i32 %480, %469
  br i1 %481, label %482, label %474

482:                                              ; preds = %474, %462
  %483 = getelementptr inbounds %struct.fw_phy_nc, ptr %73, i32 0, i32 9
  %484 = load i16, ptr %483, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %437) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %484) #24
  br label %681

485:                                              ; preds = %68
  %486 = getelementptr inbounds %struct.fw_phy_ver, ptr %73, i32 0, i32 1
  %487 = load i16, ptr %486, align 1
  %488 = getelementptr inbounds %struct.fw_phy_ver, ptr %73, i32 0, i32 1, i32 1
  %489 = load i16, ptr %488, align 1
  store i16 -1, ptr %65, align 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %487) #24
  %490 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %491 = icmp ult i16 %490, %489
  br i1 %491, label %492, label %681

492:                                              ; preds = %485
  %493 = zext i16 %489 to i32
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %487) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %489) #24
  br label %681

494:                                              ; preds = %68, %68, %68, %68, %68, %68
  %495 = icmp eq i32 %69, 0
  br i1 %495, label %681, label %496

496:                                              ; preds = %494
  store i16 -1, ptr %65, align 2
  %497 = getelementptr inbounds %struct.fw_phy_union, ptr %73, i32 0, i32 6
  %498 = load i8, ptr %497, align 1
  %499 = zext i8 %498 to i32
  %500 = icmp eq i8 %498, 0
  br i1 %500, label %509, label %501

501:                                              ; preds = %501, %496
  %502 = phi i32 [ %507, %501 ], [ 0, %496 ]
  %503 = getelementptr %struct.fw_phy_union, ptr %73, i32 0, i32 3, i32 %502
  %504 = load i16, ptr %503, align 1
  %505 = getelementptr %struct.fw_phy_union, ptr %73, i32 0, i32 3, i32 %502, i32 1
  %506 = load i16, ptr %505, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %504) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %506) #24
  %507 = add nuw nsw i32 %502, 1
  %508 = icmp eq i32 %507, %499
  br i1 %508, label %509, label %501

509:                                              ; preds = %501, %496
  %510 = getelementptr inbounds %struct.fw_block, ptr %73, i32 0, i32 1
  %511 = load i32, ptr %510, align 1
  %512 = getelementptr inbounds %struct.fw_phy_union, ptr %73, i32 0, i32 1
  %513 = load i16, ptr %512, align 1
  %514 = zext i16 %513 to i32
  %515 = sub i32 %511, %514
  %516 = getelementptr i8, ptr %73, i32 %514
  %517 = getelementptr inbounds %struct.fw_phy_union, ptr %73, i32 0, i32 2
  %518 = load i16, ptr %517, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %518) #24
  %519 = icmp ult i32 %515, 2
  br i1 %519, label %528, label %520

520:                                              ; preds = %509
  %521 = lshr i32 %515, 1
  br label %522

522:                                              ; preds = %522, %520
  %523 = phi i32 [ %526, %522 ], [ 0, %520 ]
  %524 = getelementptr i16, ptr %516, i32 %523
  %525 = load i16, ptr %524, align 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %525) #24
  %526 = add nuw nsw i32 %523, 1
  %527 = icmp eq i32 %526, %521
  br i1 %527, label %528, label %522

528:                                              ; preds = %522, %509
  %529 = getelementptr inbounds %struct.fw_phy_union, ptr %73, i32 0, i32 7
  %530 = load i8, ptr %529, align 1
  %531 = zext i8 %530 to i32
  %532 = icmp eq i8 %530, 0
  br i1 %532, label %681, label %533

533:                                              ; preds = %533, %528
  %534 = phi i32 [ %539, %533 ], [ 0, %528 ]
  %535 = getelementptr %struct.fw_phy_union, ptr %73, i32 0, i32 4, i32 %534
  %536 = load i16, ptr %535, align 1
  %537 = getelementptr %struct.fw_phy_union, ptr %73, i32 0, i32 4, i32 %534, i32 1
  %538 = load i16, ptr %537, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %536) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %538) #24
  %539 = add nuw nsw i32 %534, 1
  %540 = icmp eq i32 %539, %531
  br i1 %540, label %541, label %533

541:                                              ; preds = %533
  %542 = load i8, ptr %529, align 1
  %543 = icmp eq i8 %542, 0
  br i1 %543, label %681, label %544

544:                                              ; preds = %541
  %545 = getelementptr inbounds %struct.fw_phy_union, ptr %73, i32 0, i32 5
  %546 = load i16, ptr %545, align 1
  %547 = icmp eq i16 %546, 0
  br i1 %547, label %681, label %548

548:                                              ; preds = %544
  %549 = getelementptr inbounds %struct.fw_phy_union, ptr %73, i32 0, i32 5, i32 1
  %550 = load i16, ptr %549, align 1
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %546) #24
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %550) #24
  br label %681

551:                                              ; preds = %68
  %552 = icmp eq i32 %69, 0
  br i1 %552, label %681, label %553

553:                                              ; preds = %551
  store i16 -1, ptr %65, align 2
  %554 = getelementptr inbounds %struct.fw_phy_fixup, ptr %73, i32 0, i32 1
  %555 = load i16, ptr %554, align 1
  %556 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext %555) #24
  %557 = getelementptr inbounds %struct.fw_phy_fixup, ptr %73, i32 0, i32 2
  %558 = load i16, ptr %557, align 1
  switch i16 %558, label %681 [
    i16 0, label %559
    i16 1, label %563
    i16 2, label %567
    i16 3, label %572
  ]

559:                                              ; preds = %553
  %560 = getelementptr inbounds %struct.fw_phy_fixup, ptr %73, i32 0, i32 1, i32 1
  %561 = load i16, ptr %560, align 1
  %562 = and i16 %561, %556
  br label %576

563:                                              ; preds = %553
  %564 = getelementptr inbounds %struct.fw_phy_fixup, ptr %73, i32 0, i32 1, i32 1
  %565 = load i16, ptr %564, align 1
  %566 = or i16 %565, %556
  br label %576

567:                                              ; preds = %553
  %568 = getelementptr inbounds %struct.fw_phy_fixup, ptr %73, i32 0, i32 1, i32 1
  %569 = load i16, ptr %568, align 1
  %570 = xor i16 %569, -1
  %571 = and i16 %556, %570
  br label %576

572:                                              ; preds = %553
  %573 = getelementptr inbounds %struct.fw_phy_fixup, ptr %73, i32 0, i32 1, i32 1
  %574 = load i16, ptr %573, align 1
  %575 = xor i16 %574, %556
  br label %576

576:                                              ; preds = %572, %567, %563, %559
  %577 = phi i16 [ %575, %572 ], [ %571, %567 ], [ %566, %563 ], [ %562, %559 ]
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext %555, i16 noundef zeroext %577) #24
  br label %681

578:                                              ; preds = %68
  store i16 -1, ptr %65, align 2
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32738) #24
  %579 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %580 = getelementptr inbounds %struct.fw_phy_speed_up, ptr %73, i32 0, i32 2
  %581 = load i16, ptr %580, align 1
  %582 = icmp ult i16 %579, %581
  br i1 %582, label %583, label %681

583:                                              ; preds = %578
  %584 = getelementptr inbounds %struct.fw_block, ptr %73, i32 0, i32 1
  %585 = load i32, ptr %584, align 1
  %586 = getelementptr inbounds %struct.fw_phy_speed_up, ptr %73, i32 0, i32 1
  %587 = load i16, ptr %586, align 1
  %588 = zext i16 %587 to i32
  %589 = sub i32 %585, %588
  %590 = getelementptr i8, ptr %73, i32 %588
  %591 = call fastcc i32 @rtl_phy_patch_request(ptr noundef %0, i1 noundef zeroext true, i1 noundef zeroext %66) #24
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %681

593:                                              ; preds = %583
  %594 = icmp eq i32 %589, 0
  br i1 %594, label %663, label %595

595:                                              ; preds = %593
  %596 = getelementptr inbounds %struct.fw_phy_speed_up, ptr %73, i32 0, i32 3
  br label %597

597:                                              ; preds = %661, %595
  %598 = phi ptr [ %590, %595 ], [ %625, %661 ]
  %599 = phi i32 [ %589, %595 ], [ %626, %661 ]
  %600 = call i32 @llvm.umin.i32(i32 %599, i32 2048) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %601 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11644, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 51) #24
  %602 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %603 = and i32 %602, 65467
  %604 = or i32 %603, 68
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %604, ptr %6, align 4
  %605 = load volatile i32, ptr %0, align 4
  %606 = and i32 %605, 1
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %622

608:                                              ; preds = %597
  %609 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %610 = icmp eq ptr %609, null
  br i1 %610, label %622, label %611

611:                                              ; preds = %608
  %612 = load ptr, ptr %63, align 4
  %613 = load i32, ptr %64, align 8
  %614 = call i32 @usb_control_msg(ptr noundef %612, i32 noundef %613, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11644, i16 noundef zeroext 51, ptr noundef nonnull %609, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %609) #24
  %615 = icmp eq i32 %614, -19
  br i1 %615, label %616, label %622

616:                                              ; preds = %611
  %617 = load ptr, ptr %63, align 4
  %618 = getelementptr inbounds %struct.usb_device, ptr %617, i32 0, i32 3
  %619 = load i32, ptr %618, align 8
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %622

621:                                              ; preds = %616
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %622

622:                                              ; preds = %621, %616, %611, %608, %597
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %623 = load i16, ptr %596, align 1
  %624 = trunc i32 %600 to i16
  call fastcc void @generic_ocp_write(ptr noundef %0, i16 noundef zeroext %623, i16 noundef zeroext 255, i16 noundef zeroext %624, ptr noundef %598, i16 noundef zeroext 0) #24
  %625 = getelementptr i8, ptr %598, i32 %600
  %626 = sub i32 %599, %600
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %627 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -9112, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 460) #24
  %628 = load i32, ptr %5, align 4
  %629 = and i32 %628, -1114112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %630 = or i32 %629, 1048576
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %630, ptr %4, align 4
  %631 = load volatile i32, ptr %0, align 4
  %632 = and i32 %631, 1
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %634, label %648

634:                                              ; preds = %622
  %635 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %636 = icmp eq ptr %635, null
  br i1 %636, label %648, label %637

637:                                              ; preds = %634
  %638 = load ptr, ptr %63, align 4
  %639 = load i32, ptr %64, align 8
  %640 = call i32 @usb_control_msg(ptr noundef %638, i32 noundef %639, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -9112, i16 noundef zeroext 460, ptr noundef nonnull %635, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %635) #24
  %641 = icmp eq i32 %640, -19
  br i1 %641, label %642, label %648

642:                                              ; preds = %637
  %643 = load ptr, ptr %63, align 4
  %644 = getelementptr inbounds %struct.usb_device, ptr %643, i32 0, i32 3
  %645 = load i32, ptr %644, align 8
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %647, label %648

647:                                              ; preds = %642
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %648

648:                                              ; preds = %647, %642, %637, %634, %622
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %649

649:                                              ; preds = %655, %648
  %650 = phi i32 [ 0, %648 ], [ %656, %655 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %651 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -9112, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 460) #24
  %652 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %653 = and i32 %652, 1048576
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %661, label %655

655:                                              ; preds = %649
  %656 = add nuw nsw i32 %650, 1
  %657 = icmp eq i32 %656, 1000
  br i1 %657, label %658, label %649

658:                                              ; preds = %655
  %659 = load ptr, ptr %67, align 8
  %660 = getelementptr inbounds %struct.usb_interface, ptr %659, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %660, ptr noundef nonnull @.str.19) #25
  br label %663

661:                                              ; preds = %649
  %662 = icmp eq i32 %626, 0
  br i1 %662, label %663, label %597

663:                                              ; preds = %661, %658, %593
  store i16 -1, ptr %65, align 2
  %664 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400) #24
  %665 = and i16 %664, -17
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %665) #24
  br i1 %1, label %674, label %666

666:                                              ; preds = %666, %663
  %667 = phi i32 [ %671, %666 ], [ 0, %663 ]
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %668 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432) #24
  %669 = and i16 %668, 64
  %670 = icmp ne i16 %669, 0
  %671 = add nuw nsw i32 %667, 1
  %672 = icmp ult i32 %667, 4999
  %673 = select i1 %670, i1 %672, i1 false
  br i1 %673, label %666, label %674

674:                                              ; preds = %666, %663
  call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -32738) #24
  %675 = call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23496) #24
  %676 = load i16, ptr %580, align 1
  %677 = icmp eq i16 %675, %676
  br i1 %677, label %681, label %678

678:                                              ; preds = %674
  %679 = load ptr, ptr %67, align 8
  %680 = getelementptr inbounds %struct.usb_interface, ptr %679, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %680, ptr noundef nonnull @.str.20) #25
  br label %681

681:                                              ; preds = %678, %674, %583, %578, %576, %553, %551, %548, %544, %541, %528, %494, %492, %485, %482, %427, %424, %419, %418, %411, %409, %405, %392, %83, %68
  %682 = phi i16 [ %71, %68 ], [ %71, %551 ], [ %71, %494 ], [ %71, %482 ], [ %71, %419 ], [ %71, %409 ], [ %71, %83 ], [ %71, %392 ], [ %71, %405 ], [ %413, %411 ], [ %413, %418 ], [ %71, %424 ], [ %71, %485 ], [ %71, %492 ], [ %71, %528 ], [ %71, %541 ], [ %71, %544 ], [ %71, %548 ], [ %71, %553 ], [ %71, %576 ], [ %71, %578 ], [ %71, %583 ], [ %71, %674 ], [ %71, %678 ], [ %71, %427 ]
  %683 = phi i32 [ %69, %68 ], [ 0, %551 ], [ 0, %494 ], [ %69, %482 ], [ 0, %419 ], [ 0, %409 ], [ %69, %83 ], [ %69, %392 ], [ %69, %405 ], [ %69, %411 ], [ %69, %418 ], [ %69, %424 ], [ 0, %485 ], [ %493, %492 ], [ %69, %528 ], [ %69, %541 ], [ %69, %544 ], [ %69, %548 ], [ %69, %553 ], [ %69, %576 ], [ %69, %578 ], [ %69, %583 ], [ %69, %674 ], [ %69, %678 ], [ %69, %427 ]
  %684 = getelementptr inbounds %struct.fw_block, ptr %73, i32 0, i32 1
  %685 = load i32, ptr %684, align 1
  %686 = add i32 %685, 7
  %687 = and i32 %686, -8
  %688 = add i32 %687, %70
  %689 = load i32, ptr %46, align 4
  %690 = icmp ult i32 %688, %689
  br i1 %690, label %68, label %691

691:                                              ; preds = %681, %68, %58
  %692 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 23, i32 4
  %693 = load ptr, ptr %692, align 4
  %694 = icmp eq ptr %693, null
  br i1 %694, label %697, label %695

695:                                              ; preds = %691
  %696 = call i32 %693(ptr noundef %0) #24
  br label %697

697:                                              ; preds = %695, %691
  %698 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 43
  store i16 -1, ptr %698, align 2
  %699 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 23, i32 2
  %700 = getelementptr inbounds %struct.fw_header, ptr %52, i32 0, i32 1
  %701 = call i32 @strscpy(ptr noundef %699, ptr noundef %700, i32 noundef 32) #24
  %702 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %703 = load ptr, ptr %702, align 8
  %704 = getelementptr inbounds %struct.usb_interface, ptr %703, i32 0, i32 7
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %704, ptr noundef nonnull @.str.17, ptr noundef %699) #25
  br label %705

705:                                              ; preds = %697, %2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @rtl_phy_patch_request(ptr noundef %0, i1 noundef zeroext %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400)
  %5 = and i16 %4, -17
  %6 = select i1 %1, i16 16, i16 0
  %7 = or i16 %5, %6
  %8 = select i1 %1, i32 0, i32 64
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %7)
  br i1 %2, label %9, label %30

9:                                                ; preds = %9, %3
  %10 = phi i32 [ %15, %9 ], [ 0, %3 ]
  tail call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %11 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432)
  %12 = and i16 %11, 64
  %13 = zext i16 %12 to i32
  %14 = icmp eq i32 %8, %13
  %15 = add nuw nsw i32 %10, 1
  %16 = icmp ult i32 %10, 4999
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %9, label %18

18:                                               ; preds = %9
  %19 = and i1 %1, %2
  br i1 %19, label %20, label %30

20:                                               ; preds = %18
  %21 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18432)
  %22 = and i16 %21, 64
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds %struct.usb_interface, ptr %26, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %27, ptr noundef nonnull @.str.18) #25
  %28 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18400) #24
  %29 = and i16 %28, -17
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18400, i16 noundef zeroext %29) #24
  br label %30

30:                                               ; preds = %24, %20, %18, %3
  %31 = phi i32 [ -62, %24 ], [ 0, %18 ], [ 0, %20 ], [ 0, %3 ]
  ret i32 %31
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_patch_key_set(ptr noundef %0, i16 noundef zeroext %1, i16 noundef zeroext %2) unnamed_addr #0 {
  %4 = icmp ne i16 %2, 0
  %5 = icmp ne i16 %1, 0
  %6 = and i1 %5, %4
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %1) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext %2) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext -18386) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 1) #24
  br label %16

8:                                                ; preds = %3
  %9 = icmp eq i16 %1, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext 0) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 0) #24
  %11 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -18386)
  %12 = and i16 %11, -2
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -18386, i16 noundef zeroext %12)
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23498, i16 noundef zeroext %1) #24
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23496, i16 noundef zeroext 0) #24
  br label %16

13:                                               ; preds = %8
  %14 = load i1, ptr @rtl_patch_key_set.__already_done, align 1
  br i1 %14, label %16, label %15, !prof !24

15:                                               ; preds = %13
  store i1 true, ptr @rtl_patch_key_set.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 4074, i32 noundef 9, ptr noundef null) #24
  br label %16

16:                                               ; preds = %15, %13, %10, %7
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_u2p3en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19360, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 51) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = and i32 %6, 65534
  %8 = zext i1 %1 to i32
  %9 = or i32 %7, %8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %9, ptr %3, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %2
  %14 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19360, i16 noundef zeroext 51, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_queue_wake(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %9 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11380, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 256) #24
  %10 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %11 = and i32 %10, 254
  %12 = zext i1 %1 to i32
  %13 = or i32 %11, %12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 %13, ptr %7, align 4
  %14 = load volatile i32, ptr %0, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %2
  %18 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %19 = icmp eq ptr %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %24 = load i32, ptr %23, align 8
  %25 = call i32 @usb_control_msg(ptr noundef %22, i32 noundef %24, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11380, i16 noundef zeroext 273, ptr noundef nonnull %18, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %18) #24
  %26 = icmp eq i32 %25, -19
  br i1 %26, label %27, label %33

27:                                               ; preds = %20
  %28 = load ptr, ptr %21, align 4
  %29 = getelementptr inbounds %struct.usb_device, ptr %28, i32 0, i32 3
  %30 = load i32, ptr %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %33

33:                                               ; preds = %32, %27, %20, %17, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %34 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11384, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 256) #24
  %35 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %36 = and i32 %35, 16646144
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %36, ptr %5, align 4
  %37 = load volatile i32, ptr %0, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %56

40:                                               ; preds = %33
  %41 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %42 = icmp eq ptr %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %47 = load i32, ptr %46, align 8
  %48 = call i32 @usb_control_msg(ptr noundef %45, i32 noundef %47, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11384, i16 noundef zeroext 324, ptr noundef nonnull %41, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %41) #24
  %49 = icmp eq i32 %48, -19
  br i1 %49, label %50, label %56

50:                                               ; preds = %43
  %51 = load ptr, ptr %44, align 4
  %52 = getelementptr inbounds %struct.usb_device, ptr %51, i32 0, i32 3
  %53 = load i32, ptr %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %56

56:                                               ; preds = %55, %50, %43, %40, %33
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %57 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11368, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 307) #24
  %58 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %59 = and i32 %58, 65279
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %59, ptr %3, align 4
  %60 = load volatile i32, ptr %0, align 4
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %79

63:                                               ; preds = %56
  %64 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %65 = icmp eq ptr %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %68 = load ptr, ptr %67, align 4
  %69 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %70 = load i32, ptr %69, align 8
  %71 = call i32 @usb_control_msg(ptr noundef %68, i32 noundef %70, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11368, i16 noundef zeroext 307, ptr noundef nonnull %64, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %64) #24
  %72 = icmp eq i32 %71, -19
  br i1 %72, label %73, label %79

73:                                               ; preds = %66
  %74 = load ptr, ptr %67, align 4
  %75 = getelementptr inbounds %struct.usb_device, ptr %74, i32 0, i32 3
  %76 = load i32, ptr %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %79

79:                                               ; preds = %78, %73, %66, %63, %56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_power_cut_en(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %6 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10232, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 204) #24
  %7 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %8 = and i32 %7, -655360
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %8, ptr %4, align 4
  %9 = load volatile i32, ptr %0, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %1
  %13 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %14 = icmp eq ptr %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %19 = load i32, ptr %18, align 8
  %20 = call i32 @usb_control_msg(ptr noundef %17, i32 noundef %19, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10232, i16 noundef zeroext 204, ptr noundef nonnull %13, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %13) #24
  %21 = icmp eq i32 %20, -19
  br i1 %21, label %22, label %28

22:                                               ; preds = %15
  %23 = load ptr, ptr %16, align 4
  %24 = getelementptr inbounds %struct.usb_device, ptr %23, i32 0, i32 3
  %25 = load i32, ptr %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %28

28:                                               ; preds = %27, %22, %15, %12, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %29 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %30 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %31 = and i32 %30, -131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %31, ptr %2, align 4
  %32 = load volatile i32, ptr %0, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %28
  %36 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %37 = icmp eq ptr %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %42 = load i32, ptr %41, align 8
  %43 = call i32 @usb_control_msg(ptr noundef %40, i32 noundef %42, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10216, i16 noundef zeroext 204, ptr noundef nonnull %36, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %36) #24
  %44 = icmp eq i32 %43, -19
  br i1 %44, label %45, label %51

45:                                               ; preds = %38
  %46 = load ptr, ptr %39, align 4
  %47 = getelementptr inbounds %struct.usb_device, ptr %46, i32 0, i32 3
  %48 = load i32, ptr %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %51

51:                                               ; preds = %50, %45, %38, %35, %28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_mac_clk_speed_down(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7992, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %6 = load i32, ptr %4, align 4
  %7 = lshr i32 %6, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %8 = or i32 %7, 32768
  %9 = and i32 %7, 32767
  %10 = select i1 %1, i32 %8, i32 %9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %11 = shl nuw i32 %10, 16
  store i32 %11, ptr %3, align 4
  %12 = load volatile i32, ptr %0, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %2
  %16 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %22 = load i32, ptr %21, align 8
  %23 = call i32 @usb_control_msg(ptr noundef %20, i32 noundef %22, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7992, i16 noundef zeroext 460, ptr noundef nonnull %16, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %16) #24
  %24 = icmp eq i32 %23, -19
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load ptr, ptr %19, align 4
  %27 = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 3
  %28 = load i32, ptr %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %31

31:                                               ; preds = %30, %25, %18, %15, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_enable_lpm(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_set_rx_early_timeout(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 30
  %9 = load i32, ptr %8, align 4
  %10 = lshr i32 %9, 3
  %11 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %12 = load i8, ptr %11, align 8
  switch i8 %12, label %139 [
    i8 3, label %13
    i8 4, label %13
    i8 5, label %13
    i8 6, label %13
    i8 8, label %35
    i8 9, label %35
    i8 15, label %35
    i8 11, label %77
    i8 12, label %77
    i8 13, label %77
    i8 14, label %77
    i8 16, label %77
  ]

13:                                               ; preds = %1, %1, %1, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  %14 = and i32 %10, 65535
  store i32 %14, ptr %7, align 4
  %15 = load volatile i32, ptr %0, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %13
  %19 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %20 = icmp eq ptr %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %25 = load i32, ptr %24, align 8
  %26 = call i32 @usb_control_msg(ptr noundef %23, i32 noundef %25, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11220, i16 noundef zeroext 51, ptr noundef nonnull %19, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %19) #24
  %27 = icmp eq i32 %26, -19
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  %29 = load ptr, ptr %22, align 4
  %30 = getelementptr inbounds %struct.usb_device, ptr %29, i32 0, i32 3
  %31 = load i32, ptr %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %34

34:                                               ; preds = %33, %28, %21, %18, %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  br label %139

35:                                               ; preds = %1, %1, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 16, ptr %6, align 4
  %36 = load volatile i32, ptr %0, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %41 = icmp eq ptr %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %46 = load i32, ptr %45, align 8
  %47 = call i32 @usb_control_msg(ptr noundef %44, i32 noundef %46, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11220, i16 noundef zeroext 51, ptr noundef nonnull %40, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %40) #24
  %48 = icmp eq i32 %47, -19
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = load ptr, ptr %43, align 4
  %51 = getelementptr inbounds %struct.usb_device, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %55

55:                                               ; preds = %54, %49, %42, %39, %35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  %56 = shl i32 %10, 16
  store i32 %56, ptr %5, align 4
  %57 = load volatile i32, ptr %0, align 4
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %76

60:                                               ; preds = %55
  %61 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %62 = icmp eq ptr %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %65 = load ptr, ptr %64, align 4
  %66 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %67 = load i32, ptr %66, align 8
  %68 = call i32 @usb_control_msg(ptr noundef %65, i32 noundef %67, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11216, i16 noundef zeroext 204, ptr noundef nonnull %61, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %61) #24
  %69 = icmp eq i32 %68, -19
  br i1 %69, label %70, label %76

70:                                               ; preds = %63
  %71 = load ptr, ptr %64, align 4
  %72 = getelementptr inbounds %struct.usb_device, ptr %71, i32 0, i32 3
  %73 = load i32, ptr %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %76

76:                                               ; preds = %75, %70, %63, %60, %55
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  br label %139

77:                                               ; preds = %1, %1, %1, %1, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 80, ptr %4, align 4
  %78 = load volatile i32, ptr %0, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %97

81:                                               ; preds = %77
  %82 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %83 = icmp eq ptr %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %86 = load ptr, ptr %85, align 4
  %87 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %88 = load i32, ptr %87, align 8
  %89 = call i32 @usb_control_msg(ptr noundef %86, i32 noundef %88, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11220, i16 noundef zeroext 51, ptr noundef nonnull %82, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %82) #24
  %90 = icmp eq i32 %89, -19
  br i1 %90, label %91, label %97

91:                                               ; preds = %84
  %92 = load ptr, ptr %85, align 4
  %93 = getelementptr inbounds %struct.usb_device, ptr %92, i32 0, i32 3
  %94 = load i32, ptr %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %97

97:                                               ; preds = %96, %91, %84, %81, %77
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %98 = shl i32 %10, 16
  store i32 %98, ptr %3, align 4
  %99 = load volatile i32, ptr %0, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %118

102:                                              ; preds = %97
  %103 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %104 = icmp eq ptr %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %107 = load ptr, ptr %106, align 4
  %108 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %109 = load i32, ptr %108, align 8
  %110 = call i32 @usb_control_msg(ptr noundef %107, i32 noundef %109, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11216, i16 noundef zeroext 204, ptr noundef nonnull %103, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %103) #24
  %111 = icmp eq i32 %110, -19
  br i1 %111, label %112, label %118

112:                                              ; preds = %105
  %113 = load ptr, ptr %106, align 4
  %114 = getelementptr inbounds %struct.usb_device, ptr %113, i32 0, i32 3
  %115 = load i32, ptr %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %112
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %118

118:                                              ; preds = %117, %112, %105, %102, %97
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 50331648, ptr %2, align 4
  %119 = load volatile i32, ptr %0, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %118
  %123 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %124 = icmp eq ptr %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %127 = load ptr, ptr %126, align 4
  %128 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %129 = load i32, ptr %128, align 8
  %130 = call i32 @usb_control_msg(ptr noundef %127, i32 noundef %129, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11212, i16 noundef zeroext 136, ptr noundef nonnull %123, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %123) #24
  %131 = icmp eq i32 %130, -19
  br i1 %131, label %132, label %138

132:                                              ; preds = %125
  %133 = load ptr, ptr %126, align 4
  %134 = getelementptr inbounds %struct.usb_device, ptr %133, i32 0, i32 3
  %135 = load i32, ptr %134, align 8
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %138

138:                                              ; preds = %137, %132, %125, %122, %118
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  br label %139

139:                                              ; preds = %138, %76, %34, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_set_rx_early_size(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 32
  %7 = load i32, ptr %6, align 4
  %8 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 20
  %11 = load i32, ptr %10, align 4
  %12 = add i32 %7, -54
  %13 = sub i32 %12, %11
  %14 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %15 = load i8, ptr %14, align 8
  switch i8 %15, label %105 [
    i8 3, label %16
    i8 4, label %16
    i8 5, label %16
    i8 6, label %16
    i8 8, label %39
    i8 9, label %39
    i8 15, label %39
    i8 10, label %62
    i8 11, label %62
    i8 12, label %62
    i8 13, label %62
    i8 14, label %62
    i8 16, label %62
  ]

16:                                               ; preds = %1, %1, %1, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  %17 = shl i32 %13, 14
  %18 = and i32 %17, -65536
  store i32 %18, ptr %5, align 4
  %19 = load volatile i32, ptr %0, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %16
  %23 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %24 = icmp eq ptr %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %29 = load i32, ptr %28, align 8
  %30 = call i32 @usb_control_msg(ptr noundef %27, i32 noundef %29, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11220, i16 noundef zeroext 204, ptr noundef nonnull %23, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %23) #24
  %31 = icmp eq i32 %30, -19
  br i1 %31, label %32, label %38

32:                                               ; preds = %25
  %33 = load ptr, ptr %26, align 4
  %34 = getelementptr inbounds %struct.usb_device, ptr %33, i32 0, i32 3
  %35 = load i32, ptr %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %38

38:                                               ; preds = %37, %32, %25, %22, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  br label %108

39:                                               ; preds = %1, %1, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  %40 = shl i32 %13, 13
  %41 = and i32 %40, -65536
  store i32 %41, ptr %4, align 4
  %42 = load volatile i32, ptr %0, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %39
  %46 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %47 = icmp eq ptr %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %50 = load ptr, ptr %49, align 4
  %51 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %52 = load i32, ptr %51, align 8
  %53 = call i32 @usb_control_msg(ptr noundef %50, i32 noundef %52, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11220, i16 noundef zeroext 204, ptr noundef nonnull %46, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %46) #24
  %54 = icmp eq i32 %53, -19
  br i1 %54, label %55, label %61

55:                                               ; preds = %48
  %56 = load ptr, ptr %49, align 4
  %57 = getelementptr inbounds %struct.usb_device, ptr %56, i32 0, i32 3
  %58 = load i32, ptr %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %61

61:                                               ; preds = %60, %55, %48, %45, %39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %108

62:                                               ; preds = %1, %1, %1, %1, %1, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  %63 = shl i32 %13, 13
  %64 = and i32 %63, -65536
  store i32 %64, ptr %3, align 4
  %65 = load volatile i32, ptr %0, align 4
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %84

68:                                               ; preds = %62
  %69 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %70 = icmp eq ptr %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %73 = load ptr, ptr %72, align 4
  %74 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %75 = load i32, ptr %74, align 8
  %76 = call i32 @usb_control_msg(ptr noundef %73, i32 noundef %75, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11220, i16 noundef zeroext 204, ptr noundef nonnull %69, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %69) #24
  %77 = icmp eq i32 %76, -19
  br i1 %77, label %78, label %84

78:                                               ; preds = %71
  %79 = load ptr, ptr %72, align 4
  %80 = getelementptr inbounds %struct.usb_device, ptr %79, i32 0, i32 3
  %81 = load i32, ptr %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %78
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %84

84:                                               ; preds = %83, %78, %71, %68, %62
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 50331648, ptr %2, align 4
  %85 = load volatile i32, ptr %0, align 4
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %104

88:                                               ; preds = %84
  %89 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %90 = icmp eq ptr %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %93 = load ptr, ptr %92, align 4
  %94 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %95 = load i32, ptr %94, align 8
  %96 = call i32 @usb_control_msg(ptr noundef %93, i32 noundef %95, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11212, i16 noundef zeroext 136, ptr noundef nonnull %89, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %89) #24
  %97 = icmp eq i32 %96, -19
  br i1 %97, label %98, label %104

98:                                               ; preds = %91
  %99 = load ptr, ptr %92, align 4
  %100 = getelementptr inbounds %struct.usb_device, ptr %99, i32 0, i32 3
  %101 = load i32, ptr %100, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %98
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %104

104:                                              ; preds = %103, %98, %91, %88, %84
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  br label %108

105:                                              ; preds = %1
  %106 = load i1, ptr @r8153_set_rx_early_size.__already_done, align 1
  br i1 %106, label %108, label %107, !prof !24

107:                                              ; preds = %105
  store i1 true, ptr @r8153_set_rx_early_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 3112, i32 noundef 9, ptr noundef null) #24
  br label %108

108:                                              ; preds = %107, %105, %104, %61, %38
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_set_ifg(ptr noundef %0, i16 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %10 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6640, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 460) #24
  %11 = load i32, ptr %9, align 4
  %12 = lshr i32 %11, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %13 = and i32 %12, 64759
  %14 = zext i16 %1 to i32
  %15 = and i32 %14, 12
  %16 = icmp ne i32 %15, 0
  %17 = and i32 %14, 1
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %66

20:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  %21 = shl nuw i32 %13, 16
  %22 = or i32 %21, 33554432
  store i32 %22, ptr %8, align 4
  %23 = load volatile i32, ptr %0, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %42

26:                                               ; preds = %20
  %27 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %28 = icmp eq ptr %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %33 = load i32, ptr %32, align 8
  %34 = call i32 @usb_control_msg(ptr noundef %31, i32 noundef %33, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6640, i16 noundef zeroext 460, ptr noundef nonnull %27, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %27) #24
  %35 = icmp eq i32 %34, -19
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = load ptr, ptr %30, align 4
  %38 = getelementptr inbounds %struct.usb_device, ptr %37, i32 0, i32 3
  %39 = load i32, ptr %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %42

42:                                               ; preds = %41, %36, %29, %26, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %43 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 460) #24
  %44 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %45 = and i32 %44, -16842752
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %45, ptr %6, align 4
  %46 = load volatile i32, ptr %0, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %42
  %50 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %56 = load i32, ptr %55, align 8
  %57 = call i32 @usb_control_msg(ptr noundef %54, i32 noundef %56, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 460, ptr noundef nonnull %50, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %50) #24
  %58 = icmp eq i32 %57, -19
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = load ptr, ptr %53, align 4
  %61 = getelementptr inbounds %struct.usb_device, ptr %60, i32 0, i32 3
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %65

65:                                               ; preds = %64, %59, %52, %49, %42
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  br label %113

66:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  %67 = shl nuw i32 %13, 16
  %68 = or i32 %67, 50331648
  store i32 %68, ptr %5, align 4
  %69 = load volatile i32, ptr %0, align 4
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %88

72:                                               ; preds = %66
  %73 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %74 = icmp eq ptr %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %77 = load ptr, ptr %76, align 4
  %78 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %79 = load i32, ptr %78, align 8
  %80 = call i32 @usb_control_msg(ptr noundef %77, i32 noundef %79, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6640, i16 noundef zeroext 460, ptr noundef nonnull %73, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %73) #24
  %81 = icmp eq i32 %80, -19
  br i1 %81, label %82, label %88

82:                                               ; preds = %75
  %83 = load ptr, ptr %76, align 4
  %84 = getelementptr inbounds %struct.usb_device, ptr %83, i32 0, i32 3
  %85 = load i32, ptr %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %88

88:                                               ; preds = %87, %82, %75, %72, %66
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %89 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7988, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %90 = load i32, ptr %4, align 4
  %91 = and i32 %90, -16842752
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %92 = or i32 %91, 16777216
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %92, ptr %3, align 4
  %93 = load volatile i32, ptr %0, align 4
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %112

96:                                               ; preds = %88
  %97 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %98 = icmp eq ptr %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %101 = load ptr, ptr %100, align 4
  %102 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %103 = load i32, ptr %102, align 8
  %104 = call i32 @usb_control_msg(ptr noundef %101, i32 noundef %103, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7988, i16 noundef zeroext 460, ptr noundef nonnull %97, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %97) #24
  %105 = icmp eq i32 %104, -19
  br i1 %105, label %106, label %112

106:                                              ; preds = %99
  %107 = load ptr, ptr %100, align 4
  %108 = getelementptr inbounds %struct.usb_device, ptr %107, i32 0, i32 3
  %109 = load i32, ptr %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %106
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %112

112:                                              ; preds = %111, %106, %99, %96, %88
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %113

113:                                              ; preds = %112, %65
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_reset_bmu(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11088, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 0) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = and i32 %6, 252
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %7, ptr %3, align 4
  %8 = load volatile i32, ptr %0, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %1
  %12 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %13 = icmp eq ptr %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %18 = load i32, ptr %17, align 8
  %19 = call i32 @usb_control_msg(ptr noundef %16, i32 noundef %18, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11088, i16 noundef zeroext 17, ptr noundef nonnull %12, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %12) #24
  %20 = icmp eq i32 %19, -19
  br i1 %20, label %21, label %27

21:                                               ; preds = %14
  %22 = load ptr, ptr %15, align 4
  %23 = getelementptr inbounds %struct.usb_device, ptr %22, i32 0, i32 3
  %24 = load i32, ptr %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %27

27:                                               ; preds = %26, %21, %14, %11, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %28 = or i32 %7, 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %28, ptr %2, align 4
  %29 = load volatile i32, ptr %0, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %27
  %33 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %34 = icmp eq ptr %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %39 = load i32, ptr %38, align 8
  %40 = call i32 @usb_control_msg(ptr noundef %37, i32 noundef %39, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11088, i16 noundef zeroext 17, ptr noundef nonnull %33, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %33) #24
  %41 = icmp eq i32 %40, -19
  br i1 %41, label %42, label %48

42:                                               ; preds = %35
  %43 = load ptr, ptr %36, align 4
  %44 = getelementptr inbounds %struct.usb_device, ptr %43, i32 0, i32 3
  %45 = load i32, ptr %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %48

48:                                               ; preds = %47, %42, %35, %32, %27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_first_init(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  tail call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext true)
  tail call fastcc void @r8153_teredo_off(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 0, ptr %17, align 4, !annotation !8
  %18 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %17, i16 noundef zeroext 256) #24
  %19 = load i32, ptr %17, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  %20 = and i32 %19, -16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 %20, ptr %16, align 4
  %21 = load volatile i32, ptr %0, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %1
  %25 = call ptr @kmemdup(ptr noundef nonnull %16, i32 noundef 4, i32 noundef 3264) #24
  %26 = icmp eq ptr %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %31 = load i32, ptr %30, align 8
  %32 = call i32 @usb_control_msg(ptr noundef %29, i32 noundef %31, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %25, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %25) #24
  %33 = icmp eq i32 %32, -19
  br i1 %33, label %34, label %40

34:                                               ; preds = %27
  %35 = load ptr, ptr %28, align 4
  %36 = getelementptr inbounds %struct.usb_device, ptr %35, i32 0, i32 3
  %37 = load i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %40

40:                                               ; preds = %39, %34, %27, %24, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  call fastcc void @rtl8152_nic_reset(ptr noundef %0)
  call fastcc void @rtl_reset_bmu(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4, !annotation !8
  %41 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext 256) #24
  %42 = load i32, ptr %15, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  %43 = and i32 %42, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 %43, ptr %14, align 4
  %44 = load volatile i32, ptr %0, align 4
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %63

47:                                               ; preds = %40
  %48 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %49 = icmp eq ptr %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %52 = load ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %54 = load i32, ptr %53, align 8
  %55 = call i32 @usb_control_msg(ptr noundef %52, i32 noundef %54, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %48, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %48) #24
  %56 = icmp eq i32 %55, -19
  br i1 %56, label %57, label %63

57:                                               ; preds = %50
  %58 = load ptr, ptr %51, align 4
  %59 = getelementptr inbounds %struct.usb_device, ptr %58, i32 0, i32 3
  %60 = load i32, ptr %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %57
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %63

63:                                               ; preds = %62, %57, %50, %47, %40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %64 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 460) #24
  %65 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %66 = and i32 %65, -1073807360
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 %66, ptr %12, align 4
  %67 = load volatile i32, ptr %0, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %86

70:                                               ; preds = %63
  %71 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %72 = icmp eq ptr %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %77 = load i32, ptr %76, align 8
  %78 = call i32 @usb_control_msg(ptr noundef %75, i32 noundef %77, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %71, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %71) #24
  %79 = icmp eq i32 %78, -19
  br i1 %79, label %80, label %86

80:                                               ; preds = %73
  %81 = load ptr, ptr %74, align 4
  %82 = getelementptr inbounds %struct.usb_device, ptr %81, i32 0, i32 3
  %83 = load i32, ptr %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %86

86:                                               ; preds = %85, %80, %73, %70, %63
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  br label %87

87:                                               ; preds = %93, %86
  %88 = phi i32 [ 0, %86 ], [ %94, %93 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %89 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 256) #24
  %90 = load i32, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %91 = and i32 %90, 33554432
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %87
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %94 = add nuw nsw i32 %88, 1
  %95 = icmp eq i32 %94, 1000
  br i1 %95, label %96, label %87

96:                                               ; preds = %93, %87
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %97 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 460) #24
  %98 = load i32, ptr %10, align 4
  %99 = and i32 %98, 2147418112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %100 = or i32 %99, -2147483648
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 %100, ptr %9, align 4
  %101 = load volatile i32, ptr %0, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %120

104:                                              ; preds = %96
  %105 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %106 = icmp eq ptr %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %109 = load ptr, ptr %108, align 4
  %110 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %111 = load i32, ptr %110, align 8
  %112 = call i32 @usb_control_msg(ptr noundef %109, i32 noundef %111, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %105, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %105) #24
  %113 = icmp eq i32 %112, -19
  br i1 %113, label %114, label %120

114:                                              ; preds = %107
  %115 = load ptr, ptr %108, align 4
  %116 = getelementptr inbounds %struct.usb_device, ptr %115, i32 0, i32 3
  %117 = load i32, ptr %116, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %114
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %120

120:                                              ; preds = %119, %114, %107, %104, %96
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  br label %121

121:                                              ; preds = %127, %120
  %122 = phi i32 [ 0, %120 ], [ %128, %127 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %123 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 256) #24
  %124 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %125 = and i32 %124, 33554432
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %128 = add nuw nsw i32 %122, 1
  %129 = icmp eq i32 %128, 1000
  br i1 %129, label %130, label %121

130:                                              ; preds = %127, %121
  %131 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %132 = load ptr, ptr %131, align 4
  %133 = getelementptr inbounds %struct.net_device, ptr %132, i32 0, i32 23
  %134 = load i64, ptr %133, align 16
  %135 = and i64 %134, 256
  %136 = icmp ne i64 %135, 0
  call fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext %136)
  call void @rtl8153_change_mtu(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %137 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6640, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %138 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %139 = and i32 %138, 65407
  %140 = or i32 %139, 128
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %140, ptr %6, align 4
  %141 = load volatile i32, ptr %0, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %160

144:                                              ; preds = %130
  %145 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %146 = icmp eq ptr %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %149 = load ptr, ptr %148, align 4
  %150 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %151 = load i32, ptr %150, align 8
  %152 = call i32 @usb_control_msg(ptr noundef %149, i32 noundef %151, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6640, i16 noundef zeroext 307, ptr noundef nonnull %145, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %145) #24
  %153 = icmp eq i32 %152, -19
  br i1 %153, label %154, label %160

154:                                              ; preds = %147
  %155 = load ptr, ptr %148, align 4
  %156 = getelementptr inbounds %struct.usb_device, ptr %155, i32 0, i32 3
  %157 = load i32, ptr %156, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %154
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %160

160:                                              ; preds = %159, %154, %147, %144, %130
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call fastcc void @rtl8152_nic_reset(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 524290, ptr %5, align 4
  %161 = load volatile i32, ptr %0, align 4
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %180

164:                                              ; preds = %160
  %165 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %166 = icmp eq ptr %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %169 = load ptr, ptr %168, align 4
  %170 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %171 = load i32, ptr %170, align 8
  %172 = call i32 @usb_control_msg(ptr noundef %169, i32 noundef %171, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16224, i16 noundef zeroext 511, ptr noundef nonnull %165, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %165) #24
  %173 = icmp eq i32 %172, -19
  br i1 %173, label %174, label %180

174:                                              ; preds = %167
  %175 = load ptr, ptr %168, align 4
  %176 = getelementptr inbounds %struct.usb_device, ptr %175, i32 0, i32 3
  %177 = load i32, ptr %176, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %174
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %180

180:                                              ; preds = %179, %174, %167, %164, %160
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 160, ptr %4, align 4
  %181 = load volatile i32, ptr %0, align 4
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %200

184:                                              ; preds = %180
  %185 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %186 = icmp eq ptr %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %189 = load ptr, ptr %188, align 4
  %190 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %191 = load i32, ptr %190, align 8
  %192 = call i32 @usb_control_msg(ptr noundef %189, i32 noundef %191, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16220, i16 noundef zeroext 307, ptr noundef nonnull %185, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %185) #24
  %193 = icmp eq i32 %192, -19
  br i1 %193, label %194, label %200

194:                                              ; preds = %187
  %195 = load ptr, ptr %188, align 4
  %196 = getelementptr inbounds %struct.usb_device, ptr %195, i32 0, i32 3
  %197 = load i32, ptr %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %194
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %200

200:                                              ; preds = %199, %194, %187, %184, %180
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 272, ptr %3, align 4
  %201 = load volatile i32, ptr %0, align 4
  %202 = and i32 %201, 1
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %220

204:                                              ; preds = %200
  %205 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %206 = icmp eq ptr %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %209 = load ptr, ptr %208, align 4
  %210 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %211 = load i32, ptr %210, align 8
  %212 = call i32 @usb_control_msg(ptr noundef %209, i32 noundef %211, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16216, i16 noundef zeroext 307, ptr noundef nonnull %205, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %205) #24
  %213 = icmp eq i32 %212, -19
  br i1 %213, label %214, label %220

214:                                              ; preds = %207
  %215 = load ptr, ptr %208, align 4
  %216 = getelementptr inbounds %struct.usb_device, ptr %215, i32 0, i32 3
  %217 = load i32, ptr %216, align 8
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %214
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %220

220:                                              ; preds = %219, %214, %207, %204, %200
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 16777224, ptr %2, align 4
  %221 = load volatile i32, ptr %0, align 4
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %240

224:                                              ; preds = %220
  %225 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %226 = icmp eq ptr %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %229 = load ptr, ptr %228, align 4
  %230 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %231 = load i32, ptr %230, align 8
  %232 = call i32 @usb_control_msg(ptr noundef %229, i32 noundef %231, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6632, i16 noundef zeroext 511, ptr noundef nonnull %225, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %225) #24
  %233 = icmp eq i32 %232, -19
  br i1 %233, label %234, label %240

234:                                              ; preds = %227
  %235 = load ptr, ptr %228, align 4
  %236 = getelementptr inbounds %struct.usb_device, ptr %235, i32 0, i32 3
  %237 = load i32, ptr %236, align 8
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %234
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %240

240:                                              ; preds = %239, %234, %227, %224, %220
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153_enter_oob(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #24
  store i32 0, ptr %17, align 4, !annotation !8
  %18 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %17, i16 noundef zeroext 256) #24
  %19 = load i32, ptr %17, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #24
  %20 = and i32 %19, 2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #24
  store i32 %20, ptr %16, align 4
  %21 = load volatile i32, ptr %0, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %1
  %25 = call ptr @kmemdup(ptr noundef nonnull %16, i32 noundef 4, i32 noundef 3264) #24
  %26 = icmp eq ptr %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %31 = load i32, ptr %30, align 8
  %32 = call i32 @usb_control_msg(ptr noundef %29, i32 noundef %31, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %25, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %25) #24
  %33 = icmp eq i32 %32, -19
  br i1 %33, label %34, label %40

34:                                               ; preds = %27
  %35 = load ptr, ptr %28, align 4
  %36 = getelementptr inbounds %struct.usb_device, ptr %35, i32 0, i32 3
  %37 = load i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %40

40:                                               ; preds = %39, %34, %27, %24, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #24
  call fastcc void @rtl_disable(ptr noundef %0)
  call fastcc void @rtl_reset_bmu(ptr noundef %0)
  br label %41

41:                                               ; preds = %47, %40
  %42 = phi i32 [ 0, %40 ], [ %48, %47 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4, !annotation !8
  %43 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext 256) #24
  %44 = load i32, ptr %15, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  %45 = and i32 %44, 33554432
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %48 = add nuw nsw i32 %42, 1
  %49 = icmp eq i32 %48, 1000
  br i1 %49, label %50, label %41

50:                                               ; preds = %47, %41
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 0, ptr %14, align 4, !annotation !8
  %51 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5924, i16 noundef zeroext 4, ptr noundef nonnull %14, i16 noundef zeroext 460) #24
  %52 = load i32, ptr %14, align 4
  %53 = and i32 %52, 2147418112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  %54 = or i32 %53, -2147483648
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 %54, ptr %13, align 4
  %55 = load volatile i32, ptr %0, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %74

58:                                               ; preds = %50
  %59 = call ptr @kmemdup(ptr noundef nonnull %13, i32 noundef 4, i32 noundef 3264) #24
  %60 = icmp eq ptr %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %63 = load ptr, ptr %62, align 4
  %64 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %65 = load i32, ptr %64, align 8
  %66 = call i32 @usb_control_msg(ptr noundef %63, i32 noundef %65, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -5924, i16 noundef zeroext 460, ptr noundef nonnull %59, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %59) #24
  %67 = icmp eq i32 %66, -19
  br i1 %67, label %68, label %74

68:                                               ; preds = %61
  %69 = load ptr, ptr %62, align 4
  %70 = getelementptr inbounds %struct.usb_device, ptr %69, i32 0, i32 3
  %71 = load i32, ptr %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %74

74:                                               ; preds = %73, %68, %61, %58, %50
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  br label %75

75:                                               ; preds = %81, %74
  %76 = phi i32 [ 0, %74 ], [ %82, %81 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 0, ptr %12, align 4, !annotation !8
  %77 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %12, i16 noundef zeroext 256) #24
  %78 = load i32, ptr %12, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  %79 = and i32 %78, 33554432
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %75
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %82 = add nuw nsw i32 %76, 1
  %83 = icmp eq i32 %82, 1000
  br i1 %83, label %84, label %75

84:                                               ; preds = %81, %75
  %85 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %86 = load ptr, ptr %85, align 4
  %87 = getelementptr inbounds %struct.net_device, ptr %86, i32 0, i32 20
  %88 = load i32, ptr %87, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  %89 = shl i32 %88, 16
  %90 = add i32 %89, 1441792
  store i32 %90, ptr %11, align 4
  %91 = load volatile i32, ptr %0, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %110

94:                                               ; preds = %84
  %95 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %96 = icmp eq ptr %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %99 = load ptr, ptr %98, align 4
  %100 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %101 = load i32, ptr %100, align 8
  %102 = call i32 @usb_control_msg(ptr noundef %99, i32 noundef %101, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16364, i16 noundef zeroext 460, ptr noundef nonnull %95, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %95) #24
  %103 = icmp eq i32 %102, -19
  br i1 %103, label %104, label %110

104:                                              ; preds = %97
  %105 = load ptr, ptr %98, align 4
  %106 = getelementptr inbounds %struct.usb_device, ptr %105, i32 0, i32 3
  %107 = load i32, ptr %106, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %104
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %110

110:                                              ; preds = %109, %104, %97, %94, %84
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  %111 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %112 = load i8, ptr %111, align 8
  switch i8 %112, label %158 [
    i8 3, label %113
    i8 4, label %113
    i8 5, label %113
    i8 6, label %113
    i8 8, label %137
    i8 9, label %137
    i8 15, label %137
  ]

113:                                              ; preds = %110, %110, %110, %110
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %114 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16196, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 307) #24
  %115 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %116 = and i32 %115, 33023
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 %116, ptr %9, align 4
  %117 = load volatile i32, ptr %0, align 4
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %136

120:                                              ; preds = %113
  %121 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %122 = icmp eq ptr %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %125 = load ptr, ptr %124, align 4
  %126 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %127 = load i32, ptr %126, align 8
  %128 = call i32 @usb_control_msg(ptr noundef %125, i32 noundef %127, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16196, i16 noundef zeroext 307, ptr noundef nonnull %121, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %121) #24
  %129 = icmp eq i32 %128, -19
  br i1 %129, label %130, label %136

130:                                              ; preds = %123
  %131 = load ptr, ptr %124, align 4
  %132 = getelementptr inbounds %struct.usb_device, ptr %131, i32 0, i32 3
  %133 = load i32, ptr %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %136

136:                                              ; preds = %135, %130, %123, %120, %113
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  br label %158

137:                                              ; preds = %110, %110, %110
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 255, ptr %8, align 4
  %138 = load volatile i32, ptr %0, align 4
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %157

141:                                              ; preds = %137
  %142 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %143 = icmp eq ptr %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %146 = load ptr, ptr %145, align 4
  %147 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %148 = load i32, ptr %147, align 8
  %149 = call i32 @usb_control_msg(ptr noundef %146, i32 noundef %148, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16188, i16 noundef zeroext 307, ptr noundef nonnull %142, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %142) #24
  %150 = icmp eq i32 %149, -19
  br i1 %150, label %151, label %157

151:                                              ; preds = %144
  %152 = load ptr, ptr %145, align 4
  %153 = getelementptr inbounds %struct.usb_device, ptr %152, i32 0, i32 3
  %154 = load i32, ptr %153, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %151
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %157

157:                                              ; preds = %156, %151, %144, %141, %137
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  br label %158

158:                                              ; preds = %157, %136, %110
  call fastcc void @rtl_rx_vlan_en(ptr noundef %0, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %159 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11872, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %160 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %161 = and i32 %160, 65534
  %162 = or i32 %161, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %162, ptr %6, align 4
  %163 = load volatile i32, ptr %0, align 4
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %182

166:                                              ; preds = %158
  %167 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %168 = icmp eq ptr %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %171 = load ptr, ptr %170, align 4
  %172 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %173 = load i32, ptr %172, align 8
  %174 = call i32 @usb_control_msg(ptr noundef %171, i32 noundef %173, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11872, i16 noundef zeroext 307, ptr noundef nonnull %167, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %167) #24
  %175 = icmp eq i32 %174, -19
  br i1 %175, label %176, label %182

176:                                              ; preds = %169
  %177 = load ptr, ptr %170, align 4
  %178 = getelementptr inbounds %struct.usb_device, ptr %177, i32 0, i32 3
  %179 = load i32, ptr %178, align 8
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %176
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %182

182:                                              ; preds = %181, %176, %169, %166, %158
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %183 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6068, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  %184 = load i32, ptr %5, align 4
  %185 = and i32 %184, 2113929216
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %186 = or i32 %185, -2130706432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %186, ptr %4, align 4
  %187 = load volatile i32, ptr %0, align 4
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %206

190:                                              ; preds = %182
  %191 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %192 = icmp eq ptr %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %195 = load ptr, ptr %194, align 4
  %196 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %197 = load i32, ptr %196, align 8
  %198 = call i32 @usb_control_msg(ptr noundef %195, i32 noundef %197, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6068, i16 noundef zeroext 392, ptr noundef nonnull %191, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %191) #24
  %199 = icmp eq i32 %198, -19
  br i1 %199, label %200, label %206

200:                                              ; preds = %193
  %201 = load ptr, ptr %194, align 4
  %202 = getelementptr inbounds %struct.usb_device, ptr %201, i32 0, i32 3
  %203 = load i32, ptr %202, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %200
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %206

206:                                              ; preds = %205, %200, %193, %190, %182
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call fastcc void @rxdy_gated_en(ptr noundef %0, i1 noundef zeroext false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %207 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 256) #24
  %208 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %209 = or i32 %208, 14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %209, ptr %2, align 4
  %210 = load volatile i32, ptr %0, align 4
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %229

213:                                              ; preds = %206
  %214 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %215 = icmp eq ptr %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %218 = load ptr, ptr %217, align 4
  %219 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %220 = load i32, ptr %219, align 8
  %221 = call i32 @usb_control_msg(ptr noundef %218, i32 noundef %220, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %214, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %214) #24
  %222 = icmp eq i32 %221, -19
  br i1 %222, label %223, label %229

223:                                              ; preds = %216
  %224 = load ptr, ptr %217, align 4
  %225 = getelementptr inbounds %struct.usb_device, ptr %224, i32 0, i32 3
  %226 = load i32, ptr %225, align 8
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %223
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %229

229:                                              ; preds = %228, %223, %216, %213, %206
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153b_u1u2en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12328, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 51) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = and i32 %6, 65534
  %8 = zext i1 %1 to i32
  %9 = or i32 %7, %8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %9, ptr %3, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %2
  %14 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12328, i16 noundef zeroext 51, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153b_power_cut_en(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %6 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10232, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 204) #24
  %7 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %8 = and i32 %7, -131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %8, ptr %4, align 4
  %9 = load volatile i32, ptr %0, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %1
  %13 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %14 = icmp eq ptr %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %19 = load i32, ptr %18, align 8
  %20 = call i32 @usb_control_msg(ptr noundef %17, i32 noundef %19, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10232, i16 noundef zeroext 204, ptr noundef nonnull %13, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %13) #24
  %21 = icmp eq i32 %20, -19
  br i1 %21, label %22, label %28

22:                                               ; preds = %15
  %23 = load ptr, ptr %16, align 4
  %24 = getelementptr inbounds %struct.usb_device, ptr %23, i32 0, i32 3
  %25 = load i32, ptr %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %28

28:                                               ; preds = %27, %22, %15, %12, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %29 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %30 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %31 = and i32 %30, -131072
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %31, ptr %2, align 4
  %32 = load volatile i32, ptr %0, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %28
  %36 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %37 = icmp eq ptr %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %42 = load i32, ptr %41, align 8
  %43 = call i32 @usb_control_msg(ptr noundef %40, i32 noundef %42, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10216, i16 noundef zeroext 204, ptr noundef nonnull %36, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %36) #24
  %44 = icmp eq i32 %43, -19
  br i1 %44, label %45, label %51

45:                                               ; preds = %38
  %46 = load ptr, ptr %39, align 4
  %47 = getelementptr inbounds %struct.usb_device, ptr %46, i32 0, i32 3
  %48 = load i32, ptr %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %51

51:                                               ; preds = %50, %45, %38, %35, %28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153b_ups_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  store i32 0, ptr %11, align 4, !annotation !8
  %12 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10232, i16 noundef zeroext 4, ptr noundef nonnull %11, i16 noundef zeroext 0) #24
  %13 = load i32, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  br i1 %1, label %14, label %61

14:                                               ; preds = %2
  %15 = and i32 %13, 13041664
  call fastcc void @r8153b_ups_flags(ptr noundef %0)
  %16 = or i32 %15, 3670016
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 %16, ptr %10, align 4
  %17 = load volatile i32, ptr %0, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %36

20:                                               ; preds = %14
  %21 = call ptr @kmemdup(ptr noundef nonnull %10, i32 noundef 4, i32 noundef 3264) #24
  %22 = icmp eq ptr %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %27 = load i32, ptr %26, align 8
  %28 = call i32 @usb_control_msg(ptr noundef %25, i32 noundef %27, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10232, i16 noundef zeroext 68, ptr noundef nonnull %21, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %21) #24
  %29 = icmp eq i32 %28, -19
  br i1 %29, label %30, label %36

30:                                               ; preds = %23
  %31 = load ptr, ptr %24, align 4
  %32 = getelementptr inbounds %struct.usb_device, ptr %31, i32 0, i32 3
  %33 = load i32, ptr %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %36

36:                                               ; preds = %35, %30, %23, %20, %14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %37 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12292, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 0) #24
  %38 = load i32, ptr %9, align 4
  %39 = and i32 %38, -33554432
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %40 = or i32 %39, 16777216
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %40, ptr %8, align 4
  %41 = load volatile i32, ptr %0, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %36
  %45 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %46 = icmp eq ptr %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %51 = load i32, ptr %50, align 8
  %52 = call i32 @usb_control_msg(ptr noundef %49, i32 noundef %51, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12292, i16 noundef zeroext 136, ptr noundef nonnull %45, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %45) #24
  %53 = icmp eq i32 %52, -19
  br i1 %53, label %54, label %60

54:                                               ; preds = %47
  %55 = load ptr, ptr %48, align 4
  %56 = getelementptr inbounds %struct.usb_device, ptr %55, i32 0, i32 3
  %57 = load i32, ptr %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %60

60:                                               ; preds = %59, %54, %47, %44, %36
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  br label %132

61:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  %62 = and i32 %13, 13565952
  store i32 %62, ptr %7, align 4
  %63 = load volatile i32, ptr %0, align 4
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %61
  %67 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %68 = icmp eq ptr %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 4
  %72 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %73 = load i32, ptr %72, align 8
  %74 = call i32 @usb_control_msg(ptr noundef %71, i32 noundef %73, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10232, i16 noundef zeroext 68, ptr noundef nonnull %67, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %67) #24
  %75 = icmp eq i32 %74, -19
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = load ptr, ptr %70, align 4
  %78 = getelementptr inbounds %struct.usb_device, ptr %77, i32 0, i32 3
  %79 = load i32, ptr %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %82

82:                                               ; preds = %81, %76, %69, %66, %61
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %83 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12292, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 0) #24
  %84 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %85 = and i32 %84, -33554432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %85, ptr %5, align 4
  %86 = load volatile i32, ptr %0, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %105

89:                                               ; preds = %82
  %90 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %91 = icmp eq ptr %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %94 = load ptr, ptr %93, align 4
  %95 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %96 = load i32, ptr %95, align 8
  %97 = call i32 @usb_control_msg(ptr noundef %94, i32 noundef %96, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12292, i16 noundef zeroext 136, ptr noundef nonnull %90, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %90) #24
  %98 = icmp eq i32 %97, -19
  br i1 %98, label %99, label %105

99:                                               ; preds = %92
  %100 = load ptr, ptr %93, align 4
  %101 = getelementptr inbounds %struct.usb_device, ptr %100, i32 0, i32 3
  %102 = load i32, ptr %101, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %105

105:                                              ; preds = %104, %99, %92, %89, %82
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %106 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 204) #24
  %107 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %108 = and i32 %107, 65536
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %132, label %110

110:                                              ; preds = %116, %105
  %111 = phi i32 [ %117, %116 ], [ 0, %105 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %112 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %113 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %110
  call void @msleep(i32 noundef 20) #24
  %117 = add nuw nsw i32 %111, 1
  %118 = icmp eq i32 %117, 500
  br i1 %118, label %119, label %110

119:                                              ; preds = %116, %110
  %120 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 21, i32 9
  %121 = load ptr, ptr %120, align 4
  call void %121(ptr noundef %0) #24
  %122 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 49
  %123 = load i8, ptr %122, align 2
  %124 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 44
  %125 = load i16, ptr %124, align 8
  %126 = zext i16 %125 to i32
  %127 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 48
  %128 = load i8, ptr %127, align 1
  %129 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 31
  %130 = load i32, ptr %129, align 8
  %131 = call fastcc i32 @rtl8152_set_speed(ptr noundef %0, i8 noundef zeroext %123, i32 noundef %126, i8 noundef zeroext %128, i32 noundef %130)
  br label %132

132:                                              ; preds = %119, %105, %60
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153b_ups_flags(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %4 = load i32, ptr %3, align 4
  %5 = shl i32 %4, 10
  %6 = and i32 %5, 67108864
  %7 = and i32 %5, 1048576
  %8 = and i32 %5, 134217728
  %9 = and i32 %5, 4194304
  %10 = and i32 %5, 33554432
  %11 = and i32 %5, 8388608
  %12 = and i32 %5, 16777216
  %13 = lshr i32 %4, 14
  %14 = and i32 %13, 16
  %15 = and i32 %4, 15
  %16 = or i32 %15, %6
  %17 = or i32 %16, %7
  %18 = or i32 %17, %8
  %19 = or i32 %18, %9
  %20 = or i32 %19, %10
  %21 = or i32 %20, %11
  %22 = or i32 %21, %12
  %23 = or i32 %22, %14
  %24 = lshr i32 %4, 6
  %25 = and i32 %24, 15
  switch i32 %25, label %44 [
    i32 0, label %26
    i32 1, label %28
    i32 2, label %30
    i32 3, label %32
    i32 4, label %34
    i32 5, label %36
    i32 6, label %38
    i32 7, label %40
    i32 8, label %42
  ]

26:                                               ; preds = %1
  %27 = or i32 %23, 65536
  br label %44

28:                                               ; preds = %1
  %29 = or i32 %23, 131072
  br label %44

30:                                               ; preds = %1
  %31 = or i32 %23, 196608
  br label %44

32:                                               ; preds = %1
  %33 = or i32 %23, 262144
  br label %44

34:                                               ; preds = %1
  %35 = or i32 %23, 327680
  br label %44

36:                                               ; preds = %1
  %37 = or i32 %23, 393216
  br label %44

38:                                               ; preds = %1
  %39 = or i32 %23, 458752
  br label %44

40:                                               ; preds = %1
  %41 = or i32 %23, 524288
  br label %44

42:                                               ; preds = %1
  %43 = or i32 %23, 589824
  br label %44

44:                                               ; preds = %42, %40, %38, %36, %34, %32, %30, %28, %26, %1
  %45 = phi i32 [ %23, %1 ], [ %43, %42 ], [ %41, %40 ], [ %39, %38 ], [ %37, %36 ], [ %35, %34 ], [ %33, %32 ], [ %31, %30 ], [ %29, %28 ], [ %27, %26 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %45, ptr %2, align 4
  %46 = load volatile i32, ptr %0, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %44
  %50 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %56 = load i32, ptr %55, align 8
  %57 = call i32 @usb_control_msg(ptr noundef %54, i32 noundef %56, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10168, i16 noundef zeroext 255, ptr noundef nonnull %50, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %50) #24
  %58 = icmp eq i32 %57, -19
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = load ptr, ptr %53, align 4
  %61 = getelementptr inbounds %struct.usb_device, ptr %60, i32 0, i32 3
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %65

65:                                               ; preds = %64, %59, %52, %49, %44
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @rtl8152_set_speed(ptr noundef %0, i8 noundef zeroext %1, i32 noundef %2, i8 noundef zeroext %3, i32 noundef %4) unnamed_addr #0 {
  %6 = icmp eq i8 %1, 0
  br i1 %6, label %7, label %54

7:                                                ; preds = %5
  %8 = icmp ugt i8 %3, 1
  br i1 %8, label %170, label %9

9:                                                ; preds = %7
  switch i32 %2, label %170 [
    i32 10, label %10
    i32 100, label %19
    i32 1000, label %28
  ]

10:                                               ; preds = %9
  %11 = icmp eq i8 %3, 1
  %12 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %13 = load i32, ptr %12, align 4
  %14 = and i32 %13, -961
  br i1 %11, label %15, label %17

15:                                               ; preds = %10
  %16 = or i32 %14, 384
  store i32 %16, ptr %12, align 4
  br label %39

17:                                               ; preds = %10
  %18 = or i32 %14, 320
  store i32 %18, ptr %12, align 4
  br label %44

19:                                               ; preds = %9
  %20 = icmp eq i8 %3, 1
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %22 = load i32, ptr %21, align 4
  %23 = and i32 %22, -961
  br i1 %20, label %24, label %26

24:                                               ; preds = %19
  %25 = or i32 %23, 512
  store i32 %25, ptr %21, align 4
  br label %39

26:                                               ; preds = %19
  %27 = or i32 %23, 448
  store i32 %27, ptr %21, align 4
  br label %44

28:                                               ; preds = %9
  %29 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 17, i32 4
  %30 = load i8, ptr %29, align 4
  %31 = and i8 %30, 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %170, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %35 = load i32, ptr %34, align 4
  %36 = and i32 %35, -961
  %37 = or i32 %36, 256
  store i32 %37, ptr %34, align 4
  %38 = icmp eq i8 %3, 1
  br i1 %38, label %39, label %44

39:                                               ; preds = %33, %24, %15
  %40 = phi i16 [ 320, %33 ], [ 256, %15 ], [ 8448, %24 ]
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 17, i32 4
  %42 = load i8, ptr %41, align 4
  %43 = or i8 %42, 1
  br label %49

44:                                               ; preds = %33, %26, %17
  %45 = phi i16 [ 320, %33 ], [ 0, %17 ], [ 8192, %26 ]
  %46 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 17, i32 4
  %47 = load i8, ptr %46, align 4
  %48 = and i8 %47, -2
  br label %49

49:                                               ; preds = %44, %39
  %50 = phi i8 [ %48, %44 ], [ %43, %39 ]
  %51 = phi i16 [ %45, %44 ], [ %40, %39 ]
  %52 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 17, i32 4
  %53 = or i8 %50, 2
  store i8 %53, ptr %52, align 4
  br label %157

54:                                               ; preds = %5
  %55 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 17, i32 4
  %56 = load i8, ptr %55, align 4
  %57 = and i8 %56, 4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 42
  %61 = load i8, ptr %60, align 4
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  %64 = select i1 %63, i32 47, i32 111
  br label %65

65:                                               ; preds = %59, %54
  %66 = phi i32 [ 15, %54 ], [ %64, %59 ]
  %67 = and i32 %66, %4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %170, label %69

69:                                               ; preds = %65
  %70 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23544) #24
  %71 = and i16 %70, -481
  %72 = and i32 %4, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = or i16 %71, 32
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %77 = load i32, ptr %76, align 4
  %78 = and i32 %77, -961
  store i32 %78, ptr %76, align 4
  br label %79

79:                                               ; preds = %74, %69
  %80 = phi i16 [ %75, %74 ], [ %71, %69 ]
  %81 = and i32 %4, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = or i16 %80, 64
  %85 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %86 = load i32, ptr %85, align 4
  %87 = and i32 %86, -961
  %88 = or i32 %87, 64
  store i32 %88, ptr %85, align 4
  br label %89

89:                                               ; preds = %83, %79
  %90 = phi i16 [ %84, %83 ], [ %80, %79 ]
  %91 = and i32 %4, 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = or i16 %90, 128
  %95 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %96 = load i32, ptr %95, align 4
  %97 = and i32 %96, -961
  %98 = or i32 %97, 128
  store i32 %98, ptr %95, align 4
  br label %99

99:                                               ; preds = %93, %89
  %100 = phi i16 [ %94, %93 ], [ %90, %89 ]
  %101 = and i32 %4, 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %99
  %104 = or i16 %100, 256
  %105 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %106 = load i32, ptr %105, align 4
  %107 = and i32 %106, -961
  %108 = or i32 %107, 192
  store i32 %108, ptr %105, align 4
  br label %109

109:                                              ; preds = %103, %99
  %110 = phi i16 [ %104, %103 ], [ %100, %99 ]
  %111 = icmp eq i16 %70, %110
  br i1 %111, label %115, label %112

112:                                              ; preds = %109
  %113 = zext i16 %110 to i32
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23544, i16 noundef zeroext %110) #24
  %114 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 17, i32 1
  store i32 %113, ptr %114, align 4
  br label %115

115:                                              ; preds = %112, %109
  %116 = load i8, ptr %55, align 4
  %117 = and i8 %116, 4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %134, label %119

119:                                              ; preds = %115
  %120 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23534) #24
  %121 = and i16 %120, -769
  %122 = and i32 %4, 32
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %130, label %124

124:                                              ; preds = %119
  %125 = or i16 %121, 512
  %126 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %127 = load i32, ptr %126, align 4
  %128 = and i32 %127, -961
  %129 = or i32 %128, 256
  store i32 %129, ptr %126, align 4
  br label %130

130:                                              ; preds = %124, %119
  %131 = phi i16 [ %125, %124 ], [ %121, %119 ]
  %132 = icmp eq i16 %120, %131
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23534, i16 noundef zeroext %131) #24
  br label %134

134:                                              ; preds = %133, %130, %115
  %135 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 42
  %136 = load i8, ptr %135, align 4
  %137 = and i8 %136, 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %134
  %140 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23084)
  %141 = and i16 %140, -129
  %142 = and i32 %4, 64
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = or i16 %140, 128
  %146 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 22
  %147 = load i32, ptr %146, align 4
  %148 = and i32 %147, -961
  %149 = or i32 %148, 640
  store i32 %149, ptr %146, align 4
  br label %150

150:                                              ; preds = %144, %139
  %151 = phi i16 [ %145, %144 ], [ %141, %139 ]
  %152 = icmp eq i16 %140, %151
  br i1 %152, label %154, label %153

153:                                              ; preds = %150
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23084, i16 noundef zeroext %151)
  br label %154

154:                                              ; preds = %153, %150, %134
  %155 = load i8, ptr %55, align 4
  %156 = and i8 %155, -3
  store i8 %156, ptr %55, align 4
  br label %157

157:                                              ; preds = %154, %49
  %158 = phi i16 [ %51, %49 ], [ 4608, %154 ]
  %159 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %0) #24
  %160 = icmp eq i32 %159, 0
  %161 = or i16 %158, -32768
  %162 = select i1 %160, i16 %158, i16 %161
  tail call fastcc void @ocp_reg_write(ptr noundef %0, i16 noundef zeroext -23552, i16 noundef zeroext %162) #24
  br i1 %160, label %170, label %163

163:                                              ; preds = %163, %157
  %164 = phi i32 [ %167, %163 ], [ 0, %157 ]
  tail call void @msleep(i32 noundef 20) #24
  %165 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %0, i16 noundef zeroext -23552) #24
  %166 = icmp sgt i16 %165, -1
  %167 = add nuw nsw i32 %164, 1
  %168 = icmp eq i32 %167, 50
  %169 = select i1 %166, i1 true, i1 %168
  br i1 %169, label %170, label %163

170:                                              ; preds = %163, %157, %65, %28, %9, %7
  %171 = phi i32 [ -22, %7 ], [ 0, %157 ], [ -22, %28 ], [ -22, %9 ], [ -22, %65 ], [ 0, %163 ]
  ret i32 %171
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8156_ups_en(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %7 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10232, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 0) #24
  %8 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %9 = and i32 %8, 13565952
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 %9, ptr %5, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %1
  %14 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10232, i16 noundef zeroext 68, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %30 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12292, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 0) #24
  %31 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %32 = and i32 %31, -33554432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 %32, ptr %3, align 4
  %33 = load volatile i32, ptr %0, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %52

36:                                               ; preds = %29
  %37 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %38 = icmp eq ptr %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %43 = load i32, ptr %42, align 8
  %44 = call i32 @usb_control_msg(ptr noundef %41, i32 noundef %43, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12292, i16 noundef zeroext 136, ptr noundef nonnull %37, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %37) #24
  %45 = icmp eq i32 %44, -19
  br i1 %45, label %46, label %52

46:                                               ; preds = %39
  %47 = load ptr, ptr %40, align 4
  %48 = getelementptr inbounds %struct.usb_device, ptr %47, i32 0, i32 3
  %49 = load i32, ptr %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %52

52:                                               ; preds = %51, %46, %39, %36, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %53 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 204) #24
  %54 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %55 = and i32 %54, 65536
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 21, i32 9
  %59 = load ptr, ptr %58, align 4
  call void %59(ptr noundef %0) #24
  %60 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 49
  %61 = load i8, ptr %60, align 2
  %62 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 44
  %63 = load i16, ptr %62, align 8
  %64 = zext i16 %63 to i32
  %65 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 48
  %66 = load i8, ptr %65, align 1
  %67 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 31
  %68 = load i32, ptr %67, align 8
  %69 = call fastcc i32 @rtl8152_set_speed(ptr noundef %0, i8 noundef zeroext %61, i32 noundef %64, i8 noundef zeroext %66, i32 noundef %68)
  br label %70

70:                                               ; preds = %57, %52
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8156_mac_clk_spd(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 1027, ptr %4, align 4
  %5 = load volatile i32, ptr %0, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %10 = icmp eq ptr %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %15 = load i32, ptr %14, align 8
  %16 = call i32 @usb_control_msg(ptr noundef %13, i32 noundef %15, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -8000, i16 noundef zeroext 307, ptr noundef nonnull %9, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %9) #24
  %17 = icmp eq i32 %16, -19
  br i1 %17, label %18, label %24

18:                                               ; preds = %11
  %19 = load ptr, ptr %12, align 4
  %20 = getelementptr inbounds %struct.usb_device, ptr %19, i32 0, i32 3
  %21 = load i32, ptr %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %24

24:                                               ; preds = %23, %18, %11, %8, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %25 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7992, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 460) #24
  %26 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %27 = and i32 %26, 2130706432
  %28 = or i32 %27, -2147287040
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %28, ptr %2, align 4
  %29 = load volatile i32, ptr %0, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %24
  %33 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %34 = icmp eq ptr %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %39 = load i32, ptr %38, align 8
  %40 = call i32 @usb_control_msg(ptr noundef %37, i32 noundef %39, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -7992, i16 noundef zeroext 460, ptr noundef nonnull %33, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %33) #24
  %41 = icmp eq i32 %40, -19
  br i1 %41, label %42, label %48

42:                                               ; preds = %35
  %43 = load ptr, ptr %36, align 4
  %44 = getelementptr inbounds %struct.usb_device, ptr %43, i32 0, i32 3
  %45 = load i32, ptr %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %48

48:                                               ; preds = %47, %42, %35, %32, %24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8156b_wait_loading_flash(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11348, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = and i32 %6, 131072
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %10 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11644, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 51) #24
  %11 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %12 = and i32 %11, 32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %20, %9
  %15 = phi i32 [ %21, %20 ], [ 0, %9 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %16 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11644, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 51) #24
  %17 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %18 = and i32 %17, 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %21 = add nuw nsw i32 %15, 1
  %22 = icmp eq i32 %21, 100
  br i1 %22, label %23, label %14

23:                                               ; preds = %20, %14, %9, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @r8153c_ups_en(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #24
  store i32 0, ptr %15, align 4, !annotation !8
  %16 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10232, i16 noundef zeroext 4, ptr noundef nonnull %15, i16 noundef zeroext 0) #24
  %17 = load i32, ptr %15, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #24
  br i1 %1, label %18, label %65

18:                                               ; preds = %2
  %19 = and i32 %17, 13041664
  call fastcc void @r8153b_ups_flags(ptr noundef %0)
  %20 = or i32 %19, 3670016
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #24
  store i32 %20, ptr %14, align 4
  %21 = load volatile i32, ptr %0, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %18
  %25 = call ptr @kmemdup(ptr noundef nonnull %14, i32 noundef 4, i32 noundef 3264) #24
  %26 = icmp eq ptr %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %31 = load i32, ptr %30, align 8
  %32 = call i32 @usb_control_msg(ptr noundef %29, i32 noundef %31, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10232, i16 noundef zeroext 68, ptr noundef nonnull %25, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %25) #24
  %33 = icmp eq i32 %32, -19
  br i1 %33, label %34, label %40

34:                                               ; preds = %27
  %35 = load ptr, ptr %28, align 4
  %36 = getelementptr inbounds %struct.usb_device, ptr %35, i32 0, i32 3
  %37 = load i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %40

40:                                               ; preds = %39, %34, %27, %24, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #24
  store i32 0, ptr %13, align 4, !annotation !8
  %41 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12292, i16 noundef zeroext 4, ptr noundef nonnull %13, i16 noundef zeroext 0) #24
  %42 = load i32, ptr %13, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #24
  %43 = and i32 %42, 2113929216
  %44 = or i32 %43, 16777216
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #24
  store i32 %44, ptr %12, align 4
  %45 = load volatile i32, ptr %0, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %64

48:                                               ; preds = %40
  %49 = call ptr @kmemdup(ptr noundef nonnull %12, i32 noundef 4, i32 noundef 3264) #24
  %50 = icmp eq ptr %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %53 = load ptr, ptr %52, align 4
  %54 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %55 = load i32, ptr %54, align 8
  %56 = call i32 @usb_control_msg(ptr noundef %53, i32 noundef %55, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12292, i16 noundef zeroext 136, ptr noundef nonnull %49, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %49) #24
  %57 = icmp eq i32 %56, -19
  br i1 %57, label %58, label %64

58:                                               ; preds = %51
  %59 = load ptr, ptr %52, align 4
  %60 = getelementptr inbounds %struct.usb_device, ptr %59, i32 0, i32 3
  %61 = load i32, ptr %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %64

64:                                               ; preds = %63, %58, %51, %48, %40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #24
  br label %201

65:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #24
  %66 = and i32 %17, 13565952
  store i32 %66, ptr %11, align 4
  %67 = load volatile i32, ptr %0, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %86

70:                                               ; preds = %65
  %71 = call ptr @kmemdup(ptr noundef nonnull %11, i32 noundef 4, i32 noundef 3264) #24
  %72 = icmp eq ptr %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %77 = load i32, ptr %76, align 8
  %78 = call i32 @usb_control_msg(ptr noundef %75, i32 noundef %77, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -10232, i16 noundef zeroext 68, ptr noundef nonnull %71, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %71) #24
  %79 = icmp eq i32 %78, -19
  br i1 %79, label %80, label %86

80:                                               ; preds = %73
  %81 = load ptr, ptr %74, align 4
  %82 = getelementptr inbounds %struct.usb_device, ptr %81, i32 0, i32 3
  %83 = load i32, ptr %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %86

86:                                               ; preds = %85, %80, %73, %70, %65
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %87 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12292, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 0) #24
  %88 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %89 = and i32 %88, -33554432
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 %89, ptr %9, align 4
  %90 = load volatile i32, ptr %0, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %109

93:                                               ; preds = %86
  %94 = call ptr @kmemdup(ptr noundef nonnull %9, i32 noundef 4, i32 noundef 3264) #24
  %95 = icmp eq ptr %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %98 = load ptr, ptr %97, align 4
  %99 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %100 = load i32, ptr %99, align 8
  %101 = call i32 @usb_control_msg(ptr noundef %98, i32 noundef %100, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12292, i16 noundef zeroext 136, ptr noundef nonnull %94, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %94) #24
  %102 = icmp eq i32 %101, -19
  br i1 %102, label %103, label %109

103:                                              ; preds = %96
  %104 = load ptr, ptr %97, align 4
  %105 = getelementptr inbounds %struct.usb_device, ptr %104, i32 0, i32 3
  %106 = load i32, ptr %105, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %103
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %109

109:                                              ; preds = %108, %103, %96, %93, %86
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 0, ptr %8, align 4, !annotation !8
  %110 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %8, i16 noundef zeroext 204) #24
  %111 = load i32, ptr %8, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  %112 = and i32 %111, 65536
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %136, label %114

114:                                              ; preds = %120, %109
  %115 = phi i32 [ %121, %120 ], [ 0, %109 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %116 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -8188, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 307) #24
  %117 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  call void @msleep(i32 noundef 20) #24
  %121 = add nuw nsw i32 %115, 1
  %122 = icmp eq i32 %121, 500
  br i1 %122, label %123, label %114

123:                                              ; preds = %120, %114
  %124 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 21, i32 9
  %125 = load ptr, ptr %124, align 4
  call void %125(ptr noundef %0) #24
  %126 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 49
  %127 = load i8, ptr %126, align 2
  %128 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 44
  %129 = load i16, ptr %128, align 8
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 48
  %132 = load i8, ptr %131, align 1
  %133 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 31
  %134 = load i32, ptr %133, align 8
  %135 = call fastcc i32 @rtl8152_set_speed(ptr noundef %0, i8 noundef zeroext %127, i32 noundef %130, i8 noundef zeroext %132, i32 noundef %134)
  br label %136

136:                                              ; preds = %123, %109
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 192, ptr %6, align 4
  %137 = load volatile i32, ptr %0, align 4
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %156

140:                                              ; preds = %136
  %141 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %142 = icmp eq ptr %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %145 = load ptr, ptr %144, align 4
  %146 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %147 = load i32, ptr %146, align 8
  %148 = call i32 @usb_control_msg(ptr noundef %145, i32 noundef %147, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %141, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %141) #24
  %149 = icmp eq i32 %148, -19
  br i1 %149, label %150, label %156

150:                                              ; preds = %143
  %151 = load ptr, ptr %144, align 4
  %152 = getelementptr inbounds %struct.usb_device, ptr %151, i32 0, i32 3
  %153 = load i32, ptr %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %150
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %156

156:                                              ; preds = %155, %150, %143, %140, %136
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %157 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 307) #24
  %158 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %159 = and i32 %158, 65279
  %160 = or i32 %159, 256
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %160, ptr %4, align 4
  %161 = load volatile i32, ptr %0, align 4
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %180

164:                                              ; preds = %156
  %165 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %166 = icmp eq ptr %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %169 = load ptr, ptr %168, align 4
  %170 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %171 = load i32, ptr %170, align 8
  %172 = call i32 @usb_control_msg(ptr noundef %169, i32 noundef %171, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6112, i16 noundef zeroext 307, ptr noundef nonnull %165, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %165) #24
  %173 = icmp eq i32 %172, -19
  br i1 %173, label %174, label %180

174:                                              ; preds = %167
  %175 = load ptr, ptr %168, align 4
  %176 = getelementptr inbounds %struct.usb_device, ptr %175, i32 0, i32 3
  %177 = load i32, ptr %176, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %174
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %180

180:                                              ; preds = %179, %174, %167, %164, %156
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4
  %181 = load volatile i32, ptr %0, align 4
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %200

184:                                              ; preds = %180
  %185 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %186 = icmp eq ptr %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %189 = load ptr, ptr %188, align 4
  %190 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %191 = load i32, ptr %190, align 8
  %192 = call i32 @usb_control_msg(ptr noundef %189, i32 noundef %191, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %185, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %185) #24
  %193 = icmp eq i32 %192, -19
  br i1 %193, label %194, label %200

194:                                              ; preds = %187
  %195 = load ptr, ptr %188, align 4
  %196 = getelementptr inbounds %struct.usb_device, ptr %195, i32 0, i32 3
  %197 = load i32, ptr %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %194
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %200

200:                                              ; preds = %199, %194, %187, %184, %180
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %201

201:                                              ; preds = %200, %64
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153_pre_firmware_1(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  br label %3

3:                                                ; preds = %9, %1
  %4 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7164, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 0) #24
  %6 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %10 = add nuw nsw i32 %4, 1
  %11 = icmp eq i32 %10, 104
  br i1 %11, label %12, label %3

12:                                               ; preds = %9, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153_post_firmware_1(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %5 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12308, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 0) #24
  %6 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %7 = and i32 %6, 16777216
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 5496, ptr %3, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %9
  %14 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -976, i16 noundef zeroext 51, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  br label %30

30:                                               ; preds = %29, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 2250, ptr %2, align 4
  %31 = load volatile i32, ptr %0, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %36 = icmp eq ptr %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %41 = load i32, ptr %40, align 8
  %42 = call i32 @usb_control_msg(ptr noundef %39, i32 noundef %41, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11384, i16 noundef zeroext 307, ptr noundef nonnull %35, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %35) #24
  %43 = icmp eq i32 %42, -19
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = load ptr, ptr %38, align 4
  %46 = getelementptr inbounds %struct.usb_device, ptr %45, i32 0, i32 3
  %47 = load i32, ptr %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %50

50:                                               ; preds = %49, %44, %37, %34, %30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153_pre_firmware_2(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  br label %5

5:                                                ; preds = %11, %1
  %6 = phi i32 [ 0, %1 ], [ %12, %11 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %7 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -7164, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 0) #24
  %8 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #24
  %12 = add nuw nsw i32 %6, 1
  %13 = icmp eq i32 %12, 104
  br i1 %13, label %14, label %5

14:                                               ; preds = %11, %5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %15 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12344, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 204) #24
  %16 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %17 = and i32 %16, -1073807360
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %17, ptr %2, align 4
  %18 = load volatile i32, ptr %0, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %14
  %22 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %23 = icmp eq ptr %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %28 = load i32, ptr %27, align 8
  %29 = call i32 @usb_control_msg(ptr noundef %26, i32 noundef %28, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12344, i16 noundef zeroext 204, ptr noundef nonnull %22, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %22) #24
  %30 = icmp eq i32 %29, -19
  br i1 %30, label %31, label %37

31:                                               ; preds = %24
  %32 = load ptr, ptr %25, align 4
  %33 = getelementptr inbounds %struct.usb_device, ptr %32, i32 0, i32 3
  %34 = load i32, ptr %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %37

37:                                               ; preds = %36, %31, %24, %21, %14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153_post_firmware_2(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %11 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12308, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 0) #24
  %12 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %13 = and i32 %12, 16777216
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %40, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %16 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -968, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %17 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %18 = and i32 %17, 65534
  %19 = or i32 %18, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %19, ptr %8, align 4
  %20 = load volatile i32, ptr %0, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %39

23:                                               ; preds = %15
  %24 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %25 = icmp eq ptr %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %30 = load i32, ptr %29, align 8
  %31 = call i32 @usb_control_msg(ptr noundef %28, i32 noundef %30, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -968, i16 noundef zeroext 307, ptr noundef nonnull %24, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %24) #24
  %32 = icmp eq i32 %31, -19
  br i1 %32, label %33, label %39

33:                                               ; preds = %26
  %34 = load ptr, ptr %27, align 4
  %35 = getelementptr inbounds %struct.usb_device, ptr %34, i32 0, i32 3
  %36 = load i32, ptr %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %39

39:                                               ; preds = %38, %33, %26, %23, %15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  br label %40

40:                                               ; preds = %39, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 2250, ptr %7, align 4
  %41 = load volatile i32, ptr %0, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %40
  %45 = call ptr @kmemdup(ptr noundef nonnull %7, i32 noundef 4, i32 noundef 3264) #24
  %46 = icmp eq ptr %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %51 = load i32, ptr %50, align 8
  %52 = call i32 @usb_control_msg(ptr noundef %49, i32 noundef %51, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11384, i16 noundef zeroext 307, ptr noundef nonnull %45, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %45) #24
  %53 = icmp eq i32 %52, -19
  br i1 %53, label %54, label %60

54:                                               ; preds = %47
  %55 = load ptr, ptr %48, align 4
  %56 = getelementptr inbounds %struct.usb_device, ptr %55, i32 0, i32 3
  %57 = load i32, ptr %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %60

60:                                               ; preds = %59, %54, %47, %44, %40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 132, ptr %6, align 4
  %61 = load volatile i32, ptr %0, align 4
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %80

64:                                               ; preds = %60
  %65 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %66 = icmp eq ptr %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %69 = load ptr, ptr %68, align 4
  %70 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %71 = load i32, ptr %70, align 8
  %72 = call i32 @usb_control_msg(ptr noundef %69, i32 noundef %71, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11368, i16 noundef zeroext 307, ptr noundef nonnull %65, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %65) #24
  %73 = icmp eq i32 %72, -19
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  %75 = load ptr, ptr %68, align 4
  %76 = getelementptr inbounds %struct.usb_device, ptr %75, i32 0, i32 3
  %77 = load i32, ptr %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %74
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %80

80:                                               ; preds = %79, %74, %67, %64, %60
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %81 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12344, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 204) #24
  %82 = load i32, ptr %5, align 4
  %83 = and i32 %82, -1073807360
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %84 = or i32 %83, 1073741824
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %84, ptr %4, align 4
  %85 = load volatile i32, ptr %0, align 4
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %104

88:                                               ; preds = %80
  %89 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %90 = icmp eq ptr %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %93 = load ptr, ptr %92, align 4
  %94 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %95 = load i32, ptr %94, align 8
  %96 = call i32 @usb_control_msg(ptr noundef %93, i32 noundef %95, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12344, i16 noundef zeroext 204, ptr noundef nonnull %89, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %89) #24
  %97 = icmp eq i32 %96, -19
  br i1 %97, label %98, label %104

98:                                               ; preds = %91
  %99 = load ptr, ptr %92, align 4
  %100 = getelementptr inbounds %struct.usb_device, ptr %99, i32 0, i32 3
  %101 = load i32, ptr %100, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %98
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %104

104:                                              ; preds = %103, %98, %91, %88, %80
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %105 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19428, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 0) #24
  %106 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %107 = and i32 %106, 16515072
  %108 = or i32 %107, 196608
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %108, ptr %2, align 4
  %109 = load volatile i32, ptr %0, align 4
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %128

112:                                              ; preds = %104
  %113 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %114 = icmp eq ptr %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %117 = load ptr, ptr %116, align 4
  %118 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %119 = load i32, ptr %118, align 8
  %120 = call i32 @usb_control_msg(ptr noundef %117, i32 noundef %119, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19428, i16 noundef zeroext 68, ptr noundef nonnull %113, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %113) #24
  %121 = icmp eq i32 %120, -19
  br i1 %121, label %122, label %128

122:                                              ; preds = %115
  %123 = load ptr, ptr %116, align 4
  %124 = getelementptr inbounds %struct.usb_device, ptr %123, i32 0, i32 3
  %125 = load i32, ptr %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %122
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %128

128:                                              ; preds = %127, %122, %115, %112, %104
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153_post_firmware_3(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %6 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -19428, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 0) #24
  %7 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %8 = and i32 %7, 16515072
  %9 = or i32 %8, 196608
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %9, ptr %4, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %1
  %14 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -19428, i16 noundef zeroext 68, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %30 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12340, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 51) #24
  %31 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %32 = and i32 %31, 65023
  %33 = or i32 %32, 512
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %33, ptr %2, align 4
  %34 = load volatile i32, ptr %0, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %29
  %38 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %39 = icmp eq ptr %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %44 = load i32, ptr %43, align 8
  %45 = call i32 @usb_control_msg(ptr noundef %42, i32 noundef %44, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12340, i16 noundef zeroext 51, ptr noundef nonnull %38, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %38) #24
  %46 = icmp eq i32 %45, -19
  br i1 %46, label %47, label %53

47:                                               ; preds = %40
  %48 = load ptr, ptr %41, align 4
  %49 = getelementptr inbounds %struct.usb_device, ptr %48, i32 0, i32 3
  %50 = load i32, ptr %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %53

53:                                               ; preds = %52, %47, %40, %37, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153b_pre_firmware_1(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 32893, ptr %2, align 4
  %3 = load volatile i32, ptr %0, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  %7 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %8 = icmp eq ptr %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %13 = load i32, ptr %12, align 8
  %14 = call i32 @usb_control_msg(ptr noundef %11, i32 noundef %13, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11456, i16 noundef zeroext 51, ptr noundef nonnull %7, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %7) #24
  %15 = icmp eq i32 %14, -19
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = load ptr, ptr %10, align 4
  %18 = getelementptr inbounds %struct.usb_device, ptr %17, i32 0, i32 3
  %19 = load i32, ptr %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %22

22:                                               ; preds = %21, %16, %9, %6, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153b_post_firmware_1(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #24
  store i32 0, ptr %10, align 4, !annotation !8
  %11 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10212, i16 noundef zeroext 4, ptr noundef nonnull %10, i16 noundef zeroext 0) #24
  %12 = load i32, ptr %10, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #24
  %13 = and i32 %12, 67108864
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %40, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #24
  store i32 0, ptr %9, align 4, !annotation !8
  %16 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -968, i16 noundef zeroext 4, ptr noundef nonnull %9, i16 noundef zeroext 307) #24
  %17 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #24
  %18 = and i32 %17, 65534
  %19 = or i32 %18, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #24
  store i32 %19, ptr %8, align 4
  %20 = load volatile i32, ptr %0, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %39

23:                                               ; preds = %15
  %24 = call ptr @kmemdup(ptr noundef nonnull %8, i32 noundef 4, i32 noundef 3264) #24
  %25 = icmp eq ptr %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %30 = load i32, ptr %29, align 8
  %31 = call i32 @usb_control_msg(ptr noundef %28, i32 noundef %30, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -968, i16 noundef zeroext 307, ptr noundef nonnull %24, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %24) #24
  %32 = icmp eq i32 %31, -19
  br i1 %32, label %33, label %39

33:                                               ; preds = %26
  %34 = load ptr, ptr %27, align 4
  %35 = getelementptr inbounds %struct.usb_device, ptr %34, i32 0, i32 3
  %36 = load i32, ptr %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %39

39:                                               ; preds = %38, %33, %26, %23, %15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #24
  br label %40

40:                                               ; preds = %39, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #24
  store i32 0, ptr %7, align 4, !annotation !8
  %41 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11468, i16 noundef zeroext 4, ptr noundef nonnull %7, i16 noundef zeroext 51) #24
  %42 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #24
  %43 = and i32 %42, 65533
  %44 = or i32 %43, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 %44, ptr %6, align 4
  %45 = load volatile i32, ptr %0, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %64

48:                                               ; preds = %40
  %49 = call ptr @kmemdup(ptr noundef nonnull %6, i32 noundef 4, i32 noundef 3264) #24
  %50 = icmp eq ptr %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %53 = load ptr, ptr %52, align 4
  %54 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %55 = load i32, ptr %54, align 8
  %56 = call i32 @usb_control_msg(ptr noundef %53, i32 noundef %55, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11468, i16 noundef zeroext 51, ptr noundef nonnull %49, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %49) #24
  %57 = icmp eq i32 %56, -19
  br i1 %57, label %58, label %64

58:                                               ; preds = %51
  %59 = load ptr, ptr %52, align 4
  %60 = getelementptr inbounds %struct.usb_device, ptr %59, i32 0, i32 3
  %61 = load i32, ptr %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %64

64:                                               ; preds = %63, %58, %51, %48, %40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %65 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11032, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 51) #24
  %66 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %67 = and i32 %66, 65533
  %68 = or i32 %67, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %68, ptr %4, align 4
  %69 = load volatile i32, ptr %0, align 4
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %88

72:                                               ; preds = %64
  %73 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %74 = icmp eq ptr %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %77 = load ptr, ptr %76, align 4
  %78 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %79 = load i32, ptr %78, align 8
  %80 = call i32 @usb_control_msg(ptr noundef %77, i32 noundef %79, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11032, i16 noundef zeroext 51, ptr noundef nonnull %73, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %73) #24
  %81 = icmp eq i32 %80, -19
  br i1 %81, label %82, label %88

82:                                               ; preds = %75
  %83 = load ptr, ptr %76, align 4
  %84 = getelementptr inbounds %struct.usb_device, ptr %83, i32 0, i32 3
  %85 = load i32, ptr %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %88

88:                                               ; preds = %87, %82, %75, %72, %64
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %89 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12340, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 51) #24
  %90 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %91 = and i32 %90, 65023
  %92 = or i32 %91, 512
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %92, ptr %2, align 4
  %93 = load volatile i32, ptr %0, align 4
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %112

96:                                               ; preds = %88
  %97 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %98 = icmp eq ptr %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %101 = load ptr, ptr %100, align 4
  %102 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %103 = load i32, ptr %102, align 8
  %104 = call i32 @usb_control_msg(ptr noundef %101, i32 noundef %103, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12340, i16 noundef zeroext 51, ptr noundef nonnull %97, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %97) #24
  %105 = icmp eq i32 %104, -19
  br i1 %105, label %106, label %112

106:                                              ; preds = %99
  %107 = load ptr, ptr %100, align 4
  %108 = getelementptr inbounds %struct.usb_device, ptr %107, i32 0, i32 3
  %109 = load i32, ptr %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %106
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %112

112:                                              ; preds = %111, %106, %99, %96, %88
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8156a_post_firmware_1(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %6 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12340, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 51) #24
  %7 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %8 = and i32 %7, 65023
  %9 = or i32 %8, 512
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %9, ptr %4, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %1
  %14 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -12340, i16 noundef zeroext 51, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 1076265998, ptr %3, align 4
  %30 = load volatile i32, ptr %0, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29
  %34 = call ptr @kmemdup(ptr noundef nonnull %3, i32 noundef 4, i32 noundef 3264) #24
  %35 = icmp eq ptr %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %40 = load i32, ptr %39, align 8
  %41 = call i32 @usb_control_msg(ptr noundef %38, i32 noundef %40, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11136, i16 noundef zeroext 255, ptr noundef nonnull %34, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %34) #24
  %42 = icmp eq i32 %41, -19
  br i1 %42, label %43, label %49

43:                                               ; preds = %36
  %44 = load ptr, ptr %37, align 4
  %45 = getelementptr inbounds %struct.usb_device, ptr %44, i32 0, i32 3
  %46 = load i32, ptr %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %49

49:                                               ; preds = %48, %43, %36, %33, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 1073851593, ptr %2, align 4
  %50 = load volatile i32, ptr %0, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %69

53:                                               ; preds = %49
  %54 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %55 = icmp eq ptr %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 4
  %59 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %60 = load i32, ptr %59, align 8
  %61 = call i32 @usb_control_msg(ptr noundef %58, i32 noundef %60, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11136, i16 noundef zeroext 255, ptr noundef nonnull %54, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %54) #24
  %62 = icmp eq i32 %61, -19
  br i1 %62, label %63, label %69

63:                                               ; preds = %56
  %64 = load ptr, ptr %57, align 4
  %65 = getelementptr inbounds %struct.usb_device, ptr %64, i32 0, i32 3
  %66 = load i32, ptr %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %63
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %69

69:                                               ; preds = %68, %63, %56, %53, %49
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @r8153c_post_firmware_1(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %6 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11468, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 51) #24
  %7 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %8 = and i32 %7, 65279
  %9 = or i32 %8, 256
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 %9, ptr %4, align 4
  %10 = load volatile i32, ptr %0, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %1
  %14 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %20 = load i32, ptr %19, align 8
  %21 = call i32 @usb_control_msg(ptr noundef %18, i32 noundef %20, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11468, i16 noundef zeroext 51, ptr noundef nonnull %14, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %14) #24
  %22 = icmp eq i32 %21, -19
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = load ptr, ptr %17, align 4
  %25 = getelementptr inbounds %struct.usb_device, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %29

29:                                               ; preds = %28, %23, %16, %13, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %30 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -11032, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 51) #24
  %31 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %32 = and i32 %31, 65533
  %33 = or i32 %32, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %33, ptr %2, align 4
  %34 = load volatile i32, ptr %0, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %29
  %38 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %39 = icmp eq ptr %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 41
  %44 = load i32, ptr %43, align 8
  %45 = call i32 @usb_control_msg(ptr noundef %42, i32 noundef %44, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -11032, i16 noundef zeroext 51, ptr noundef nonnull %38, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %38) #24
  %46 = icmp eq i32 %45, -19
  br i1 %46, label %47, label %53

47:                                               ; preds = %40
  %48 = load ptr, ptr %41, align 4
  %49 = getelementptr inbounds %struct.usb_device, ptr %48, i32 0, i32 3
  %50 = load i32, ptr %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %53

53:                                               ; preds = %52, %47, %40, %37, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_autopm_get_interface(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @_rtl8152_set_rx_mode(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [2 x i32], align 8
  %5 = alloca [2 x i32], align 8
  %6 = getelementptr i8, ptr %0, i32 1408
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #24
  store i64 0, ptr %4, align 8, !annotation !8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #24
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %8 = load ptr, ptr %7, align 64
  %9 = getelementptr inbounds %struct.netdev_queue, ptr %8, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %9) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %10 = call fastcc i32 @generic_ocp_read(ptr noundef %6, i16 noundef zeroext -16368, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 256) #24
  %11 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %12 = and i32 %11, -16
  %13 = or i32 %12, 10
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %15 = load i32, ptr %14, align 8
  %16 = and i32 %15, 256
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %1
  %19 = getelementptr i8, ptr %0, i32 2140
  %20 = load i32, ptr %19, align 4
  %21 = and i32 %20, 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  call void (ptr, ptr, ...) @netdev_notice(ptr noundef %0, ptr noundef nonnull @.str.34) #25
  br label %24

24:                                               ; preds = %23, %18
  %25 = or i32 %11, 15
  %26 = getelementptr inbounds [2 x i32], ptr %4, i32 0, i32 1
  store i32 -1, ptr %26, align 4
  store i32 -1, ptr %4, align 8
  br label %60

27:                                               ; preds = %1
  %28 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 61
  %29 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 61, i32 1
  %30 = load i32, ptr %29, align 4
  %31 = icmp slt i32 %30, 33
  %32 = and i32 %15, 512
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %31, i1 %33, i1 false
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = or i32 %12, 14
  %37 = getelementptr inbounds [2 x i32], ptr %4, i32 0, i32 1
  store i32 -1, ptr %37, align 4
  store i32 -1, ptr %4, align 8
  br label %60

38:                                               ; preds = %27
  %39 = getelementptr inbounds [2 x i32], ptr %4, i32 0, i32 1
  %40 = load ptr, ptr %28, align 4
  %41 = icmp eq ptr %40, %28
  br i1 %41, label %60, label %42

42:                                               ; preds = %42, %38
  %43 = phi ptr [ %54, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %struct.netdev_hw_addr, ptr %43, i32 0, i32 2
  %45 = call i32 @crc32_le(i32 noundef -1, ptr noundef %44, i32 noundef 6) #28
  %46 = call i32 asm "rbit $0, $1", "=r,r"(i32 %45) #27, !srcloc !29
  %47 = lshr i32 %46, 26
  %48 = and i32 %47, 31
  %49 = shl nuw i32 1, %48
  %50 = lshr i32 %46, 31
  %51 = getelementptr [2 x i32], ptr %4, i32 0, i32 %50
  %52 = load i32, ptr %51, align 4
  %53 = or i32 %49, %52
  store i32 %53, ptr %51, align 4
  %54 = load ptr, ptr %43, align 4
  %55 = icmp eq ptr %54, %28
  br i1 %55, label %56, label %42

56:                                               ; preds = %42
  %57 = or i32 %12, 14
  %58 = load i32, ptr %39, align 4
  %59 = load i32, ptr %4, align 8
  br label %60

60:                                               ; preds = %56, %38, %35, %24
  %61 = phi i32 [ -1, %24 ], [ -1, %35 ], [ %59, %56 ], [ 0, %38 ]
  %62 = phi i32 [ -1, %24 ], [ -1, %35 ], [ %58, %56 ], [ 0, %38 ]
  %63 = phi i32 [ %25, %24 ], [ %36, %35 ], [ %57, %56 ], [ %13, %38 ]
  %64 = call i32 @llvm.bswap.i32(i32 %62)
  store i32 %64, ptr %5, align 8
  %65 = call i32 @llvm.bswap.i32(i32 %61)
  %66 = getelementptr inbounds [2 x i32], ptr %5, i32 0, i32 1
  store i32 %65, ptr %66, align 4
  call fastcc void @generic_ocp_write(ptr noundef %6, i16 noundef zeroext -13056, i16 noundef zeroext 255, i16 noundef zeroext 8, ptr noundef nonnull %5, i16 noundef zeroext 256) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 %63, ptr %2, align 4
  %67 = load volatile i32, ptr %6, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %86

70:                                               ; preds = %60
  %71 = call ptr @kmemdup(ptr noundef nonnull %2, i32 noundef 4, i32 noundef 3264) #24
  %72 = icmp eq ptr %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr i8, ptr %0, i32 1412
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr i8, ptr %0, i32 2192
  %77 = load i32, ptr %76, align 8
  %78 = call i32 @usb_control_msg(ptr noundef %75, i32 noundef %77, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -16368, i16 noundef zeroext 511, ptr noundef nonnull %71, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %71) #24
  %79 = icmp eq i32 %78, -19
  br i1 %79, label %80, label %86

80:                                               ; preds = %73
  %81 = load ptr, ptr %74, align 4
  %82 = getelementptr inbounds %struct.usb_device, ptr %81, i32 0, i32 3
  %83 = load i32, ptr %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  call void @_set_bit(i32 noundef 0, ptr noundef %6) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %86

86:                                               ; preds = %85, %80, %73, %70, %60
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %87 = load ptr, ptr %7, align 64
  call void @netif_tx_wake_queue(ptr noundef %87) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #24
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @tasklet_schedule(ptr noundef %0) unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.tasklet_struct, ptr %0, i32 0, i32 1
  %3 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %2) #24
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @__tasklet_schedule(ptr noundef %0) #24
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_autopm_put_interface(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl_start_rx(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.list_head, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #24
  store volatile ptr %2, ptr %2, align 8
  %3 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  store ptr %2, ptr %3, align 4
  %4 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 13
  %5 = call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %6 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 9
  store volatile ptr %6, ptr %6, align 4
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 9, i32 1
  store ptr %6, ptr %7, align 4
  %8 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 8
  store volatile ptr %8, ptr %8, align 4
  %9 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 8, i32 1
  store ptr %8, ptr %9, align 4
  %10 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 7
  %11 = load volatile ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, %10
  br i1 %12, label %19, label %13

13:                                               ; preds = %1
  %14 = load ptr, ptr %2, align 8
  %15 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 7, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  store ptr %2, ptr %17, align 4
  store ptr %11, ptr %2, align 8
  store ptr %14, ptr %16, align 4
  %18 = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  store ptr %16, ptr %18, align 4
  store volatile ptr %10, ptr %10, align 4
  store ptr %10, ptr %15, align 4
  br label %19

19:                                               ; preds = %13, %1
  call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %5) #24
  %20 = load ptr, ptr %2, align 8
  %21 = icmp eq ptr %20, %2
  br i1 %21, label %44, label %22

22:                                               ; preds = %41, %19
  %23 = phi ptr [ %27, %41 ], [ %20, %19 ]
  %24 = phi i32 [ %42, %41 ], [ 0, %19 ]
  %25 = phi i32 [ %29, %41 ], [ 0, %19 ]
  %26 = getelementptr i8, ptr %23, i32 -8
  %27 = load ptr, ptr %23, align 4
  store volatile ptr %26, ptr %26, align 4
  %28 = getelementptr i8, ptr %23, i32 -4
  store ptr %26, ptr %28, align 4
  %29 = add i32 %25, 1
  %30 = icmp sgt i32 %29, 10
  br i1 %30, label %31, label %34

31:                                               ; preds = %22
  %32 = call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %33 = load ptr, ptr %9, align 4
  store ptr %26, ptr %9, align 4
  store ptr %8, ptr %26, align 4
  store ptr %33, ptr %28, align 4
  store volatile ptr %26, ptr %33, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %32) #24
  br label %41

34:                                               ; preds = %22
  %35 = icmp slt i32 %24, 0
  br i1 %35, label %36, label %39, !prof !23

36:                                               ; preds = %34
  %37 = call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %38 = load ptr, ptr %7, align 4
  store ptr %26, ptr %7, align 4
  store ptr %6, ptr %26, align 4
  store ptr %38, ptr %28, align 4
  store volatile ptr %26, ptr %38, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %37) #24
  br label %41

39:                                               ; preds = %34
  %40 = call fastcc i32 @r8152_submit_rx(ptr noundef %0, ptr noundef %26, i32 noundef 3264)
  br label %41

41:                                               ; preds = %39, %36, %31
  %42 = phi i32 [ %24, %31 ], [ %24, %36 ], [ %40, %39 ]
  %43 = icmp eq ptr %27, %2
  br i1 %43, label %44, label %22

44:                                               ; preds = %41, %19
  %45 = call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %46 = load volatile ptr, ptr %10, align 4
  %47 = icmp eq ptr %46, %10
  br i1 %47, label %49, label %48, !prof !24

48:                                               ; preds = %44
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 2929, i32 noundef 9, ptr noundef null) #24
  br label %49

49:                                               ; preds = %48, %44
  %50 = load volatile ptr, ptr %2, align 8
  %51 = icmp eq ptr %50, %2
  br i1 %51, label %57, label %52

52:                                               ; preds = %49
  %53 = load ptr, ptr %10, align 4
  %54 = load ptr, ptr %3, align 4
  %55 = getelementptr inbounds %struct.list_head, ptr %50, i32 0, i32 1
  store ptr %10, ptr %55, align 4
  store ptr %50, ptr %10, align 4
  store ptr %53, ptr %54, align 4
  %56 = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  store ptr %54, ptr %56, align 4
  br label %57

57:                                               ; preds = %52, %49
  call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %45) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @r8152_submit_rx(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = load volatile i32, ptr %0, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %64

7:                                                ; preds = %3
  %8 = load volatile i32, ptr %0, align 4
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 6
  %15 = load volatile i32, ptr %14, align 4
  %16 = and i32 %15, 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %64

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.rx_agg, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 37
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.rx_agg, ptr %1, i32 0, i32 5
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 32
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.urb, ptr %20, i32 0, i32 8
  store ptr %22, ptr %29, align 4
  %30 = getelementptr inbounds %struct.urb, ptr %20, i32 0, i32 10
  store i32 %24, ptr %30, align 4
  %31 = getelementptr inbounds %struct.urb, ptr %20, i32 0, i32 14
  store ptr %26, ptr %31, align 4
  %32 = getelementptr inbounds %struct.urb, ptr %20, i32 0, i32 19
  store i32 %28, ptr %32, align 4
  %33 = getelementptr inbounds %struct.urb, ptr %20, i32 0, i32 28
  store ptr @read_bulk_callback, ptr %33, align 4
  %34 = getelementptr inbounds %struct.urb, ptr %20, i32 0, i32 27
  store ptr %1, ptr %34, align 4
  %35 = load ptr, ptr %19, align 4
  %36 = tail call i32 @usb_submit_urb(ptr noundef %35, i32 noundef %2) #24
  switch i32 %36, label %45 [
    i32 -19, label %37
    i32 0, label %64
  ]

37:                                               ; preds = %18
  %38 = load ptr, ptr %21, align 4
  %39 = getelementptr inbounds %struct.usb_device, ptr %38, i32 0, i32 3
  %40 = load i32, ptr %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_set_bit(i32 noundef 0, ptr noundef %0) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %43

43:                                               ; preds = %42, %37
  %44 = load ptr, ptr %12, align 4
  tail call void @netif_device_detach(ptr noundef %44) #24
  br label %64

45:                                               ; preds = %18
  %46 = load ptr, ptr %19, align 4
  %47 = getelementptr inbounds %struct.urb, ptr %46, i32 0, i32 20
  store i32 0, ptr %47, align 4
  %48 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 13
  %49 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %48) #24
  %50 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 9
  %51 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 9, i32 1
  %52 = load ptr, ptr %51, align 4
  store ptr %1, ptr %51, align 4
  store ptr %50, ptr %1, align 4
  %53 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  store ptr %52, ptr %53, align 4
  store volatile ptr %1, ptr %52, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %48, i32 noundef %49) #24
  %54 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 28
  %55 = load i32, ptr %54, align 4
  %56 = and i32 %55, 64
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %45
  %59 = load ptr, ptr %12, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %59, ptr noundef nonnull @.str.31, ptr noundef %1, i32 noundef %36) #25
  br label %60

60:                                               ; preds = %58, %45
  %61 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 2
  %62 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %61) #24
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @__napi_schedule(ptr noundef %61) #24
  br label %64

64:                                               ; preds = %63, %60, %43, %18, %11, %7, %3
  %65 = phi i32 [ 0, %11 ], [ 0, %7 ], [ 0, %3 ], [ %36, %18 ], [ -19, %43 ], [ %36, %60 ], [ %36, %63 ]
  ret i32 %65
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @read_bulk_callback(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 12
  %3 = load i32, ptr %2, align 4
  %4 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %74, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.rx_agg, ptr %5, i32 0, i32 3
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %74, label %11

11:                                               ; preds = %7
  %12 = load volatile i32, ptr %9, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %74

15:                                               ; preds = %11
  %16 = load volatile i32, ptr %9, align 4
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %74, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 4
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 6
  %23 = load volatile i32, ptr %22, align 4
  %24 = and i32 %23, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %74

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = tail call i64 @ktime_get_mono_fast_ns() #24
  %30 = getelementptr inbounds %struct.usb_device, ptr %28, i32 0, i32 15, i32 11, i32 22
  store volatile i64 %29, ptr %30, align 8
  switch i32 %3, label %68 [
    i32 0, label %31
    i32 -108, label %45
    i32 -71, label %53
    i32 -2, label %74
    i32 -62, label %64
  ]

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 20
  %33 = load i32, ptr %32, align 4
  %34 = icmp ult i32 %33, 60
  br i1 %34, label %72, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 13
  %37 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %36) #24
  %38 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 9
  %39 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 9, i32 1
  %40 = load ptr, ptr %39, align 4
  store ptr %5, ptr %39, align 4
  store ptr %38, ptr %5, align 4
  %41 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  store ptr %40, ptr %41, align 4
  store volatile ptr %5, ptr %40, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %36, i32 noundef %37) #24
  %42 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 2
  %43 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %42) #24
  br i1 %43, label %44, label %74

44:                                               ; preds = %35
  tail call void @__napi_schedule(ptr noundef %42) #24
  br label %74

45:                                               ; preds = %26
  %46 = load ptr, ptr %27, align 4
  %47 = getelementptr inbounds %struct.usb_device, ptr %46, i32 0, i32 3
  %48 = load i32, ptr %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  tail call void @_set_bit(i32 noundef 0, ptr noundef nonnull %9) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %51

51:                                               ; preds = %50, %45
  %52 = load ptr, ptr %20, align 4
  tail call void @netif_device_detach(ptr noundef %52) #24
  br label %74

53:                                               ; preds = %26
  %54 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 20
  store i32 0, ptr %54, align 4
  %55 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 13
  %56 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %55) #24
  %57 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 9
  %58 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 9, i32 1
  %59 = load ptr, ptr %58, align 4
  store ptr %5, ptr %58, align 4
  store ptr %57, ptr %5, align 4
  %60 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  store ptr %59, ptr %60, align 4
  store volatile ptr %5, ptr %59, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %55, i32 noundef %56) #24
  tail call void @_set_bit(i32 noundef 8, ptr noundef nonnull %9) #24
  %61 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 15
  %62 = load ptr, ptr @system_wq, align 4
  %63 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %62, ptr noundef %61, i32 noundef 1) #24
  br label %74

64:                                               ; preds = %26
  %65 = tail call i32 @net_ratelimit() #24
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %64
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %21, ptr noundef nonnull @.str.32) #25
  br label %72

68:                                               ; preds = %26
  %69 = tail call i32 @net_ratelimit() #24
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %21, ptr noundef nonnull @.str.33, i32 noundef %3) #25
  br label %72

72:                                               ; preds = %71, %68, %67, %64, %31
  %73 = tail call fastcc i32 @r8152_submit_rx(ptr noundef nonnull %9, ptr noundef nonnull %5, i32 noundef 2592)
  br label %74

74:                                               ; preds = %72, %53, %51, %44, %35, %26, %19, %15, %11, %7, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_submit_urb(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_detach(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_wake_queue(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_notice(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @crc32_le(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__tasklet_schedule(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_firmware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_firmware(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rtl8152_is_fw_mac_ok(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = load i32, ptr %1, align 1
  switch i32 %3, label %126 [
    i32 1, label %4
    i32 2, label %9
  ]

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %6 = load i8, ptr %5, align 8
  %7 = add i8 %6, -1
  %8 = icmp ult i8 %7, 16
  br i1 %8, label %14, label %126

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %11 = load i8, ptr %10, align 8
  %12 = add i8 %11, -3
  %13 = icmp ult i8 %12, 14
  br i1 %13, label %24, label %126

14:                                               ; preds = %4
  %15 = zext i8 %7 to i16
  %16 = lshr i16 -1537, %15
  %17 = and i16 %16, 1
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %126, label %19

19:                                               ; preds = %14
  %20 = sext i8 %7 to i32
  %21 = getelementptr inbounds [16 x i32], ptr @switch.table.rtl8152_is_fw_mac_ok, i32 0, i32 %20
  %22 = sext i8 %7 to i32
  %23 = getelementptr inbounds [16 x i32], ptr @switch.table.rtl8152_is_fw_mac_ok.118, i32 0, i32 %22
  br label %37

24:                                               ; preds = %9
  %25 = zext i8 %12 to i16
  %26 = lshr i16 15983, %25
  %27 = and i16 %26, 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %126, label %29

29:                                               ; preds = %24
  %30 = sext i8 %12 to i32
  %31 = getelementptr inbounds [14 x i32], ptr @switch.table.rtl8152_is_fw_mac_ok.119, i32 0, i32 %30
  %32 = load i32, ptr %31, align 4
  %33 = sext i8 %12 to i32
  %34 = getelementptr inbounds [14 x i32], ptr @switch.table.rtl8152_is_fw_mac_ok.120, i32 0, i32 %33
  %35 = sext i8 %12 to i32
  %36 = getelementptr inbounds [14 x i32], ptr @switch.table.rtl8152_is_fw_mac_ok.121, i32 0, i32 %35
  br label %37

37:                                               ; preds = %29, %19
  %38 = phi ptr [ %36, %29 ], [ %23, %19 ]
  %39 = phi i32 [ %32, %29 ], [ 63488, %19 ]
  %40 = phi ptr [ %34, %29 ], [ %21, %19 ]
  %41 = load i32, ptr %40, align 4
  %42 = load i32, ptr %38, align 4
  %43 = getelementptr inbounds %struct.fw_mac, ptr %1, i32 0, i32 1
  %44 = load i16, ptr %43, align 1
  %45 = zext i16 %44 to i32
  %46 = icmp ult i16 %44, 63
  br i1 %46, label %47, label %51

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds %struct.usb_interface, ptr %49, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %50, ptr noundef nonnull @.str.76) #25
  br label %126

51:                                               ; preds = %37
  %52 = getelementptr inbounds %struct.fw_block, ptr %1, i32 0, i32 1
  %53 = load i32, ptr %52, align 1
  %54 = icmp ult i32 %53, %45
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %57 = load ptr, ptr %56, align 8
  %58 = getelementptr inbounds %struct.usb_interface, ptr %57, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %58, ptr noundef nonnull @.str.77) #25
  br label %126

59:                                               ; preds = %51
  %60 = sub i32 %53, %45
  %61 = icmp ugt i32 %60, 3
  %62 = and i32 %60, 3
  %63 = icmp eq i32 %62, 0
  %64 = and i1 %61, %63
  br i1 %64, label %69, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %struct.usb_interface, ptr %67, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %68, ptr noundef nonnull @.str.78) #25
  br label %126

69:                                               ; preds = %59
  %70 = getelementptr inbounds %struct.fw_mac, ptr %1, i32 0, i32 2
  %71 = load i16, ptr %70, align 1
  %72 = zext i16 %71 to i32
  %73 = icmp eq i32 %39, %72
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds %struct.usb_interface, ptr %76, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %77, ptr noundef nonnull @.str.79) #25
  br label %126

78:                                               ; preds = %69
  %79 = getelementptr inbounds %struct.fw_mac, ptr %1, i32 0, i32 3
  %80 = load i16, ptr %79, align 1
  %81 = icmp eq i16 %80, -986
  br i1 %81, label %86, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %84 = load ptr, ptr %83, align 8
  %85 = getelementptr inbounds %struct.usb_interface, ptr %84, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %85, ptr noundef nonnull @.str.80) #25
  br label %126

86:                                               ; preds = %78
  %87 = getelementptr inbounds %struct.fw_mac, ptr %1, i32 0, i32 5
  %88 = load i16, ptr %87, align 1
  %89 = zext i16 %88 to i32
  %90 = icmp eq i32 %41, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %93 = load ptr, ptr %92, align 8
  %94 = getelementptr inbounds %struct.usb_interface, ptr %93, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %94, ptr noundef nonnull @.str.81) #25
  br label %126

95:                                               ; preds = %86
  %96 = getelementptr inbounds %struct.fw_mac, ptr %1, i32 0, i32 7
  %97 = load i16, ptr %96, align 1
  %98 = icmp eq i16 %97, -984
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %101 = load ptr, ptr %100, align 8
  %102 = getelementptr inbounds %struct.usb_interface, ptr %101, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %102, ptr noundef nonnull @.str.82) #25
  br label %126

103:                                              ; preds = %95
  %104 = getelementptr inbounds %struct.fw_mac, ptr %1, i32 0, i32 8
  %105 = load i16, ptr %104, align 1
  %106 = zext i16 %105 to i32
  %107 = icmp ult i32 %42, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %103
  %109 = icmp ugt i32 %42, %106
  br i1 %109, label %114, label %126

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %112 = load ptr, ptr %111, align 8
  %113 = getelementptr inbounds %struct.usb_interface, ptr %112, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %113, ptr noundef nonnull @.str.83) #25
  br label %126

114:                                              ; preds = %123, %108
  %115 = phi i32 [ %124, %123 ], [ %106, %108 ]
  %116 = getelementptr %struct.fw_mac, ptr %1, i32 0, i32 9, i32 %115
  %117 = load i16, ptr %116, align 1
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %121 = load ptr, ptr %120, align 8
  %122 = getelementptr inbounds %struct.usb_interface, ptr %121, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %122, ptr noundef nonnull @.str.84, i32 noundef %115) #25
  br label %126

123:                                              ; preds = %114
  %124 = add nuw nsw i32 %115, 1
  %125 = icmp eq i32 %124, %42
  br i1 %125, label %126, label %114

126:                                              ; preds = %123, %119, %110, %108, %99, %91, %82, %74, %65, %55, %47, %24, %14, %9, %4, %2
  %127 = phi i1 [ false, %4 ], [ false, %47 ], [ false, %55 ], [ false, %65 ], [ false, %74 ], [ false, %82 ], [ false, %91 ], [ false, %99 ], [ false, %110 ], [ false, %119 ], [ false, %9 ], [ false, %2 ], [ true, %108 ], [ false, %14 ], [ false, %24 ], [ true, %123 ]
  ret i1 %127
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rtl8152_is_fw_phy_union_ok(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %4 = load i8, ptr %3, align 8
  switch i8 %4, label %44 [
    i8 11, label %5
    i8 12, label %5
    i8 13, label %5
    i8 14, label %5
    i8 16, label %5
  ]

5:                                                ; preds = %2, %2, %2, %2, %2
  %6 = getelementptr inbounds %struct.fw_phy_union, ptr %1, i32 0, i32 1
  %7 = load i16, ptr %6, align 1
  %8 = getelementptr inbounds %struct.fw_block, ptr %1, i32 0, i32 1
  %9 = load i32, ptr %8, align 1
  %10 = zext i16 %7 to i32
  %11 = icmp ugt i16 %7, 57
  %12 = icmp ugt i32 %9, %10
  %13 = select i1 %11, i1 %12, i1 false
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.usb_interface, ptr %16, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %17, ptr noundef nonnull @.str.77) #25
  br label %44

18:                                               ; preds = %5
  %19 = sub i32 %9, %10
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.usb_interface, ptr %24, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %25, ptr noundef nonnull @.str.78) #25
  br label %44

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.fw_phy_union, ptr %1, i32 0, i32 6
  %28 = load i8, ptr %27, align 1
  %29 = icmp ugt i8 %28, 2
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = zext i8 %28 to i32
  %32 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %struct.usb_interface, ptr %33, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %34, ptr noundef nonnull @.str.87, i32 noundef %31) #25
  br label %44

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.fw_phy_union, ptr %1, i32 0, i32 7
  %37 = load i8, ptr %36, align 1
  %38 = icmp ugt i8 %37, 8
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = zext i8 %37 to i32
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 3
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.usb_interface, ptr %42, i32 0, i32 7
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %43, ptr noundef nonnull @.str.88, i32 noundef %40) #25
  br label %44

44:                                               ; preds = %39, %35, %30, %22, %14, %2
  %45 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %22 ], [ false, %30 ], [ false, %39 ], [ true, %35 ]
  ret i1 %45
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @crypto_alloc_shash(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_shash_digest(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @crypto_destroy_tfm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb_autopm_get_interface_async(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @write_bulk_callback(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 12
  %3 = load i32, ptr %2, align 4
  %4 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %62, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.tx_agg, ptr %5, i32 0, i32 2
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %62, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq i32 %3, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = tail call i32 @net_ratelimit() #24
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %13, ptr noundef nonnull @.str.97, i32 noundef %3) #25
  br label %19

19:                                               ; preds = %18, %15
  %20 = getelementptr inbounds %struct.tx_agg, ptr %5, i32 0, i32 5
  %21 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 36, i32 5
  br label %30

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.tx_agg, ptr %5, i32 0, i32 5
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 36, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, %24
  store i32 %27, ptr %25, align 4
  %28 = getelementptr inbounds %struct.tx_agg, ptr %5, i32 0, i32 6
  %29 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 36, i32 3
  br label %30

30:                                               ; preds = %22, %19
  %31 = phi ptr [ %29, %22 ], [ %21, %19 ]
  %32 = phi ptr [ %28, %22 ], [ %20, %19 ]
  %33 = load i32, ptr %32, align 4
  %34 = load i32, ptr %31, align 4
  %35 = add i32 %34, %33
  store i32 %35, ptr %31, align 4
  %36 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 14
  %37 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %36) #24
  %38 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 10
  %39 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 10, i32 1
  %40 = load ptr, ptr %39, align 4
  store ptr %5, ptr %39, align 4
  store ptr %38, ptr %5, align 4
  %41 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  store ptr %40, ptr %41, align 4
  store volatile ptr %5, ptr %40, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %36, i32 noundef %37) #24
  %42 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  tail call void @usb_autopm_put_interface_async(ptr noundef %43) #24
  %44 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 6
  %45 = load volatile i32, ptr %44, align 4
  %46 = and i32 %45, 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %62

48:                                               ; preds = %30
  %49 = load volatile i32, ptr %9, align 4
  %50 = and i32 %49, 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = load volatile i32, ptr %9, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 11
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, %57
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.r8152, ptr %9, i32 0, i32 20
  tail call fastcc void @tasklet_schedule(ptr noundef %61)
  br label %62

62:                                               ; preds = %60, %56, %52, %48, %30, %7, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_autopm_put_interface_async(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__csum_ipv6_magic(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_checksum_help(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__skb_gso_segment(ptr noundef, i64 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tasklet_unlock_wait(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_open(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 1408
  %3 = getelementptr i8, ptr %0, i32 1888
  %4 = tail call i32 @work_busy(ptr noundef %3) #24
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %3) #24
  tail call void @rtl_hw_phy_work_func_t(ptr noundef %3)
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr i8, ptr %0, i32 1632
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.usb_interface, ptr %11, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.usb_host_interface, ptr %13, i32 0, i32 3
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr i8, ptr %0, i32 1836
  store i32 0, ptr %16, align 4
  %17 = getelementptr i8, ptr %0, i32 1840
  store i32 0, ptr %17, align 8
  %18 = getelementptr i8, ptr %0, i32 1772
  store volatile ptr %18, ptr %18, align 4
  %19 = getelementptr i8, ptr %0, i32 1776
  store ptr %18, ptr %19, align 4
  %20 = getelementptr i8, ptr %0, i32 1796
  store volatile ptr %20, ptr %20, align 4
  %21 = getelementptr i8, ptr %0, i32 1800
  store ptr %20, ptr %21, align 4
  %22 = getelementptr i8, ptr %0, i32 1788
  store volatile ptr %22, ptr %22, align 4
  %23 = getelementptr i8, ptr %0, i32 1792
  store ptr %22, ptr %23, align 4
  %24 = getelementptr i8, ptr %0, i32 1804
  %25 = getelementptr i8, ptr %0, i32 1816
  store i32 0, ptr %25, align 4
  store ptr %24, ptr %24, align 4
  %26 = getelementptr i8, ptr %0, i32 1808
  store ptr %24, ptr %26, align 4
  %27 = getelementptr i8, ptr %0, i32 1812
  store i32 0, ptr %27, align 4
  %28 = getelementptr i8, ptr %0, i32 1820
  %29 = getelementptr i8, ptr %0, i32 1832
  store i32 0, ptr %29, align 4
  store ptr %28, ptr %28, align 4
  %30 = getelementptr i8, ptr %0, i32 1824
  store ptr %28, ptr %30, align 4
  %31 = getelementptr i8, ptr %0, i32 1828
  store i32 0, ptr %31, align 4
  %32 = getelementptr i8, ptr %0, i32 2124
  store volatile i32 0, ptr %32, align 4
  %33 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %34 = icmp eq ptr %33, null
  br i1 %34, label %151, label %35

35:                                               ; preds = %9
  %36 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %37 = icmp eq ptr %36, null
  br i1 %37, label %151, label %38

38:                                               ; preds = %35
  %39 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %40 = icmp eq ptr %39, null
  br i1 %40, label %151, label %41

41:                                               ; preds = %38
  %42 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %43 = icmp eq ptr %42, null
  br i1 %43, label %151, label %44

44:                                               ; preds = %41
  %45 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %46 = icmp eq ptr %45, null
  br i1 %46, label %151, label %47

47:                                               ; preds = %44
  %48 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %49 = icmp eq ptr %48, null
  br i1 %49, label %151, label %50

50:                                               ; preds = %47
  %51 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %52 = icmp eq ptr %51, null
  br i1 %52, label %151, label %53

53:                                               ; preds = %50
  %54 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %55 = icmp eq ptr %54, null
  br i1 %55, label %151, label %56

56:                                               ; preds = %53
  %57 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %58 = icmp eq ptr %57, null
  br i1 %58, label %151, label %59

59:                                               ; preds = %56
  %60 = tail call fastcc ptr @alloc_rx_agg(ptr noundef %2, i32 noundef 3264) #24
  %61 = icmp eq ptr %60, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %59
  %63 = tail call noalias align 64 ptr @__kmalloc(i32 noundef 16384, i32 noundef 3264) #26
  %64 = icmp eq ptr %63, null
  br i1 %64, label %151, label %65

65:                                               ; preds = %62
  %66 = tail call ptr @usb_alloc_urb(i32 noundef 0, i32 noundef 3264) #24
  %67 = icmp eq ptr %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %106, %93, %80, %65
  %69 = phi ptr [ %63, %65 ], [ %78, %80 ], [ %91, %93 ], [ %104, %106 ]
  tail call void @kfree(ptr noundef nonnull %69) #24
  br label %151

70:                                               ; preds = %65
  %71 = getelementptr i8, ptr %0, i32 1644
  store volatile ptr %71, ptr %71, align 4
  %72 = getelementptr i8, ptr %0, i32 1648
  %73 = getelementptr i8, ptr %0, i32 1656
  store ptr %2, ptr %73, align 4
  %74 = getelementptr i8, ptr %0, i32 1652
  store ptr %66, ptr %74, align 4
  %75 = getelementptr i8, ptr %0, i32 1660
  store ptr %63, ptr %75, align 4
  %76 = getelementptr i8, ptr %0, i32 1664
  store ptr %63, ptr %76, align 4
  %77 = load ptr, ptr %21, align 4
  store ptr %71, ptr %21, align 4
  store ptr %20, ptr %71, align 4
  store ptr %77, ptr %72, align 4
  store volatile ptr %71, ptr %77, align 4
  %78 = tail call noalias align 64 ptr @__kmalloc(i32 noundef 16384, i32 noundef 3264) #26
  %79 = icmp eq ptr %78, null
  br i1 %79, label %151, label %80

80:                                               ; preds = %70
  %81 = tail call ptr @usb_alloc_urb(i32 noundef 0, i32 noundef 3264) #24
  %82 = icmp eq ptr %81, null
  br i1 %82, label %68, label %83

83:                                               ; preds = %80
  %84 = getelementptr i8, ptr %0, i32 1676
  store volatile ptr %84, ptr %84, align 4
  %85 = getelementptr i8, ptr %0, i32 1680
  %86 = getelementptr i8, ptr %0, i32 1688
  store ptr %2, ptr %86, align 4
  %87 = getelementptr i8, ptr %0, i32 1684
  store ptr %81, ptr %87, align 4
  %88 = getelementptr i8, ptr %0, i32 1692
  store ptr %78, ptr %88, align 4
  %89 = getelementptr i8, ptr %0, i32 1696
  store ptr %78, ptr %89, align 4
  %90 = load ptr, ptr %21, align 4
  store ptr %84, ptr %21, align 4
  store ptr %20, ptr %84, align 4
  store ptr %90, ptr %85, align 4
  store volatile ptr %84, ptr %90, align 4
  %91 = tail call noalias align 64 ptr @__kmalloc(i32 noundef 16384, i32 noundef 3264) #26
  %92 = icmp eq ptr %91, null
  br i1 %92, label %151, label %93

93:                                               ; preds = %83
  %94 = tail call ptr @usb_alloc_urb(i32 noundef 0, i32 noundef 3264) #24
  %95 = icmp eq ptr %94, null
  br i1 %95, label %68, label %96

96:                                               ; preds = %93
  %97 = getelementptr i8, ptr %0, i32 1708
  store volatile ptr %97, ptr %97, align 4
  %98 = getelementptr i8, ptr %0, i32 1712
  %99 = getelementptr i8, ptr %0, i32 1720
  store ptr %2, ptr %99, align 4
  %100 = getelementptr i8, ptr %0, i32 1716
  store ptr %94, ptr %100, align 4
  %101 = getelementptr i8, ptr %0, i32 1724
  store ptr %91, ptr %101, align 4
  %102 = getelementptr i8, ptr %0, i32 1728
  store ptr %91, ptr %102, align 4
  %103 = load ptr, ptr %21, align 4
  store ptr %97, ptr %21, align 4
  store ptr %20, ptr %97, align 4
  store ptr %103, ptr %98, align 4
  store volatile ptr %97, ptr %103, align 4
  %104 = tail call noalias align 64 ptr @__kmalloc(i32 noundef 16384, i32 noundef 3264) #26
  %105 = icmp eq ptr %104, null
  br i1 %105, label %151, label %106

106:                                              ; preds = %96
  %107 = tail call ptr @usb_alloc_urb(i32 noundef 0, i32 noundef 3264) #24
  %108 = icmp eq ptr %107, null
  br i1 %108, label %68, label %109

109:                                              ; preds = %106
  %110 = getelementptr i8, ptr %0, i32 1740
  store volatile ptr %110, ptr %110, align 4
  %111 = getelementptr i8, ptr %0, i32 1744
  %112 = getelementptr i8, ptr %0, i32 1752
  store ptr %2, ptr %112, align 4
  %113 = getelementptr i8, ptr %0, i32 1748
  store ptr %107, ptr %113, align 4
  %114 = getelementptr i8, ptr %0, i32 1756
  store ptr %104, ptr %114, align 4
  %115 = getelementptr i8, ptr %0, i32 1760
  store ptr %104, ptr %115, align 4
  %116 = load ptr, ptr %21, align 4
  store ptr %110, ptr %21, align 4
  store ptr %20, ptr %110, align 4
  store ptr %116, ptr %111, align 4
  store volatile ptr %110, ptr %116, align 4
  %117 = tail call ptr @usb_alloc_urb(i32 noundef 0, i32 noundef 3264) #24
  %118 = getelementptr i8, ptr %0, i32 1640
  store ptr %117, ptr %118, align 8
  %119 = icmp eq ptr %117, null
  br i1 %119, label %151, label %120

120:                                              ; preds = %109
  %121 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %122 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %121, i32 noundef 3264, i32 noundef 2) #23
  %123 = getelementptr i8, ptr %0, i32 2204
  store ptr %122, ptr %123, align 4
  %124 = icmp eq ptr %122, null
  br i1 %124, label %151, label %125

125:                                              ; preds = %120
  %126 = getelementptr %struct.usb_host_endpoint, ptr %15, i32 2, i32 0, i32 5
  %127 = load i8, ptr %126, align 2
  %128 = zext i8 %127 to i32
  %129 = getelementptr i8, ptr %0, i32 2132
  store i32 %128, ptr %129, align 4
  %130 = load ptr, ptr %118, align 8
  %131 = getelementptr i8, ptr %0, i32 1412
  %132 = load ptr, ptr %131, align 4
  %133 = getelementptr i8, ptr %0, i32 2184
  %134 = load i32, ptr %133, align 8
  %135 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 8
  store ptr %132, ptr %135, align 4
  %136 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 10
  store i32 %134, ptr %136, align 4
  %137 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 14
  store ptr %122, ptr %137, align 4
  %138 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 19
  store i32 2, ptr %138, align 4
  %139 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 28
  store ptr @intr_callback, ptr %139, align 4
  %140 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 27
  store ptr %2, ptr %140, align 4
  %141 = getelementptr inbounds %struct.usb_device, ptr %132, i32 0, i32 4
  %142 = load i32, ptr %141, align 4
  %143 = icmp eq i32 %142, 3
  %144 = icmp ugt i32 %142, 4
  %145 = or i1 %143, %144
  br i1 %145, label %146, label %152

146:                                              ; preds = %125
  %147 = tail call i32 @llvm.smax.i32(i32 %128, i32 1) #24
  %148 = tail call i32 @llvm.umin.i32(i32 %147, i32 16) #24
  %149 = add nsw i32 %148, -1
  %150 = shl nuw nsw i32 1, %149
  br label %152

151:                                              ; preds = %120, %109, %96, %83, %70, %68, %62, %59, %56, %53, %50, %47, %44, %41, %38, %35, %9
  tail call fastcc void @free_all_mem(ptr noundef %2) #24
  br label %188

152:                                              ; preds = %146, %125
  %153 = phi i32 [ %150, %146 ], [ %128, %125 ]
  %154 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 25
  store i32 %153, ptr %154, align 4
  %155 = getelementptr inbounds %struct.urb, ptr %130, i32 0, i32 23
  store i32 -1, ptr %155, align 4
  %156 = load ptr, ptr %10, align 8
  %157 = tail call i32 @usb_autopm_get_interface(ptr noundef %156) #24
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %186, label %159

159:                                              ; preds = %152
  %160 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %160) #24
  %161 = getelementptr i8, ptr %0, i32 2032
  %162 = load ptr, ptr %161, align 4
  tail call void %162(ptr noundef %2) #24
  tail call void @netif_carrier_off(ptr noundef %0) #24
  %163 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %164 = load ptr, ptr %163, align 64
  %165 = getelementptr inbounds %struct.netdev_queue, ptr %164, i32 0, i32 12
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %165) #24
  tail call void @_set_bit(i32 noundef 2, ptr noundef %2) #24
  %166 = load ptr, ptr %118, align 8
  %167 = tail call i32 @usb_submit_urb(ptr noundef %166, i32 noundef 3264) #24
  switch i32 %167, label %171 [
    i32 0, label %177
    i32 -19, label %168
  ]

168:                                              ; preds = %159
  %169 = getelementptr i8, ptr %0, i32 1636
  %170 = load ptr, ptr %169, align 4
  tail call void @netif_device_detach(ptr noundef %170) #24
  br label %171

171:                                              ; preds = %168, %159
  %172 = getelementptr i8, ptr %0, i32 2140
  %173 = load i32, ptr %172, align 4
  %174 = and i32 %173, 32
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %184, label %176

176:                                              ; preds = %171
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.98, i32 noundef %167) #25
  br label %184

177:                                              ; preds = %159
  %178 = getelementptr i8, ptr %0, i32 1416
  tail call void @napi_enable(ptr noundef %178) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !16
  %179 = getelementptr i8, ptr %0, i32 2004
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %179) #24, !srcloc !9
  %180 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %179, ptr %179, i32 1, ptr elementtype(i32) %179) #24, !srcloc !17
  tail call void @mutex_unlock(ptr noundef %160) #24
  %181 = load ptr, ptr %10, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %181) #24
  %182 = getelementptr i8, ptr %0, i32 1984
  store ptr @rtl_notifier, ptr %182, align 8
  %183 = tail call i32 @register_pm_notifier(ptr noundef %182) #24
  br label %188

184:                                              ; preds = %176, %171
  tail call void @mutex_unlock(ptr noundef %160) #24
  %185 = load ptr, ptr %10, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %185) #24
  br label %186

186:                                              ; preds = %184, %152
  %187 = phi i32 [ %157, %152 ], [ %167, %184 ]
  tail call fastcc void @free_all_mem(ptr noundef %2)
  br label %188

188:                                              ; preds = %186, %177, %151
  %189 = phi i32 [ 0, %177 ], [ -12, %151 ], [ %187, %186 ]
  ret i32 %189
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_close(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 1408
  %3 = getelementptr i8, ptr %0, i32 1984
  %4 = tail call i32 @unregister_pm_notifier(ptr noundef %3) #24
  %5 = getelementptr i8, ptr %0, i32 1996
  %6 = getelementptr i8, ptr %0, i32 2004
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %6) #24, !srcloc !9
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %6, ptr %6, i32 1, ptr elementtype(i32) %6) #24, !srcloc !10
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !11
  tail call void @tasklet_unlock_wait(ptr noundef %5) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !12
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %2) #24
  %8 = getelementptr i8, ptr %0, i32 1640
  %9 = load ptr, ptr %8, align 8
  tail call void @usb_kill_urb(ptr noundef %9) #24
  %10 = getelementptr i8, ptr %0, i32 1844
  %11 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %10) #24
  %12 = getelementptr i8, ptr %0, i32 1416
  tail call void @napi_disable(ptr noundef %12) #24
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %14 = load ptr, ptr %13, align 64
  %15 = getelementptr inbounds %struct.netdev_queue, ptr %14, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %15) #24
  %16 = getelementptr i8, ptr %0, i32 1632
  %17 = load ptr, ptr %16, align 8
  %18 = tail call i32 @usb_autopm_get_interface(ptr noundef %17) #24
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %1
  %21 = load volatile i32, ptr %2, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20, %1
  tail call fastcc void @rtl_drop_queued_tx(ptr noundef %2)
  tail call fastcc void @rtl_stop_rx(ptr noundef %2)
  br label %29

25:                                               ; preds = %20
  %26 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %26) #24
  %27 = getelementptr i8, ptr %0, i32 2036
  %28 = load ptr, ptr %27, align 4
  tail call void %28(ptr noundef %2) #24
  tail call void @mutex_unlock(ptr noundef %26) #24
  br label %29

29:                                               ; preds = %25, %24
  %30 = icmp eq i32 %18, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = load ptr, ptr %16, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %32) #24
  br label %33

33:                                               ; preds = %31, %29
  tail call fastcc void @free_all_mem(ptr noundef %2)
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_start_xmit(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr i8, ptr %1, i32 1408
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 3
  %7 = load i8, ptr %6, align 1
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @skb_tstamp_tx(ptr noundef %0, ptr noundef null) #24
  br label %11

11:                                               ; preds = %10, %2
  %12 = getelementptr i8, ptr %1, i32 1804
  tail call void @skb_queue_tail(ptr noundef %12, ptr noundef %0) #24
  %13 = getelementptr i8, ptr %1, i32 1796
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, %13
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = load volatile i32, ptr %3, align 4
  %18 = and i32 %17, 16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  tail call void @_set_bit(i32 noundef 6, ptr noundef %3) #24
  %21 = getelementptr i8, ptr %1, i32 1844
  %22 = load ptr, ptr @system_wq, align 4
  %23 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %22, ptr noundef %21, i32 noundef 0) #24
  br label %44

24:                                               ; preds = %16
  %25 = getelementptr i8, ptr %1, i32 1412
  %26 = load ptr, ptr %25, align 4
  %27 = tail call i64 @ktime_get_mono_fast_ns() #24
  %28 = getelementptr inbounds %struct.usb_device, ptr %26, i32 0, i32 15, i32 11, i32 22
  store volatile i64 %27, ptr %28, align 8
  %29 = getelementptr i8, ptr %1, i32 2000
  %30 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %29) #24
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %24
  %33 = getelementptr i8, ptr %1, i32 1996
  tail call void @__tasklet_schedule(ptr noundef %33) #24
  br label %44

34:                                               ; preds = %11
  %35 = getelementptr i8, ptr %1, i32 1812
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr i8, ptr %1, i32 2144
  %38 = load i32, ptr %37, align 8
  %39 = icmp ugt i32 %36, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 87
  %42 = load ptr, ptr %41, align 64
  %43 = getelementptr inbounds %struct.netdev_queue, ptr %42, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %43) #24
  br label %44

44:                                               ; preds = %40, %34, %32, %24, %20
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define internal i64 @rtl8152_features_check(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, i64 noundef %2) #13 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 4
  %7 = load i16, ptr %6, align 4
  %8 = icmp eq i16 %7, 0
  %9 = select i1 %8, i32 2047, i32 127
  %10 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 17
  %13 = load i16, ptr %12, align 2
  %14 = zext i16 %13 to i32
  %15 = getelementptr i8, ptr %11, i32 %14
  %16 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %17 = load ptr, ptr %16, align 4
  %18 = ptrtoint ptr %15 to i32
  %19 = ptrtoint ptr %17 to i32
  %20 = sub i32 %18, %19
  br i1 %8, label %21, label %28

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %23 = load i16, ptr %22, align 8
  %24 = and i16 %23, 96
  %25 = icmp eq i16 %24, 96
  %26 = icmp sgt i32 %20, %9
  %27 = select i1 %25, i1 %26, i1 false
  br i1 %27, label %30, label %32

28:                                               ; preds = %3
  %29 = icmp sgt i32 %20, %9
  br i1 %29, label %30, label %32

30:                                               ; preds = %28, %21
  %31 = and i64 %2, -34359672859
  br label %39

32:                                               ; preds = %28, %21
  %33 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %34 = load i32, ptr %33, align 8
  %35 = add i32 %34, -16377
  %36 = icmp ult i32 %35, -16385
  %37 = and i64 %2, -34359672833
  %38 = select i1 %36, i64 %37, i64 %2
  br label %39

39:                                               ; preds = %32, %30
  %40 = phi i64 [ %31, %30 ], [ %38, %32 ]
  ret i64 %40
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_set_rx_mode(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %3 = load volatile i32, ptr %2, align 4
  %4 = and i32 %3, 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr i8, ptr %0, i32 1408
  tail call void @_set_bit(i32 noundef 1, ptr noundef %7) #24
  %8 = getelementptr i8, ptr %0, i32 1844
  %9 = load ptr, ptr @system_wq, align 4
  %10 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %9, ptr noundef %8, i32 noundef 0) #24
  br label %11

11:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_mac_address(ptr noundef %0, ptr noundef %1) #0 {
  %3 = tail call fastcc i32 @__rtl8152_set_mac_address(ptr noundef %0, ptr noundef %1, i1 noundef zeroext false)
  ret i32 %3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_validate_addr(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_ioctl(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr i8, ptr %0, i32 1408
  %5 = getelementptr inbounds %struct.ifreq, ptr %1, i32 0, i32 1
  %6 = load volatile i32, ptr %4, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %37

9:                                                ; preds = %3
  %10 = getelementptr i8, ptr %0, i32 1632
  %11 = load ptr, ptr %10, align 8
  %12 = tail call i32 @usb_autopm_get_interface(ptr noundef %11) #24
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  switch i32 %2, label %34 [
    i32 35143, label %15
    i32 35144, label %16
    i32 35145, label %24
  ]

15:                                               ; preds = %14
  store i16 32, ptr %5, align 2
  br label %34

16:                                               ; preds = %14
  %17 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %17) #24
  %18 = getelementptr inbounds %struct.mii_ioctl_data, ptr %5, i32 0, i32 1
  %19 = load i16, ptr %18, align 2
  %20 = shl i16 %19, 1
  %21 = add i16 %20, -23552
  %22 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %4, i16 noundef zeroext %21) #24
  %23 = getelementptr inbounds %struct.mii_ioctl_data, ptr %5, i32 0, i32 3
  store i16 %22, ptr %23, align 2
  tail call void @mutex_unlock(ptr noundef %17) #24
  br label %34

24:                                               ; preds = %14
  %25 = tail call zeroext i1 @capable(i32 noundef 12) #24
  br i1 %25, label %26, label %34

26:                                               ; preds = %24
  %27 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %27) #24
  %28 = getelementptr inbounds %struct.mii_ioctl_data, ptr %5, i32 0, i32 1
  %29 = load i16, ptr %28, align 2
  %30 = getelementptr inbounds %struct.ifreq, ptr %1, i32 0, i32 1, i32 0, i32 1
  %31 = load i16, ptr %30, align 2
  %32 = shl i16 %29, 1
  %33 = add i16 %32, -23552
  tail call fastcc void @ocp_reg_write(ptr noundef %4, i16 noundef zeroext %33, i16 noundef zeroext %31) #24
  tail call void @mutex_unlock(ptr noundef %27) #24
  br label %34

34:                                               ; preds = %26, %24, %16, %15, %14
  %35 = phi i32 [ %12, %26 ], [ %12, %16 ], [ %12, %15 ], [ -1, %24 ], [ -95, %14 ]
  %36 = load ptr, ptr %10, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %36) #24
  br label %37

37:                                               ; preds = %34, %9, %3
  %38 = phi i32 [ -19, %3 ], [ %12, %9 ], [ %35, %34 ]
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_change_mtu(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 2208
  %5 = load i8, ptr %4, align 8
  switch i8 %5, label %8 [
    i8 1, label %6
    i8 2, label %6
    i8 7, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  store i32 %1, ptr %7, align 4
  br label %54

8:                                                ; preds = %2
  %9 = getelementptr i8, ptr %0, i32 1632
  %10 = load ptr, ptr %9, align 8
  %11 = tail call i32 @usb_autopm_get_interface(ptr noundef %10) #24
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %54, label %13

13:                                               ; preds = %8
  %14 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %14) #24
  %15 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  store i32 %1, ptr %15, align 4
  %16 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %17 = load volatile i32, ptr %16, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %52, label %20

20:                                               ; preds = %13
  %21 = getelementptr i8, ptr %0, i32 2064
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void %22(ptr noundef %3) #24
  br label %25

25:                                               ; preds = %24, %20
  %26 = load volatile i32, ptr %16, align 4
  %27 = and i32 %26, 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %31 = load ptr, ptr %30, align 64
  %32 = getelementptr inbounds %struct.netdev_queue, ptr %31, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %32) #24
  %33 = getelementptr i8, ptr %0, i32 1416
  tail call void @napi_disable(ptr noundef %33) #24
  %34 = getelementptr i8, ptr %0, i32 1996
  %35 = getelementptr i8, ptr %0, i32 2004
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %35) #24, !srcloc !9
  %36 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %35, ptr %35, i32 1, ptr elementtype(i32) %35) #24, !srcloc !10
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !11
  tail call void @tasklet_unlock_wait(ptr noundef %34) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !12
  %37 = getelementptr i8, ptr %0, i32 2028
  %38 = load ptr, ptr %37, align 4
  tail call void %38(ptr noundef %3) #24
  %39 = getelementptr i8, ptr %0, i32 2024
  %40 = load ptr, ptr %39, align 4
  %41 = tail call i32 %40(ptr noundef %3) #24
  tail call fastcc void @rtl_start_rx(ptr noundef %3)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %35) #24, !srcloc !9
  %42 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %35, ptr %35, i32 1, ptr elementtype(i32) %35) #24, !srcloc !17
  tail call void @napi_enable(ptr noundef %33) #24
  %43 = load volatile i32, ptr %16, align 4
  %44 = and i32 %43, 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %29
  tail call void @_set_bit(i32 noundef 1, ptr noundef %3) #24
  %47 = getelementptr i8, ptr %0, i32 1844
  %48 = load ptr, ptr @system_wq, align 4
  %49 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %48, ptr noundef %47, i32 noundef 0) #24
  br label %50

50:                                               ; preds = %46, %29
  %51 = load ptr, ptr %30, align 64
  tail call void @netif_tx_wake_queue(ptr noundef %51) #24
  br label %52

52:                                               ; preds = %50, %25, %13
  tail call void @mutex_unlock(ptr noundef %14) #24
  %53 = load ptr, ptr %9, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %53) #24
  br label %54

54:                                               ; preds = %52, %8, %6
  %55 = phi i32 [ %11, %52 ], [ 0, %6 ], [ %11, %8 ]
  ret i32 %55
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_tx_timeout(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 2140
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 128
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.103) #25
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr i8, ptr %0, i32 1632
  %10 = load ptr, ptr %9, align 8
  tail call void @usb_queue_reset_device(ptr noundef %10) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_features(ptr noundef %0, i64 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %4 = load i64, ptr %3, align 16
  %5 = getelementptr i8, ptr %0, i32 1408
  %6 = getelementptr i8, ptr %0, i32 1632
  %7 = load ptr, ptr %6, align 8
  %8 = tail call i32 @usb_autopm_get_interface(ptr noundef %7) #24
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = xor i64 %4, %1
  %12 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %12) #24
  %13 = and i64 %11, 256
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = and i64 %1, 256
  %17 = icmp ne i64 %16, 0
  tail call fastcc void @rtl_rx_vlan_en(ptr noundef %5, i1 noundef zeroext %17)
  br label %18

18:                                               ; preds = %15, %10
  tail call void @mutex_unlock(ptr noundef %12) #24
  %19 = load ptr, ptr %6, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %19) #24
  br label %20

20:                                               ; preds = %18, %2
  ret i32 %8
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @work_busy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl_notifier(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readnone %2) #0 {
  switch i32 %1, label %11 [
    i32 1, label %4
    i32 3, label %4
    i32 2, label %8
    i32 4, label %8
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr i8, ptr %0, i32 -352
  %6 = load ptr, ptr %5, align 8
  %7 = tail call i32 @usb_autopm_get_interface(ptr noundef %6) #24
  br label %11

8:                                                ; preds = %3, %3
  %9 = getelementptr i8, ptr %0, i32 -352
  %10 = load ptr, ptr %9, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %10) #24
  br label %11

11:                                               ; preds = %8, %4, %3
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pm_notifier(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @free_all_mem(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 13
  %3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %2) #24
  %4 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 7
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, %4
  br i1 %6, label %39, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 24
  br label %9

9:                                                ; preds = %36, %7
  %10 = phi ptr [ %5, %7 ], [ %12, %36 ]
  %11 = getelementptr i8, ptr %10, i32 -8
  %12 = load ptr, ptr %10, align 4
  %13 = getelementptr i8, ptr %10, i32 4
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  store ptr %14, ptr %15, align 4
  store volatile ptr %12, ptr %14, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %10, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %13, align 4
  %16 = getelementptr i8, ptr %10, i32 8
  %17 = load ptr, ptr %16, align 4
  tail call void @usb_free_urb(ptr noundef %17) #24
  %18 = getelementptr i8, ptr %10, i32 16
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.page, ptr %19, i32 0, i32 1
  %21 = load volatile i32, ptr %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24, !prof !24

24:                                               ; preds = %9
  %25 = add i32 %21, -1
  br label %28

26:                                               ; preds = %9
  %27 = ptrtoint ptr %19 to i32
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i32 [ %25, %24 ], [ %27, %26 ]
  %30 = inttoptr i32 %29 to ptr
  %31 = getelementptr inbounds %struct.page, ptr %30, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %31) #24, !srcloc !9
  %32 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %31, ptr %31, i32 1, ptr elementtype(i32) %31) #24, !srcloc !27
  %33 = extractvalue { i32, i32 } %32, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !28
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %28
  tail call void @__put_page(ptr noundef %30) #24
  br label %36

36:                                               ; preds = %35, %28
  tail call void @kfree(ptr noundef %11) #24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %8) #24, !srcloc !9
  %37 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 1, ptr elementtype(i32) %8) #24, !srcloc !17
  %38 = icmp eq ptr %12, %4
  br i1 %38, label %39, label %9

39:                                               ; preds = %36, %1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %2, i32 noundef %3) #24
  %40 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 24
  %41 = load volatile i32, ptr %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !24

43:                                               ; preds = %39
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 1982, i32 noundef 9, ptr noundef null) #24
  br label %44

44:                                               ; preds = %43, %39
  %45 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 0, i32 1
  %46 = load ptr, ptr %45, align 4
  tail call void @usb_free_urb(ptr noundef %46) #24
  store ptr null, ptr %45, align 4
  %47 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 0, i32 3
  %48 = load ptr, ptr %47, align 4
  tail call void @kfree(ptr noundef %48) #24
  store ptr null, ptr %47, align 4
  %49 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 0, i32 4
  store ptr null, ptr %49, align 4
  %50 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 1, i32 1
  %51 = load ptr, ptr %50, align 4
  tail call void @usb_free_urb(ptr noundef %51) #24
  store ptr null, ptr %50, align 4
  %52 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 1, i32 3
  %53 = load ptr, ptr %52, align 4
  tail call void @kfree(ptr noundef %53) #24
  store ptr null, ptr %52, align 4
  %54 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 1, i32 4
  store ptr null, ptr %54, align 4
  %55 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 2, i32 1
  %56 = load ptr, ptr %55, align 4
  tail call void @usb_free_urb(ptr noundef %56) #24
  store ptr null, ptr %55, align 4
  %57 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 2, i32 3
  %58 = load ptr, ptr %57, align 4
  tail call void @kfree(ptr noundef %58) #24
  store ptr null, ptr %57, align 4
  %59 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 2, i32 4
  store ptr null, ptr %59, align 4
  %60 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 3, i32 1
  %61 = load ptr, ptr %60, align 4
  tail call void @usb_free_urb(ptr noundef %61) #24
  store ptr null, ptr %60, align 4
  %62 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 3, i32 3
  %63 = load ptr, ptr %62, align 4
  tail call void @kfree(ptr noundef %63) #24
  store ptr null, ptr %62, align 4
  %64 = getelementptr %struct.r8152, ptr %0, i32 0, i32 6, i32 3, i32 4
  store ptr null, ptr %64, align 4
  %65 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 5
  %66 = load ptr, ptr %65, align 8
  tail call void @usb_free_urb(ptr noundef %66) #24
  store ptr null, ptr %65, align 8
  %67 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 46
  %68 = load ptr, ptr %67, align 4
  tail call void @kfree(ptr noundef %68) #24
  store ptr null, ptr %67, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @alloc_rx_agg(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 32
  %4 = load i32, ptr %3, align 4
  %5 = add i32 %4, -1
  %6 = lshr i32 %5, 12
  %7 = icmp ult i32 %5, 4096
  %8 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !range !30
  %9 = sub nuw nsw i32 32, %8
  %10 = select i1 %7, i32 0, i32 %9
  %11 = and i32 %1, 17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13, !prof !24

13:                                               ; preds = %2
  %14 = and i32 %1, 1
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 1, i32 2
  br label %17

17:                                               ; preds = %13, %2
  %18 = phi i32 [ 0, %2 ], [ %16, %13 ]
  %19 = getelementptr [3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 %18, i32 6
  %20 = load ptr, ptr %19, align 4
  %21 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %20, i32 noundef %1, i32 noundef 32) #23
  %22 = icmp eq ptr %21, null
  br i1 %22, label %48, label %23

23:                                               ; preds = %17
  %24 = or i32 %1, 262144
  %25 = tail call ptr @__alloc_pages(i32 noundef %24, i32 noundef %10, i32 noundef 0, ptr noundef null) #24
  %26 = getelementptr inbounds %struct.rx_agg, ptr %21, i32 0, i32 4
  store ptr %25, ptr %26, align 8
  %27 = icmp eq ptr %25, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %23
  %29 = tail call ptr @page_address(ptr noundef nonnull %25) #24
  %30 = getelementptr inbounds %struct.rx_agg, ptr %21, i32 0, i32 5
  store ptr %29, ptr %30, align 4
  %31 = tail call ptr @usb_alloc_urb(i32 noundef 0, i32 noundef %1) #24
  %32 = getelementptr inbounds %struct.rx_agg, ptr %21, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = icmp eq ptr %31, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.rx_agg, ptr %21, i32 0, i32 3
  store ptr %0, ptr %35, align 4
  store volatile ptr %21, ptr %21, align 8
  %36 = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  store ptr %21, ptr %36, align 4
  %37 = getelementptr inbounds %struct.rx_agg, ptr %21, i32 0, i32 1
  store volatile ptr %37, ptr %37, align 8
  %38 = getelementptr inbounds %struct.rx_agg, ptr %21, i32 0, i32 1, i32 1
  store ptr %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 13
  %40 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %39) #24
  %41 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 7
  %42 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 7, i32 1
  %43 = load ptr, ptr %42, align 4
  store ptr %37, ptr %42, align 4
  store ptr %41, ptr %37, align 8
  store ptr %43, ptr %38, align 4
  store volatile ptr %37, ptr %43, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %39, i32 noundef %40) #24
  %44 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %44) #24, !srcloc !9
  %45 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %44, ptr %44, i32 1, ptr elementtype(i32) %44) #24, !srcloc !10
  br label %48

46:                                               ; preds = %28
  tail call void @__free_pages(ptr noundef nonnull %25, i32 noundef %10) #24
  br label %47

47:                                               ; preds = %46, %23
  tail call void @kfree(ptr noundef nonnull %21) #24
  br label %48

48:                                               ; preds = %47, %34, %17
  %49 = phi ptr [ %21, %34 ], [ null, %47 ], [ null, %17 ]
  ret ptr %49
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @usb_alloc_urb(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @intr_callback(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 12
  %3 = load i32, ptr %2, align 4
  %4 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %88, label %7

7:                                                ; preds = %1
  %8 = load volatile i32, ptr %5, align 4
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %88, label %11

11:                                               ; preds = %7
  %12 = load volatile i32, ptr %5, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %88

15:                                               ; preds = %11
  switch i32 %3, label %35 [
    i32 0, label %43
    i32 -104, label %16
    i32 -108, label %16
    i32 -2, label %19
    i32 -71, label %19
    i32 -75, label %27
  ]

16:                                               ; preds = %15, %15
  %17 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 4
  %18 = load ptr, ptr %17, align 4
  tail call void @netif_device_detach(ptr noundef %18) #24
  br label %19

19:                                               ; preds = %16, %15, %15
  %20 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 28
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, 512
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %88, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 4
  %26 = load ptr, ptr %25, align 4
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %26, ptr noundef nonnull @.str.99, i32 noundef %3) #25
  br label %88

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 28
  %29 = load i32, ptr %28, align 4
  %30 = and i32 %29, 512
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %68, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 4
  %34 = load ptr, ptr %33, align 4
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %34, ptr noundef nonnull @.str.100) #25
  br label %68

35:                                               ; preds = %15
  %36 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 28
  %37 = load i32, ptr %36, align 4
  %38 = and i32 %37, 512
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %68, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 4
  %42 = load ptr, ptr %41, align 4
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %42, ptr noundef nonnull @.str.101, i32 noundef %3) #25
  br label %68

43:                                               ; preds = %15
  %44 = getelementptr inbounds %struct.urb, ptr %0, i32 0, i32 14
  %45 = load ptr, ptr %44, align 4
  %46 = load i16, ptr %45, align 2
  %47 = and i16 %46, 4
  %48 = icmp eq i16 %47, 0
  %49 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 4
  %50 = load ptr, ptr %49, align 4
  %51 = getelementptr inbounds %struct.net_device, ptr %50, i32 0, i32 6
  %52 = load volatile i32, ptr %51, align 4
  %53 = and i32 %52, 4
  %54 = icmp eq i32 %53, 0
  br i1 %48, label %60, label %55

55:                                               ; preds = %43
  br i1 %54, label %68, label %56

56:                                               ; preds = %55
  tail call void @_set_bit(i32 noundef 3, ptr noundef nonnull %5) #24
  %57 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 15
  %58 = load ptr, ptr @system_wq, align 4
  %59 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %58, ptr noundef %57, i32 noundef 0) #24
  br label %68

60:                                               ; preds = %43
  br i1 %54, label %61, label %68

61:                                               ; preds = %60
  %62 = getelementptr inbounds %struct.net_device, ptr %50, i32 0, i32 87
  %63 = load ptr, ptr %62, align 64
  %64 = getelementptr inbounds %struct.netdev_queue, ptr %63, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %64) #24
  tail call void @_set_bit(i32 noundef 3, ptr noundef nonnull %5) #24
  %65 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 15
  %66 = load ptr, ptr @system_wq, align 4
  %67 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %66, ptr noundef %65, i32 noundef 0) #24
  br label %68

68:                                               ; preds = %61, %60, %56, %55, %40, %35, %32, %27
  %69 = tail call i32 @usb_submit_urb(ptr noundef %0, i32 noundef 2592) #24
  switch i32 %69, label %80 [
    i32 -19, label %70
    i32 0, label %88
  ]

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 1
  %72 = load ptr, ptr %71, align 4
  %73 = getelementptr inbounds %struct.usb_device, ptr %72, i32 0, i32 3
  %74 = load i32, ptr %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  tail call void @_set_bit(i32 noundef 0, ptr noundef nonnull %5) #24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %77

77:                                               ; preds = %76, %70
  %78 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 4
  %79 = load ptr, ptr %78, align 4
  tail call void @netif_device_detach(ptr noundef %79) #24
  br label %88

80:                                               ; preds = %68
  %81 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 28
  %82 = load i32, ptr %81, align 4
  %83 = and i32 %82, 512
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.r8152, ptr %5, i32 0, i32 4
  %87 = load ptr, ptr %86, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %87, ptr noundef nonnull @.str.102, i32 noundef %69) #25
  br label %88

88:                                               ; preds = %85, %80, %77, %68, %24, %19, %11, %7, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @unregister_pm_notifier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_queue_tail(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_tstamp_tx(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__rtl8152_set_mac_address(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr i8, ptr %0, i32 1408
  %7 = getelementptr inbounds %struct.sockaddr, ptr %1, i32 0, i32 1
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %69

11:                                               ; preds = %3
  %12 = getelementptr %struct.sockaddr, ptr %1, i32 0, i32 1, i32 4
  %13 = load i16, ptr %12, align 2
  %14 = zext i16 %13 to i32
  %15 = or i32 %8, %14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %69, label %17

17:                                               ; preds = %11
  br i1 %2, label %23, label %18

18:                                               ; preds = %17
  %19 = getelementptr i8, ptr %0, i32 1632
  %20 = load ptr, ptr %19, align 8
  %21 = tail call i32 @usb_autopm_get_interface(ptr noundef %20) #24
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %69, label %23

23:                                               ; preds = %18, %17
  %24 = phi i32 [ -99, %17 ], [ %21, %18 ]
  %25 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %25) #24
  tail call void @dev_addr_mod(ptr noundef %0, i32 noundef 0, ptr noundef %7, i32 noundef 6) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 192, ptr %5, align 4
  %26 = load volatile i32, ptr %6, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %23
  %30 = call ptr @kmemdup(ptr noundef nonnull %5, i32 noundef 4, i32 noundef 3264) #24
  %31 = icmp eq ptr %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr i8, ptr %0, i32 1412
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr i8, ptr %0, i32 2192
  %36 = load i32, ptr %35, align 8
  %37 = call i32 @usb_control_msg(ptr noundef %34, i32 noundef %36, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %30, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %30) #24
  %38 = icmp eq i32 %37, -19
  br i1 %38, label %39, label %45

39:                                               ; preds = %32
  %40 = load ptr, ptr %33, align 4
  %41 = getelementptr inbounds %struct.usb_device, ptr %40, i32 0, i32 3
  %42 = load i32, ptr %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call void @_set_bit(i32 noundef 0, ptr noundef %6) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %45

45:                                               ; preds = %44, %39, %32, %29, %23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  call fastcc void @generic_ocp_write(ptr noundef %6, i16 noundef zeroext -16384, i16 noundef zeroext 63, i16 noundef zeroext 8, ptr noundef %7, i16 noundef zeroext 256) #24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4
  %46 = load volatile i32, ptr %6, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %45
  %50 = call ptr @kmemdup(ptr noundef nonnull %4, i32 noundef 4, i32 noundef 3264) #24
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr i8, ptr %0, i32 1412
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr i8, ptr %0, i32 2192
  %56 = load i32, ptr %55, align 8
  %57 = call i32 @usb_control_msg(ptr noundef %54, i32 noundef %56, i8 noundef zeroext 5, i8 noundef zeroext 64, i16 noundef zeroext -6116, i16 noundef zeroext 273, ptr noundef nonnull %50, i16 noundef zeroext 4, i32 noundef 500) #24
  call void @kfree(ptr noundef nonnull %50) #24
  %58 = icmp eq i32 %57, -19
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = load ptr, ptr %53, align 4
  %61 = getelementptr inbounds %struct.usb_device, ptr %60, i32 0, i32 3
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_set_bit(i32 noundef 0, ptr noundef %6) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !13
  br label %65

65:                                               ; preds = %64, %59, %52, %49, %45
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  call void @mutex_unlock(ptr noundef %25) #24
  br i1 %2, label %69, label %66

66:                                               ; preds = %65
  %67 = getelementptr i8, ptr %0, i32 1632
  %68 = load ptr, ptr %67, align 8
  call void @usb_autopm_put_interface(ptr noundef %68) #24
  br label %69

69:                                               ; preds = %66, %65, %18, %11, %3
  %70 = phi i32 [ %24, %65 ], [ %24, %66 ], [ %21, %18 ], [ -99, %11 ], [ -99, %3 ]
  ret i32 %70
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_queue_reset_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_get_drvinfo(ptr noundef %0, ptr noundef %1) #14 {
  %3 = getelementptr inbounds %struct.ethtool_drvinfo, ptr %1, i32 0, i32 1
  %4 = tail call i32 @strlcpy(ptr noundef %3, ptr noundef nonnull @.str.1, i32 noundef 32) #24
  %5 = getelementptr inbounds %struct.ethtool_drvinfo, ptr %1, i32 0, i32 2
  %6 = tail call i32 @strlcpy(ptr noundef %5, ptr noundef nonnull @.str.9, i32 noundef 32) #24
  %7 = getelementptr i8, ptr %0, i32 1412
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ethtool_drvinfo, ptr %1, i32 0, i32 4
  %10 = getelementptr inbounds %struct.usb_device, ptr %8, i32 0, i32 12
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.usb_bus, ptr %11, i32 0, i32 3
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.usb_device, ptr %8, i32 0, i32 1
  %15 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %9, i32 noundef 32, ptr noundef nonnull @.str.104, ptr noundef %13, ptr noundef %14) #24
  %16 = getelementptr i8, ptr %0, i32 2076
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  %19 = icmp ugt ptr %17, inttoptr (i32 -4096 to ptr)
  %20 = or i1 %18, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.ethtool_drvinfo, ptr %1, i32 0, i32 3
  %23 = getelementptr i8, ptr %0, i32 2080
  %24 = tail call i32 @strlcpy(ptr noundef %22, ptr noundef %23, i32 noundef 32) #24
  br label %25

25:                                               ; preds = %21, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_get_wol(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr i8, ptr %0, i32 1408
  %7 = getelementptr i8, ptr %0, i32 1632
  %8 = load ptr, ptr %7, align 8
  %9 = tail call i32 @usb_autopm_get_interface(ptr noundef %8) #24
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %2
  %12 = getelementptr i8, ptr %0, i32 1412
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.usb_device, ptr %13, i32 0, i32 20
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.usb_config_descriptor, ptr %15, i32 0, i32 6
  %17 = load i8, ptr %16, align 1
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.ethtool_wolinfo, ptr %1, i32 0, i32 1
  store i32 0, ptr %21, align 4
  %22 = getelementptr inbounds %struct.ethtool_wolinfo, ptr %1, i32 0, i32 2
  store i32 0, ptr %22, align 4
  br label %45

23:                                               ; preds = %11
  %24 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %24) #24
  %25 = getelementptr inbounds %struct.ethtool_wolinfo, ptr %1, i32 0, i32 1
  store i32 47, ptr %25, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %26 = call fastcc i32 @generic_ocp_read(ptr noundef %6, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 307) #24
  %27 = load i32, ptr %5, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  %28 = lshr i32 %27, 4
  %29 = and i32 %28, 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %30 = call fastcc i32 @generic_ocp_read(ptr noundef %6, i16 noundef zeroext -6112, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 460) #24
  %31 = load i32, ptr %4, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  %32 = lshr i32 %31, 19
  %33 = and i32 %32, 2
  %34 = or i32 %33, %29
  %35 = and i32 %32, 8
  %36 = or i32 %34, %35
  %37 = and i32 %32, 4
  %38 = or i32 %36, %37
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %39 = call fastcc i32 @generic_ocp_read(ptr noundef %6, i16 noundef zeroext -16204, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 460) #24
  %40 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %41 = lshr i32 %40, 11
  %42 = and i32 %41, 32
  %43 = or i32 %38, %42
  %44 = getelementptr inbounds %struct.ethtool_wolinfo, ptr %1, i32 0, i32 2
  store i32 %43, ptr %44, align 4
  call void @mutex_unlock(ptr noundef %24) #24
  br label %45

45:                                               ; preds = %23, %20
  %46 = load ptr, ptr %7, align 8
  call void @usb_autopm_put_interface(ptr noundef %46) #24
  br label %47

47:                                               ; preds = %45, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_wol(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 1412
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.usb_device, ptr %5, i32 0, i32 20
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.usb_config_descriptor, ptr %7, i32 0, i32 6
  %9 = load i8, ptr %8, align 1
  %10 = and i8 %9, 32
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.ethtool_wolinfo, ptr %1, i32 0, i32 2
  %14 = load i32, ptr %13, align 4
  %15 = and i32 %14, -48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr i8, ptr %0, i32 1632
  %19 = load ptr, ptr %18, align 8
  %20 = tail call i32 @usb_autopm_get_interface(ptr noundef %19) #24
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %23) #24
  %24 = load i32, ptr %13, align 4
  tail call fastcc void @__rtl_set_wol(ptr noundef %3, i32 noundef %24)
  %25 = load i32, ptr %13, align 4
  %26 = and i32 %25, 47
  %27 = getelementptr i8, ptr %0, i32 2136
  store i32 %26, ptr %27, align 8
  tail call void @mutex_unlock(ptr noundef %23) #24
  %28 = load ptr, ptr %18, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %28) #24
  br label %29

29:                                               ; preds = %22, %17, %12, %2
  %30 = phi i32 [ -95, %2 ], [ -22, %12 ], [ %20, %17 ], [ %20, %22 ]
  ret i32 %30
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define internal i32 @rtl8152_get_msglevel(ptr nocapture noundef readonly %0) #15 {
  %2 = getelementptr i8, ptr %0, i32 2140
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal void @rtl8152_set_msglevel(ptr nocapture noundef writeonly %0, i32 noundef %1) #16 {
  %3 = getelementptr i8, ptr %0, i32 2140
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_nway_reset(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 1632
  %3 = load ptr, ptr %2, align 8
  %4 = tail call i32 @usb_autopm_get_interface(ptr noundef %3) #24
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %7) #24
  %8 = getelementptr i8, ptr %0, i32 1932
  %9 = tail call i32 @mii_nway_restart(ptr noundef %8) #24
  tail call void @mutex_unlock(ptr noundef %7) #24
  %10 = load ptr, ptr %2, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %10) #24
  br label %11

11:                                               ; preds = %6, %1
  %12 = phi i32 [ %4, %1 ], [ %9, %6 ]
  ret i32 %12
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ethtool_op_get_link(ptr noundef) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @rtl8152_get_coalesce(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readnone %3) #17 {
  %5 = getelementptr i8, ptr %0, i32 2208
  %6 = load i8, ptr %5, align 8
  switch i8 %6, label %7 [
    i8 1, label %11
    i8 2, label %11
    i8 7, label %11
  ]

7:                                                ; preds = %4
  %8 = getelementptr i8, ptr %0, i32 2148
  %9 = load i32, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ethtool_coalesce, ptr %1, i32 0, i32 1
  store i32 %9, ptr %10, align 4
  br label %11

11:                                               ; preds = %7, %4, %4, %4
  %12 = phi i32 [ 0, %7 ], [ -95, %4 ], [ -95, %4 ], [ -95, %4 ]
  ret i32 %12
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_coalesce(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readnone %3) #0 {
  %5 = getelementptr i8, ptr %0, i32 1408
  %6 = getelementptr i8, ptr %0, i32 2208
  %7 = load i8, ptr %6, align 8
  switch i8 %7, label %8 [
    i8 1, label %45
    i8 2, label %45
    i8 7, label %45
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.ethtool_coalesce, ptr %1, i32 0, i32 1
  %10 = load i32, ptr %9, align 4
  %11 = icmp ugt i32 %10, 524280
  br i1 %11, label %45, label %12

12:                                               ; preds = %8
  %13 = getelementptr i8, ptr %0, i32 1632
  %14 = load ptr, ptr %13, align 8
  %15 = tail call i32 @usb_autopm_get_interface(ptr noundef %14) #24
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %12
  %18 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %18) #24
  %19 = getelementptr i8, ptr %0, i32 2148
  %20 = load i32, ptr %19, align 4
  %21 = load i32, ptr %9, align 4
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  store i32 %21, ptr %19, align 4
  %24 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %25 = load volatile i32, ptr %24, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %23
  %29 = load volatile i32, ptr %24, align 4
  %30 = and i32 %29, 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %43

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %34 = load ptr, ptr %33, align 64
  %35 = getelementptr inbounds %struct.netdev_queue, ptr %34, i32 0, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %35) #24
  %36 = getelementptr i8, ptr %0, i32 1416
  tail call void @napi_disable(ptr noundef %36) #24
  %37 = getelementptr i8, ptr %0, i32 2028
  %38 = load ptr, ptr %37, align 4
  tail call void %38(ptr noundef %5) #24
  %39 = getelementptr i8, ptr %0, i32 2024
  %40 = load ptr, ptr %39, align 4
  %41 = tail call i32 %40(ptr noundef %5) #24
  tail call fastcc void @rtl_start_rx(ptr noundef %5)
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %5) #24
  tail call fastcc void @_rtl8152_set_rx_mode(ptr noundef %0)
  tail call void @napi_enable(ptr noundef %36) #24
  %42 = load ptr, ptr %33, align 64
  tail call void @netif_tx_wake_queue(ptr noundef %42) #24
  br label %43

43:                                               ; preds = %32, %28, %23, %17
  tail call void @mutex_unlock(ptr noundef %18) #24
  %44 = load ptr, ptr %13, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %44) #24
  br label %45

45:                                               ; preds = %43, %12, %8, %4, %4, %4
  %46 = phi i32 [ %15, %43 ], [ -95, %4 ], [ -95, %4 ], [ -95, %4 ], [ -22, %8 ], [ %15, %12 ]
  ret i32 %46
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal void @rtl8152_get_ringparam(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readnone %3) #17 {
  %5 = getelementptr inbounds %struct.ethtool_ringparam, ptr %1, i32 0, i32 1
  store i32 4096, ptr %5, align 4
  %6 = getelementptr i8, ptr %0, i32 2164
  %7 = load i32, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ethtool_ringparam, ptr %1, i32 0, i32 5
  store i32 %7, ptr %8, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_ringparam(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readnone %3) #0 {
  %5 = getelementptr inbounds %struct.ethtool_ringparam, ptr %1, i32 0, i32 5
  %6 = load i32, ptr %5, align 4
  %7 = icmp ult i32 %6, 20
  br i1 %7, label %22, label %8

8:                                                ; preds = %4
  %9 = getelementptr i8, ptr %0, i32 2164
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, %6
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %14 = load i32, ptr %13, align 8
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %18) #24
  %19 = getelementptr i8, ptr %0, i32 1416
  tail call void @napi_disable(ptr noundef %19) #24
  %20 = load i32, ptr %5, align 4
  store i32 %20, ptr %9, align 4
  tail call void @napi_enable(ptr noundef %19) #24
  tail call void @mutex_unlock(ptr noundef %18) #24
  br label %22

21:                                               ; preds = %12
  store i32 %6, ptr %9, align 4
  br label %22

22:                                               ; preds = %21, %17, %8, %4
  %23 = phi i32 [ -22, %4 ], [ 0, %17 ], [ 0, %21 ], [ 0, %8 ]
  ret i32 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_get_pauseparam(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 1632
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @usb_autopm_get_interface(ptr noundef %4) #24
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %44, label %7

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i32 1408
  %9 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %9) #24
  %10 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %8, i16 noundef zeroext -23552) #24
  %11 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %8, i16 noundef zeroext -23544) #24
  %12 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %8, i16 noundef zeroext -23542) #24
  tail call void @mutex_unlock(ptr noundef %9) #24
  %13 = load ptr, ptr %3, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %13) #24
  %14 = and i16 %10, 4096
  %15 = icmp eq i16 %14, 0
  %16 = getelementptr inbounds %struct.ethtool_pauseparam, ptr %1, i32 0, i32 1
  br i1 %15, label %17, label %19

17:                                               ; preds = %7
  store i32 0, ptr %16, align 4
  %18 = getelementptr inbounds %struct.ethtool_pauseparam, ptr %1, i32 0, i32 2
  store i32 0, ptr %18, align 4
  br label %41

19:                                               ; preds = %7
  store i32 1, ptr %16, align 4
  %20 = and i16 %12, %11
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 1024
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = and i32 %21, 2048
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = and i16 %11, 1024
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = lshr i16 %12, 10
  %32 = and i16 %31, 1
  %33 = zext i16 %32 to i32
  br label %37

34:                                               ; preds = %27, %19
  %35 = phi i32 [ 2, %27 ], [ 3, %19 ]
  %36 = getelementptr inbounds %struct.ethtool_pauseparam, ptr %1, i32 0, i32 2
  store i32 1, ptr %36, align 4
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i32 [ %35, %34 ], [ %33, %30 ]
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37, %17
  %42 = phi i32 [ 0, %17 ], [ 1, %37 ]
  %43 = getelementptr inbounds %struct.ethtool_pauseparam, ptr %1, i32 0, i32 3
  store i32 %42, ptr %43, align 4
  br label %44

44:                                               ; preds = %41, %37, %24, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_pauseparam(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 1632
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @usb_autopm_get_interface(ptr noundef %5) #24
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %35, label %8

8:                                                ; preds = %2
  %9 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %9) #24
  %10 = getelementptr inbounds %struct.ethtool_pauseparam, ptr %1, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %3, i16 noundef zeroext -23552) #24
  %15 = and i16 %14, 4096
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %13, %8
  %18 = getelementptr inbounds %struct.ethtool_pauseparam, ptr %1, i32 0, i32 2
  %19 = load i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %struct.ethtool_pauseparam, ptr %1, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %3, i16 noundef zeroext -23544) #24
  %25 = select i1 %20, i16 0, i16 3072
  %26 = xor i16 %25, 2048
  %27 = select i1 %23, i16 %25, i16 %26
  %28 = and i16 %24, -3073
  %29 = or i16 %27, %28
  %30 = icmp eq i16 %24, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %17
  tail call fastcc void @ocp_reg_write(ptr noundef %3, i16 noundef zeroext -23544, i16 noundef zeroext %29) #24
  br label %32

32:                                               ; preds = %31, %17, %13
  %33 = phi i32 [ %6, %31 ], [ %6, %17 ], [ -22, %13 ]
  tail call void @mutex_unlock(ptr noundef %9) #24
  %34 = load ptr, ptr %4, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %34) #24
  br label %35

35:                                               ; preds = %32, %2
  %36 = phi i32 [ %33, %32 ], [ %6, %2 ]
  ret i32 %36
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal void @rtl8152_get_strings(ptr nocapture noundef readnone %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #18 {
  %4 = icmp eq i32 %1, 1
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(416) %2, ptr noundef nonnull align 1 dereferenceable(416) @rtl8152_gstrings, i32 416, i1 false)
  br label %6

6:                                                ; preds = %5, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rtl8152_get_ethtool_stats(ptr noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = alloca %struct.tally_counter, align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #24
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(64) %4, i8 0, i32 64, i1 false), !annotation !8
  %5 = getelementptr i8, ptr %0, i32 1632
  %6 = load ptr, ptr %5, align 8
  %7 = tail call i32 @usb_autopm_get_interface(ptr noundef %6) #24
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = getelementptr i8, ptr %0, i32 1408
  %11 = call fastcc i32 @generic_ocp_read(ptr noundef %10, i16 noundef zeroext -6000, i16 noundef zeroext 64, ptr noundef nonnull %4, i16 noundef zeroext 256)
  %12 = load ptr, ptr %5, align 8
  call void @usb_autopm_put_interface(ptr noundef %12) #24
  %13 = load i64, ptr %4, align 8
  store i64 %13, ptr %2, align 8
  %14 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 1
  %15 = load i64, ptr %14, align 8
  %16 = getelementptr i64, ptr %2, i32 1
  store i64 %15, ptr %16, align 8
  %17 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 2
  %18 = load i64, ptr %17, align 8
  %19 = getelementptr i64, ptr %2, i32 2
  store i64 %18, ptr %19, align 8
  %20 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 3
  %21 = load i32, ptr %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr i64, ptr %2, i32 3
  store i64 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 4
  %25 = load i16, ptr %24, align 4
  %26 = zext i16 %25 to i64
  %27 = getelementptr i64, ptr %2, i32 4
  store i64 %26, ptr %27, align 8
  %28 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 5
  %29 = load i16, ptr %28, align 2
  %30 = zext i16 %29 to i64
  %31 = getelementptr i64, ptr %2, i32 5
  store i64 %30, ptr %31, align 8
  %32 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 6
  %33 = load i32, ptr %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr i64, ptr %2, i32 6
  store i64 %34, ptr %35, align 8
  %36 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 7
  %37 = load i32, ptr %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr i64, ptr %2, i32 7
  store i64 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 8
  %41 = load i64, ptr %40, align 8
  %42 = getelementptr i64, ptr %2, i32 8
  store i64 %41, ptr %42, align 8
  %43 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 9
  %44 = load i64, ptr %43, align 8
  %45 = getelementptr i64, ptr %2, i32 9
  store i64 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 10
  %47 = load i32, ptr %46, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr i64, ptr %2, i32 10
  store i64 %48, ptr %49, align 8
  %50 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 11
  %51 = load i16, ptr %50, align 4
  %52 = zext i16 %51 to i64
  %53 = getelementptr i64, ptr %2, i32 11
  store i64 %52, ptr %53, align 8
  %54 = getelementptr inbounds %struct.tally_counter, ptr %4, i32 0, i32 12
  %55 = load i16, ptr %54, align 2
  %56 = zext i16 %55 to i64
  %57 = getelementptr i64, ptr %2, i32 12
  store i64 %56, ptr %57, align 8
  br label %58

58:                                               ; preds = %9, %3
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #24
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @rtl8152_get_sset_count(ptr nocapture noundef readnone %0, i32 noundef %1) #19 {
  %3 = icmp eq i32 %1, 1
  %4 = select i1 %3, i32 13, i32 -95
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl_ethtool_get_eee(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 2044
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i32 1632
  %9 = load ptr, ptr %8, align 8
  %10 = tail call i32 @usb_autopm_get_interface(ptr noundef %9) #24
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %13) #24
  %14 = load ptr, ptr %4, align 4
  %15 = tail call i32 %14(ptr noundef %3, ptr noundef %1) #24
  tail call void @mutex_unlock(ptr noundef %13) #24
  %16 = load ptr, ptr %8, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %16) #24
  br label %17

17:                                               ; preds = %12, %7, %2
  %18 = phi i32 [ %10, %7 ], [ %15, %12 ], [ -95, %2 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl_ethtool_set_eee(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 2048
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i32 1632
  %9 = load ptr, ptr %8, align 8
  %10 = tail call i32 @usb_autopm_get_interface(ptr noundef %9) #24
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %7
  %13 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %13) #24
  %14 = load ptr, ptr %4, align 4
  %15 = tail call i32 %14(ptr noundef %3, ptr noundef %1) #24
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr i8, ptr %0, i32 1932
  %19 = tail call i32 @mii_nway_restart(ptr noundef %18) #24
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i32 [ %15, %12 ], [ %19, %17 ]
  tail call void @mutex_unlock(ptr noundef %13) #24
  %22 = load ptr, ptr %8, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %22) #24
  br label %23

23:                                               ; preds = %20, %7, %2
  %24 = phi i32 [ %10, %7 ], [ %21, %20 ], [ -95, %2 ]
  ret i32 %24
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @rtl8152_get_tunable(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #17 {
  %4 = getelementptr inbounds %struct.ethtool_tunable, ptr %1, i32 0, i32 1
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr i8, ptr %0, i32 2160
  %9 = load i32, ptr %8, align 8
  store i32 %9, ptr %2, align 4
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi i32 [ 0, %7 ], [ -95, %3 ]
  ret i32 %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_tunable(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = getelementptr inbounds %struct.ethtool_tunable, ptr %1, i32 0, i32 1
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %29

7:                                                ; preds = %3
  %8 = load i32, ptr %2, align 4
  %9 = icmp ult i32 %8, 60
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = getelementptr i8, ptr %0, i32 2140
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 64
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %10
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %0, ptr noundef nonnull @.str.105) #25
  br label %29

16:                                               ; preds = %7
  %17 = getelementptr i8, ptr %0, i32 2160
  %18 = load i32, ptr %17, align 8
  %19 = icmp eq i32 %18, %8
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %22 = load i32, ptr %21, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %26) #24
  %27 = getelementptr i8, ptr %0, i32 1416
  tail call void @napi_disable(ptr noundef %27) #24
  store i32 %8, ptr %17, align 8
  tail call void @napi_enable(ptr noundef %27) #24
  tail call void @mutex_unlock(ptr noundef %26) #24
  br label %29

28:                                               ; preds = %20
  store i32 %8, ptr %17, align 8
  br label %29

29:                                               ; preds = %28, %25, %16, %15, %10, %3
  %30 = phi i32 [ -22, %15 ], [ -22, %10 ], [ -95, %3 ], [ 0, %16 ], [ 0, %28 ], [ 0, %25 ]
  ret i32 %30
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_get_link_ksettings(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr i8, ptr %0, i32 1408
  %5 = getelementptr i8, ptr %0, i32 1932
  %6 = getelementptr i8, ptr %0, i32 1956
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %53, label %9

9:                                                ; preds = %2
  %10 = getelementptr i8, ptr %0, i32 1632
  %11 = load ptr, ptr %10, align 8
  %12 = tail call i32 @usb_autopm_get_interface(ptr noundef %11) #24
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %9
  %15 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %15) #24
  tail call void @mii_ethtool_get_link_ksettings(ptr noundef %5, ptr noundef %1) #24
  %16 = getelementptr i8, ptr %0, i32 2196
  %17 = load i8, ptr %16, align 4
  %18 = and i8 %17, 1
  %19 = getelementptr %struct.ethtool_link_ksettings, ptr %1, i32 0, i32 1, i32 0, i32 1
  %20 = load i32, ptr %19, align 4
  %21 = and i32 %20, -32769
  %22 = zext i8 %18 to i32
  %23 = shl nuw nsw i32 %22, 15
  %24 = or i32 %23, %21
  store i32 %24, ptr %19, align 4
  %25 = load i8, ptr %16, align 4
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %14
  %29 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %4, i16 noundef zeroext -23084)
  %30 = getelementptr %struct.ethtool_link_ksettings, ptr %1, i32 0, i32 1, i32 1, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = and i32 %31, -32769
  %33 = shl i16 %29, 8
  %34 = and i16 %33, -32768
  %35 = zext i16 %34 to i32
  %36 = or i32 %32, %35
  store i32 %36, ptr %30, align 4
  %37 = tail call fastcc zeroext i16 @ocp_reg_read(ptr noundef %4, i16 noundef zeroext -23082)
  %38 = getelementptr %struct.ethtool_link_ksettings, ptr %1, i32 0, i32 1, i32 2, i32 1
  %39 = load i32, ptr %38, align 4
  %40 = and i32 %39, -32769
  %41 = shl i16 %37, 10
  %42 = and i16 %41, -32768
  %43 = zext i16 %42 to i32
  %44 = or i32 %40, %43
  store i32 %44, ptr %38, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #24
  store i32 0, ptr %3, align 4, !annotation !8
  %45 = call fastcc i32 @generic_ocp_read(ptr noundef %4, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %3, i16 noundef zeroext 307) #24
  %46 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #24
  %47 = and i32 %46, 1026
  %48 = icmp eq i32 %47, 1026
  br i1 %48, label %49, label %51

49:                                               ; preds = %28
  %50 = getelementptr inbounds %struct.ethtool_link_settings, ptr %1, i32 0, i32 1
  store i32 2500, ptr %50, align 4
  br label %51

51:                                               ; preds = %49, %28, %14
  call void @mutex_unlock(ptr noundef %15) #24
  %52 = load ptr, ptr %10, align 8
  call void @usb_autopm_put_interface(ptr noundef %52) #24
  br label %53

53:                                               ; preds = %51, %9, %2
  %54 = phi i32 [ -95, %2 ], [ %12, %9 ], [ %12, %51 ]
  ret i32 %54
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rtl8152_set_link_ksettings(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 1632
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @usb_autopm_get_interface(ptr noundef %4) #24
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i32 1408
  %9 = getelementptr inbounds %struct.ethtool_link_ksettings, ptr %1, i32 0, i32 1, i32 1
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %10, 1
  %12 = load volatile i32, ptr %9, align 4
  %13 = and i32 %12, 2
  %14 = or i32 %13, %11
  %15 = load volatile i32, ptr %9, align 4
  %16 = and i32 %15, 4
  %17 = or i32 %14, %16
  %18 = load volatile i32, ptr %9, align 4
  %19 = and i32 %18, 8
  %20 = or i32 %17, %19
  %21 = load volatile i32, ptr %9, align 4
  %22 = and i32 %21, 16
  %23 = or i32 %20, %22
  %24 = load volatile i32, ptr %9, align 4
  %25 = and i32 %24, 32
  %26 = or i32 %23, %25
  %27 = getelementptr %struct.ethtool_link_ksettings, ptr %1, i32 0, i32 1, i32 1, i32 1
  %28 = load volatile i32, ptr %27, align 4
  %29 = lshr i32 %28, 9
  %30 = and i32 %29, 64
  %31 = or i32 %26, %30
  %32 = getelementptr i8, ptr %0, i32 1964
  tail call void @mutex_lock(ptr noundef %32) #24
  %33 = getelementptr inbounds %struct.ethtool_link_settings, ptr %1, i32 0, i32 5
  %34 = load i8, ptr %33, align 1
  %35 = getelementptr inbounds %struct.ethtool_link_settings, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.ethtool_link_settings, ptr %1, i32 0, i32 2
  %38 = load i8, ptr %37, align 4
  %39 = tail call fastcc i32 @rtl8152_set_speed(ptr noundef %8, i8 noundef zeroext %34, i32 noundef %36, i8 noundef zeroext %38, i32 noundef %31)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %7
  %42 = load i8, ptr %33, align 1
  %43 = getelementptr i8, ptr %0, i32 2210
  store i8 %42, ptr %43, align 2
  %44 = load i32, ptr %35, align 4
  %45 = trunc i32 %44 to i16
  %46 = getelementptr i8, ptr %0, i32 2200
  store i16 %45, ptr %46, align 8
  %47 = load i8, ptr %37, align 4
  %48 = getelementptr i8, ptr %0, i32 2209
  store i8 %47, ptr %48, align 1
  %49 = getelementptr i8, ptr %0, i32 2152
  store i32 %31, ptr %49, align 8
  br label %50

50:                                               ; preds = %41, %7
  tail call void @mutex_unlock(ptr noundef %32) #24
  %51 = load ptr, ptr %3, align 8
  tail call void @usb_autopm_put_interface(ptr noundef %51) #24
  br label %52

52:                                               ; preds = %50, %2
  %53 = phi i32 [ %5, %2 ], [ %39, %50 ]
  ret i32 %53
}

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #20

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #21

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mii_nway_restart(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mii_ethtool_get_link_ksettings(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @determine_ethernet_addr(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca [6 x i8], align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 32
  %10 = load i16, ptr %9, align 16
  store i16 %10, ptr %1, align 2
  %11 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.usb_device, ptr %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.sockaddr, ptr %1, i32 0, i32 1
  %15 = tail call i32 @eth_platform_get_mac_address(ptr noundef %13, ptr noundef %14) #24
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %48

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 47
  %19 = load i8, ptr %18, align 8
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = tail call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -16384, i16 noundef zeroext 8, ptr noundef %14, i16 noundef zeroext 256) #24
  br label %39

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 42
  %25 = load i8, ptr %24, align 4
  %26 = and i8 %25, 2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  store i32 0, ptr %6, align 4, !annotation !8
  %29 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10216, i16 noundef zeroext 4, ptr noundef nonnull %6, i16 noundef zeroext 204) #24
  %30 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  %31 = and i32 %30, -18874368
  %32 = icmp eq i32 %31, 268435456
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #24
  store i32 0, ptr %5, align 4, !annotation !8
  %34 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12328, i16 noundef zeroext 4, ptr noundef nonnull %5, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #24
  br label %37

35:                                               ; preds = %28
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #24
  store i32 0, ptr %4, align 4, !annotation !8
  %36 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -10212, i16 noundef zeroext 4, ptr noundef nonnull %4, i16 noundef zeroext 0) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #24
  br label %37

37:                                               ; preds = %35, %33, %23
  %38 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -12288, i16 noundef zeroext 8, ptr noundef %14, i16 noundef zeroext 256) #24
  br label %39

39:                                               ; preds = %37, %21
  %40 = phi i32 [ %22, %21 ], [ %38, %37 ]
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 28
  %44 = load i32, ptr %43, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %80, label %47

47:                                               ; preds = %42
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %8, ptr noundef nonnull @.str.106) #25
  br label %80

48:                                               ; preds = %39, %2
  %49 = phi i32 [ %40, %39 ], [ %15, %2 ]
  %50 = load i32, ptr %14, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = getelementptr %struct.sockaddr, ptr %1, i32 0, i32 1, i32 4
  %55 = load i16, ptr %54, align 2
  %56 = zext i16 %55 to i32
  %57 = or i32 %50, %56
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %80

59:                                               ; preds = %53, %48
  %60 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 28
  %61 = load i32, ptr %60, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %59
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %8, ptr noundef nonnull @.str.107, ptr noundef %14) #25
  br label %65

65:                                               ; preds = %64, %59
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %3) #24
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(6) %3, i8 0, i32 6, i1 false) #24, !annotation !8
  call void @get_random_bytes(ptr noundef nonnull %3, i32 noundef 6) #24
  %66 = load i8, ptr %3, align 1
  %67 = and i8 %66, -4
  %68 = or i8 %67, 2
  store i8 %68, ptr %3, align 1
  call void @dev_addr_mod(ptr noundef %8, i32 noundef 0, ptr noundef nonnull %3, i32 noundef 6) #24
  %69 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 50
  store i8 1, ptr %69, align 8
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %3) #24
  %70 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 72
  %71 = load ptr, ptr %70, align 32
  %72 = load i32, ptr %71, align 4
  store i32 %72, ptr %14, align 4
  %73 = getelementptr i8, ptr %71, i32 4
  %74 = load i16, ptr %73, align 2
  %75 = getelementptr %struct.sockaddr, ptr %1, i32 0, i32 1, i32 4
  store i16 %74, ptr %75, align 2
  %76 = load i32, ptr %60, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %65
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %8, ptr noundef nonnull @.str.108, ptr noundef %14) #25
  br label %80

80:                                               ; preds = %79, %65, %53, %47, %42
  %81 = phi i32 [ 0, %79 ], [ 0, %65 ], [ %49, %53 ], [ %40, %42 ], [ %40, %47 ]
  ret i32 %81
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_platform_get_mac_address(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @get_random_bytes(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_receive(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_add_rx_frag(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__napi_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtl8152_runtime_resume(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 6
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 14
  %10 = load i32, ptr %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %8, label %46, label %13

13:                                               ; preds = %1
  br i1 %12, label %50, label %14

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 2
  %16 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 21, i32 10
  %17 = load ptr, ptr %16, align 4
  tail call void %17(ptr noundef %0, i1 noundef zeroext false) #24
  tail call void @napi_disable(ptr noundef %15) #24
  tail call void @_set_bit(i32 noundef 2, ptr noundef %0) #24
  %18 = load volatile i32, ptr %5, align 4
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %35

21:                                               ; preds = %14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #24
  store i32 0, ptr %2, align 4, !annotation !8
  %22 = call fastcc i32 @generic_ocp_read(ptr noundef %0, i16 noundef zeroext -5880, i16 noundef zeroext 4, ptr noundef nonnull %2, i16 noundef zeroext 307) #24
  %23 = load i32, ptr %2, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #24
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  call fastcc void @rtl_start_rx(ptr noundef %0)
  br label %35

27:                                               ; preds = %21
  call void @netif_carrier_off(ptr noundef %4) #24
  %28 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 21, i32 2
  %29 = load ptr, ptr %28, align 4
  call void %29(ptr noundef %0) #24
  %30 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 28
  %31 = load i32, ptr %30, align 4
  %32 = and i32 %31, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %27
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %4, ptr noundef nonnull @.str.117) #25
  br label %35

35:                                               ; preds = %34, %27, %26, %14
  call void @napi_enable(ptr noundef %15) #24
  call void @_clear_bit(i32 noundef 4, ptr noundef %0) #24
  call void asm sideeffect "dmb ish", "~{memory}"() #24, !srcloc !31
  %36 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 9
  %37 = load volatile ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, %36
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = call zeroext i1 @napi_schedule_prep(ptr noundef %15) #24
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  call void @__napi_schedule(ptr noundef %15) #24
  br label %42

42:                                               ; preds = %41, %39, %35
  %43 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 5
  %44 = load ptr, ptr %43, align 8
  %45 = call i32 @usb_submit_urb(ptr noundef %44, i32 noundef 3072) #24
  br label %51

46:                                               ; preds = %1
  br i1 %12, label %50, label %47

47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.r8152, ptr %0, i32 0, i32 21, i32 10
  %49 = load ptr, ptr %48, align 4
  tail call void %49(ptr noundef %0, i1 noundef zeroext false) #24
  br label %50

50:                                               ; preds = %47, %46, %13
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %0) #24
  br label %51

51:                                               ; preds = %50, %42
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_attach(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_mac_address(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb_deregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umin.i16(i16, i16) #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #7

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { nofree nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { nofree null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree nounwind null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { argmemonly nofree nounwind readonly willreturn }
attributes #23 = { nounwind allocsize(2) }
attributes #24 = { nounwind }
attributes #25 = { cold nounwind }
attributes #26 = { nounwind allocsize(0) }
attributes #27 = { nounwind readnone }
attributes #28 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 1, !"min_enum_size", i32 4}
!2 = !{i32 8, !"branch-target-enforcement", i32 0}
!3 = !{i32 8, !"sign-return-address", i32 0}
!4 = !{i32 8, !"sign-return-address-all", i32 0}
!5 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!6 = !{i32 7, !"uwtable", i32 1}
!7 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!8 = !{!"auto-init"}
!9 = !{i64 863660, i64 2148353631, i64 2148353657, i64 2148353704, i64 2148353726, i64 2148353754, i64 2148353774}
!10 = !{i64 2148365046, i64 2148365072, i64 2148365101, i64 2148365135, i64 2148365166, i64 2148365189}
!11 = !{i64 2154110627}
!12 = !{i64 2154111217}
!13 = !{i64 2157472696}
!14 = !{i64 2157656001}
!15 = !{i64 2157656431}
!16 = !{i64 2154111538}
!17 = !{i64 2148367403, i64 2148367429, i64 2148367458, i64 2148367492, i64 2148367523, i64 2148367546}
!18 = !{i8 0, i8 2}
!19 = !{i64 2149207386}
!20 = !{i64 2149203210}
!21 = !{i64 2149203285, i64 2149203312, i64 2149203359, i64 2149203381, i64 2149203409, i64 2149203429}
!22 = !{i64 2149230389}
!23 = !{!"branch_weights", i32 1, i32 2000}
!24 = !{!"branch_weights", i32 2000, i32 1}
!25 = !{i64 5929155}
!26 = !{i64 2148465725}
!27 = !{i64 2148368087, i64 2148368119, i64 2148368148, i64 2148368182, i64 2148368213, i64 2148368236}
!28 = !{i64 2148465928}
!29 = !{i64 7318695}
!30 = !{i32 0, i32 33}
!31 = !{i64 2157655305}
