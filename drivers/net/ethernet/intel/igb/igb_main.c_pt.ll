; ModuleID = '/llk/IR/drivers/net/ethernet/intel/igb/igb_main.c_pt.bc'
source_filename = "../drivers/net/ethernet/intel/igb/igb_main.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.155 }
%union.anon.155 = type { ptr }
%struct.pci_driver = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { ptr, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_error_handlers = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.e1000_info = type { ptr, ptr, ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.igb_reg_info = type { i32, ptr }
%struct.i2c_algo_bit_data = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i8 }
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.anon.219, [4 x i8], i32, [60 x i8], %struct.__call_single_data, ptr, i32, i32, i32, %struct.sk_buff_head, %struct.napi_struct, [56 x i8] }
%struct.anon.219 = type { i16, i8 }
%struct.__call_single_data = type { %struct.__call_single_node, ptr, ptr }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.19 }
%struct.llist_node = type { ptr }
%union.anon.19 = type { i32 }
%struct.sk_buff_head = type { %union.anon.76, i32, %struct.spinlock }
%union.anon.76 = type { %struct.anon.77 }
%struct.anon.77 = type { ptr, ptr }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.hlist_node = type { ptr, ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.igb_adapter = type { [128 x i32], ptr, ptr, i32, i32, i32, [10 x %struct.msix_entry], i32, i32, i16, i16, i16, i32, i32, [16 x ptr], i32, [16 x ptr], i32, i32, %struct.timer_list, %struct.timer_list, i16, i32, i32, i32, i16, i16, ptr, %struct.work_struct, %struct.work_struct, i8, i8, %struct.timer_list, i32, ptr, %struct.spinlock, %struct.rtnl_link_stats64, %struct.e1000_hw, %struct.e1000_hw_stats, %struct.e1000_phy_info, i32, [12 x i8], %struct.igb_ring, %struct.igb_ring, i32, [8 x ptr], i32, i32, i16, i16, i32, ptr, i32, i32, i32, ptr, ptr, %struct.ptp_clock_info, %struct.delayed_work, %struct.work_struct, ptr, %struct.hwtstamp_config, i32, i32, i32, i32, %struct.spinlock, %struct.cyclecounter, %struct.timecounter, i32, i32, i32, i8, [4 x %struct.ptp_pin_desc], [2 x %struct.anon.195], [32 x i8], ptr, i8, %struct.i2c_algo_bit_data, %struct.i2c_adapter, ptr, i32, [128 x i8], i32, i32, %struct.e1000_info, i16, %struct.hlist_head, %struct.hlist_head, i32, %struct.spinlock, [3 x i8], ptr, %struct.vf_mac_filter, ptr, [36 x i8] }
%struct.msix_entry = type { i32, i16 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.e1000_hw = type { ptr, ptr, ptr, i32, %struct.e1000_mac_info, %struct.e1000_fc_info, %struct.e1000_phy_info, %struct.e1000_nvm_info, %struct.e1000_bus_info, %struct.e1000_mbx_info, %struct.e1000_host_mng_dhcp_cookie, %union.anon.184, i16, i16, i16, i16, i8 }
%struct.e1000_mac_info = type { %struct.e1000_mac_operations, [6 x i8], [6 x i8], i32, i32, i32, i32, i32, i32, i16, i16, [128 x i32], i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.e1000_thermal_sensor_data }
%struct.e1000_mac_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.e1000_thermal_sensor_data = type { [3 x %struct.e1000_thermal_diode_data] }
%struct.e1000_thermal_diode_data = type { i8, i8, i8, i8 }
%struct.e1000_fc_info = type { i32, i32, i16, i8, i8, i32, i32 }
%struct.e1000_nvm_info = type { %struct.e1000_nvm_operations, i32, i32, i32, i32, i16, i16, i16, i16, i16 }
%struct.e1000_nvm_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.e1000_bus_info = type { i32, i32, i32, i32, i16, i16 }
%struct.e1000_mbx_info = type { %struct.e1000_mbx_operations, %struct.e1000_mbx_stats, i32, i32, i16 }
%struct.e1000_mbx_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.e1000_mbx_stats = type { i32, i32, i32, i32, i32 }
%struct.e1000_host_mng_dhcp_cookie = type { i32, i8, i8, i16, i32, i16, i8, i8 }
%union.anon.184 = type { %struct.e1000_dev_spec_82575 }
%struct.e1000_dev_spec_82575 = type { i8, i8, i8, i8, %struct.e1000_sfp_flags, i8, i8, i8, i8 }
%struct.e1000_sfp_flags = type { i8 }
%struct.e1000_hw_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.e1000_phy_info = type { %struct.e1000_phy_operations, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, [4 x i16], i8, i8, i8, i8, i8, i8, i8 }
%struct.e1000_phy_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.igb_ring = type { ptr, ptr, ptr, ptr, %union.anon.185, ptr, i32, ptr, i32, i32, i16, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i16, %union.anon.189, %struct.xdp_rxq_info }
%union.anon.185 = type { ptr }
%union.anon.189 = type { %struct.anon.191 }
%struct.anon.191 = type { ptr, %struct.igb_rx_queue_stats, %struct.u64_stats_sync }
%struct.igb_rx_queue_stats = type { i64, i64, i64, i64, i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.xdp_rxq_info = type { ptr, i32, i32, %struct.xdp_mem_info, i32, [40 x i8] }
%struct.xdp_mem_info = type { i32, i32 }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.cyclecounter = type { ptr, i64, i32, i32 }
%struct.timecounter = type { ptr, i64, i64, i64, i64 }
%struct.ptp_pin_desc = type { [64 x i8], i32, i32, i32, [5 x i32] }
%struct.anon.195 = type { %struct.timespec64, %struct.timespec64 }
%struct.timespec64 = type { i64, i32 }
%struct.i2c_adapter = type { ptr, i32, ptr, ptr, ptr, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i32, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr }
%struct.rt_mutex = type { %struct.rt_mutex_base }
%struct.rt_mutex_base = type { %struct.raw_spinlock, %struct.rb_root_cached, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.hlist_head = type { ptr }
%struct.vf_mac_filter = type { %struct.list_head, i32, i8, [6 x i8] }
%struct.igb_q_vector = type { ptr, i32, i32, i16, i8, ptr, %struct.igb_ring_container, %struct.igb_ring_container, %struct.napi_struct, %struct.callback_head, [25 x i8], [15 x i8], [0 x %struct.igb_ring] }
%struct.igb_ring_container = type { ptr, i32, i32, i16, i8, i8 }
%struct.callback_head = type { ptr, ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.160, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [8 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, %struct.possible_net_t, ptr, i32, %union.anon.181, %struct.device, [4 x ptr], ptr, ptr, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], %struct.netdevice_tracker, %struct.netdevice_tracker, [48 x i8] }
%struct.anon.160 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.ref_tracker_dir = type {}
%struct.possible_net_t = type {}
%union.anon.181 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.netdevice_tracker = type {}
%struct.netdev_queue = type { ptr, %struct.netdevice_tracker, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, [4 x i8], %struct.spinlock, i32, i32, i32, [48 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [52 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [24 x i8] }
%struct.igb_mac_addr = type { [6 x i8], i8, i8 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, [2 x i8], ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, [4 x i8], i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [11 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [11 x ptr], [11 x ptr], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, [2 x i8], i32, i32, ptr, i32, [7 x i8], [5 x i8] }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%struct.vf_data_storage = type { [6 x i8], [30 x i16], i16, i32, i32, i16, i16, i16, i8, i8 }
%struct.e1000_fw_version = type { i32, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16 }
%struct.anon.197 = type { %struct.anon.198, %struct.anon.202 }
%struct.anon.198 = type { %struct.anon.199, %union.anon.200 }
%struct.anon.199 = type { i16, i16 }
%union.anon.200 = type { i32 }
%struct.anon.202 = type { i32, i16, i16 }
%struct.igb_tx_buffer = type { ptr, i32, i32, %union.anon.188, i32, i16, i16, i32, i32, i32 }
%union.anon.188 = type { ptr }
%union.e1000_adv_tx_desc = type { %struct.anon.186 }
%struct.anon.186 = type { i64, i32, i32 }
%struct.igb_rx_buffer = type { i32, ptr, i16, i16 }
%struct.xdp_frame = type { ptr, i16, i16, i32, %struct.xdp_mem_info, ptr }
%struct.page = type { i32, %union.anon.1, %union.anon.154, %struct.atomic_t }
%union.anon.1 = type { %struct.anon }
%struct.anon = type { %struct.list_head, ptr, i32, i32 }
%union.anon.154 = type { %struct.atomic_t }
%struct.anon.190 = type { %struct.igb_tx_queue_stats, %struct.u64_stats_sync, %struct.u64_stats_sync }
%struct.igb_tx_queue_stats = type { i64, i64, i64, i64 }
%struct.vlan_hdr = type { i16, i16 }
%struct.sk_buff = type { %union.anon.48, %union.anon.51, %union.anon.52, [48 x i8], %union.anon.53, i32, i32, i16, i16, i16, [0 x i8], i8, i8, %union.anon.55, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { ptr, ptr, %union.anon.50 }
%union.anon.50 = type { ptr }
%union.anon.51 = type { ptr }
%union.anon.52 = type { i64 }
%union.anon.53 = type { %struct.anon.54 }
%struct.anon.54 = type { i32, ptr }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { [0 x i8], i16, [0 x i8], i16, %union.anon.57, i32, i32, i32, i16, i16, %union.anon.59, %union.anon.60, %union.anon.61, i16, i16, i16, i16, i16, i16, i16 }
%union.anon.57 = type { i32 }
%union.anon.59 = type { i32 }
%union.anon.60 = type { i32 }
%union.anon.61 = type { i16 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.69 }
%union.anon.69 = type { [4 x i32] }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.udphdr = type { i16, i16, i16, i16 }
%struct.e1000_adv_tx_context_desc = type { i32, i32, i32, i32 }
%struct.anon.58 = type { i16, i16 }
%union.e1000_adv_rx_desc = type { %struct.anon.196 }
%struct.anon.196 = type { i64, i64 }
%struct.my_u0 = type { i64, i64 }
%struct.netdev_hw_addr = type { %struct.list_head, %struct.rb_node, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.ifreq = type { %union.anon.161, %union.anon.162 }
%union.anon.161 = type { [16 x i8] }
%union.anon.162 = type { %struct.ifmap }
%struct.ifmap = type { i32, i32, i16, i8, i8, i8 }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.tc_cbs_qopt_offload = type { i8, i32, i32, i32, i32, i32 }
%struct.tc_etf_qopt_offload = type { i8, i32 }
%struct.netdev_bpf = type { i32, %union.anon.165 }
%union.anon.165 = type { %struct.anon.166 }
%struct.anon.166 = type { i32, ptr, ptr }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.flow_match_eth_addrs = type { ptr, ptr }
%struct.flow_match_basic = type { ptr, ptr }
%struct.flow_match_vlan = type { ptr, ptr }
%struct.flow_cls_common_offload = type { i32, i16, i32, ptr }
%struct.flow_cls_offload = type { %struct.flow_cls_common_offload, i32, i32, ptr, %struct.flow_stats, i32 }
%struct.flow_stats = type { i64, i64, i64, i64, i32, i8 }
%struct.igb_nfc_filter = type { %struct.hlist_node, %struct.igb_nfc_input, i32, i16, i16, i16 }
%struct.igb_nfc_input = type { i8, i16, i16, [6 x i8], [6 x i8] }
%struct.flow_dissector_key_eth_addrs = type { [6 x i8], [6 x i8] }
%struct.ptp_clock_event = type { i32, i32, %union.anon.218 }
%union.anon.218 = type { %struct.pps_event_time }
%struct.pps_event_time = type { %struct.timespec64 }
%struct.xdp_buff = type { ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.anon.187 = type { i64, i32, i32 }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.110 }
%union.anon.110 = type { %struct.anon.111 }
%struct.anon.111 = type { %struct.anon.112, [0 x %struct.sock_filter] }
%struct.anon.112 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { i64 }

@igb_driver_name = dso_local global [4 x i8] c"igb\00", align 1
@__UNIQUE_ID_author585 = internal constant [66 x i8] c"igb.author=Intel Corporation, <e1000-devel@lists.sourceforge.net>\00", section ".modinfo", align 1
@__UNIQUE_ID_description586 = internal constant [57 x i8] c"igb.description=Intel(R) Gigabit Ethernet Network Driver\00", section ".modinfo", align 1
@__UNIQUE_ID_file587 = internal constant [44 x i8] c"igb.file=drivers/net/ethernet/intel/igb/igb\00", section ".modinfo", align 1
@__UNIQUE_ID_license588 = internal constant [19 x i8] c"igb.license=GPL v2\00", section ".modinfo", align 1
@__param_str_debug = internal constant [10 x i8] c"igb.debug\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@debug = internal global i32 -1, align 4
@__param_debug = internal constant %struct.kernel_param { ptr @__param_str_debug, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.155 { ptr @debug } }, section "__param", align 4
@__UNIQUE_ID_debugtype589 = internal constant [23 x i8] c"igb.parmtype=debug:int\00", section ".modinfo", align 1
@__UNIQUE_ID_debug590 = internal constant [47 x i8] c"igb.parm=debug:Debug level (0=none,...,16=all)\00", section ".modinfo", align 1
@__initcall__kmod_igb__593_670_igb_init_module6 = internal global ptr @igb_init_module, section ".initcall6.init", align 4
@igb_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, ptr @igb_driver_name, ptr @igb_pci_tbl, ptr @igb_probe, ptr @igb_remove, ptr null, ptr null, ptr @igb_shutdown, ptr @igb_pci_sriov_configure, ptr null, ptr null, ptr @igb_err_handler, ptr null, ptr null, %struct.device_driver { ptr null, ptr null, ptr null, ptr null, i8 0, i32 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @igb_pm_ops, ptr null, ptr null }, %struct.pci_dynids zeroinitializer }, align 4
@__exitcall_igb_exit_module = internal global ptr @igb_exit_module, section ".exitcall.exit", align 4
@.str = private unnamed_addr constant [16 x i8] c"PCIe link lost\0A\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"drivers/net/ethernet/intel/igb/igb_main.c\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"igb: Failed to read reg 0x%x!\0A\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"Hardware Error\0A\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"%2d.%2d-%d\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"%d.%d, 0x%08x, %d.%d.%d\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"%d.%d, 0x%08x\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"%d.%d.%d\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"Unable to allocate memory for the Tx descriptor ring\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"Unable to allocate memory for the Rx descriptor ring\0A\00", align 1
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 64
@.str.10 = private unnamed_addr constant [40 x i8] c"Unsupported Speed/Duplex configuration\0A\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"Unable to allocate memory for queues\0A\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"\016igb: %s\0A\00", align 1
@igb_driver_string = internal constant [41 x i8] c"Intel(R) Gigabit Ethernet Network Driver\00", align 1
@igb_copyright = internal constant [43 x i8] c"Copyright (c) 2007-2014 Intel Corporation.\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"igb\00", align 1
@igb_pci_tbl = internal constant [36 x %struct.pci_device_id] [%struct.pci_device_id { i32 32902, i32 8000, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 8001, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 8005, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5433, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5427, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5430, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5431, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5432, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5499, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5500, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5409, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5410, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5411, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5412, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5390, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5391, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5415, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5392, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5393, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5398, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 1080, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 1082, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 1084, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 1088, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4297, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5386, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5400, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4326, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4327, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5389, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 5414, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4328, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4263, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4265, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id { i32 32902, i32 4310, i32 -1, i32 -1, i32 0, i32 0, i32 0, i32 0 }, %struct.pci_device_id zeroinitializer], align 4
@igb_err_handler = internal constant %struct.pci_error_handlers { ptr @igb_io_error_detected, ptr null, ptr @igb_io_slot_reset, ptr null, ptr null, ptr @igb_io_resume }, align 4
@igb_pm_ops = internal constant %struct.dev_pm_ops { ptr null, ptr null, ptr @igb_suspend, ptr @igb_resume, ptr @igb_suspend, ptr @igb_resume, ptr @igb_suspend, ptr @igb_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @igb_runtime_suspend, ptr @igb_runtime_resume, ptr @igb_runtime_idle }, align 4
@igb_probe.global_quad_port_a = internal unnamed_addr global i32 0, align 4
@.str.14 = private unnamed_addr constant [34 x i8] c"\013%s (%x:%x) should not be a VF!\0A\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"No usable DMA configuration, aborting\0A\00", align 1
@igb_netdev_ops = internal constant %struct.net_device_ops { ptr null, ptr null, ptr @igb_open, ptr @igb_close, ptr @igb_xmit_frame, ptr @igb_features_check, ptr null, ptr null, ptr @igb_set_rx_mode, ptr @igb_set_mac, ptr @eth_validate_addr, ptr null, ptr @igb_ioctl, ptr null, ptr null, ptr null, ptr null, ptr @igb_change_mtu, ptr null, ptr @igb_tx_timeout, ptr @igb_get_stats64, ptr null, ptr null, ptr null, ptr @igb_vlan_rx_add_vid, ptr @igb_vlan_rx_kill_vid, ptr @igb_ndo_set_vf_mac, ptr @igb_ndo_set_vf_vlan, ptr @igb_ndo_set_vf_bw, ptr @igb_ndo_set_vf_spoofchk, ptr @igb_ndo_set_vf_trust, ptr @igb_ndo_get_vf_config, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @igb_setup_tc, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @igb_fix_features, ptr @igb_set_features, ptr null, ptr null, ptr @igb_ndo_fdb_add, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @igb_xdp, ptr @igb_xdp_xmit, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@.str.16 = private unnamed_addr constant [47 x i8] c"PHY reset is blocked due to SOL/IDER session.\0A\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"The NVM Checksum Is Not Valid\0A\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"NVM Read Error\0A\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"Invalid MAC Address\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"failed to init i2c interface\0A\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"eth%d\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"failed to allocate sysfs resources\0A\00", align 1
@.str.23 = private unnamed_addr constant [46 x i8] c"Intel(R) Gigabit Ethernet Network Connection\0A\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"%s: (PCIe:%s:%s) %pM\0A\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"2.5Gb/s\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"5.0Gb/s\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"Width x4\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"Width x2\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"Width x1\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"%s: PBA No: %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [53 x i8] c"Using %s interrupts. %d rx queue(s), %d tx queue(s)\0A\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"MSI-X\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"MSI\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"legacy\00", align 1
@e1000_82575_info = external dso_local local_unnamed_addr constant %struct.e1000_info, align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@.str.37 = private unnamed_addr constant [68 x i8] c"Requested MTU size is not supported with XDP. Max frame size is %d\0A\00", align 1
@.str.38 = private unnamed_addr constant [42 x i8] c"remove administratively set MAC on VF %d\0A\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"setting MAC %pM on VF %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [52 x i8] c"Reload the VF driver to make this change effective.\00", align 1
@.str.41 = private unnamed_addr constant [63 x i8] c"The VF MAC address has been set, but the PF device is not up.\0A\00", align 1
@.str.42 = private unnamed_addr constant [64 x i8] c"Bring the PF device up before attempting to use the VF device.\0A\00", align 1
@.str.43 = private unnamed_addr constant [36 x i8] c"Setting VLAN %d, QOS 0x%x on VF %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [56 x i8] c"The VF VLAN has been set, but the PF device is not up.\0A\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"VF %u is %strusted\0A\00", align 1
@.str.46 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"not \00", align 1
@igb_block_cb_list = internal global %struct.list_head { ptr @igb_block_cb_list, ptr @igb_block_cb_list }, align 4
@tc_cls_can_offload_and_chain0.__msg = internal constant [40 x i8] c"Driver supports only offload of chain 0\00", align 1
@tc_can_offload_extack.__msg = internal constant [37 x i8] c"TC offload is disabled on net device\00", align 1
@igb_configure_clsflower.__msg = internal constant [27 x i8] c"igb: Invalid traffic class\00", align 1
@igb_configure_clsflower.__msg.48 = internal constant [43 x i8] c"igb: This filter is already set in ethtool\00", align 1
@igb_configure_clsflower.__msg.49 = internal constant [46 x i8] c"igb: This filter is already set in cls_flower\00", align 1
@igb_configure_clsflower.__msg.50 = internal constant [41 x i8] c"igb: Could not add filter to the adapter\00", align 1
@igb_parse_cls_flower.__msg = internal constant [81 x i8] c"igb: Unsupported key used, only BASIC, CONTROL, ETH_ADDRS and VLAN are supported\00", align 1
@igb_parse_cls_flower.__msg.51 = internal constant [63 x i8] c"igb: Only full masks are supported for destination MAC address\00", align 1
@igb_parse_cls_flower.__msg.52 = internal constant [58 x i8] c"igb: Only full masks are supported for source MAC address\00", align 1
@igb_parse_cls_flower.__msg.53 = internal constant [54 x i8] c"igb: Only full mask is supported for EtherType filter\00", align 1
@igb_parse_cls_flower.__msg.54 = internal constant [51 x i8] c"igb: Only full mask is supported for VLAN priority\00", align 1
@igb_xdp_setup.__msg = internal constant [56 x i8] c"igb: The RX buffer size is too small for the frame size\00", align 1
@.str.55 = private unnamed_addr constant [58 x i8] c"XDP RX buffer size %d is too small for the frame size %d\0A\00", align 1
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@.str.56 = private unnamed_addr constant [15 x i8] c"Reset adapter\0A\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"Net device Info\0A\00", align 1
@.str.58 = private unnamed_addr constant [53 x i8] c"\016igb: Device Name     state            trans_start\0A\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"\016igb: %-15s %016lX %016lX\0A\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"Register Dump\0A\00", align 1
@.str.61 = private unnamed_addr constant [31 x i8] c"\016igb:  Register Name   Value\0A\00", align 1
@igb_reg_info_tbl = internal unnamed_addr constant [23 x %struct.igb_reg_info] [%struct.igb_reg_info { i32 0, ptr @.str.85 }, %struct.igb_reg_info { i32 8, ptr @.str.86 }, %struct.igb_reg_info { i32 24, ptr @.str.87 }, %struct.igb_reg_info { i32 192, ptr @.str.88 }, %struct.igb_reg_info { i32 256, ptr @.str.89 }, %struct.igb_reg_info { i32 10248, ptr @.str.90 }, %struct.igb_reg_info { i32 10256, ptr @.str.91 }, %struct.igb_reg_info { i32 10264, ptr @.str.92 }, %struct.igb_reg_info { i32 10280, ptr @.str.93 }, %struct.igb_reg_info { i32 10240, ptr @.str.94 }, %struct.igb_reg_info { i32 10244, ptr @.str.95 }, %struct.igb_reg_info { i32 1024, ptr @.str.96 }, %struct.igb_reg_info { i32 14336, ptr @.str.97 }, %struct.igb_reg_info { i32 14340, ptr @.str.98 }, %struct.igb_reg_info { i32 14344, ptr @.str.99 }, %struct.igb_reg_info { i32 14352, ptr @.str.100 }, %struct.igb_reg_info { i32 14360, ptr @.str.101 }, %struct.igb_reg_info { i32 14376, ptr @.str.102 }, %struct.igb_reg_info { i32 13328, ptr @.str.103 }, %struct.igb_reg_info { i32 13336, ptr @.str.104 }, %struct.igb_reg_info { i32 13344, ptr @.str.105 }, %struct.igb_reg_info { i32 13360, ptr @.str.106 }, %struct.igb_reg_info zeroinitializer], align 4
@.str.62 = private unnamed_addr constant [18 x i8] c"TX Rings Summary\0A\00", align 1
@.str.63 = private unnamed_addr constant [62 x i8] c"\016igb: Queue [NTU] [NTC] [bi(ntc)->dma  ] leng ntw timestamp\0A\00", align 1
@.str.64 = private unnamed_addr constant [45 x i8] c"\016igb:  %5d %5X %5X %016llX %04X %p %016llX\0A\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"TX Rings Dump\0A\00", align 1
@.str.66 = private unnamed_addr constant [45 x i8] c"\016igb: ------------------------------------\0A\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"\016igb: TX QUEUE INDEX = %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [107 x i8] c"\016igb: T [desc]     [address 63:0  ] [PlPOCIStDDM Ln] [bi->dma       ] leng  ntw timestamp        bi->skb\0A\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c" NTC/U\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c" NTU\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c" NTC\00", align 1
@.str.72 = private unnamed_addr constant [68 x i8] c"\016igb: T [0x%03X]    %016llX %016llX %016llX %04X  %p %016llX %p%s\0A\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"RX Rings Summary\0A\00", align 1
@.str.75 = private unnamed_addr constant [26 x i8] c"\016igb: Queue [NTU] [NTC]\0A\00", align 1
@.str.76 = private unnamed_addr constant [21 x i8] c"\016igb:  %5d %5X %5X\0A\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"RX Rings Dump\0A\00", align 1
@.str.78 = private unnamed_addr constant [28 x i8] c"\016igb: RX QUEUE INDEX = %d\0A\00", align 1
@.str.79 = private unnamed_addr constant [107 x i8] c"\016igb: R  [desc]      [ PktBuf     A0] [  HeadBuf   DD] [bi->dma       ] [bi->skb] <-- Adv Rx Read format\0A\00", align 1
@.str.80 = private unnamed_addr constant [113 x i8] c"\016igb: RWB[desc]      [PcsmIpSHl PtRs] [vl er S cks ln] ---------------- [bi->skb] <-- Adv Rx Write-Back format\0A\00", align 1
@.str.81 = private unnamed_addr constant [59 x i8] c"\016igb: %s[0x%03X]     %016llX %016llX ---------------- %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"RWB\00", align 1
@.str.83 = private unnamed_addr constant [50 x i8] c"\016igb: %s[0x%03X]     %016llX %016llX %016llX %s\0A\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"R  \00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"CTRL\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"STATUS\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"CTRL_EXT\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"ICR\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"RCTL\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"RDLEN\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"RDH\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"RDT\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"RXDCTL\00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"RDBAL\00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"RDBAH\00", align 1
@.str.96 = private unnamed_addr constant [5 x i8] c"TCTL\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"TDBAL\00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"TDBAH\00", align 1
@.str.99 = private unnamed_addr constant [6 x i8] c"TDLEN\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"TDH\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"TDT\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"TXDCTL\00", align 1
@.str.103 = private unnamed_addr constant [5 x i8] c"TDFH\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"TDFT\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"TDFHS\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"TDFPC\00", align 1
@.str.107 = private unnamed_addr constant [19 x i8] c"\016igb: %-15s %08x\0A\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"[0-3]\00", align 1
@.str.110 = private unnamed_addr constant [34 x i8] c"\016igb: %-15s %08x %08x %08x %08x\0A\00", align 1
@.str.111 = private unnamed_addr constant [60 x i8] c"igb: %s NIC Link is Up %d Mbps %s Duplex, Flow Control: %s\0A\00", align 1
@.str.112 = private unnamed_addr constant [5 x i8] c"Full\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"Half\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"RX/TX\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c"RX\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"TX\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"None\00", align 1
@.str.118 = private unnamed_addr constant [88 x i8] c"EEE Disabled: unsupported at half duplex. Re-enable using ethtool when at full duplex.\0A\00", align 1
@.str.119 = private unnamed_addr constant [41 x i8] c"Link Speed was downgraded by SmartSpeed\0A\00", align 1
@.str.120 = private unnamed_addr constant [70 x i8] c"The network adapter link speed was downshifted because it overheated\0A\00", align 1
@.str.121 = private unnamed_addr constant [21 x i8] c"exceed max 2 second\0A\00", align 1
@.str.122 = private unnamed_addr constant [28 x i8] c"read 1000Base-T Status Reg\0A\00", align 1
@.str.123 = private unnamed_addr constant [55 x i8] c"The network adapter was stopped because it overheated\0A\00", align 1
@.str.124 = private unnamed_addr constant [26 x i8] c"igb: %s NIC Link is Down\0A\00", align 1
@.str.125 = private unnamed_addr constant [59 x i8] c"Link speed has been changed. VF Transmit rate is disabled\0A\00", align 1
@.str.126 = private unnamed_addr constant [37 x i8] c"MAS: changing media to fiber/serdes\0A\00", align 1
@.str.127 = private unnamed_addr constant [31 x i8] c"MAS: changing media to copper\0A\00", align 1
@.str.128 = private unnamed_addr constant [42 x i8] c"AMS: Invalid media type found, returning\0A\00", align 1
@.str.129 = private unnamed_addr constant [34 x i8] c"Spoof event(s) detected on VF %d\0A\00", align 1
@.str.130 = private unnamed_addr constant [56 x i8] c"malformed Tx packet detected and dropped, LVMMC:0x%08x\0A\00", align 1
@igb_i2c_algo = internal unnamed_addr constant %struct.i2c_algo_bit_data { ptr null, ptr @igb_set_i2c_data, ptr @igb_set_i2c_clk, ptr @igb_get_i2c_data, ptr @igb_get_i2c_clk, ptr null, ptr null, i32 5, i32 20, i8 0 }, align 4
@.str.131 = private unnamed_addr constant [7 x i8] c"igb BB\00", align 1
@.str.132 = private unnamed_addr constant [43 x i8] c"MAS: Enabling Media Autosense for port %d\0A\00", align 1
@.str.133 = private unnamed_addr constant [44 x i8] c"MAS: Invalid port configuration, returning\0A\00", align 1
@system_state = external dso_local local_unnamed_addr global i32, align 4
@.str.134 = private unnamed_addr constant [42 x i8] c"Cannot re-enable PCI device after reset.\0A\00", align 1
@.str.136 = private unnamed_addr constant [44 x i8] c"igb: Cannot enable PCI device from suspend\0A\00", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.137 = private unnamed_addr constant [35 x i8] c"Allocation for Tx Queue %u failed\0A\00", align 1
@.str.138 = private unnamed_addr constant [35 x i8] c"Allocation for Rx Queue %u failed\0A\00", align 1
@.str.139 = private unnamed_addr constant [28 x i8] c"Error %d getting interrupt\0A\00", align 1
@.str.140 = private unnamed_addr constant [66 x i8] c"The number of queue vectors (%d) is higher than max allowed (%d)\0A\00", align 1
@.str.141 = private unnamed_addr constant [11 x i8] c"%s-TxRx-%u\00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"%s-tx-%u\00", align 1
@.str.143 = private unnamed_addr constant [9 x i8] c"%s-rx-%u\00", align 1
@.str.144 = private unnamed_addr constant [10 x i8] c"%s-unused\00", align 1
@.str.145 = private unnamed_addr constant [33 x i8] c"Error receiving message from VF\0A\00", align 1
@.str.146 = private unnamed_addr constant [101 x i8] c"VF %d attempted to override administratively set VLAN tag\0AReload the VF driver to resume operations\0A\00", align 1
@.str.147 = private unnamed_addr constant [20 x i8] c"Unhandled Msg %08x\0A\00", align 1
@.str.148 = private unnamed_addr constant [104 x i8] c"VF %d attempted to override administratively set MAC address\0AReload the VF driver to resume operations\0A\00", align 1
@.str.149 = private unnamed_addr constant [36 x i8] c"VF %d attempted to set invalid MAC\0A\00", align 1
@.str.150 = private unnamed_addr constant [59 x i8] c"VF %d requested MAC filter but is administratively denied\0A\00", align 1
@.str.151 = private unnamed_addr constant [43 x i8] c"VF %d attempted to set invalid MAC filter\0A\00", align 1
@.str.152 = private unnamed_addr constant [61 x i8] c"VF %d has requested MAC filter but there is no space for it\0A\00", align 1
@.str.153 = private unnamed_addr constant [55 x i8] c"\015igb: igb: periodic output on %s missed falling edge\0A\00", align 1
@.str.154 = private unnamed_addr constant [54 x i8] c"\015igb: igb: periodic output on %s missed rising edge\0A\00", align 1
@dma_map_single_attrs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.155 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@.str.156 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@softnet_data = external dso_local global %struct.softnet_data, section ".data..percpu..shared_aligned", align 64
@.str.158 = private unnamed_addr constant [24 x i8] c"include/linux/if_vlan.h\00", align 1
@.str.159 = private unnamed_addr constant [19 x i8] c"TX DMA map failed\0A\00", align 1
@.str.160 = private unnamed_addr constant [39 x i8] c"Unable to allocate memory for vectors\0A\00", align 1
@.str.161 = private unnamed_addr constant [304 x i8] c"Detected Tx Unit Hang\0A  Tx Queue             <%d>\0A  TDH                  <%x>\0A  TDT                  <%x>\0A  next_to_use          <%x>\0A  next_to_clean        <%x>\0Abuffer_info[next_to_clean]\0A  time_stamp           <%lx>\0A  next_to_watch        <%p>\0A  jiffies              <%lx>\0A  desc.status          <%x>\0A\00", align 1
@bpf_master_redirect_enabled_key = external dso_local global %struct.static_key_false, align 4
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.162 = private unnamed_addr constant [38 x i8] c"Driver BUG: missing reserved tailroom\00", align 1
@__func__.xdp_update_frame_from_buff = private unnamed_addr constant [27 x i8] c"xdp_update_frame_from_buff\00", align 1
@__tracepoint_xdp_exception = external dso_local global %struct.tracepoint, align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@llvm.compiler.used = appending global [10 x ptr] [ptr @__UNIQUE_ID_author585, ptr @__UNIQUE_ID_debug590, ptr @__UNIQUE_ID_debugtype589, ptr @__UNIQUE_ID_description586, ptr @__UNIQUE_ID_file587, ptr @__UNIQUE_ID_license588, ptr @__exitcall_igb_exit_module, ptr @__initcall__kmod_igb__593_670_igb_init_module6, ptr @__param_debug, ptr @igb_exit_module], section "llvm.metadata"

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @igb_get_hw_dev(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr %0, align 4
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 64
  ret ptr %4
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @igb_init_module() #2 section ".init.text" {
  %1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, ptr noundef nonnull @igb_driver_string) #22
  %2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, ptr noundef nonnull @igb_copyright) #22
  %3 = tail call i32 @__pci_register_driver(ptr noundef nonnull @igb_driver, ptr noundef null, ptr noundef nonnull @.str.13) #23
  ret i32 %3
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @igb_exit_module() #2 section ".exit.text" {
  tail call void @pci_unregister_driver(ptr noundef nonnull @igb_driver) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_unregister_driver(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_rd32(ptr noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 1
  %4 = load volatile ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6, !prof !9

6:                                                ; preds = %2
  %7 = getelementptr i8, ptr %4, i32 %1
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %7) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %4) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %22

15:                                               ; preds = %12, %10
  %16 = getelementptr i8, ptr %0, i32 -592
  %17 = load ptr, ptr %16, align 64
  store ptr null, ptr %3, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %17, ptr noundef nonnull @.str) #22
  %18 = getelementptr i8, ptr %0, i32 -204
  %19 = load ptr, ptr %18, align 4
  %20 = tail call zeroext i1 @pci_device_is_present(ptr noundef %19) #23
  br i1 %20, label %21, label %22, !prof !9

21:                                               ; preds = %15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %1) #23
  br label %22

22:                                               ; preds = %21, %15, %12, %6, %2
  %23 = phi i32 [ -1, %2 ], [ -1, %15 ], [ -1, %21 ], [ -1, %12 ], [ %8, %6 ]
  ret i32 %23
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @pci_device_is_present(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_power_up_link(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 0, i32 9
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 %4(ptr noundef %2) #23
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 12
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @igb_power_up_phy_copper(ptr noundef %2) #23
  br label %14

13:                                               ; preds = %8
  tail call void @igb_power_up_serdes_link_82575(ptr noundef %2) #23
  br label %14

14:                                               ; preds = %13, %12
  %15 = tail call i32 @igb_setup_link(ptr noundef %2) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_power_up_phy_copper(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_power_up_serdes_link_82575(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_setup_link(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_up(ptr noundef %0) local_unnamed_addr #4 {
  tail call fastcc void @igb_configure(ptr noundef %0)
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 3
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %2) #23
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  %4 = load i32, ptr %3, align 16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %1
  %7 = phi i32 [ %11, %6 ], [ 0, %1 ]
  %8 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 45, i32 %7
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.igb_q_vector, ptr %9, i32 0, i32 8
  tail call void @napi_enable(ptr noundef %10) #23
  %11 = add nuw i32 %7, 1
  %12 = load i32, ptr %3, align 16
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %6, label %14

14:                                               ; preds = %6, %1
  %15 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 8192
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call fastcc void @igb_configure_msix(ptr noundef %0)
  br label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 45
  %22 = load ptr, ptr %21, align 4
  tail call fastcc void @igb_assign_vector(ptr noundef %22, i32 noundef 0)
  br label %23

23:                                               ; preds = %20, %19
  %24 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %25 = load volatile ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %41, label %27, !prof !9

27:                                               ; preds = %23
  %28 = getelementptr i8, ptr %25, i32 46700
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %28) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %41

31:                                               ; preds = %27
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %25) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %41

34:                                               ; preds = %31
  %35 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %36 = load ptr, ptr %35, align 64
  store ptr null, ptr %24, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %36, ptr noundef nonnull @.str) #22
  %37 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %38 = load ptr, ptr %37, align 4
  %39 = tail call zeroext i1 @pci_device_is_present(ptr noundef %38) #23
  br i1 %39, label %40, label %41, !prof !9

40:                                               ; preds = %34
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 46700) #23
  br label %41

41:                                               ; preds = %40, %34, %31, %27, %23
  %42 = load volatile ptr, ptr %24, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %58, label %44, !prof !9

44:                                               ; preds = %41
  %45 = getelementptr i8, ptr %42, i32 192
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %45) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %58

48:                                               ; preds = %44
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %42) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %58

51:                                               ; preds = %48
  %52 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %53 = load ptr, ptr %52, align 64
  store ptr null, ptr %24, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %53, ptr noundef nonnull @.str) #22
  %54 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %55 = load ptr, ptr %54, align 4
  %56 = tail call zeroext i1 @pci_device_is_present(ptr noundef %55) #23
  br i1 %56, label %57, label %58, !prof !9

57:                                               ; preds = %51
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 192) #23
  br label %58

58:                                               ; preds = %57, %51, %48, %44, %41
  tail call fastcc void @igb_irq_enable(ptr noundef %0)
  %59 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %60 = load i32, ptr %59, align 16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %86, label %62

62:                                               ; preds = %58
  %63 = load volatile ptr, ptr %24, align 4
  %64 = icmp eq ptr %63, null
  br i1 %64, label %79, label %65, !prof !9

65:                                               ; preds = %62
  %66 = getelementptr i8, ptr %63, i32 24
  %67 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %66) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %79

69:                                               ; preds = %65
  %70 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %63) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %72, label %79

72:                                               ; preds = %69
  %73 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %74 = load ptr, ptr %73, align 64
  store ptr null, ptr %24, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %74, ptr noundef nonnull @.str) #22
  %75 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %76 = load ptr, ptr %75, align 4
  %77 = tail call zeroext i1 @pci_device_is_present(ptr noundef %76) #23
  br i1 %77, label %78, label %79, !prof !9

78:                                               ; preds = %72
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 24) #23
  br label %79

79:                                               ; preds = %78, %72, %69, %65, %62
  %80 = phi i32 [ -1, %62 ], [ -1, %72 ], [ -1, %78 ], [ -1, %69 ], [ %67, %65 ]
  %81 = load volatile ptr, ptr %24, align 4
  %82 = icmp eq ptr %81, null
  br i1 %82, label %86, label %83, !prof !9

83:                                               ; preds = %79
  %84 = or i32 %80, 16384
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !13
  tail call void @arm_heavy_mb() #23
  %85 = getelementptr i8, ptr %81, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %85, i32 %84) #23, !srcloc !14
  br label %86

86:                                               ; preds = %83, %79, %58
  %87 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %88 = load ptr, ptr %87, align 64
  %89 = getelementptr inbounds %struct.net_device, ptr %88, i32 0, i32 88
  %90 = load i32, ptr %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %struct.net_device, ptr %88, i32 0, i32 87
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i32 [ 0, %92 ], [ %98, %94 ]
  %96 = load ptr, ptr %93, align 64
  %97 = getelementptr %struct.netdev_queue, ptr %96, i32 %95, i32 12
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %97) #23
  %98 = add nuw i32 %95, 1
  %99 = load i32, ptr %89, align 4
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %94, label %101

101:                                              ; preds = %94, %86
  %102 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 20
  store i8 1, ptr %102, align 1
  %103 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 29
  %104 = load ptr, ptr @system_wq, align 4
  %105 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %104, ptr noundef %103) #23
  %106 = load i32, ptr %15, align 4
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %101
  %110 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 11, i32 0, i32 2
  %111 = load i8, ptr %110, align 2, !range !15
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 86
  store i16 6, ptr %114, align 8
  br label %115

115:                                              ; preds = %113, %109, %101
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_configure(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca [10 x i32], align 4
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 64
  tail call fastcc void @igb_get_hw_control(ptr noundef %0)
  tail call void @igb_set_rx_mode(ptr noundef %4)
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %6 = load i32, ptr %5, align 4
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %8, label %138

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 131072
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %12, label %102, label %16

16:                                               ; preds = %8
  br i1 %15, label %30, label %17, !prof !9

17:                                               ; preds = %16
  %18 = getelementptr i8, ptr %14, i32 13680
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %18) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %30

21:                                               ; preds = %17
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %14) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = load ptr, ptr %3, align 64
  store ptr null, ptr %13, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %25, ptr noundef nonnull @.str) #22
  %26 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %27 = load ptr, ptr %26, align 4
  %28 = tail call zeroext i1 @pci_device_is_present(ptr noundef %27) #23
  br i1 %28, label %29, label %30, !prof !9

29:                                               ; preds = %24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13680) #23
  br label %30

30:                                               ; preds = %29, %24, %21, %17, %16
  %31 = phi i32 [ -1, %16 ], [ -1, %24 ], [ -1, %29 ], [ -1, %21 ], [ %19, %17 ]
  %32 = load volatile ptr, ptr %13, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %38, label %34, !prof !9

34:                                               ; preds = %30
  %35 = and i32 %31, -1042
  %36 = or i32 %35, 1025
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !16
  tail call void @arm_heavy_mb() #23
  %37 = getelementptr i8, ptr %32, i32 13680
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %37, i32 %36) #23, !srcloc !14
  br label %38

38:                                               ; preds = %34, %30
  %39 = load volatile ptr, ptr %13, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %54, label %41, !prof !9

41:                                               ; preds = %38
  %42 = getelementptr i8, ptr %39, i32 13316
  %43 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %42) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %54

45:                                               ; preds = %41
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %39) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %54

48:                                               ; preds = %45
  %49 = load ptr, ptr %3, align 64
  store ptr null, ptr %13, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %49, ptr noundef nonnull @.str) #22
  %50 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %51 = load ptr, ptr %50, align 4
  %52 = tail call zeroext i1 @pci_device_is_present(ptr noundef %51) #23
  br i1 %52, label %53, label %54, !prof !9

53:                                               ; preds = %48
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13316) #23
  br label %54

54:                                               ; preds = %53, %48, %45, %41, %38
  %55 = phi i32 [ -1, %38 ], [ -1, %48 ], [ -1, %53 ], [ -1, %45 ], [ %43, %41 ]
  %56 = load volatile ptr, ptr %13, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %62, label %58, !prof !9

58:                                               ; preds = %54
  %59 = and i32 %55, 1056964608
  %60 = or i32 %59, 1597830
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !17
  tail call void @arm_heavy_mb() #23
  %61 = getelementptr i8, ptr %56, i32 13316
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %61, i32 %60) #23, !srcloc !14
  br label %62

62:                                               ; preds = %58, %54
  %63 = load volatile ptr, ptr %13, align 4
  %64 = icmp eq ptr %63, null
  br i1 %64, label %78, label %65, !prof !9

65:                                               ; preds = %62
  %66 = getelementptr i8, ptr %63, i32 9220
  %67 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %66) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %78

69:                                               ; preds = %65
  %70 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %63) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %72, label %78

72:                                               ; preds = %69
  %73 = load ptr, ptr %3, align 64
  store ptr null, ptr %13, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %73, ptr noundef nonnull @.str) #22
  %74 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %75 = load ptr, ptr %74, align 4
  %76 = tail call zeroext i1 @pci_device_is_present(ptr noundef %75) #23
  br i1 %76, label %77, label %78, !prof !9

77:                                               ; preds = %72
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 9220) #23
  br label %78

78:                                               ; preds = %77, %72, %69, %65, %62
  %79 = phi i32 [ -1, %62 ], [ -1, %72 ], [ -1, %77 ], [ -1, %69 ], [ %67, %65 ]
  %80 = load volatile ptr, ptr %13, align 4
  %81 = icmp eq ptr %80, null
  br i1 %81, label %86, label %82, !prof !9

82:                                               ; preds = %78
  %83 = and i32 %79, -64
  %84 = or i32 %83, 30
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !18
  tail call void @arm_heavy_mb() #23
  %85 = getelementptr i8, ptr %80, i32 9220
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %85, i32 %84) #23, !srcloc !14
  br label %86

86:                                               ; preds = %82, %78
  %87 = load volatile ptr, ptr %13, align 4
  %88 = icmp eq ptr %87, null
  br i1 %88, label %91, label %89, !prof !9

89:                                               ; preds = %86
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !19
  tail call void @arm_heavy_mb() #23
  %90 = getelementptr i8, ptr %87, i32 13660
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %90, i32 63) #23, !srcloc !14
  br label %91

91:                                               ; preds = %89, %86
  %92 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %93 = load i32, ptr %92, align 8
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %138

95:                                               ; preds = %91
  %96 = icmp eq i32 %93, 1
  %97 = select i1 %96, i32 1, i32 2
  br label %98

98:                                               ; preds = %98, %95
  %99 = phi i32 [ %100, %98 ], [ 0, %95 ]
  tail call fastcc void @igb_config_tx_modes(ptr noundef %0, i32 noundef %99) #23
  %100 = add nuw nsw i32 %99, 1
  %101 = icmp eq i32 %100, %97
  br i1 %101, label %138, label %98

102:                                              ; preds = %8
  br i1 %15, label %105, label %103, !prof !9

103:                                              ; preds = %102
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !20
  tail call void @arm_heavy_mb() #23
  %104 = getelementptr i8, ptr %14, i32 9220
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %104, i32 162) #23, !srcloc !14
  br label %105

105:                                              ; preds = %103, %102
  %106 = load volatile ptr, ptr %13, align 4
  %107 = icmp eq ptr %106, null
  br i1 %107, label %110, label %108, !prof !9

108:                                              ; preds = %105
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !21
  tail call void @arm_heavy_mb() #23
  %109 = getelementptr i8, ptr %106, i32 13316
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %109, i32 67108884) #23, !srcloc !14
  br label %110

110:                                              ; preds = %108, %105
  %111 = load volatile ptr, ptr %13, align 4
  %112 = icmp eq ptr %111, null
  br i1 %112, label %115, label %113, !prof !9

113:                                              ; preds = %110
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !22
  tail call void @arm_heavy_mb() #23
  %114 = getelementptr i8, ptr %111, i32 13660
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %114, i32 152) #23, !srcloc !14
  br label %115

115:                                              ; preds = %113, %110
  %116 = load volatile ptr, ptr %13, align 4
  %117 = icmp eq ptr %116, null
  br i1 %117, label %131, label %118, !prof !9

118:                                              ; preds = %115
  %119 = getelementptr i8, ptr %116, i32 13680
  %120 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %119) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %131

122:                                              ; preds = %118
  %123 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %116) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %124 = icmp eq i32 %123, -1
  br i1 %124, label %125, label %131

125:                                              ; preds = %122
  %126 = load ptr, ptr %3, align 64
  store ptr null, ptr %13, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %126, ptr noundef nonnull @.str) #22
  %127 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %128 = load ptr, ptr %127, align 4
  %129 = tail call zeroext i1 @pci_device_is_present(ptr noundef %128) #23
  br i1 %129, label %130, label %131, !prof !9

130:                                              ; preds = %125
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13680) #23
  br label %131

131:                                              ; preds = %130, %125, %122, %118, %115
  %132 = phi i32 [ -1, %115 ], [ -1, %125 ], [ -1, %130 ], [ -1, %122 ], [ %120, %118 ]
  %133 = load volatile ptr, ptr %13, align 4
  %134 = icmp eq ptr %133, null
  br i1 %134, label %138, label %135, !prof !9

135:                                              ; preds = %131
  %136 = and i32 %132, -2
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !23
  tail call void @arm_heavy_mb() #23
  %137 = getelementptr i8, ptr %133, i32 13680
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %137, i32 %136) #23, !srcloc !14
  br label %138

138:                                              ; preds = %135, %131, %98, %91, %1
  %139 = load ptr, ptr %3, align 64
  %140 = getelementptr inbounds %struct.net_device, ptr %139, i32 0, i32 23
  %141 = load i64, ptr %140, align 16
  tail call fastcc void @igb_vlan_mode(ptr noundef %139, i64 noundef %141) #23
  %142 = load ptr, ptr %3, align 64
  %143 = getelementptr i8, ptr %142, i32 2512
  %144 = getelementptr i8, ptr %142, i32 4720
  %145 = load i32, ptr %144, align 16
  %146 = tail call i32 @igb_vfta_set(ptr noundef %143, i32 noundef 0, i32 noundef %145, i1 noundef zeroext true, i1 noundef zeroext false) #23
  %147 = getelementptr i8, ptr %142, i32 1408
  tail call void @_set_bit(i32 noundef 0, ptr noundef %147) #23
  %148 = tail call i32 @_find_next_bit_le(ptr noundef %0, i32 noundef 4096, i32 noundef 1) #23
  %149 = and i32 %148, 65535
  %150 = icmp ult i32 %149, 4096
  br i1 %150, label %151, label %177

151:                                              ; preds = %170, %138
  %152 = phi i32 [ %175, %170 ], [ %149, %138 ]
  %153 = phi i32 [ %174, %170 ], [ %148, %138 ]
  %154 = trunc i32 %153 to i16
  %155 = load ptr, ptr %3, align 64
  %156 = getelementptr i8, ptr %155, i32 2512
  %157 = getelementptr i8, ptr %155, i32 4720
  %158 = load i32, ptr %157, align 16
  %159 = icmp ne i16 %154, 0
  br i1 %159, label %160, label %167

160:                                              ; preds = %151
  %161 = getelementptr i8, ptr %155, i32 1932
  %162 = load i32, ptr %161, align 4
  %163 = and i32 %162, 32768
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %160
  %166 = and i32 %153, 65535
  br label %170

167:                                              ; preds = %160, %151
  %168 = and i32 %153, 65535
  %169 = tail call i32 @igb_vfta_set(ptr noundef %156, i32 noundef %168, i32 noundef %158, i1 noundef zeroext true, i1 noundef zeroext %159) #23
  br label %170

170:                                              ; preds = %167, %165
  %171 = phi i32 [ %166, %165 ], [ %168, %167 ]
  %172 = getelementptr i8, ptr %155, i32 1408
  tail call void @_set_bit(i32 noundef %171, ptr noundef %172) #23
  %173 = add nuw nsw i32 %152, 1
  %174 = tail call i32 @_find_next_bit_le(ptr noundef %0, i32 noundef 4096, i32 noundef %173) #23
  %175 = and i32 %174, 65535
  %176 = icmp ult i32 %175, 4096
  br i1 %176, label %151, label %177

177:                                              ; preds = %170, %138
  tail call void @igb_setup_tctl(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %2) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(40) %2, i8 0, i32 40, i1 false) #23, !annotation !24
  call void @netdev_rss_key_fill(ptr noundef nonnull %2, i32 noundef 40) #23
  %178 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %179 = load volatile ptr, ptr %178, align 4
  %180 = icmp eq ptr %179, null
  br i1 %180, label %184, label %181, !prof !9

181:                                              ; preds = %177
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %182 = load i32, ptr %2, align 4
  %183 = getelementptr i8, ptr %179, i32 23680
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %183, i32 %182) #23, !srcloc !14
  br label %184

184:                                              ; preds = %181, %177
  %185 = load volatile ptr, ptr %178, align 4
  %186 = icmp eq ptr %185, null
  br i1 %186, label %191, label %187, !prof !9

187:                                              ; preds = %184
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %188 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 1
  %189 = load i32, ptr %188, align 4
  %190 = getelementptr i8, ptr %185, i32 23684
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %190, i32 %189) #23, !srcloc !14
  br label %191

191:                                              ; preds = %187, %184
  %192 = load volatile ptr, ptr %178, align 4
  %193 = icmp eq ptr %192, null
  br i1 %193, label %198, label %194, !prof !9

194:                                              ; preds = %191
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %195 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 2
  %196 = load i32, ptr %195, align 4
  %197 = getelementptr i8, ptr %192, i32 23688
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %197, i32 %196) #23, !srcloc !14
  br label %198

198:                                              ; preds = %194, %191
  %199 = load volatile ptr, ptr %178, align 4
  %200 = icmp eq ptr %199, null
  br i1 %200, label %205, label %201, !prof !9

201:                                              ; preds = %198
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %202 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 3
  %203 = load i32, ptr %202, align 4
  %204 = getelementptr i8, ptr %199, i32 23692
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %204, i32 %203) #23, !srcloc !14
  br label %205

205:                                              ; preds = %201, %198
  %206 = load volatile ptr, ptr %178, align 4
  %207 = icmp eq ptr %206, null
  br i1 %207, label %212, label %208, !prof !9

208:                                              ; preds = %205
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %209 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 4
  %210 = load i32, ptr %209, align 4
  %211 = getelementptr i8, ptr %206, i32 23696
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %211, i32 %210) #23, !srcloc !14
  br label %212

212:                                              ; preds = %208, %205
  %213 = load volatile ptr, ptr %178, align 4
  %214 = icmp eq ptr %213, null
  br i1 %214, label %219, label %215, !prof !9

215:                                              ; preds = %212
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %216 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 5
  %217 = load i32, ptr %216, align 4
  %218 = getelementptr i8, ptr %213, i32 23700
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %218, i32 %217) #23, !srcloc !14
  br label %219

219:                                              ; preds = %215, %212
  %220 = load volatile ptr, ptr %178, align 4
  %221 = icmp eq ptr %220, null
  br i1 %221, label %226, label %222, !prof !9

222:                                              ; preds = %219
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %223 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 6
  %224 = load i32, ptr %223, align 4
  %225 = getelementptr i8, ptr %220, i32 23704
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %225, i32 %224) #23, !srcloc !14
  br label %226

226:                                              ; preds = %222, %219
  %227 = load volatile ptr, ptr %178, align 4
  %228 = icmp eq ptr %227, null
  br i1 %228, label %233, label %229, !prof !9

229:                                              ; preds = %226
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %230 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 7
  %231 = load i32, ptr %230, align 4
  %232 = getelementptr i8, ptr %227, i32 23708
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %232, i32 %231) #23, !srcloc !14
  br label %233

233:                                              ; preds = %229, %226
  %234 = load volatile ptr, ptr %178, align 4
  %235 = icmp eq ptr %234, null
  br i1 %235, label %240, label %236, !prof !9

236:                                              ; preds = %233
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %237 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 8
  %238 = load i32, ptr %237, align 4
  %239 = getelementptr i8, ptr %234, i32 23712
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %239, i32 %238) #23, !srcloc !14
  br label %240

240:                                              ; preds = %236, %233
  %241 = load volatile ptr, ptr %178, align 4
  %242 = icmp eq ptr %241, null
  br i1 %242, label %247, label %243, !prof !9

243:                                              ; preds = %240
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !25
  call void @arm_heavy_mb() #23
  %244 = getelementptr inbounds [10 x i32], ptr %2, i32 0, i32 9
  %245 = load i32, ptr %244, align 4
  %246 = getelementptr i8, ptr %241, i32 23716
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %246, i32 %245) #23, !srcloc !14
  br label %247

247:                                              ; preds = %243, %240
  %248 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %249 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  %250 = load i32, ptr %249, align 4
  %251 = load i32, ptr %5, align 4
  %252 = icmp eq i32 %251, 2
  br i1 %252, label %253, label %258

253:                                              ; preds = %247
  %254 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %255 = load i32, ptr %254, align 16
  %256 = icmp eq i32 %255, 0
  %257 = select i1 %256, i32 %250, i32 2
  br label %258

258:                                              ; preds = %253, %247
  %259 = phi i32 [ %250, %247 ], [ %257, %253 ]
  %260 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 81
  %261 = load i32, ptr %260, align 4
  %262 = icmp eq i32 %261, %259
  br i1 %262, label %272, label %263

263:                                              ; preds = %263, %258
  %264 = phi i32 [ %269, %263 ], [ 0, %258 ]
  %265 = mul i32 %264, %259
  %266 = lshr i32 %265, 7
  %267 = trunc i32 %266 to i8
  %268 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 82, i32 %264
  store i8 %267, ptr %268, align 1
  %269 = add nuw nsw i32 %264, 1
  %270 = icmp eq i32 %269, 128
  br i1 %270, label %271, label %263

271:                                              ; preds = %263
  store i32 %259, ptr %260, align 4
  br label %272

272:                                              ; preds = %271, %258
  call void @igb_write_rss_indir_tbl(ptr noundef %0) #23
  %273 = load volatile ptr, ptr %178, align 4
  %274 = icmp eq ptr %273, null
  br i1 %274, label %288, label %275, !prof !9

275:                                              ; preds = %272
  %276 = getelementptr i8, ptr %273, i32 20480
  %277 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %276) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %278 = icmp eq i32 %277, -1
  br i1 %278, label %279, label %288

279:                                              ; preds = %275
  %280 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %273) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %281 = icmp eq i32 %280, -1
  br i1 %281, label %282, label %288

282:                                              ; preds = %279
  %283 = load ptr, ptr %3, align 64
  store ptr null, ptr %178, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %283, ptr noundef nonnull @.str) #22
  %284 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %285 = load ptr, ptr %284, align 4
  %286 = call zeroext i1 @pci_device_is_present(ptr noundef %285) #23
  br i1 %286, label %287, label %288, !prof !9

287:                                              ; preds = %282
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 20480) #23
  br label %288

288:                                              ; preds = %287, %282, %279, %275, %272
  %289 = phi i32 [ -1, %272 ], [ -1, %282 ], [ -1, %287 ], [ -1, %279 ], [ %277, %275 ]
  %290 = load i32, ptr %5, align 16
  %291 = load volatile ptr, ptr %178, align 4
  %292 = icmp eq ptr %291, null
  br i1 %292, label %298, label %293, !prof !9

293:                                              ; preds = %288
  %294 = icmp ugt i32 %290, 1
  %295 = select i1 %294, i32 10240, i32 8192
  %296 = or i32 %295, %289
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !26
  call void @arm_heavy_mb() #23
  %297 = getelementptr i8, ptr %291, i32 20480
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %297, i32 %296) #23, !srcloc !14
  br label %298

298:                                              ; preds = %293, %288
  %299 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %300 = load i32, ptr %299, align 4
  %301 = and i32 %300, 64
  %302 = icmp eq i32 %301, 0
  %303 = select i1 %302, i32 3604480, i32 7798784
  %304 = shl i32 %300, 16
  %305 = and i32 %304, 8388608
  %306 = or i32 %303, %305
  %307 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %308 = load i32, ptr %307, align 16
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %343, label %310

310:                                              ; preds = %298
  %311 = load i32, ptr %5, align 4
  %312 = icmp ugt i32 %311, 1
  br i1 %312, label %313, label %339

313:                                              ; preds = %310
  %314 = load volatile ptr, ptr %178, align 4
  %315 = icmp eq ptr %314, null
  br i1 %315, label %329, label %316, !prof !9

316:                                              ; preds = %313
  %317 = getelementptr i8, ptr %314, i32 22556
  %318 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %317) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %319 = icmp eq i32 %318, -1
  br i1 %319, label %320, label %329

320:                                              ; preds = %316
  %321 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %314) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %322 = icmp eq i32 %321, -1
  br i1 %322, label %323, label %329

323:                                              ; preds = %320
  %324 = load ptr, ptr %3, align 64
  store ptr null, ptr %178, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %324, ptr noundef nonnull @.str) #22
  %325 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %326 = load ptr, ptr %325, align 4
  %327 = call zeroext i1 @pci_device_is_present(ptr noundef %326) #23
  br i1 %327, label %328, label %329, !prof !9

328:                                              ; preds = %323
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 22556) #23
  br label %329

329:                                              ; preds = %328, %323, %320, %316, %313
  %330 = phi i32 [ -1, %313 ], [ -1, %323 ], [ -1, %328 ], [ -1, %320 ], [ %318, %316 ]
  %331 = load i32, ptr %307, align 16
  %332 = load volatile ptr, ptr %178, align 4
  %333 = icmp eq ptr %332, null
  br i1 %333, label %339, label %334, !prof !9

334:                                              ; preds = %329
  %335 = and i32 %330, -536871809
  %336 = shl i32 %331, 7
  %337 = or i32 %336, %335
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !27
  call void @arm_heavy_mb() #23
  %338 = getelementptr i8, ptr %332, i32 22556
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %338, i32 %337) #23, !srcloc !14
  br label %339

339:                                              ; preds = %334, %329, %310
  %340 = load i32, ptr %249, align 4
  %341 = icmp ugt i32 %340, 1
  %342 = select i1 %341, i32 5, i32 3
  br label %343

343:                                              ; preds = %339, %298
  %344 = phi i32 [ %342, %339 ], [ 2, %298 ]
  %345 = or i32 %306, %344
  %346 = load i32, ptr %5, align 4
  switch i32 %346, label %399 [
    i32 4, label %393
    i32 3, label %370
    i32 2, label %347
  ]

347:                                              ; preds = %343
  %348 = load volatile ptr, ptr %178, align 4
  %349 = icmp eq ptr %348, null
  br i1 %349, label %363, label %350, !prof !9

350:                                              ; preds = %347
  %351 = getelementptr i8, ptr %348, i32 13712
  %352 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %351) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %353 = icmp eq i32 %352, -1
  br i1 %353, label %354, label %363

354:                                              ; preds = %350
  %355 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %348) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %356 = icmp eq i32 %355, -1
  br i1 %356, label %357, label %363

357:                                              ; preds = %354
  %358 = load ptr, ptr %3, align 64
  store ptr null, ptr %178, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %358, ptr noundef nonnull @.str) #22
  %359 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %360 = load ptr, ptr %359, align 4
  %361 = call zeroext i1 @pci_device_is_present(ptr noundef %360) #23
  br i1 %361, label %362, label %363, !prof !9

362:                                              ; preds = %357
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13712) #23
  br label %363

363:                                              ; preds = %362, %357, %354, %350, %347
  %364 = phi i32 [ -1, %347 ], [ -1, %357 ], [ -1, %362 ], [ -1, %354 ], [ %352, %350 ]
  %365 = load volatile ptr, ptr %178, align 4
  %366 = icmp eq ptr %365, null
  br i1 %366, label %370, label %367, !prof !9

367:                                              ; preds = %363
  %368 = or i32 %364, 8
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !28
  call void @arm_heavy_mb() #23
  %369 = getelementptr i8, ptr %365, i32 13712
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %369, i32 %368) #23, !srcloc !14
  br label %370

370:                                              ; preds = %367, %363, %343
  %371 = load volatile ptr, ptr %178, align 4
  %372 = icmp eq ptr %371, null
  br i1 %372, label %386, label %373, !prof !9

373:                                              ; preds = %370
  %374 = getelementptr i8, ptr %371, i32 23280
  %375 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %374) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %376 = icmp eq i32 %375, -1
  br i1 %376, label %377, label %386

377:                                              ; preds = %373
  %378 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %371) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %379 = icmp eq i32 %378, -1
  br i1 %379, label %380, label %386

380:                                              ; preds = %377
  %381 = load ptr, ptr %3, align 64
  store ptr null, ptr %178, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %381, ptr noundef nonnull @.str) #22
  %382 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %383 = load ptr, ptr %382, align 4
  %384 = call zeroext i1 @pci_device_is_present(ptr noundef %383) #23
  br i1 %384, label %385, label %386, !prof !9

385:                                              ; preds = %380
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 23280) #23
  br label %386

386:                                              ; preds = %385, %380, %377, %373, %370
  %387 = phi i32 [ -1, %370 ], [ -1, %380 ], [ -1, %385 ], [ -1, %377 ], [ %375, %373 ]
  %388 = load volatile ptr, ptr %178, align 4
  %389 = icmp eq ptr %388, null
  br i1 %389, label %393, label %390, !prof !9

390:                                              ; preds = %386
  %391 = or i32 %387, 1073741824
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !29
  call void @arm_heavy_mb() #23
  %392 = getelementptr i8, ptr %388, i32 23280
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %392, i32 %391) #23, !srcloc !14
  br label %393

393:                                              ; preds = %390, %386, %343
  %394 = load i32, ptr %307, align 16
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %398, label %396

396:                                              ; preds = %393
  call void @igb_vmdq_set_loopback_pf(ptr noundef %248, i1 noundef zeroext true) #23
  call void @igb_vmdq_set_replication_pf(ptr noundef %248, i1 noundef zeroext true) #23
  %397 = load i32, ptr %307, align 16
  call void @igb_vmdq_set_anti_spoofing_pf(ptr noundef %248, i1 noundef zeroext true, i32 noundef %397) #23
  br label %399

398:                                              ; preds = %393
  call void @igb_vmdq_set_loopback_pf(ptr noundef %248, i1 noundef zeroext false) #23
  call void @igb_vmdq_set_replication_pf(ptr noundef %248, i1 noundef zeroext false) #23
  br label %399

399:                                              ; preds = %398, %396, %343
  %400 = load volatile ptr, ptr %178, align 4
  %401 = icmp eq ptr %400, null
  br i1 %401, label %404, label %402, !prof !9

402:                                              ; preds = %399
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !30
  call void @arm_heavy_mb() #23
  %403 = getelementptr i8, ptr %400, i32 22552
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %403, i32 %345) #23, !srcloc !14
  br label %404

404:                                              ; preds = %402, %399
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2) #23
  call void @igb_setup_rctl(ptr noundef %0)
  %405 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 90
  call void @_raw_spin_lock(ptr noundef %405) #23
  %406 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 87
  %407 = load ptr, ptr %406, align 4
  %408 = icmp eq ptr %407, null
  br i1 %408, label %414, label %409

409:                                              ; preds = %409, %404
  %410 = phi ptr [ %412, %409 ], [ %407, %404 ]
  %411 = call i32 @igb_add_filter(ptr noundef %0, ptr noundef nonnull %410) #23
  %412 = load ptr, ptr %410, align 4
  %413 = icmp eq ptr %412, null
  br i1 %413, label %414, label %409

414:                                              ; preds = %409, %404
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %415 = load i16, ptr %405, align 4
  %416 = add i16 %415, 1
  store i16 %416, ptr %405, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  %417 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %418 = load i32, ptr %417, align 8
  %419 = icmp sgt i32 %418, 0
  br i1 %419, label %420, label %443

420:                                              ; preds = %439, %414
  %421 = phi i32 [ %440, %439 ], [ %418, %414 ]
  %422 = phi i32 [ %441, %439 ], [ 0, %414 ]
  %423 = load volatile ptr, ptr %178, align 4
  %424 = icmp eq ptr %423, null
  br i1 %424, label %439, label %425, !prof !9

425:                                              ; preds = %420
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !35
  call void @arm_heavy_mb() #23
  %426 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %422
  %427 = load ptr, ptr %426, align 4
  %428 = getelementptr inbounds %struct.igb_ring, ptr %427, i32 0, i32 12
  %429 = load i8, ptr %428, align 1
  %430 = zext i8 %429 to i32
  %431 = icmp ult i8 %429, 4
  %432 = shl nuw nsw i32 %430, 8
  %433 = add nuw nsw i32 %432, 14376
  %434 = shl nuw nsw i32 %430, 6
  %435 = add nuw nsw i32 %434, 57384
  %436 = select i1 %431, i32 %433, i32 %435
  %437 = getelementptr i8, ptr %423, i32 %436
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %437, i32 0) #23, !srcloc !14
  %438 = load i32, ptr %417, align 8
  br label %439

439:                                              ; preds = %425, %420
  %440 = phi i32 [ %438, %425 ], [ %421, %420 ]
  %441 = add nuw nsw i32 %422, 1
  %442 = icmp slt i32 %441, %440
  br i1 %442, label %420, label %443

443:                                              ; preds = %439, %414
  %444 = load volatile ptr, ptr %178, align 4
  %445 = icmp eq ptr %444, null
  br i1 %445, label %459, label %446, !prof !9

446:                                              ; preds = %443
  %447 = getelementptr i8, ptr %444, i32 8
  %448 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %447) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %449 = icmp eq i32 %448, -1
  br i1 %449, label %450, label %459

450:                                              ; preds = %446
  %451 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %444) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %452 = icmp eq i32 %451, -1
  br i1 %452, label %453, label %459

453:                                              ; preds = %450
  %454 = load ptr, ptr %3, align 64
  store ptr null, ptr %178, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %454, ptr noundef nonnull @.str) #22
  %455 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %456 = load ptr, ptr %455, align 4
  %457 = call zeroext i1 @pci_device_is_present(ptr noundef %456) #23
  br i1 %457, label %458, label %459, !prof !9

458:                                              ; preds = %453
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %459

459:                                              ; preds = %458, %453, %450, %446, %443
  call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #23
  %460 = load i32, ptr %417, align 8
  %461 = icmp sgt i32 %460, 0
  br i1 %461, label %462, label %469

462:                                              ; preds = %462, %459
  %463 = phi i32 [ %466, %462 ], [ 0, %459 ]
  %464 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %463
  %465 = load ptr, ptr %464, align 4
  call void @igb_configure_tx_ring(ptr noundef %0, ptr noundef %465) #23
  %466 = add nuw nsw i32 %463, 1
  %467 = load i32, ptr %417, align 8
  %468 = icmp slt i32 %466, %467
  br i1 %468, label %462, label %469

469:                                              ; preds = %462, %459
  %470 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  %471 = load ptr, ptr %470, align 64
  %472 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 1
  %473 = load i32, ptr %472, align 4
  store i32 %473, ptr %471, align 4
  %474 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 1, i32 4
  %475 = load i16, ptr %474, align 2
  %476 = getelementptr i8, ptr %471, i32 4
  store i16 %475, ptr %476, align 2
  %477 = load i32, ptr %307, align 16
  %478 = trunc i32 %477 to i8
  %479 = getelementptr inbounds %struct.igb_mac_addr, ptr %471, i32 0, i32 1
  store i8 %478, ptr %479, align 1
  %480 = getelementptr inbounds %struct.igb_mac_addr, ptr %471, i32 0, i32 2
  store i8 3, ptr %480, align 1
  call fastcc void @igb_rar_set_index(ptr noundef %0, i32 noundef 0) #23
  %481 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %482 = load i32, ptr %481, align 4
  %483 = icmp sgt i32 %482, 0
  br i1 %483, label %484, label %502

484:                                              ; preds = %469
  %485 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 17
  br label %486

486:                                              ; preds = %498, %484
  %487 = phi i32 [ 0, %484 ], [ %499, %498 ]
  %488 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %487
  %489 = load ptr, ptr %488, align 4
  %490 = getelementptr inbounds %struct.igb_ring, ptr %489, i32 0, i32 6
  call void @_clear_bit(i32 noundef 1, ptr noundef %490) #23
  call void @_clear_bit(i32 noundef 0, ptr noundef %490) #23
  %491 = load i32, ptr %299, align 4
  %492 = and i32 %491, 65536
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %498

494:                                              ; preds = %486
  call void @_set_bit(i32 noundef 1, ptr noundef %490) #23
  %495 = load i32, ptr %485, align 64
  %496 = icmp ult i32 %495, 1535
  br i1 %496, label %498, label %497

497:                                              ; preds = %494
  call void @_set_bit(i32 noundef 0, ptr noundef %490) #23
  br label %498

498:                                              ; preds = %497, %494, %486
  call void @igb_configure_rx_ring(ptr noundef %0, ptr noundef %489) #23
  %499 = add nuw nsw i32 %487, 1
  %500 = load i32, ptr %481, align 4
  %501 = icmp slt i32 %499, %500
  br i1 %501, label %486, label %502

502:                                              ; preds = %498, %469
  call void @igb_rx_fifo_flush_82575(ptr noundef %248) #23
  %503 = load i32, ptr %481, align 4
  %504 = icmp sgt i32 %503, 0
  br i1 %504, label %505, label %528

505:                                              ; preds = %523, %502
  %506 = phi i32 [ %525, %523 ], [ 0, %502 ]
  %507 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %506
  %508 = load ptr, ptr %507, align 4
  %509 = getelementptr inbounds %struct.igb_ring, ptr %508, i32 0, i32 19
  %510 = load i16, ptr %509, align 64
  %511 = getelementptr inbounds %struct.igb_ring, ptr %508, i32 0, i32 20
  %512 = load i16, ptr %511, align 2
  %513 = icmp ugt i16 %510, %512
  br i1 %513, label %514, label %517

514:                                              ; preds = %505
  %515 = xor i16 %512, -1
  %516 = add i16 %510, %515
  br label %523

517:                                              ; preds = %505
  %518 = getelementptr inbounds %struct.igb_ring, ptr %508, i32 0, i32 10
  %519 = load i16, ptr %518, align 8
  %520 = xor i16 %512, -1
  %521 = add i16 %510, %520
  %522 = add i16 %521, %519
  br label %523

523:                                              ; preds = %517, %514
  %524 = phi i16 [ %516, %514 ], [ %522, %517 ]
  call void @igb_alloc_rx_buffers(ptr noundef %508, i16 noundef zeroext %524)
  %525 = add nuw nsw i32 %506, 1
  %526 = load i32, ptr %481, align 4
  %527 = icmp slt i32 %525, %526
  br i1 %527, label %505, label %528

528:                                              ; preds = %523, %502
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_configure_msix(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 46
  store i32 0, ptr %2, align 4
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %4 = load i32, ptr %3, align 4
  switch i32 %4, label %50 [
    i32 1, label %5
    i32 2, label %38
    i32 3, label %38
    i32 4, label %38
    i32 5, label %38
    i32 6, label %38
    i32 7, label %38
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %23, label %9, !prof !9

9:                                                ; preds = %5
  %10 = getelementptr i8, ptr %7, i32 24
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %10) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %7) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 64
  store ptr null, ptr %6, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %18, ptr noundef nonnull @.str) #22
  %19 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %20 = load ptr, ptr %19, align 4
  %21 = tail call zeroext i1 @pci_device_is_present(ptr noundef %20) #23
  br i1 %21, label %22, label %23, !prof !9

22:                                               ; preds = %16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 24) #23
  br label %23

23:                                               ; preds = %22, %16, %13, %9, %5
  %24 = phi i32 [ -1, %5 ], [ -1, %16 ], [ -1, %22 ], [ -1, %13 ], [ %11, %9 ]
  %25 = load volatile ptr, ptr %6, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %30, label %27, !prof !9

27:                                               ; preds = %23
  %28 = or i32 %24, -2130706431
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !36
  tail call void @arm_heavy_mb() #23
  %29 = getelementptr i8, ptr %25, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %29, i32 %28) #23, !srcloc !14
  br label %30

30:                                               ; preds = %27, %23
  %31 = load volatile ptr, ptr %6, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33, !prof !9

33:                                               ; preds = %30
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !37
  tail call void @arm_heavy_mb() #23
  %34 = getelementptr i8, ptr %31, i32 5632
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %34, i32 -2147483648) #23, !srcloc !14
  br label %35

35:                                               ; preds = %33, %30
  %36 = phi i32 [ 0, %30 ], [ 1, %33 ]
  %37 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 47
  store i32 -2147483648, ptr %37, align 8
  br label %50

38:                                               ; preds = %1, %1, %1, %1, %1, %1
  %39 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %40 = load volatile ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %44, label %42, !prof !9

42:                                               ; preds = %38
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !38
  tail call void @arm_heavy_mb() #23
  %43 = getelementptr i8, ptr %40, i32 5396
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %43, i32 -1073741807) #23, !srcloc !14
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 47
  store i32 1, ptr %45, align 8
  %46 = load volatile ptr, ptr %39, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %50, label %48, !prof !9

48:                                               ; preds = %44
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !39
  tail call void @arm_heavy_mb() #23
  %49 = getelementptr i8, ptr %46, i32 5952
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %49, i32 32768) #23, !srcloc !14
  br label %50

50:                                               ; preds = %48, %44, %35, %1
  %51 = phi i32 [ 0, %1 ], [ %36, %35 ], [ 1, %48 ], [ 1, %44 ]
  %52 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 47
  %53 = load i32, ptr %52, align 8
  %54 = load i32, ptr %2, align 4
  %55 = or i32 %54, %53
  store i32 %55, ptr %2, align 4
  %56 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  %57 = load i32, ptr %56, align 16
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %59, %50
  %60 = phi i32 [ %65, %59 ], [ 0, %50 ]
  %61 = phi i32 [ %64, %59 ], [ %51, %50 ]
  %62 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 45, i32 %60
  %63 = load ptr, ptr %62, align 4
  %64 = add i32 %61, 1
  tail call fastcc void @igb_assign_vector(ptr noundef %63, i32 noundef %61)
  %65 = add nuw i32 %60, 1
  %66 = load i32, ptr %56, align 16
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %59, label %68

68:                                               ; preds = %59, %50
  %69 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %70 = load volatile ptr, ptr %69, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %86, label %72, !prof !9

72:                                               ; preds = %68
  %73 = getelementptr i8, ptr %70, i32 8
  %74 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %73) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %76, label %86

76:                                               ; preds = %72
  %77 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %70) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %79, label %86

79:                                               ; preds = %76
  %80 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %81 = load ptr, ptr %80, align 64
  store ptr null, ptr %69, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %81, ptr noundef nonnull @.str) #22
  %82 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %83 = load ptr, ptr %82, align 4
  %84 = tail call zeroext i1 @pci_device_is_present(ptr noundef %83) #23
  br i1 %84, label %85, label %86, !prof !9

85:                                               ; preds = %79
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %86

86:                                               ; preds = %85, %79, %76, %72, %68
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_assign_vector(ptr nocapture noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = load ptr, ptr %0, align 64
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %3, i32 0, i32 37
  %5 = getelementptr inbounds %struct.igb_q_vector, ptr %0, i32 0, i32 6
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.igb_ring, ptr %6, i32 0, i32 12
  %10 = load i8, ptr %9, align 1
  %11 = zext i8 %10 to i32
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi i32 [ %11, %8 ], [ -1, %2 ]
  %14 = getelementptr inbounds %struct.igb_q_vector, ptr %0, i32 0, i32 7
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.igb_ring, ptr %15, i32 0, i32 12
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i32
  br label %21

21:                                               ; preds = %17, %12
  %22 = phi i32 [ %20, %17 ], [ -1, %12 ]
  %23 = getelementptr inbounds %struct.igb_adapter, ptr %3, i32 0, i32 37, i32 4, i32 3
  %24 = load i32, ptr %23, align 4
  switch i32 %24, label %77 [
    i32 1, label %25
    i32 2, label %47
    i32 3, label %62
    i32 4, label %62
    i32 5, label %62
    i32 6, label %62
    i32 7, label %62
  ]

25:                                               ; preds = %21
  %26 = shl nuw i32 1, %13
  %27 = icmp slt i32 %13, 0
  %28 = select i1 %27, i32 0, i32 %26
  %29 = shl i32 256, %22
  %30 = icmp slt i32 %22, 0
  %31 = select i1 %30, i32 0, i32 %29
  %32 = or i32 %31, %28
  %33 = getelementptr inbounds %struct.igb_adapter, ptr %3, i32 0, i32 4
  %34 = load i32, ptr %33, align 4
  %35 = and i32 %34, 8192
  %36 = or i32 %35, %1
  %37 = icmp eq i32 %36, 0
  %38 = or i32 %32, -2147483648
  %39 = select i1 %37, i32 %38, i32 %32
  %40 = getelementptr inbounds %struct.igb_adapter, ptr %3, i32 0, i32 37, i32 1
  %41 = load volatile ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %78, label %43, !prof !9

43:                                               ; preds = %25
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !40
  tail call void @arm_heavy_mb() #23
  %44 = shl i32 %1, 2
  %45 = add i32 %44, 5632
  %46 = getelementptr i8, ptr %41, i32 %45
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %46, i32 %39) #23, !srcloc !14
  br label %78

47:                                               ; preds = %21
  %48 = icmp sgt i32 %13, -1
  br i1 %48, label %49, label %53

49:                                               ; preds = %47
  %50 = and i32 %13, 7
  %51 = shl nuw nsw i32 %13, 1
  %52 = and i32 %51, 16
  tail call fastcc void @igb_write_ivar(ptr noundef %4, i32 noundef %1, i32 noundef %50, i32 noundef %52)
  br label %53

53:                                               ; preds = %49, %47
  %54 = icmp sgt i32 %22, -1
  br i1 %54, label %55, label %60

55:                                               ; preds = %53
  %56 = and i32 %22, 7
  %57 = shl nuw nsw i32 %22, 1
  %58 = and i32 %57, 16
  %59 = or i32 %58, 8
  tail call fastcc void @igb_write_ivar(ptr noundef %4, i32 noundef %1, i32 noundef %56, i32 noundef %59)
  br label %60

60:                                               ; preds = %55, %53
  %61 = shl nuw i32 1, %1
  br label %78

62:                                               ; preds = %21, %21, %21, %21, %21
  %63 = icmp sgt i32 %13, -1
  br i1 %63, label %64, label %68

64:                                               ; preds = %62
  %65 = lshr i32 %13, 1
  %66 = shl nuw nsw i32 %13, 4
  %67 = and i32 %66, 16
  tail call fastcc void @igb_write_ivar(ptr noundef %4, i32 noundef %1, i32 noundef %65, i32 noundef %67)
  br label %68

68:                                               ; preds = %64, %62
  %69 = icmp sgt i32 %22, -1
  br i1 %69, label %70, label %75

70:                                               ; preds = %68
  %71 = lshr i32 %22, 1
  %72 = shl nuw nsw i32 %22, 4
  %73 = and i32 %72, 16
  %74 = or i32 %73, 8
  tail call fastcc void @igb_write_ivar(ptr noundef %4, i32 noundef %1, i32 noundef %71, i32 noundef %74)
  br label %75

75:                                               ; preds = %70, %68
  %76 = shl nuw i32 1, %1
  br label %78

77:                                               ; preds = %21
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/net/ethernet/intel/igb/igb_main.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 846, 0\0A.popsection", ""() #23, !srcloc !41
  unreachable

78:                                               ; preds = %75, %60, %43, %25
  %79 = phi i32 [ %76, %75 ], [ %61, %60 ], [ %39, %43 ], [ %39, %25 ]
  %80 = getelementptr inbounds %struct.igb_q_vector, ptr %0, i32 0, i32 2
  store i32 %79, ptr %80, align 8
  %81 = getelementptr inbounds %struct.igb_adapter, ptr %3, i32 0, i32 46
  %82 = load i32, ptr %81, align 4
  %83 = or i32 %82, %79
  store i32 %83, ptr %81, align 4
  %84 = getelementptr inbounds %struct.igb_q_vector, ptr %0, i32 0, i32 4
  store i8 1, ptr %84, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_irq_enable(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 8192
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %5, label %81, label %9

9:                                                ; preds = %1
  br i1 %8, label %24, label %10, !prof !9

10:                                               ; preds = %9
  %11 = getelementptr i8, ptr %7, i32 5420
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %11) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %7) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %24

17:                                               ; preds = %14
  %18 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 64
  store ptr null, ptr %6, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %19, ptr noundef nonnull @.str) #22
  %20 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %21 = load ptr, ptr %20, align 4
  %22 = tail call zeroext i1 @pci_device_is_present(ptr noundef %21) #23
  br i1 %22, label %23, label %24, !prof !9

23:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 5420) #23
  br label %24

24:                                               ; preds = %23, %17, %14, %10, %9
  %25 = phi i32 [ -1, %9 ], [ -1, %17 ], [ -1, %23 ], [ -1, %14 ], [ %12, %10 ]
  %26 = load volatile ptr, ptr %6, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %33, label %28, !prof !9

28:                                               ; preds = %24
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !42
  tail call void @arm_heavy_mb() #23
  %29 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 46
  %30 = load i32, ptr %29, align 4
  %31 = or i32 %30, %25
  %32 = getelementptr i8, ptr %26, i32 5420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %32, i32 %31) #23, !srcloc !14
  br label %33

33:                                               ; preds = %28, %24
  %34 = load volatile ptr, ptr %6, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %50, label %36, !prof !9

36:                                               ; preds = %33
  %37 = getelementptr i8, ptr %34, i32 5424
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %37) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %50

40:                                               ; preds = %36
  %41 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %34) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %43, label %50

43:                                               ; preds = %40
  %44 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %45 = load ptr, ptr %44, align 64
  store ptr null, ptr %6, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %45, ptr noundef nonnull @.str) #22
  %46 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %47 = load ptr, ptr %46, align 4
  %48 = tail call zeroext i1 @pci_device_is_present(ptr noundef %47) #23
  br i1 %48, label %49, label %50, !prof !9

49:                                               ; preds = %43
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 5424) #23
  br label %50

50:                                               ; preds = %49, %43, %40, %36, %33
  %51 = phi i32 [ -1, %33 ], [ -1, %43 ], [ -1, %49 ], [ -1, %40 ], [ %38, %36 ]
  %52 = load volatile ptr, ptr %6, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %59, label %54, !prof !9

54:                                               ; preds = %50
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !43
  tail call void @arm_heavy_mb() #23
  %55 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 46
  %56 = load i32, ptr %55, align 4
  %57 = or i32 %56, %51
  %58 = getelementptr i8, ptr %52, i32 5424
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %58, i32 %57) #23, !srcloc !14
  br label %59

59:                                               ; preds = %54, %50
  %60 = load volatile ptr, ptr %6, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %66, label %62, !prof !9

62:                                               ; preds = %59
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !44
  tail call void @arm_heavy_mb() #23
  %63 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 46
  %64 = load i32, ptr %63, align 4
  %65 = getelementptr i8, ptr %60, i32 5412
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %65, i32 %64) #23, !srcloc !14
  br label %66

66:                                               ; preds = %62, %59
  %67 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %68 = load i32, ptr %67, align 16
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = load volatile ptr, ptr %6, align 4
  %72 = icmp eq ptr %71, null
  br i1 %72, label %75, label %73, !prof !9

73:                                               ; preds = %70
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !45
  tail call void @arm_heavy_mb() #23
  %74 = getelementptr i8, ptr %71, i32 3204
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %74, i32 255) #23, !srcloc !14
  br label %75

75:                                               ; preds = %73, %70, %66
  %76 = phi i32 [ 1342177284, %66 ], [ 1342177540, %73 ], [ 1342177540, %70 ]
  %77 = load volatile ptr, ptr %6, align 4
  %78 = icmp eq ptr %77, null
  br i1 %78, label %89, label %79, !prof !9

79:                                               ; preds = %75
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !46
  tail call void @arm_heavy_mb() #23
  %80 = getelementptr i8, ptr %77, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %80, i32 %76) #23, !srcloc !14
  br label %89

81:                                               ; preds = %1
  br i1 %8, label %84, label %82, !prof !9

82:                                               ; preds = %81
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !47
  tail call void @arm_heavy_mb() #23
  %83 = getelementptr i8, ptr %7, i32 208
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %83, i32 1342177437) #23, !srcloc !14
  br label %84

84:                                               ; preds = %82, %81
  %85 = load volatile ptr, ptr %6, align 4
  %86 = icmp eq ptr %85, null
  br i1 %86, label %89, label %87, !prof !9

87:                                               ; preds = %84
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !48
  tail call void @arm_heavy_mb() #23
  %88 = getelementptr i8, ptr %85, i32 224
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %88, i32 1342177437) #23, !srcloc !14
  br label %89

89:                                               ; preds = %87, %84, %79, %75
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @netif_tx_start_all_queues(ptr nocapture noundef readonly %0) unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %3 = load i32, ptr %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi i32 [ 0, %5 ], [ %11, %7 ]
  %9 = load ptr, ptr %6, align 64
  %10 = getelementptr %struct.netdev_queue, ptr %9, i32 %8, i32 12
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %10) #23
  %11 = add nuw i32 %8, 1
  %12 = load i32, ptr %2, align 4
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_down(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 64
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 3
  tail call void @_set_bit(i32 noundef 2, ptr noundef %4) #23
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %21, label %8, !prof !9

8:                                                ; preds = %1
  %9 = getelementptr i8, ptr %6, i32 256
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %9) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %21

12:                                               ; preds = %8
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = load ptr, ptr %2, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %16, ptr noundef nonnull @.str) #22
  %17 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %18 = load ptr, ptr %17, align 4
  %19 = tail call zeroext i1 @pci_device_is_present(ptr noundef %18) #23
  br i1 %19, label %20, label %21, !prof !9

20:                                               ; preds = %15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 256) #23
  br label %21

21:                                               ; preds = %20, %15, %12, %8, %1
  %22 = phi i32 [ -1, %1 ], [ -1, %15 ], [ -1, %20 ], [ -1, %12 ], [ %10, %8 ]
  %23 = load volatile ptr, ptr %5, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %28, label %25, !prof !9

25:                                               ; preds = %21
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !49
  tail call void @arm_heavy_mb() #23
  %26 = and i32 %22, -3
  %27 = getelementptr i8, ptr %23, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %27, i32 %26) #23, !srcloc !14
  br label %28

28:                                               ; preds = %25, %21
  %29 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 90
  tail call void @_raw_spin_lock(ptr noundef %29) #23
  %30 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 87
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %33, %28
  %34 = phi ptr [ %36, %33 ], [ %31, %28 ]
  %35 = tail call i32 @igb_erase_filter(ptr noundef %0, ptr noundef nonnull %34) #23
  %36 = load ptr, ptr %34, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %33

38:                                               ; preds = %33, %28
  %39 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 88
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %42, %38
  %43 = phi ptr [ %45, %42 ], [ %40, %38 ]
  %44 = tail call i32 @igb_erase_filter(ptr noundef %0, ptr noundef nonnull %43) #23
  %45 = load ptr, ptr %43, align 4
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42, %38
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %48 = load i16, ptr %29, align 4
  %49 = add i16 %48, 1
  store i16 %49, ptr %29, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  tail call void @netif_carrier_off(ptr noundef %3) #23
  tail call void @netif_tx_stop_all_queues(ptr noundef %3) #23
  %50 = load volatile ptr, ptr %5, align 4
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52, !prof !9

52:                                               ; preds = %47
  %53 = getelementptr i8, ptr %50, i32 1024
  %54 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %53) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %65

56:                                               ; preds = %52
  %57 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %50) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %59, label %65

59:                                               ; preds = %56
  %60 = load ptr, ptr %2, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %60, ptr noundef nonnull @.str) #22
  %61 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %62 = load ptr, ptr %61, align 4
  %63 = tail call zeroext i1 @pci_device_is_present(ptr noundef %62) #23
  br i1 %63, label %64, label %65, !prof !9

64:                                               ; preds = %59
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 1024) #23
  br label %65

65:                                               ; preds = %64, %59, %56, %52, %47
  %66 = phi i32 [ -1, %47 ], [ -1, %59 ], [ -1, %64 ], [ -1, %56 ], [ %54, %52 ]
  %67 = load volatile ptr, ptr %5, align 4
  %68 = icmp eq ptr %67, null
  br i1 %68, label %72, label %69, !prof !9

69:                                               ; preds = %65
  %70 = and i32 %66, -3
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !50
  tail call void @arm_heavy_mb() #23
  %71 = getelementptr i8, ptr %67, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %71, i32 %70) #23, !srcloc !14
  br label %72

72:                                               ; preds = %69, %65
  %73 = load volatile ptr, ptr %5, align 4
  %74 = icmp eq ptr %73, null
  br i1 %74, label %88, label %75, !prof !9

75:                                               ; preds = %72
  %76 = getelementptr i8, ptr %73, i32 8
  %77 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %76) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %73) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %88

82:                                               ; preds = %79
  %83 = load ptr, ptr %2, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %83, ptr noundef nonnull @.str) #22
  %84 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %85 = load ptr, ptr %84, align 4
  %86 = tail call zeroext i1 @pci_device_is_present(ptr noundef %85) #23
  br i1 %86, label %87, label %88, !prof !9

87:                                               ; preds = %82
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %88

88:                                               ; preds = %87, %82, %79, %75, %72
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 11000, i32 noundef 2) #23
  tail call fastcc void @igb_irq_disable(ptr noundef %0)
  %89 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %90 = load i32, ptr %89, align 4
  %91 = and i32 %90, -513
  store i32 %91, ptr %89, align 4
  %92 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  %93 = load i32, ptr %92, align 16
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %120, label %95

95:                                               ; preds = %116, %88
  %96 = phi i32 [ %117, %116 ], [ %93, %88 ]
  %97 = phi i32 [ %118, %116 ], [ 0, %88 ]
  %98 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 45, i32 %97
  %99 = load ptr, ptr %98, align 4
  %100 = icmp eq ptr %99, null
  br i1 %100, label %116, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %struct.igb_q_vector, ptr %99, i32 0, i32 8, i32 1
  %103 = load volatile i32, ptr %102, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %106, %101
  tail call void @msleep(i32 noundef 1) #23
  %107 = load volatile i32, ptr %102, align 4
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %106

110:                                              ; preds = %106
  %111 = load ptr, ptr %98, align 4
  br label %112

112:                                              ; preds = %110, %101
  %113 = phi ptr [ %111, %110 ], [ %99, %101 ]
  %114 = getelementptr inbounds %struct.igb_q_vector, ptr %113, i32 0, i32 8
  tail call void @napi_disable(ptr noundef %114) #23
  %115 = load i32, ptr %92, align 16
  br label %116

116:                                              ; preds = %112, %95
  %117 = phi i32 [ %96, %95 ], [ %115, %112 ]
  %118 = add nuw i32 %97, 1
  %119 = icmp ult i32 %118, %117
  br i1 %119, label %95, label %120

120:                                              ; preds = %116, %88
  %121 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 19
  %122 = tail call i32 @del_timer_sync(ptr noundef %121) #23
  %123 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 20
  %124 = tail call i32 @del_timer_sync(ptr noundef %123) #23
  %125 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 35
  tail call void @_raw_spin_lock(ptr noundef %125) #23
  tail call void @igb_update_stats(ptr noundef %0)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %126 = load i16, ptr %125, align 4
  %127 = add i16 %126, 1
  store i16 %127, ptr %125, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  %128 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 25
  store i16 0, ptr %128, align 64
  %129 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 26
  store i16 0, ptr %129, align 2
  %130 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %131 = load ptr, ptr %130, align 4
  %132 = getelementptr inbounds %struct.pci_dev, ptr %131, i32 0, i32 43
  %133 = load i32, ptr %132, align 4
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %136

135:                                              ; preds = %120
  tail call void @igb_reset(ptr noundef %0)
  br label %136

136:                                              ; preds = %135, %120
  %137 = load i32, ptr %89, align 4
  %138 = and i32 %137, -32769
  store i32 %138, ptr %89, align 4
  %139 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %140 = load i32, ptr %139, align 8
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %150, %136
  %143 = phi i32 [ %151, %150 ], [ %140, %136 ]
  %144 = phi i32 [ %152, %150 ], [ 0, %136 ]
  %145 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %144
  %146 = load ptr, ptr %145, align 4
  %147 = icmp eq ptr %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %142
  tail call fastcc void @igb_clean_tx_ring(ptr noundef nonnull %146) #23
  %149 = load i32, ptr %139, align 8
  br label %150

150:                                              ; preds = %148, %142
  %151 = phi i32 [ %143, %142 ], [ %149, %148 ]
  %152 = add nuw nsw i32 %144, 1
  %153 = icmp slt i32 %152, %151
  br i1 %153, label %142, label %154

154:                                              ; preds = %150, %136
  %155 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %156 = load i32, ptr %155, align 4
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %170

158:                                              ; preds = %166, %154
  %159 = phi i32 [ %167, %166 ], [ %156, %154 ]
  %160 = phi i32 [ %168, %166 ], [ 0, %154 ]
  %161 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %160
  %162 = load ptr, ptr %161, align 4
  %163 = icmp eq ptr %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %158
  tail call fastcc void @igb_clean_rx_ring(ptr noundef nonnull %162) #23
  %165 = load i32, ptr %155, align 4
  br label %166

166:                                              ; preds = %164, %158
  %167 = phi i32 [ %159, %158 ], [ %165, %164 ]
  %168 = add nuw nsw i32 %160, 1
  %169 = icmp slt i32 %168, %167
  br i1 %169, label %158, label %170

170:                                              ; preds = %166, %154
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_stop_all_queues(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_irq_disable(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 8192
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %24, label %10, !prof !9

10:                                               ; preds = %6
  %11 = getelementptr i8, ptr %8, i32 5424
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %11) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %8) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %24

17:                                               ; preds = %14
  %18 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %19, ptr noundef nonnull @.str) #22
  %20 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %21 = load ptr, ptr %20, align 4
  %22 = tail call zeroext i1 @pci_device_is_present(ptr noundef %21) #23
  br i1 %22, label %23, label %24, !prof !9

23:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 5424) #23
  br label %24

24:                                               ; preds = %23, %17, %14, %10, %6
  %25 = phi i32 [ -1, %6 ], [ -1, %17 ], [ -1, %23 ], [ -1, %14 ], [ %12, %10 ]
  %26 = load volatile ptr, ptr %7, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %34, label %28, !prof !9

28:                                               ; preds = %24
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !51
  tail call void @arm_heavy_mb() #23
  %29 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 46
  %30 = load i32, ptr %29, align 4
  %31 = xor i32 %30, -1
  %32 = and i32 %25, %31
  %33 = getelementptr i8, ptr %26, i32 5424
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %33, i32 %32) #23, !srcloc !14
  br label %34

34:                                               ; preds = %28, %24
  %35 = load volatile ptr, ptr %7, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %41, label %37, !prof !9

37:                                               ; preds = %34
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !52
  tail call void @arm_heavy_mb() #23
  %38 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 46
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr i8, ptr %35, i32 5416
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %40, i32 %39) #23, !srcloc !14
  br label %41

41:                                               ; preds = %37, %34
  %42 = load volatile ptr, ptr %7, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %58, label %44, !prof !9

44:                                               ; preds = %41
  %45 = getelementptr i8, ptr %42, i32 5420
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %45) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %58

48:                                               ; preds = %44
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %42) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %58

51:                                               ; preds = %48
  %52 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %53 = load ptr, ptr %52, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %53, ptr noundef nonnull @.str) #22
  %54 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %55 = load ptr, ptr %54, align 4
  %56 = tail call zeroext i1 @pci_device_is_present(ptr noundef %55) #23
  br i1 %56, label %57, label %58, !prof !9

57:                                               ; preds = %51
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 5420) #23
  br label %58

58:                                               ; preds = %57, %51, %48, %44, %41
  %59 = phi i32 [ -1, %41 ], [ -1, %51 ], [ -1, %57 ], [ -1, %48 ], [ %46, %44 ]
  %60 = load volatile ptr, ptr %7, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %68, label %62, !prof !9

62:                                               ; preds = %58
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !53
  tail call void @arm_heavy_mb() #23
  %63 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 46
  %64 = load i32, ptr %63, align 4
  %65 = xor i32 %64, -1
  %66 = and i32 %59, %65
  %67 = getelementptr i8, ptr %60, i32 5420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %67, i32 %66) #23, !srcloc !14
  br label %68

68:                                               ; preds = %62, %58, %1
  %69 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %70 = load volatile ptr, ptr %69, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %74, label %72, !prof !9

72:                                               ; preds = %68
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !54
  tail call void @arm_heavy_mb() #23
  %73 = getelementptr i8, ptr %70, i32 224
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %73, i32 0) #23, !srcloc !14
  br label %74

74:                                               ; preds = %72, %68
  %75 = load volatile ptr, ptr %69, align 4
  %76 = icmp eq ptr %75, null
  br i1 %76, label %79, label %77, !prof !9

77:                                               ; preds = %74
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !55
  tail call void @arm_heavy_mb() #23
  %78 = getelementptr i8, ptr %75, i32 216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %78, i32 -1) #23, !srcloc !14
  br label %79

79:                                               ; preds = %77, %74
  %80 = load volatile ptr, ptr %69, align 4
  %81 = icmp eq ptr %80, null
  br i1 %81, label %96, label %82, !prof !9

82:                                               ; preds = %79
  %83 = getelementptr i8, ptr %80, i32 8
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %83) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %96

86:                                               ; preds = %82
  %87 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %80) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %96

89:                                               ; preds = %86
  %90 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %91 = load ptr, ptr %90, align 64
  store ptr null, ptr %69, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %91, ptr noundef nonnull @.str) #22
  %92 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %93 = load ptr, ptr %92, align 4
  %94 = tail call zeroext i1 @pci_device_is_present(ptr noundef %93) #23
  br i1 %94, label %95, label %96, !prof !9

95:                                               ; preds = %89
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %96

96:                                               ; preds = %95, %89, %86, %82, %79
  %97 = load i32, ptr %2, align 4
  %98 = and i32 %97, 8192
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  %102 = load i32, ptr %101, align 16
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %104, %100
  %105 = phi i32 [ %108, %104 ], [ 0, %100 ]
  %106 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 6, i32 %105
  %107 = load i32, ptr %106, align 4
  tail call void @synchronize_irq(i32 noundef %107) #23
  %108 = add nuw i32 %105, 1
  %109 = load i32, ptr %101, align 16
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %104, label %116

111:                                              ; preds = %96
  %112 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %113 = load ptr, ptr %112, align 4
  %114 = getelementptr inbounds %struct.pci_dev, ptr %113, i32 0, i32 46
  %115 = load i32, ptr %114, align 4
  tail call void @synchronize_irq(i32 noundef %115) #23
  br label %116

116:                                              ; preds = %111, %104, %100
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_disable(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_update_stats(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 25
  %4 = load i16, ptr %3, align 64
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %1624, label %6

6:                                                ; preds = %1
  %7 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 43
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %1624

12:                                               ; preds = %6
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !56
  %13 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %14 = load i32, ptr %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %85

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %18 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %19 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %20 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 14
  br label %21

21:                                               ; preds = %79, %16
  %22 = phi i64 [ 0, %16 ], [ %81, %79 ]
  %23 = phi i64 [ 0, %16 ], [ %80, %79 ]
  %24 = phi i32 [ 0, %16 ], [ %82, %79 ]
  %25 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %24
  %26 = load ptr, ptr %25, align 4
  %27 = shl i32 %24, 6
  %28 = add i32 %27, 49200
  %29 = load volatile ptr, ptr %17, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %43, label %31, !prof !9

31:                                               ; preds = %21
  %32 = getelementptr i8, ptr %29, i32 %28
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %32) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %29) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = load ptr, ptr %18, align 64
  store ptr null, ptr %17, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %39, ptr noundef nonnull @.str) #22
  %40 = load ptr, ptr %7, align 4
  %41 = tail call zeroext i1 @pci_device_is_present(ptr noundef %40) #23
  br i1 %41, label %42, label %43, !prof !9

42:                                               ; preds = %38
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %28) #23
  br label %43

43:                                               ; preds = %42, %38, %35, %31, %21
  %44 = phi i32 [ -1, %21 ], [ -1, %38 ], [ -1, %42 ], [ -1, %35 ], [ %33, %31 ]
  %45 = load i32, ptr %19, align 4
  %46 = icmp ugt i32 %45, 5
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = load volatile ptr, ptr %17, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %52, label %50, !prof !9

50:                                               ; preds = %47
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !57
  tail call void @arm_heavy_mb() #23
  %51 = getelementptr i8, ptr %48, i32 %28
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %51, i32 0) #23, !srcloc !14
  br label %52

52:                                               ; preds = %50, %47, %43
  %53 = icmp eq i32 %44, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %52
  %55 = zext i32 %44 to i64
  %56 = getelementptr inbounds %struct.igb_ring, ptr %26, i32 0, i32 22, i32 0, i32 1, i32 2
  %57 = load i64, ptr %56, align 8
  %58 = add i64 %57, %55
  store i64 %58, ptr %56, align 8
  %59 = load i64, ptr %20, align 8
  %60 = add i64 %59, %55
  store i64 %60, ptr %20, align 8
  br label %61

61:                                               ; preds = %54, %52
  %62 = getelementptr inbounds %struct.igb_ring, ptr %26, i32 0, i32 22, i32 0, i32 2
  %63 = getelementptr inbounds %struct.igb_ring, ptr %26, i32 0, i32 22, i32 0, i32 1
  %64 = getelementptr inbounds %struct.igb_ring, ptr %26, i32 0, i32 22, i32 0, i32 1, i32 1
  br label %65

65:                                               ; preds = %73, %61
  %66 = load volatile i32, ptr %62, align 4
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %69, %65
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !58
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !59
  %70 = load volatile i32, ptr %62, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %69

73:                                               ; preds = %69, %65
  %74 = phi i32 [ %66, %65 ], [ %70, %69 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !60
  %75 = load i64, ptr %64, align 8
  %76 = load i64, ptr %63, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !61
  %77 = load volatile i32, ptr %62, align 4
  %78 = icmp eq i32 %77, %74
  br i1 %78, label %79, label %65

79:                                               ; preds = %73
  %80 = add i64 %75, %23
  %81 = add i64 %76, %22
  %82 = add nuw nsw i32 %24, 1
  %83 = load i32, ptr %13, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %21, label %85

85:                                               ; preds = %79, %12
  %86 = phi i64 [ 0, %12 ], [ %80, %79 ]
  %87 = phi i64 [ 0, %12 ], [ %81, %79 ]
  %88 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 2
  store i64 %86, ptr %88, align 8
  store i64 %87, ptr %2, align 8
  %89 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %90 = load i32, ptr %89, align 8
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %121

92:                                               ; preds = %115, %85
  %93 = phi i64 [ %117, %115 ], [ 0, %85 ]
  %94 = phi i64 [ %116, %115 ], [ 0, %85 ]
  %95 = phi i32 [ %118, %115 ], [ 0, %85 ]
  %96 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %95
  %97 = load ptr, ptr %96, align 4
  %98 = getelementptr inbounds %struct.igb_ring, ptr %97, i32 0, i32 22
  %99 = getelementptr inbounds %struct.igb_ring, ptr %97, i32 0, i32 22, i32 0, i32 1, i32 3
  %100 = getelementptr inbounds %struct.igb_ring, ptr %97, i32 0, i32 22, i32 0, i32 1
  br label %101

101:                                              ; preds = %109, %92
  %102 = load volatile i32, ptr %99, align 4
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %105, %101
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !58
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !59
  %106 = load volatile i32, ptr %99, align 4
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %105

109:                                              ; preds = %105, %101
  %110 = phi i32 [ %102, %101 ], [ %106, %105 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !60
  %111 = load i64, ptr %100, align 8
  %112 = load i64, ptr %98, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !61
  %113 = load volatile i32, ptr %99, align 4
  %114 = icmp eq i32 %113, %110
  br i1 %114, label %115, label %101

115:                                              ; preds = %109
  %116 = add i64 %111, %94
  %117 = add i64 %112, %93
  %118 = add nuw nsw i32 %95, 1
  %119 = load i32, ptr %89, align 8
  %120 = icmp slt i32 %118, %119
  br i1 %120, label %92, label %121

121:                                              ; preds = %115, %85
  %122 = phi i64 [ 0, %85 ], [ %116, %115 ]
  %123 = phi i64 [ 0, %85 ], [ %117, %115 ]
  %124 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 3
  store i64 %122, ptr %124, align 8
  %125 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 1
  store i64 %123, ptr %125, align 8
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !62
  %126 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %127 = load volatile ptr, ptr %126, align 4
  %128 = icmp eq ptr %127, null
  br i1 %128, label %142, label %129, !prof !9

129:                                              ; preds = %121
  %130 = getelementptr i8, ptr %127, i32 16384
  %131 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %130) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %132 = icmp eq i32 %131, -1
  br i1 %132, label %133, label %142

133:                                              ; preds = %129
  %134 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %127) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %135 = icmp eq i32 %134, -1
  br i1 %135, label %136, label %142

136:                                              ; preds = %133
  %137 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %138 = load ptr, ptr %137, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %138, ptr noundef nonnull @.str) #22
  %139 = load ptr, ptr %7, align 4
  %140 = tail call zeroext i1 @pci_device_is_present(ptr noundef %139) #23
  br i1 %140, label %141, label %142, !prof !9

141:                                              ; preds = %136
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16384) #23
  br label %142

142:                                              ; preds = %141, %136, %133, %129, %121
  %143 = phi i32 [ -1, %121 ], [ -1, %136 ], [ -1, %141 ], [ -1, %133 ], [ %131, %129 ]
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38
  %146 = load i64, ptr %145, align 8
  %147 = add i64 %146, %144
  store i64 %147, ptr %145, align 8
  %148 = load volatile ptr, ptr %126, align 4
  %149 = icmp eq ptr %148, null
  br i1 %149, label %163, label %150, !prof !9

150:                                              ; preds = %142
  %151 = getelementptr i8, ptr %148, i32 16500
  %152 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %151) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %154, label %163

154:                                              ; preds = %150
  %155 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %148) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %156 = icmp eq i32 %155, -1
  br i1 %156, label %157, label %163

157:                                              ; preds = %154
  %158 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %159 = load ptr, ptr %158, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %159, ptr noundef nonnull @.str) #22
  %160 = load ptr, ptr %7, align 4
  %161 = tail call zeroext i1 @pci_device_is_present(ptr noundef %160) #23
  br i1 %161, label %162, label %163, !prof !9

162:                                              ; preds = %157
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16500) #23
  br label %163

163:                                              ; preds = %162, %157, %154, %150, %142
  %164 = phi i32 [ -1, %142 ], [ -1, %157 ], [ -1, %162 ], [ -1, %154 ], [ %152, %150 ]
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 26
  %167 = load i64, ptr %166, align 8
  %168 = add i64 %167, %165
  store i64 %168, ptr %166, align 8
  %169 = load volatile ptr, ptr %126, align 4
  %170 = icmp eq ptr %169, null
  br i1 %170, label %184, label %171, !prof !9

171:                                              ; preds = %163
  %172 = getelementptr i8, ptr %169, i32 16520
  %173 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %172) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %174 = icmp eq i32 %173, -1
  br i1 %174, label %175, label %184

175:                                              ; preds = %171
  %176 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %169) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %177 = icmp eq i32 %176, -1
  br i1 %177, label %178, label %184

178:                                              ; preds = %175
  %179 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %180 = load ptr, ptr %179, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %180, ptr noundef nonnull @.str) #22
  %181 = load ptr, ptr %7, align 4
  %182 = tail call zeroext i1 @pci_device_is_present(ptr noundef %181) #23
  br i1 %182, label %183, label %184, !prof !9

183:                                              ; preds = %178
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16520) #23
  br label %184

184:                                              ; preds = %183, %178, %175, %171, %163
  %185 = phi i32 [ -1, %163 ], [ -1, %178 ], [ -1, %183 ], [ -1, %175 ], [ %173, %171 ]
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 30
  %188 = load i64, ptr %187, align 8
  %189 = add i64 %188, %186
  store i64 %189, ptr %187, align 8
  %190 = load volatile ptr, ptr %126, align 4
  %191 = icmp eq ptr %190, null
  br i1 %191, label %205, label %192, !prof !9

192:                                              ; preds = %184
  %193 = getelementptr i8, ptr %190, i32 16524
  %194 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %193) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %195 = icmp eq i32 %194, -1
  br i1 %195, label %196, label %205

196:                                              ; preds = %192
  %197 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %190) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %198 = icmp eq i32 %197, -1
  br i1 %198, label %199, label %205

199:                                              ; preds = %196
  %200 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %201 = load ptr, ptr %200, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %201, ptr noundef nonnull @.str) #22
  %202 = load ptr, ptr %7, align 4
  %203 = tail call zeroext i1 @pci_device_is_present(ptr noundef %202) #23
  br i1 %203, label %204, label %205, !prof !9

204:                                              ; preds = %199
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16524) #23
  br label %205

205:                                              ; preds = %204, %199, %196, %192, %184
  %206 = load volatile ptr, ptr %126, align 4
  %207 = icmp eq ptr %206, null
  br i1 %207, label %221, label %208, !prof !9

208:                                              ; preds = %205
  %209 = getelementptr i8, ptr %206, i32 16504
  %210 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %209) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %211 = icmp eq i32 %210, -1
  br i1 %211, label %212, label %221

212:                                              ; preds = %208
  %213 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %206) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %214 = icmp eq i32 %213, -1
  br i1 %214, label %215, label %221

215:                                              ; preds = %212
  %216 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %217 = load ptr, ptr %216, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %217, ptr noundef nonnull @.str) #22
  %218 = load ptr, ptr %7, align 4
  %219 = tail call zeroext i1 @pci_device_is_present(ptr noundef %218) #23
  br i1 %219, label %220, label %221, !prof !9

220:                                              ; preds = %215
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16504) #23
  br label %221

221:                                              ; preds = %220, %215, %212, %208, %205
  %222 = phi i32 [ -1, %205 ], [ -1, %215 ], [ -1, %220 ], [ -1, %212 ], [ %210, %208 ]
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 27
  %225 = load i64, ptr %224, align 8
  %226 = add i64 %225, %223
  store i64 %226, ptr %224, align 8
  %227 = load volatile ptr, ptr %126, align 4
  %228 = icmp eq ptr %227, null
  br i1 %228, label %242, label %229, !prof !9

229:                                              ; preds = %221
  %230 = getelementptr i8, ptr %227, i32 16508
  %231 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %230) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %232 = icmp eq i32 %231, -1
  br i1 %232, label %233, label %242

233:                                              ; preds = %229
  %234 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %227) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %235 = icmp eq i32 %234, -1
  br i1 %235, label %236, label %242

236:                                              ; preds = %233
  %237 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %238 = load ptr, ptr %237, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %238, ptr noundef nonnull @.str) #22
  %239 = load ptr, ptr %7, align 4
  %240 = tail call zeroext i1 @pci_device_is_present(ptr noundef %239) #23
  br i1 %240, label %241, label %242, !prof !9

241:                                              ; preds = %236
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16508) #23
  br label %242

242:                                              ; preds = %241, %236, %233, %229, %221
  %243 = phi i32 [ -1, %221 ], [ -1, %236 ], [ -1, %241 ], [ -1, %233 ], [ %231, %229 ]
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 28
  %246 = load i64, ptr %245, align 8
  %247 = add i64 %246, %244
  store i64 %247, ptr %245, align 8
  %248 = load volatile ptr, ptr %126, align 4
  %249 = icmp eq ptr %248, null
  br i1 %249, label %263, label %250, !prof !9

250:                                              ; preds = %242
  %251 = getelementptr i8, ptr %248, i32 16556
  %252 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %251) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %253 = icmp eq i32 %252, -1
  br i1 %253, label %254, label %263

254:                                              ; preds = %250
  %255 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %248) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %256 = icmp eq i32 %255, -1
  br i1 %256, label %257, label %263

257:                                              ; preds = %254
  %258 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %259 = load ptr, ptr %258, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %259, ptr noundef nonnull @.str) #22
  %260 = load ptr, ptr %7, align 4
  %261 = tail call zeroext i1 @pci_device_is_present(ptr noundef %260) #23
  br i1 %261, label %262, label %263, !prof !9

262:                                              ; preds = %257
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16556) #23
  br label %263

263:                                              ; preds = %262, %257, %254, %250, %242
  %264 = phi i32 [ -1, %242 ], [ -1, %257 ], [ -1, %262 ], [ -1, %254 ], [ %252, %250 ]
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 35
  %267 = load i64, ptr %266, align 8
  %268 = add i64 %267, %265
  store i64 %268, ptr %266, align 8
  %269 = load volatile ptr, ptr %126, align 4
  %270 = icmp eq ptr %269, null
  br i1 %270, label %284, label %271, !prof !9

271:                                              ; preds = %263
  %272 = getelementptr i8, ptr %269, i32 16476
  %273 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %272) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %274 = icmp eq i32 %273, -1
  br i1 %274, label %275, label %284

275:                                              ; preds = %271
  %276 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %269) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %277 = icmp eq i32 %276, -1
  br i1 %277, label %278, label %284

278:                                              ; preds = %275
  %279 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %280 = load ptr, ptr %279, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %280, ptr noundef nonnull @.str) #22
  %281 = load ptr, ptr %7, align 4
  %282 = tail call zeroext i1 @pci_device_is_present(ptr noundef %281) #23
  br i1 %282, label %283, label %284, !prof !9

283:                                              ; preds = %278
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16476) #23
  br label %284

284:                                              ; preds = %283, %278, %275, %271, %263
  %285 = phi i32 [ -1, %263 ], [ -1, %278 ], [ -1, %283 ], [ -1, %275 ], [ %273, %271 ]
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 20
  %288 = load i64, ptr %287, align 8
  %289 = add i64 %288, %286
  store i64 %289, ptr %287, align 8
  %290 = load volatile ptr, ptr %126, align 4
  %291 = icmp eq ptr %290, null
  br i1 %291, label %305, label %292, !prof !9

292:                                              ; preds = %284
  %293 = getelementptr i8, ptr %290, i32 16480
  %294 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %293) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %295 = icmp eq i32 %294, -1
  br i1 %295, label %296, label %305

296:                                              ; preds = %292
  %297 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %290) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %298 = icmp eq i32 %297, -1
  br i1 %298, label %299, label %305

299:                                              ; preds = %296
  %300 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %301 = load ptr, ptr %300, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %301, ptr noundef nonnull @.str) #22
  %302 = load ptr, ptr %7, align 4
  %303 = tail call zeroext i1 @pci_device_is_present(ptr noundef %302) #23
  br i1 %303, label %304, label %305, !prof !9

304:                                              ; preds = %299
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16480) #23
  br label %305

305:                                              ; preds = %304, %299, %296, %292, %284
  %306 = phi i32 [ -1, %284 ], [ -1, %299 ], [ -1, %304 ], [ -1, %296 ], [ %294, %292 ]
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 21
  %309 = load i64, ptr %308, align 8
  %310 = add i64 %309, %307
  store i64 %310, ptr %308, align 8
  %311 = load volatile ptr, ptr %126, align 4
  %312 = icmp eq ptr %311, null
  br i1 %312, label %326, label %313, !prof !9

313:                                              ; preds = %305
  %314 = getelementptr i8, ptr %311, i32 16484
  %315 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %314) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %316 = icmp eq i32 %315, -1
  br i1 %316, label %317, label %326

317:                                              ; preds = %313
  %318 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %311) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %319 = icmp eq i32 %318, -1
  br i1 %319, label %320, label %326

320:                                              ; preds = %317
  %321 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %322 = load ptr, ptr %321, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %322, ptr noundef nonnull @.str) #22
  %323 = load ptr, ptr %7, align 4
  %324 = tail call zeroext i1 @pci_device_is_present(ptr noundef %323) #23
  br i1 %324, label %325, label %326, !prof !9

325:                                              ; preds = %320
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16484) #23
  br label %326

326:                                              ; preds = %325, %320, %317, %313, %305
  %327 = phi i32 [ -1, %305 ], [ -1, %320 ], [ -1, %325 ], [ -1, %317 ], [ %315, %313 ]
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 22
  %330 = load i64, ptr %329, align 8
  %331 = add i64 %330, %328
  store i64 %331, ptr %329, align 8
  %332 = load volatile ptr, ptr %126, align 4
  %333 = icmp eq ptr %332, null
  br i1 %333, label %347, label %334, !prof !9

334:                                              ; preds = %326
  %335 = getelementptr i8, ptr %332, i32 16488
  %336 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %335) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %337 = icmp eq i32 %336, -1
  br i1 %337, label %338, label %347

338:                                              ; preds = %334
  %339 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %332) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %340 = icmp eq i32 %339, -1
  br i1 %340, label %341, label %347

341:                                              ; preds = %338
  %342 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %343 = load ptr, ptr %342, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %343, ptr noundef nonnull @.str) #22
  %344 = load ptr, ptr %7, align 4
  %345 = tail call zeroext i1 @pci_device_is_present(ptr noundef %344) #23
  br i1 %345, label %346, label %347, !prof !9

346:                                              ; preds = %341
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16488) #23
  br label %347

347:                                              ; preds = %346, %341, %338, %334, %326
  %348 = phi i32 [ -1, %326 ], [ -1, %341 ], [ -1, %346 ], [ -1, %338 ], [ %336, %334 ]
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 23
  %351 = load i64, ptr %350, align 8
  %352 = add i64 %351, %349
  store i64 %352, ptr %350, align 8
  %353 = load volatile ptr, ptr %126, align 4
  %354 = icmp eq ptr %353, null
  br i1 %354, label %368, label %355, !prof !9

355:                                              ; preds = %347
  %356 = getelementptr i8, ptr %353, i32 16492
  %357 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %356) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %358 = icmp eq i32 %357, -1
  br i1 %358, label %359, label %368

359:                                              ; preds = %355
  %360 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %353) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %361 = icmp eq i32 %360, -1
  br i1 %361, label %362, label %368

362:                                              ; preds = %359
  %363 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %364 = load ptr, ptr %363, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %364, ptr noundef nonnull @.str) #22
  %365 = load ptr, ptr %7, align 4
  %366 = tail call zeroext i1 @pci_device_is_present(ptr noundef %365) #23
  br i1 %366, label %367, label %368, !prof !9

367:                                              ; preds = %362
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16492) #23
  br label %368

368:                                              ; preds = %367, %362, %359, %355, %347
  %369 = phi i32 [ -1, %347 ], [ -1, %362 ], [ -1, %367 ], [ -1, %359 ], [ %357, %355 ]
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 24
  %372 = load i64, ptr %371, align 8
  %373 = add i64 %372, %370
  store i64 %373, ptr %371, align 8
  %374 = load volatile ptr, ptr %126, align 4
  %375 = icmp eq ptr %374, null
  br i1 %375, label %389, label %376, !prof !9

376:                                              ; preds = %368
  %377 = getelementptr i8, ptr %374, i32 16496
  %378 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %377) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %379 = icmp eq i32 %378, -1
  br i1 %379, label %380, label %389

380:                                              ; preds = %376
  %381 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %374) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %382 = icmp eq i32 %381, -1
  br i1 %382, label %383, label %389

383:                                              ; preds = %380
  %384 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %385 = load ptr, ptr %384, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %385, ptr noundef nonnull @.str) #22
  %386 = load ptr, ptr %7, align 4
  %387 = tail call zeroext i1 @pci_device_is_present(ptr noundef %386) #23
  br i1 %387, label %388, label %389, !prof !9

388:                                              ; preds = %383
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16496) #23
  br label %389

389:                                              ; preds = %388, %383, %380, %376, %368
  %390 = phi i32 [ -1, %368 ], [ -1, %383 ], [ -1, %388 ], [ -1, %380 ], [ %378, %376 ]
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 25
  %393 = load i64, ptr %392, align 8
  %394 = add i64 %393, %391
  store i64 %394, ptr %392, align 8
  %395 = load volatile ptr, ptr %126, align 4
  %396 = icmp eq ptr %395, null
  br i1 %396, label %410, label %397, !prof !9

397:                                              ; preds = %389
  %398 = getelementptr i8, ptr %395, i32 16392
  %399 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %398) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %400 = icmp eq i32 %399, -1
  br i1 %400, label %401, label %410

401:                                              ; preds = %397
  %402 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %395) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %403 = icmp eq i32 %402, -1
  br i1 %403, label %404, label %410

404:                                              ; preds = %401
  %405 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %406 = load ptr, ptr %405, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %406, ptr noundef nonnull @.str) #22
  %407 = load ptr, ptr %7, align 4
  %408 = tail call zeroext i1 @pci_device_is_present(ptr noundef %407) #23
  br i1 %408, label %409, label %410, !prof !9

409:                                              ; preds = %404
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16392) #23
  br label %410

410:                                              ; preds = %409, %404, %401, %397, %389
  %411 = phi i32 [ -1, %389 ], [ -1, %404 ], [ -1, %409 ], [ -1, %401 ], [ %399, %397 ]
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 2
  %414 = load i64, ptr %413, align 8
  %415 = add i64 %414, %412
  store i64 %415, ptr %413, align 8
  %416 = load volatile ptr, ptr %126, align 4
  %417 = icmp eq ptr %416, null
  br i1 %417, label %431, label %418, !prof !9

418:                                              ; preds = %410
  %419 = getelementptr i8, ptr %416, i32 16440
  %420 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %419) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %421 = icmp eq i32 %420, -1
  br i1 %421, label %422, label %431

422:                                              ; preds = %418
  %423 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %416) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %424 = icmp eq i32 %423, -1
  br i1 %424, label %425, label %431

425:                                              ; preds = %422
  %426 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %427 = load ptr, ptr %426, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %427, ptr noundef nonnull @.str) #22
  %428 = load ptr, ptr %7, align 4
  %429 = tail call zeroext i1 @pci_device_is_present(ptr noundef %428) #23
  br i1 %429, label %430, label %431, !prof !9

430:                                              ; preds = %425
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16440) #23
  br label %431

431:                                              ; preds = %430, %425, %422, %418, %410
  %432 = phi i32 [ -1, %410 ], [ -1, %425 ], [ -1, %430 ], [ -1, %422 ], [ %420, %418 ]
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 12
  %435 = load i64, ptr %434, align 8
  %436 = add i64 %435, %433
  store i64 %436, ptr %434, align 8
  %437 = load volatile ptr, ptr %126, align 4
  %438 = icmp eq ptr %437, null
  br i1 %438, label %452, label %439, !prof !9

439:                                              ; preds = %431
  %440 = getelementptr i8, ptr %437, i32 16400
  %441 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %440) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %442 = icmp eq i32 %441, -1
  br i1 %442, label %443, label %452

443:                                              ; preds = %439
  %444 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %437) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %445 = icmp eq i32 %444, -1
  br i1 %445, label %446, label %452

446:                                              ; preds = %443
  %447 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %448 = load ptr, ptr %447, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %448, ptr noundef nonnull @.str) #22
  %449 = load ptr, ptr %7, align 4
  %450 = tail call zeroext i1 @pci_device_is_present(ptr noundef %449) #23
  br i1 %450, label %451, label %452, !prof !9

451:                                              ; preds = %446
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16400) #23
  br label %452

452:                                              ; preds = %451, %446, %443, %439, %431
  %453 = phi i32 [ -1, %431 ], [ -1, %446 ], [ -1, %451 ], [ -1, %443 ], [ %441, %439 ]
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 4
  %456 = load i64, ptr %455, align 8
  %457 = add i64 %456, %454
  store i64 %457, ptr %455, align 8
  %458 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 14
  %459 = load i64, ptr %458, align 8
  %460 = add i64 %459, %454
  store i64 %460, ptr %458, align 8
  %461 = load volatile ptr, ptr %126, align 4
  %462 = icmp eq ptr %461, null
  br i1 %462, label %476, label %463, !prof !9

463:                                              ; preds = %452
  %464 = getelementptr i8, ptr %461, i32 16404
  %465 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %464) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %466 = icmp eq i32 %465, -1
  br i1 %466, label %467, label %476

467:                                              ; preds = %463
  %468 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %461) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %469 = icmp eq i32 %468, -1
  br i1 %469, label %470, label %476

470:                                              ; preds = %467
  %471 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %472 = load ptr, ptr %471, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %472, ptr noundef nonnull @.str) #22
  %473 = load ptr, ptr %7, align 4
  %474 = tail call zeroext i1 @pci_device_is_present(ptr noundef %473) #23
  br i1 %474, label %475, label %476, !prof !9

475:                                              ; preds = %470
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16404) #23
  br label %476

476:                                              ; preds = %475, %470, %467, %463, %452
  %477 = phi i32 [ -1, %452 ], [ -1, %470 ], [ -1, %475 ], [ -1, %467 ], [ %465, %463 ]
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 5
  %480 = load i64, ptr %479, align 8
  %481 = add i64 %480, %478
  store i64 %481, ptr %479, align 8
  %482 = load volatile ptr, ptr %126, align 4
  %483 = icmp eq ptr %482, null
  br i1 %483, label %497, label %484, !prof !9

484:                                              ; preds = %476
  %485 = getelementptr i8, ptr %482, i32 16408
  %486 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %485) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %487 = icmp eq i32 %486, -1
  br i1 %487, label %488, label %497

488:                                              ; preds = %484
  %489 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %482) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %490 = icmp eq i32 %489, -1
  br i1 %490, label %491, label %497

491:                                              ; preds = %488
  %492 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %493 = load ptr, ptr %492, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %493, ptr noundef nonnull @.str) #22
  %494 = load ptr, ptr %7, align 4
  %495 = tail call zeroext i1 @pci_device_is_present(ptr noundef %494) #23
  br i1 %495, label %496, label %497, !prof !9

496:                                              ; preds = %491
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16408) #23
  br label %497

497:                                              ; preds = %496, %491, %488, %484, %476
  %498 = phi i32 [ -1, %476 ], [ -1, %491 ], [ -1, %496 ], [ -1, %488 ], [ %486, %484 ]
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 6
  %501 = load i64, ptr %500, align 8
  %502 = add i64 %501, %499
  store i64 %502, ptr %500, align 8
  %503 = load volatile ptr, ptr %126, align 4
  %504 = icmp eq ptr %503, null
  br i1 %504, label %518, label %505, !prof !9

505:                                              ; preds = %497
  %506 = getelementptr i8, ptr %503, i32 16412
  %507 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %506) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %508 = icmp eq i32 %507, -1
  br i1 %508, label %509, label %518

509:                                              ; preds = %505
  %510 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %503) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %511 = icmp eq i32 %510, -1
  br i1 %511, label %512, label %518

512:                                              ; preds = %509
  %513 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %514 = load ptr, ptr %513, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %514, ptr noundef nonnull @.str) #22
  %515 = load ptr, ptr %7, align 4
  %516 = tail call zeroext i1 @pci_device_is_present(ptr noundef %515) #23
  br i1 %516, label %517, label %518, !prof !9

517:                                              ; preds = %512
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16412) #23
  br label %518

518:                                              ; preds = %517, %512, %509, %505, %497
  %519 = phi i32 [ -1, %497 ], [ -1, %512 ], [ -1, %517 ], [ -1, %509 ], [ %507, %505 ]
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 7
  %522 = load i64, ptr %521, align 8
  %523 = add i64 %522, %520
  store i64 %523, ptr %521, align 8
  %524 = load volatile ptr, ptr %126, align 4
  %525 = icmp eq ptr %524, null
  br i1 %525, label %539, label %526, !prof !9

526:                                              ; preds = %518
  %527 = getelementptr i8, ptr %524, i32 16416
  %528 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %527) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %529 = icmp eq i32 %528, -1
  br i1 %529, label %530, label %539

530:                                              ; preds = %526
  %531 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %524) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %532 = icmp eq i32 %531, -1
  br i1 %532, label %533, label %539

533:                                              ; preds = %530
  %534 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %535 = load ptr, ptr %534, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %535, ptr noundef nonnull @.str) #22
  %536 = load ptr, ptr %7, align 4
  %537 = tail call zeroext i1 @pci_device_is_present(ptr noundef %536) #23
  br i1 %537, label %538, label %539, !prof !9

538:                                              ; preds = %533
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16416) #23
  br label %539

539:                                              ; preds = %538, %533, %530, %526, %518
  %540 = phi i32 [ -1, %518 ], [ -1, %533 ], [ -1, %538 ], [ -1, %530 ], [ %528, %526 ]
  %541 = zext i32 %540 to i64
  %542 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 8
  %543 = load i64, ptr %542, align 8
  %544 = add i64 %543, %541
  store i64 %544, ptr %542, align 8
  %545 = load volatile ptr, ptr %126, align 4
  %546 = icmp eq ptr %545, null
  br i1 %546, label %560, label %547, !prof !9

547:                                              ; preds = %539
  %548 = getelementptr i8, ptr %545, i32 16432
  %549 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %548) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %550 = icmp eq i32 %549, -1
  br i1 %550, label %551, label %560

551:                                              ; preds = %547
  %552 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %545) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %553 = icmp eq i32 %552, -1
  br i1 %553, label %554, label %560

554:                                              ; preds = %551
  %555 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %556 = load ptr, ptr %555, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %556, ptr noundef nonnull @.str) #22
  %557 = load ptr, ptr %7, align 4
  %558 = tail call zeroext i1 @pci_device_is_present(ptr noundef %557) #23
  br i1 %558, label %559, label %560, !prof !9

559:                                              ; preds = %554
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16432) #23
  br label %560

560:                                              ; preds = %559, %554, %551, %547, %539
  %561 = phi i32 [ -1, %539 ], [ -1, %554 ], [ -1, %559 ], [ -1, %551 ], [ %549, %547 ]
  %562 = zext i32 %561 to i64
  %563 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 10
  %564 = load i64, ptr %563, align 8
  %565 = add i64 %564, %562
  store i64 %565, ptr %563, align 8
  %566 = load volatile ptr, ptr %126, align 4
  %567 = icmp eq ptr %566, null
  br i1 %567, label %581, label %568, !prof !9

568:                                              ; preds = %560
  %569 = getelementptr i8, ptr %566, i32 16448
  %570 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %569) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %571 = icmp eq i32 %570, -1
  br i1 %571, label %572, label %581

572:                                              ; preds = %568
  %573 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %566) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %574 = icmp eq i32 %573, -1
  br i1 %574, label %575, label %581

575:                                              ; preds = %572
  %576 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %577 = load ptr, ptr %576, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %577, ptr noundef nonnull @.str) #22
  %578 = load ptr, ptr %7, align 4
  %579 = tail call zeroext i1 @pci_device_is_present(ptr noundef %578) #23
  br i1 %579, label %580, label %581, !prof !9

580:                                              ; preds = %575
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16448) #23
  br label %581

581:                                              ; preds = %580, %575, %572, %568, %560
  %582 = phi i32 [ -1, %560 ], [ -1, %575 ], [ -1, %580 ], [ -1, %572 ], [ %570, %568 ]
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 14
  %585 = load i64, ptr %584, align 8
  %586 = add i64 %585, %583
  store i64 %586, ptr %584, align 8
  %587 = load volatile ptr, ptr %126, align 4
  %588 = icmp eq ptr %587, null
  br i1 %588, label %602, label %589, !prof !9

589:                                              ; preds = %581
  %590 = getelementptr i8, ptr %587, i32 16456
  %591 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %590) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %592 = icmp eq i32 %591, -1
  br i1 %592, label %593, label %602

593:                                              ; preds = %589
  %594 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %587) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %595 = icmp eq i32 %594, -1
  br i1 %595, label %596, label %602

596:                                              ; preds = %593
  %597 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %598 = load ptr, ptr %597, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %598, ptr noundef nonnull @.str) #22
  %599 = load ptr, ptr %7, align 4
  %600 = tail call zeroext i1 @pci_device_is_present(ptr noundef %599) #23
  br i1 %600, label %601, label %602, !prof !9

601:                                              ; preds = %596
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16456) #23
  br label %602

602:                                              ; preds = %601, %596, %593, %589, %581
  %603 = phi i32 [ -1, %581 ], [ -1, %596 ], [ -1, %601 ], [ -1, %593 ], [ %591, %589 ]
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 15
  %606 = load i64, ptr %605, align 8
  %607 = add i64 %606, %604
  store i64 %607, ptr %605, align 8
  %608 = load volatile ptr, ptr %126, align 4
  %609 = icmp eq ptr %608, null
  br i1 %609, label %623, label %610, !prof !9

610:                                              ; preds = %602
  %611 = getelementptr i8, ptr %608, i32 16460
  %612 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %611) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %613 = icmp eq i32 %612, -1
  br i1 %613, label %614, label %623

614:                                              ; preds = %610
  %615 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %608) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %616 = icmp eq i32 %615, -1
  br i1 %616, label %617, label %623

617:                                              ; preds = %614
  %618 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %619 = load ptr, ptr %618, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %619, ptr noundef nonnull @.str) #22
  %620 = load ptr, ptr %7, align 4
  %621 = tail call zeroext i1 @pci_device_is_present(ptr noundef %620) #23
  br i1 %621, label %622, label %623, !prof !9

622:                                              ; preds = %617
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16460) #23
  br label %623

623:                                              ; preds = %622, %617, %614, %610, %602
  %624 = phi i32 [ -1, %602 ], [ -1, %617 ], [ -1, %622 ], [ -1, %614 ], [ %612, %610 ]
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 16
  %627 = load i64, ptr %626, align 8
  %628 = add i64 %627, %625
  store i64 %628, ptr %626, align 8
  %629 = load volatile ptr, ptr %126, align 4
  %630 = icmp eq ptr %629, null
  br i1 %630, label %644, label %631, !prof !9

631:                                              ; preds = %623
  %632 = getelementptr i8, ptr %629, i32 16464
  %633 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %632) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %634 = icmp eq i32 %633, -1
  br i1 %634, label %635, label %644

635:                                              ; preds = %631
  %636 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %629) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %637 = icmp eq i32 %636, -1
  br i1 %637, label %638, label %644

638:                                              ; preds = %635
  %639 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %640 = load ptr, ptr %639, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %640, ptr noundef nonnull @.str) #22
  %641 = load ptr, ptr %7, align 4
  %642 = tail call zeroext i1 @pci_device_is_present(ptr noundef %641) #23
  br i1 %642, label %643, label %644, !prof !9

643:                                              ; preds = %638
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16464) #23
  br label %644

644:                                              ; preds = %643, %638, %635, %631, %623
  %645 = phi i32 [ -1, %623 ], [ -1, %638 ], [ -1, %643 ], [ -1, %635 ], [ %633, %631 ]
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 17
  %648 = load i64, ptr %647, align 8
  %649 = add i64 %648, %646
  store i64 %649, ptr %647, align 8
  %650 = load volatile ptr, ptr %126, align 4
  %651 = icmp eq ptr %650, null
  br i1 %651, label %665, label %652, !prof !9

652:                                              ; preds = %644
  %653 = getelementptr i8, ptr %650, i32 16468
  %654 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %653) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %655 = icmp eq i32 %654, -1
  br i1 %655, label %656, label %665

656:                                              ; preds = %652
  %657 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %650) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %658 = icmp eq i32 %657, -1
  br i1 %658, label %659, label %665

659:                                              ; preds = %656
  %660 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %661 = load ptr, ptr %660, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %661, ptr noundef nonnull @.str) #22
  %662 = load ptr, ptr %7, align 4
  %663 = tail call zeroext i1 @pci_device_is_present(ptr noundef %662) #23
  br i1 %663, label %664, label %665, !prof !9

664:                                              ; preds = %659
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16468) #23
  br label %665

665:                                              ; preds = %664, %659, %656, %652, %644
  %666 = phi i32 [ -1, %644 ], [ -1, %659 ], [ -1, %664 ], [ -1, %656 ], [ %654, %652 ]
  %667 = zext i32 %666 to i64
  %668 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 18
  %669 = load i64, ptr %668, align 8
  %670 = add i64 %669, %667
  store i64 %670, ptr %668, align 8
  %671 = load volatile ptr, ptr %126, align 4
  %672 = icmp eq ptr %671, null
  br i1 %672, label %686, label %673, !prof !9

673:                                              ; preds = %665
  %674 = getelementptr i8, ptr %671, i32 16472
  %675 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %674) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %676 = icmp eq i32 %675, -1
  br i1 %676, label %677, label %686

677:                                              ; preds = %673
  %678 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %671) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %679 = icmp eq i32 %678, -1
  br i1 %679, label %680, label %686

680:                                              ; preds = %677
  %681 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %682 = load ptr, ptr %681, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %682, ptr noundef nonnull @.str) #22
  %683 = load ptr, ptr %7, align 4
  %684 = tail call zeroext i1 @pci_device_is_present(ptr noundef %683) #23
  br i1 %684, label %685, label %686, !prof !9

685:                                              ; preds = %680
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16472) #23
  br label %686

686:                                              ; preds = %685, %680, %677, %673, %665
  %687 = phi i32 [ -1, %665 ], [ -1, %680 ], [ -1, %685 ], [ -1, %677 ], [ %675, %673 ]
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 19
  %690 = load i64, ptr %689, align 8
  %691 = add i64 %690, %688
  store i64 %691, ptr %689, align 8
  %692 = load volatile ptr, ptr %126, align 4
  %693 = icmp eq ptr %692, null
  br i1 %693, label %707, label %694, !prof !9

694:                                              ; preds = %686
  %695 = getelementptr i8, ptr %692, i32 16512
  %696 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %695) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %697 = icmp eq i32 %696, -1
  br i1 %697, label %698, label %707

698:                                              ; preds = %694
  %699 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %692) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %700 = icmp eq i32 %699, -1
  br i1 %700, label %701, label %707

701:                                              ; preds = %698
  %702 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %703 = load ptr, ptr %702, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %703, ptr noundef nonnull @.str) #22
  %704 = load ptr, ptr %7, align 4
  %705 = tail call zeroext i1 @pci_device_is_present(ptr noundef %704) #23
  br i1 %705, label %706, label %707, !prof !9

706:                                              ; preds = %701
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16512) #23
  br label %707

707:                                              ; preds = %706, %701, %698, %694, %686
  %708 = phi i32 [ -1, %686 ], [ -1, %701 ], [ -1, %706 ], [ -1, %698 ], [ %696, %694 ]
  %709 = zext i32 %708 to i64
  %710 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 29
  %711 = load i64, ptr %710, align 8
  %712 = add i64 %711, %709
  store i64 %712, ptr %710, align 8
  %713 = load volatile ptr, ptr %126, align 4
  %714 = icmp eq ptr %713, null
  br i1 %714, label %728, label %715, !prof !9

715:                                              ; preds = %707
  %716 = getelementptr i8, ptr %713, i32 16528
  %717 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %716) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %718 = icmp eq i32 %717, -1
  br i1 %718, label %719, label %728

719:                                              ; preds = %715
  %720 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %713) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %721 = icmp eq i32 %720, -1
  br i1 %721, label %722, label %728

722:                                              ; preds = %719
  %723 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %724 = load ptr, ptr %723, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %724, ptr noundef nonnull @.str) #22
  %725 = load ptr, ptr %7, align 4
  %726 = tail call zeroext i1 @pci_device_is_present(ptr noundef %725) #23
  br i1 %726, label %727, label %728, !prof !9

727:                                              ; preds = %722
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16528) #23
  br label %728

728:                                              ; preds = %727, %722, %719, %715, %707
  %729 = phi i32 [ -1, %707 ], [ -1, %722 ], [ -1, %727 ], [ -1, %719 ], [ %717, %715 ]
  %730 = zext i32 %729 to i64
  %731 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 31
  %732 = load i64, ptr %731, align 8
  %733 = add i64 %732, %730
  store i64 %733, ptr %731, align 8
  %734 = load volatile ptr, ptr %126, align 4
  %735 = icmp eq ptr %734, null
  br i1 %735, label %749, label %736, !prof !9

736:                                              ; preds = %728
  %737 = getelementptr i8, ptr %734, i32 16532
  %738 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %737) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %739 = icmp eq i32 %738, -1
  br i1 %739, label %740, label %749

740:                                              ; preds = %736
  %741 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %734) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %742 = icmp eq i32 %741, -1
  br i1 %742, label %743, label %749

743:                                              ; preds = %740
  %744 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %745 = load ptr, ptr %744, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %745, ptr noundef nonnull @.str) #22
  %746 = load ptr, ptr %7, align 4
  %747 = tail call zeroext i1 @pci_device_is_present(ptr noundef %746) #23
  br i1 %747, label %748, label %749, !prof !9

748:                                              ; preds = %743
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16532) #23
  br label %749

749:                                              ; preds = %748, %743, %740, %736, %728
  %750 = load volatile ptr, ptr %126, align 4
  %751 = icmp eq ptr %750, null
  br i1 %751, label %765, label %752, !prof !9

752:                                              ; preds = %749
  %753 = getelementptr i8, ptr %750, i32 16544
  %754 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %753) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %755 = icmp eq i32 %754, -1
  br i1 %755, label %756, label %765

756:                                              ; preds = %752
  %757 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %750) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %758 = icmp eq i32 %757, -1
  br i1 %758, label %759, label %765

759:                                              ; preds = %756
  %760 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %761 = load ptr, ptr %760, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %761, ptr noundef nonnull @.str) #22
  %762 = load ptr, ptr %7, align 4
  %763 = tail call zeroext i1 @pci_device_is_present(ptr noundef %762) #23
  br i1 %763, label %764, label %765, !prof !9

764:                                              ; preds = %759
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16544) #23
  br label %765

765:                                              ; preds = %764, %759, %756, %752, %749
  %766 = phi i32 [ -1, %749 ], [ -1, %759 ], [ -1, %764 ], [ -1, %756 ], [ %754, %752 ]
  %767 = zext i32 %766 to i64
  %768 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 32
  %769 = load i64, ptr %768, align 8
  %770 = add i64 %769, %767
  store i64 %770, ptr %768, align 8
  %771 = load volatile ptr, ptr %126, align 4
  %772 = icmp eq ptr %771, null
  br i1 %772, label %786, label %773, !prof !9

773:                                              ; preds = %765
  %774 = getelementptr i8, ptr %771, i32 16548
  %775 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %774) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %776 = icmp eq i32 %775, -1
  br i1 %776, label %777, label %786

777:                                              ; preds = %773
  %778 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %771) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %779 = icmp eq i32 %778, -1
  br i1 %779, label %780, label %786

780:                                              ; preds = %777
  %781 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %782 = load ptr, ptr %781, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %782, ptr noundef nonnull @.str) #22
  %783 = load ptr, ptr %7, align 4
  %784 = tail call zeroext i1 @pci_device_is_present(ptr noundef %783) #23
  br i1 %784, label %785, label %786, !prof !9

785:                                              ; preds = %780
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16548) #23
  br label %786

786:                                              ; preds = %785, %780, %777, %773, %765
  %787 = phi i32 [ -1, %765 ], [ -1, %780 ], [ -1, %785 ], [ -1, %777 ], [ %775, %773 ]
  %788 = zext i32 %787 to i64
  %789 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 33
  %790 = load i64, ptr %789, align 8
  %791 = add i64 %790, %788
  store i64 %791, ptr %789, align 8
  %792 = load volatile ptr, ptr %126, align 4
  %793 = icmp eq ptr %792, null
  br i1 %793, label %807, label %794, !prof !9

794:                                              ; preds = %786
  %795 = getelementptr i8, ptr %792, i32 16552
  %796 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %795) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %797 = icmp eq i32 %796, -1
  br i1 %797, label %798, label %807

798:                                              ; preds = %794
  %799 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %792) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %800 = icmp eq i32 %799, -1
  br i1 %800, label %801, label %807

801:                                              ; preds = %798
  %802 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %803 = load ptr, ptr %802, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %803, ptr noundef nonnull @.str) #22
  %804 = load ptr, ptr %7, align 4
  %805 = tail call zeroext i1 @pci_device_is_present(ptr noundef %804) #23
  br i1 %805, label %806, label %807, !prof !9

806:                                              ; preds = %801
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16552) #23
  br label %807

807:                                              ; preds = %806, %801, %798, %794, %786
  %808 = phi i32 [ -1, %786 ], [ -1, %801 ], [ -1, %806 ], [ -1, %798 ], [ %796, %794 ]
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 34
  %811 = load i64, ptr %810, align 8
  %812 = add i64 %811, %809
  store i64 %812, ptr %810, align 8
  %813 = load volatile ptr, ptr %126, align 4
  %814 = icmp eq ptr %813, null
  br i1 %814, label %828, label %815, !prof !9

815:                                              ; preds = %807
  %816 = getelementptr i8, ptr %813, i32 16560
  %817 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %816) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %818 = icmp eq i32 %817, -1
  br i1 %818, label %819, label %828

819:                                              ; preds = %815
  %820 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %813) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %821 = icmp eq i32 %820, -1
  br i1 %821, label %822, label %828

822:                                              ; preds = %819
  %823 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %824 = load ptr, ptr %823, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %824, ptr noundef nonnull @.str) #22
  %825 = load ptr, ptr %7, align 4
  %826 = tail call zeroext i1 @pci_device_is_present(ptr noundef %825) #23
  br i1 %826, label %827, label %828, !prof !9

827:                                              ; preds = %822
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16560) #23
  br label %828

828:                                              ; preds = %827, %822, %819, %815, %807
  %829 = phi i32 [ -1, %807 ], [ -1, %822 ], [ -1, %827 ], [ -1, %819 ], [ %817, %815 ]
  %830 = zext i32 %829 to i64
  %831 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 36
  %832 = load i64, ptr %831, align 8
  %833 = add i64 %832, %830
  store i64 %833, ptr %831, align 8
  %834 = load volatile ptr, ptr %126, align 4
  %835 = icmp eq ptr %834, null
  br i1 %835, label %849, label %836, !prof !9

836:                                              ; preds = %828
  %837 = getelementptr i8, ptr %834, i32 16580
  %838 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %837) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %839 = icmp eq i32 %838, -1
  br i1 %839, label %840, label %849

840:                                              ; preds = %836
  %841 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %834) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %842 = icmp eq i32 %841, -1
  br i1 %842, label %843, label %849

843:                                              ; preds = %840
  %844 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %845 = load ptr, ptr %844, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %845, ptr noundef nonnull @.str) #22
  %846 = load ptr, ptr %7, align 4
  %847 = tail call zeroext i1 @pci_device_is_present(ptr noundef %846) #23
  br i1 %847, label %848, label %849, !prof !9

848:                                              ; preds = %843
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16580) #23
  br label %849

849:                                              ; preds = %848, %843, %840, %836, %828
  %850 = phi i32 [ -1, %828 ], [ -1, %843 ], [ -1, %848 ], [ -1, %840 ], [ %838, %836 ]
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 40
  %853 = load i64, ptr %852, align 8
  %854 = add i64 %853, %851
  store i64 %854, ptr %852, align 8
  %855 = load volatile ptr, ptr %126, align 4
  %856 = icmp eq ptr %855, null
  br i1 %856, label %870, label %857, !prof !9

857:                                              ; preds = %849
  %858 = getelementptr i8, ptr %855, i32 16588
  %859 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %858) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %860 = icmp eq i32 %859, -1
  br i1 %860, label %861, label %870

861:                                              ; preds = %857
  %862 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %855) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %863 = icmp eq i32 %862, -1
  br i1 %863, label %864, label %870

864:                                              ; preds = %861
  %865 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %866 = load ptr, ptr %865, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %866, ptr noundef nonnull @.str) #22
  %867 = load ptr, ptr %7, align 4
  %868 = tail call zeroext i1 @pci_device_is_present(ptr noundef %867) #23
  br i1 %868, label %869, label %870, !prof !9

869:                                              ; preds = %864
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16588) #23
  br label %870

870:                                              ; preds = %869, %864, %861, %857, %849
  %871 = phi i32 [ -1, %849 ], [ -1, %864 ], [ -1, %869 ], [ -1, %861 ], [ %859, %857 ]
  %872 = zext i32 %871 to i64
  %873 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 41
  %874 = load i64, ptr %873, align 8
  %875 = add i64 %874, %872
  store i64 %875, ptr %873, align 8
  %876 = load volatile ptr, ptr %126, align 4
  %877 = icmp eq ptr %876, null
  br i1 %877, label %891, label %878, !prof !9

878:                                              ; preds = %870
  %879 = getelementptr i8, ptr %876, i32 16592
  %880 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %879) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %881 = icmp eq i32 %880, -1
  br i1 %881, label %882, label %891

882:                                              ; preds = %878
  %883 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %876) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %884 = icmp eq i32 %883, -1
  br i1 %884, label %885, label %891

885:                                              ; preds = %882
  %886 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %887 = load ptr, ptr %886, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %887, ptr noundef nonnull @.str) #22
  %888 = load ptr, ptr %7, align 4
  %889 = tail call zeroext i1 @pci_device_is_present(ptr noundef %888) #23
  br i1 %889, label %890, label %891, !prof !9

890:                                              ; preds = %885
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16592) #23
  br label %891

891:                                              ; preds = %890, %885, %882, %878, %870
  %892 = phi i32 [ -1, %870 ], [ -1, %885 ], [ -1, %890 ], [ -1, %882 ], [ %880, %878 ]
  %893 = zext i32 %892 to i64
  %894 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 42
  %895 = load i64, ptr %894, align 8
  %896 = add i64 %895, %893
  store i64 %896, ptr %894, align 8
  %897 = load volatile ptr, ptr %126, align 4
  %898 = icmp eq ptr %897, null
  br i1 %898, label %912, label %899, !prof !9

899:                                              ; preds = %891
  %900 = getelementptr i8, ptr %897, i32 16600
  %901 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %900) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %902 = icmp eq i32 %901, -1
  br i1 %902, label %903, label %912

903:                                              ; preds = %899
  %904 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %897) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %905 = icmp eq i32 %904, -1
  br i1 %905, label %906, label %912

906:                                              ; preds = %903
  %907 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %908 = load ptr, ptr %907, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %908, ptr noundef nonnull @.str) #22
  %909 = load ptr, ptr %7, align 4
  %910 = tail call zeroext i1 @pci_device_is_present(ptr noundef %909) #23
  br i1 %910, label %911, label %912, !prof !9

911:                                              ; preds = %906
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16600) #23
  br label %912

912:                                              ; preds = %911, %906, %903, %899, %891
  %913 = phi i32 [ -1, %891 ], [ -1, %906 ], [ -1, %911 ], [ -1, %903 ], [ %901, %899 ]
  %914 = zext i32 %913 to i64
  %915 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 44
  %916 = load i64, ptr %915, align 8
  %917 = add i64 %916, %914
  store i64 %917, ptr %915, align 8
  %918 = load volatile ptr, ptr %126, align 4
  %919 = icmp eq ptr %918, null
  br i1 %919, label %933, label %920, !prof !9

920:                                              ; preds = %912
  %921 = getelementptr i8, ptr %918, i32 16604
  %922 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %921) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %923 = icmp eq i32 %922, -1
  br i1 %923, label %924, label %933

924:                                              ; preds = %920
  %925 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %918) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %926 = icmp eq i32 %925, -1
  br i1 %926, label %927, label %933

927:                                              ; preds = %924
  %928 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %929 = load ptr, ptr %928, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %929, ptr noundef nonnull @.str) #22
  %930 = load ptr, ptr %7, align 4
  %931 = tail call zeroext i1 @pci_device_is_present(ptr noundef %930) #23
  br i1 %931, label %932, label %933, !prof !9

932:                                              ; preds = %927
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16604) #23
  br label %933

933:                                              ; preds = %932, %927, %924, %920, %912
  %934 = phi i32 [ -1, %912 ], [ -1, %927 ], [ -1, %932 ], [ -1, %924 ], [ %922, %920 ]
  %935 = zext i32 %934 to i64
  %936 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 45
  %937 = load i64, ptr %936, align 8
  %938 = add i64 %937, %935
  store i64 %938, ptr %936, align 8
  %939 = load volatile ptr, ptr %126, align 4
  %940 = icmp eq ptr %939, null
  br i1 %940, label %954, label %941, !prof !9

941:                                              ; preds = %933
  %942 = getelementptr i8, ptr %939, i32 16608
  %943 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %942) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %944 = icmp eq i32 %943, -1
  br i1 %944, label %945, label %954

945:                                              ; preds = %941
  %946 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %939) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %947 = icmp eq i32 %946, -1
  br i1 %947, label %948, label %954

948:                                              ; preds = %945
  %949 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %950 = load ptr, ptr %949, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %950, ptr noundef nonnull @.str) #22
  %951 = load ptr, ptr %7, align 4
  %952 = tail call zeroext i1 @pci_device_is_present(ptr noundef %951) #23
  br i1 %952, label %953, label %954, !prof !9

953:                                              ; preds = %948
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16608) #23
  br label %954

954:                                              ; preds = %953, %948, %945, %941, %933
  %955 = phi i32 [ -1, %933 ], [ -1, %948 ], [ -1, %953 ], [ -1, %945 ], [ %943, %941 ]
  %956 = zext i32 %955 to i64
  %957 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 46
  %958 = load i64, ptr %957, align 8
  %959 = add i64 %958, %956
  store i64 %959, ptr %957, align 8
  %960 = load volatile ptr, ptr %126, align 4
  %961 = icmp eq ptr %960, null
  br i1 %961, label %975, label %962, !prof !9

962:                                              ; preds = %954
  %963 = getelementptr i8, ptr %960, i32 16612
  %964 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %963) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %965 = icmp eq i32 %964, -1
  br i1 %965, label %966, label %975

966:                                              ; preds = %962
  %967 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %960) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %968 = icmp eq i32 %967, -1
  br i1 %968, label %969, label %975

969:                                              ; preds = %966
  %970 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %971 = load ptr, ptr %970, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %971, ptr noundef nonnull @.str) #22
  %972 = load ptr, ptr %7, align 4
  %973 = tail call zeroext i1 @pci_device_is_present(ptr noundef %972) #23
  br i1 %973, label %974, label %975, !prof !9

974:                                              ; preds = %969
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16612) #23
  br label %975

975:                                              ; preds = %974, %969, %966, %962, %954
  %976 = phi i32 [ -1, %954 ], [ -1, %969 ], [ -1, %974 ], [ -1, %966 ], [ %964, %962 ]
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 47
  %979 = load i64, ptr %978, align 8
  %980 = add i64 %979, %977
  store i64 %980, ptr %978, align 8
  %981 = load volatile ptr, ptr %126, align 4
  %982 = icmp eq ptr %981, null
  br i1 %982, label %996, label %983, !prof !9

983:                                              ; preds = %975
  %984 = getelementptr i8, ptr %981, i32 16616
  %985 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %984) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %986 = icmp eq i32 %985, -1
  br i1 %986, label %987, label %996

987:                                              ; preds = %983
  %988 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %981) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %989 = icmp eq i32 %988, -1
  br i1 %989, label %990, label %996

990:                                              ; preds = %987
  %991 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %992 = load ptr, ptr %991, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %992, ptr noundef nonnull @.str) #22
  %993 = load ptr, ptr %7, align 4
  %994 = tail call zeroext i1 @pci_device_is_present(ptr noundef %993) #23
  br i1 %994, label %995, label %996, !prof !9

995:                                              ; preds = %990
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16616) #23
  br label %996

996:                                              ; preds = %995, %990, %987, %983, %975
  %997 = phi i32 [ -1, %975 ], [ -1, %990 ], [ -1, %995 ], [ -1, %987 ], [ %985, %983 ]
  %998 = zext i32 %997 to i64
  %999 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 48
  %1000 = load i64, ptr %999, align 8
  %1001 = add i64 %1000, %998
  store i64 %1001, ptr %999, align 8
  %1002 = load volatile ptr, ptr %126, align 4
  %1003 = icmp eq ptr %1002, null
  br i1 %1003, label %1017, label %1004, !prof !9

1004:                                             ; preds = %996
  %1005 = getelementptr i8, ptr %1002, i32 16620
  %1006 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1005) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1007 = icmp eq i32 %1006, -1
  br i1 %1007, label %1008, label %1017

1008:                                             ; preds = %1004
  %1009 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1002) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1010 = icmp eq i32 %1009, -1
  br i1 %1010, label %1011, label %1017

1011:                                             ; preds = %1008
  %1012 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1013 = load ptr, ptr %1012, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1013, ptr noundef nonnull @.str) #22
  %1014 = load ptr, ptr %7, align 4
  %1015 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1014) #23
  br i1 %1015, label %1016, label %1017, !prof !9

1016:                                             ; preds = %1011
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16620) #23
  br label %1017

1017:                                             ; preds = %1016, %1011, %1008, %1004, %996
  %1018 = phi i32 [ -1, %996 ], [ -1, %1011 ], [ -1, %1016 ], [ -1, %1008 ], [ %1006, %1004 ]
  %1019 = zext i32 %1018 to i64
  %1020 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 49
  %1021 = load i64, ptr %1020, align 8
  %1022 = add i64 %1021, %1019
  store i64 %1022, ptr %1020, align 8
  %1023 = load volatile ptr, ptr %126, align 4
  %1024 = icmp eq ptr %1023, null
  br i1 %1024, label %1038, label %1025, !prof !9

1025:                                             ; preds = %1017
  %1026 = getelementptr i8, ptr %1023, i32 16624
  %1027 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1026) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1028 = icmp eq i32 %1027, -1
  br i1 %1028, label %1029, label %1038

1029:                                             ; preds = %1025
  %1030 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1023) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1031 = icmp eq i32 %1030, -1
  br i1 %1031, label %1032, label %1038

1032:                                             ; preds = %1029
  %1033 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1034 = load ptr, ptr %1033, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1034, ptr noundef nonnull @.str) #22
  %1035 = load ptr, ptr %7, align 4
  %1036 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1035) #23
  br i1 %1036, label %1037, label %1038, !prof !9

1037:                                             ; preds = %1032
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16624) #23
  br label %1038

1038:                                             ; preds = %1037, %1032, %1029, %1025, %1017
  %1039 = phi i32 [ -1, %1017 ], [ -1, %1032 ], [ -1, %1037 ], [ -1, %1029 ], [ %1027, %1025 ]
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 50
  %1042 = load i64, ptr %1041, align 8
  %1043 = add i64 %1042, %1040
  store i64 %1043, ptr %1041, align 8
  %1044 = load volatile ptr, ptr %126, align 4
  %1045 = icmp eq ptr %1044, null
  br i1 %1045, label %1059, label %1046, !prof !9

1046:                                             ; preds = %1038
  %1047 = getelementptr i8, ptr %1044, i32 16628
  %1048 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1047) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1049 = icmp eq i32 %1048, -1
  br i1 %1049, label %1050, label %1059

1050:                                             ; preds = %1046
  %1051 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1044) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1052 = icmp eq i32 %1051, -1
  br i1 %1052, label %1053, label %1059

1053:                                             ; preds = %1050
  %1054 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1055 = load ptr, ptr %1054, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1055, ptr noundef nonnull @.str) #22
  %1056 = load ptr, ptr %7, align 4
  %1057 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1056) #23
  br i1 %1057, label %1058, label %1059, !prof !9

1058:                                             ; preds = %1053
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16628) #23
  br label %1059

1059:                                             ; preds = %1058, %1053, %1050, %1046, %1038
  %1060 = phi i32 [ -1, %1038 ], [ -1, %1053 ], [ -1, %1058 ], [ -1, %1050 ], [ %1048, %1046 ]
  %1061 = zext i32 %1060 to i64
  %1062 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 51
  %1063 = load i64, ptr %1062, align 8
  %1064 = add i64 %1063, %1061
  store i64 %1064, ptr %1062, align 8
  %1065 = load volatile ptr, ptr %126, align 4
  %1066 = icmp eq ptr %1065, null
  br i1 %1066, label %1080, label %1067, !prof !9

1067:                                             ; preds = %1059
  %1068 = getelementptr i8, ptr %1065, i32 16596
  %1069 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1068) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1070 = icmp eq i32 %1069, -1
  br i1 %1070, label %1071, label %1080

1071:                                             ; preds = %1067
  %1072 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1065) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1073 = icmp eq i32 %1072, -1
  br i1 %1073, label %1074, label %1080

1074:                                             ; preds = %1071
  %1075 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1076 = load ptr, ptr %1075, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1076, ptr noundef nonnull @.str) #22
  %1077 = load ptr, ptr %7, align 4
  %1078 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1077) #23
  br i1 %1078, label %1079, label %1080, !prof !9

1079:                                             ; preds = %1074
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16596) #23
  br label %1080

1080:                                             ; preds = %1079, %1074, %1071, %1067, %1059
  %1081 = phi i32 [ -1, %1059 ], [ -1, %1074 ], [ -1, %1079 ], [ -1, %1071 ], [ %1069, %1067 ]
  %1082 = zext i32 %1081 to i64
  %1083 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 43
  %1084 = load i64, ptr %1083, align 8
  %1085 = add i64 %1084, %1082
  store i64 %1085, ptr %1083, align 8
  %1086 = load volatile ptr, ptr %126, align 4
  %1087 = icmp eq ptr %1086, null
  br i1 %1087, label %1101, label %1088, !prof !9

1088:                                             ; preds = %1080
  %1089 = getelementptr i8, ptr %1086, i32 16424
  %1090 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1089) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1091 = icmp eq i32 %1090, -1
  br i1 %1091, label %1092, label %1101

1092:                                             ; preds = %1088
  %1093 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1086) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1094 = icmp eq i32 %1093, -1
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1092
  %1096 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1097 = load ptr, ptr %1096, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1097, ptr noundef nonnull @.str) #22
  %1098 = load ptr, ptr %7, align 4
  %1099 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1098) #23
  br i1 %1099, label %1100, label %1101, !prof !9

1100:                                             ; preds = %1095
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16424) #23
  br label %1101

1101:                                             ; preds = %1100, %1095, %1092, %1088, %1080
  %1102 = phi i32 [ -1, %1080 ], [ -1, %1095 ], [ -1, %1100 ], [ -1, %1092 ], [ %1090, %1088 ]
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 9
  %1105 = load i64, ptr %1104, align 8
  %1106 = add i64 %1105, %1103
  store i64 %1106, ptr %1104, align 8
  %1107 = load volatile ptr, ptr %126, align 4
  %1108 = icmp eq ptr %1107, null
  br i1 %1108, label %1122, label %1109, !prof !9

1109:                                             ; preds = %1101
  %1110 = getelementptr i8, ptr %1107, i32 16388
  %1111 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1110) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1112 = icmp eq i32 %1111, -1
  br i1 %1112, label %1113, label %1122

1113:                                             ; preds = %1109
  %1114 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1107) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1115 = icmp eq i32 %1114, -1
  br i1 %1115, label %1116, label %1122

1116:                                             ; preds = %1113
  %1117 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1118 = load ptr, ptr %1117, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1118, ptr noundef nonnull @.str) #22
  %1119 = load ptr, ptr %7, align 4
  %1120 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1119) #23
  br i1 %1120, label %1121, label %1122, !prof !9

1121:                                             ; preds = %1116
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16388) #23
  br label %1122

1122:                                             ; preds = %1121, %1116, %1113, %1109, %1101
  %1123 = phi i32 [ -1, %1101 ], [ -1, %1116 ], [ -1, %1121 ], [ -1, %1113 ], [ %1111, %1109 ]
  %1124 = zext i32 %1123 to i64
  %1125 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 1
  %1126 = load i64, ptr %1125, align 8
  %1127 = add i64 %1126, %1124
  store i64 %1127, ptr %1125, align 8
  %1128 = load volatile ptr, ptr %126, align 4
  %1129 = icmp eq ptr %1128, null
  br i1 %1129, label %1194, label %1130, !prof !9

1130:                                             ; preds = %1122
  %1131 = getelementptr i8, ptr %1128, i32 24
  %1132 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1131) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1133 = icmp eq i32 %1132, -1
  br i1 %1133, label %1134, label %1143

1134:                                             ; preds = %1130
  %1135 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1128) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1136 = icmp eq i32 %1135, -1
  br i1 %1136, label %1137, label %1194

1137:                                             ; preds = %1134
  %1138 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1139 = load ptr, ptr %1138, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1139, ptr noundef nonnull @.str) #22
  %1140 = load ptr, ptr %7, align 4
  %1141 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1140) #23
  br i1 %1141, label %1142, label %1194, !prof !9

1142:                                             ; preds = %1137
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 24) #23
  br label %1194

1143:                                             ; preds = %1130
  %1144 = and i32 %1132, 12582912
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1146, label %1194

1146:                                             ; preds = %1143
  %1147 = load volatile ptr, ptr %126, align 4
  %1148 = icmp eq ptr %1147, null
  br i1 %1148, label %1162, label %1149, !prof !9

1149:                                             ; preds = %1146
  %1150 = getelementptr i8, ptr %1147, i32 16396
  %1151 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1150) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1152 = icmp eq i32 %1151, -1
  br i1 %1152, label %1153, label %1162

1153:                                             ; preds = %1149
  %1154 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1147) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1155 = icmp eq i32 %1154, -1
  br i1 %1155, label %1156, label %1162

1156:                                             ; preds = %1153
  %1157 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1158 = load ptr, ptr %1157, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1158, ptr noundef nonnull @.str) #22
  %1159 = load ptr, ptr %7, align 4
  %1160 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1159) #23
  br i1 %1160, label %1161, label %1162, !prof !9

1161:                                             ; preds = %1156
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16396) #23
  br label %1162

1162:                                             ; preds = %1161, %1156, %1153, %1149, %1146
  %1163 = phi i32 [ -1, %1146 ], [ -1, %1156 ], [ -1, %1161 ], [ -1, %1153 ], [ %1151, %1149 ]
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 3
  %1166 = load i64, ptr %1165, align 8
  %1167 = add i64 %1166, %1164
  store i64 %1167, ptr %1165, align 8
  %1168 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %1169 = load i32, ptr %1168, align 4
  %1170 = and i32 %1169, -2
  %1171 = icmp eq i32 %1170, 6
  br i1 %1171, label %1194, label %1172

1172:                                             ; preds = %1162
  %1173 = load volatile ptr, ptr %126, align 4
  %1174 = icmp eq ptr %1173, null
  br i1 %1174, label %1188, label %1175, !prof !9

1175:                                             ; preds = %1172
  %1176 = getelementptr i8, ptr %1173, i32 16436
  %1177 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1176) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1178 = icmp eq i32 %1177, -1
  br i1 %1178, label %1179, label %1188

1179:                                             ; preds = %1175
  %1180 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1173) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1181 = icmp eq i32 %1180, -1
  br i1 %1181, label %1182, label %1188

1182:                                             ; preds = %1179
  %1183 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1184 = load ptr, ptr %1183, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1184, ptr noundef nonnull @.str) #22
  %1185 = load ptr, ptr %7, align 4
  %1186 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1185) #23
  br i1 %1186, label %1187, label %1188, !prof !9

1187:                                             ; preds = %1182
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16436) #23
  br label %1188

1188:                                             ; preds = %1187, %1182, %1179, %1175, %1172
  %1189 = phi i32 [ -1, %1172 ], [ -1, %1182 ], [ -1, %1187 ], [ -1, %1179 ], [ %1177, %1175 ]
  %1190 = zext i32 %1189 to i64
  %1191 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 11
  %1192 = load i64, ptr %1191, align 8
  %1193 = add i64 %1192, %1190
  store i64 %1193, ptr %1191, align 8
  br label %1194

1194:                                             ; preds = %1188, %1162, %1143, %1142, %1137, %1134, %1122
  %1195 = load volatile ptr, ptr %126, align 4
  %1196 = icmp eq ptr %1195, null
  br i1 %1196, label %1210, label %1197, !prof !9

1197:                                             ; preds = %1194
  %1198 = getelementptr i8, ptr %1195, i32 16632
  %1199 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1198) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1200 = icmp eq i32 %1199, -1
  br i1 %1200, label %1201, label %1210

1201:                                             ; preds = %1197
  %1202 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1195) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1203 = icmp eq i32 %1202, -1
  br i1 %1203, label %1204, label %1210

1204:                                             ; preds = %1201
  %1205 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1206 = load ptr, ptr %1205, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1206, ptr noundef nonnull @.str) #22
  %1207 = load ptr, ptr %7, align 4
  %1208 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1207) #23
  br i1 %1208, label %1209, label %1210, !prof !9

1209:                                             ; preds = %1204
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16632) #23
  br label %1210

1210:                                             ; preds = %1209, %1204, %1201, %1197, %1194
  %1211 = phi i32 [ -1, %1194 ], [ -1, %1204 ], [ -1, %1209 ], [ -1, %1201 ], [ %1199, %1197 ]
  %1212 = zext i32 %1211 to i64
  %1213 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 52
  %1214 = load i64, ptr %1213, align 8
  %1215 = add i64 %1214, %1212
  store i64 %1215, ptr %1213, align 8
  %1216 = load volatile ptr, ptr %126, align 4
  %1217 = icmp eq ptr %1216, null
  br i1 %1217, label %1231, label %1218, !prof !9

1218:                                             ; preds = %1210
  %1219 = getelementptr i8, ptr %1216, i32 16636
  %1220 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1219) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1221 = icmp eq i32 %1220, -1
  br i1 %1221, label %1222, label %1231

1222:                                             ; preds = %1218
  %1223 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1216) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1224 = icmp eq i32 %1223, -1
  br i1 %1224, label %1225, label %1231

1225:                                             ; preds = %1222
  %1226 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1227 = load ptr, ptr %1226, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1227, ptr noundef nonnull @.str) #22
  %1228 = load ptr, ptr %7, align 4
  %1229 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1228) #23
  br i1 %1229, label %1230, label %1231, !prof !9

1230:                                             ; preds = %1225
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16636) #23
  br label %1231

1231:                                             ; preds = %1230, %1225, %1222, %1218, %1210
  %1232 = phi i32 [ -1, %1210 ], [ -1, %1225 ], [ -1, %1230 ], [ -1, %1222 ], [ %1220, %1218 ]
  %1233 = zext i32 %1232 to i64
  %1234 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 53
  %1235 = load i64, ptr %1234, align 8
  %1236 = add i64 %1235, %1233
  store i64 %1236, ptr %1234, align 8
  %1237 = load volatile ptr, ptr %126, align 4
  %1238 = icmp eq ptr %1237, null
  br i1 %1238, label %1252, label %1239, !prof !9

1239:                                             ; preds = %1231
  %1240 = getelementptr i8, ptr %1237, i32 16640
  %1241 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1240) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1242 = icmp eq i32 %1241, -1
  br i1 %1242, label %1243, label %1252

1243:                                             ; preds = %1239
  %1244 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1237) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1245 = icmp eq i32 %1244, -1
  br i1 %1245, label %1246, label %1252

1246:                                             ; preds = %1243
  %1247 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1248 = load ptr, ptr %1247, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1248, ptr noundef nonnull @.str) #22
  %1249 = load ptr, ptr %7, align 4
  %1250 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1249) #23
  br i1 %1250, label %1251, label %1252, !prof !9

1251:                                             ; preds = %1246
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16640) #23
  br label %1252

1252:                                             ; preds = %1251, %1246, %1243, %1239, %1231
  %1253 = phi i32 [ -1, %1231 ], [ -1, %1246 ], [ -1, %1251 ], [ -1, %1243 ], [ %1241, %1239 ]
  %1254 = zext i32 %1253 to i64
  %1255 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 54
  %1256 = load i64, ptr %1255, align 8
  %1257 = add i64 %1256, %1254
  store i64 %1257, ptr %1255, align 8
  %1258 = load volatile ptr, ptr %126, align 4
  %1259 = icmp eq ptr %1258, null
  br i1 %1259, label %1273, label %1260, !prof !9

1260:                                             ; preds = %1252
  %1261 = getelementptr i8, ptr %1258, i32 16676
  %1262 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1261) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1263 = icmp eq i32 %1262, -1
  br i1 %1263, label %1264, label %1273

1264:                                             ; preds = %1260
  %1265 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1258) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1266 = icmp eq i32 %1265, -1
  br i1 %1266, label %1267, label %1273

1267:                                             ; preds = %1264
  %1268 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1269 = load ptr, ptr %1268, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1269, ptr noundef nonnull @.str) #22
  %1270 = load ptr, ptr %7, align 4
  %1271 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1270) #23
  br i1 %1271, label %1272, label %1273, !prof !9

1272:                                             ; preds = %1267
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16676) #23
  br label %1273

1273:                                             ; preds = %1272, %1267, %1264, %1260, %1252
  %1274 = phi i32 [ -1, %1252 ], [ -1, %1267 ], [ -1, %1272 ], [ -1, %1264 ], [ %1262, %1260 ]
  %1275 = zext i32 %1274 to i64
  %1276 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 62
  %1277 = load i64, ptr %1276, align 8
  %1278 = add i64 %1277, %1275
  store i64 %1278, ptr %1276, align 8
  %1279 = load volatile ptr, ptr %126, align 4
  %1280 = icmp eq ptr %1279, null
  br i1 %1280, label %1294, label %1281, !prof !9

1281:                                             ; preds = %1273
  %1282 = getelementptr i8, ptr %1279, i32 16644
  %1283 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1282) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1284 = icmp eq i32 %1283, -1
  br i1 %1284, label %1285, label %1294

1285:                                             ; preds = %1281
  %1286 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1279) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1287 = icmp eq i32 %1286, -1
  br i1 %1287, label %1288, label %1294

1288:                                             ; preds = %1285
  %1289 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1290 = load ptr, ptr %1289, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1290, ptr noundef nonnull @.str) #22
  %1291 = load ptr, ptr %7, align 4
  %1292 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1291) #23
  br i1 %1292, label %1293, label %1294, !prof !9

1293:                                             ; preds = %1288
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16644) #23
  br label %1294

1294:                                             ; preds = %1293, %1288, %1285, %1281, %1273
  %1295 = phi i32 [ -1, %1273 ], [ -1, %1288 ], [ -1, %1293 ], [ -1, %1285 ], [ %1283, %1281 ]
  %1296 = zext i32 %1295 to i64
  %1297 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 55
  %1298 = load i64, ptr %1297, align 8
  %1299 = add i64 %1298, %1296
  store i64 %1299, ptr %1297, align 8
  %1300 = load volatile ptr, ptr %126, align 4
  %1301 = icmp eq ptr %1300, null
  br i1 %1301, label %1315, label %1302, !prof !9

1302:                                             ; preds = %1294
  %1303 = getelementptr i8, ptr %1300, i32 16648
  %1304 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1303) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1305 = icmp eq i32 %1304, -1
  br i1 %1305, label %1306, label %1315

1306:                                             ; preds = %1302
  %1307 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1300) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1308 = icmp eq i32 %1307, -1
  br i1 %1308, label %1309, label %1315

1309:                                             ; preds = %1306
  %1310 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1311 = load ptr, ptr %1310, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1311, ptr noundef nonnull @.str) #22
  %1312 = load ptr, ptr %7, align 4
  %1313 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1312) #23
  br i1 %1313, label %1314, label %1315, !prof !9

1314:                                             ; preds = %1309
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16648) #23
  br label %1315

1315:                                             ; preds = %1314, %1309, %1306, %1302, %1294
  %1316 = phi i32 [ -1, %1294 ], [ -1, %1309 ], [ -1, %1314 ], [ -1, %1306 ], [ %1304, %1302 ]
  %1317 = zext i32 %1316 to i64
  %1318 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 56
  %1319 = load i64, ptr %1318, align 8
  %1320 = add i64 %1319, %1317
  store i64 %1320, ptr %1318, align 8
  %1321 = load volatile ptr, ptr %126, align 4
  %1322 = icmp eq ptr %1321, null
  br i1 %1322, label %1336, label %1323, !prof !9

1323:                                             ; preds = %1315
  %1324 = getelementptr i8, ptr %1321, i32 16652
  %1325 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1324) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1326 = icmp eq i32 %1325, -1
  br i1 %1326, label %1327, label %1336

1327:                                             ; preds = %1323
  %1328 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1321) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1329 = icmp eq i32 %1328, -1
  br i1 %1329, label %1330, label %1336

1330:                                             ; preds = %1327
  %1331 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1332 = load ptr, ptr %1331, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1332, ptr noundef nonnull @.str) #22
  %1333 = load ptr, ptr %7, align 4
  %1334 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1333) #23
  br i1 %1334, label %1335, label %1336, !prof !9

1335:                                             ; preds = %1330
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16652) #23
  br label %1336

1336:                                             ; preds = %1335, %1330, %1327, %1323, %1315
  %1337 = phi i32 [ -1, %1315 ], [ -1, %1330 ], [ -1, %1335 ], [ -1, %1327 ], [ %1325, %1323 ]
  %1338 = zext i32 %1337 to i64
  %1339 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 57
  %1340 = load i64, ptr %1339, align 8
  %1341 = add i64 %1340, %1338
  store i64 %1341, ptr %1339, align 8
  %1342 = load volatile ptr, ptr %126, align 4
  %1343 = icmp eq ptr %1342, null
  br i1 %1343, label %1357, label %1344, !prof !9

1344:                                             ; preds = %1336
  %1345 = getelementptr i8, ptr %1342, i32 16656
  %1346 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1345) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1347 = icmp eq i32 %1346, -1
  br i1 %1347, label %1348, label %1357

1348:                                             ; preds = %1344
  %1349 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1342) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1350 = icmp eq i32 %1349, -1
  br i1 %1350, label %1351, label %1357

1351:                                             ; preds = %1348
  %1352 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1353 = load ptr, ptr %1352, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1353, ptr noundef nonnull @.str) #22
  %1354 = load ptr, ptr %7, align 4
  %1355 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1354) #23
  br i1 %1355, label %1356, label %1357, !prof !9

1356:                                             ; preds = %1351
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16656) #23
  br label %1357

1357:                                             ; preds = %1356, %1351, %1348, %1344, %1336
  %1358 = phi i32 [ -1, %1336 ], [ -1, %1351 ], [ -1, %1356 ], [ -1, %1348 ], [ %1346, %1344 ]
  %1359 = zext i32 %1358 to i64
  %1360 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 58
  %1361 = load i64, ptr %1360, align 8
  %1362 = add i64 %1361, %1359
  store i64 %1362, ptr %1360, align 8
  %1363 = load volatile ptr, ptr %126, align 4
  %1364 = icmp eq ptr %1363, null
  br i1 %1364, label %1378, label %1365, !prof !9

1365:                                             ; preds = %1357
  %1366 = getelementptr i8, ptr %1363, i32 16664
  %1367 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1366) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1368 = icmp eq i32 %1367, -1
  br i1 %1368, label %1369, label %1378

1369:                                             ; preds = %1365
  %1370 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1363) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1371 = icmp eq i32 %1370, -1
  br i1 %1371, label %1372, label %1378

1372:                                             ; preds = %1369
  %1373 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1374 = load ptr, ptr %1373, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1374, ptr noundef nonnull @.str) #22
  %1375 = load ptr, ptr %7, align 4
  %1376 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1375) #23
  br i1 %1376, label %1377, label %1378, !prof !9

1377:                                             ; preds = %1372
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16664) #23
  br label %1378

1378:                                             ; preds = %1377, %1372, %1369, %1365, %1357
  %1379 = phi i32 [ -1, %1357 ], [ -1, %1372 ], [ -1, %1377 ], [ -1, %1369 ], [ %1367, %1365 ]
  %1380 = zext i32 %1379 to i64
  %1381 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 59
  %1382 = load i64, ptr %1381, align 8
  %1383 = add i64 %1382, %1380
  store i64 %1383, ptr %1381, align 8
  %1384 = load volatile ptr, ptr %126, align 4
  %1385 = icmp eq ptr %1384, null
  br i1 %1385, label %1399, label %1386, !prof !9

1386:                                             ; preds = %1378
  %1387 = getelementptr i8, ptr %1384, i32 16668
  %1388 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1387) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1389 = icmp eq i32 %1388, -1
  br i1 %1389, label %1390, label %1399

1390:                                             ; preds = %1386
  %1391 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1384) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1392 = icmp eq i32 %1391, -1
  br i1 %1392, label %1393, label %1399

1393:                                             ; preds = %1390
  %1394 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1395 = load ptr, ptr %1394, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1395, ptr noundef nonnull @.str) #22
  %1396 = load ptr, ptr %7, align 4
  %1397 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1396) #23
  br i1 %1397, label %1398, label %1399, !prof !9

1398:                                             ; preds = %1393
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16668) #23
  br label %1399

1399:                                             ; preds = %1398, %1393, %1390, %1386, %1378
  %1400 = phi i32 [ -1, %1378 ], [ -1, %1393 ], [ -1, %1398 ], [ -1, %1390 ], [ %1388, %1386 ]
  %1401 = zext i32 %1400 to i64
  %1402 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 60
  %1403 = load i64, ptr %1402, align 8
  %1404 = add i64 %1403, %1401
  store i64 %1404, ptr %1402, align 8
  %1405 = load volatile ptr, ptr %126, align 4
  %1406 = icmp eq ptr %1405, null
  br i1 %1406, label %1420, label %1407, !prof !9

1407:                                             ; preds = %1399
  %1408 = getelementptr i8, ptr %1405, i32 16672
  %1409 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1408) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1410 = icmp eq i32 %1409, -1
  br i1 %1410, label %1411, label %1420

1411:                                             ; preds = %1407
  %1412 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1405) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1413 = icmp eq i32 %1412, -1
  br i1 %1413, label %1414, label %1420

1414:                                             ; preds = %1411
  %1415 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1416 = load ptr, ptr %1415, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1416, ptr noundef nonnull @.str) #22
  %1417 = load ptr, ptr %7, align 4
  %1418 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1417) #23
  br i1 %1418, label %1419, label %1420, !prof !9

1419:                                             ; preds = %1414
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16672) #23
  br label %1420

1420:                                             ; preds = %1419, %1414, %1411, %1407, %1399
  %1421 = phi i32 [ -1, %1399 ], [ -1, %1414 ], [ -1, %1419 ], [ -1, %1411 ], [ %1409, %1407 ]
  %1422 = zext i32 %1421 to i64
  %1423 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 61
  %1424 = load i64, ptr %1423, align 8
  %1425 = add i64 %1424, %1422
  store i64 %1425, ptr %1423, align 8
  %1426 = load i64, ptr %245, align 8
  %1427 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 8
  store i64 %1426, ptr %1427, align 8
  %1428 = load i64, ptr %1104, align 8
  %1429 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 9
  store i64 %1428, ptr %1429, align 8
  %1430 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 3
  %1431 = load i64, ptr %1430, align 8
  %1432 = load i64, ptr %145, align 8
  %1433 = load i64, ptr %1125, align 8
  %1434 = load i64, ptr %789, align 8
  %1435 = load i64, ptr %266, align 8
  %1436 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 13
  %1437 = load i64, ptr %1436, align 8
  %1438 = add i64 %1435, %1434
  %1439 = add i64 %1438, %1431
  %1440 = add i64 %1439, %1432
  %1441 = add i64 %1440, %1433
  %1442 = add i64 %1441, %1437
  %1443 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 4
  store i64 %1442, ptr %1443, align 8
  %1444 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 10
  store i64 %1438, ptr %1444, align 8
  %1445 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 12
  store i64 %1432, ptr %1445, align 8
  %1446 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 13
  store i64 %1433, ptr %1446, align 8
  %1447 = load i64, ptr %455, align 8
  %1448 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 15
  store i64 %1447, ptr %1448, align 8
  %1449 = load i64, ptr %500, align 8
  %1450 = load i64, ptr %542, align 8
  %1451 = add i64 %1450, %1449
  %1452 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 5
  store i64 %1451, ptr %1452, align 8
  %1453 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 16
  store i64 %1449, ptr %1453, align 8
  %1454 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 20
  store i64 %1450, ptr %1454, align 8
  %1455 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 11
  %1456 = load i64, ptr %1455, align 8
  %1457 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 36, i32 17
  store i64 %1456, ptr %1457, align 8
  %1458 = load volatile ptr, ptr %126, align 4
  %1459 = icmp eq ptr %1458, null
  br i1 %1459, label %1473, label %1460, !prof !9

1460:                                             ; preds = %1420
  %1461 = getelementptr i8, ptr %1458, i32 16572
  %1462 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1461) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1463 = icmp eq i32 %1462, -1
  br i1 %1463, label %1464, label %1473

1464:                                             ; preds = %1460
  %1465 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1458) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1466 = icmp eq i32 %1465, -1
  br i1 %1466, label %1467, label %1473

1467:                                             ; preds = %1464
  %1468 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1469 = load ptr, ptr %1468, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1469, ptr noundef nonnull @.str) #22
  %1470 = load ptr, ptr %7, align 4
  %1471 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1470) #23
  br i1 %1471, label %1472, label %1473, !prof !9

1472:                                             ; preds = %1467
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16572) #23
  br label %1473

1473:                                             ; preds = %1472, %1467, %1464, %1460, %1420
  %1474 = phi i32 [ -1, %1420 ], [ -1, %1467 ], [ -1, %1472 ], [ -1, %1464 ], [ %1462, %1460 ]
  %1475 = zext i32 %1474 to i64
  %1476 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 39
  %1477 = load i64, ptr %1476, align 8
  %1478 = add i64 %1477, %1475
  store i64 %1478, ptr %1476, align 8
  %1479 = load volatile ptr, ptr %126, align 4
  %1480 = icmp eq ptr %1479, null
  br i1 %1480, label %1494, label %1481, !prof !9

1481:                                             ; preds = %1473
  %1482 = getelementptr i8, ptr %1479, i32 16564
  %1483 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1482) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1484 = icmp eq i32 %1483, -1
  br i1 %1484, label %1485, label %1494

1485:                                             ; preds = %1481
  %1486 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1479) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1487 = icmp eq i32 %1486, -1
  br i1 %1487, label %1488, label %1494

1488:                                             ; preds = %1485
  %1489 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1490 = load ptr, ptr %1489, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1490, ptr noundef nonnull @.str) #22
  %1491 = load ptr, ptr %7, align 4
  %1492 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1491) #23
  br i1 %1492, label %1493, label %1494, !prof !9

1493:                                             ; preds = %1488
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16564) #23
  br label %1494

1494:                                             ; preds = %1493, %1488, %1485, %1481, %1473
  %1495 = phi i32 [ -1, %1473 ], [ -1, %1488 ], [ -1, %1493 ], [ -1, %1485 ], [ %1483, %1481 ]
  %1496 = zext i32 %1495 to i64
  %1497 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 37
  %1498 = load i64, ptr %1497, align 8
  %1499 = add i64 %1498, %1496
  store i64 %1499, ptr %1497, align 8
  %1500 = load volatile ptr, ptr %126, align 4
  %1501 = icmp eq ptr %1500, null
  br i1 %1501, label %1515, label %1502, !prof !9

1502:                                             ; preds = %1494
  %1503 = getelementptr i8, ptr %1500, i32 16568
  %1504 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1503) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1505 = icmp eq i32 %1504, -1
  br i1 %1505, label %1506, label %1515

1506:                                             ; preds = %1502
  %1507 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1500) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1508 = icmp eq i32 %1507, -1
  br i1 %1508, label %1509, label %1515

1509:                                             ; preds = %1506
  %1510 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1511 = load ptr, ptr %1510, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1511, ptr noundef nonnull @.str) #22
  %1512 = load ptr, ptr %7, align 4
  %1513 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1512) #23
  br i1 %1513, label %1514, label %1515, !prof !9

1514:                                             ; preds = %1509
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16568) #23
  br label %1515

1515:                                             ; preds = %1514, %1509, %1506, %1502, %1494
  %1516 = phi i32 [ -1, %1494 ], [ -1, %1509 ], [ -1, %1514 ], [ -1, %1506 ], [ %1504, %1502 ]
  %1517 = zext i32 %1516 to i64
  %1518 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 38
  %1519 = load i64, ptr %1518, align 8
  %1520 = add i64 %1519, %1517
  store i64 %1520, ptr %1518, align 8
  %1521 = load volatile ptr, ptr %126, align 4
  %1522 = icmp eq ptr %1521, null
  br i1 %1522, label %1539, label %1523, !prof !9

1523:                                             ; preds = %1515
  %1524 = getelementptr i8, ptr %1521, i32 22560
  %1525 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1524) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1526 = icmp eq i32 %1525, -1
  br i1 %1526, label %1527, label %1536

1527:                                             ; preds = %1523
  %1528 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1521) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1529 = icmp eq i32 %1528, -1
  br i1 %1529, label %1530, label %1539

1530:                                             ; preds = %1527
  %1531 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1532 = load ptr, ptr %1531, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1532, ptr noundef nonnull @.str) #22
  %1533 = load ptr, ptr %7, align 4
  %1534 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1533) #23
  br i1 %1534, label %1535, label %1539, !prof !9

1535:                                             ; preds = %1530
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 22560) #23
  br label %1539

1536:                                             ; preds = %1523
  %1537 = and i32 %1525, 268435456
  %1538 = icmp eq i32 %1537, 0
  br i1 %1538, label %1624, label %1539

1539:                                             ; preds = %1536, %1535, %1530, %1527, %1515
  %1540 = load volatile ptr, ptr %126, align 4
  %1541 = icmp eq ptr %1540, null
  br i1 %1541, label %1555, label %1542, !prof !9

1542:                                             ; preds = %1539
  %1543 = getelementptr i8, ptr %1540, i32 36836
  %1544 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1543) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1545 = icmp eq i32 %1544, -1
  br i1 %1545, label %1546, label %1555

1546:                                             ; preds = %1542
  %1547 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1540) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1548 = icmp eq i32 %1547, -1
  br i1 %1548, label %1549, label %1555

1549:                                             ; preds = %1546
  %1550 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1551 = load ptr, ptr %1550, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1551, ptr noundef nonnull @.str) #22
  %1552 = load ptr, ptr %7, align 4
  %1553 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1552) #23
  br i1 %1553, label %1554, label %1555, !prof !9

1554:                                             ; preds = %1549
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 36836) #23
  br label %1555

1555:                                             ; preds = %1554, %1549, %1546, %1542, %1539
  %1556 = phi i32 [ -1, %1539 ], [ -1, %1549 ], [ -1, %1554 ], [ -1, %1546 ], [ %1544, %1542 ]
  %1557 = zext i32 %1556 to i64
  %1558 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 76
  %1559 = load i64, ptr %1558, align 8
  %1560 = add i64 %1559, %1557
  store i64 %1560, ptr %1558, align 8
  %1561 = load volatile ptr, ptr %126, align 4
  %1562 = icmp eq ptr %1561, null
  br i1 %1562, label %1576, label %1563, !prof !9

1563:                                             ; preds = %1555
  %1564 = getelementptr i8, ptr %1561, i32 16732
  %1565 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1564) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1566 = icmp eq i32 %1565, -1
  br i1 %1566, label %1567, label %1576

1567:                                             ; preds = %1563
  %1568 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1561) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1569 = icmp eq i32 %1568, -1
  br i1 %1569, label %1570, label %1576

1570:                                             ; preds = %1567
  %1571 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1572 = load ptr, ptr %1571, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1572, ptr noundef nonnull @.str) #22
  %1573 = load ptr, ptr %7, align 4
  %1574 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1573) #23
  br i1 %1574, label %1575, label %1576, !prof !9

1575:                                             ; preds = %1570
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16732) #23
  br label %1576

1576:                                             ; preds = %1575, %1570, %1567, %1563, %1555
  %1577 = phi i32 [ -1, %1555 ], [ -1, %1570 ], [ -1, %1575 ], [ -1, %1567 ], [ %1565, %1563 ]
  %1578 = zext i32 %1577 to i64
  %1579 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 77
  %1580 = load i64, ptr %1579, align 8
  %1581 = add i64 %1580, %1578
  store i64 %1581, ptr %1579, align 8
  %1582 = load volatile ptr, ptr %126, align 4
  %1583 = icmp eq ptr %1582, null
  br i1 %1583, label %1597, label %1584, !prof !9

1584:                                             ; preds = %1576
  %1585 = getelementptr i8, ptr %1582, i32 36832
  %1586 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1585) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1587 = icmp eq i32 %1586, -1
  br i1 %1587, label %1588, label %1597

1588:                                             ; preds = %1584
  %1589 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1582) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1590 = icmp eq i32 %1589, -1
  br i1 %1590, label %1591, label %1597

1591:                                             ; preds = %1588
  %1592 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1593 = load ptr, ptr %1592, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1593, ptr noundef nonnull @.str) #22
  %1594 = load ptr, ptr %7, align 4
  %1595 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1594) #23
  br i1 %1595, label %1596, label %1597, !prof !9

1596:                                             ; preds = %1591
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 36832) #23
  br label %1597

1597:                                             ; preds = %1596, %1591, %1588, %1584, %1576
  %1598 = phi i32 [ -1, %1576 ], [ -1, %1591 ], [ -1, %1596 ], [ -1, %1588 ], [ %1586, %1584 ]
  %1599 = zext i32 %1598 to i64
  %1600 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 78
  %1601 = load i64, ptr %1600, align 8
  %1602 = add i64 %1601, %1599
  store i64 %1602, ptr %1600, align 8
  %1603 = load volatile ptr, ptr %126, align 4
  %1604 = icmp eq ptr %1603, null
  br i1 %1604, label %1618, label %1605, !prof !9

1605:                                             ; preds = %1597
  %1606 = getelementptr i8, ptr %1603, i32 16728
  %1607 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1606) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %1608 = icmp eq i32 %1607, -1
  br i1 %1608, label %1609, label %1618

1609:                                             ; preds = %1605
  %1610 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %1603) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %1611 = icmp eq i32 %1610, -1
  br i1 %1611, label %1612, label %1618

1612:                                             ; preds = %1609
  %1613 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %1614 = load ptr, ptr %1613, align 64
  store ptr null, ptr %126, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %1614, ptr noundef nonnull @.str) #22
  %1615 = load ptr, ptr %7, align 4
  %1616 = tail call zeroext i1 @pci_device_is_present(ptr noundef %1615) #23
  br i1 %1616, label %1617, label %1618, !prof !9

1617:                                             ; preds = %1612
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 16728) #23
  br label %1618

1618:                                             ; preds = %1617, %1612, %1609, %1605, %1597
  %1619 = phi i32 [ -1, %1597 ], [ -1, %1612 ], [ -1, %1617 ], [ -1, %1609 ], [ %1607, %1605 ]
  %1620 = zext i32 %1619 to i64
  %1621 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 38, i32 79
  %1622 = load i64, ptr %1621, align 8
  %1623 = add i64 %1622, %1620
  store i64 %1623, ptr %1621, align 8
  br label %1624

1624:                                             ; preds = %1618, %1536, %6, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_reset(ptr noundef %0) local_unnamed_addr #4 {
  %2 = alloca i32, align 4
  %3 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5
  %7 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %8 = load i32, ptr %7, align 4
  switch i32 %8, label %53 [
    i32 4, label %9
    i32 5, label %9
    i32 3, label %9
    i32 2, label %30
  ]

9:                                                ; preds = %1, %1, %1
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %11 = load volatile ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %26, label %13, !prof !9

13:                                               ; preds = %9
  %14 = getelementptr i8, ptr %11, i32 9220
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %14) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %11) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 64
  store ptr null, ptr %10, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %22, ptr noundef nonnull @.str) #22
  %23 = load ptr, ptr %3, align 4
  %24 = tail call zeroext i1 @pci_device_is_present(ptr noundef %23) #23
  br i1 %24, label %25, label %26, !prof !9

25:                                               ; preds = %20
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 9220) #23
  br label %26

26:                                               ; preds = %25, %20, %17, %13, %9
  %27 = phi i32 [ -1, %9 ], [ -1, %20 ], [ -1, %25 ], [ -1, %17 ], [ %15, %13 ]
  %28 = tail call zeroext i16 @igb_rxpbs_adjust_82580(i32 noundef %27) #23
  %29 = zext i16 %28 to i32
  br label %50

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %32 = load volatile ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %47, label %34, !prof !9

34:                                               ; preds = %30
  %35 = getelementptr i8, ptr %32, i32 9220
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %35) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %47

38:                                               ; preds = %34
  %39 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %32) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %43 = load ptr, ptr %42, align 64
  store ptr null, ptr %31, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %43, ptr noundef nonnull @.str) #22
  %44 = load ptr, ptr %3, align 4
  %45 = tail call zeroext i1 @pci_device_is_present(ptr noundef %44) #23
  br i1 %45, label %46, label %47, !prof !9

46:                                               ; preds = %41
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 9220) #23
  br label %47

47:                                               ; preds = %46, %41, %38, %34, %30
  %48 = phi i32 [ -1, %30 ], [ -1, %41 ], [ -1, %46 ], [ -1, %38 ], [ %36, %34 ]
  %49 = and i32 %48, 127
  br label %50

50:                                               ; preds = %47, %26
  %51 = phi i32 [ %29, %26 ], [ %49, %47 ]
  %52 = load i32, ptr %7, align 4
  br label %53

53:                                               ; preds = %50, %1
  %54 = phi i32 [ %52, %50 ], [ %8, %1 ]
  %55 = phi i32 [ %51, %50 ], [ 34, %1 ]
  %56 = icmp eq i32 %54, 1
  br i1 %56, label %57, label %95

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %59 = load volatile ptr, ptr %58, align 4
  %60 = icmp eq ptr %59, null
  br i1 %60, label %63, label %61, !prof !9

61:                                               ; preds = %57
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !63
  tail call void @arm_heavy_mb() #23
  %62 = getelementptr i8, ptr %59, i32 4096
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %62, i32 %55) #23, !srcloc !14
  br label %63

63:                                               ; preds = %61, %57
  %64 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 17
  %65 = load i32, ptr %64, align 64
  %66 = add i32 %65, 523
  %67 = lshr i32 %66, 9
  %68 = load volatile ptr, ptr %58, align 4
  %69 = icmp eq ptr %68, null
  br i1 %69, label %83, label %70, !prof !9

70:                                               ; preds = %63
  %71 = getelementptr i8, ptr %68, i32 4096
  %72 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %71) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %74, label %83

74:                                               ; preds = %70
  %75 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %68) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %83

77:                                               ; preds = %74
  %78 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %79 = load ptr, ptr %78, align 64
  store ptr null, ptr %58, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %79, ptr noundef nonnull @.str) #22
  %80 = load ptr, ptr %3, align 4
  %81 = tail call zeroext i1 @pci_device_is_present(ptr noundef %80) #23
  br i1 %81, label %82, label %83, !prof !9

82:                                               ; preds = %77
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 4096) #23
  br label %83

83:                                               ; preds = %82, %77, %74, %70, %63
  %84 = phi i32 [ -1, %63 ], [ -1, %77 ], [ -1, %82 ], [ -1, %74 ], [ %72, %70 ]
  %85 = lshr i32 %84, 16
  %86 = sub nsw i32 %67, %85
  %87 = icmp ugt i32 %55, %86
  %88 = sub nsw i32 %55, %86
  %89 = tail call i32 @llvm.umax.i32(i32 %88, i32 10)
  %90 = select i1 %87, i32 %89, i32 %55
  %91 = load volatile ptr, ptr %58, align 4
  %92 = icmp eq ptr %91, null
  br i1 %92, label %95, label %93, !prof !9

93:                                               ; preds = %83
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !64
  tail call void @arm_heavy_mb() #23
  %94 = getelementptr i8, ptr %91, i32 4096
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %94, i32 %90) #23, !srcloc !14
  br label %95

95:                                               ; preds = %93, %83, %53
  %96 = phi i32 [ %55, %53 ], [ %90, %93 ], [ %90, %83 ]
  %97 = shl i32 %96, 10
  %98 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 17
  %99 = load i32, ptr %98, align 64
  %100 = sub i32 -9728, %99
  %101 = add i32 %100, %97
  %102 = and i32 %101, -16
  store i32 %102, ptr %6, align 4
  %103 = add i32 %102, -16
  %104 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5, i32 1
  store i32 %103, ptr %104, align 4
  %105 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5, i32 2
  store i16 -1, ptr %105, align 4
  %106 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5, i32 3
  store i8 1, ptr %106, align 2
  %107 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5, i32 6
  %108 = load i32, ptr %107, align 4
  %109 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5, i32 5
  store i32 %108, ptr %109, align 4
  %110 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %111 = load i32, ptr %110, align 16
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %152, label %113

113:                                              ; preds = %95
  %114 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 51
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i32 [ 0, %113 ], [ %121, %115 ]
  %117 = load ptr, ptr %114, align 4
  %118 = getelementptr %struct.vf_data_storage, ptr %117, i32 %116, i32 3
  %119 = load i32, ptr %118, align 4
  %120 = and i32 %119, 8
  store i32 %120, ptr %118, align 4
  %121 = add nuw i32 %116, 1
  %122 = load i32, ptr %110, align 16
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %115, label %124

124:                                              ; preds = %115
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #23
  %125 = icmp eq i32 %122, 0
  br i1 %125, label %141, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 51
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i32 [ 0, %126 ], [ %138, %128 ]
  store i32 256, ptr %2, align 4
  %130 = load ptr, ptr %127, align 4
  %131 = getelementptr %struct.vf_data_storage, ptr %130, i32 %129, i32 3
  %132 = load i32, ptr %131, align 4
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = select i1 %134, i32 256, i32 536871168
  store i32 %135, ptr %2, align 4
  %136 = trunc i32 %129 to i16
  %137 = call i32 @igb_write_mbx(ptr noundef %5, ptr noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext %136) #23
  %138 = add nuw i32 %129, 1
  %139 = load i32, ptr %110, align 16
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %128, label %141

141:                                              ; preds = %128, %124
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #23
  %142 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %143 = load volatile ptr, ptr %142, align 4
  %144 = icmp eq ptr %143, null
  br i1 %144, label %147, label %145, !prof !9

145:                                              ; preds = %141
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !65
  call void @arm_heavy_mb() #23
  %146 = getelementptr i8, ptr %143, i32 3212
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %146, i32 0) #23, !srcloc !14
  br label %147

147:                                              ; preds = %145, %141
  %148 = load volatile ptr, ptr %142, align 4
  %149 = icmp eq ptr %148, null
  br i1 %149, label %152, label %150, !prof !9

150:                                              ; preds = %147
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !66
  call void @arm_heavy_mb() #23
  %151 = getelementptr i8, ptr %148, i32 3216
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %151, i32 0) #23, !srcloc !14
  br label %152

152:                                              ; preds = %150, %147, %95
  %153 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 0, i32 1
  %154 = load ptr, ptr %153, align 4
  %155 = call i32 %154(ptr noundef %5) #23
  %156 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %157 = load volatile ptr, ptr %156, align 4
  %158 = icmp eq ptr %157, null
  br i1 %158, label %161, label %159, !prof !9

159:                                              ; preds = %152
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !67
  call void @arm_heavy_mb() #23
  %160 = getelementptr i8, ptr %157, i32 22528
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %160, i32 0) #23, !srcloc !14
  br label %161

161:                                              ; preds = %159, %152
  %162 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %163 = load i32, ptr %162, align 4
  %164 = and i32 %163, 1024
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 85
  %168 = load ptr, ptr %167, align 8
  %169 = call i32 %168(ptr noundef %5) #23
  %170 = load i32, ptr %162, align 4
  %171 = and i32 %170, -1025
  store i32 %171, ptr %162, align 4
  br label %172

172:                                              ; preds = %166, %161
  %173 = phi i32 [ %171, %166 ], [ %163, %161 ]
  %174 = load i32, ptr %7, align 4
  switch i32 %174, label %223 [
    i32 1, label %175
    i32 4, label %175
  ]

175:                                              ; preds = %172, %172
  %176 = and i32 %173, 4096
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %223, label %178

178:                                              ; preds = %175
  %179 = load volatile ptr, ptr %156, align 4
  %180 = icmp eq ptr %179, null
  br i1 %180, label %223, label %181, !prof !9

181:                                              ; preds = %178
  %182 = getelementptr i8, ptr %179, i32 52
  %183 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %182) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %184 = icmp eq i32 %183, -1
  br i1 %184, label %185, label %193

185:                                              ; preds = %181
  %186 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %179) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %187 = icmp eq i32 %186, -1
  br i1 %187, label %188, label %223

188:                                              ; preds = %185
  %189 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %190 = load ptr, ptr %189, align 64
  store ptr null, ptr %156, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %190, ptr noundef nonnull @.str) #22
  %191 = load ptr, ptr %3, align 4
  %192 = call zeroext i1 @pci_device_is_present(ptr noundef %191) #23
  br i1 %192, label %221, label %223, !prof !9

193:                                              ; preds = %181
  %194 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 12
  %195 = load i32, ptr %194, align 4
  %196 = icmp eq i32 %195, 1
  %197 = and i32 %183, 512
  %198 = icmp eq i32 %197, 0
  %199 = select i1 %196, i1 %198, i1 false
  br i1 %199, label %200, label %223

200:                                              ; preds = %193
  %201 = load volatile ptr, ptr %156, align 4
  %202 = icmp eq ptr %201, null
  br i1 %202, label %206, label %203, !prof !9

203:                                              ; preds = %200
  %204 = or i32 %183, 5
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !68
  call void @arm_heavy_mb() #23
  %205 = getelementptr i8, ptr %201, i32 52
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %205, i32 %204) #23, !srcloc !14
  br label %206

206:                                              ; preds = %203, %200
  %207 = load volatile ptr, ptr %156, align 4
  %208 = icmp eq ptr %207, null
  br i1 %208, label %223, label %209, !prof !9

209:                                              ; preds = %206
  %210 = getelementptr i8, ptr %207, i32 8
  %211 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %210) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %212 = icmp eq i32 %211, -1
  br i1 %212, label %213, label %223

213:                                              ; preds = %209
  %214 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %207) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %215 = icmp eq i32 %214, -1
  br i1 %215, label %216, label %223

216:                                              ; preds = %213
  %217 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %218 = load ptr, ptr %217, align 64
  store ptr null, ptr %156, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %218, ptr noundef nonnull @.str) #22
  %219 = load ptr, ptr %3, align 4
  %220 = call zeroext i1 @pci_device_is_present(ptr noundef %219) #23
  br i1 %220, label %221, label %223, !prof !9

221:                                              ; preds = %216, %188
  %222 = phi i32 [ 52, %188 ], [ 8, %216 ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %222) #23
  br label %223

223:                                              ; preds = %221, %216, %213, %209, %206, %193, %188, %185, %178, %175, %172
  %224 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 0, i32 2
  %225 = load ptr, ptr %224, align 4
  %226 = call i32 %225(ptr noundef %5) #23
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %230, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %229, ptr noundef nonnull @.str.3) #22
  br label %230

230:                                              ; preds = %228, %223
  %231 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 12
  %232 = load i16, ptr %231, align 4
  %233 = icmp eq i16 %232, 0
  br i1 %233, label %250, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  br label %236

236:                                              ; preds = %236, %234
  %237 = phi i32 [ 0, %234 ], [ %246, %236 ]
  %238 = load ptr, ptr %235, align 64
  %239 = getelementptr %struct.igb_mac_addr, ptr %238, i32 %237, i32 2
  %240 = load i8, ptr %239, align 1
  %241 = and i8 %240, -3
  store i8 %241, ptr %239, align 1
  %242 = load ptr, ptr %235, align 64
  %243 = getelementptr %struct.igb_mac_addr, ptr %242, i32 %237
  call void @llvm.memset.p0.i32(ptr noundef align 1 dereferenceable(6) %243, i8 0, i32 6, i1 false) #23
  %244 = load ptr, ptr %235, align 64
  %245 = getelementptr %struct.igb_mac_addr, ptr %244, i32 %237, i32 1
  store i8 0, ptr %245, align 1
  call fastcc void @igb_rar_set_index(ptr noundef %0, i32 noundef %237) #23
  %246 = add nuw nsw i32 %237, 1
  %247 = load i16, ptr %231, align 4
  %248 = zext i16 %247 to i32
  %249 = icmp ult i32 %246, %248
  br i1 %249, label %236, label %250

250:                                              ; preds = %236, %230
  %251 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %252 = load ptr, ptr %251, align 64
  %253 = getelementptr inbounds %struct.net_device, ptr %252, i32 0, i32 60
  call void @__hw_addr_unsync_dev(ptr noundef %253, ptr noundef %252, ptr noundef null) #23
  %254 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  %255 = load ptr, ptr %254, align 64
  %256 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 1
  %257 = load i32, ptr %256, align 4
  store i32 %257, ptr %255, align 4
  %258 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 1, i32 4
  %259 = load i16, ptr %258, align 2
  %260 = getelementptr i8, ptr %255, i32 4
  store i16 %259, ptr %260, align 2
  %261 = load i32, ptr %110, align 16
  %262 = trunc i32 %261 to i8
  %263 = getelementptr inbounds %struct.igb_mac_addr, ptr %255, i32 0, i32 1
  store i8 %262, ptr %263, align 1
  %264 = getelementptr inbounds %struct.igb_mac_addr, ptr %255, i32 0, i32 2
  store i8 3, ptr %264, align 1
  call fastcc void @igb_rar_set_index(ptr noundef %0, i32 noundef 0) #23
  %265 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 17
  %266 = load i8, ptr %265, align 2, !range !15
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %250
  %269 = call i32 @igb_force_mac_fc(ptr noundef %5) #23
  br label %270

270:                                              ; preds = %268, %250
  %271 = load i32, ptr %7, align 4
  %272 = icmp ugt i32 %271, 3
  br i1 %272, label %273, label %378

273:                                              ; preds = %270
  %274 = load i32, ptr %162, align 4
  %275 = and i32 %274, 16
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %407, label %277

277:                                              ; preds = %273
  %278 = load volatile ptr, ptr %156, align 4
  %279 = icmp eq ptr %278, null
  br i1 %279, label %282, label %280, !prof !9

280:                                              ; preds = %277
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !69
  call void @arm_heavy_mb() #23
  %281 = getelementptr i8, ptr %278, i32 13648
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %281, i32 0) #23, !srcloc !14
  br label %282

282:                                              ; preds = %280, %277
  %283 = load volatile ptr, ptr %156, align 4
  %284 = icmp eq ptr %283, null
  br i1 %284, label %297, label %285, !prof !9

285:                                              ; preds = %282
  %286 = getelementptr i8, ptr %283, i32 8560
  %287 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %286) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %288 = icmp eq i32 %287, -1
  br i1 %288, label %289, label %297

289:                                              ; preds = %285
  %290 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %283) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %291 = icmp eq i32 %290, -1
  br i1 %291, label %292, label %297

292:                                              ; preds = %289
  %293 = load ptr, ptr %251, align 64
  store ptr null, ptr %156, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %293, ptr noundef nonnull @.str) #22
  %294 = load ptr, ptr %3, align 4
  %295 = call zeroext i1 @pci_device_is_present(ptr noundef %294) #23
  br i1 %295, label %296, label %297, !prof !9

296:                                              ; preds = %292
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8560) #23
  br label %297

297:                                              ; preds = %296, %292, %289, %285, %282
  %298 = phi i32 [ -1, %282 ], [ -1, %292 ], [ -1, %296 ], [ -1, %289 ], [ %287, %285 ]
  %299 = load volatile ptr, ptr %156, align 4
  %300 = icmp eq ptr %299, null
  br i1 %300, label %307, label %301, !prof !9

301:                                              ; preds = %297
  %302 = and i32 %298, -262129
  %303 = add i32 %97, 256000
  %304 = and i32 %303, 261120
  %305 = or i32 %302, %304
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !70
  call void @arm_heavy_mb() #23
  %306 = getelementptr i8, ptr %299, i32 8560
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %306, i32 %305) #23, !srcloc !14
  br label %307

307:                                              ; preds = %301, %297
  %308 = load volatile ptr, ptr %156, align 4
  %309 = icmp eq ptr %308, null
  br i1 %309, label %322, label %310, !prof !9

310:                                              ; preds = %307
  %311 = getelementptr i8, ptr %308, i32 9480
  %312 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %311) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %313 = icmp eq i32 %312, -1
  br i1 %313, label %314, label %322

314:                                              ; preds = %310
  %315 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %308) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %316 = icmp eq i32 %315, -1
  br i1 %316, label %317, label %322

317:                                              ; preds = %314
  %318 = load ptr, ptr %251, align 64
  store ptr null, ptr %156, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %318, ptr noundef nonnull @.str) #22
  %319 = load ptr, ptr %3, align 4
  %320 = call zeroext i1 @pci_device_is_present(ptr noundef %319) #23
  br i1 %320, label %321, label %322, !prof !9

321:                                              ; preds = %317
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 9480) #23
  br label %322

322:                                              ; preds = %321, %317, %314, %310, %307
  %323 = phi i32 [ -1, %307 ], [ -1, %317 ], [ -1, %321 ], [ -1, %314 ], [ %312, %310 ]
  %324 = load i32, ptr %7, align 4
  %325 = load volatile ptr, ptr %156, align 4
  %326 = icmp eq ptr %325, null
  br i1 %326, label %338, label %327, !prof !9

327:                                              ; preds = %322
  %328 = icmp eq i32 %324, 5
  %329 = and i32 %323, 1325465568
  %330 = shl i32 %96, 16
  %331 = add i32 %330, 16121856
  %332 = and i32 %331, 16711680
  %333 = or i32 %332, %329
  %334 = or i32 %333, -1342177249
  %335 = and i32 %334, -32769
  %336 = select i1 %328, i32 %334, i32 %335
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !71
  call void @arm_heavy_mb() #23
  %337 = getelementptr i8, ptr %325, i32 9480
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %337, i32 %336) #23, !srcloc !14
  br label %338

338:                                              ; preds = %327, %322
  %339 = load volatile ptr, ptr %156, align 4
  %340 = icmp eq ptr %339, null
  br i1 %340, label %343, label %341, !prof !9

341:                                              ; preds = %338
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !72
  call void @arm_heavy_mb() #23
  %342 = getelementptr i8, ptr %339, i32 24016
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %342, i32 0) #23, !srcloc !14
  br label %343

343:                                              ; preds = %341, %338
  %344 = load volatile ptr, ptr %156, align 4
  %345 = icmp eq ptr %344, null
  br i1 %345, label %348, label %346, !prof !9

346:                                              ; preds = %343
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !73
  call void @arm_heavy_mb() #23
  %347 = getelementptr i8, ptr %344, i32 9492
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %347, i32 -2147483644) #23, !srcloc !14
  br label %348

348:                                              ; preds = %346, %343
  %349 = load volatile ptr, ptr %156, align 4
  %350 = icmp eq ptr %349, null
  br i1 %350, label %356, label %351, !prof !9

351:                                              ; preds = %348
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !74
  call void @arm_heavy_mb() #23
  %352 = load i32, ptr %98, align 64
  %353 = sub i32 16312, %352
  %354 = lshr i32 %353, 6
  %355 = getelementptr i8, ptr %349, i32 13648
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %355, i32 %354) #23, !srcloc !14
  br label %356

356:                                              ; preds = %351, %348
  %357 = load volatile ptr, ptr %156, align 4
  %358 = icmp eq ptr %357, null
  br i1 %358, label %371, label %359, !prof !9

359:                                              ; preds = %356
  %360 = getelementptr i8, ptr %357, i32 23480
  %361 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %360) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %362 = icmp eq i32 %361, -1
  br i1 %362, label %363, label %371

363:                                              ; preds = %359
  %364 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %357) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %365 = icmp eq i32 %364, -1
  br i1 %365, label %366, label %371

366:                                              ; preds = %363
  %367 = load ptr, ptr %251, align 64
  store ptr null, ptr %156, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %367, ptr noundef nonnull @.str) #22
  %368 = load ptr, ptr %3, align 4
  %369 = call zeroext i1 @pci_device_is_present(ptr noundef %368) #23
  br i1 %369, label %370, label %371, !prof !9

370:                                              ; preds = %366
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 23480) #23
  br label %371

371:                                              ; preds = %370, %366, %363, %359, %356
  %372 = phi i32 [ -1, %356 ], [ -1, %366 ], [ -1, %370 ], [ -1, %363 ], [ %361, %359 ]
  %373 = load volatile ptr, ptr %156, align 4
  %374 = icmp eq ptr %373, null
  br i1 %374, label %407, label %375, !prof !9

375:                                              ; preds = %371
  %376 = and i32 %372, -129
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !75
  call void @arm_heavy_mb() #23
  %377 = getelementptr i8, ptr %373, i32 23480
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %377, i32 %376) #23, !srcloc !14
  br label %407

378:                                              ; preds = %270
  %379 = icmp eq i32 %271, 3
  br i1 %379, label %380, label %407

380:                                              ; preds = %378
  %381 = load volatile ptr, ptr %156, align 4
  %382 = icmp eq ptr %381, null
  br i1 %382, label %395, label %383, !prof !9

383:                                              ; preds = %380
  %384 = getelementptr i8, ptr %381, i32 23480
  %385 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %384) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %386 = icmp eq i32 %385, -1
  br i1 %386, label %387, label %395

387:                                              ; preds = %383
  %388 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %381) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %389 = icmp eq i32 %388, -1
  br i1 %389, label %390, label %395

390:                                              ; preds = %387
  %391 = load ptr, ptr %251, align 64
  store ptr null, ptr %156, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %391, ptr noundef nonnull @.str) #22
  %392 = load ptr, ptr %3, align 4
  %393 = call zeroext i1 @pci_device_is_present(ptr noundef %392) #23
  br i1 %393, label %394, label %395, !prof !9

394:                                              ; preds = %390
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 23480) #23
  br label %395

395:                                              ; preds = %394, %390, %387, %383, %380
  %396 = phi i32 [ -1, %380 ], [ -1, %390 ], [ -1, %394 ], [ -1, %387 ], [ %385, %383 ]
  %397 = load volatile ptr, ptr %156, align 4
  %398 = icmp eq ptr %397, null
  br i1 %398, label %402, label %399, !prof !9

399:                                              ; preds = %395
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !76
  call void @arm_heavy_mb() #23
  %400 = and i32 %396, -129
  %401 = getelementptr i8, ptr %397, i32 23480
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %401, i32 %400) #23, !srcloc !14
  br label %402

402:                                              ; preds = %399, %395
  %403 = load volatile ptr, ptr %156, align 4
  %404 = icmp eq ptr %403, null
  br i1 %404, label %407, label %405, !prof !9

405:                                              ; preds = %402
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !77
  call void @arm_heavy_mb() #23
  %406 = getelementptr i8, ptr %403, i32 9480
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %406, i32 0) #23, !srcloc !14
  br label %407

407:                                              ; preds = %405, %402, %378, %375, %371, %273
  %408 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 3
  %409 = load volatile i32, ptr %408, align 4
  %410 = and i32 %409, 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %427

412:                                              ; preds = %407
  %413 = load i32, ptr %7, align 4
  %414 = icmp eq i32 %413, 4
  br i1 %414, label %415, label %427

415:                                              ; preds = %412
  %416 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 8, i32 4
  %417 = load i16, ptr %416, align 4
  %418 = icmp eq i16 %417, 0
  br i1 %418, label %419, label %427

419:                                              ; preds = %415
  %420 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 77
  %421 = load i8, ptr %420, align 4, !range !15
  %422 = icmp eq i8 %421, 0
  br i1 %422, label %427, label %423

423:                                              ; preds = %419
  %424 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 0, i32 11
  %425 = load ptr, ptr %424, align 4
  %426 = call i32 %425(ptr noundef %5) #23
  br label %427

427:                                              ; preds = %423, %419, %415, %412, %407
  %428 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 12
  %429 = load i32, ptr %428, align 4
  %430 = icmp eq i32 %429, 1
  br i1 %430, label %431, label %437

431:                                              ; preds = %427
  %432 = load i32, ptr %7, align 4
  switch i32 %432, label %437 [
    i32 4, label %433
    i32 6, label %433
    i32 7, label %433
    i32 5, label %435
  ]

433:                                              ; preds = %431, %431, %431
  %434 = call i32 @igb_set_eee_i350(ptr noundef %5, i1 noundef zeroext true, i1 noundef zeroext true) #23
  br label %437

435:                                              ; preds = %431
  %436 = call i32 @igb_set_eee_i354(ptr noundef %5, i1 noundef zeroext true, i1 noundef zeroext true) #23
  br label %437

437:                                              ; preds = %435, %433, %431, %427
  %438 = load ptr, ptr %251, align 64
  %439 = getelementptr inbounds %struct.net_device, ptr %438, i32 0, i32 6
  %440 = load volatile i32, ptr %439, align 4
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %448

443:                                              ; preds = %437
  %444 = load i32, ptr %428, align 4
  %445 = icmp eq i32 %444, 1
  br i1 %445, label %446, label %447

446:                                              ; preds = %443
  call void @igb_power_down_phy_copper_82575(ptr noundef %5) #23
  br label %448

447:                                              ; preds = %443
  call void @igb_shutdown_serdes_link_82575(ptr noundef %5) #23
  br label %448

448:                                              ; preds = %447, %446, %437
  %449 = load i32, ptr %110, align 16
  %450 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 10, i32 3
  %451 = load i16, ptr %450, align 2
  %452 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 21
  %453 = load i16, ptr %452, align 16
  %454 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 10, i32 1
  %455 = load i8, ptr %454, align 4
  %456 = and i8 %455, 2
  %457 = icmp eq i8 %456, 0
  br i1 %457, label %462, label %458

458:                                              ; preds = %448
  %459 = zext i16 %451 to i32
  %460 = and i32 %449, 65535
  %461 = call i32 @igb_vfta_set(ptr noundef %5, i32 noundef %459, i32 noundef %460, i1 noundef zeroext true, i1 noundef zeroext true) #23
  br label %462

462:                                              ; preds = %458, %448
  %463 = phi i16 [ %451, %458 ], [ -1, %448 ]
  store i16 %463, ptr %452, align 16
  %464 = zext i16 %453 to i32
  %465 = icmp eq i16 %453, -1
  br i1 %465, label %480, label %466

466:                                              ; preds = %462
  %467 = zext i16 %451 to i32
  %468 = icmp eq i16 %451, %453
  br i1 %468, label %480, label %469

469:                                              ; preds = %466
  %470 = lshr i32 %464, 5
  %471 = getelementptr i32, ptr %0, i32 %470
  %472 = load volatile i32, ptr %471, align 4
  %473 = and i32 %464, 31
  %474 = shl nuw i32 1, %473
  %475 = and i32 %472, %474
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %480

477:                                              ; preds = %469
  %478 = and i32 %449, 65535
  %479 = call i32 @igb_vfta_set(ptr noundef %5, i32 noundef %467, i32 noundef %478, i1 noundef zeroext false, i1 noundef zeroext true) #23
  br label %480

480:                                              ; preds = %477, %469, %466, %462
  %481 = load volatile ptr, ptr %156, align 4
  %482 = icmp eq ptr %481, null
  br i1 %482, label %485, label %483, !prof !9

483:                                              ; preds = %480
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !78
  call void @arm_heavy_mb() #23
  %484 = getelementptr i8, ptr %481, i32 56
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %484, i32 33024) #23, !srcloc !14
  br label %485

485:                                              ; preds = %483, %480
  %486 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 65
  %487 = load i32, ptr %486, align 16
  %488 = and i32 %487, 1
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %491, label %490

490:                                              ; preds = %485
  call void @igb_ptp_reset(ptr noundef %0) #23
  br label %491

491:                                              ; preds = %490, %485
  %492 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 0, i32 6
  %493 = load ptr, ptr %492, align 4
  %494 = icmp eq ptr %493, null
  br i1 %494, label %497, label %495

495:                                              ; preds = %491
  %496 = call i32 %493(ptr noundef %5) #23
  br label %497

497:                                              ; preds = %495, %491
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_reinit_locked(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 3
  %3 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %2) #23
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %5, %1
  tail call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #23
  %6 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %2) #23
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %5

8:                                                ; preds = %5, %1
  tail call void @igb_down(ptr noundef %0)
  %9 = tail call i32 @igb_up(ptr noundef %0)
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %2) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @igb_rxpbs_adjust_82580(i32 noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_set_default_mac_filter(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  %3 = load ptr, ptr %2, align 64
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 1
  %5 = load i32, ptr %4, align 4
  store i32 %5, ptr %3, align 4
  %6 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 1, i32 4
  %7 = load i16, ptr %6, align 2
  %8 = getelementptr i8, ptr %3, i32 4
  store i16 %7, ptr %8, align 2
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %10 = load i32, ptr %9, align 16
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %struct.igb_mac_addr, ptr %3, i32 0, i32 1
  store i8 %11, ptr %12, align 1
  %13 = getelementptr inbounds %struct.igb_mac_addr, ptr %3, i32 0, i32 2
  store i8 3, ptr %13, align 1
  tail call fastcc void @igb_rar_set_index(ptr noundef %0, i32 noundef 0)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_force_mac_fc(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_set_eee_i350(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_set_eee_i354(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_ptp_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_set_fw_version(ptr noundef %0) local_unnamed_addr #4 {
  %2 = alloca %struct.e1000_fw_version, align 4
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %2, i8 0, i32 20, i1 false), !annotation !24
  call void @igb_get_fw_version(ptr noundef %3, ptr noundef nonnull %2) #23
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, -2
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %8, label %22

8:                                                ; preds = %1
  %9 = call zeroext i1 @igb_get_flash_presence_i210(ptr noundef %3) #23
  br i1 %9, label %22, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 75
  %12 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 4
  %13 = load i8, ptr %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 5
  %16 = load i8, ptr %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 6
  %19 = load i8, ptr %18, align 4
  %20 = zext i8 %19 to i32
  %21 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %11, i32 noundef 32, ptr noundef nonnull @.str.4, i32 noundef %14, i32 noundef %17, i32 noundef %20)
  br label %62

22:                                               ; preds = %8, %1
  %23 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 7
  %24 = load i8, ptr %23, align 1, !range !15
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %45, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 75
  %28 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 1
  %29 = load i16, ptr %28, align 4
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 2
  %32 = load i16, ptr %31, align 2
  %33 = zext i16 %32 to i32
  %34 = load i32, ptr %2, align 4
  %35 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 8
  %36 = load i16, ptr %35, align 2
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 9
  %39 = load i16, ptr %38, align 4
  %40 = zext i16 %39 to i32
  %41 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 10
  %42 = load i16, ptr %41, align 2
  %43 = zext i16 %42 to i32
  %44 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %27, i32 noundef 32, ptr noundef nonnull @.str.5, i32 noundef %30, i32 noundef %33, i32 noundef %34, i32 noundef %37, i32 noundef %40, i32 noundef %43)
  br label %62

45:                                               ; preds = %22
  %46 = load i32, ptr %2, align 4
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 75
  %49 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 1
  %50 = load i16, ptr %49, align 4
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 2
  %53 = load i16, ptr %52, align 2
  %54 = zext i16 %53 to i32
  br i1 %47, label %57, label %55

55:                                               ; preds = %45
  %56 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %48, i32 noundef 32, ptr noundef nonnull @.str.6, i32 noundef %51, i32 noundef %54, i32 noundef %46)
  br label %62

57:                                               ; preds = %45
  %58 = getelementptr inbounds %struct.e1000_fw_version, ptr %2, i32 0, i32 3
  %59 = load i16, ptr %58, align 4
  %60 = zext i16 %59 to i32
  %61 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %48, i32 noundef 32, ptr noundef nonnull @.str.7, i32 noundef %51, i32 noundef %54, i32 noundef %60)
  br label %62

62:                                               ; preds = %57, %55, %26, %10
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #23
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_get_fw_version(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @igb_get_flash_presence_i210(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i32 @igb_get_max_rss_queues(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %3 = load i32, ptr %2, align 4
  switch i32 %3, label %13 [
    i32 7, label %14
    i32 1, label %4
    i32 6, label %4
    i32 4, label %5
    i32 2, label %9
  ]

4:                                                ; preds = %1, %1
  br label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %7 = load i32, ptr %6, align 16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %11 = load i32, ptr %10, align 16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9, %5, %1
  br label %14

14:                                               ; preds = %13, %9, %5, %4, %1
  %15 = phi i32 [ 8, %13 ], [ 4, %4 ], [ 2, %1 ], [ 1, %5 ], [ 2, %9 ]
  ret i32 %15
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @igb_set_flag_queue_pairs(ptr nocapture noundef %0, i32 noundef %1) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %4 = load i32, ptr %3, align 4
  switch i32 %4, label %5 [
    i32 1, label %15
    i32 7, label %15
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  %7 = load i32, ptr %6, align 4
  %8 = lshr i32 %1, 1
  %9 = icmp ugt i32 %7, %8
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, -9
  %13 = select i1 %9, i32 8, i32 0
  %14 = or i32 %12, %13
  store i32 %14, ptr %10, align 4
  br label %15

15:                                               ; preds = %5, %2, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_open(ptr noundef %0) #4 {
  %2 = tail call fastcc i32 @__igb_open(ptr noundef %0, i1 noundef zeroext false)
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__igb_open(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #4 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 2512
  %5 = getelementptr i8, ptr %0, i32 2308
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr i8, ptr %0, i32 1928
  %8 = load volatile i32, ptr %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  br i1 %1, label %12, label %286, !prof !9

12:                                               ; preds = %11
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4061, i32 noundef 9, ptr noundef null) #23
  br label %286

13:                                               ; preds = %2
  br i1 %1, label %17, label %14

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %16 = tail call i32 @__pm_runtime_resume(ptr noundef %15, i32 noundef 4) #23
  br label %17

17:                                               ; preds = %14, %13
  tail call void @netif_carrier_off(ptr noundef %0) #23
  %18 = tail call fastcc i32 @igb_setup_all_tx_resources(ptr noundef %3)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %281

20:                                               ; preds = %17
  %21 = tail call fastcc i32 @igb_setup_all_rx_resources(ptr noundef %3)
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %254

23:                                               ; preds = %20
  %24 = getelementptr i8, ptr %0, i32 3216
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call i32 %25(ptr noundef %4) #23
  br label %29

29:                                               ; preds = %27, %23
  %30 = getelementptr i8, ptr %0, i32 3284
  %31 = load i32, ptr %30, align 4
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @igb_power_up_phy_copper(ptr noundef %4) #23
  br label %35

34:                                               ; preds = %29
  tail call void @igb_power_up_serdes_link_82575(ptr noundef %4) #23
  br label %35

35:                                               ; preds = %34, %33
  %36 = tail call i32 @igb_setup_link(ptr noundef %4) #23
  tail call fastcc void @igb_configure(ptr noundef %3)
  %37 = getelementptr i8, ptr %0, i32 1920
  %38 = load ptr, ptr %37, align 64
  %39 = load ptr, ptr %5, align 4
  %40 = getelementptr i8, ptr %0, i32 1932
  %41 = load i32, ptr %40, align 4
  %42 = and i32 %41, 8192
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %150, label %44

44:                                               ; preds = %35
  %45 = getelementptr i8, ptr %0, i32 1936
  %46 = load i32, ptr %45, align 16
  %47 = getelementptr i8, ptr %0, i32 1940
  %48 = load i32, ptr %47, align 4
  %49 = tail call i32 @request_threaded_irq(i32 noundef %48, ptr noundef nonnull @igb_msix_other, ptr noundef null, i32 noundef 0, ptr noundef %38, ptr noundef %3) #23
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %118

51:                                               ; preds = %44
  %52 = icmp ugt i32 %46, 8
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = load ptr, ptr %5, align 4
  %55 = getelementptr inbounds %struct.pci_dev, ptr %54, i32 0, i32 44
  %56 = load i32, ptr %45, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %55, ptr noundef nonnull @.str.140, i32 noundef %56, i32 noundef 8) #22
  br label %59

57:                                               ; preds = %51
  %58 = icmp eq i32 %46, 0
  br i1 %58, label %102, label %59

59:                                               ; preds = %57, %53
  %60 = phi i32 [ 8, %53 ], [ %46, %57 ]
  %61 = getelementptr i8, ptr %0, i32 2244
  br label %64

62:                                               ; preds = %97
  %63 = icmp eq i32 %68, %60
  br i1 %63, label %102, label %64

64:                                               ; preds = %62, %59
  %65 = phi i32 [ 0, %59 ], [ %68, %62 ]
  %66 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 45, i32 %65
  %67 = load ptr, ptr %66, align 4
  %68 = add nuw nsw i32 %65, 1
  %69 = load ptr, ptr %61, align 4
  %70 = shl i32 %68, 2
  %71 = add nuw nsw i32 %70, 5760
  %72 = getelementptr i8, ptr %69, i32 %71
  %73 = getelementptr inbounds %struct.igb_q_vector, ptr %67, i32 0, i32 5
  store ptr %72, ptr %73, align 16
  %74 = getelementptr inbounds %struct.igb_q_vector, ptr %67, i32 0, i32 6
  %75 = load ptr, ptr %74, align 4
  %76 = icmp eq ptr %75, null
  %77 = getelementptr inbounds %struct.igb_q_vector, ptr %67, i32 0, i32 7
  %78 = load ptr, ptr %77, align 4
  %79 = icmp eq ptr %78, null
  %80 = getelementptr inbounds %struct.igb_q_vector, ptr %67, i32 0, i32 10
  br i1 %76, label %87, label %81

81:                                               ; preds = %64
  %82 = getelementptr inbounds %struct.igb_ring, ptr %75, i32 0, i32 11
  %83 = load i8, ptr %82, align 2
  %84 = zext i8 %83 to i32
  br i1 %79, label %93, label %85

85:                                               ; preds = %81
  %86 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %80, ptr noundef nonnull @.str.141, ptr noundef %38, i32 noundef %84) #23
  br label %97

87:                                               ; preds = %64
  br i1 %79, label %95, label %88

88:                                               ; preds = %87
  %89 = getelementptr inbounds %struct.igb_ring, ptr %78, i32 0, i32 11
  %90 = load i8, ptr %89, align 2
  %91 = zext i8 %90 to i32
  %92 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %80, ptr noundef nonnull @.str.142, ptr noundef %38, i32 noundef %91) #23
  br label %97

93:                                               ; preds = %81
  %94 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %80, ptr noundef nonnull @.str.143, ptr noundef %38, i32 noundef %84) #23
  br label %97

95:                                               ; preds = %87
  %96 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %80, ptr noundef nonnull @.str.144, ptr noundef %38) #23
  br label %97

97:                                               ; preds = %95, %93, %88, %85
  %98 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 6, i32 %68
  %99 = load i32, ptr %98, align 4
  %100 = tail call i32 @request_threaded_irq(i32 noundef %99, ptr noundef nonnull @igb_msix_ring, ptr noundef null, i32 noundef 0, ptr noundef %80, ptr noundef %67) #23
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %62, label %103

102:                                              ; preds = %62, %57
  tail call fastcc void @igb_configure_msix(ptr noundef %3) #23
  br label %171

103:                                              ; preds = %97
  %104 = load i32, ptr %47, align 4
  %105 = tail call ptr @free_irq(i32 noundef %104, ptr noundef %3) #23
  %106 = icmp eq i32 %65, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %107, %103
  %108 = phi i32 [ %110, %107 ], [ 1, %103 ]
  %109 = phi i32 [ %116, %107 ], [ 0, %103 ]
  %110 = add nuw nsw i32 %108, 1
  %111 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 6, i32 %108
  %112 = load i32, ptr %111, align 4
  %113 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 45, i32 %109
  %114 = load ptr, ptr %113, align 4
  %115 = tail call ptr @free_irq(i32 noundef %112, ptr noundef %114) #23
  %116 = add nuw nsw i32 %109, 1
  %117 = icmp eq i32 %116, %65
  br i1 %117, label %118, label %107

118:                                              ; preds = %107, %103, %44
  %119 = getelementptr i8, ptr %0, i32 2040
  %120 = load i32, ptr %119, align 8
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %144

122:                                              ; preds = %140, %118
  %123 = phi i32 [ %141, %140 ], [ 0, %118 ]
  %124 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 14, i32 %123
  %125 = load ptr, ptr %124, align 4
  %126 = icmp eq ptr %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %122
  tail call fastcc void @igb_clean_tx_ring(ptr noundef nonnull %125) #23
  %128 = getelementptr inbounds %struct.igb_ring, ptr %125, i32 0, i32 4
  %129 = load ptr, ptr %128, align 16
  tail call void @vfree(ptr noundef %129) #23
  store ptr null, ptr %128, align 16
  %130 = getelementptr inbounds %struct.igb_ring, ptr %125, i32 0, i32 5
  %131 = load ptr, ptr %130, align 4
  %132 = icmp eq ptr %131, null
  br i1 %132, label %140, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %struct.igb_ring, ptr %125, i32 0, i32 3
  %135 = load ptr, ptr %134, align 4
  %136 = getelementptr inbounds %struct.igb_ring, ptr %125, i32 0, i32 9
  %137 = load i32, ptr %136, align 4
  %138 = getelementptr inbounds %struct.igb_ring, ptr %125, i32 0, i32 8
  %139 = load i32, ptr %138, align 32
  tail call void @dma_free_attrs(ptr noundef %135, i32 noundef %137, ptr noundef nonnull %131, i32 noundef %139, i32 noundef 0) #23
  store ptr null, ptr %130, align 4
  br label %140

140:                                              ; preds = %133, %127, %122
  %141 = add nuw nsw i32 %123, 1
  %142 = load i32, ptr %119, align 8
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %122, label %144

144:                                              ; preds = %140, %118
  tail call fastcc void @igb_free_all_rx_resources(ptr noundef %3) #23
  tail call fastcc void @igb_clear_interrupt_scheme(ptr noundef %3) #23
  %145 = tail call fastcc i32 @igb_init_interrupt_scheme(ptr noundef %3, i1 noundef zeroext false) #23
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %247

147:                                              ; preds = %144
  %148 = tail call fastcc i32 @igb_setup_all_tx_resources(ptr noundef %3) #23
  %149 = tail call fastcc i32 @igb_setup_all_rx_resources(ptr noundef %3) #23
  tail call fastcc void @igb_configure(ptr noundef %3) #23
  br label %150

150:                                              ; preds = %147, %35
  %151 = getelementptr i8, ptr %0, i32 4676
  %152 = load ptr, ptr %151, align 4
  tail call fastcc void @igb_assign_vector(ptr noundef %152, i32 noundef 0) #23
  %153 = load i32, ptr %40, align 4
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 46
  %158 = load i32, ptr %157, align 4
  %159 = tail call i32 @request_threaded_irq(i32 noundef %158, ptr noundef nonnull @igb_intr_msi, ptr noundef null, i32 noundef 0, ptr noundef %38, ptr noundef %3) #23
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %156
  tail call fastcc void @igb_reset_interrupt_capability(ptr noundef %3) #23
  %162 = load i32, ptr %40, align 4
  %163 = and i32 %162, -2
  store i32 %163, ptr %40, align 4
  br label %164

164:                                              ; preds = %161, %150
  %165 = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 46
  %166 = load i32, ptr %165, align 4
  %167 = tail call i32 @request_threaded_irq(i32 noundef %166, ptr noundef nonnull @igb_intr, ptr noundef null, i32 noundef 128, ptr noundef %38, ptr noundef %3) #23
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %170, ptr noundef nonnull @.str.139, i32 noundef %167) #22
  br label %247

171:                                              ; preds = %164, %156, %102
  %172 = load ptr, ptr %37, align 64
  %173 = getelementptr i8, ptr %0, i32 2040
  %174 = load i32, ptr %173, align 8
  %175 = tail call i32 @netif_set_real_num_tx_queues(ptr noundef %172, i32 noundef %174) #23
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %218

177:                                              ; preds = %171
  %178 = load ptr, ptr %37, align 64
  %179 = getelementptr i8, ptr %0, i32 2108
  %180 = load i32, ptr %179, align 4
  %181 = tail call i32 @netif_set_real_num_rx_queues(ptr noundef %178, i32 noundef %180) #23
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %218

183:                                              ; preds = %177
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %7) #23
  %184 = getelementptr i8, ptr %0, i32 1936
  %185 = load i32, ptr %184, align 16
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %195, label %187

187:                                              ; preds = %187, %183
  %188 = phi i32 [ %192, %187 ], [ 0, %183 ]
  %189 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 45, i32 %188
  %190 = load ptr, ptr %189, align 4
  %191 = getelementptr inbounds %struct.igb_q_vector, ptr %190, i32 0, i32 8
  tail call void @napi_enable(ptr noundef %191) #23
  %192 = add nuw i32 %188, 1
  %193 = load i32, ptr %184, align 16
  %194 = icmp ult i32 %192, %193
  br i1 %194, label %187, label %195

195:                                              ; preds = %187, %183
  %196 = tail call i32 @igb_rd32(ptr noundef %4, i32 noundef 46700)
  %197 = tail call i32 @igb_rd32(ptr noundef %4, i32 noundef 192)
  tail call fastcc void @igb_irq_enable(ptr noundef %3)
  %198 = getelementptr i8, ptr %0, i32 4720
  %199 = load i32, ptr %198, align 16
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %195
  %202 = tail call i32 @igb_rd32(ptr noundef %4, i32 noundef 24)
  %203 = getelementptr i8, ptr %0, i32 2516
  %204 = load volatile ptr, ptr %203, align 4
  %205 = icmp eq ptr %204, null
  br i1 %205, label %209, label %206, !prof !9

206:                                              ; preds = %201
  %207 = or i32 %202, 16384
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !79
  tail call void @arm_heavy_mb() #23
  %208 = getelementptr i8, ptr %204, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %208, i32 %207) #23, !srcloc !14
  br label %209

209:                                              ; preds = %206, %201, %195
  tail call fastcc void @netif_tx_start_all_queues(ptr noundef %0)
  br i1 %1, label %213, label %210

210:                                              ; preds = %209
  %211 = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %212 = tail call i32 @__pm_runtime_idle(ptr noundef %211, i32 noundef 5) #23
  br label %213

213:                                              ; preds = %210, %209
  %214 = getelementptr i8, ptr %0, i32 3141
  store i8 1, ptr %214, align 1
  %215 = getelementptr i8, ptr %0, i32 2264
  %216 = load ptr, ptr @system_wq, align 4
  %217 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %216, ptr noundef %215) #23
  br label %286

218:                                              ; preds = %177, %171
  %219 = phi i32 [ %175, %171 ], [ %181, %177 ]
  %220 = load i32, ptr %40, align 4
  %221 = and i32 %220, 8192
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %242, label %223

223:                                              ; preds = %218
  %224 = getelementptr i8, ptr %0, i32 1940
  %225 = load i32, ptr %224, align 4
  %226 = tail call ptr @free_irq(i32 noundef %225, ptr noundef %3) #23
  %227 = getelementptr i8, ptr %0, i32 1936
  %228 = load i32, ptr %227, align 16
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %247, label %230

230:                                              ; preds = %230, %223
  %231 = phi i32 [ %239, %230 ], [ 0, %223 ]
  %232 = phi i32 [ %233, %230 ], [ 1, %223 ]
  %233 = add i32 %232, 1
  %234 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 6, i32 %232
  %235 = load i32, ptr %234, align 4
  %236 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 45, i32 %231
  %237 = load ptr, ptr %236, align 4
  %238 = tail call ptr @free_irq(i32 noundef %235, ptr noundef %237) #23
  %239 = add nuw i32 %231, 1
  %240 = load i32, ptr %227, align 16
  %241 = icmp ult i32 %239, %240
  br i1 %241, label %230, label %247

242:                                              ; preds = %218
  %243 = load ptr, ptr %5, align 4
  %244 = getelementptr inbounds %struct.pci_dev, ptr %243, i32 0, i32 46
  %245 = load i32, ptr %244, align 4
  %246 = tail call ptr @free_irq(i32 noundef %245, ptr noundef %3) #23
  br label %247

247:                                              ; preds = %242, %230, %223, %169, %144
  %248 = phi i32 [ %145, %144 ], [ %167, %169 ], [ %219, %223 ], [ %219, %242 ], [ %219, %230 ]
  tail call fastcc void @igb_release_hw_control(ptr noundef %3)
  %249 = load i32, ptr %30, align 4
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %252

251:                                              ; preds = %247
  tail call void @igb_power_down_phy_copper_82575(ptr noundef %4) #23
  br label %253

252:                                              ; preds = %247
  tail call void @igb_shutdown_serdes_link_82575(ptr noundef %4) #23
  br label %253

253:                                              ; preds = %252, %251
  tail call fastcc void @igb_free_all_rx_resources(ptr noundef %3)
  br label %254

254:                                              ; preds = %253, %20
  %255 = phi i32 [ %21, %20 ], [ %248, %253 ]
  %256 = getelementptr i8, ptr %0, i32 2040
  %257 = load i32, ptr %256, align 8
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %259, label %281

259:                                              ; preds = %277, %254
  %260 = phi i32 [ %278, %277 ], [ 0, %254 ]
  %261 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 14, i32 %260
  %262 = load ptr, ptr %261, align 4
  %263 = icmp eq ptr %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %259
  tail call fastcc void @igb_clean_tx_ring(ptr noundef nonnull %262) #23
  %265 = getelementptr inbounds %struct.igb_ring, ptr %262, i32 0, i32 4
  %266 = load ptr, ptr %265, align 16
  tail call void @vfree(ptr noundef %266) #23
  store ptr null, ptr %265, align 16
  %267 = getelementptr inbounds %struct.igb_ring, ptr %262, i32 0, i32 5
  %268 = load ptr, ptr %267, align 4
  %269 = icmp eq ptr %268, null
  br i1 %269, label %277, label %270

270:                                              ; preds = %264
  %271 = getelementptr inbounds %struct.igb_ring, ptr %262, i32 0, i32 3
  %272 = load ptr, ptr %271, align 4
  %273 = getelementptr inbounds %struct.igb_ring, ptr %262, i32 0, i32 9
  %274 = load i32, ptr %273, align 4
  %275 = getelementptr inbounds %struct.igb_ring, ptr %262, i32 0, i32 8
  %276 = load i32, ptr %275, align 32
  tail call void @dma_free_attrs(ptr noundef %272, i32 noundef %274, ptr noundef nonnull %268, i32 noundef %276, i32 noundef 0) #23
  store ptr null, ptr %267, align 4
  br label %277

277:                                              ; preds = %270, %264, %259
  %278 = add nuw nsw i32 %260, 1
  %279 = load i32, ptr %256, align 8
  %280 = icmp slt i32 %278, %279
  br i1 %280, label %259, label %281

281:                                              ; preds = %277, %254, %17
  %282 = phi i32 [ %18, %17 ], [ %255, %254 ], [ %255, %277 ]
  tail call void @igb_reset(ptr noundef %3)
  br i1 %1, label %286, label %283

283:                                              ; preds = %281
  %284 = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %285 = tail call i32 @__pm_runtime_idle(ptr noundef %284, i32 noundef 5) #23
  br label %286

286:                                              ; preds = %283, %281, %213, %12, %11
  %287 = phi i32 [ 0, %213 ], [ -16, %12 ], [ -16, %11 ], [ %282, %283 ], [ %282, %281 ]
  ret i32 %287
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_close(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %3 = load volatile i32, ptr %2, align 4
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 103
  %8 = load i8, ptr %7, align 1, !range !15
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6, %1
  tail call fastcc void @__igb_close(ptr noundef %0, i1 noundef zeroext false)
  br label %11

11:                                               ; preds = %10, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__igb_close(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #4 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 2308
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr i8, ptr %0, i32 1928
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !80

10:                                               ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4173, i32 noundef 9, ptr noundef null) #23
  br label %11

11:                                               ; preds = %10, %2
  br i1 %1, label %71, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %14 = tail call i32 @__pm_runtime_resume(ptr noundef %13, i32 noundef 4) #23
  tail call void @igb_down(ptr noundef %3)
  %15 = getelementptr i8, ptr %0, i32 1932
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 8192
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %12
  %20 = getelementptr i8, ptr %0, i32 1940
  %21 = load i32, ptr %20, align 4
  %22 = tail call ptr @free_irq(i32 noundef %21, ptr noundef %3) #23
  %23 = getelementptr i8, ptr %0, i32 1936
  %24 = load i32, ptr %23, align 16
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %43, label %26

26:                                               ; preds = %26, %19
  %27 = phi i32 [ %35, %26 ], [ 0, %19 ]
  %28 = phi i32 [ %29, %26 ], [ 1, %19 ]
  %29 = add i32 %28, 1
  %30 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 6, i32 %28
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 45, i32 %27
  %33 = load ptr, ptr %32, align 4
  %34 = tail call ptr @free_irq(i32 noundef %31, ptr noundef %33) #23
  %35 = add nuw i32 %27, 1
  %36 = load i32, ptr %23, align 16
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %26, label %43

38:                                               ; preds = %12
  %39 = load ptr, ptr %4, align 4
  %40 = getelementptr inbounds %struct.pci_dev, ptr %39, i32 0, i32 46
  %41 = load i32, ptr %40, align 4
  %42 = tail call ptr @free_irq(i32 noundef %41, ptr noundef %3) #23
  br label %43

43:                                               ; preds = %38, %26, %19
  %44 = getelementptr i8, ptr %0, i32 2040
  %45 = load i32, ptr %44, align 8
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %69

47:                                               ; preds = %65, %43
  %48 = phi i32 [ %66, %65 ], [ 0, %43 ]
  %49 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 14, i32 %48
  %50 = load ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  tail call fastcc void @igb_clean_tx_ring(ptr noundef nonnull %50) #23
  %53 = getelementptr inbounds %struct.igb_ring, ptr %50, i32 0, i32 4
  %54 = load ptr, ptr %53, align 16
  tail call void @vfree(ptr noundef %54) #23
  store ptr null, ptr %53, align 16
  %55 = getelementptr inbounds %struct.igb_ring, ptr %50, i32 0, i32 5
  %56 = load ptr, ptr %55, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %65, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.igb_ring, ptr %50, i32 0, i32 3
  %60 = load ptr, ptr %59, align 4
  %61 = getelementptr inbounds %struct.igb_ring, ptr %50, i32 0, i32 9
  %62 = load i32, ptr %61, align 4
  %63 = getelementptr inbounds %struct.igb_ring, ptr %50, i32 0, i32 8
  %64 = load i32, ptr %63, align 32
  tail call void @dma_free_attrs(ptr noundef %60, i32 noundef %62, ptr noundef nonnull %56, i32 noundef %64, i32 noundef 0) #23
  store ptr null, ptr %55, align 4
  br label %65

65:                                               ; preds = %58, %52, %47
  %66 = add nuw nsw i32 %48, 1
  %67 = load i32, ptr %44, align 8
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %47, label %69

69:                                               ; preds = %65, %43
  tail call fastcc void @igb_free_all_rx_resources(ptr noundef %3)
  %70 = tail call i32 @__pm_runtime_idle(ptr noundef %13, i32 noundef 4) #23
  br label %127

71:                                               ; preds = %11
  tail call void @igb_down(ptr noundef %3)
  %72 = getelementptr i8, ptr %0, i32 1932
  %73 = load i32, ptr %72, align 4
  %74 = and i32 %73, 8192
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %95, label %76

76:                                               ; preds = %71
  %77 = getelementptr i8, ptr %0, i32 1940
  %78 = load i32, ptr %77, align 4
  %79 = tail call ptr @free_irq(i32 noundef %78, ptr noundef %3) #23
  %80 = getelementptr i8, ptr %0, i32 1936
  %81 = load i32, ptr %80, align 16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %83, %76
  %84 = phi i32 [ %92, %83 ], [ 0, %76 ]
  %85 = phi i32 [ %86, %83 ], [ 1, %76 ]
  %86 = add i32 %85, 1
  %87 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 6, i32 %85
  %88 = load i32, ptr %87, align 4
  %89 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 45, i32 %84
  %90 = load ptr, ptr %89, align 4
  %91 = tail call ptr @free_irq(i32 noundef %88, ptr noundef %90) #23
  %92 = add nuw i32 %84, 1
  %93 = load i32, ptr %80, align 16
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %83, label %100

95:                                               ; preds = %71
  %96 = load ptr, ptr %4, align 4
  %97 = getelementptr inbounds %struct.pci_dev, ptr %96, i32 0, i32 46
  %98 = load i32, ptr %97, align 4
  %99 = tail call ptr @free_irq(i32 noundef %98, ptr noundef %3) #23
  br label %100

100:                                              ; preds = %95, %83, %76
  %101 = getelementptr i8, ptr %0, i32 2040
  %102 = load i32, ptr %101, align 8
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %126

104:                                              ; preds = %122, %100
  %105 = phi i32 [ %123, %122 ], [ 0, %100 ]
  %106 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 14, i32 %105
  %107 = load ptr, ptr %106, align 4
  %108 = icmp eq ptr %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  tail call fastcc void @igb_clean_tx_ring(ptr noundef nonnull %107) #23
  %110 = getelementptr inbounds %struct.igb_ring, ptr %107, i32 0, i32 4
  %111 = load ptr, ptr %110, align 16
  tail call void @vfree(ptr noundef %111) #23
  store ptr null, ptr %110, align 16
  %112 = getelementptr inbounds %struct.igb_ring, ptr %107, i32 0, i32 5
  %113 = load ptr, ptr %112, align 4
  %114 = icmp eq ptr %113, null
  br i1 %114, label %122, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %struct.igb_ring, ptr %107, i32 0, i32 3
  %117 = load ptr, ptr %116, align 4
  %118 = getelementptr inbounds %struct.igb_ring, ptr %107, i32 0, i32 9
  %119 = load i32, ptr %118, align 4
  %120 = getelementptr inbounds %struct.igb_ring, ptr %107, i32 0, i32 8
  %121 = load i32, ptr %120, align 32
  tail call void @dma_free_attrs(ptr noundef %117, i32 noundef %119, ptr noundef nonnull %113, i32 noundef %121, i32 noundef 0) #23
  store ptr null, ptr %112, align 4
  br label %122

122:                                              ; preds = %115, %109, %104
  %123 = add nuw nsw i32 %105, 1
  %124 = load i32, ptr %101, align 8
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %104, label %126

126:                                              ; preds = %122, %100
  tail call fastcc void @igb_free_all_rx_resources(ptr noundef %3)
  br label %127

127:                                              ; preds = %126, %69
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_setup_tx_resources(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 10
  %5 = load i16, ptr %4, align 8
  %6 = zext i16 %5 to i32
  %7 = mul nuw nsw i32 %6, 36
  %8 = tail call noalias ptr @vmalloc(i32 noundef %7) #24
  %9 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 4
  store ptr %8, ptr %9, align 16
  %10 = icmp eq ptr %8, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %1
  %12 = load i16, ptr %4, align 8
  %13 = zext i16 %12 to i32
  %14 = shl nuw nsw i32 %13, 4
  %15 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 9
  %16 = add nuw nsw i32 %14, 4095
  %17 = and i32 %16, 2093056
  store i32 %17, ptr %15, align 4
  %18 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 8
  %19 = tail call ptr @dma_alloc_attrs(ptr noundef %3, i32 noundef %17, ptr noundef %18, i32 noundef 3264, i32 noundef 0) #23
  %20 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 5
  store ptr %19, ptr %20, align 4
  %21 = icmp eq ptr %19, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = load ptr, ptr %9, align 16
  br label %27

24:                                               ; preds = %11
  %25 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 20
  store i16 0, ptr %25, align 2
  %26 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 19
  store i16 0, ptr %26, align 64
  br label %29

27:                                               ; preds = %22, %1
  %28 = phi ptr [ %23, %22 ], [ null, %1 ]
  tail call void @vfree(ptr noundef %28) #23
  store ptr null, ptr %9, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.8) #22
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi i32 [ 0, %24 ], [ -12, %27 ]
  ret i32 %30
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @vmalloc(i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_setup_tctl(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %4 = load volatile ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %8, label %6, !prof !9

6:                                                ; preds = %1
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !81
  tail call void @arm_heavy_mb() #23
  %7 = getelementptr i8, ptr %4, i32 14376
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %7, i32 0) #23, !srcloc !14
  br label %8

8:                                                ; preds = %6, %1
  %9 = load volatile ptr, ptr %3, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %25, label %11, !prof !9

11:                                               ; preds = %8
  %12 = getelementptr i8, ptr %9, i32 1024
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %12) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %9) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 64
  store ptr null, ptr %3, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %20, ptr noundef nonnull @.str) #22
  %21 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %22 = load ptr, ptr %21, align 4
  %23 = tail call zeroext i1 @pci_device_is_present(ptr noundef %22) #23
  br i1 %23, label %24, label %25, !prof !9

24:                                               ; preds = %18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 1024) #23
  br label %25

25:                                               ; preds = %24, %18, %15, %11, %8
  %26 = phi i32 [ -1, %8 ], [ -1, %18 ], [ -1, %24 ], [ -1, %15 ], [ %13, %11 ]
  tail call void @igb_config_collision_dist(ptr noundef %2) #23
  %27 = load volatile ptr, ptr %3, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %33, label %29, !prof !9

29:                                               ; preds = %25
  %30 = and i32 %26, -16781307
  %31 = or i32 %30, 16777466
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !82
  tail call void @arm_heavy_mb() #23
  %32 = getelementptr i8, ptr %27, i32 1024
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %32, i32 %31) #23, !srcloc !14
  br label %33

33:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_config_collision_dist(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_configure_tx_ring(ptr noundef %0, ptr nocapture noundef %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 8
  %4 = load i32, ptr %3, align 32
  %5 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 12
  %6 = load i8, ptr %5, align 1
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %9 = load volatile ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %23, label %11, !prof !9

11:                                               ; preds = %2
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !83
  tail call void @arm_heavy_mb() #23
  %12 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %13 = load i16, ptr %12, align 8
  %14 = zext i16 %13 to i32
  %15 = shl nuw nsw i32 %14, 4
  %16 = icmp ult i8 %6, 4
  %17 = shl nuw nsw i32 %7, 8
  %18 = add nuw nsw i32 %17, 14344
  %19 = shl nuw nsw i32 %7, 6
  %20 = add nuw nsw i32 %19, 57352
  %21 = select i1 %16, i32 %18, i32 %20
  %22 = getelementptr i8, ptr %9, i32 %21
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %22, i32 %15) #23, !srcloc !14
  br label %23

23:                                               ; preds = %11, %2
  %24 = load volatile ptr, ptr %8, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %34, label %26, !prof !9

26:                                               ; preds = %23
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !84
  tail call void @arm_heavy_mb() #23
  %27 = icmp ult i8 %6, 4
  %28 = shl nuw nsw i32 %7, 8
  %29 = add nuw nsw i32 %28, 14336
  %30 = shl nuw nsw i32 %7, 6
  %31 = add nuw nsw i32 %30, 57344
  %32 = select i1 %27, i32 %29, i32 %31
  %33 = getelementptr i8, ptr %24, i32 %32
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %33, i32 %4) #23, !srcloc !14
  br label %34

34:                                               ; preds = %26, %23
  %35 = load volatile ptr, ptr %8, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %40, !prof !9

37:                                               ; preds = %34
  %38 = shl nuw nsw i32 %7, 8
  %39 = shl nuw nsw i32 %7, 6
  br label %48

40:                                               ; preds = %34
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !85
  tail call void @arm_heavy_mb() #23
  %41 = icmp ult i8 %6, 4
  %42 = shl nuw nsw i32 %7, 8
  %43 = add nuw nsw i32 %42, 14340
  %44 = shl nuw nsw i32 %7, 6
  %45 = add nuw nsw i32 %44, 57348
  %46 = select i1 %41, i32 %43, i32 %45
  %47 = getelementptr i8, ptr %35, i32 %46
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %47, i32 0) #23, !srcloc !14
  br label %48

48:                                               ; preds = %40, %37
  %49 = phi i32 [ %39, %37 ], [ %44, %40 ]
  %50 = phi i32 [ %38, %37 ], [ %42, %40 ]
  %51 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 27
  %52 = load ptr, ptr %51, align 4
  %53 = icmp ult i8 %6, 4
  %54 = add nuw nsw i32 %50, 14360
  %55 = add nuw nsw i32 %49, 57368
  %56 = select i1 %53, i32 %54, i32 %55
  %57 = getelementptr i8, ptr %52, i32 %56
  %58 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 7
  store ptr %57, ptr %58, align 4
  %59 = load volatile ptr, ptr %8, align 4
  %60 = icmp eq ptr %59, null
  br i1 %60, label %66, label %61, !prof !9

61:                                               ; preds = %48
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !86
  tail call void @arm_heavy_mb() #23
  %62 = add nuw nsw i32 %50, 14352
  %63 = add nuw nsw i32 %49, 57360
  %64 = select i1 %53, i32 %62, i32 %63
  %65 = getelementptr i8, ptr %59, i32 %64
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %65, i32 0) #23, !srcloc !14
  br label %66

66:                                               ; preds = %61, %48
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !87
  tail call void @arm_heavy_mb() #23
  %67 = load ptr, ptr %58, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %67, i32 0) #23, !srcloc !14
  %68 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %69 = load i32, ptr %68, align 4
  %70 = icmp eq i32 %69, 5
  %71 = icmp eq i32 %69, 2
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %74 = load i32, ptr %73, align 4
  %75 = and i32 %74, 8192
  %76 = icmp eq i32 %75, 0
  %77 = select i1 %76, i32 1048576, i32 65536
  br label %78

78:                                               ; preds = %72, %66
  %79 = phi i32 [ 1048576, %66 ], [ %77, %72 ]
  %80 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 4
  %81 = load ptr, ptr %80, align 16
  %82 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %83 = load i16, ptr %82, align 8
  %84 = zext i16 %83 to i32
  %85 = mul nuw nsw i32 %84, 36
  tail call void @llvm.memset.p0.i32(ptr align 4 %81, i8 0, i32 %85, i1 false)
  %86 = load volatile ptr, ptr %8, align 4
  %87 = icmp eq ptr %86, null
  br i1 %87, label %95, label %88, !prof !9

88:                                               ; preds = %78
  %89 = select i1 %70, i32 33554708, i32 33554696
  %90 = or i32 %89, %79
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !88
  tail call void @arm_heavy_mb() #23
  %91 = add nuw nsw i32 %50, 14376
  %92 = add nuw nsw i32 %49, 57384
  %93 = select i1 %53, i32 %91, i32 %92
  %94 = getelementptr i8, ptr %86, i32 %93
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %94, i32 %90) #23, !srcloc !14
  br label %95

95:                                               ; preds = %88, %78
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_setup_rx_resources(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 3
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 10
  %7 = load i16, ptr %6, align 8
  %8 = zext i16 %7 to i32
  %9 = mul nuw nsw i32 %8, 12
  %10 = tail call noalias ptr @vmalloc(i32 noundef %9) #24
  %11 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 4
  store ptr %10, ptr %11, align 16
  %12 = icmp eq ptr %10, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %1
  %14 = load i16, ptr %6, align 8
  %15 = zext i16 %14 to i32
  %16 = shl nuw nsw i32 %15, 4
  %17 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 9
  %18 = add nuw nsw i32 %16, 4095
  %19 = and i32 %18, 2093056
  store i32 %19, ptr %17, align 4
  %20 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 8
  %21 = tail call ptr @dma_alloc_attrs(ptr noundef %5, i32 noundef %19, ptr noundef %20, i32 noundef 3264, i32 noundef 0) #23
  %22 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 5
  store ptr %21, ptr %22, align 4
  %23 = icmp eq ptr %21, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 21
  store i16 0, ptr %25, align 4
  %26 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 19
  store i16 0, ptr %26, align 64
  %27 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 20
  store i16 0, ptr %27, align 2
  %28 = getelementptr i8, ptr %3, i32 1924
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 2
  store ptr %29, ptr %30, align 8
  %31 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 23
  %32 = load ptr, ptr %2, align 4
  %33 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 11
  %34 = load i8, ptr %33, align 2
  %35 = zext i8 %34 to i32
  %36 = tail call i32 @xdp_rxq_info_reg(ptr noundef %31, ptr noundef %32, i32 noundef %35, i32 noundef 0) #23
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %24, %13, %1
  %39 = load ptr, ptr %11, align 16
  tail call void @vfree(ptr noundef %39) #23
  store ptr null, ptr %11, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %5, ptr noundef nonnull @.str.9) #22
  br label %40

40:                                               ; preds = %38, %24
  %41 = phi i32 [ -12, %38 ], [ 0, %24 ]
  ret i32 %41
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_rxq_info_reg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_setup_rctl(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %19, label %5, !prof !9

5:                                                ; preds = %1
  %6 = getelementptr i8, ptr %3, i32 256
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %3) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 64
  store ptr null, ptr %2, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str) #22
  %15 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %16 = load ptr, ptr %15, align 4
  %17 = tail call zeroext i1 @pci_device_is_present(ptr noundef %16) #23
  br i1 %17, label %18, label %19, !prof !9

18:                                               ; preds = %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 256) #23
  br label %19

19:                                               ; preds = %18, %12, %9, %5, %1
  %20 = phi i32 [ -1, %1 ], [ -1, %12 ], [ -1, %18 ], [ -1, %9 ], [ %7, %5 ]
  %21 = and i32 %20, -67350759
  %22 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 7
  %23 = load i32, ptr %22, align 4
  %24 = shl i32 %23, 12
  %25 = and i32 %24, -67342336
  %26 = or i32 %21, %25
  %27 = or i32 %26, 67141666
  %28 = load volatile ptr, ptr %2, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %32, label %30, !prof !9

30:                                               ; preds = %19
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !89
  tail call void @arm_heavy_mb() #23
  %31 = getelementptr i8, ptr %28, i32 10280
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %31, i32 0) #23, !srcloc !14
  br label %32

32:                                               ; preds = %30, %19
  %33 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %34 = load i32, ptr %33, align 16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = load volatile ptr, ptr %2, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %41, label %39, !prof !9

39:                                               ; preds = %36
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !90
  tail call void @arm_heavy_mb() #23
  %40 = getelementptr i8, ptr %37, i32 9224
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %40, i32 65535) #23, !srcloc !14
  br label %41

41:                                               ; preds = %39, %36, %32
  %42 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %43 = load ptr, ptr %42, align 64
  %44 = getelementptr inbounds %struct.net_device, ptr %43, i32 0, i32 23
  %45 = load i64, ptr %44, align 16
  %46 = load volatile ptr, ptr %2, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %55, label %48, !prof !9

48:                                               ; preds = %41
  %49 = and i64 %45, 17592186044416
  %50 = icmp eq i64 %49, 0
  %51 = and i32 %26, -80445671
  %52 = or i32 %51, 75530278
  %53 = select i1 %50, i32 %27, i32 %52
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !91
  tail call void @arm_heavy_mb() #23
  %54 = getelementptr i8, ptr %46, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %54, i32 %53) #23, !srcloc !14
  br label %55

55:                                               ; preds = %48, %41
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_setup_srrctl(ptr noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 12
  %4 = load i8, ptr %3, align 1
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 6
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 1
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %10 = load i32, ptr %9, align 4
  %11 = icmp ugt i32 %10, 2
  %12 = select i1 %11, i32 1107297282, i32 33555458
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %15 = load i32, ptr %14, align 16
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5, i32 5
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %24 = load i32, ptr %23, align 4
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22, %2
  %27 = or i32 %13, -2147483648
  br label %28

28:                                               ; preds = %26, %22, %17
  %29 = phi i32 [ %27, %26 ], [ %13, %17 ], [ %13, %22 ]
  %30 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %31 = load volatile ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %41, label %33, !prof !9

33:                                               ; preds = %28
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !92
  tail call void @arm_heavy_mb() #23
  %34 = icmp ult i8 %4, 4
  %35 = shl nuw nsw i32 %5, 8
  %36 = add nuw nsw i32 %35, 10252
  %37 = shl nuw nsw i32 %5, 6
  %38 = or i32 %37, 49164
  %39 = select i1 %34, i32 %36, i32 %38
  %40 = getelementptr i8, ptr %31, i32 %39
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %40, i32 %29) #23, !srcloc !14
  br label %41

41:                                               ; preds = %33, %28
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_configure_rx_ring(ptr noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 8
  %4 = load i32, ptr %3, align 32
  %5 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 12
  %6 = load i8, ptr %5, align 1
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 23
  tail call void @xdp_rxq_info_unreg_mem_model(ptr noundef %8) #23
  %9 = tail call i32 @xdp_rxq_info_reg_mem_model(ptr noundef %8, i32 noundef 0, ptr noundef null) #23
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !80

11:                                               ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4688, i32 noundef 9, ptr noundef null) #23
  br label %12

12:                                               ; preds = %11, %2
  %13 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %24, label %16, !prof !9

16:                                               ; preds = %12
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !93
  tail call void @arm_heavy_mb() #23
  %17 = icmp ult i8 %6, 4
  %18 = shl nuw nsw i32 %7, 8
  %19 = add nuw nsw i32 %18, 10280
  %20 = shl nuw nsw i32 %7, 6
  %21 = or i32 %20, 49192
  %22 = select i1 %17, i32 %19, i32 %21
  %23 = getelementptr i8, ptr %14, i32 %22
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %23, i32 0) #23, !srcloc !14
  br label %24

24:                                               ; preds = %16, %12
  %25 = load volatile ptr, ptr %13, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %35, label %27, !prof !9

27:                                               ; preds = %24
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !94
  tail call void @arm_heavy_mb() #23
  %28 = icmp ult i8 %6, 4
  %29 = shl nuw nsw i32 %7, 8
  %30 = add nuw nsw i32 %29, 10240
  %31 = shl nuw nsw i32 %7, 6
  %32 = or i32 %31, 49152
  %33 = select i1 %28, i32 %30, i32 %32
  %34 = getelementptr i8, ptr %25, i32 %33
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %34, i32 %4) #23, !srcloc !14
  br label %35

35:                                               ; preds = %27, %24
  %36 = load volatile ptr, ptr %13, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %46, label %38, !prof !9

38:                                               ; preds = %35
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !95
  tail call void @arm_heavy_mb() #23
  %39 = icmp ult i8 %6, 4
  %40 = shl nuw nsw i32 %7, 8
  %41 = add nuw nsw i32 %40, 10244
  %42 = shl nuw nsw i32 %7, 6
  %43 = or i32 %42, 49156
  %44 = select i1 %39, i32 %41, i32 %43
  %45 = getelementptr i8, ptr %36, i32 %44
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %45, i32 0) #23, !srcloc !14
  br label %46

46:                                               ; preds = %38, %35
  %47 = load volatile ptr, ptr %13, align 4
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %52, !prof !9

49:                                               ; preds = %46
  %50 = shl nuw nsw i32 %7, 8
  %51 = shl nuw nsw i32 %7, 6
  br label %64

52:                                               ; preds = %46
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !96
  tail call void @arm_heavy_mb() #23
  %53 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %54 = load i16, ptr %53, align 8
  %55 = zext i16 %54 to i32
  %56 = shl nuw nsw i32 %55, 4
  %57 = icmp ult i8 %6, 4
  %58 = shl nuw nsw i32 %7, 8
  %59 = add nuw nsw i32 %58, 10248
  %60 = shl nuw nsw i32 %7, 6
  %61 = or i32 %60, 49160
  %62 = select i1 %57, i32 %59, i32 %61
  %63 = getelementptr i8, ptr %47, i32 %62
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %63, i32 %56) #23, !srcloc !14
  br label %64

64:                                               ; preds = %52, %49
  %65 = phi i32 [ %51, %49 ], [ %60, %52 ]
  %66 = phi i32 [ %50, %49 ], [ %58, %52 ]
  %67 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 27
  %68 = load ptr, ptr %67, align 4
  %69 = icmp ult i8 %6, 4
  %70 = add nuw nsw i32 %66, 10264
  %71 = or i32 %65, 49176
  %72 = select i1 %69, i32 %70, i32 %71
  %73 = getelementptr i8, ptr %68, i32 %72
  %74 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 7
  store ptr %73, ptr %74, align 4
  %75 = load volatile ptr, ptr %13, align 4
  %76 = icmp eq ptr %75, null
  br i1 %76, label %82, label %77, !prof !9

77:                                               ; preds = %64
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !97
  tail call void @arm_heavy_mb() #23
  %78 = add nuw nsw i32 %66, 10256
  %79 = or i32 %65, 49168
  %80 = select i1 %69, i32 %78, i32 %79
  %81 = getelementptr i8, ptr %75, i32 %80
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %81, i32 0) #23, !srcloc !14
  br label %82

82:                                               ; preds = %77, %64
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !98
  tail call void @arm_heavy_mb() #23
  %83 = load ptr, ptr %74, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %83, i32 0) #23, !srcloc !14
  %84 = load i8, ptr %5, align 1
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 6
  %87 = load volatile i32, ptr %86, align 4
  %88 = and i32 %87, 1
  %89 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %90 = load i32, ptr %89, align 4
  %91 = icmp ugt i32 %90, 2
  %92 = select i1 %91, i32 1107297282, i32 33555458
  %93 = or i32 %92, %88
  %94 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %95 = load i32, ptr %94, align 16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %106

97:                                               ; preds = %82
  %98 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 5, i32 5
  %99 = load i32, ptr %98, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %108

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %104 = load i32, ptr %103, align 4
  %105 = icmp sgt i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102, %82
  %107 = or i32 %93, -2147483648
  br label %108

108:                                              ; preds = %106, %102, %97
  %109 = phi i32 [ %107, %106 ], [ %93, %97 ], [ %93, %102 ]
  %110 = load volatile ptr, ptr %13, align 4
  %111 = icmp eq ptr %110, null
  br i1 %111, label %120, label %112, !prof !9

112:                                              ; preds = %108
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !92
  tail call void @arm_heavy_mb() #23
  %113 = icmp ult i8 %84, 4
  %114 = shl nuw nsw i32 %85, 8
  %115 = add nuw nsw i32 %114, 10252
  %116 = shl nuw nsw i32 %85, 6
  %117 = or i32 %116, 49164
  %118 = select i1 %113, i32 %115, i32 %117
  %119 = getelementptr i8, ptr %110, i32 %118
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %119, i32 %109) #23, !srcloc !14
  br label %120

120:                                              ; preds = %112, %108
  %121 = and i32 %7, 7
  tail call fastcc void @igb_set_vmolr(ptr noundef %0, i32 noundef %121, i1 noundef zeroext true)
  %122 = load i32, ptr %89, align 4
  %123 = icmp eq i32 %122, 5
  %124 = icmp eq i32 %122, 2
  br i1 %124, label %125, label %131

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %127 = load i32, ptr %126, align 4
  %128 = and i32 %127, 8192
  %129 = icmp eq i32 %128, 0
  %130 = select i1 %129, i32 262144, i32 65536
  br label %131

131:                                              ; preds = %125, %120
  %132 = phi i32 [ 262144, %120 ], [ %130, %125 ]
  %133 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 4
  %134 = load ptr, ptr %133, align 16
  %135 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %136 = load i16, ptr %135, align 8
  %137 = zext i16 %136 to i32
  %138 = mul nuw nsw i32 %137, 12
  tail call void @llvm.memset.p0.i32(ptr align 4 %134, i8 0, i32 %138, i1 false)
  %139 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 5
  %140 = load ptr, ptr %139, align 4
  %141 = getelementptr inbounds %struct.anon.197, ptr %140, i32 0, i32 1, i32 1
  store i16 0, ptr %141, align 4
  %142 = load volatile ptr, ptr %13, align 4
  %143 = icmp eq ptr %142, null
  br i1 %143, label %151, label %144, !prof !9

144:                                              ; preds = %131
  %145 = select i1 %123, i32 33556492, i32 33556488
  %146 = or i32 %145, %132
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !99
  tail call void @arm_heavy_mb() #23
  %147 = add nuw nsw i32 %66, 10280
  %148 = or i32 %65, 49192
  %149 = select i1 %69, i32 %147, i32 %148
  %150 = getelementptr i8, ptr %142, i32 %149
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %150, i32 %146) #23, !srcloc !14
  br label %151

151:                                              ; preds = %144, %131
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_rxq_info_unreg_mem_model(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_rxq_info_reg_mem_model(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_set_vmolr(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %50, label %7

7:                                                ; preds = %3
  %8 = shl i32 %1, 2
  %9 = add i32 %8, 23248
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %11 = load volatile ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %29, label %13, !prof !9

13:                                               ; preds = %7
  %14 = getelementptr i8, ptr %11, i32 %9
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %14) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = icmp eq i32 %9, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %17
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %11) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %29

22:                                               ; preds = %19, %17
  %23 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 64
  store ptr null, ptr %10, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %24, ptr noundef nonnull @.str) #22
  %25 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %26 = load ptr, ptr %25, align 4
  %27 = tail call zeroext i1 @pci_device_is_present(ptr noundef %26) #23
  br i1 %27, label %28, label %29, !prof !9

28:                                               ; preds = %22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %9) #23
  br label %29

29:                                               ; preds = %28, %22, %19, %13, %7
  %30 = phi i32 [ -1, %7 ], [ -1, %22 ], [ -1, %28 ], [ -1, %19 ], [ %15, %13 ]
  %31 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %34 = load i32, ptr %33, align 16
  %35 = load volatile ptr, ptr %10, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %50, label %37, !prof !9

37:                                               ; preds = %29
  %38 = icmp ugt i32 %32, 1
  %39 = and i32 %30, -151126017
  %40 = select i1 %2, i32 16777216, i32 0
  %41 = or i32 %39, %40
  %42 = or i32 %41, 131072
  %43 = icmp eq i32 %34, %1
  %44 = select i1 %38, i1 %43, i1 false
  %45 = select i1 %44, i32 %42, i32 %41
  %46 = icmp ult i32 %34, %1
  %47 = or i32 %45, 134217728
  %48 = select i1 %46, i32 %45, i32 %47
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !100
  tail call void @arm_heavy_mb() #23
  %49 = getelementptr i8, ptr %35, i32 %9
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %49, i32 %48) #23, !srcloc !14
  br label %50

50:                                               ; preds = %37, %29, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_free_tx_resources(ptr nocapture noundef %0) local_unnamed_addr #4 {
  tail call fastcc void @igb_clean_tx_ring(ptr noundef %0)
  %2 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 16
  tail call void @vfree(ptr noundef %3) #23
  store ptr null, ptr %2, align 16
  %4 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 5
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 3
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 9
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 8
  %13 = load i32, ptr %12, align 32
  tail call void @dma_free_attrs(ptr noundef %9, i32 noundef %11, ptr noundef nonnull %5, i32 noundef %13, i32 noundef 0) #23
  store ptr null, ptr %4, align 4
  br label %14

14:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_clean_tx_ring(ptr nocapture noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 19
  %3 = load i16, ptr %2, align 64
  %4 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 4
  %5 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 20
  %6 = load i16, ptr %5, align 2
  %7 = icmp eq i16 %3, %6
  br i1 %7, label %69, label %8

8:                                                ; preds = %1
  %9 = load ptr, ptr %4, align 16
  %10 = zext i16 %3 to i32
  %11 = getelementptr %struct.igb_tx_buffer, ptr %9, i32 %10
  %12 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 3
  %13 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 5
  %14 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 10
  br label %15

15:                                               ; preds = %64, %8
  %16 = phi ptr [ %11, %8 ], [ %66, %64 ]
  %17 = phi i16 [ %3, %8 ], [ %65, %64 ]
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds %struct.igb_tx_buffer, ptr %16, i32 0, i32 3
  %20 = load ptr, ptr %19, align 4
  tail call void @__dev_kfree_skb_any(ptr noundef %20, i32 noundef 1) #23
  %21 = load ptr, ptr %12, align 4
  %22 = getelementptr inbounds %struct.igb_tx_buffer, ptr %16, i32 0, i32 7
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.igb_tx_buffer, ptr %16, i32 0, i32 8
  %25 = load i32, ptr %24, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %21, i32 noundef %23, i32 noundef %25, i32 noundef 1, i32 noundef 0) #23
  %26 = load ptr, ptr %16, align 4
  %27 = load ptr, ptr %13, align 4
  %28 = getelementptr %union.e1000_adv_tx_desc, ptr %27, i32 %18
  %29 = icmp eq ptr %28, %26
  br i1 %29, label %55, label %30

30:                                               ; preds = %53, %15
  %31 = phi ptr [ %45, %53 ], [ %28, %15 ]
  %32 = phi ptr [ %44, %53 ], [ %16, %15 ]
  %33 = phi i16 [ %43, %53 ], [ %17, %15 ]
  %34 = getelementptr %struct.igb_tx_buffer, ptr %32, i32 1
  %35 = getelementptr %union.e1000_adv_tx_desc, ptr %31, i32 1
  %36 = add i16 %33, 1
  %37 = load i16, ptr %14, align 8
  %38 = icmp eq i16 %36, %37
  br i1 %38, label %39, label %42, !prof !9

39:                                               ; preds = %30
  %40 = load ptr, ptr %4, align 16
  %41 = load ptr, ptr %13, align 4
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi i16 [ 0, %39 ], [ %36, %30 ]
  %44 = phi ptr [ %40, %39 ], [ %34, %30 ]
  %45 = phi ptr [ %41, %39 ], [ %35, %30 ]
  %46 = getelementptr inbounds %struct.igb_tx_buffer, ptr %44, i32 0, i32 8
  %47 = load i32, ptr %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = load ptr, ptr %12, align 4
  %51 = getelementptr inbounds %struct.igb_tx_buffer, ptr %44, i32 0, i32 7
  %52 = load i32, ptr %51, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %50, i32 noundef %52, i32 noundef %47, i32 noundef 1, i32 noundef 0) #23
  br label %53

53:                                               ; preds = %49, %42
  %54 = icmp eq ptr %45, %26
  br i1 %54, label %55, label %30

55:                                               ; preds = %53, %15
  %56 = phi i16 [ %17, %15 ], [ %43, %53 ]
  %57 = phi ptr [ %16, %15 ], [ %44, %53 ]
  store ptr null, ptr %57, align 4
  %58 = getelementptr %struct.igb_tx_buffer, ptr %57, i32 1
  %59 = add i16 %56, 1
  %60 = load i16, ptr %14, align 8
  %61 = icmp eq i16 %59, %60
  br i1 %61, label %62, label %64, !prof !9

62:                                               ; preds = %55
  %63 = load ptr, ptr %4, align 16
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i16 [ 0, %62 ], [ %59, %55 ]
  %66 = phi ptr [ %63, %62 ], [ %58, %55 ]
  %67 = load i16, ptr %5, align 2
  %68 = icmp eq i16 %65, %67
  br i1 %68, label %69, label %15

69:                                               ; preds = %64, %1
  %70 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 4
  %72 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 11
  %73 = load i8, ptr %72, align 2
  %74 = zext i8 %73 to i32
  %75 = getelementptr inbounds %struct.net_device, ptr %71, i32 0, i32 87
  %76 = load ptr, ptr %75, align 64
  %77 = getelementptr %struct.netdev_queue, ptr %76, i32 %74, i32 12
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %77) #23
  %78 = getelementptr %struct.netdev_queue, ptr %76, i32 %74, i32 14
  tail call void @dql_reset(ptr noundef %78) #23
  store i16 0, ptr %5, align 2
  store i16 0, ptr %2, align 64
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_free_rx_resources(ptr noundef %0) local_unnamed_addr #4 {
  tail call fastcc void @igb_clean_rx_ring(ptr noundef %0)
  %2 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 2
  store ptr null, ptr %2, align 8
  %3 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 23
  tail call void @xdp_rxq_info_unreg(ptr noundef %3) #23
  %4 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 4
  %5 = load ptr, ptr %4, align 16
  tail call void @vfree(ptr noundef %5) #23
  store ptr null, ptr %4, align 16
  %6 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 3
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 9
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 8
  %15 = load i32, ptr %14, align 32
  tail call void @dma_free_attrs(ptr noundef %11, i32 noundef %13, ptr noundef nonnull %7, i32 noundef %15, i32 noundef 0) #23
  store ptr null, ptr %6, align 4
  br label %16

16:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_clean_rx_ring(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 19
  %3 = load i16, ptr %2, align 64
  %4 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 22
  %5 = load ptr, ptr %4, align 8
  tail call void @consume_skb(ptr noundef %5) #23
  store ptr null, ptr %4, align 8
  %6 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 21
  %7 = load i16, ptr %6, align 4
  %8 = icmp eq i16 %3, %7
  br i1 %8, label %51, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 4
  %11 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 3
  %12 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 10
  br label %14

14:                                               ; preds = %32, %9
  %15 = phi i16 [ %3, %9 ], [ %48, %32 ]
  %16 = zext i16 %15 to i32
  %17 = load ptr, ptr %10, align 16
  %18 = getelementptr %struct.igb_rx_buffer, ptr %17, i32 %16
  %19 = load ptr, ptr %11, align 4
  %20 = load i32, ptr %18, align 4
  %21 = getelementptr %struct.igb_rx_buffer, ptr %17, i32 %16, i32 2
  %22 = load i16, ptr %21, align 4
  %23 = zext i16 %22 to i32
  %24 = load volatile i32, ptr %12, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %14
  %28 = load volatile i32, ptr %12, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i32 2048, i32 1534
  br label %32

32:                                               ; preds = %27, %14
  %33 = phi i32 [ 3072, %14 ], [ %31, %27 ]
  %34 = add i32 %20, %23
  tail call void @dma_sync_single_for_cpu(ptr noundef %19, i32 noundef %34, i32 noundef %33, i32 noundef 2) #23
  %35 = load ptr, ptr %11, align 4
  %36 = load i32, ptr %18, align 4
  %37 = load volatile i32, ptr %12, align 4
  %38 = and i32 %37, 1
  %39 = shl nuw nsw i32 4096, %38
  tail call void @dma_unmap_page_attrs(ptr noundef %35, i32 noundef %36, i32 noundef %39, i32 noundef 2, i32 noundef 34) #23
  %40 = getelementptr %struct.igb_rx_buffer, ptr %17, i32 %16, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr %struct.igb_rx_buffer, ptr %17, i32 %16, i32 3
  %43 = load i16, ptr %42, align 2
  %44 = zext i16 %43 to i32
  tail call void @__page_frag_cache_drain(ptr noundef %41, i32 noundef %44) #23
  %45 = add i16 %15, 1
  %46 = load i16, ptr %13, align 8
  %47 = icmp eq i16 %45, %46
  %48 = select i1 %47, i16 0, i16 %45
  %49 = load i16, ptr %6, align 4
  %50 = icmp eq i16 %48, %49
  br i1 %50, label %51, label %14

51:                                               ; preds = %32, %1
  store i16 0, ptr %6, align 4
  store i16 0, ptr %2, align 64
  %52 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 20
  store i16 0, ptr %52, align 2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @igb_has_link(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 12
  %4 = load i32, ptr %3, align 4
  switch i32 %4, label %16 [
    i32 1, label %5
    i32 3, label %9
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 20
  %7 = load i8, ptr %6, align 1, !range !15
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %44, label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4
  %11 = load ptr, ptr %10, align 4
  %12 = tail call i32 %11(ptr noundef %2) #23
  %13 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 20
  %14 = load i8, ptr %13, align 1, !range !15
  %15 = icmp ne i8 %14, 1
  br label %16

16:                                               ; preds = %9, %1
  %17 = phi i1 [ false, %1 ], [ %15, %9 ]
  %18 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, -2
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %22, label %44

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 9
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq i32 %24, 21040128
  br i1 %25, label %26, label %44

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 64
  %29 = getelementptr inbounds %struct.net_device, ptr %28, i32 0, i32 6
  %30 = load volatile i32, ptr %29, align 4
  %31 = and i32 %30, 4
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %34 = load i32, ptr %33, align 4
  br i1 %32, label %37, label %35

35:                                               ; preds = %26
  %36 = and i32 %34, -513
  store i32 %36, ptr %33, align 4
  br label %44

37:                                               ; preds = %26
  %38 = and i32 %34, 512
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = or i32 %34, 512
  store i32 %41, ptr %33, align 4
  %42 = load volatile i32, ptr @jiffies, align 64
  %43 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 83
  store i32 %42, ptr %43, align 16
  br label %44

44:                                               ; preds = %40, %37, %35, %22, %16, %5
  %45 = phi i1 [ true, %5 ], [ %17, %16 ], [ %17, %35 ], [ %17, %40 ], [ %17, %37 ], [ %17, %22 ]
  ret i1 %45
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_xmit_xdp_ring(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.xdp_frame, ptr %2, i32 0, i32 1
  %5 = load i16, ptr %4, align 4
  %6 = zext i16 %5 to i32
  %7 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 19
  %8 = load i16, ptr %7, align 64
  %9 = zext i16 %8 to i32
  %10 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 20
  %11 = load i16, ptr %10, align 2
  %12 = zext i16 %11 to i32
  %13 = icmp ugt i16 %8, %11
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = xor i32 %12, -1
  %16 = add nsw i32 %15, %9
  br label %24

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %19 = load i16, ptr %18, align 8
  %20 = zext i16 %19 to i32
  %21 = xor i32 %12, -1
  %22 = add nsw i32 %21, %9
  %23 = add nsw i32 %22, %20
  br label %24

24:                                               ; preds = %17, %14
  %25 = phi i32 [ %16, %14 ], [ %23, %17 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %199, label %27, !prof !9

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 3
  %29 = load ptr, ptr %28, align 4
  %30 = load ptr, ptr %2, align 4
  %31 = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %30) #23
  %32 = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  %33 = xor i1 %32, true
  %34 = select i1 %31, i1 %33, i1 false
  br i1 %34, label %35, label %44, !prof !9

35:                                               ; preds = %27
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %36 = tail call ptr @dev_driver_string(ptr noundef %29) #23
  %37 = getelementptr inbounds %struct.device, ptr %29, i32 0, i32 3
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = load ptr, ptr %29, align 4
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi ptr [ %41, %40 ], [ %38, %35 ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.155, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.156, ptr noundef %36, ptr noundef %43) #23
  br label %44

44:                                               ; preds = %42, %27
  br i1 %31, label %199, label %45

45:                                               ; preds = %44
  %46 = load ptr, ptr @mem_map, align 4
  %47 = ptrtoint ptr %30 to i32
  %48 = add i32 %47, 1073741824
  %49 = lshr i32 %48, 12
  %50 = getelementptr %struct.page, ptr %46, i32 %49
  %51 = and i32 %47, 4095
  %52 = tail call i32 @dma_map_page_attrs(ptr noundef %29, ptr noundef %50, i32 noundef %51, i32 noundef %6, i32 noundef 1, i32 noundef 0) #23
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %199, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 4
  %56 = load ptr, ptr %55, align 16
  %57 = load i16, ptr %10, align 2
  %58 = zext i16 %57 to i32
  %59 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58
  %60 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 4
  store i32 %6, ptr %60, align 4
  %61 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 5
  store i16 1, ptr %61, align 4
  %62 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 6
  store i16 0, ptr %62, align 2
  %63 = load i16, ptr %10, align 2
  %64 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 5
  %65 = load ptr, ptr %64, align 4
  %66 = zext i16 %63 to i32
  %67 = getelementptr %union.e1000_adv_tx_desc, ptr %65, i32 %66
  %68 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 8
  store i32 %6, ptr %68, align 4
  %69 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 7
  store i32 %52, ptr %69, align 4
  %70 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 2
  store i32 1, ptr %70, align 4
  %71 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 3
  store ptr %2, ptr %71, align 4
  %72 = zext i32 %52 to i64
  store i64 %72, ptr %67, align 8
  %73 = or i32 %6, 724566016
  %74 = getelementptr inbounds %struct.anon.186, ptr %67, i32 0, i32 1
  store i32 %73, ptr %74, align 8
  %75 = shl nuw nsw i32 %6, 14
  %76 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 6
  %77 = load volatile i32, ptr %76, align 4
  %78 = and i32 %77, 16
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %54
  %81 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 12
  %82 = load i8, ptr %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i32 %83, 4
  %85 = or i32 %84, %75
  br label %86

86:                                               ; preds = %80, %54
  %87 = phi i32 [ %85, %80 ], [ %75, %54 ]
  %88 = getelementptr inbounds %struct.anon.186, ptr %67, i32 0, i32 2
  store i32 %87, ptr %88, align 4
  %89 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 1
  %90 = load ptr, ptr %89, align 4
  %91 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 11
  %92 = load i8, ptr %91, align 2
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds %struct.net_device, ptr %90, i32 0, i32 87
  %95 = load ptr, ptr %94, align 64
  %96 = load i32, ptr %60, align 4
  %97 = getelementptr %struct.netdev_queue, ptr %95, i32 %93, i32 14
  %98 = icmp ugt i32 %96, 268435455
  br i1 %98, label %99, label %100, !prof !9

99:                                               ; preds = %86
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/dynamic_queue_limits.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 77, 0\0A.popsection", ""() #23, !srcloc !101
  unreachable

100:                                              ; preds = %86
  %101 = getelementptr %struct.netdev_queue, ptr %95, i32 %93, i32 14, i32 2
  store i32 %96, ptr %101, align 8
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !102
  %102 = load i32, ptr %97, align 64
  %103 = add i32 %102, %96
  store i32 %103, ptr %97, align 64
  %104 = getelementptr %struct.netdev_queue, ptr %95, i32 %93, i32 14, i32 1
  %105 = load volatile i32, ptr %104, align 4
  %106 = load volatile i32, ptr %97, align 64
  %107 = sub i32 %105, %106
  %108 = icmp sgt i32 %107, -1
  br i1 %108, label %116, label %109, !prof !80

109:                                              ; preds = %100
  %110 = getelementptr %struct.netdev_queue, ptr %95, i32 %93, i32 12
  tail call void @_set_bit(i32 noundef 1, ptr noundef %110) #23
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !103
  %111 = load volatile i32, ptr %104, align 4
  %112 = load volatile i32, ptr %97, align 64
  %113 = sub i32 %111, %112
  %114 = icmp sgt i32 %113, -1
  br i1 %114, label %115, label %116, !prof !9

115:                                              ; preds = %109
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %110) #23
  br label %116

116:                                              ; preds = %115, %109, %100
  %117 = load volatile i32, ptr @jiffies, align 64
  %118 = getelementptr %struct.igb_tx_buffer, ptr %56, i32 %58, i32 1
  store i32 %117, ptr %118, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !104
  %119 = add i16 %63, 1
  %120 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %121 = load i16, ptr %120, align 8
  %122 = icmp eq i16 %119, %121
  %123 = select i1 %122, i16 0, i16 %119
  store ptr %67, ptr %59, align 4
  store i16 %123, ptr %10, align 2
  %124 = load i16, ptr %7, align 64
  %125 = zext i16 %124 to i32
  %126 = zext i16 %123 to i32
  %127 = icmp ugt i16 %124, %123
  br i1 %127, label %128, label %131

128:                                              ; preds = %116
  %129 = xor i32 %126, -1
  %130 = add nsw i32 %125, %129
  br label %137

131:                                              ; preds = %116
  %132 = load i16, ptr %120, align 8
  %133 = zext i16 %132 to i32
  %134 = xor i32 %126, -1
  %135 = add nsw i32 %125, %134
  %136 = add nsw i32 %135, %133
  br label %137

137:                                              ; preds = %131, %128
  %138 = phi i32 [ %130, %128 ], [ %136, %131 ]
  %139 = icmp slt i32 %138, 21
  br i1 %139, label %140, label %178

140:                                              ; preds = %137
  %141 = load ptr, ptr %89, align 4
  %142 = load i8, ptr %91, align 2
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds %struct.net_device, ptr %141, i32 0, i32 87
  %145 = load ptr, ptr %144, align 64
  %146 = getelementptr %struct.netdev_queue, ptr %145, i32 %143, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %146) #23
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !105
  %147 = load i16, ptr %7, align 64
  %148 = zext i16 %147 to i32
  %149 = load i16, ptr %10, align 2
  %150 = zext i16 %149 to i32
  %151 = icmp ugt i16 %147, %149
  br i1 %151, label %152, label %155

152:                                              ; preds = %140
  %153 = xor i32 %150, -1
  %154 = add nsw i32 %153, %148
  br label %161

155:                                              ; preds = %140
  %156 = load i16, ptr %120, align 8
  %157 = zext i16 %156 to i32
  %158 = xor i32 %150, -1
  %159 = add nsw i32 %158, %148
  %160 = add nsw i32 %159, %157
  br label %161

161:                                              ; preds = %155, %152
  %162 = phi i32 [ %154, %152 ], [ %160, %155 ]
  %163 = icmp slt i32 %162, 21
  br i1 %163, label %178, label %164

164:                                              ; preds = %161
  %165 = load i8, ptr %91, align 2
  %166 = zext i8 %165 to i32
  %167 = load ptr, ptr %144, align 64
  %168 = getelementptr %struct.netdev_queue, ptr %167, i32 %166
  tail call void @netif_tx_wake_queue(ptr noundef %168) #23
  %169 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 22
  %170 = getelementptr inbounds %struct.anon.190, ptr %169, i32 0, i32 2
  %171 = load i32, ptr %170, align 4
  %172 = add i32 %171, 1
  store i32 %172, ptr %170, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %173 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 22, i32 0, i32 1, i32 2
  %174 = load i64, ptr %173, align 8
  %175 = add i64 %174, 1
  store i64 %175, ptr %173, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %176 = load i32, ptr %170, align 4
  %177 = add i32 %176, 1
  store i32 %177, ptr %170, align 4
  br label %178

178:                                              ; preds = %164, %161, %137
  %179 = load ptr, ptr %89, align 4
  %180 = load i8, ptr %91, align 2
  %181 = zext i8 %180 to i32
  %182 = getelementptr inbounds %struct.net_device, ptr %179, i32 0, i32 87
  %183 = load ptr, ptr %182, align 64
  %184 = getelementptr %struct.netdev_queue, ptr %183, i32 %181, i32 12
  %185 = load i32, ptr %184, align 4
  %186 = and i32 %185, 3
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %196

188:                                              ; preds = %178
  %189 = tail call i32 @llvm.read_register.i32(metadata !0) #23
  %190 = inttoptr i32 %189 to ptr
  %191 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %190) #20, !srcloc !108
  %192 = add i32 %191, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10, i32 1) to i32)
  %193 = inttoptr i32 %192 to ptr
  %194 = load i8, ptr %193, align 1
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %188, %178
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !109
  tail call void @arm_heavy_mb() #23
  %197 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 7
  %198 = load ptr, ptr %197, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %198, i32 %126) #23, !srcloc !14
  br label %199

199:                                              ; preds = %196, %188, %45, %44, %24
  %200 = phi i32 [ 1, %24 ], [ 2, %196 ], [ 2, %188 ], [ 1, %45 ], [ 1, %44 ]
  ret i32 %200
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_xmit_frame_ring(ptr noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = alloca %struct.timespec64, align 8
  %4 = alloca %struct.timespec64, align 8
  %5 = alloca %struct.vlan_hdr, align 4
  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %7 = load i32, ptr %6, align 8
  %8 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %9 = load i32, ptr %8, align 4
  %10 = add i32 %7, 32767
  %11 = sub i32 %10, %9
  %12 = lshr i32 %11, 15
  %13 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 16
  %14 = load i16, ptr %13, align 8
  %15 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 7
  %16 = load i16, ptr %15, align 8
  %17 = zext i16 %16 to i32
  switch i16 %14, label %59 [
    i16 -22392, label %18
    i16 129, label %18
  ]

18:                                               ; preds = %2, %2
  %19 = icmp eq i16 %16, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = icmp ult i16 %16, 4
  br i1 %21, label %22, label %23, !prof !9

22:                                               ; preds = %20
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.158, i32 noundef 598, i32 noundef 9, ptr noundef null) #23
  br label %59

23:                                               ; preds = %20
  %24 = add nsw i32 %17, -4
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i32 [ %24, %23 ], [ 14, %18 ]
  %27 = icmp eq ptr %0, null
  %28 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  br label %29

29:                                               ; preds = %55, %25
  %30 = phi i32 [ %9, %25 ], [ %58, %55 ]
  %31 = phi i32 [ %7, %25 ], [ %57, %55 ]
  %32 = phi i32 [ %26, %25 ], [ %56, %55 ]
  %33 = phi i32 [ 8, %25 ], [ %48, %55 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #23
  store i32 0, ptr %5, align 4, !annotation !24
  %34 = add i32 %32, %30
  %35 = sub i32 %31, %34
  %36 = icmp sgt i32 %35, 3
  br i1 %36, label %37, label %40, !prof !80

37:                                               ; preds = %29
  %38 = load ptr, ptr %28, align 4
  %39 = getelementptr i8, ptr %38, i32 %32
  br label %45

40:                                               ; preds = %29
  br i1 %27, label %51, label %41

41:                                               ; preds = %40
  %42 = call i32 @skb_copy_bits(ptr noundef nonnull %0, i32 noundef %32, ptr noundef nonnull %5, i32 noundef 4) #23
  %43 = icmp slt i32 %42, 0
  %44 = select i1 %43, ptr null, ptr %5, !prof !9
  br label %45

45:                                               ; preds = %41, %37
  %46 = phi ptr [ %39, %37 ], [ %44, %41 ]
  %47 = icmp eq ptr %46, null
  %48 = add nsw i32 %33, -1
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %47, i1 true, i1 %49, !prof !9
  br i1 %50, label %51, label %52, !prof !9

51:                                               ; preds = %45, %40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #23
  br label %59

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.vlan_hdr, ptr %46, i32 0, i32 1
  %54 = load i16, ptr %53, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #23
  switch i16 %54, label %59 [
    i16 -22392, label %55
    i16 129, label %55
  ]

55:                                               ; preds = %52, %52
  %56 = add nsw i32 %32, 4
  %57 = load i32, ptr %6, align 8
  %58 = load i32, ptr %8, align 4
  br label %29

59:                                               ; preds = %52, %51, %22, %2
  %60 = phi i16 [ 0, %22 ], [ %14, %2 ], [ 0, %51 ], [ %54, %52 ]
  %61 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %62 = load ptr, ptr %61, align 4
  %63 = getelementptr inbounds %struct.skb_shared_info, ptr %62, i32 0, i32 2
  %64 = load i8, ptr %63, align 2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %59
  %67 = zext i8 %64 to i32
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i32 [ 0, %66 ], [ %77, %68 ]
  %70 = phi i32 [ %12, %66 ], [ %76, %68 ]
  %71 = getelementptr %struct.skb_shared_info, ptr %62, i32 0, i32 12, i32 %69, i32 1
  %72 = load i32, ptr %71, align 4
  %73 = add i32 %72, 32767
  %74 = lshr i32 %73, 15
  %75 = and i32 %70, 65535
  %76 = add nuw nsw i32 %74, %75
  %77 = add nuw nsw i32 %69, 1
  %78 = icmp eq i32 %77, %67
  br i1 %78, label %79, label %68

79:                                               ; preds = %68, %59
  %80 = phi i32 [ %12, %59 ], [ %76, %68 ]
  %81 = add nsw i32 %80, 3
  %82 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 19
  %83 = load i16, ptr %82, align 64
  %84 = zext i16 %83 to i32
  %85 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 20
  %86 = load i16, ptr %85, align 2
  %87 = zext i16 %86 to i32
  %88 = icmp ugt i16 %83, %86
  br i1 %88, label %89, label %92

89:                                               ; preds = %79
  %90 = xor i32 %87, -1
  %91 = add nsw i32 %90, %84
  br label %99

92:                                               ; preds = %79
  %93 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %94 = load i16, ptr %93, align 8
  %95 = zext i16 %94 to i32
  %96 = xor i32 %87, -1
  %97 = add nsw i32 %96, %84
  %98 = add nsw i32 %97, %95
  br label %99

99:                                               ; preds = %92, %89
  %100 = phi i32 [ %91, %89 ], [ %98, %92 ]
  %101 = and i32 %81, 65535
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %146

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 1
  %105 = load ptr, ptr %104, align 4
  %106 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 11
  %107 = load i8, ptr %106, align 2
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds %struct.net_device, ptr %105, i32 0, i32 87
  %110 = load ptr, ptr %109, align 64
  %111 = getelementptr %struct.netdev_queue, ptr %110, i32 %108, i32 12
  call void @_set_bit(i32 noundef 0, ptr noundef %111) #23
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !105
  %112 = load i16, ptr %82, align 64
  %113 = zext i16 %112 to i32
  %114 = load i16, ptr %85, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp ugt i16 %112, %114
  br i1 %116, label %117, label %120

117:                                              ; preds = %103
  %118 = xor i32 %115, -1
  %119 = add nsw i32 %118, %113
  br label %127

120:                                              ; preds = %103
  %121 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %122 = load i16, ptr %121, align 8
  %123 = zext i16 %122 to i32
  %124 = xor i32 %115, -1
  %125 = add nsw i32 %124, %113
  %126 = add nsw i32 %125, %123
  br label %127

127:                                              ; preds = %120, %117
  %128 = phi i32 [ %119, %117 ], [ %126, %120 ]
  %129 = icmp slt i32 %128, %101
  br i1 %129, label %818, label %130

130:                                              ; preds = %127
  %131 = load i8, ptr %106, align 2
  %132 = zext i8 %131 to i32
  %133 = load ptr, ptr %109, align 64
  %134 = getelementptr %struct.netdev_queue, ptr %133, i32 %132
  call void @netif_tx_wake_queue(ptr noundef %134) #23
  %135 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 22
  %136 = getelementptr inbounds %struct.anon.190, ptr %135, i32 0, i32 2
  %137 = load i32, ptr %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, ptr %136, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %139 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 22, i32 0, i32 1, i32 2
  %140 = load i64, ptr %139, align 8
  %141 = add i64 %140, 1
  store i64 %141, ptr %139, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %142 = load i32, ptr %136, align 4
  %143 = add i32 %142, 1
  store i32 %143, ptr %136, align 4
  %144 = load i16, ptr %85, align 2
  %145 = zext i16 %144 to i32
  br label %146

146:                                              ; preds = %130, %99
  %147 = phi i32 [ %87, %99 ], [ %145, %130 ]
  %148 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 4
  %149 = load ptr, ptr %148, align 16
  %150 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147
  %151 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 2
  store i32 0, ptr %151, align 4
  %152 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 3
  store ptr %0, ptr %152, align 4
  %153 = load i32, ptr %6, align 8
  %154 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 4
  store i32 %153, ptr %154, align 4
  %155 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 5
  store i16 1, ptr %155, align 4
  %156 = load ptr, ptr %61, align 4
  %157 = getelementptr inbounds %struct.skb_shared_info, ptr %156, i32 0, i32 3
  %158 = load i8, ptr %157, align 1
  %159 = and i8 %158, 1
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %197, label %161, !prof !80

161:                                              ; preds = %146
  %162 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 1
  %163 = load ptr, ptr %162, align 4
  %164 = getelementptr i8, ptr %163, i32 4924
  %165 = load i32, ptr %164, align 4
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %193

167:                                              ; preds = %161
  %168 = getelementptr i8, ptr %163, i32 1928
  %169 = load volatile i32, ptr %168, align 4
  %170 = and i32 %169, 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %193

172:                                              ; preds = %167
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %168) #23, !srcloc !110
  %173 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %168, ptr %168, i32 8, ptr elementtype(i32) %168) #23, !srcloc !111
  %174 = extractvalue { i32, i32, i32 } %173, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !112
  %175 = and i32 %174, 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %193

177:                                              ; preds = %172
  %178 = load ptr, ptr %61, align 4
  %179 = getelementptr inbounds %struct.skb_shared_info, ptr %178, i32 0, i32 3
  %180 = load i8, ptr %179, align 1
  %181 = or i8 %180, 4
  store i8 %181, ptr %179, align 1
  %182 = call fastcc ptr @skb_get(ptr noundef %0)
  %183 = getelementptr i8, ptr %163, i32 4916
  store ptr %0, ptr %183, align 4
  %184 = load volatile i32, ptr @jiffies, align 64
  %185 = getelementptr i8, ptr %163, i32 4932
  store i32 %184, ptr %185, align 4
  %186 = getelementptr i8, ptr %163, i32 2592
  %187 = load i32, ptr %186, align 16
  %188 = icmp eq i32 %187, 2
  br i1 %188, label %189, label %197

189:                                              ; preds = %177
  %190 = getelementptr i8, ptr %163, i32 4900
  %191 = load ptr, ptr @system_wq, align 4
  %192 = call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %191, ptr noundef %190) #23
  br label %197

193:                                              ; preds = %172, %167, %161
  %194 = getelementptr i8, ptr %163, i32 5020
  %195 = load i32, ptr %194, align 4
  %196 = add i32 %195, 1
  store i32 %196, ptr %194, align 4
  br label %197

197:                                              ; preds = %193, %189, %177, %146
  %198 = phi i32 [ 0, %146 ], [ 0, %193 ], [ 4, %189 ], [ 4, %177 ]
  %199 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %200 = load i16, ptr %199, align 2
  %201 = and i16 %200, 1
  %202 = icmp eq i16 %201, 0
  br i1 %202, label %210, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 9
  %205 = load i16, ptr %204, align 2
  %206 = zext i16 %205 to i32
  %207 = shl nuw i32 %206, 16
  %208 = or i32 %207, %198
  %209 = or i32 %208, 1
  br label %210

210:                                              ; preds = %203, %197
  %211 = phi i32 [ %209, %203 ], [ %198, %197 ]
  %212 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 9
  store i32 %211, ptr %212, align 4
  %213 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 6
  store i16 %60, ptr %213, align 2
  %214 = load ptr, ptr %152, align 4
  %215 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 13
  %216 = load i16, ptr %215, align 8
  %217 = and i16 %216, 96
  %218 = icmp eq i16 %217, 96
  br i1 %218, label %219, label %401

219:                                              ; preds = %210
  %220 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 15
  %221 = load ptr, ptr %220, align 4
  %222 = getelementptr inbounds %struct.skb_shared_info, ptr %221, i32 0, i32 4
  %223 = load i16, ptr %222, align 4
  %224 = icmp eq i16 %223, 0
  br i1 %224, label %409, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 11
  %227 = load i8, ptr %226, align 2
  %228 = and i8 %227, 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %242, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %struct.skb_shared_info, ptr %221, i32 0, i32 10
  %232 = load volatile i32, ptr %231, align 4
  %233 = and i32 %232, 65535
  %234 = ashr i32 %232, 16
  %235 = sub nsw i32 %233, %234
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %242, label %237

237:                                              ; preds = %230
  %238 = call i32 @pskb_expand_head(ptr noundef %214, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #23
  %239 = icmp slt i32 %238, 0
  br i1 %239, label %800, label %240

240:                                              ; preds = %237
  %241 = load ptr, ptr %220, align 4
  br label %242

242:                                              ; preds = %240, %230, %225
  %243 = phi ptr [ %241, %240 ], [ %221, %225 ], [ %221, %230 ]
  %244 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 16
  %245 = load ptr, ptr %244, align 8
  %246 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 13, i32 0, i32 18
  %247 = load i16, ptr %246, align 4
  %248 = zext i16 %247 to i32
  %249 = getelementptr i8, ptr %245, i32 %248
  %250 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 13, i32 0, i32 4
  %251 = load i16, ptr %250, align 4
  %252 = zext i16 %251 to i32
  %253 = getelementptr i8, ptr %245, i32 %252
  %254 = getelementptr inbounds %struct.skb_shared_info, ptr %243, i32 0, i32 8
  %255 = load i32, ptr %254, align 8
  %256 = lshr i32 %255, 6
  %257 = and i32 %256, 2048
  %258 = xor i32 %257, 2048
  %259 = load i8, ptr %249, align 4
  %260 = and i8 %259, -16
  %261 = icmp eq i8 %260, 64
  br i1 %261, label %262, label %280

262:                                              ; preds = %242
  %263 = shl i8 %259, 2
  %264 = and i8 %263, 60
  %265 = zext i8 %264 to i32
  %266 = getelementptr i8, ptr %249, i32 %265
  %267 = ptrtoint ptr %253 to i32
  %268 = ptrtoint ptr %266 to i32
  %269 = sub i32 %267, %268
  %270 = call i32 @csum_partial(ptr noundef %266, i32 noundef %269, i32 noundef 0) #23
  %271 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %270) #25, !srcloc !113
  %272 = xor i32 %271, -1
  %273 = lshr i32 %272, 16
  %274 = trunc i32 %273 to i16
  %275 = getelementptr inbounds %struct.iphdr, ptr %249, i32 0, i32 7
  store i16 %274, ptr %275, align 2
  %276 = or i32 %258, 1024
  %277 = getelementptr inbounds %struct.iphdr, ptr %249, i32 0, i32 2
  store i16 0, ptr %277, align 2
  %278 = load i32, ptr %212, align 4
  %279 = or i32 %278, 50
  store i32 %279, ptr %212, align 4
  br label %285

280:                                              ; preds = %242
  %281 = getelementptr inbounds %struct.ipv6hdr, ptr %249, i32 0, i32 2
  store i16 0, ptr %281, align 4
  %282 = load i32, ptr %212, align 4
  %283 = or i32 %282, 34
  store i32 %283, ptr %212, align 4
  %284 = ptrtoint ptr %253 to i32
  br label %285

285:                                              ; preds = %280, %262
  %286 = phi i32 [ %284, %280 ], [ %267, %262 ]
  %287 = phi i32 [ %258, %280 ], [ %276, %262 ]
  %288 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 17
  %289 = load ptr, ptr %288, align 4
  %290 = ptrtoint ptr %289 to i32
  %291 = sub i32 %286, %290
  %292 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 5
  %293 = load i32, ptr %292, align 8
  %294 = sub i32 %293, %291
  %295 = icmp eq i32 %258, 0
  br i1 %295, label %314, label %296

296:                                              ; preds = %285
  %297 = getelementptr inbounds %struct.tcphdr, ptr %253, i32 0, i32 4
  %298 = load i16, ptr %297, align 4
  %299 = lshr i16 %298, 2
  %300 = and i16 %299, 60
  %301 = zext i16 %300 to i32
  %302 = add i32 %291, %301
  %303 = trunc i32 %302 to i8
  %304 = getelementptr inbounds %struct.tcphdr, ptr %253, i32 0, i32 6
  %305 = call i32 @llvm.bswap.i32(i32 %294) #23
  %306 = load i16, ptr %304, align 2
  %307 = zext i16 %306 to i32
  %308 = xor i32 %307, -1
  %309 = add i32 %305, %308
  %310 = icmp ult i32 %309, %308
  %311 = zext i1 %310 to i32
  %312 = add i32 %309, %311
  %313 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %312) #25, !srcloc !113
  br label %327

314:                                              ; preds = %285
  %315 = trunc i32 %291 to i8
  %316 = add i8 %315, 8
  %317 = getelementptr inbounds %struct.udphdr, ptr %253, i32 0, i32 3
  %318 = call i32 @llvm.bswap.i32(i32 %294) #23
  %319 = load i16, ptr %317, align 2
  %320 = zext i16 %319 to i32
  %321 = xor i32 %320, -1
  %322 = add i32 %318, %321
  %323 = icmp ult i32 %322, %321
  %324 = zext i1 %323 to i32
  %325 = add i32 %322, %324
  %326 = call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %325) #25, !srcloc !113
  br label %327

327:                                              ; preds = %314, %296
  %328 = phi i8 [ %316, %314 ], [ %303, %296 ]
  %329 = phi i32 [ %326, %314 ], [ %313, %296 ]
  %330 = phi ptr [ %317, %314 ], [ %304, %296 ]
  %331 = xor i32 %329, -1
  %332 = lshr i32 %331, 16
  %333 = trunc i32 %332 to i16
  store i16 %333, ptr %330, align 2
  %334 = load ptr, ptr %220, align 4
  %335 = getelementptr inbounds %struct.skb_shared_info, ptr %334, i32 0, i32 5
  %336 = load i16, ptr %335, align 2
  store i16 %336, ptr %155, align 4
  %337 = zext i16 %336 to i32
  %338 = add nsw i32 %337, -1
  %339 = zext i8 %328 to i32
  %340 = mul nsw i32 %338, %339
  %341 = load i32, ptr %154, align 4
  %342 = add i32 %340, %341
  store i32 %342, ptr %154, align 4
  %343 = sub i32 %339, %291
  %344 = shl i32 %343, 8
  %345 = load ptr, ptr %220, align 4
  %346 = getelementptr inbounds %struct.skb_shared_info, ptr %345, i32 0, i32 4
  %347 = load i16, ptr %346, align 4
  %348 = zext i16 %347 to i32
  %349 = shl nuw i32 %348, 16
  %350 = or i32 %349, %344
  %351 = ptrtoint ptr %249 to i32
  %352 = sub i32 %286, %351
  %353 = load ptr, ptr %288, align 4
  %354 = ptrtoint ptr %353 to i32
  %355 = sub i32 %351, %354
  %356 = shl i32 %355, 9
  %357 = load i32, ptr %212, align 4
  %358 = and i32 %357, -65536
  %359 = or i32 %358, %352
  %360 = or i32 %359, %356
  %361 = load i16, ptr %85, align 2
  %362 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 5
  %363 = load ptr, ptr %362, align 4
  %364 = zext i16 %361 to i32
  %365 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %363, i32 %364
  %366 = add i16 %361, 1
  %367 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %368 = load i16, ptr %367, align 8
  %369 = icmp ult i16 %366, %368
  %370 = select i1 %369, i16 %366, i16 0
  store i16 %370, ptr %85, align 2
  %371 = or i32 %287, 538968064
  %372 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 6
  %373 = load volatile i32, ptr %372, align 4
  %374 = and i32 %373, 16
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %382, label %376

376:                                              ; preds = %327
  %377 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 12
  %378 = load i8, ptr %377, align 1
  %379 = zext i8 %378 to i32
  %380 = shl nuw nsw i32 %379, 4
  %381 = or i32 %380, %350
  br label %382

382:                                              ; preds = %376, %327
  %383 = phi i32 [ %381, %376 ], [ %350, %327 ]
  store i32 %360, ptr %365, align 4
  %384 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %363, i32 %364, i32 2
  store i32 %371, ptr %384, align 4
  %385 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %363, i32 %364, i32 3
  store i32 %383, ptr %385, align 4
  %386 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 13
  %387 = load i8, ptr %386, align 4, !range !15
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %398, label %389

389:                                              ; preds = %382
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #23
  %390 = load ptr, ptr %152, align 4
  %391 = getelementptr inbounds %struct.sk_buff, ptr %390, i32 0, i32 2
  %392 = load i64, ptr %391, align 8
  call void @ns_to_timespec64(ptr nonnull sret(%struct.timespec64) align 8 %4, i64 noundef %392) #23
  %393 = getelementptr inbounds i8, ptr %4, i32 8
  %394 = load i32, ptr %393, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #23
  %395 = load ptr, ptr %152, align 4
  %396 = getelementptr inbounds %struct.sk_buff, ptr %395, i32 0, i32 2
  store i64 0, ptr %396, align 8
  %397 = sdiv i32 %394, 32
  br label %398

398:                                              ; preds = %389, %382
  %399 = phi i32 [ %397, %389 ], [ 0, %382 ]
  %400 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %363, i32 %364, i32 1
  store i32 %399, ptr %400, align 4
  br label %495

401:                                              ; preds = %419, %210
  %402 = phi i32 [ %421, %419 ], [ %211, %210 ]
  %403 = and i32 %402, 1
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %437

405:                                              ; preds = %401
  %406 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 13
  %407 = load i8, ptr %406, align 4, !range !15
  %408 = icmp eq i8 %407, 0
  br i1 %408, label %495, label %437

409:                                              ; preds = %219
  %410 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 13, i32 0, i32 4
  %411 = getelementptr inbounds %struct.anon.58, ptr %410, i32 0, i32 1
  %412 = load i16, ptr %411, align 2
  switch i16 %412, label %419 [
    i16 16, label %413
    i16 6, label %422
    i16 8, label %414
  ]

413:                                              ; preds = %409
  br label %422

414:                                              ; preds = %409
  %415 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 13, i32 0, i32 3
  %416 = load i16, ptr %415, align 2
  %417 = and i16 %416, 16
  %418 = icmp eq i16 %417, 0
  br i1 %418, label %419, label %422

419:                                              ; preds = %414, %409
  %420 = call i32 @skb_checksum_help(ptr noundef %214) #23
  %421 = load i32, ptr %212, align 4
  br label %401

422:                                              ; preds = %414, %413, %409
  %423 = phi i32 [ 0, %409 ], [ 2048, %413 ], [ 4096, %414 ]
  %424 = or i32 %211, 32
  store i32 %424, ptr %212, align 4
  %425 = load i16, ptr %410, align 4
  %426 = zext i16 %425 to i32
  %427 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 16
  %428 = load ptr, ptr %427, align 8
  %429 = ptrtoint ptr %428 to i32
  %430 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 13, i32 0, i32 18
  %431 = load i16, ptr %430, align 4
  %432 = zext i16 %431 to i32
  %433 = getelementptr i8, ptr %428, i32 %432
  %434 = ptrtoint ptr %433 to i32
  %435 = add i32 %429, %426
  %436 = sub i32 %435, %434
  br label %437

437:                                              ; preds = %422, %405, %401
  %438 = phi i32 [ %402, %401 ], [ %402, %405 ], [ %424, %422 ]
  %439 = phi i32 [ 0, %401 ], [ 0, %405 ], [ %436, %422 ]
  %440 = phi i32 [ 0, %401 ], [ 0, %405 ], [ %423, %422 ]
  %441 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 16
  %442 = load ptr, ptr %441, align 8
  %443 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 13, i32 0, i32 18
  %444 = load i16, ptr %443, align 4
  %445 = zext i16 %444 to i32
  %446 = getelementptr i8, ptr %442, i32 %445
  %447 = getelementptr inbounds %struct.sk_buff, ptr %214, i32 0, i32 17
  %448 = load ptr, ptr %447, align 4
  %449 = ptrtoint ptr %446 to i32
  %450 = ptrtoint ptr %448 to i32
  %451 = sub i32 %449, %450
  %452 = shl i32 %451, 9
  %453 = and i32 %438, -65536
  %454 = or i32 %453, %439
  %455 = or i32 %454, %452
  %456 = load i16, ptr %85, align 2
  %457 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 5
  %458 = load ptr, ptr %457, align 4
  %459 = zext i16 %456 to i32
  %460 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %458, i32 %459
  %461 = add i16 %456, 1
  %462 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  %463 = load i16, ptr %462, align 8
  %464 = icmp ult i16 %461, %463
  %465 = select i1 %464, i16 %461, i16 0
  store i16 %465, ptr %85, align 2
  %466 = or i32 %440, 538968064
  %467 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 6
  %468 = load volatile i32, ptr %467, align 4
  %469 = and i32 %468, 16
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %476, label %471

471:                                              ; preds = %437
  %472 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 12
  %473 = load i8, ptr %472, align 1
  %474 = zext i8 %473 to i32
  %475 = shl nuw nsw i32 %474, 4
  br label %476

476:                                              ; preds = %471, %437
  %477 = phi i32 [ %475, %471 ], [ 0, %437 ]
  store i32 %455, ptr %460, align 4
  %478 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %458, i32 %459, i32 2
  store i32 %466, ptr %478, align 4
  %479 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %458, i32 %459, i32 3
  store i32 %477, ptr %479, align 4
  %480 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 13
  %481 = load i8, ptr %480, align 4, !range !15
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %492, label %483

483:                                              ; preds = %476
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #23
  %484 = load ptr, ptr %152, align 4
  %485 = getelementptr inbounds %struct.sk_buff, ptr %484, i32 0, i32 2
  %486 = load i64, ptr %485, align 8
  call void @ns_to_timespec64(ptr nonnull sret(%struct.timespec64) align 8 %3, i64 noundef %486) #23
  %487 = getelementptr inbounds i8, ptr %3, i32 8
  %488 = load i32, ptr %487, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #23
  %489 = load ptr, ptr %152, align 4
  %490 = getelementptr inbounds %struct.sk_buff, ptr %489, i32 0, i32 2
  store i64 0, ptr %490, align 8
  %491 = sdiv i32 %488, 32
  br label %492

492:                                              ; preds = %483, %476
  %493 = phi i32 [ %491, %483 ], [ 0, %476 ]
  %494 = getelementptr %struct.e1000_adv_tx_context_desc, ptr %458, i32 %459, i32 1
  store i32 %493, ptr %494, align 4
  br label %495

495:                                              ; preds = %492, %405, %398
  %496 = phi i8 [ %328, %398 ], [ 0, %405 ], [ 0, %492 ]
  %497 = load ptr, ptr %152, align 4
  %498 = load i32, ptr %212, align 4
  %499 = shl i32 %498, 30
  %500 = shl i32 %498, 17
  %501 = and i32 %500, 524288
  %502 = or i32 %501, %499
  %503 = or i32 %502, 573571072
  %504 = getelementptr inbounds %struct.sk_buff, ptr %497, i32 0, i32 13
  %505 = load i16, ptr %504, align 8
  %506 = lshr i16 %505, 12
  %507 = and i16 %506, 1
  %508 = zext i16 %507 to i32
  %509 = shl nuw nsw i32 %508, 25
  %510 = xor i32 %509, %503
  %511 = load i16, ptr %85, align 2
  %512 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 5
  %513 = load ptr, ptr %512, align 4
  %514 = zext i16 %511 to i32
  %515 = getelementptr %union.e1000_adv_tx_desc, ptr %513, i32 %514
  %516 = getelementptr inbounds %struct.sk_buff, ptr %497, i32 0, i32 5
  %517 = load i32, ptr %516, align 8
  %518 = zext i8 %496 to i32
  %519 = sub i32 %517, %518
  %520 = shl i32 %519, 14
  %521 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 6
  %522 = load volatile i32, ptr %521, align 4
  %523 = and i32 %522, 16
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %531, label %525

525:                                              ; preds = %495
  %526 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 12
  %527 = load i8, ptr %526, align 1
  %528 = zext i8 %527 to i32
  %529 = shl nuw nsw i32 %528, 4
  %530 = or i32 %529, %520
  br label %531

531:                                              ; preds = %525, %495
  %532 = phi i32 [ %530, %525 ], [ %520, %495 ]
  %533 = shl i32 %498, 4
  %534 = and i32 %533, 768
  %535 = or i32 %532, %534
  %536 = getelementptr inbounds %struct.anon.186, ptr %515, i32 0, i32 2
  store i32 %535, ptr %536, align 4
  %537 = load i32, ptr %516, align 8
  %538 = getelementptr inbounds %struct.sk_buff, ptr %497, i32 0, i32 6
  %539 = load i32, ptr %538, align 4
  %540 = sub i32 %537, %539
  %541 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 3
  %542 = load ptr, ptr %541, align 4
  %543 = getelementptr inbounds %struct.sk_buff, ptr %497, i32 0, i32 17
  %544 = load ptr, ptr %543, align 4
  %545 = call zeroext i1 @is_vmalloc_addr(ptr noundef %544) #23
  %546 = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  %547 = xor i1 %546, true
  %548 = select i1 %545, i1 %547, i1 false
  br i1 %548, label %549, label %558, !prof !9

549:                                              ; preds = %531
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %550 = call ptr @dev_driver_string(ptr noundef %542) #23
  %551 = getelementptr inbounds %struct.device, ptr %542, i32 0, i32 3
  %552 = load ptr, ptr %551, align 4
  %553 = icmp eq ptr %552, null
  br i1 %553, label %554, label %556

554:                                              ; preds = %549
  %555 = load ptr, ptr %542, align 4
  br label %556

556:                                              ; preds = %554, %549
  %557 = phi ptr [ %555, %554 ], [ %552, %549 ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.155, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.156, ptr noundef %550, ptr noundef %557) #23
  br label %558

558:                                              ; preds = %556, %531
  br i1 %545, label %756, label %559

559:                                              ; preds = %558
  %560 = load ptr, ptr @mem_map, align 4
  %561 = ptrtoint ptr %544 to i32
  %562 = add i32 %561, 1073741824
  %563 = lshr i32 %562, 12
  %564 = getelementptr %struct.page, ptr %560, i32 %563
  %565 = and i32 %561, 4095
  %566 = call i32 @dma_map_page_attrs(ptr noundef %542, ptr noundef %564, i32 noundef %565, i32 noundef %540, i32 noundef 1, i32 noundef 0) #23
  %567 = getelementptr inbounds %struct.sk_buff, ptr %497, i32 0, i32 15
  %568 = icmp eq i32 %566, -1
  br i1 %568, label %756, label %569

569:                                              ; preds = %559
  %570 = load ptr, ptr %567, align 4
  %571 = getelementptr inbounds %struct.skb_shared_info, ptr %570, i32 0, i32 12
  %572 = or i32 %510, 32768
  %573 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  br label %574

574:                                              ; preds = %620, %569
  %575 = phi i16 [ %511, %569 ], [ %622, %620 ]
  %576 = phi i32 [ %540, %569 ], [ %625, %620 ]
  %577 = phi i32 [ %539, %569 ], [ %626, %620 ]
  %578 = phi i32 [ %566, %569 ], [ %631, %620 ]
  %579 = phi ptr [ %571, %569 ], [ %635, %620 ]
  %580 = phi ptr [ %515, %569 ], [ %621, %620 ]
  %581 = phi ptr [ %150, %569 ], [ %634, %620 ]
  %582 = getelementptr inbounds %struct.igb_tx_buffer, ptr %581, i32 0, i32 8
  store i32 %576, ptr %582, align 4
  %583 = getelementptr inbounds %struct.igb_tx_buffer, ptr %581, i32 0, i32 7
  store i32 %578, ptr %583, align 4
  %584 = zext i32 %578 to i64
  store i64 %584, ptr %580, align 8
  %585 = icmp ugt i32 %576, 32768
  br i1 %585, label %586, label %606, !prof !9

586:                                              ; preds = %598, %574
  %587 = phi i16 [ %600, %598 ], [ %575, %574 ]
  %588 = phi i32 [ %603, %598 ], [ %576, %574 ]
  %589 = phi i32 [ %602, %598 ], [ %578, %574 ]
  %590 = phi ptr [ %599, %598 ], [ %580, %574 ]
  %591 = getelementptr inbounds %struct.anon.186, ptr %590, i32 0, i32 1
  store i32 %572, ptr %591, align 8
  %592 = add i16 %587, 1
  %593 = getelementptr %union.e1000_adv_tx_desc, ptr %590, i32 1
  %594 = load i16, ptr %573, align 8
  %595 = icmp eq i16 %592, %594
  br i1 %595, label %596, label %598

596:                                              ; preds = %586
  %597 = load ptr, ptr %512, align 4
  br label %598

598:                                              ; preds = %596, %586
  %599 = phi ptr [ %597, %596 ], [ %593, %586 ]
  %600 = phi i16 [ 0, %596 ], [ %592, %586 ]
  %601 = getelementptr inbounds %struct.anon.186, ptr %599, i32 0, i32 2
  store i32 0, ptr %601, align 4
  %602 = add i32 %589, 32768
  %603 = add i32 %588, -32768
  %604 = zext i32 %602 to i64
  store i64 %604, ptr %599, align 8
  %605 = icmp ugt i32 %603, 32768
  br i1 %605, label %586, label %606, !prof !9

606:                                              ; preds = %598, %574
  %607 = phi ptr [ %580, %574 ], [ %599, %598 ]
  %608 = phi i32 [ %576, %574 ], [ %603, %598 ]
  %609 = phi i16 [ %575, %574 ], [ %600, %598 ]
  %610 = icmp eq i32 %577, 0
  br i1 %610, label %637, label %611, !prof !80

611:                                              ; preds = %606
  %612 = xor i32 %608, %510
  %613 = getelementptr inbounds %struct.anon.186, ptr %607, i32 0, i32 1
  store i32 %612, ptr %613, align 8
  %614 = add i16 %609, 1
  %615 = getelementptr %union.e1000_adv_tx_desc, ptr %607, i32 1
  %616 = load i16, ptr %573, align 8
  %617 = icmp eq i16 %614, %616
  br i1 %617, label %618, label %620

618:                                              ; preds = %611
  %619 = load ptr, ptr %512, align 4
  br label %620

620:                                              ; preds = %618, %611
  %621 = phi ptr [ %619, %618 ], [ %615, %611 ]
  %622 = phi i16 [ 0, %618 ], [ %614, %611 ]
  %623 = getelementptr inbounds %struct.anon.186, ptr %621, i32 0, i32 2
  store i32 0, ptr %623, align 4
  %624 = getelementptr inbounds %struct.bio_vec, ptr %579, i32 0, i32 1
  %625 = load i32, ptr %624, align 4
  %626 = sub i32 %577, %625
  %627 = load ptr, ptr %541, align 4
  %628 = load ptr, ptr %579, align 4
  %629 = getelementptr inbounds %struct.bio_vec, ptr %579, i32 0, i32 2
  %630 = load i32, ptr %629, align 4
  %631 = call i32 @dma_map_page_attrs(ptr noundef %627, ptr noundef %628, i32 noundef %630, i32 noundef %625, i32 noundef 1, i32 noundef 0) #23
  %632 = load ptr, ptr %148, align 16
  %633 = zext i16 %622 to i32
  %634 = getelementptr %struct.igb_tx_buffer, ptr %632, i32 %633
  %635 = getelementptr %struct.bio_vec, ptr %579, i32 1
  %636 = icmp eq i32 %631, -1
  br i1 %636, label %756, label %574

637:                                              ; preds = %606
  %638 = or i32 %510, %608
  %639 = or i32 %638, 150994944
  %640 = getelementptr inbounds %struct.anon.186, ptr %607, i32 0, i32 1
  store i32 %639, ptr %640, align 8
  %641 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 1
  %642 = load ptr, ptr %641, align 4
  %643 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 11
  %644 = load i8, ptr %643, align 2
  %645 = zext i8 %644 to i32
  %646 = getelementptr inbounds %struct.net_device, ptr %642, i32 0, i32 87
  %647 = load ptr, ptr %646, align 64
  %648 = load i32, ptr %154, align 4
  %649 = getelementptr %struct.netdev_queue, ptr %647, i32 %645, i32 14
  %650 = icmp ugt i32 %648, 268435455
  br i1 %650, label %651, label %652, !prof !9

651:                                              ; preds = %637
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/dynamic_queue_limits.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 77, 0\0A.popsection", ""() #23, !srcloc !101
  unreachable

652:                                              ; preds = %637
  %653 = getelementptr %struct.netdev_queue, ptr %647, i32 %645, i32 14, i32 2
  store i32 %648, ptr %653, align 8
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !102
  %654 = load i32, ptr %649, align 64
  %655 = add i32 %654, %648
  store i32 %655, ptr %649, align 64
  %656 = getelementptr %struct.netdev_queue, ptr %647, i32 %645, i32 14, i32 1
  %657 = load volatile i32, ptr %656, align 4
  %658 = load volatile i32, ptr %649, align 64
  %659 = sub i32 %657, %658
  %660 = icmp sgt i32 %659, -1
  br i1 %660, label %668, label %661, !prof !80

661:                                              ; preds = %652
  %662 = getelementptr %struct.netdev_queue, ptr %647, i32 %645, i32 12
  call void @_set_bit(i32 noundef 1, ptr noundef %662) #23
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !103
  %663 = load volatile i32, ptr %656, align 4
  %664 = load volatile i32, ptr %649, align 64
  %665 = sub i32 %663, %664
  %666 = icmp sgt i32 %665, -1
  br i1 %666, label %667, label %668, !prof !9

667:                                              ; preds = %661
  call void @_clear_bit(i32 noundef 1, ptr noundef %662) #23
  br label %668

668:                                              ; preds = %667, %661, %652
  %669 = load volatile i32, ptr @jiffies, align 64
  %670 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 1
  store i32 %669, ptr %670, align 4
  %671 = load ptr, ptr %567, align 4
  %672 = getelementptr inbounds %struct.skb_shared_info, ptr %671, i32 0, i32 3
  %673 = load i8, ptr %672, align 1
  %674 = and i8 %673, 2
  %675 = icmp eq i8 %674, 0
  br i1 %675, label %677, label %676

676:                                              ; preds = %668
  call void @skb_tstamp_tx(ptr noundef %497, ptr noundef null) #23
  br label %677

677:                                              ; preds = %676, %668
  call void asm sideeffect "dmb oshst", "~{memory}"() #23, !srcloc !114
  store ptr %607, ptr %150, align 4
  %678 = add i16 %609, 1
  %679 = load i16, ptr %573, align 8
  %680 = icmp eq i16 %678, %679
  %681 = select i1 %680, i16 0, i16 %678
  store i16 %681, ptr %85, align 2
  %682 = load i16, ptr %82, align 64
  %683 = zext i16 %682 to i32
  %684 = zext i16 %681 to i32
  %685 = icmp ugt i16 %682, %681
  br i1 %685, label %686, label %689

686:                                              ; preds = %677
  %687 = xor i32 %684, -1
  %688 = add nsw i32 %687, %683
  br label %694

689:                                              ; preds = %677
  %690 = zext i16 %679 to i32
  %691 = xor i32 %684, -1
  %692 = add nuw nsw i32 %683, %690
  %693 = add nsw i32 %692, %691
  br label %694

694:                                              ; preds = %689, %686
  %695 = phi i32 [ %688, %686 ], [ %693, %689 ]
  %696 = icmp slt i32 %695, 21
  br i1 %696, label %697, label %735

697:                                              ; preds = %694
  %698 = load ptr, ptr %641, align 4
  %699 = load i8, ptr %643, align 2
  %700 = zext i8 %699 to i32
  %701 = getelementptr inbounds %struct.net_device, ptr %698, i32 0, i32 87
  %702 = load ptr, ptr %701, align 64
  %703 = getelementptr %struct.netdev_queue, ptr %702, i32 %700, i32 12
  call void @_set_bit(i32 noundef 0, ptr noundef %703) #23
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !105
  %704 = load i16, ptr %82, align 64
  %705 = zext i16 %704 to i32
  %706 = load i16, ptr %85, align 2
  %707 = zext i16 %706 to i32
  %708 = icmp ugt i16 %704, %706
  br i1 %708, label %709, label %712

709:                                              ; preds = %697
  %710 = xor i32 %707, -1
  %711 = add nsw i32 %710, %705
  br label %718

712:                                              ; preds = %697
  %713 = load i16, ptr %573, align 8
  %714 = zext i16 %713 to i32
  %715 = xor i32 %707, -1
  %716 = add nsw i32 %715, %705
  %717 = add nsw i32 %716, %714
  br label %718

718:                                              ; preds = %712, %709
  %719 = phi i32 [ %711, %709 ], [ %717, %712 ]
  %720 = icmp slt i32 %719, 21
  br i1 %720, label %735, label %721

721:                                              ; preds = %718
  %722 = load i8, ptr %643, align 2
  %723 = zext i8 %722 to i32
  %724 = load ptr, ptr %701, align 64
  %725 = getelementptr %struct.netdev_queue, ptr %724, i32 %723
  call void @netif_tx_wake_queue(ptr noundef %725) #23
  %726 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 22
  %727 = getelementptr inbounds %struct.anon.190, ptr %726, i32 0, i32 2
  %728 = load i32, ptr %727, align 4
  %729 = add i32 %728, 1
  store i32 %729, ptr %727, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %730 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 22, i32 0, i32 1, i32 2
  %731 = load i64, ptr %730, align 8
  %732 = add i64 %731, 1
  store i64 %732, ptr %730, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %733 = load i32, ptr %727, align 4
  %734 = add i32 %733, 1
  store i32 %734, ptr %727, align 4
  br label %735

735:                                              ; preds = %721, %718, %694
  %736 = load ptr, ptr %641, align 4
  %737 = load i8, ptr %643, align 2
  %738 = zext i8 %737 to i32
  %739 = getelementptr inbounds %struct.net_device, ptr %736, i32 0, i32 87
  %740 = load ptr, ptr %739, align 64
  %741 = getelementptr %struct.netdev_queue, ptr %740, i32 %738, i32 12
  %742 = load i32, ptr %741, align 4
  %743 = and i32 %742, 3
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %753

745:                                              ; preds = %735
  %746 = call i32 @llvm.read_register.i32(metadata !0) #23
  %747 = inttoptr i32 %746 to ptr
  %748 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %747) #20, !srcloc !108
  %749 = add i32 %748, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10, i32 1) to i32)
  %750 = inttoptr i32 %749 to ptr
  %751 = load i8, ptr %750, align 1
  %752 = icmp eq i8 %751, 0
  br i1 %752, label %753, label %818

753:                                              ; preds = %745, %735
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !115
  call void @arm_heavy_mb() #23
  %754 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 7
  %755 = load ptr, ptr %754, align 4
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %755, i32 %684) #23, !srcloc !14
  br label %818

756:                                              ; preds = %620, %559, %558
  %757 = phi i32 [ %514, %559 ], [ %514, %558 ], [ %633, %620 ]
  %758 = phi i16 [ %511, %559 ], [ %511, %558 ], [ %622, %620 ]
  %759 = load ptr, ptr %541, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %759, ptr noundef nonnull @.str.159) #22
  %760 = load ptr, ptr %148, align 16
  %761 = getelementptr %struct.igb_tx_buffer, ptr %760, i32 %757
  %762 = icmp eq ptr %761, %150
  br i1 %762, label %787, label %763

763:                                              ; preds = %756
  %764 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 10
  br label %765

765:                                              ; preds = %781, %763
  %766 = phi i16 [ %758, %763 ], [ %782, %781 ]
  %767 = phi ptr [ %761, %763 ], [ %785, %781 ]
  %768 = getelementptr inbounds %struct.igb_tx_buffer, ptr %767, i32 0, i32 8
  %769 = load i32, ptr %768, align 4
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %775, label %771

771:                                              ; preds = %765
  %772 = load ptr, ptr %541, align 4
  %773 = getelementptr inbounds %struct.igb_tx_buffer, ptr %767, i32 0, i32 7
  %774 = load i32, ptr %773, align 4
  call void @dma_unmap_page_attrs(ptr noundef %772, i32 noundef %774, i32 noundef %769, i32 noundef 1, i32 noundef 0) #23
  br label %775

775:                                              ; preds = %771, %765
  store i32 0, ptr %768, align 4
  %776 = add i16 %766, -1
  %777 = icmp eq i16 %766, 0
  br i1 %777, label %778, label %781

778:                                              ; preds = %775
  %779 = load i16, ptr %764, align 8
  %780 = add i16 %779, %776
  br label %781

781:                                              ; preds = %778, %775
  %782 = phi i16 [ %780, %778 ], [ %776, %775 ]
  %783 = load ptr, ptr %148, align 16
  %784 = zext i16 %782 to i32
  %785 = getelementptr %struct.igb_tx_buffer, ptr %783, i32 %784
  %786 = icmp eq ptr %785, %150
  br i1 %786, label %787, label %765

787:                                              ; preds = %781, %756
  %788 = phi i16 [ %758, %756 ], [ %782, %781 ]
  %789 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 8
  %790 = load i32, ptr %789, align 4
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %796, label %792

792:                                              ; preds = %787
  %793 = load ptr, ptr %541, align 4
  %794 = getelementptr %struct.igb_tx_buffer, ptr %149, i32 %147, i32 7
  %795 = load i32, ptr %794, align 4
  call void @dma_unmap_page_attrs(ptr noundef %793, i32 noundef %795, i32 noundef %790, i32 noundef 1, i32 noundef 0) #23
  br label %796

796:                                              ; preds = %792, %787
  store i32 0, ptr %789, align 4
  %797 = load ptr, ptr %152, align 4
  call void @__dev_kfree_skb_any(ptr noundef %797, i32 noundef 1) #23
  store ptr null, ptr %152, align 4
  store i16 %788, ptr %85, align 2
  %798 = and i32 %211, 4
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %818, label %804, !prof !116

800:                                              ; preds = %237
  %801 = load ptr, ptr %152, align 4
  call void @__dev_kfree_skb_any(ptr noundef %801, i32 noundef 1) #23
  store ptr null, ptr %152, align 4
  %802 = and i32 %211, 4
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %818, label %804, !prof !80

804:                                              ; preds = %800, %796
  %805 = getelementptr inbounds %struct.igb_ring, ptr %1, i32 0, i32 1
  %806 = load ptr, ptr %805, align 4
  %807 = getelementptr i8, ptr %806, i32 4916
  %808 = load ptr, ptr %807, align 4
  call void @__dev_kfree_skb_any(ptr noundef %808, i32 noundef 1) #23
  store ptr null, ptr %807, align 4
  %809 = getelementptr i8, ptr %806, i32 2592
  %810 = load i32, ptr %809, align 16
  %811 = icmp eq i32 %810, 2
  br i1 %811, label %812, label %815

812:                                              ; preds = %804
  %813 = getelementptr i8, ptr %806, i32 4900
  %814 = call zeroext i1 @cancel_work_sync(ptr noundef %813) #23
  br label %815

815:                                              ; preds = %812, %804
  %816 = getelementptr i8, ptr %806, i32 1928
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !117
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %816) #23, !srcloc !110
  %817 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %816, ptr %816, i32 8, ptr elementtype(i32) %816) #23, !srcloc !118
  br label %818

818:                                              ; preds = %815, %800, %796, %753, %745, %127
  %819 = phi i32 [ 0, %796 ], [ 0, %815 ], [ 0, %800 ], [ 16, %127 ], [ 0, %753 ], [ 0, %745 ]
  ret i32 %819
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @skb_get(ptr noundef returned %0) unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 19
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #23, !srcloc !110
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 1, ptr elementtype(i32) %2) #23, !srcloc !119
  %4 = extractvalue { i32, i32, i32 } %3, 0
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6, !prof !9

6:                                                ; preds = %1
  %7 = add i32 %4, 1
  %8 = or i32 %7, %4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %12, label %10, !prof !80

10:                                               ; preds = %6, %1
  %11 = phi i32 [ 2, %1 ], [ 1, %6 ]
  tail call void @refcount_warn_saturate(ptr noundef %2, i32 noundef %11) #23
  br label %12

12:                                               ; preds = %10, %6
  ret ptr %0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_work_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_add_mac_steering_filter(ptr noundef %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #4 {
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %6 = load i32, ptr %5, align 4
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %8, label %61

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 12
  %10 = load i16, ptr %9, align 4
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %13 = load i32, ptr %12, align 16
  %14 = sub i32 %11, %13
  %15 = load i32, ptr %1, align 4
  %16 = getelementptr i8, ptr %1, i32 4
  %17 = load i16, ptr %16, align 2
  %18 = zext i16 %17 to i32
  %19 = or i32 %15, %18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %61, label %21

21:                                               ; preds = %8
  %22 = icmp sgt i32 %14, 0
  br i1 %22, label %23, label %61

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  %25 = load ptr, ptr %24, align 64
  %26 = and i8 %3, 4
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %58, %23
  %29 = phi i32 [ 0, %23 ], [ %59, %58 ]
  %30 = getelementptr %struct.igb_mac_addr, ptr %25, i32 %29
  %31 = getelementptr %struct.igb_mac_addr, ptr %25, i32 %29, i32 2
  %32 = load i8, ptr %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %28
  %37 = and i32 %33, 4
  %38 = icmp eq i32 %37, %27
  br i1 %38, label %39, label %58

39:                                               ; preds = %36
  %40 = load i32, ptr %30, align 4
  %41 = xor i32 %40, %15
  %42 = getelementptr i8, ptr %30, i32 4
  %43 = load i16, ptr %42, align 2
  %44 = xor i16 %43, %17
  %45 = zext i16 %44 to i32
  %46 = or i32 %41, %45
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %39, %28
  store i32 %15, ptr %30, align 4
  %49 = load i16, ptr %16, align 2
  %50 = getelementptr i8, ptr %30, i32 4
  store i16 %49, ptr %50, align 2
  %51 = load ptr, ptr %24, align 64
  %52 = getelementptr %struct.igb_mac_addr, ptr %51, i32 %29, i32 1
  store i8 %2, ptr %52, align 1
  %53 = load ptr, ptr %24, align 64
  %54 = getelementptr %struct.igb_mac_addr, ptr %53, i32 %29, i32 2
  %55 = load i8, ptr %54, align 1
  %56 = or i8 %55, %3
  %57 = or i8 %56, 10
  store i8 %57, ptr %54, align 1
  tail call fastcc void @igb_rar_set_index(ptr noundef %0, i32 noundef %29) #23
  br label %61

58:                                               ; preds = %39, %36
  %59 = add nuw nsw i32 %29, 1
  %60 = icmp eq i32 %59, %14
  br i1 %60, label %61, label %28

61:                                               ; preds = %58, %48, %21, %8, %4
  %62 = phi i32 [ -95, %4 ], [ %29, %48 ], [ -22, %8 ], [ -28, %21 ], [ -28, %58 ]
  ret i32 %62
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_del_mac_steering_filter(ptr noundef %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #4 {
  %5 = or i8 %3, 8
  %6 = tail call fastcc i32 @igb_del_mac_filter_flags(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, i8 noundef zeroext %5)
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_del_mac_filter_flags(ptr noundef %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2, i8 noundef zeroext %3) unnamed_addr #4 {
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 12
  %6 = load i16, ptr %5, align 4
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %9 = load i32, ptr %8, align 16
  %10 = sub i32 %7, %9
  %11 = load i32, ptr %1, align 4
  %12 = getelementptr i8, ptr %1, i32 4
  %13 = load i16, ptr %12, align 2
  %14 = zext i16 %13 to i32
  %15 = or i32 %11, %14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %4
  %18 = icmp sgt i32 %10, 0
  br i1 %18, label %19, label %60

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  %21 = load ptr, ptr %20, align 64
  %22 = or i8 %3, 2
  br label %23

23:                                               ; preds = %57, %19
  %24 = phi i32 [ 0, %19 ], [ %58, %57 ]
  %25 = getelementptr %struct.igb_mac_addr, ptr %21, i32 %24
  %26 = getelementptr %struct.igb_mac_addr, ptr %21, i32 %24, i32 2
  %27 = load i8, ptr %26, align 1
  %28 = and i8 %27, %22
  %29 = icmp eq i8 %28, %22
  br i1 %29, label %30, label %57

30:                                               ; preds = %23
  %31 = getelementptr %struct.igb_mac_addr, ptr %21, i32 %24, i32 1
  %32 = load i8, ptr %31, align 1
  %33 = icmp eq i8 %32, %2
  br i1 %33, label %34, label %57

34:                                               ; preds = %30
  %35 = load i32, ptr %25, align 4
  %36 = xor i32 %35, %11
  %37 = getelementptr i8, ptr %25, i32 4
  %38 = load i16, ptr %37, align 2
  %39 = xor i16 %38, %13
  %40 = zext i16 %39 to i32
  %41 = or i32 %36, %40
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %34
  %44 = and i8 %27, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  store i8 3, ptr %26, align 1
  %47 = load i32, ptr %8, align 16
  %48 = trunc i32 %47 to i8
  %49 = load ptr, ptr %20, align 64
  %50 = getelementptr %struct.igb_mac_addr, ptr %49, i32 %24, i32 1
  store i8 %48, ptr %50, align 1
  br label %56

51:                                               ; preds = %43
  store i8 0, ptr %26, align 1
  %52 = load ptr, ptr %20, align 64
  %53 = getelementptr %struct.igb_mac_addr, ptr %52, i32 %24, i32 1
  store i8 0, ptr %53, align 1
  %54 = load ptr, ptr %20, align 64
  %55 = getelementptr %struct.igb_mac_addr, ptr %54, i32 %24
  tail call void @llvm.memset.p0.i32(ptr noundef align 1 dereferenceable(6) %55, i8 0, i32 6, i1 false) #23
  br label %56

56:                                               ; preds = %51, %46
  tail call fastcc void @igb_rar_set_index(ptr noundef %0, i32 noundef %24)
  br label %60

57:                                               ; preds = %34, %30, %23
  %58 = add nuw nsw i32 %24, 1
  %59 = icmp eq i32 %58, %10
  br i1 %59, label %60, label %23

60:                                               ; preds = %57, %56, %17, %4
  %61 = phi i32 [ 0, %56 ], [ -22, %4 ], [ -2, %17 ], [ -2, %57 ]
  ret i32 %61
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_alloc_rx_buffers(ptr noundef %0, i16 noundef zeroext %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 20
  %4 = icmp eq i16 %1, 0
  br i1 %4, label %104, label %5

5:                                                ; preds = %2
  %6 = load i16, ptr %3, align 2
  %7 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 5
  %8 = load ptr, ptr %7, align 4
  %9 = zext i16 %6 to i32
  %10 = getelementptr %union.e1000_adv_rx_desc, ptr %8, i32 %9
  %11 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 4
  %12 = load ptr, ptr %11, align 16
  %13 = getelementptr %struct.igb_rx_buffer, ptr %12, i32 %9
  %14 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 10
  %15 = load i16, ptr %14, align 8
  %16 = sub i16 %6, %15
  %17 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 6
  %18 = load volatile i32, ptr %17, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %5
  %22 = load volatile i32, ptr %17, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %24, i32 2048, i32 1534
  br label %26

26:                                               ; preds = %21, %5
  %27 = phi i32 [ 3072, %5 ], [ %25, %21 ]
  %28 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 3
  br label %29

29:                                               ; preds = %82, %26
  %30 = phi i16 [ %1, %26 ], [ %87, %82 ]
  %31 = phi ptr [ %10, %26 ], [ %83, %82 ]
  %32 = phi ptr [ %13, %26 ], [ %84, %82 ]
  %33 = phi i16 [ %16, %26 ], [ %85, %82 ]
  %34 = getelementptr inbounds %struct.igb_rx_buffer, ptr %32, i32 0, i32 1
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %61, !prof !9

37:                                               ; preds = %29
  %38 = load volatile i32, ptr %17, align 4
  %39 = and i32 %38, 1
  %40 = tail call ptr @__alloc_pages(i32 noundef 404000, i32 noundef %39, i32 noundef 0, ptr noundef null) #23
  %41 = icmp eq ptr %40, null
  br i1 %41, label %89, label %42, !prof !9

42:                                               ; preds = %37
  %43 = load ptr, ptr %28, align 4
  %44 = load volatile i32, ptr %17, align 4
  %45 = and i32 %44, 1
  %46 = shl nuw nsw i32 4096, %45
  %47 = tail call i32 @dma_map_page_attrs(ptr noundef %43, ptr noundef nonnull %40, i32 noundef 0, i32 noundef %46, i32 noundef 2, i32 noundef 34) #23
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = load volatile i32, ptr %17, align 4
  %51 = and i32 %50, 1
  tail call void @__free_pages(ptr noundef nonnull %40, i32 noundef %51) #23
  br label %89

52:                                               ; preds = %42
  store i32 %47, ptr %32, align 4
  store ptr %40, ptr %34, align 4
  %53 = load volatile i32, ptr %17, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %55, i16 0, i16 258
  %57 = getelementptr inbounds %struct.igb_rx_buffer, ptr %32, i32 0, i32 2
  store i16 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.page, ptr %40, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %58) #23, !srcloc !110
  %59 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %58, ptr %58, i32 65534, ptr elementtype(i32) %58) #23, !srcloc !120
  %60 = getelementptr inbounds %struct.igb_rx_buffer, ptr %32, i32 0, i32 3
  store i16 -1, ptr %60, align 2
  br label %61

61:                                               ; preds = %52, %29
  %62 = load ptr, ptr %28, align 4
  %63 = load i32, ptr %32, align 4
  %64 = getelementptr inbounds %struct.igb_rx_buffer, ptr %32, i32 0, i32 2
  %65 = load i16, ptr %64, align 4
  %66 = zext i16 %65 to i32
  %67 = add i32 %63, %66
  tail call void @dma_sync_single_for_device(ptr noundef %62, i32 noundef %67, i32 noundef %27, i32 noundef 2) #23
  %68 = load i32, ptr %32, align 4
  %69 = load i16, ptr %64, align 4
  %70 = zext i16 %69 to i32
  %71 = add i32 %68, %70
  %72 = zext i32 %71 to i64
  store i64 %72, ptr %31, align 8
  %73 = getelementptr %union.e1000_adv_rx_desc, ptr %31, i32 1
  %74 = getelementptr %struct.igb_rx_buffer, ptr %32, i32 1
  %75 = add i16 %33, 1
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %82, !prof !9

77:                                               ; preds = %61
  %78 = load ptr, ptr %7, align 4
  %79 = load ptr, ptr %11, align 16
  %80 = load i16, ptr %14, align 8
  %81 = sub i16 0, %80
  br label %82

82:                                               ; preds = %77, %61
  %83 = phi ptr [ %78, %77 ], [ %73, %61 ]
  %84 = phi ptr [ %79, %77 ], [ %74, %61 ]
  %85 = phi i16 [ %81, %77 ], [ %75, %61 ]
  %86 = getelementptr inbounds %struct.anon.197, ptr %83, i32 0, i32 1, i32 1
  store i16 0, ptr %86, align 4
  %87 = add i16 %30, -1
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %93, label %29

89:                                               ; preds = %49, %37
  %90 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 22, i32 0, i32 1, i32 4
  %91 = load i64, ptr %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, ptr %90, align 8
  br label %93

93:                                               ; preds = %89, %82
  %94 = phi i16 [ %33, %89 ], [ %85, %82 ]
  %95 = load i16, ptr %14, align 8
  %96 = add i16 %95, %94
  %97 = load i16, ptr %3, align 2
  %98 = icmp eq i16 %97, %96
  br i1 %98, label %104, label %99

99:                                               ; preds = %93
  %100 = zext i16 %96 to i32
  store i16 %96, ptr %3, align 2
  %101 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 21
  store i16 %96, ptr %101, align 4
  tail call void asm sideeffect "dmb oshst", "~{memory}"() #23, !srcloc !121
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !122
  tail call void @arm_heavy_mb() #23
  %102 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 7
  %103 = load ptr, ptr %102, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %103, i32 %100) #23, !srcloc !14
  br label %104

104:                                              ; preds = %99, %93, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_read_pci_cfg(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr %0, align 4
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %4, i32 0, i32 34
  %6 = load ptr, ptr %5, align 4
  %7 = tail call i32 @pci_read_config_word(ptr noundef %6, i32 noundef %1, ptr noundef %2) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @igb_write_pci_cfg(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr %0, align 4
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %4, i32 0, i32 34
  %6 = load ptr, ptr %5, align 4
  %7 = load i16, ptr %2, align 2
  %8 = tail call i32 @pci_write_config_word(ptr noundef %6, i32 noundef %1, i16 noundef zeroext %7) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_config_word(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_read_pcie_cap_reg(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr %0, align 4
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %4, i32 0, i32 34
  %6 = load ptr, ptr %5, align 4
  %7 = tail call i32 @pcie_capability_read_word(ptr noundef %6, i32 noundef %1, ptr noundef %2) #23
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 0, i32 -3
  ret i32 %9
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_read_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_write_pcie_cap_reg(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr %0, align 4
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %4, i32 0, i32 34
  %6 = load ptr, ptr %5, align 4
  %7 = load i16, ptr %2, align 2
  %8 = tail call i32 @pcie_capability_write_word(ptr noundef %6, i32 noundef %1, i16 noundef zeroext %7) #23
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 0, i32 -3
  ret i32 %10
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_write_word(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_set_spd_dplx(ptr nocapture noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 17
  store i8 0, ptr %6, align 2
  %7 = and i32 %1, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %3
  %10 = zext i8 %2 to i32
  %11 = and i32 %10, 254
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 12
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 3
  %17 = add i32 %10, %1
  br i1 %16, label %18, label %19

18:                                               ; preds = %13
  switch i32 %17, label %32 [
    i32 1001, label %28
    i32 101, label %26
  ]

19:                                               ; preds = %13
  switch i32 %17, label %32 [
    i32 10, label %20
    i32 11, label %22
    i32 100, label %24
    i32 101, label %26
    i32 1001, label %28
  ]

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 13
  store i8 1, ptr %21, align 2
  br label %30

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 13
  store i8 2, ptr %23, align 2
  br label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 13
  store i8 4, ptr %25, align 2
  br label %30

26:                                               ; preds = %19, %18
  %27 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 13
  store i8 8, ptr %27, align 2
  br label %30

28:                                               ; preds = %19, %18
  store i8 1, ptr %6, align 2
  %29 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 13
  store i16 32, ptr %29, align 4
  br label %30

30:                                               ; preds = %28, %26, %24, %22, %20
  %31 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 19
  store i8 0, ptr %31, align 2
  br label %34

32:                                               ; preds = %19, %18, %9, %3
  %33 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %33, ptr noundef nonnull @.str.10) #22
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i32 [ -22, %32 ], [ 0, %30 ]
  ret i32 %35
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_read_i2c_byte(ptr noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #4 {
  %5 = getelementptr i8, ptr %0, i32 3704
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 4, i32 0, i32 8
  %10 = load ptr, ptr %9, align 4
  %11 = tail call i32 %10(ptr noundef %0, i16 noundef zeroext 2) #23
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = tail call i32 @i2c_smbus_read_byte_data(ptr noundef nonnull %6, i8 noundef zeroext %1) #23
  %15 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 4, i32 0, i32 9
  %16 = load ptr, ptr %15, align 4
  tail call void %16(ptr noundef %0, i16 noundef zeroext 2) #23
  %17 = icmp slt i32 %14, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = trunc i32 %14 to i8
  store i8 %19, ptr %3, align 1
  br label %20

20:                                               ; preds = %18, %13, %8, %4
  %21 = phi i32 [ 0, %18 ], [ 20, %4 ], [ 13, %8 ], [ 20, %13 ]
  ret i32 %21
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i2c_smbus_read_byte_data(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_write_i2c_byte(ptr noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #4 {
  %5 = getelementptr i8, ptr %0, i32 3704
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 4, i32 0, i32 8
  %10 = load ptr, ptr %9, align 4
  %11 = tail call i32 %10(ptr noundef %0, i16 noundef zeroext 2) #23
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = tail call i32 @i2c_smbus_write_byte_data(ptr noundef nonnull %6, i8 noundef zeroext %1, i8 noundef zeroext %3) #23
  %15 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 4, i32 0, i32 9
  %16 = load ptr, ptr %15, align 4
  tail call void %16(ptr noundef %0, i16 noundef zeroext 2) #23
  %17 = icmp eq i32 %14, 0
  %18 = select i1 %17, i32 0, i32 20
  br label %19

19:                                               ; preds = %13, %8, %4
  %20 = phi i32 [ 20, %4 ], [ 13, %8 ], [ %18, %13 ]
  ret i32 %20
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i2c_smbus_write_byte_data(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @igb_reinit_queues(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 64
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 6
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %1
  %11 = load volatile i32, ptr %6, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 103
  %16 = load i8, ptr %15, align 1, !range !15
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14, %10
  tail call fastcc void @__igb_close(ptr noundef %3, i1 noundef zeroext false) #23
  br label %19

19:                                               ; preds = %18, %14, %1
  tail call fastcc void @igb_reset_interrupt_capability(ptr noundef %0)
  %20 = tail call fastcc i32 @igb_init_interrupt_scheme(ptr noundef %0, i1 noundef zeroext true)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %23, ptr noundef nonnull @.str.11) #22
  br label %30

24:                                               ; preds = %19
  %25 = load volatile i32, ptr %6, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call fastcc i32 @__igb_open(ptr noundef %3, i1 noundef zeroext false) #23
  br label %30

30:                                               ; preds = %28, %24, %22
  %31 = phi i32 [ -12, %22 ], [ %29, %28 ], [ 0, %24 ]
  ret i32 %31
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_reset_interrupt_capability(ptr nocapture noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  %3 = load i32, ptr %2, align 16
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 8192
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %10 = load ptr, ptr %9, align 4
  tail call void @pci_disable_msix(ptr noundef %10) #23
  br label %17

11:                                               ; preds = %1
  %12 = and i32 %5, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %16 = load ptr, ptr %15, align 4
  tail call void @pci_disable_msi(ptr noundef %16) #23
  br label %17

17:                                               ; preds = %14, %11, %8
  %18 = icmp eq i32 %3, 0
  br i1 %18, label %47, label %19

19:                                               ; preds = %45, %17
  %20 = phi i32 [ %21, %45 ], [ %3, %17 ]
  %21 = add i32 %20, -1
  %22 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 45, i32 %21
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.igb_q_vector, ptr %23, i32 0, i32 7
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.igb_ring, ptr %27, i32 0, i32 11
  %31 = load i8, ptr %30, align 2
  %32 = zext i8 %31 to i32
  %33 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %32
  store ptr null, ptr %33, align 4
  br label %34

34:                                               ; preds = %29, %25
  %35 = getelementptr inbounds %struct.igb_q_vector, ptr %23, i32 0, i32 6
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.igb_ring, ptr %36, i32 0, i32 11
  %40 = load i8, ptr %39, align 2
  %41 = zext i8 %40 to i32
  %42 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %41
  store ptr null, ptr %42, align 4
  br label %43

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %struct.igb_q_vector, ptr %23, i32 0, i32 8
  tail call void @__netif_napi_del(ptr noundef %44) #23
  tail call void @synchronize_net() #23
  br label %45

45:                                               ; preds = %43, %19
  %46 = icmp eq i32 %21, 0
  br i1 %46, label %47, label %19

47:                                               ; preds = %45, %17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_init_interrupt_scheme(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %4 = load ptr, ptr %3, align 4
  br i1 %1, label %5, label %36

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %7 = load i32, ptr %6, align 4
  %8 = or i32 %7, 8192
  store i32 %8, ptr %6, align 4
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  %10 = load i32, ptr %9, align 4
  %11 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  store i32 %10, ptr %11, align 4
  %12 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %13 = load i32, ptr %12, align 16
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 %10, i32 1
  %16 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  store i32 %15, ptr %16, align 8
  %17 = and i32 %7, 8
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i32 %15, i32 0
  %20 = add i32 %19, %10
  %21 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  store i32 %20, ptr %21, align 16
  %22 = add i32 %20, 1
  %23 = icmp ult i32 %20, 2147483647
  br i1 %23, label %24, label %30

24:                                               ; preds = %24, %5
  %25 = phi i32 [ %28, %24 ], [ 0, %5 ]
  %26 = trunc i32 %25 to i16
  %27 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 6, i32 %25, i32 1
  store i16 %26, ptr %27, align 4
  %28 = add nuw nsw i32 %25, 1
  %29 = icmp eq i32 %25, %20
  br i1 %29, label %30, label %24

30:                                               ; preds = %24, %5
  %31 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 6
  %32 = tail call i32 @pci_enable_msix_range(ptr noundef %4, ptr noundef %31, i32 noundef %22, i32 noundef %22) #23
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %30
  tail call fastcc void @igb_reset_interrupt_capability(ptr noundef %0) #23
  %35 = load ptr, ptr %3, align 4
  br label %36

36:                                               ; preds = %34, %2
  %37 = phi ptr [ %35, %34 ], [ %4, %2 ]
  %38 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %39 = load i32, ptr %38, align 4
  %40 = and i32 %39, -8201
  %41 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  store i32 0, ptr %41, align 16
  %42 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  store i32 1, ptr %42, align 4
  %43 = or i32 %40, 8
  store i32 %43, ptr %38, align 4
  %44 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  store i32 1, ptr %44, align 4
  %45 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  store i32 1, ptr %45, align 8
  %46 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  store i32 1, ptr %46, align 16
  %47 = tail call i32 @pci_enable_msi(ptr noundef %37) #23
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %36
  %50 = load i32, ptr %38, align 4
  %51 = or i32 %50, 1
  store i32 %51, ptr %38, align 4
  br label %52

52:                                               ; preds = %49, %36, %30
  %53 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  %54 = load i32, ptr %53, align 16
  %55 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %58 = load i32, ptr %57, align 8
  %59 = add i32 %58, %56
  %60 = icmp sge i32 %54, %59
  %61 = icmp ne i32 %56, 0
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %72

63:                                               ; preds = %68, %52
  %64 = phi i32 [ %69, %68 ], [ %56, %52 ]
  %65 = phi i32 [ %70, %68 ], [ 0, %52 ]
  %66 = tail call fastcc i32 @igb_alloc_q_vector(ptr noundef %0, i32 noundef %65, i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef %65) #23
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %97

68:                                               ; preds = %63
  %69 = add i32 %64, -1
  %70 = add nuw i32 %65, 1
  %71 = icmp eq i32 %69, 0
  br i1 %71, label %72, label %63

72:                                               ; preds = %68, %52
  %73 = phi i32 [ %56, %52 ], [ 0, %68 ]
  %74 = phi i32 [ 0, %52 ], [ %56, %68 ]
  %75 = icmp sgt i32 %54, %74
  br i1 %75, label %76, label %112

76:                                               ; preds = %72
  %77 = sub i32 %54, %74
  br label %78

78:                                               ; preds = %91, %76
  %79 = phi i32 [ %94, %91 ], [ %74, %76 ]
  %80 = phi i32 [ %95, %91 ], [ 0, %76 ]
  %81 = phi i32 [ %93, %91 ], [ %58, %76 ]
  %82 = phi i32 [ %92, %91 ], [ %73, %76 ]
  %83 = sub i32 %54, %79
  %84 = add i32 %83, -1
  %85 = add i32 %82, %84
  %86 = sdiv i32 %85, %83
  %87 = add i32 %81, %84
  %88 = sdiv i32 %87, %83
  %89 = tail call fastcc i32 @igb_alloc_q_vector(ptr noundef %0, i32 noundef %79, i32 noundef %88, i32 noundef %80, i32 noundef %86, i32 noundef %79) #23
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %97

91:                                               ; preds = %78
  %92 = sub i32 %82, %86
  %93 = sub i32 %81, %88
  %94 = add nsw i32 %79, 1
  %95 = add nuw i32 %80, 1
  %96 = icmp eq i32 %95, %77
  br i1 %96, label %112, label %78

97:                                               ; preds = %78, %63
  %98 = phi i32 [ %79, %78 ], [ %65, %63 ]
  store i32 0, ptr %57, align 8
  store i32 0, ptr %55, align 4
  store i32 0, ptr %53, align 16
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %110, label %100

100:                                              ; preds = %108, %97
  %101 = phi i32 [ %102, %108 ], [ %98, %97 ]
  %102 = add i32 %101, -1
  %103 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 45, i32 %102
  %104 = load ptr, ptr %103, align 4
  store ptr null, ptr %103, align 4
  %105 = icmp eq ptr %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.igb_q_vector, ptr %104, i32 0, i32 9
  tail call void @kvfree_call_rcu(ptr noundef %107, ptr noundef nonnull inttoptr (i32 272 to ptr)) #23
  br label %108

108:                                              ; preds = %106, %100
  %109 = icmp eq i32 %102, 0
  br i1 %109, label %110, label %100

110:                                              ; preds = %108, %97
  %111 = getelementptr inbounds %struct.pci_dev, ptr %4, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %111, ptr noundef nonnull @.str.160) #22
  tail call fastcc void @igb_reset_interrupt_capability(ptr noundef %0)
  br label %165

112:                                              ; preds = %91, %72
  %113 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %114 = load i32, ptr %113, align 16
  %115 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %116 = load i32, ptr %115, align 16
  %117 = icmp ne i32 %116, 2
  %118 = icmp eq i32 %114, 0
  %119 = select i1 %117, i1 true, i1 %118
  br i1 %119, label %138, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  %122 = load i32, ptr %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %138, label %124

124:                                              ; preds = %124, %120
  %125 = phi i32 [ %135, %124 ], [ 0, %120 ]
  %126 = shl i32 %125, 3
  %127 = and i32 %126, 8
  %128 = lshr i32 %125, 1
  %129 = add i32 %128, %114
  %130 = add i32 %129, %127
  %131 = trunc i32 %130 to i8
  %132 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %125
  %133 = load ptr, ptr %132, align 4
  %134 = getelementptr inbounds %struct.igb_ring, ptr %133, i32 0, i32 12
  store i8 %131, ptr %134, align 1
  %135 = add nuw i32 %125, 1
  %136 = load i32, ptr %121, align 4
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %124, label %138

138:                                              ; preds = %124, %120, %112
  %139 = phi i32 [ 0, %112 ], [ 0, %120 ], [ %135, %124 ]
  %140 = load i32, ptr %55, align 4
  %141 = icmp slt i32 %139, %140
  br i1 %141, label %145, label %142

142:                                              ; preds = %145, %138
  %143 = load i32, ptr %57, align 8
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %155, label %165

145:                                              ; preds = %145, %138
  %146 = phi i32 [ %152, %145 ], [ %139, %138 ]
  %147 = add i32 %146, %114
  %148 = trunc i32 %147 to i8
  %149 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %146
  %150 = load ptr, ptr %149, align 4
  %151 = getelementptr inbounds %struct.igb_ring, ptr %150, i32 0, i32 12
  store i8 %148, ptr %151, align 1
  %152 = add nsw i32 %146, 1
  %153 = load i32, ptr %55, align 4
  %154 = icmp slt i32 %152, %153
  br i1 %154, label %145, label %142

155:                                              ; preds = %155, %142
  %156 = phi i32 [ %162, %155 ], [ 0, %142 ]
  %157 = add i32 %156, %114
  %158 = trunc i32 %157 to i8
  %159 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %156
  %160 = load ptr, ptr %159, align 4
  %161 = getelementptr inbounds %struct.igb_ring, ptr %160, i32 0, i32 12
  store i8 %158, ptr %161, align 1
  %162 = add nuw nsw i32 %156, 1
  %163 = load i32, ptr %57, align 8
  %164 = icmp slt i32 %162, %163
  br i1 %164, label %155, label %165

165:                                              ; preds = %155, %142, %110
  %166 = phi i32 [ -12, %110 ], [ 0, %142 ], [ 0, %155 ]
  ret i32 %166
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pci_register_driver(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_probe(ptr noundef %0, ptr nocapture noundef readnone %1) #4 {
  %3 = alloca i16, align 2
  %4 = alloca [11 x i8], align 8
  %5 = alloca i16, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %3) #23
  store i16 0, ptr %3, align 2
  call void @llvm.lifetime.start.p0(i64 11, ptr nonnull %4) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(11) %4, i8 0, i32 11, i1 false), !annotation !24
  %6 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 49
  %7 = load i40, ptr %6, align 1
  %8 = and i40 %7, 8388608
  %9 = icmp eq i40 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 3
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44
  %16 = load ptr, ptr %15, align 4
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi ptr [ %16, %14 ], [ %12, %10 ]
  %19 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 7
  %20 = load i16, ptr %19, align 8
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 8
  %23 = load i16, ptr %22, align 2
  %24 = zext i16 %23 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3175, i32 noundef 9, ptr noundef nonnull @.str.14, ptr noundef %18, i32 noundef %21, i32 noundef %24) #23
  br label %513

25:                                               ; preds = %2
  %26 = tail call i32 @pci_enable_device_mem(ptr noundef %0) #23
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %513

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44
  %30 = tail call i32 @dma_set_mask(ptr noundef %29, i64 noundef -1) #23
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = tail call i32 @dma_set_mask(ptr noundef %29, i64 noundef 4294967295) #23
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.15) #22
  br label %511

36:                                               ; preds = %32, %28
  %37 = phi i64 [ -1, %28 ], [ 4294967295, %32 ]
  %38 = tail call i32 @dma_set_coherent_mask(ptr noundef %29, i64 noundef %37) #23
  %39 = tail call i32 @pci_select_bars(ptr noundef %0, i32 noundef 512) #23
  %40 = tail call i32 @pci_request_selected_regions(ptr noundef %0, i32 noundef %39, ptr noundef nonnull @igb_driver_name) #23
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %511

42:                                               ; preds = %36
  tail call void @pci_set_master(ptr noundef %0) #23
  %43 = tail call i32 @pci_save_state(ptr noundef %0) #23
  %44 = tail call ptr @alloc_etherdev_mqs(i32 noundef 5056, i32 noundef 8, i32 noundef 8) #23
  %45 = icmp eq ptr %44, null
  br i1 %45, label %508, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 111, i32 1
  store ptr %29, ptr %47, align 4
  %48 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 8
  store ptr %44, ptr %48, align 8
  %49 = getelementptr i8, ptr %44, i32 1408
  %50 = getelementptr i8, ptr %44, i32 1920
  store ptr %44, ptr %50, align 64
  %51 = getelementptr i8, ptr %44, i32 2308
  store ptr %0, ptr %51, align 4
  %52 = getelementptr i8, ptr %44, i32 2512
  store ptr %49, ptr %52, align 4
  %53 = load i32, ptr @debug, align 4
  %54 = icmp ugt i32 %53, 31
  br i1 %54, label %60, label %55

55:                                               ; preds = %46
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = shl nsw i32 -1, %53
  %59 = xor i32 %58, -1
  br label %60

60:                                               ; preds = %57, %55, %46
  %61 = phi i32 [ %59, %57 ], [ 7, %46 ], [ 0, %55 ]
  %62 = getelementptr i8, ptr %44, i32 4672
  store i32 %61, ptr %62, align 64
  %63 = tail call ptr @pci_iomap(ptr noundef %0, i32 noundef 0, i32 noundef 0) #23
  %64 = getelementptr i8, ptr %44, i32 2244
  store ptr %63, ptr %64, align 4
  %65 = icmp eq ptr %63, null
  br i1 %65, label %506, label %66

66:                                               ; preds = %60
  %67 = getelementptr i8, ptr %44, i32 2516
  store ptr %63, ptr %67, align 4
  %68 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 16
  store ptr @igb_netdev_ops, ptr %68, align 8
  tail call void @igb_set_ethtool_ops(ptr noundef nonnull %44) #23
  %69 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 96
  store i32 500, ptr %69, align 8
  %70 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 3
  %71 = load ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %66
  %74 = load ptr, ptr %29, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi ptr [ %74, %73 ], [ %71, %66 ]
  %77 = tail call ptr @strncpy(ptr noundef nonnull %44, ptr noundef %76, i32 noundef 15)
  %78 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 47
  %79 = load i32, ptr %78, align 8
  %80 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 4
  store i32 %79, ptr %80, align 4
  %81 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 47, i32 0, i32 1
  %82 = load i32, ptr %81, align 4
  %83 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 3
  store i32 %82, ptr %83, align 8
  %84 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 7
  %85 = load i16, ptr %84, align 8
  %86 = getelementptr i8, ptr %44, i32 3492
  store i16 %85, ptr %86, align 4
  %87 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 8
  %88 = load i16, ptr %87, align 2
  %89 = getelementptr i8, ptr %44, i32 3486
  store i16 %88, ptr %89, align 2
  %90 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 12
  %91 = load i8, ptr %90, align 4
  %92 = getelementptr i8, ptr %44, i32 3494
  store i8 %91, ptr %92, align 2
  %93 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 9
  %94 = load i16, ptr %93, align 4
  %95 = getelementptr i8, ptr %44, i32 3488
  store i16 %94, ptr %95, align 4
  %96 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 10
  %97 = load i16, ptr %96, align 2
  %98 = getelementptr i8, ptr %44, i32 3490
  store i16 %97, ptr %98, align 2
  %99 = getelementptr i8, ptr %44, i32 2528
  %100 = load ptr, ptr getelementptr inbounds (%struct.e1000_info, ptr @e1000_82575_info, i32 0, i32 1), align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(52) %99, ptr noundef align 4 dereferenceable(52) %100, i32 52, i1 false)
  %101 = getelementptr i8, ptr %44, i32 3180
  %102 = load ptr, ptr getelementptr inbounds (%struct.e1000_info, ptr @e1000_82575_info, i32 0, i32 2), align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(60) %101, ptr noundef align 4 dereferenceable(60) %102, i32 60, i1 false)
  %103 = getelementptr i8, ptr %44, i32 3316
  %104 = load ptr, ptr getelementptr inbounds (%struct.e1000_info, ptr @e1000_82575_info, i32 0, i32 3), align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(28) %103, ptr noundef align 4 dereferenceable(28) %104, i32 28, i1 false)
  %105 = load ptr, ptr @e1000_82575_info, align 4
  %106 = tail call i32 %105(ptr noundef %52) #23
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %499

108:                                              ; preds = %75
  %109 = tail call fastcc i32 @igb_sw_init(ptr noundef %49)
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %499

111:                                              ; preds = %108
  %112 = tail call i32 @igb_get_bus_info_pcie(ptr noundef %52) #23
  %113 = getelementptr i8, ptr %44, i32 3312
  store i8 0, ptr %113, align 4
  %114 = getelementptr i8, ptr %44, i32 3284
  %115 = load i32, ptr %114, align 4
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %121

117:                                              ; preds = %111
  %118 = getelementptr i8, ptr %44, i32 3306
  store i8 0, ptr %118, align 2
  %119 = getelementptr i8, ptr %44, i32 3307
  store i8 0, ptr %119, align 1
  %120 = getelementptr i8, ptr %44, i32 3252
  store i32 0, ptr %120, align 4
  br label %121

121:                                              ; preds = %117, %111
  %122 = tail call i32 @igb_check_reset_block(ptr noundef %52) #23
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %29, ptr noundef nonnull @.str.16) #22
  br label %125

125:                                              ; preds = %124, %121
  %126 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 23
  %127 = load i64, ptr %126, align 16
  %128 = or i64 %127, 1649268555785
  store i64 %128, ptr %126, align 16
  %129 = getelementptr i8, ptr %44, i32 2592
  %130 = load i32, ptr %129, align 4
  %131 = icmp ugt i32 %130, 1
  br i1 %131, label %132, label %137

132:                                              ; preds = %125
  %133 = or i64 %127, 1726577967113
  store i64 %133, ptr %126, align 16
  %134 = icmp ugt i32 %130, 3
  br i1 %134, label %135, label %137

135:                                              ; preds = %132
  %136 = or i64 %127, 564676531388425
  store i64 %136, ptr %126, align 16
  br label %137

137:                                              ; preds = %135, %132, %125
  %138 = phi i64 [ %128, %125 ], [ %136, %135 ], [ %133, %132 ]
  %139 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 29
  store i64 264241152, ptr %139, align 64
  %140 = or i64 %138, 532676608
  store i64 %140, ptr %126, align 16
  %141 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 24
  %142 = load i64, ptr %141, align 8
  %143 = or i64 %138, %142
  %144 = icmp ugt i32 %130, 3
  %145 = select i1 %144, i64 17867596628352, i64 17592718721408
  %146 = or i64 %143, %145
  store i64 %146, ptr %141, align 8
  br i1 %31, label %147, label %149

147:                                              ; preds = %137
  %148 = or i64 %138, 532676640
  store i64 %148, ptr %126, align 16
  br label %149

149:                                              ; preds = %147, %137
  %150 = phi i64 [ %148, %147 ], [ %140, %137 ]
  %151 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 26
  %152 = load i64, ptr %151, align 8
  %153 = or i64 %150, %152
  %154 = or i64 %153, 524288
  store i64 %154, ptr %151, align 8
  %155 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 28
  %156 = load i64, ptr %155, align 8
  %157 = or i64 %156, 8
  store i64 %157, ptr %155, align 8
  %158 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 27
  %159 = load i64, ptr %158, align 16
  %160 = or i64 %159, %154
  store i64 %160, ptr %158, align 16
  %161 = or i64 %150, 896
  store i64 %161, ptr %126, align 16
  %162 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 15
  %163 = load i64, ptr %162, align 16
  %164 = or i64 %163, 20480
  store i64 %164, ptr %162, align 16
  %165 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 30
  store i32 68, ptr %165, align 8
  %166 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 31
  store i32 9216, ptr %166, align 4
  %167 = tail call zeroext i1 @igb_enable_mng_pass_thru(ptr noundef %52) #23
  %168 = zext i1 %167 to i32
  %169 = getelementptr i8, ptr %44, i32 2236
  store i32 %168, ptr %169, align 4
  %170 = getelementptr i8, ptr %44, i32 2532
  %171 = load ptr, ptr %170, align 4
  %172 = tail call i32 %171(ptr noundef %52) #23
  %173 = load i32, ptr %129, align 4
  %174 = and i32 %173, -2
  %175 = icmp eq i32 %174, 6
  br i1 %175, label %176, label %184

176:                                              ; preds = %149
  %177 = tail call zeroext i1 @igb_get_flash_presence_i210(ptr noundef %52) #23
  br i1 %177, label %178, label %190

178:                                              ; preds = %176
  %179 = getelementptr i8, ptr %44, i32 3336
  %180 = load ptr, ptr %179, align 4
  %181 = tail call i32 %180(ptr noundef %52) #23
  %182 = icmp slt i32 %181, 0
  br i1 %182, label %183, label %190

183:                                              ; preds = %178
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.17) #22
  br label %484

184:                                              ; preds = %149
  %185 = getelementptr i8, ptr %44, i32 3336
  %186 = load ptr, ptr %185, align 4
  %187 = tail call i32 %186(ptr noundef %52) #23
  %188 = icmp slt i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %184
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.17) #22
  br label %484

190:                                              ; preds = %184, %178, %176
  %191 = getelementptr i8, ptr %44, i32 2580
  %192 = tail call i32 @eth_platform_get_mac_address(ptr noundef %29, ptr noundef %191) #23
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %200, label %194

194:                                              ; preds = %190
  %195 = getelementptr i8, ptr %44, i32 2552
  %196 = load ptr, ptr %195, align 4
  %197 = tail call i32 %196(ptr noundef %52) #23
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %200, label %199

199:                                              ; preds = %194
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.18) #22
  br label %200

200:                                              ; preds = %199, %194, %190
  tail call void @dev_addr_mod(ptr noundef nonnull %44, i32 noundef 0, ptr noundef %191, i32 noundef 6) #23
  %201 = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 72
  %202 = load ptr, ptr %201, align 32
  %203 = load i32, ptr %202, align 4
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %212

206:                                              ; preds = %200
  %207 = getelementptr i8, ptr %202, i32 4
  %208 = load i16, ptr %207, align 2
  %209 = zext i16 %208 to i32
  %210 = or i32 %203, %209
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %206, %200
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.19) #22
  br label %484

213:                                              ; preds = %206
  tail call fastcc void @igb_set_default_mac_filter(ptr noundef %49)
  tail call void @igb_set_fw_version(ptr noundef %49)
  %214 = load i32, ptr %129, align 4
  %215 = icmp eq i32 %214, 6
  br i1 %215, label %216, label %226

216:                                              ; preds = %213
  %217 = load volatile ptr, ptr %67, align 4
  %218 = icmp eq ptr %217, null
  br i1 %218, label %221, label %219, !prof !9

219:                                              ; preds = %216
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !123
  tail call void @arm_heavy_mb() #23
  %220 = getelementptr i8, ptr %217, i32 9220
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %220, i32 162) #23, !srcloc !14
  br label %221

221:                                              ; preds = %219, %216
  %222 = load volatile ptr, ptr %67, align 4
  %223 = icmp eq ptr %222, null
  br i1 %223, label %226, label %224, !prof !9

224:                                              ; preds = %221
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !124
  tail call void @arm_heavy_mb() #23
  %225 = getelementptr i8, ptr %222, i32 13316
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %225, i32 67108884) #23, !srcloc !14
  br label %226

226:                                              ; preds = %224, %221, %213
  %227 = getelementptr i8, ptr %44, i32 2184
  tail call void @init_timer_key(ptr noundef %227, ptr noundef nonnull @igb_watchdog, i32 noundef 0, ptr noundef null, ptr noundef null) #23
  %228 = getelementptr i8, ptr %44, i32 2204
  tail call void @init_timer_key(ptr noundef %228, ptr noundef nonnull @igb_update_phy_info, i32 noundef 0, ptr noundef null, ptr noundef null) #23
  %229 = getelementptr i8, ptr %44, i32 2248
  store i32 -32, ptr %229, align 8
  %230 = getelementptr i8, ptr %44, i32 2252
  store volatile ptr %230, ptr %230, align 4
  %231 = getelementptr i8, ptr %44, i32 2256
  store ptr %230, ptr %231, align 4
  %232 = getelementptr i8, ptr %44, i32 2260
  store ptr @igb_reset_task, ptr %232, align 4
  %233 = getelementptr i8, ptr %44, i32 2264
  store i32 -32, ptr %233, align 8
  %234 = getelementptr i8, ptr %44, i32 2268
  store volatile ptr %234, ptr %234, align 4
  %235 = getelementptr i8, ptr %44, i32 2272
  store ptr %234, ptr %235, align 4
  %236 = getelementptr i8, ptr %44, i32 2276
  store ptr @igb_watchdog_task, ptr %236, align 4
  %237 = getelementptr i8, ptr %44, i32 2280
  store i8 1, ptr %237, align 8
  %238 = getelementptr i8, ptr %44, i32 3138
  store i8 1, ptr %238, align 2
  %239 = getelementptr i8, ptr %44, i32 3288
  store i16 47, ptr %239, align 4
  %240 = getelementptr i8, ptr %44, i32 3176
  store i32 255, ptr %240, align 4
  %241 = getelementptr i8, ptr %44, i32 3172
  store i32 255, ptr %241, align 4
  %242 = tail call i32 @igb_validate_mdi_setting(ptr noundef %52) #23
  %243 = getelementptr i8, ptr %44, i32 3388
  %244 = load i16, ptr %243, align 4
  %245 = icmp eq i16 %244, 0
  br i1 %245, label %249, label %246

246:                                              ; preds = %226
  %247 = load i32, ptr %129, align 4
  %248 = icmp ugt i32 %247, 2
  br i1 %248, label %255, label %262

249:                                              ; preds = %226
  %250 = getelementptr i8, ptr %44, i32 1932
  %251 = load i32, ptr %250, align 4
  %252 = or i32 %251, 256
  store i32 %252, ptr %250, align 4
  %253 = load i32, ptr %129, align 4
  %254 = icmp ugt i32 %253, 2
  br i1 %254, label %255, label %268

255:                                              ; preds = %249, %246
  %256 = getelementptr i8, ptr %44, i32 3320
  %257 = load ptr, ptr %256, align 4
  %258 = shl i16 %244, 6
  %259 = add i16 %258, 100
  %260 = select i1 %245, i16 36, i16 %259
  %261 = call i32 %257(ptr noundef %52, i16 noundef zeroext %260, i16 noundef zeroext 1, ptr noundef nonnull %3) #23
  br label %268

262:                                              ; preds = %246
  %263 = icmp eq i16 %244, 1
  br i1 %263, label %264, label %268

264:                                              ; preds = %262
  %265 = getelementptr i8, ptr %44, i32 3320
  %266 = load ptr, ptr %265, align 4
  %267 = call i32 %266(ptr noundef %52, i16 noundef zeroext 20, i16 noundef zeroext 1, ptr noundef nonnull %3) #23
  br label %268

268:                                              ; preds = %264, %262, %255, %249
  %269 = load i16, ptr %3, align 2
  %270 = and i16 %269, 1024
  %271 = icmp eq i16 %270, 0
  br i1 %271, label %276, label %272

272:                                              ; preds = %268
  %273 = getelementptr i8, ptr %44, i32 1932
  %274 = load i32, ptr %273, align 4
  %275 = or i32 %274, 256
  store i32 %275, ptr %273, align 4
  br label %276

276:                                              ; preds = %272, %268
  %277 = load i16, ptr %87, align 2
  switch i16 %277, label %301 [
    i16 4310, label %278
    i16 4265, label %282
    i16 4326, label %282
    i16 4327, label %282
    i16 4328, label %290
    i16 5414, label %290
  ]

278:                                              ; preds = %276
  %279 = getelementptr i8, ptr %44, i32 1932
  %280 = load i32, ptr %279, align 4
  %281 = and i32 %280, -257
  store i32 %281, ptr %279, align 4
  br label %311

282:                                              ; preds = %276, %276, %276
  %283 = call i32 @igb_rd32(ptr noundef %52, i32 noundef 8)
  %284 = and i32 %283, 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %311, label %286

286:                                              ; preds = %282
  %287 = getelementptr i8, ptr %44, i32 1932
  %288 = load i32, ptr %287, align 4
  %289 = and i32 %288, -257
  store i32 %289, ptr %287, align 4
  br label %311

290:                                              ; preds = %276, %276
  %291 = load i32, ptr @igb_probe.global_quad_port_a, align 4
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr i8, ptr %44, i32 1932
  %294 = load i32, ptr %293, align 4
  %295 = or i32 %294, 4
  %296 = and i32 %294, -257
  %297 = select i1 %292, i32 %295, i32 %296
  store i32 %297, ptr %293, align 4
  %298 = add i32 %291, 1
  %299 = icmp eq i32 %298, 4
  %300 = select i1 %299, i32 0, i32 %298
  store i32 %300, ptr @igb_probe.global_quad_port_a, align 4
  br label %311

301:                                              ; preds = %276
  %302 = load ptr, ptr %51, align 4
  %303 = getelementptr inbounds %struct.pci_dev, ptr %302, i32 0, i32 44, i32 11, i32 1
  %304 = load i16, ptr %303, align 4
  %305 = and i16 %304, 1
  %306 = icmp eq i16 %305, 0
  br i1 %306, label %307, label %311

307:                                              ; preds = %301
  %308 = getelementptr i8, ptr %44, i32 1932
  %309 = load i32, ptr %308, align 4
  %310 = and i32 %309, -257
  store i32 %310, ptr %308, align 4
  br label %311

311:                                              ; preds = %307, %301, %290, %286, %282, %278
  %312 = getelementptr i8, ptr %44, i32 1932
  %313 = load i32, ptr %312, align 4
  %314 = and i32 %313, 256
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %320, label %316

316:                                              ; preds = %311
  %317 = getelementptr i8, ptr %44, i32 2232
  %318 = load i32, ptr %317, align 8
  %319 = or i32 %318, 2
  store i32 %319, ptr %317, align 8
  br label %320

320:                                              ; preds = %316, %311
  %321 = load i32, ptr %129, align 4
  %322 = icmp eq i32 %321, 4
  br i1 %322, label %323, label %329

323:                                              ; preds = %320
  %324 = load i16, ptr %93, align 4
  %325 = icmp eq i16 %324, 4156
  br i1 %325, label %326, label %335

326:                                              ; preds = %323
  %327 = or i32 %313, 256
  store i32 %327, ptr %312, align 4
  %328 = getelementptr i8, ptr %44, i32 2232
  store i32 0, ptr %328, align 8
  br label %332

329:                                              ; preds = %320
  %330 = and i32 %321, -2
  %331 = icmp eq i32 %330, 4
  br i1 %331, label %332, label %361

332:                                              ; preds = %329, %326
  %333 = phi i32 [ %327, %326 ], [ %313, %329 ]
  %334 = load i16, ptr %93, align 4
  br label %335

335:                                              ; preds = %332, %323
  %336 = phi i16 [ %334, %332 ], [ %324, %323 ]
  %337 = phi i32 [ %333, %332 ], [ %313, %323 ]
  %338 = icmp eq i16 %336, 4136
  br i1 %338, label %339, label %342

339:                                              ; preds = %335
  %340 = or i32 %337, 256
  store i32 %340, ptr %312, align 4
  %341 = getelementptr i8, ptr %44, i32 2232
  store i32 0, ptr %341, align 8
  br label %342

342:                                              ; preds = %339, %335
  %343 = phi i32 [ %340, %339 ], [ %337, %335 ]
  br i1 %322, label %344, label %361

344:                                              ; preds = %342
  %345 = load i16, ptr %96, align 2
  %346 = add i16 %345, -20481
  %347 = icmp ult i16 %346, 2
  br i1 %347, label %348, label %355

348:                                              ; preds = %344
  %349 = load i16, ptr %243, align 4
  %350 = icmp eq i16 %349, 0
  br i1 %350, label %351, label %361

351:                                              ; preds = %348
  %352 = or i32 %343, 256
  store i32 %352, ptr %312, align 4
  %353 = getelementptr i8, ptr %44, i32 2232
  store i32 0, ptr %353, align 8
  %354 = load i16, ptr %96, align 2
  br label %355

355:                                              ; preds = %351, %344
  %356 = phi i32 [ %343, %344 ], [ %352, %351 ]
  %357 = phi i16 [ %345, %344 ], [ %354, %351 ]
  %358 = icmp eq i16 %357, 8018
  br i1 %358, label %359, label %361

359:                                              ; preds = %355
  %360 = or i32 %356, 256
  store i32 %360, ptr %312, align 4
  br label %361

361:                                              ; preds = %359, %355, %348, %342, %329
  %362 = phi i32 [ %313, %329 ], [ %356, %355 ], [ %360, %359 ], [ %343, %342 ], [ %343, %348 ]
  %363 = load ptr, ptr %51, align 4
  %364 = getelementptr inbounds %struct.pci_dev, ptr %363, i32 0, i32 44
  %365 = and i32 %362, 256
  %366 = icmp ne i32 %365, 0
  %367 = call i32 @device_set_wakeup_enable(ptr noundef %364, i1 noundef zeroext %366) #23
  call void @igb_reset(ptr noundef %49)
  %368 = call fastcc i32 @igb_init_i2c(ptr noundef %49)
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %371, label %370

370:                                              ; preds = %361
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.20) #22
  br label %484

371:                                              ; preds = %361
  call fastcc void @igb_get_hw_control(ptr noundef %49)
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 1 dereferenceable(6) %44, ptr noundef nonnull align 1 dereferenceable(6) @.str.21, i32 6, i1 false)
  %372 = call i32 @register_netdev(ptr noundef nonnull %44) #23
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %482

374:                                              ; preds = %371
  call void @netif_carrier_off(ptr noundef nonnull %44) #23
  %375 = load i32, ptr %129, align 4
  %376 = icmp eq i32 %375, 4
  br i1 %376, label %377, label %393

377:                                              ; preds = %374
  %378 = load i16, ptr %243, align 4
  %379 = icmp eq i16 %378, 0
  br i1 %379, label %380, label %393

380:                                              ; preds = %377
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %5) #23
  store i16 0, ptr %5, align 2, !annotation !24
  %381 = getelementptr i8, ptr %44, i32 3320
  %382 = load ptr, ptr %381, align 4
  %383 = call i32 %382(ptr noundef %52, i16 noundef zeroext 62, i16 noundef zeroext 1, ptr noundef nonnull %5) #23
  %384 = load i16, ptr %5, align 2
  %385 = add i16 %384, -1
  %386 = icmp ult i16 %385, -2
  %387 = zext i1 %386 to i8
  %388 = getelementptr i8, ptr %44, i32 5516
  store i8 %387, ptr %388, align 4
  %389 = call i32 @igb_sysfs_init(ptr noundef %49) #23
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %392, label %391

391:                                              ; preds = %380
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.22) #22
  br label %392

392:                                              ; preds = %391, %380
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %5) #23
  br label %395

393:                                              ; preds = %377, %374
  %394 = getelementptr i8, ptr %44, i32 5516
  store i8 0, ptr %394, align 4
  br label %395

395:                                              ; preds = %393, %392
  %396 = getelementptr i8, ptr %44, i32 6360
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(16) %396, ptr noundef nonnull align 4 dereferenceable(16) @e1000_82575_info, i32 16, i1 false)
  %397 = getelementptr i8, ptr %44, i32 3484
  %398 = load i8, ptr %397, align 4, !range !15
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %401, label %400

400:                                              ; preds = %395
  call fastcc void @igb_init_mas(ptr noundef %49)
  br label %401

401:                                              ; preds = %400, %395
  call void @igb_ptp_init(ptr noundef %49) #23
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %29, ptr noundef nonnull @.str.23) #22
  %402 = load i32, ptr %129, align 4
  %403 = icmp eq i32 %402, 5
  br i1 %403, label %431, label %404

404:                                              ; preds = %401
  %405 = getelementptr i8, ptr %44, i32 3376
  %406 = load i32, ptr %405, align 4
  %407 = icmp eq i32 %406, 6
  %408 = icmp eq i32 %406, 7
  %409 = select i1 %408, ptr @.str.26, ptr @.str.27
  %410 = select i1 %407, ptr @.str.25, ptr %409
  %411 = getelementptr i8, ptr %44, i32 3380
  %412 = load i32, ptr %411, align 4
  switch i32 %412, label %413 [
    i32 4, label %417
    i32 2, label %416
  ]

413:                                              ; preds = %404
  %414 = icmp eq i32 %412, 1
  %415 = select i1 %414, ptr @.str.30, ptr @.str.27
  br label %417

416:                                              ; preds = %404
  br label %417

417:                                              ; preds = %416, %413, %404
  %418 = phi ptr [ @.str.28, %404 ], [ %415, %413 ], [ @.str.29, %416 ]
  %419 = load ptr, ptr %201, align 32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %29, ptr noundef nonnull @.str.24, ptr noundef nonnull %44, ptr noundef nonnull %410, ptr noundef nonnull %418, ptr noundef %419) #22
  %420 = load i32, ptr %129, align 4
  %421 = icmp eq i32 %420, 2
  br i1 %421, label %422, label %428

422:                                              ; preds = %417
  %423 = call i32 @igb_rd32(ptr noundef %52, i32 noundef 16)
  %424 = and i32 %423, 256
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %433

426:                                              ; preds = %422
  %427 = load i32, ptr %129, align 4
  br label %428

428:                                              ; preds = %426, %417
  %429 = phi i32 [ %427, %426 ], [ %420, %417 ]
  %430 = icmp ugt i32 %429, 5
  br i1 %430, label %433, label %431

431:                                              ; preds = %428, %401
  %432 = call zeroext i1 @igb_get_flash_presence_i210(ptr noundef %52) #23
  br i1 %432, label %433, label %436

433:                                              ; preds = %431, %428, %422
  %434 = call i32 @igb_read_part_string(ptr noundef %52, ptr noundef nonnull %4, i32 noundef 11) #23
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %437, label %436

436:                                              ; preds = %433, %431
  store i64 31093567915781717, ptr %4, align 8
  br label %437

437:                                              ; preds = %436, %433
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %29, ptr noundef nonnull @.str.32, ptr noundef nonnull %44, ptr noundef nonnull %4) #22
  %438 = load i32, ptr %312, align 4
  %439 = and i32 %438, 8192
  %440 = icmp eq i32 %439, 0
  %441 = and i32 %438, 1
  %442 = icmp eq i32 %441, 0
  %443 = select i1 %442, ptr @.str.36, ptr @.str.35
  %444 = select i1 %440, ptr %443, ptr @.str.34
  %445 = getelementptr i8, ptr %44, i32 2108
  %446 = load i32, ptr %445, align 4
  %447 = getelementptr i8, ptr %44, i32 2040
  %448 = load i32, ptr %447, align 8
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %29, ptr noundef nonnull @.str.33, ptr noundef nonnull %444, i32 noundef %446, i32 noundef %448) #22
  %449 = load i32, ptr %114, align 4
  %450 = icmp eq i32 %449, 1
  br i1 %450, label %451, label %475

451:                                              ; preds = %437
  %452 = load i32, ptr %129, align 4
  switch i32 %452, label %475 [
    i32 4, label %453
    i32 6, label %453
    i32 7, label %453
    i32 5, label %460
  ]

453:                                              ; preds = %451, %451, %451
  %454 = call i32 @igb_set_eee_i350(ptr noundef %52, i1 noundef zeroext true, i1 noundef zeroext true) #23
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %475

456:                                              ; preds = %453
  %457 = getelementptr i8, ptr %44, i32 3478
  %458 = load i8, ptr %457, align 2, !range !15
  %459 = icmp eq i8 %458, 0
  br i1 %459, label %471, label %475

460:                                              ; preds = %451
  %461 = call i32 @igb_rd32(ptr noundef %52, i32 noundef 24)
  %462 = and i32 %461, 8388608
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %475, label %464

464:                                              ; preds = %460
  %465 = call i32 @igb_set_eee_i354(ptr noundef %52, i1 noundef zeroext true, i1 noundef zeroext true) #23
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %475

467:                                              ; preds = %464
  %468 = getelementptr i8, ptr %44, i32 3478
  %469 = load i8, ptr %468, align 2, !range !15
  %470 = icmp eq i8 %469, 0
  br i1 %470, label %471, label %475

471:                                              ; preds = %467, %456
  %472 = getelementptr i8, ptr %44, i32 6376
  store i16 6, ptr %472, align 8
  %473 = load i32, ptr %312, align 4
  %474 = or i32 %473, 16384
  store i32 %474, ptr %312, align 4
  br label %475

475:                                              ; preds = %471, %467, %464, %460, %456, %453, %451, %437
  %476 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 11, i32 2
  store i32 1, ptr %476, align 8
  %477 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 11, i32 13
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !125
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %477) #23, !srcloc !110
  %478 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %477, ptr %477, i32 0, i32 -1, ptr elementtype(i32) %477) #23, !srcloc !126
  %479 = extractvalue { i32, i32, i32 } %478, 0
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %513, label %481

481:                                              ; preds = %475
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !127
  br label %513

482:                                              ; preds = %371
  call fastcc void @igb_release_hw_control(ptr noundef %49)
  %483 = getelementptr i8, ptr %44, i32 5560
  call void @llvm.memset.p0.i32(ptr noundef align 8 dereferenceable(656) %483, i8 0, i32 656, i1 false)
  br label %484

484:                                              ; preds = %482, %370, %212, %189, %183
  %485 = phi i32 [ -5, %189 ], [ %368, %370 ], [ %372, %482 ], [ -5, %212 ], [ -5, %183 ]
  %486 = call i32 @igb_check_reset_block(ptr noundef %52) #23
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %494

488:                                              ; preds = %484
  %489 = getelementptr i8, ptr %44, i32 3216
  %490 = load ptr, ptr %489, align 4
  %491 = icmp eq ptr %490, null
  br i1 %491, label %494, label %492

492:                                              ; preds = %488
  %493 = call i32 %490(ptr noundef %52) #23
  br label %494

494:                                              ; preds = %492, %488, %484
  %495 = getelementptr i8, ptr %44, i32 2520
  %496 = load ptr, ptr %495, align 4
  %497 = icmp eq ptr %496, null
  br i1 %497, label %499, label %498

498:                                              ; preds = %494
  call void @iounmap(ptr noundef nonnull %496) #23
  br label %499

499:                                              ; preds = %498, %494, %108, %75
  %500 = phi i32 [ %106, %75 ], [ %109, %108 ], [ %485, %498 ], [ %485, %494 ]
  %501 = getelementptr i8, ptr %44, i32 6400
  %502 = load ptr, ptr %501, align 64
  call void @kfree(ptr noundef %502) #23
  %503 = getelementptr i8, ptr %44, i32 4740
  %504 = load ptr, ptr %503, align 4
  call void @kfree(ptr noundef %504) #23
  call fastcc void @igb_clear_interrupt_scheme(ptr noundef %49)
  %505 = load ptr, ptr %64, align 4
  call void @pci_iounmap(ptr noundef %0, ptr noundef %505) #23
  br label %506

506:                                              ; preds = %499, %60
  %507 = phi i32 [ %500, %499 ], [ -5, %60 ]
  call void @free_netdev(ptr noundef nonnull %44) #23
  br label %508

508:                                              ; preds = %506, %42
  %509 = phi i32 [ %507, %506 ], [ -12, %42 ]
  %510 = call i32 @pci_select_bars(ptr noundef %0, i32 noundef 512) #23
  call void @pci_release_selected_regions(ptr noundef %0, i32 noundef %510) #23
  br label %511

511:                                              ; preds = %508, %36, %35
  %512 = phi i32 [ %33, %35 ], [ %40, %36 ], [ %509, %508 ]
  call void @pci_disable_device(ptr noundef %0) #23
  br label %513

513:                                              ; preds = %511, %481, %475, %25, %17
  %514 = phi i32 [ -22, %17 ], [ %512, %511 ], [ %26, %25 ], [ 0, %475 ], [ 0, %481 ]
  call void @llvm.lifetime.end.p0(i64 11, ptr nonnull %4) #23
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %3) #23
  ret i32 %514
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_remove(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %3, i32 1408
  %5 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 11, i32 13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %5) #23, !srcloc !110
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %5, ptr %5, i32 1, ptr elementtype(i32) %5) #23, !srcloc !120
  tail call void @igb_sysfs_exit(ptr noundef %4) #23
  %7 = getelementptr i8, ptr %3, i32 5560
  tail call void @i2c_del_adapter(ptr noundef %7) #23
  tail call void @igb_ptp_stop(ptr noundef %4) #23
  %8 = getelementptr i8, ptr %3, i32 1928
  tail call void @_set_bit(i32 noundef 2, ptr noundef %8) #23
  %9 = getelementptr i8, ptr %3, i32 2184
  %10 = tail call i32 @del_timer_sync(ptr noundef %9) #23
  %11 = getelementptr i8, ptr %3, i32 2204
  %12 = tail call i32 @del_timer_sync(ptr noundef %11) #23
  %13 = getelementptr i8, ptr %3, i32 2248
  %14 = tail call zeroext i1 @cancel_work_sync(ptr noundef %13) #23
  %15 = getelementptr i8, ptr %3, i32 2264
  %16 = tail call zeroext i1 @cancel_work_sync(ptr noundef %15) #23
  tail call fastcc void @igb_release_hw_control(ptr noundef %4)
  tail call void @unregister_netdev(ptr noundef %3) #23
  tail call fastcc void @igb_clear_interrupt_scheme(ptr noundef %4)
  %17 = getelementptr i8, ptr %3, i32 2244
  %18 = load ptr, ptr %17, align 4
  tail call void @pci_iounmap(ptr noundef %0, ptr noundef %18) #23
  %19 = getelementptr i8, ptr %3, i32 2520
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %1
  tail call void @iounmap(ptr noundef nonnull %20) #23
  br label %23

23:                                               ; preds = %22, %1
  %24 = tail call i32 @pci_select_bars(ptr noundef %0, i32 noundef 512) #23
  tail call void @pci_release_selected_regions(ptr noundef %0, i32 noundef %24) #23
  %25 = getelementptr i8, ptr %3, i32 6400
  %26 = load ptr, ptr %25, align 64
  tail call void @kfree(ptr noundef %26) #23
  %27 = getelementptr i8, ptr %3, i32 4740
  %28 = load ptr, ptr %27, align 4
  tail call void @kfree(ptr noundef %28) #23
  tail call void @free_netdev(ptr noundef %3) #23
  tail call void @pci_disable_device(ptr noundef %0) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_shutdown(ptr noundef %0) #4 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #23
  store i8 0, ptr %2, align 1, !annotation !24
  call fastcc void @__igb_shutdown(ptr noundef %0, ptr noundef nonnull %2, i1 noundef zeroext false)
  %3 = load i32, ptr @system_state, align 4
  %4 = icmp eq i32 %3, 5
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = load i8, ptr %2, align 1, !range !15
  %7 = icmp ne i8 %6, 0
  %8 = call i32 @pci_wake_from_d3(ptr noundef %0, i1 noundef zeroext %7) #23
  %9 = call i32 @pci_set_power_state(ptr noundef %0, i32 noundef 3) #23
  br label %10

10:                                               ; preds = %5, %1
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #23
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @igb_pci_sriov_configure(ptr nocapture noundef readnone %0, i32 noundef %1) #12 {
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_device_mem(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_set_master(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_save_state(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_etherdev_mqs(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pci_iomap(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_set_ethtool_ops(ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #13

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #14

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_sw_init(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 64
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 8, i32 5
  %7 = tail call i32 @pci_read_config_word(ptr noundef %5, i32 noundef 4, ptr noundef %6) #23
  %8 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 48
  store i16 256, ptr %8, align 4
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 49
  store i16 256, ptr %9, align 2
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 7
  store i32 3, ptr %10, align 4
  %11 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 8
  store i32 3, ptr %11, align 8
  %12 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 11
  store i16 128, ptr %12, align 16
  %13 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 20
  %14 = load i32, ptr %13, align 4
  %15 = add i32 %14, 26
  %16 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 17
  store i32 %15, ptr %16, align 64
  %17 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 18
  store i32 64, ptr %17, align 4
  %18 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 90
  store i32 0, ptr %18, align 8
  %19 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 35
  store i32 0, ptr %19, align 8
  %20 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = or i32 %21, 8192
  store i32 %22, ptr %20, align 4
  %23 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 12
  %24 = load i16, ptr %23, align 4
  %25 = zext i16 %24 to i32
  %26 = shl nuw nsw i32 %25, 3
  %27 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %26, i32 noundef 3520) #24
  %28 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  store ptr %27, ptr %28, align 64
  %29 = icmp eq ptr %27, null
  br i1 %29, label %83, label %30

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %32 = load i32, ptr %31, align 4
  switch i32 %32, label %45 [
    i32 7, label %33
    i32 1, label %51
    i32 6, label %51
    i32 4, label %37
    i32 2, label %41
  ]

33:                                               ; preds = %30
  %34 = load volatile i32, ptr @__num_online_cpus, align 4
  %35 = tail call i32 @llvm.umin.i32(i32 %34, i32 2) #23
  %36 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  store i32 %35, ptr %36, align 4
  br label %65

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %39 = load i32, ptr %38, align 16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %46

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %43 = load i32, ptr %42, align 16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %41, %37, %30
  br label %51

46:                                               ; preds = %41, %37
  %47 = phi i32 [ 2, %41 ], [ 1, %37 ]
  %48 = load volatile i32, ptr @__num_online_cpus, align 4
  %49 = tail call i32 @llvm.umin.i32(i32 %47, i32 %48) #23
  %50 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  store i32 %49, ptr %50, align 4
  br label %56

51:                                               ; preds = %45, %30, %30
  %52 = phi i32 [ 8, %45 ], [ 4, %30 ], [ 4, %30 ]
  %53 = load volatile i32, ptr @__num_online_cpus, align 4
  %54 = tail call i32 @llvm.umin.i32(i32 %52, i32 %53) #23
  %55 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 53
  store i32 %54, ptr %55, align 4
  switch i32 %32, label %56 [
    i32 1, label %65
    i32 7, label %65
  ]

56:                                               ; preds = %51, %46
  %57 = phi i32 [ %49, %46 ], [ %54, %51 ]
  %58 = phi i32 [ %47, %46 ], [ %52, %51 ]
  %59 = lshr i32 %58, 1
  %60 = icmp ugt i32 %57, %59
  %61 = load i32, ptr %20, align 4
  %62 = and i32 %61, -9
  %63 = select i1 %60, i32 8, i32 0
  %64 = or i32 %63, %62
  store i32 %64, ptr %20, align 4
  br label %65

65:                                               ; preds = %56, %51, %51, %33
  %66 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %67 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %66, i32 noundef 3520, i32 noundef 512) #26
  %68 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 55
  store ptr %67, ptr %68, align 4
  %69 = icmp eq ptr %67, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = tail call fastcc i32 @igb_init_interrupt_scheme(ptr noundef %0, i1 noundef zeroext true)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %74, ptr noundef nonnull @.str.11) #22
  br label %83

75:                                               ; preds = %70
  tail call fastcc void @igb_irq_disable(ptr noundef %0)
  %76 = load i32, ptr %31, align 4
  %77 = icmp ugt i32 %76, 3
  br i1 %77, label %78, label %81

78:                                               ; preds = %75
  %79 = load i32, ptr %20, align 4
  %80 = and i32 %79, -17
  store i32 %80, ptr %20, align 4
  br label %81

81:                                               ; preds = %78, %75
  %82 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 3
  tail call void @_set_bit(i32 noundef 2, ptr noundef %82) #23
  br label %83

83:                                               ; preds = %81, %73, %65, %1
  %84 = phi i32 [ -12, %73 ], [ 0, %81 ], [ -12, %1 ], [ -12, %65 ]
  ret i32 %84
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_get_bus_info_pcie(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_check_reset_block(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @igb_enable_mng_pass_thru(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_platform_get_mac_address(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_watchdog(ptr noundef %0) #4 {
  %2 = getelementptr i8, ptr %0, i32 80
  %3 = load ptr, ptr @system_wq, align 4
  %4 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %3, ptr noundef %2) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_update_phy_info(ptr noundef %0) #4 {
  %2 = getelementptr i8, ptr %0, i32 1000
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr i8, ptr %0, i32 308
  %7 = tail call i32 %3(ptr noundef %6) #23
  br label %8

8:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_reset_task(ptr noundef %0) #4 {
  %2 = alloca [16 x i8], align 1
  %3 = getelementptr i8, ptr %0, i32 -840
  tail call void @rtnl_lock() #23
  %4 = getelementptr i8, ptr %0, i32 -320
  %5 = load volatile i32, ptr %4, align 4
  %6 = and i32 %5, 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = load volatile i32, ptr %4, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8, %1
  tail call void @rtnl_unlock() #23
  br label %1074

13:                                               ; preds = %8
  %14 = getelementptr i8, ptr %0, i32 -328
  %15 = load ptr, ptr %14, align 64
  %16 = getelementptr i8, ptr %0, i32 2424
  %17 = load i32, ptr %16, align 64
  %18 = and i32 %17, 8192
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %1065, label %20

20:                                               ; preds = %13
  %21 = icmp eq ptr %15, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %20
  %23 = getelementptr i8, ptr %0, i32 60
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %25, ptr noundef nonnull @.str.57) #22
  %26 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.58) #22
  %27 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 6
  %28 = load i32, ptr %27, align 4
  %29 = tail call i32 @dev_trans_start(ptr noundef nonnull %15) #23
  %30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.59, ptr noundef nonnull %15, i32 noundef %28, i32 noundef %29) #22
  br label %31

31:                                               ; preds = %22, %20
  %32 = getelementptr i8, ptr %0, i32 60
  %33 = load ptr, ptr %32, align 4
  %34 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %34, ptr noundef nonnull @.str.60) #22
  %35 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.61) #22
  %36 = getelementptr i8, ptr %0, i32 268
  br label %37

37:                                               ; preds = %819, %31
  %38 = phi ptr [ @.str.85, %31 ], [ %822, %819 ]
  %39 = phi ptr [ getelementptr inbounds ([23 x %struct.igb_reg_info], ptr @igb_reg_info_tbl, i32 0, i32 0, i32 1), %31 ], [ %821, %819 ]
  %40 = phi ptr [ @igb_reg_info_tbl, %31 ], [ %820, %819 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %2, i8 0, i32 16, i1 false) #23, !annotation !24
  %41 = load i32, ptr %40, align 4
  switch i32 %41, label %786 [
    i32 10248, label %75
    i32 10256, label %72
    i32 10264, label %69
    i32 10280, label %66
    i32 10240, label %63
    i32 10244, label %60
    i32 14336, label %57
    i32 14340, label %54
    i32 14344, label %51
    i32 14352, label %48
    i32 14360, label %45
    i32 14376, label %42
  ]

42:                                               ; preds = %37
  %43 = load volatile ptr, ptr %36, align 4
  %44 = icmp eq ptr %43, null
  br i1 %44, label %739, label %727, !prof !9

45:                                               ; preds = %37
  %46 = load volatile ptr, ptr %36, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %680, label %668, !prof !9

48:                                               ; preds = %37
  %49 = load volatile ptr, ptr %36, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %621, label %609, !prof !9

51:                                               ; preds = %37
  %52 = load volatile ptr, ptr %36, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %562, label %550, !prof !9

54:                                               ; preds = %37
  %55 = load volatile ptr, ptr %36, align 4
  %56 = icmp eq ptr %55, null
  br i1 %56, label %503, label %491, !prof !9

57:                                               ; preds = %37
  %58 = load volatile ptr, ptr %36, align 4
  %59 = icmp eq ptr %58, null
  br i1 %59, label %444, label %432, !prof !9

60:                                               ; preds = %37
  %61 = load volatile ptr, ptr %36, align 4
  %62 = icmp eq ptr %61, null
  br i1 %62, label %385, label %373, !prof !9

63:                                               ; preds = %37
  %64 = load volatile ptr, ptr %36, align 4
  %65 = icmp eq ptr %64, null
  br i1 %65, label %326, label %314, !prof !9

66:                                               ; preds = %37
  %67 = load volatile ptr, ptr %36, align 4
  %68 = icmp eq ptr %67, null
  br i1 %68, label %267, label %255, !prof !9

69:                                               ; preds = %37
  %70 = load volatile ptr, ptr %36, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %208, label %196, !prof !9

72:                                               ; preds = %37
  %73 = load volatile ptr, ptr %36, align 4
  %74 = icmp eq ptr %73, null
  br i1 %74, label %149, label %137, !prof !9

75:                                               ; preds = %37
  %76 = load volatile ptr, ptr %36, align 4
  %77 = icmp eq ptr %76, null
  br i1 %77, label %90, label %78, !prof !9

78:                                               ; preds = %75
  %79 = getelementptr i8, ptr %76, i32 10248
  %80 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %79) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %90

82:                                               ; preds = %78
  %83 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %76) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %85, label %90

85:                                               ; preds = %82
  %86 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %86, ptr noundef nonnull @.str) #22
  %87 = load ptr, ptr %32, align 4
  %88 = call zeroext i1 @pci_device_is_present(ptr noundef %87) #23
  br i1 %88, label %89, label %90, !prof !9

89:                                               ; preds = %85
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10248) #23
  br label %90

90:                                               ; preds = %89, %85, %82, %78, %75
  %91 = phi i32 [ -1, %75 ], [ -1, %85 ], [ -1, %89 ], [ -1, %82 ], [ %80, %78 ]
  %92 = load volatile ptr, ptr %36, align 4
  %93 = icmp eq ptr %92, null
  br i1 %93, label %106, label %94, !prof !9

94:                                               ; preds = %90
  %95 = getelementptr i8, ptr %92, i32 10504
  %96 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %95) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %106

98:                                               ; preds = %94
  %99 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %92) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %101, label %106

101:                                              ; preds = %98
  %102 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %102, ptr noundef nonnull @.str) #22
  %103 = load ptr, ptr %32, align 4
  %104 = call zeroext i1 @pci_device_is_present(ptr noundef %103) #23
  br i1 %104, label %105, label %106, !prof !9

105:                                              ; preds = %101
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10504) #23
  br label %106

106:                                              ; preds = %105, %101, %98, %94, %90
  %107 = phi i32 [ -1, %90 ], [ -1, %101 ], [ -1, %105 ], [ -1, %98 ], [ %96, %94 ]
  %108 = load volatile ptr, ptr %36, align 4
  %109 = icmp eq ptr %108, null
  br i1 %109, label %122, label %110, !prof !9

110:                                              ; preds = %106
  %111 = getelementptr i8, ptr %108, i32 10760
  %112 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %111) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %113 = icmp eq i32 %112, -1
  br i1 %113, label %114, label %122

114:                                              ; preds = %110
  %115 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %108) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %117, label %122

117:                                              ; preds = %114
  %118 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %118, ptr noundef nonnull @.str) #22
  %119 = load ptr, ptr %32, align 4
  %120 = call zeroext i1 @pci_device_is_present(ptr noundef %119) #23
  br i1 %120, label %121, label %122, !prof !9

121:                                              ; preds = %117
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10760) #23
  br label %122

122:                                              ; preds = %121, %117, %114, %110, %106
  %123 = phi i32 [ -1, %106 ], [ -1, %117 ], [ -1, %121 ], [ -1, %114 ], [ %112, %110 ]
  %124 = load volatile ptr, ptr %36, align 4
  %125 = icmp eq ptr %124, null
  br i1 %125, label %811, label %126, !prof !9

126:                                              ; preds = %122
  %127 = getelementptr i8, ptr %124, i32 11016
  %128 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %127) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %129 = icmp eq i32 %128, -1
  br i1 %129, label %130, label %811

130:                                              ; preds = %126
  %131 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %124) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %132 = icmp eq i32 %131, -1
  br i1 %132, label %133, label %811

133:                                              ; preds = %130
  %134 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %134, ptr noundef nonnull @.str) #22
  %135 = load ptr, ptr %32, align 4
  %136 = call zeroext i1 @pci_device_is_present(ptr noundef %135) #23
  br i1 %136, label %806, label %811, !prof !9

137:                                              ; preds = %72
  %138 = getelementptr i8, ptr %73, i32 10256
  %139 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %138) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %140 = icmp eq i32 %139, -1
  br i1 %140, label %141, label %149

141:                                              ; preds = %137
  %142 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %73) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %143 = icmp eq i32 %142, -1
  br i1 %143, label %144, label %149

144:                                              ; preds = %141
  %145 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %145, ptr noundef nonnull @.str) #22
  %146 = load ptr, ptr %32, align 4
  %147 = call zeroext i1 @pci_device_is_present(ptr noundef %146) #23
  br i1 %147, label %148, label %149, !prof !9

148:                                              ; preds = %144
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10256) #23
  br label %149

149:                                              ; preds = %148, %144, %141, %137, %72
  %150 = phi i32 [ -1, %72 ], [ -1, %144 ], [ -1, %148 ], [ -1, %141 ], [ %139, %137 ]
  %151 = load volatile ptr, ptr %36, align 4
  %152 = icmp eq ptr %151, null
  br i1 %152, label %165, label %153, !prof !9

153:                                              ; preds = %149
  %154 = getelementptr i8, ptr %151, i32 10512
  %155 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %154) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %156 = icmp eq i32 %155, -1
  br i1 %156, label %157, label %165

157:                                              ; preds = %153
  %158 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %151) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %160, label %165

160:                                              ; preds = %157
  %161 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %161, ptr noundef nonnull @.str) #22
  %162 = load ptr, ptr %32, align 4
  %163 = call zeroext i1 @pci_device_is_present(ptr noundef %162) #23
  br i1 %163, label %164, label %165, !prof !9

164:                                              ; preds = %160
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10512) #23
  br label %165

165:                                              ; preds = %164, %160, %157, %153, %149
  %166 = phi i32 [ -1, %149 ], [ -1, %160 ], [ -1, %164 ], [ -1, %157 ], [ %155, %153 ]
  %167 = load volatile ptr, ptr %36, align 4
  %168 = icmp eq ptr %167, null
  br i1 %168, label %181, label %169, !prof !9

169:                                              ; preds = %165
  %170 = getelementptr i8, ptr %167, i32 10768
  %171 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %170) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %172 = icmp eq i32 %171, -1
  br i1 %172, label %173, label %181

173:                                              ; preds = %169
  %174 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %167) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %175 = icmp eq i32 %174, -1
  br i1 %175, label %176, label %181

176:                                              ; preds = %173
  %177 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %177, ptr noundef nonnull @.str) #22
  %178 = load ptr, ptr %32, align 4
  %179 = call zeroext i1 @pci_device_is_present(ptr noundef %178) #23
  br i1 %179, label %180, label %181, !prof !9

180:                                              ; preds = %176
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10768) #23
  br label %181

181:                                              ; preds = %180, %176, %173, %169, %165
  %182 = phi i32 [ -1, %165 ], [ -1, %176 ], [ -1, %180 ], [ -1, %173 ], [ %171, %169 ]
  %183 = load volatile ptr, ptr %36, align 4
  %184 = icmp eq ptr %183, null
  br i1 %184, label %811, label %185, !prof !9

185:                                              ; preds = %181
  %186 = getelementptr i8, ptr %183, i32 11024
  %187 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %186) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %188 = icmp eq i32 %187, -1
  br i1 %188, label %189, label %811

189:                                              ; preds = %185
  %190 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %183) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %191 = icmp eq i32 %190, -1
  br i1 %191, label %192, label %811

192:                                              ; preds = %189
  %193 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %193, ptr noundef nonnull @.str) #22
  %194 = load ptr, ptr %32, align 4
  %195 = call zeroext i1 @pci_device_is_present(ptr noundef %194) #23
  br i1 %195, label %806, label %811, !prof !9

196:                                              ; preds = %69
  %197 = getelementptr i8, ptr %70, i32 10264
  %198 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %197) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %199 = icmp eq i32 %198, -1
  br i1 %199, label %200, label %208

200:                                              ; preds = %196
  %201 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %70) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %202 = icmp eq i32 %201, -1
  br i1 %202, label %203, label %208

203:                                              ; preds = %200
  %204 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %204, ptr noundef nonnull @.str) #22
  %205 = load ptr, ptr %32, align 4
  %206 = call zeroext i1 @pci_device_is_present(ptr noundef %205) #23
  br i1 %206, label %207, label %208, !prof !9

207:                                              ; preds = %203
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10264) #23
  br label %208

208:                                              ; preds = %207, %203, %200, %196, %69
  %209 = phi i32 [ -1, %69 ], [ -1, %203 ], [ -1, %207 ], [ -1, %200 ], [ %198, %196 ]
  %210 = load volatile ptr, ptr %36, align 4
  %211 = icmp eq ptr %210, null
  br i1 %211, label %224, label %212, !prof !9

212:                                              ; preds = %208
  %213 = getelementptr i8, ptr %210, i32 10520
  %214 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %213) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %215 = icmp eq i32 %214, -1
  br i1 %215, label %216, label %224

216:                                              ; preds = %212
  %217 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %210) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %218 = icmp eq i32 %217, -1
  br i1 %218, label %219, label %224

219:                                              ; preds = %216
  %220 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %220, ptr noundef nonnull @.str) #22
  %221 = load ptr, ptr %32, align 4
  %222 = call zeroext i1 @pci_device_is_present(ptr noundef %221) #23
  br i1 %222, label %223, label %224, !prof !9

223:                                              ; preds = %219
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10520) #23
  br label %224

224:                                              ; preds = %223, %219, %216, %212, %208
  %225 = phi i32 [ -1, %208 ], [ -1, %219 ], [ -1, %223 ], [ -1, %216 ], [ %214, %212 ]
  %226 = load volatile ptr, ptr %36, align 4
  %227 = icmp eq ptr %226, null
  br i1 %227, label %240, label %228, !prof !9

228:                                              ; preds = %224
  %229 = getelementptr i8, ptr %226, i32 10776
  %230 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %229) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %231 = icmp eq i32 %230, -1
  br i1 %231, label %232, label %240

232:                                              ; preds = %228
  %233 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %226) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %234 = icmp eq i32 %233, -1
  br i1 %234, label %235, label %240

235:                                              ; preds = %232
  %236 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %236, ptr noundef nonnull @.str) #22
  %237 = load ptr, ptr %32, align 4
  %238 = call zeroext i1 @pci_device_is_present(ptr noundef %237) #23
  br i1 %238, label %239, label %240, !prof !9

239:                                              ; preds = %235
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10776) #23
  br label %240

240:                                              ; preds = %239, %235, %232, %228, %224
  %241 = phi i32 [ -1, %224 ], [ -1, %235 ], [ -1, %239 ], [ -1, %232 ], [ %230, %228 ]
  %242 = load volatile ptr, ptr %36, align 4
  %243 = icmp eq ptr %242, null
  br i1 %243, label %811, label %244, !prof !9

244:                                              ; preds = %240
  %245 = getelementptr i8, ptr %242, i32 11032
  %246 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %245) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %247 = icmp eq i32 %246, -1
  br i1 %247, label %248, label %811

248:                                              ; preds = %244
  %249 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %242) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %250 = icmp eq i32 %249, -1
  br i1 %250, label %251, label %811

251:                                              ; preds = %248
  %252 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %252, ptr noundef nonnull @.str) #22
  %253 = load ptr, ptr %32, align 4
  %254 = call zeroext i1 @pci_device_is_present(ptr noundef %253) #23
  br i1 %254, label %806, label %811, !prof !9

255:                                              ; preds = %66
  %256 = getelementptr i8, ptr %67, i32 10280
  %257 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %256) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %258 = icmp eq i32 %257, -1
  br i1 %258, label %259, label %267

259:                                              ; preds = %255
  %260 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %67) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %261 = icmp eq i32 %260, -1
  br i1 %261, label %262, label %267

262:                                              ; preds = %259
  %263 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %263, ptr noundef nonnull @.str) #22
  %264 = load ptr, ptr %32, align 4
  %265 = call zeroext i1 @pci_device_is_present(ptr noundef %264) #23
  br i1 %265, label %266, label %267, !prof !9

266:                                              ; preds = %262
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10280) #23
  br label %267

267:                                              ; preds = %266, %262, %259, %255, %66
  %268 = phi i32 [ -1, %66 ], [ -1, %262 ], [ -1, %266 ], [ -1, %259 ], [ %257, %255 ]
  %269 = load volatile ptr, ptr %36, align 4
  %270 = icmp eq ptr %269, null
  br i1 %270, label %283, label %271, !prof !9

271:                                              ; preds = %267
  %272 = getelementptr i8, ptr %269, i32 10536
  %273 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %272) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %274 = icmp eq i32 %273, -1
  br i1 %274, label %275, label %283

275:                                              ; preds = %271
  %276 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %269) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %277 = icmp eq i32 %276, -1
  br i1 %277, label %278, label %283

278:                                              ; preds = %275
  %279 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %279, ptr noundef nonnull @.str) #22
  %280 = load ptr, ptr %32, align 4
  %281 = call zeroext i1 @pci_device_is_present(ptr noundef %280) #23
  br i1 %281, label %282, label %283, !prof !9

282:                                              ; preds = %278
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10536) #23
  br label %283

283:                                              ; preds = %282, %278, %275, %271, %267
  %284 = phi i32 [ -1, %267 ], [ -1, %278 ], [ -1, %282 ], [ -1, %275 ], [ %273, %271 ]
  %285 = load volatile ptr, ptr %36, align 4
  %286 = icmp eq ptr %285, null
  br i1 %286, label %299, label %287, !prof !9

287:                                              ; preds = %283
  %288 = getelementptr i8, ptr %285, i32 10792
  %289 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %288) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %290 = icmp eq i32 %289, -1
  br i1 %290, label %291, label %299

291:                                              ; preds = %287
  %292 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %285) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %293 = icmp eq i32 %292, -1
  br i1 %293, label %294, label %299

294:                                              ; preds = %291
  %295 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %295, ptr noundef nonnull @.str) #22
  %296 = load ptr, ptr %32, align 4
  %297 = call zeroext i1 @pci_device_is_present(ptr noundef %296) #23
  br i1 %297, label %298, label %299, !prof !9

298:                                              ; preds = %294
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10792) #23
  br label %299

299:                                              ; preds = %298, %294, %291, %287, %283
  %300 = phi i32 [ -1, %283 ], [ -1, %294 ], [ -1, %298 ], [ -1, %291 ], [ %289, %287 ]
  %301 = load volatile ptr, ptr %36, align 4
  %302 = icmp eq ptr %301, null
  br i1 %302, label %811, label %303, !prof !9

303:                                              ; preds = %299
  %304 = getelementptr i8, ptr %301, i32 11048
  %305 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %304) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %306 = icmp eq i32 %305, -1
  br i1 %306, label %307, label %811

307:                                              ; preds = %303
  %308 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %301) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %309 = icmp eq i32 %308, -1
  br i1 %309, label %310, label %811

310:                                              ; preds = %307
  %311 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %311, ptr noundef nonnull @.str) #22
  %312 = load ptr, ptr %32, align 4
  %313 = call zeroext i1 @pci_device_is_present(ptr noundef %312) #23
  br i1 %313, label %806, label %811, !prof !9

314:                                              ; preds = %63
  %315 = getelementptr i8, ptr %64, i32 10240
  %316 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %315) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %317 = icmp eq i32 %316, -1
  br i1 %317, label %318, label %326

318:                                              ; preds = %314
  %319 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %64) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %320 = icmp eq i32 %319, -1
  br i1 %320, label %321, label %326

321:                                              ; preds = %318
  %322 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %322, ptr noundef nonnull @.str) #22
  %323 = load ptr, ptr %32, align 4
  %324 = call zeroext i1 @pci_device_is_present(ptr noundef %323) #23
  br i1 %324, label %325, label %326, !prof !9

325:                                              ; preds = %321
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10240) #23
  br label %326

326:                                              ; preds = %325, %321, %318, %314, %63
  %327 = phi i32 [ -1, %63 ], [ -1, %321 ], [ -1, %325 ], [ -1, %318 ], [ %316, %314 ]
  %328 = load volatile ptr, ptr %36, align 4
  %329 = icmp eq ptr %328, null
  br i1 %329, label %342, label %330, !prof !9

330:                                              ; preds = %326
  %331 = getelementptr i8, ptr %328, i32 10496
  %332 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %331) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %333 = icmp eq i32 %332, -1
  br i1 %333, label %334, label %342

334:                                              ; preds = %330
  %335 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %328) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %336 = icmp eq i32 %335, -1
  br i1 %336, label %337, label %342

337:                                              ; preds = %334
  %338 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %338, ptr noundef nonnull @.str) #22
  %339 = load ptr, ptr %32, align 4
  %340 = call zeroext i1 @pci_device_is_present(ptr noundef %339) #23
  br i1 %340, label %341, label %342, !prof !9

341:                                              ; preds = %337
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10496) #23
  br label %342

342:                                              ; preds = %341, %337, %334, %330, %326
  %343 = phi i32 [ -1, %326 ], [ -1, %337 ], [ -1, %341 ], [ -1, %334 ], [ %332, %330 ]
  %344 = load volatile ptr, ptr %36, align 4
  %345 = icmp eq ptr %344, null
  br i1 %345, label %358, label %346, !prof !9

346:                                              ; preds = %342
  %347 = getelementptr i8, ptr %344, i32 10752
  %348 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %347) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %349 = icmp eq i32 %348, -1
  br i1 %349, label %350, label %358

350:                                              ; preds = %346
  %351 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %344) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %352 = icmp eq i32 %351, -1
  br i1 %352, label %353, label %358

353:                                              ; preds = %350
  %354 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %354, ptr noundef nonnull @.str) #22
  %355 = load ptr, ptr %32, align 4
  %356 = call zeroext i1 @pci_device_is_present(ptr noundef %355) #23
  br i1 %356, label %357, label %358, !prof !9

357:                                              ; preds = %353
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10752) #23
  br label %358

358:                                              ; preds = %357, %353, %350, %346, %342
  %359 = phi i32 [ -1, %342 ], [ -1, %353 ], [ -1, %357 ], [ -1, %350 ], [ %348, %346 ]
  %360 = load volatile ptr, ptr %36, align 4
  %361 = icmp eq ptr %360, null
  br i1 %361, label %811, label %362, !prof !9

362:                                              ; preds = %358
  %363 = getelementptr i8, ptr %360, i32 11008
  %364 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %363) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %365 = icmp eq i32 %364, -1
  br i1 %365, label %366, label %811

366:                                              ; preds = %362
  %367 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %360) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %368 = icmp eq i32 %367, -1
  br i1 %368, label %369, label %811

369:                                              ; preds = %366
  %370 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %370, ptr noundef nonnull @.str) #22
  %371 = load ptr, ptr %32, align 4
  %372 = call zeroext i1 @pci_device_is_present(ptr noundef %371) #23
  br i1 %372, label %806, label %811, !prof !9

373:                                              ; preds = %60
  %374 = getelementptr i8, ptr %61, i32 10244
  %375 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %374) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %376 = icmp eq i32 %375, -1
  br i1 %376, label %377, label %385

377:                                              ; preds = %373
  %378 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %61) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %379 = icmp eq i32 %378, -1
  br i1 %379, label %380, label %385

380:                                              ; preds = %377
  %381 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %381, ptr noundef nonnull @.str) #22
  %382 = load ptr, ptr %32, align 4
  %383 = call zeroext i1 @pci_device_is_present(ptr noundef %382) #23
  br i1 %383, label %384, label %385, !prof !9

384:                                              ; preds = %380
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10244) #23
  br label %385

385:                                              ; preds = %384, %380, %377, %373, %60
  %386 = phi i32 [ -1, %60 ], [ -1, %380 ], [ -1, %384 ], [ -1, %377 ], [ %375, %373 ]
  %387 = load volatile ptr, ptr %36, align 4
  %388 = icmp eq ptr %387, null
  br i1 %388, label %401, label %389, !prof !9

389:                                              ; preds = %385
  %390 = getelementptr i8, ptr %387, i32 10500
  %391 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %390) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %392 = icmp eq i32 %391, -1
  br i1 %392, label %393, label %401

393:                                              ; preds = %389
  %394 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %387) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %395 = icmp eq i32 %394, -1
  br i1 %395, label %396, label %401

396:                                              ; preds = %393
  %397 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %397, ptr noundef nonnull @.str) #22
  %398 = load ptr, ptr %32, align 4
  %399 = call zeroext i1 @pci_device_is_present(ptr noundef %398) #23
  br i1 %399, label %400, label %401, !prof !9

400:                                              ; preds = %396
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10500) #23
  br label %401

401:                                              ; preds = %400, %396, %393, %389, %385
  %402 = phi i32 [ -1, %385 ], [ -1, %396 ], [ -1, %400 ], [ -1, %393 ], [ %391, %389 ]
  %403 = load volatile ptr, ptr %36, align 4
  %404 = icmp eq ptr %403, null
  br i1 %404, label %417, label %405, !prof !9

405:                                              ; preds = %401
  %406 = getelementptr i8, ptr %403, i32 10756
  %407 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %406) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %408 = icmp eq i32 %407, -1
  br i1 %408, label %409, label %417

409:                                              ; preds = %405
  %410 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %403) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %411 = icmp eq i32 %410, -1
  br i1 %411, label %412, label %417

412:                                              ; preds = %409
  %413 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %413, ptr noundef nonnull @.str) #22
  %414 = load ptr, ptr %32, align 4
  %415 = call zeroext i1 @pci_device_is_present(ptr noundef %414) #23
  br i1 %415, label %416, label %417, !prof !9

416:                                              ; preds = %412
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 10756) #23
  br label %417

417:                                              ; preds = %416, %412, %409, %405, %401
  %418 = phi i32 [ -1, %401 ], [ -1, %412 ], [ -1, %416 ], [ -1, %409 ], [ %407, %405 ]
  %419 = load volatile ptr, ptr %36, align 4
  %420 = icmp eq ptr %419, null
  br i1 %420, label %811, label %421, !prof !9

421:                                              ; preds = %417
  %422 = getelementptr i8, ptr %419, i32 11012
  %423 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %422) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %424 = icmp eq i32 %423, -1
  br i1 %424, label %425, label %811

425:                                              ; preds = %421
  %426 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %419) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %427 = icmp eq i32 %426, -1
  br i1 %427, label %428, label %811

428:                                              ; preds = %425
  %429 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %429, ptr noundef nonnull @.str) #22
  %430 = load ptr, ptr %32, align 4
  %431 = call zeroext i1 @pci_device_is_present(ptr noundef %430) #23
  br i1 %431, label %806, label %811, !prof !9

432:                                              ; preds = %57
  %433 = getelementptr i8, ptr %58, i32 14336
  %434 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %433) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %435 = icmp eq i32 %434, -1
  br i1 %435, label %436, label %444

436:                                              ; preds = %432
  %437 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %58) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %438 = icmp eq i32 %437, -1
  br i1 %438, label %439, label %444

439:                                              ; preds = %436
  %440 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %440, ptr noundef nonnull @.str) #22
  %441 = load ptr, ptr %32, align 4
  %442 = call zeroext i1 @pci_device_is_present(ptr noundef %441) #23
  br i1 %442, label %443, label %444, !prof !9

443:                                              ; preds = %439
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14336) #23
  br label %444

444:                                              ; preds = %443, %439, %436, %432, %57
  %445 = phi i32 [ -1, %57 ], [ -1, %439 ], [ -1, %443 ], [ -1, %436 ], [ %434, %432 ]
  %446 = load volatile ptr, ptr %36, align 4
  %447 = icmp eq ptr %446, null
  br i1 %447, label %460, label %448, !prof !9

448:                                              ; preds = %444
  %449 = getelementptr i8, ptr %446, i32 14592
  %450 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %449) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %451 = icmp eq i32 %450, -1
  br i1 %451, label %452, label %460

452:                                              ; preds = %448
  %453 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %446) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %454 = icmp eq i32 %453, -1
  br i1 %454, label %455, label %460

455:                                              ; preds = %452
  %456 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %456, ptr noundef nonnull @.str) #22
  %457 = load ptr, ptr %32, align 4
  %458 = call zeroext i1 @pci_device_is_present(ptr noundef %457) #23
  br i1 %458, label %459, label %460, !prof !9

459:                                              ; preds = %455
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14592) #23
  br label %460

460:                                              ; preds = %459, %455, %452, %448, %444
  %461 = phi i32 [ -1, %444 ], [ -1, %455 ], [ -1, %459 ], [ -1, %452 ], [ %450, %448 ]
  %462 = load volatile ptr, ptr %36, align 4
  %463 = icmp eq ptr %462, null
  br i1 %463, label %476, label %464, !prof !9

464:                                              ; preds = %460
  %465 = getelementptr i8, ptr %462, i32 14848
  %466 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %465) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %467 = icmp eq i32 %466, -1
  br i1 %467, label %468, label %476

468:                                              ; preds = %464
  %469 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %462) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %470 = icmp eq i32 %469, -1
  br i1 %470, label %471, label %476

471:                                              ; preds = %468
  %472 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %472, ptr noundef nonnull @.str) #22
  %473 = load ptr, ptr %32, align 4
  %474 = call zeroext i1 @pci_device_is_present(ptr noundef %473) #23
  br i1 %474, label %475, label %476, !prof !9

475:                                              ; preds = %471
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14848) #23
  br label %476

476:                                              ; preds = %475, %471, %468, %464, %460
  %477 = phi i32 [ -1, %460 ], [ -1, %471 ], [ -1, %475 ], [ -1, %468 ], [ %466, %464 ]
  %478 = load volatile ptr, ptr %36, align 4
  %479 = icmp eq ptr %478, null
  br i1 %479, label %811, label %480, !prof !9

480:                                              ; preds = %476
  %481 = getelementptr i8, ptr %478, i32 15104
  %482 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %481) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %483 = icmp eq i32 %482, -1
  br i1 %483, label %484, label %811

484:                                              ; preds = %480
  %485 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %478) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %486 = icmp eq i32 %485, -1
  br i1 %486, label %487, label %811

487:                                              ; preds = %484
  %488 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %488, ptr noundef nonnull @.str) #22
  %489 = load ptr, ptr %32, align 4
  %490 = call zeroext i1 @pci_device_is_present(ptr noundef %489) #23
  br i1 %490, label %806, label %811, !prof !9

491:                                              ; preds = %54
  %492 = getelementptr i8, ptr %55, i32 14340
  %493 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %492) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %494 = icmp eq i32 %493, -1
  br i1 %494, label %495, label %503

495:                                              ; preds = %491
  %496 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %55) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %497 = icmp eq i32 %496, -1
  br i1 %497, label %498, label %503

498:                                              ; preds = %495
  %499 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %499, ptr noundef nonnull @.str) #22
  %500 = load ptr, ptr %32, align 4
  %501 = call zeroext i1 @pci_device_is_present(ptr noundef %500) #23
  br i1 %501, label %502, label %503, !prof !9

502:                                              ; preds = %498
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14340) #23
  br label %503

503:                                              ; preds = %502, %498, %495, %491, %54
  %504 = phi i32 [ -1, %54 ], [ -1, %498 ], [ -1, %502 ], [ -1, %495 ], [ %493, %491 ]
  %505 = load volatile ptr, ptr %36, align 4
  %506 = icmp eq ptr %505, null
  br i1 %506, label %519, label %507, !prof !9

507:                                              ; preds = %503
  %508 = getelementptr i8, ptr %505, i32 14596
  %509 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %508) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %510 = icmp eq i32 %509, -1
  br i1 %510, label %511, label %519

511:                                              ; preds = %507
  %512 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %505) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %513 = icmp eq i32 %512, -1
  br i1 %513, label %514, label %519

514:                                              ; preds = %511
  %515 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %515, ptr noundef nonnull @.str) #22
  %516 = load ptr, ptr %32, align 4
  %517 = call zeroext i1 @pci_device_is_present(ptr noundef %516) #23
  br i1 %517, label %518, label %519, !prof !9

518:                                              ; preds = %514
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14596) #23
  br label %519

519:                                              ; preds = %518, %514, %511, %507, %503
  %520 = phi i32 [ -1, %503 ], [ -1, %514 ], [ -1, %518 ], [ -1, %511 ], [ %509, %507 ]
  %521 = load volatile ptr, ptr %36, align 4
  %522 = icmp eq ptr %521, null
  br i1 %522, label %535, label %523, !prof !9

523:                                              ; preds = %519
  %524 = getelementptr i8, ptr %521, i32 14852
  %525 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %524) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %526 = icmp eq i32 %525, -1
  br i1 %526, label %527, label %535

527:                                              ; preds = %523
  %528 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %521) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %529 = icmp eq i32 %528, -1
  br i1 %529, label %530, label %535

530:                                              ; preds = %527
  %531 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %531, ptr noundef nonnull @.str) #22
  %532 = load ptr, ptr %32, align 4
  %533 = call zeroext i1 @pci_device_is_present(ptr noundef %532) #23
  br i1 %533, label %534, label %535, !prof !9

534:                                              ; preds = %530
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14852) #23
  br label %535

535:                                              ; preds = %534, %530, %527, %523, %519
  %536 = phi i32 [ -1, %519 ], [ -1, %530 ], [ -1, %534 ], [ -1, %527 ], [ %525, %523 ]
  %537 = load volatile ptr, ptr %36, align 4
  %538 = icmp eq ptr %537, null
  br i1 %538, label %811, label %539, !prof !9

539:                                              ; preds = %535
  %540 = getelementptr i8, ptr %537, i32 15108
  %541 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %540) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %542 = icmp eq i32 %541, -1
  br i1 %542, label %543, label %811

543:                                              ; preds = %539
  %544 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %537) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %545 = icmp eq i32 %544, -1
  br i1 %545, label %546, label %811

546:                                              ; preds = %543
  %547 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %547, ptr noundef nonnull @.str) #22
  %548 = load ptr, ptr %32, align 4
  %549 = call zeroext i1 @pci_device_is_present(ptr noundef %548) #23
  br i1 %549, label %806, label %811, !prof !9

550:                                              ; preds = %51
  %551 = getelementptr i8, ptr %52, i32 14344
  %552 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %551) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %553 = icmp eq i32 %552, -1
  br i1 %553, label %554, label %562

554:                                              ; preds = %550
  %555 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %52) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %556 = icmp eq i32 %555, -1
  br i1 %556, label %557, label %562

557:                                              ; preds = %554
  %558 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %558, ptr noundef nonnull @.str) #22
  %559 = load ptr, ptr %32, align 4
  %560 = call zeroext i1 @pci_device_is_present(ptr noundef %559) #23
  br i1 %560, label %561, label %562, !prof !9

561:                                              ; preds = %557
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14344) #23
  br label %562

562:                                              ; preds = %561, %557, %554, %550, %51
  %563 = phi i32 [ -1, %51 ], [ -1, %557 ], [ -1, %561 ], [ -1, %554 ], [ %552, %550 ]
  %564 = load volatile ptr, ptr %36, align 4
  %565 = icmp eq ptr %564, null
  br i1 %565, label %578, label %566, !prof !9

566:                                              ; preds = %562
  %567 = getelementptr i8, ptr %564, i32 14600
  %568 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %567) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %569 = icmp eq i32 %568, -1
  br i1 %569, label %570, label %578

570:                                              ; preds = %566
  %571 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %564) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %572 = icmp eq i32 %571, -1
  br i1 %572, label %573, label %578

573:                                              ; preds = %570
  %574 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %574, ptr noundef nonnull @.str) #22
  %575 = load ptr, ptr %32, align 4
  %576 = call zeroext i1 @pci_device_is_present(ptr noundef %575) #23
  br i1 %576, label %577, label %578, !prof !9

577:                                              ; preds = %573
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14600) #23
  br label %578

578:                                              ; preds = %577, %573, %570, %566, %562
  %579 = phi i32 [ -1, %562 ], [ -1, %573 ], [ -1, %577 ], [ -1, %570 ], [ %568, %566 ]
  %580 = load volatile ptr, ptr %36, align 4
  %581 = icmp eq ptr %580, null
  br i1 %581, label %594, label %582, !prof !9

582:                                              ; preds = %578
  %583 = getelementptr i8, ptr %580, i32 14856
  %584 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %583) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %585 = icmp eq i32 %584, -1
  br i1 %585, label %586, label %594

586:                                              ; preds = %582
  %587 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %580) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %588 = icmp eq i32 %587, -1
  br i1 %588, label %589, label %594

589:                                              ; preds = %586
  %590 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %590, ptr noundef nonnull @.str) #22
  %591 = load ptr, ptr %32, align 4
  %592 = call zeroext i1 @pci_device_is_present(ptr noundef %591) #23
  br i1 %592, label %593, label %594, !prof !9

593:                                              ; preds = %589
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14856) #23
  br label %594

594:                                              ; preds = %593, %589, %586, %582, %578
  %595 = phi i32 [ -1, %578 ], [ -1, %589 ], [ -1, %593 ], [ -1, %586 ], [ %584, %582 ]
  %596 = load volatile ptr, ptr %36, align 4
  %597 = icmp eq ptr %596, null
  br i1 %597, label %811, label %598, !prof !9

598:                                              ; preds = %594
  %599 = getelementptr i8, ptr %596, i32 15112
  %600 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %599) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %601 = icmp eq i32 %600, -1
  br i1 %601, label %602, label %811

602:                                              ; preds = %598
  %603 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %596) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %604 = icmp eq i32 %603, -1
  br i1 %604, label %605, label %811

605:                                              ; preds = %602
  %606 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %606, ptr noundef nonnull @.str) #22
  %607 = load ptr, ptr %32, align 4
  %608 = call zeroext i1 @pci_device_is_present(ptr noundef %607) #23
  br i1 %608, label %806, label %811, !prof !9

609:                                              ; preds = %48
  %610 = getelementptr i8, ptr %49, i32 14352
  %611 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %610) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %612 = icmp eq i32 %611, -1
  br i1 %612, label %613, label %621

613:                                              ; preds = %609
  %614 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %49) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %615 = icmp eq i32 %614, -1
  br i1 %615, label %616, label %621

616:                                              ; preds = %613
  %617 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %617, ptr noundef nonnull @.str) #22
  %618 = load ptr, ptr %32, align 4
  %619 = call zeroext i1 @pci_device_is_present(ptr noundef %618) #23
  br i1 %619, label %620, label %621, !prof !9

620:                                              ; preds = %616
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14352) #23
  br label %621

621:                                              ; preds = %620, %616, %613, %609, %48
  %622 = phi i32 [ -1, %48 ], [ -1, %616 ], [ -1, %620 ], [ -1, %613 ], [ %611, %609 ]
  %623 = load volatile ptr, ptr %36, align 4
  %624 = icmp eq ptr %623, null
  br i1 %624, label %637, label %625, !prof !9

625:                                              ; preds = %621
  %626 = getelementptr i8, ptr %623, i32 14608
  %627 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %626) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %628 = icmp eq i32 %627, -1
  br i1 %628, label %629, label %637

629:                                              ; preds = %625
  %630 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %623) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %631 = icmp eq i32 %630, -1
  br i1 %631, label %632, label %637

632:                                              ; preds = %629
  %633 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %633, ptr noundef nonnull @.str) #22
  %634 = load ptr, ptr %32, align 4
  %635 = call zeroext i1 @pci_device_is_present(ptr noundef %634) #23
  br i1 %635, label %636, label %637, !prof !9

636:                                              ; preds = %632
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14608) #23
  br label %637

637:                                              ; preds = %636, %632, %629, %625, %621
  %638 = phi i32 [ -1, %621 ], [ -1, %632 ], [ -1, %636 ], [ -1, %629 ], [ %627, %625 ]
  %639 = load volatile ptr, ptr %36, align 4
  %640 = icmp eq ptr %639, null
  br i1 %640, label %653, label %641, !prof !9

641:                                              ; preds = %637
  %642 = getelementptr i8, ptr %639, i32 14864
  %643 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %642) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %644 = icmp eq i32 %643, -1
  br i1 %644, label %645, label %653

645:                                              ; preds = %641
  %646 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %639) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %647 = icmp eq i32 %646, -1
  br i1 %647, label %648, label %653

648:                                              ; preds = %645
  %649 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %649, ptr noundef nonnull @.str) #22
  %650 = load ptr, ptr %32, align 4
  %651 = call zeroext i1 @pci_device_is_present(ptr noundef %650) #23
  br i1 %651, label %652, label %653, !prof !9

652:                                              ; preds = %648
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14864) #23
  br label %653

653:                                              ; preds = %652, %648, %645, %641, %637
  %654 = phi i32 [ -1, %637 ], [ -1, %648 ], [ -1, %652 ], [ -1, %645 ], [ %643, %641 ]
  %655 = load volatile ptr, ptr %36, align 4
  %656 = icmp eq ptr %655, null
  br i1 %656, label %811, label %657, !prof !9

657:                                              ; preds = %653
  %658 = getelementptr i8, ptr %655, i32 15120
  %659 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %658) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %660 = icmp eq i32 %659, -1
  br i1 %660, label %661, label %811

661:                                              ; preds = %657
  %662 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %655) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %663 = icmp eq i32 %662, -1
  br i1 %663, label %664, label %811

664:                                              ; preds = %661
  %665 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %665, ptr noundef nonnull @.str) #22
  %666 = load ptr, ptr %32, align 4
  %667 = call zeroext i1 @pci_device_is_present(ptr noundef %666) #23
  br i1 %667, label %806, label %811, !prof !9

668:                                              ; preds = %45
  %669 = getelementptr i8, ptr %46, i32 14360
  %670 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %669) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %671 = icmp eq i32 %670, -1
  br i1 %671, label %672, label %680

672:                                              ; preds = %668
  %673 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %46) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %674 = icmp eq i32 %673, -1
  br i1 %674, label %675, label %680

675:                                              ; preds = %672
  %676 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %676, ptr noundef nonnull @.str) #22
  %677 = load ptr, ptr %32, align 4
  %678 = call zeroext i1 @pci_device_is_present(ptr noundef %677) #23
  br i1 %678, label %679, label %680, !prof !9

679:                                              ; preds = %675
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14360) #23
  br label %680

680:                                              ; preds = %679, %675, %672, %668, %45
  %681 = phi i32 [ -1, %45 ], [ -1, %675 ], [ -1, %679 ], [ -1, %672 ], [ %670, %668 ]
  %682 = load volatile ptr, ptr %36, align 4
  %683 = icmp eq ptr %682, null
  br i1 %683, label %696, label %684, !prof !9

684:                                              ; preds = %680
  %685 = getelementptr i8, ptr %682, i32 14616
  %686 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %685) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %687 = icmp eq i32 %686, -1
  br i1 %687, label %688, label %696

688:                                              ; preds = %684
  %689 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %682) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %690 = icmp eq i32 %689, -1
  br i1 %690, label %691, label %696

691:                                              ; preds = %688
  %692 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %692, ptr noundef nonnull @.str) #22
  %693 = load ptr, ptr %32, align 4
  %694 = call zeroext i1 @pci_device_is_present(ptr noundef %693) #23
  br i1 %694, label %695, label %696, !prof !9

695:                                              ; preds = %691
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14616) #23
  br label %696

696:                                              ; preds = %695, %691, %688, %684, %680
  %697 = phi i32 [ -1, %680 ], [ -1, %691 ], [ -1, %695 ], [ -1, %688 ], [ %686, %684 ]
  %698 = load volatile ptr, ptr %36, align 4
  %699 = icmp eq ptr %698, null
  br i1 %699, label %712, label %700, !prof !9

700:                                              ; preds = %696
  %701 = getelementptr i8, ptr %698, i32 14872
  %702 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %701) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %703 = icmp eq i32 %702, -1
  br i1 %703, label %704, label %712

704:                                              ; preds = %700
  %705 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %698) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %706 = icmp eq i32 %705, -1
  br i1 %706, label %707, label %712

707:                                              ; preds = %704
  %708 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %708, ptr noundef nonnull @.str) #22
  %709 = load ptr, ptr %32, align 4
  %710 = call zeroext i1 @pci_device_is_present(ptr noundef %709) #23
  br i1 %710, label %711, label %712, !prof !9

711:                                              ; preds = %707
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14872) #23
  br label %712

712:                                              ; preds = %711, %707, %704, %700, %696
  %713 = phi i32 [ -1, %696 ], [ -1, %707 ], [ -1, %711 ], [ -1, %704 ], [ %702, %700 ]
  %714 = load volatile ptr, ptr %36, align 4
  %715 = icmp eq ptr %714, null
  br i1 %715, label %811, label %716, !prof !9

716:                                              ; preds = %712
  %717 = getelementptr i8, ptr %714, i32 15128
  %718 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %717) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %719 = icmp eq i32 %718, -1
  br i1 %719, label %720, label %811

720:                                              ; preds = %716
  %721 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %714) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %722 = icmp eq i32 %721, -1
  br i1 %722, label %723, label %811

723:                                              ; preds = %720
  %724 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %724, ptr noundef nonnull @.str) #22
  %725 = load ptr, ptr %32, align 4
  %726 = call zeroext i1 @pci_device_is_present(ptr noundef %725) #23
  br i1 %726, label %806, label %811, !prof !9

727:                                              ; preds = %42
  %728 = getelementptr i8, ptr %43, i32 14376
  %729 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %728) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %730 = icmp eq i32 %729, -1
  br i1 %730, label %731, label %739

731:                                              ; preds = %727
  %732 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %43) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %733 = icmp eq i32 %732, -1
  br i1 %733, label %734, label %739

734:                                              ; preds = %731
  %735 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %735, ptr noundef nonnull @.str) #22
  %736 = load ptr, ptr %32, align 4
  %737 = call zeroext i1 @pci_device_is_present(ptr noundef %736) #23
  br i1 %737, label %738, label %739, !prof !9

738:                                              ; preds = %734
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14376) #23
  br label %739

739:                                              ; preds = %738, %734, %731, %727, %42
  %740 = phi i32 [ -1, %42 ], [ -1, %734 ], [ -1, %738 ], [ -1, %731 ], [ %729, %727 ]
  %741 = load volatile ptr, ptr %36, align 4
  %742 = icmp eq ptr %741, null
  br i1 %742, label %755, label %743, !prof !9

743:                                              ; preds = %739
  %744 = getelementptr i8, ptr %741, i32 14632
  %745 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %744) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %746 = icmp eq i32 %745, -1
  br i1 %746, label %747, label %755

747:                                              ; preds = %743
  %748 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %741) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %749 = icmp eq i32 %748, -1
  br i1 %749, label %750, label %755

750:                                              ; preds = %747
  %751 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %751, ptr noundef nonnull @.str) #22
  %752 = load ptr, ptr %32, align 4
  %753 = call zeroext i1 @pci_device_is_present(ptr noundef %752) #23
  br i1 %753, label %754, label %755, !prof !9

754:                                              ; preds = %750
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14632) #23
  br label %755

755:                                              ; preds = %754, %750, %747, %743, %739
  %756 = phi i32 [ -1, %739 ], [ -1, %750 ], [ -1, %754 ], [ -1, %747 ], [ %745, %743 ]
  %757 = load volatile ptr, ptr %36, align 4
  %758 = icmp eq ptr %757, null
  br i1 %758, label %771, label %759, !prof !9

759:                                              ; preds = %755
  %760 = getelementptr i8, ptr %757, i32 14888
  %761 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %760) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %762 = icmp eq i32 %761, -1
  br i1 %762, label %763, label %771

763:                                              ; preds = %759
  %764 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %757) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %765 = icmp eq i32 %764, -1
  br i1 %765, label %766, label %771

766:                                              ; preds = %763
  %767 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %767, ptr noundef nonnull @.str) #22
  %768 = load ptr, ptr %32, align 4
  %769 = call zeroext i1 @pci_device_is_present(ptr noundef %768) #23
  br i1 %769, label %770, label %771, !prof !9

770:                                              ; preds = %766
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 14888) #23
  br label %771

771:                                              ; preds = %770, %766, %763, %759, %755
  %772 = phi i32 [ -1, %755 ], [ -1, %766 ], [ -1, %770 ], [ -1, %763 ], [ %761, %759 ]
  %773 = load volatile ptr, ptr %36, align 4
  %774 = icmp eq ptr %773, null
  br i1 %774, label %811, label %775, !prof !9

775:                                              ; preds = %771
  %776 = getelementptr i8, ptr %773, i32 15144
  %777 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %776) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %778 = icmp eq i32 %777, -1
  br i1 %778, label %779, label %811

779:                                              ; preds = %775
  %780 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %773) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %781 = icmp eq i32 %780, -1
  br i1 %781, label %782, label %811

782:                                              ; preds = %779
  %783 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %783, ptr noundef nonnull @.str) #22
  %784 = load ptr, ptr %32, align 4
  %785 = call zeroext i1 @pci_device_is_present(ptr noundef %784) #23
  br i1 %785, label %806, label %811, !prof !9

786:                                              ; preds = %37
  %787 = load volatile ptr, ptr %36, align 4
  %788 = icmp eq ptr %787, null
  br i1 %788, label %803, label %789, !prof !9

789:                                              ; preds = %786
  %790 = getelementptr i8, ptr %787, i32 %41
  %791 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %790) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %792 = icmp eq i32 %791, -1
  br i1 %792, label %793, label %803

793:                                              ; preds = %789
  %794 = icmp eq i32 %41, 0
  br i1 %794, label %798, label %795

795:                                              ; preds = %793
  %796 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %787) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %797 = icmp eq i32 %796, -1
  br i1 %797, label %798, label %803

798:                                              ; preds = %795, %793
  %799 = load ptr, ptr %14, align 64
  store ptr null, ptr %36, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %799, ptr noundef nonnull @.str) #22
  %800 = load ptr, ptr %32, align 4
  %801 = call zeroext i1 @pci_device_is_present(ptr noundef %800) #23
  br i1 %801, label %802, label %803, !prof !9

802:                                              ; preds = %798
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %41) #23
  br label %803

803:                                              ; preds = %802, %798, %795, %789, %786
  %804 = phi i32 [ -1, %786 ], [ -1, %798 ], [ -1, %802 ], [ -1, %795 ], [ %791, %789 ]
  %805 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.107, ptr noundef nonnull %38, i32 noundef %804) #22
  br label %819

806:                                              ; preds = %782, %723, %664, %605, %546, %487, %428, %369, %310, %251, %192, %133
  %807 = phi i32 [ 11016, %133 ], [ 11024, %192 ], [ 11032, %251 ], [ 11048, %310 ], [ 11008, %369 ], [ 11012, %428 ], [ 15104, %487 ], [ 15108, %546 ], [ 15112, %605 ], [ 15120, %664 ], [ 15128, %723 ], [ 15144, %782 ]
  %808 = phi i32 [ %91, %133 ], [ %150, %192 ], [ %209, %251 ], [ %268, %310 ], [ %327, %369 ], [ %386, %428 ], [ %445, %487 ], [ %504, %546 ], [ %563, %605 ], [ %622, %664 ], [ %681, %723 ], [ %740, %782 ]
  %809 = phi i32 [ %107, %133 ], [ %166, %192 ], [ %225, %251 ], [ %284, %310 ], [ %343, %369 ], [ %402, %428 ], [ %461, %487 ], [ %520, %546 ], [ %579, %605 ], [ %638, %664 ], [ %697, %723 ], [ %756, %782 ]
  %810 = phi i32 [ %123, %133 ], [ %182, %192 ], [ %241, %251 ], [ %300, %310 ], [ %359, %369 ], [ %418, %428 ], [ %477, %487 ], [ %536, %546 ], [ %595, %605 ], [ %654, %664 ], [ %713, %723 ], [ %772, %782 ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %807) #23
  br label %811

811:                                              ; preds = %806, %782, %779, %775, %771, %723, %720, %716, %712, %664, %661, %657, %653, %605, %602, %598, %594, %546, %543, %539, %535, %487, %484, %480, %476, %428, %425, %421, %417, %369, %366, %362, %358, %310, %307, %303, %299, %251, %248, %244, %240, %192, %189, %185, %181, %133, %130, %126, %122
  %812 = phi i32 [ %91, %133 ], [ %91, %130 ], [ %91, %126 ], [ %91, %122 ], [ %150, %192 ], [ %150, %189 ], [ %150, %185 ], [ %150, %181 ], [ %209, %251 ], [ %209, %248 ], [ %209, %244 ], [ %209, %240 ], [ %268, %310 ], [ %268, %307 ], [ %268, %303 ], [ %268, %299 ], [ %327, %369 ], [ %327, %366 ], [ %327, %362 ], [ %327, %358 ], [ %386, %428 ], [ %386, %425 ], [ %386, %421 ], [ %386, %417 ], [ %445, %487 ], [ %445, %484 ], [ %445, %480 ], [ %445, %476 ], [ %504, %546 ], [ %504, %543 ], [ %504, %539 ], [ %504, %535 ], [ %563, %605 ], [ %563, %602 ], [ %563, %598 ], [ %563, %594 ], [ %622, %664 ], [ %622, %661 ], [ %622, %657 ], [ %622, %653 ], [ %681, %723 ], [ %681, %720 ], [ %681, %716 ], [ %681, %712 ], [ %740, %782 ], [ %740, %779 ], [ %740, %775 ], [ %740, %771 ], [ %808, %806 ]
  %813 = phi i32 [ %107, %133 ], [ %107, %130 ], [ %107, %126 ], [ %107, %122 ], [ %166, %192 ], [ %166, %189 ], [ %166, %185 ], [ %166, %181 ], [ %225, %251 ], [ %225, %248 ], [ %225, %244 ], [ %225, %240 ], [ %284, %310 ], [ %284, %307 ], [ %284, %303 ], [ %284, %299 ], [ %343, %369 ], [ %343, %366 ], [ %343, %362 ], [ %343, %358 ], [ %402, %428 ], [ %402, %425 ], [ %402, %421 ], [ %402, %417 ], [ %461, %487 ], [ %461, %484 ], [ %461, %480 ], [ %461, %476 ], [ %520, %546 ], [ %520, %543 ], [ %520, %539 ], [ %520, %535 ], [ %579, %605 ], [ %579, %602 ], [ %579, %598 ], [ %579, %594 ], [ %638, %664 ], [ %638, %661 ], [ %638, %657 ], [ %638, %653 ], [ %697, %723 ], [ %697, %720 ], [ %697, %716 ], [ %697, %712 ], [ %756, %782 ], [ %756, %779 ], [ %756, %775 ], [ %756, %771 ], [ %809, %806 ]
  %814 = phi i32 [ %123, %133 ], [ %123, %130 ], [ %123, %126 ], [ %123, %122 ], [ %182, %192 ], [ %182, %189 ], [ %182, %185 ], [ %182, %181 ], [ %241, %251 ], [ %241, %248 ], [ %241, %244 ], [ %241, %240 ], [ %300, %310 ], [ %300, %307 ], [ %300, %303 ], [ %300, %299 ], [ %359, %369 ], [ %359, %366 ], [ %359, %362 ], [ %359, %358 ], [ %418, %428 ], [ %418, %425 ], [ %418, %421 ], [ %418, %417 ], [ %477, %487 ], [ %477, %484 ], [ %477, %480 ], [ %477, %476 ], [ %536, %546 ], [ %536, %543 ], [ %536, %539 ], [ %536, %535 ], [ %595, %605 ], [ %595, %602 ], [ %595, %598 ], [ %595, %594 ], [ %654, %664 ], [ %654, %661 ], [ %654, %657 ], [ %654, %653 ], [ %713, %723 ], [ %713, %720 ], [ %713, %716 ], [ %713, %712 ], [ %772, %782 ], [ %772, %779 ], [ %772, %775 ], [ %772, %771 ], [ %810, %806 ]
  %815 = phi i32 [ -1, %133 ], [ -1, %130 ], [ %128, %126 ], [ -1, %122 ], [ -1, %192 ], [ -1, %189 ], [ %187, %185 ], [ -1, %181 ], [ -1, %251 ], [ -1, %248 ], [ %246, %244 ], [ -1, %240 ], [ -1, %310 ], [ -1, %307 ], [ %305, %303 ], [ -1, %299 ], [ -1, %369 ], [ -1, %366 ], [ %364, %362 ], [ -1, %358 ], [ -1, %428 ], [ -1, %425 ], [ %423, %421 ], [ -1, %417 ], [ -1, %487 ], [ -1, %484 ], [ %482, %480 ], [ -1, %476 ], [ -1, %546 ], [ -1, %543 ], [ %541, %539 ], [ -1, %535 ], [ -1, %605 ], [ -1, %602 ], [ %600, %598 ], [ -1, %594 ], [ -1, %664 ], [ -1, %661 ], [ %659, %657 ], [ -1, %653 ], [ -1, %723 ], [ -1, %720 ], [ %718, %716 ], [ -1, %712 ], [ -1, %782 ], [ -1, %779 ], [ %777, %775 ], [ -1, %771 ], [ -1, %806 ]
  %816 = load ptr, ptr %39, align 4
  %817 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %2, i32 noundef 16, ptr noundef nonnull @.str.108, ptr noundef %816, ptr noundef nonnull @.str.109) #23
  %818 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.110, ptr noundef nonnull %2, i32 noundef %812, i32 noundef %813, i32 noundef %814, i32 noundef %815) #22
  br label %819

819:                                              ; preds = %811, %803
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #23
  %820 = getelementptr %struct.igb_reg_info, ptr %40, i32 1
  %821 = getelementptr %struct.igb_reg_info, ptr %40, i32 1, i32 1
  %822 = load ptr, ptr %821, align 4
  %823 = icmp eq ptr %822, null
  br i1 %823, label %824, label %37

824:                                              ; preds = %819
  br i1 %21, label %1065, label %825

825:                                              ; preds = %824
  %826 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 6
  %827 = load volatile i32, ptr %826, align 4
  %828 = and i32 %827, 1
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %1065, label %830

830:                                              ; preds = %825
  %831 = load ptr, ptr %32, align 4
  %832 = getelementptr inbounds %struct.pci_dev, ptr %831, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %832, ptr noundef nonnull @.str.62) #22
  %833 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63) #22
  %834 = getelementptr i8, ptr %0, i32 -208
  %835 = load i32, ptr %834, align 8
  %836 = icmp sgt i32 %835, 0
  br i1 %836, label %837, label %865

837:                                              ; preds = %837, %830
  %838 = phi i32 [ %862, %837 ], [ 0, %830 ]
  %839 = phi i16 [ %861, %837 ], [ 0, %830 ]
  %840 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 14, i32 %838
  %841 = load ptr, ptr %840, align 4
  %842 = getelementptr inbounds %struct.igb_ring, ptr %841, i32 0, i32 4
  %843 = load ptr, ptr %842, align 16
  %844 = getelementptr inbounds %struct.igb_ring, ptr %841, i32 0, i32 19
  %845 = load i16, ptr %844, align 64
  %846 = zext i16 %845 to i32
  %847 = getelementptr %struct.igb_tx_buffer, ptr %843, i32 %846
  %848 = getelementptr inbounds %struct.igb_ring, ptr %841, i32 0, i32 20
  %849 = load i16, ptr %848, align 2
  %850 = zext i16 %849 to i32
  %851 = getelementptr %struct.igb_tx_buffer, ptr %843, i32 %846, i32 7
  %852 = load i32, ptr %851, align 4
  %853 = zext i32 %852 to i64
  %854 = getelementptr %struct.igb_tx_buffer, ptr %843, i32 %846, i32 8
  %855 = load i32, ptr %854, align 4
  %856 = load ptr, ptr %847, align 4
  %857 = getelementptr %struct.igb_tx_buffer, ptr %843, i32 %846, i32 1
  %858 = load i32, ptr %857, align 4
  %859 = zext i32 %858 to i64
  %860 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.64, i32 noundef %838, i32 noundef %850, i32 noundef %846, i64 noundef %853, i32 noundef %855, ptr noundef %856, i64 noundef %859) #22
  %861 = add i16 %839, 1
  %862 = zext i16 %861 to i32
  %863 = load i32, ptr %834, align 8
  %864 = icmp sgt i32 %863, %862
  br i1 %864, label %837, label %865

865:                                              ; preds = %837, %830
  %866 = load i32, ptr %16, align 64
  %867 = and i32 %866, 1024
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %947, label %869

869:                                              ; preds = %865
  %870 = load ptr, ptr %32, align 4
  %871 = getelementptr inbounds %struct.pci_dev, ptr %870, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %871, ptr noundef nonnull @.str.65) #22
  %872 = load i32, ptr %834, align 8
  %873 = icmp sgt i32 %872, 0
  br i1 %873, label %874, label %947

874:                                              ; preds = %942, %869
  %875 = phi i32 [ %944, %942 ], [ 0, %869 ]
  %876 = phi i16 [ %943, %942 ], [ 0, %869 ]
  %877 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 14, i32 %875
  %878 = load ptr, ptr %877, align 4
  %879 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.66) #22
  %880 = getelementptr inbounds %struct.igb_ring, ptr %878, i32 0, i32 11
  %881 = load i8, ptr %880, align 2
  %882 = zext i8 %881 to i32
  %883 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67, i32 noundef %882) #22
  %884 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.66) #22
  %885 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.68) #22
  %886 = getelementptr inbounds %struct.igb_ring, ptr %878, i32 0, i32 5
  %887 = load ptr, ptr %886, align 4
  %888 = icmp eq ptr %887, null
  br i1 %888, label %942, label %889

889:                                              ; preds = %874
  %890 = getelementptr inbounds %struct.igb_ring, ptr %878, i32 0, i32 10
  %891 = getelementptr inbounds %struct.igb_ring, ptr %878, i32 0, i32 4
  %892 = getelementptr inbounds %struct.igb_ring, ptr %878, i32 0, i32 20
  %893 = getelementptr inbounds %struct.igb_ring, ptr %878, i32 0, i32 19
  br label %894

894:                                              ; preds = %938, %889
  %895 = phi i32 [ 0, %889 ], [ %939, %938 ]
  %896 = phi ptr [ %887, %889 ], [ %940, %938 ]
  %897 = load i16, ptr %890, align 8
  %898 = zext i16 %897 to i32
  %899 = icmp ult i32 %895, %898
  br i1 %899, label %900, label %942

900:                                              ; preds = %894
  %901 = getelementptr %union.e1000_adv_tx_desc, ptr %896, i32 %895
  %902 = load ptr, ptr %891, align 16
  %903 = getelementptr %struct.igb_tx_buffer, ptr %902, i32 %895
  %904 = load i16, ptr %892, align 2
  %905 = zext i16 %904 to i32
  %906 = icmp eq i32 %895, %905
  %907 = load i16, ptr %893, align 64
  %908 = zext i16 %907 to i32
  %909 = icmp eq i32 %895, %908
  %910 = select i1 %909, ptr @.str.71, ptr @.str.46
  %911 = select i1 %909, ptr @.str.69, ptr @.str.70
  %912 = select i1 %906, ptr %911, ptr %910
  %913 = load i64, ptr %901, align 8
  %914 = getelementptr inbounds %struct.my_u0, ptr %901, i32 0, i32 1
  %915 = load i64, ptr %914, align 8
  %916 = getelementptr %struct.igb_tx_buffer, ptr %902, i32 %895, i32 7
  %917 = load i32, ptr %916, align 4
  %918 = zext i32 %917 to i64
  %919 = getelementptr %struct.igb_tx_buffer, ptr %902, i32 %895, i32 8
  %920 = load i32, ptr %919, align 4
  %921 = load ptr, ptr %903, align 4
  %922 = getelementptr %struct.igb_tx_buffer, ptr %902, i32 %895, i32 1
  %923 = load i32, ptr %922, align 4
  %924 = zext i32 %923 to i64
  %925 = getelementptr %struct.igb_tx_buffer, ptr %902, i32 %895, i32 3
  %926 = load ptr, ptr %925, align 4
  %927 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.72, i32 noundef %895, i64 noundef %913, i64 noundef %915, i64 noundef %918, i32 noundef %920, ptr noundef %921, i64 noundef %924, ptr noundef %926, ptr noundef nonnull %912) #22
  %928 = load i32, ptr %16, align 64
  %929 = and i32 %928, 4096
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %938, label %931

931:                                              ; preds = %900
  %932 = load ptr, ptr %925, align 4
  %933 = icmp eq ptr %932, null
  br i1 %933, label %938, label %934

934:                                              ; preds = %931
  %935 = getelementptr inbounds %struct.sk_buff, ptr %932, i32 0, i32 17
  %936 = load ptr, ptr %935, align 4
  %937 = load i32, ptr %919, align 4
  call void @print_hex_dump(ptr noundef nonnull @.str.73, ptr noundef nonnull @.str.46, i32 noundef 1, i32 noundef 16, i32 noundef 1, ptr noundef %936, i32 noundef %937, i1 noundef zeroext true) #23
  br label %938

938:                                              ; preds = %934, %931, %900
  %939 = add nuw nsw i32 %895, 1
  %940 = load ptr, ptr %886, align 4
  %941 = icmp eq ptr %940, null
  br i1 %941, label %942, label %894

942:                                              ; preds = %938, %894, %874
  %943 = add i16 %876, 1
  %944 = zext i16 %943 to i32
  %945 = load i32, ptr %834, align 8
  %946 = icmp sgt i32 %945, %944
  br i1 %946, label %874, label %947

947:                                              ; preds = %942, %869, %865
  %948 = load ptr, ptr %32, align 4
  %949 = getelementptr inbounds %struct.pci_dev, ptr %948, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %949, ptr noundef nonnull @.str.74) #22
  %950 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75) #22
  %951 = getelementptr i8, ptr %0, i32 -140
  %952 = load i32, ptr %951, align 4
  %953 = icmp sgt i32 %952, 0
  br i1 %953, label %954, label %970

954:                                              ; preds = %954, %947
  %955 = phi i32 [ %967, %954 ], [ 0, %947 ]
  %956 = phi i16 [ %966, %954 ], [ 0, %947 ]
  %957 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 16, i32 %955
  %958 = load ptr, ptr %957, align 4
  %959 = getelementptr inbounds %struct.igb_ring, ptr %958, i32 0, i32 20
  %960 = load i16, ptr %959, align 2
  %961 = zext i16 %960 to i32
  %962 = getelementptr inbounds %struct.igb_ring, ptr %958, i32 0, i32 19
  %963 = load i16, ptr %962, align 64
  %964 = zext i16 %963 to i32
  %965 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.76, i32 noundef %955, i32 noundef %961, i32 noundef %964) #22
  %966 = add i16 %956, 1
  %967 = zext i16 %966 to i32
  %968 = load i32, ptr %951, align 4
  %969 = icmp sgt i32 %968, %967
  br i1 %969, label %954, label %970

970:                                              ; preds = %954, %947
  %971 = load i32, ptr %16, align 64
  %972 = and i32 %971, 2048
  %973 = icmp eq i32 %972, 0
  br i1 %973, label %1065, label %974

974:                                              ; preds = %970
  %975 = load ptr, ptr %32, align 4
  %976 = getelementptr inbounds %struct.pci_dev, ptr %975, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %976, ptr noundef nonnull @.str.77) #22
  %977 = load i32, ptr %951, align 4
  %978 = icmp sgt i32 %977, 0
  br i1 %978, label %979, label %1065

979:                                              ; preds = %1060, %974
  %980 = phi i32 [ %1062, %1060 ], [ 0, %974 ]
  %981 = phi i16 [ %1061, %1060 ], [ 0, %974 ]
  %982 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 16, i32 %980
  %983 = load ptr, ptr %982, align 4
  %984 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.66) #22
  %985 = getelementptr inbounds %struct.igb_ring, ptr %983, i32 0, i32 11
  %986 = load i8, ptr %985, align 2
  %987 = zext i8 %986 to i32
  %988 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, i32 noundef %987) #22
  %989 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.66) #22
  %990 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.79) #22
  %991 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.80) #22
  %992 = getelementptr inbounds %struct.igb_ring, ptr %983, i32 0, i32 10
  %993 = load i16, ptr %992, align 8
  %994 = icmp eq i16 %993, 0
  br i1 %994, label %1060, label %995

995:                                              ; preds = %979
  %996 = getelementptr inbounds %struct.igb_ring, ptr %983, i32 0, i32 4
  %997 = getelementptr inbounds %struct.igb_ring, ptr %983, i32 0, i32 5
  %998 = getelementptr inbounds %struct.igb_ring, ptr %983, i32 0, i32 20
  %999 = getelementptr inbounds %struct.igb_ring, ptr %983, i32 0, i32 19
  %1000 = getelementptr inbounds %struct.igb_ring, ptr %983, i32 0, i32 6
  br label %1001

1001:                                             ; preds = %1055, %995
  %1002 = phi i32 [ 0, %995 ], [ %1056, %1055 ]
  %1003 = load ptr, ptr %996, align 16
  %1004 = getelementptr %struct.igb_rx_buffer, ptr %1003, i32 %1002
  %1005 = load ptr, ptr %997, align 4
  %1006 = getelementptr %union.e1000_adv_rx_desc, ptr %1005, i32 %1002
  %1007 = getelementptr inbounds %struct.anon.197, ptr %1006, i32 0, i32 1
  %1008 = load i32, ptr %1007, align 8
  %1009 = load i16, ptr %998, align 2
  %1010 = zext i16 %1009 to i32
  %1011 = icmp eq i32 %1002, %1010
  br i1 %1011, label %1017, label %1012

1012:                                             ; preds = %1001
  %1013 = load i16, ptr %999, align 64
  %1014 = zext i16 %1013 to i32
  %1015 = icmp eq i32 %1002, %1014
  %1016 = select i1 %1015, ptr @.str.71, ptr @.str.46
  br label %1017

1017:                                             ; preds = %1012, %1001
  %1018 = phi ptr [ @.str.70, %1001 ], [ %1016, %1012 ]
  %1019 = and i32 %1008, 1
  %1020 = icmp eq i32 %1019, 0
  %1021 = load i64, ptr %1006, align 8
  %1022 = load i64, ptr %1007, align 8
  br i1 %1020, label %1025, label %1023

1023:                                             ; preds = %1017
  %1024 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.82, i32 noundef %1002, i64 noundef %1021, i64 noundef %1022, ptr noundef nonnull %1018) #22
  br label %1055

1025:                                             ; preds = %1017
  %1026 = load i32, ptr %1004, align 4
  %1027 = zext i32 %1026 to i64
  %1028 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.83, ptr noundef nonnull @.str.84, i32 noundef %1002, i64 noundef %1021, i64 noundef %1022, i64 noundef %1027, ptr noundef nonnull %1018) #22
  %1029 = load i32, ptr %16, align 64
  %1030 = and i32 %1029, 4096
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1055, label %1032

1032:                                             ; preds = %1025
  %1033 = load i32, ptr %1004, align 4
  %1034 = icmp eq i32 %1033, 0
  br i1 %1034, label %1055, label %1035

1035:                                             ; preds = %1032
  %1036 = getelementptr %struct.igb_rx_buffer, ptr %1003, i32 %1002, i32 1
  %1037 = load ptr, ptr %1036, align 4
  %1038 = icmp eq ptr %1037, null
  br i1 %1038, label %1055, label %1039

1039:                                             ; preds = %1035
  %1040 = call ptr @page_address(ptr noundef nonnull %1037) #23
  %1041 = getelementptr %struct.igb_rx_buffer, ptr %1003, i32 %1002, i32 2
  %1042 = load i16, ptr %1041, align 4
  %1043 = zext i16 %1042 to i32
  %1044 = getelementptr i8, ptr %1040, i32 %1043
  %1045 = load volatile i32, ptr %1000, align 4
  %1046 = and i32 %1045, 1
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1048, label %1053

1048:                                             ; preds = %1039
  %1049 = load volatile i32, ptr %1000, align 4
  %1050 = and i32 %1049, 2
  %1051 = icmp eq i32 %1050, 0
  %1052 = select i1 %1051, i32 2048, i32 1534
  br label %1053

1053:                                             ; preds = %1048, %1039
  %1054 = phi i32 [ 3072, %1039 ], [ %1052, %1048 ]
  call void @print_hex_dump(ptr noundef nonnull @.str.73, ptr noundef nonnull @.str.46, i32 noundef 1, i32 noundef 16, i32 noundef 1, ptr noundef %1044, i32 noundef %1054, i1 noundef zeroext true) #23
  br label %1055

1055:                                             ; preds = %1053, %1035, %1032, %1025, %1023
  %1056 = add nuw nsw i32 %1002, 1
  %1057 = load i16, ptr %992, align 8
  %1058 = zext i16 %1057 to i32
  %1059 = icmp ult i32 %1056, %1058
  br i1 %1059, label %1001, label %1060

1060:                                             ; preds = %1055, %979
  %1061 = add i16 %981, 1
  %1062 = zext i16 %1061 to i32
  %1063 = load i32, ptr %951, align 4
  %1064 = icmp sgt i32 %1063, %1062
  br i1 %1064, label %979, label %1065

1065:                                             ; preds = %1060, %974, %970, %825, %824, %13
  %1066 = load ptr, ptr %14, align 64
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %1066, ptr noundef nonnull @.str.56) #22
  %1067 = call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %4) #23
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1072, label %1069

1069:                                             ; preds = %1069, %1065
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #23
  %1070 = call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %4) #23
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1072, label %1069

1072:                                             ; preds = %1069, %1065
  call void @igb_down(ptr noundef %3) #23
  %1073 = call i32 @igb_up(ptr noundef %3) #23
  call void @_clear_bit(i32 noundef 1, ptr noundef %4) #23
  call void @rtnl_unlock() #23
  br label %1074

1074:                                             ; preds = %1072, %12
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_watchdog_task(ptr noundef %0) #4 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i16, align 2
  %5 = getelementptr i8, ptr %0, i32 -856
  %6 = getelementptr i8, ptr %0, i32 248
  %7 = getelementptr i8, ptr %0, i32 -344
  %8 = load ptr, ptr %7, align 64
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %4) #23
  store i16 0, ptr %4, align 2, !annotation !24
  %9 = getelementptr i8, ptr %0, i32 1020
  %10 = load i32, ptr %9, align 4
  switch i32 %10, label %22 [
    i32 1, label %11
    i32 3, label %15
  ]

11:                                               ; preds = %1
  %12 = getelementptr i8, ptr %0, i32 877
  %13 = load i8, ptr %12, align 1, !range !15
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %11, %1
  %16 = getelementptr i8, ptr %0, i32 264
  %17 = load ptr, ptr %16, align 4
  %18 = tail call i32 %17(ptr noundef %6) #23
  %19 = getelementptr i8, ptr %0, i32 877
  %20 = load i8, ptr %19, align 1, !range !15
  %21 = icmp ne i8 %20, 1
  br label %22

22:                                               ; preds = %15, %1
  %23 = phi i1 [ false, %1 ], [ %21, %15 ]
  %24 = getelementptr i8, ptr %0, i32 328
  %25 = load i32, ptr %24, align 4
  %26 = and i32 %25, -2
  %27 = icmp eq i32 %26, 6
  br i1 %27, label %28, label %49

28:                                               ; preds = %22
  %29 = getelementptr i8, ptr %0, i32 1008
  %30 = load i32, ptr %29, align 4
  %31 = icmp eq i32 %30, 21040128
  br i1 %31, label %32, label %49

32:                                               ; preds = %28
  %33 = load ptr, ptr %7, align 64
  %34 = getelementptr inbounds %struct.net_device, ptr %33, i32 0, i32 6
  %35 = load volatile i32, ptr %34, align 4
  %36 = and i32 %35, 4
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr i8, ptr %0, i32 -332
  %39 = load i32, ptr %38, align 4
  br i1 %37, label %42, label %40

40:                                               ; preds = %32
  %41 = and i32 %39, -513
  store i32 %41, ptr %38, align 4
  br label %49

42:                                               ; preds = %32
  %43 = and i32 %39, 512
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = or i32 %39, 512
  store i32 %46, ptr %38, align 4
  %47 = load volatile i32, ptr @jiffies, align 64
  %48 = getelementptr i8, ptr %0, i32 4088
  store i32 %47, ptr %48, align 16
  br label %49

49:                                               ; preds = %45, %42, %40, %28, %22, %11
  %50 = phi i1 [ true, %11 ], [ %23, %22 ], [ %23, %40 ], [ %23, %45 ], [ %23, %42 ], [ %23, %28 ]
  %51 = getelementptr i8, ptr %0, i32 -332
  %52 = load i32, ptr %51, align 4
  %53 = and i32 %52, 512
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %49
  %56 = getelementptr i8, ptr %0, i32 4088
  %57 = load i32, ptr %56, align 16
  %58 = add i32 %57, 100
  %59 = load volatile i32, ptr @jiffies, align 64
  %60 = sub i32 %58, %59
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = and i32 %52, -513
  store i32 %63, ptr %51, align 4
  br label %64

64:                                               ; preds = %62, %55, %49
  %65 = phi i32 [ %63, %62 ], [ %52, %49 ], [ %52, %55 ]
  %66 = phi i1 [ %50, %62 ], [ %50, %49 ], [ false, %55 ]
  %67 = and i32 %65, 4096
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %94, label %69

69:                                               ; preds = %64
  %70 = load i32, ptr %9, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %94

72:                                               ; preds = %69
  %73 = getelementptr i8, ptr %0, i32 252
  %74 = load volatile ptr, ptr %73, align 4
  %75 = icmp eq ptr %74, null
  br i1 %75, label %89, label %76, !prof !9

76:                                               ; preds = %72
  %77 = getelementptr i8, ptr %74, i32 52
  %78 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %77) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %89

80:                                               ; preds = %76
  %81 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %74) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %83, label %89

83:                                               ; preds = %80
  %84 = load ptr, ptr %7, align 64
  store ptr null, ptr %73, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %84, ptr noundef nonnull @.str) #22
  %85 = getelementptr i8, ptr %0, i32 44
  %86 = load ptr, ptr %85, align 4
  %87 = tail call zeroext i1 @pci_device_is_present(ptr noundef %86) #23
  br i1 %87, label %88, label %89, !prof !9

88:                                               ; preds = %83
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 52) #23
  br label %89

89:                                               ; preds = %88, %83, %80, %76, %72
  %90 = phi i32 [ -1, %72 ], [ -1, %83 ], [ -1, %88 ], [ -1, %80 ], [ %78, %76 ]
  %91 = and i32 %90, 1
  %92 = icmp ne i32 %91, 0
  %93 = select i1 %92, i1 %66, i1 false
  br i1 %93, label %95, label %293

94:                                               ; preds = %69, %64
  br i1 %66, label %95, label %293

95:                                               ; preds = %94, %89
  %96 = getelementptr i8, ptr %0, i32 1219
  %97 = load i8, ptr %96, align 1, !range !15
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  store i8 0, ptr %96, align 1
  %100 = load i32, ptr %51, align 4
  %101 = or i32 %100, 1024
  store i32 %101, ptr %51, align 4
  tail call void @igb_reset(ptr noundef %5)
  br label %102

102:                                              ; preds = %99, %95
  %103 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 111, i32 1
  %104 = load ptr, ptr %103, align 4
  %105 = tail call i32 @__pm_runtime_resume(ptr noundef %104, i32 noundef 0) #23
  %106 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 6
  %107 = load volatile i32, ptr %106, align 4
  %108 = and i32 %107, 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %365, label %110

110:                                              ; preds = %102
  %111 = getelementptr i8, ptr %0, i32 292
  %112 = load ptr, ptr %111, align 4
  %113 = getelementptr i8, ptr %0, i32 -24
  %114 = getelementptr i8, ptr %0, i32 -22
  %115 = tail call i32 %112(ptr noundef %6, ptr noundef %113, ptr noundef %114) #23
  %116 = getelementptr i8, ptr %0, i32 252
  %117 = load volatile ptr, ptr %116, align 4
  %118 = icmp eq ptr %117, null
  br i1 %118, label %128, label %119, !prof !9

119:                                              ; preds = %110
  %120 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %117) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %128

122:                                              ; preds = %119
  %123 = load ptr, ptr %7, align 64
  store ptr null, ptr %116, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %123, ptr noundef nonnull @.str) #22
  %124 = getelementptr i8, ptr %0, i32 44
  %125 = load ptr, ptr %124, align 4
  %126 = tail call zeroext i1 @pci_device_is_present(ptr noundef %125) #23
  br i1 %126, label %127, label %128, !prof !9

127:                                              ; preds = %122
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 0) #23
  br label %128

128:                                              ; preds = %127, %122, %119, %110
  %129 = phi i32 [ -1, %110 ], [ -1, %122 ], [ -1, %127 ], [ %120, %119 ]
  %130 = load i16, ptr %113, align 64
  %131 = zext i16 %130 to i32
  %132 = load i16, ptr %114, align 2
  %133 = icmp eq i16 %132, 2
  %134 = select i1 %133, ptr @.str.112, ptr @.str.113
  %135 = and i32 %129, 268435456
  %136 = icmp eq i32 %135, 0
  %137 = and i32 %129, 134217728
  %138 = icmp eq i32 %137, 0
  %139 = and i32 %129, 402653184
  %140 = icmp eq i32 %139, 402653184
  %141 = select i1 %136, ptr @.str.117, ptr @.str.116
  %142 = select i1 %138, ptr %141, ptr @.str.115
  %143 = select i1 %140, ptr @.str.114, ptr %142
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %8, ptr noundef nonnull @.str.111, ptr noundef %8, i32 noundef %131, ptr noundef nonnull %134, ptr noundef nonnull %143) #22
  %144 = load i32, ptr %51, align 4
  %145 = and i32 %144, 16384
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %157, label %147

147:                                              ; preds = %128
  %148 = load i16, ptr %114, align 2
  %149 = icmp eq i16 %148, 1
  br i1 %149, label %150, label %157

150:                                              ; preds = %147
  %151 = getelementptr i8, ptr %0, i32 44
  %152 = load ptr, ptr %151, align 4
  %153 = getelementptr inbounds %struct.pci_dev, ptr %152, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %153, ptr noundef nonnull @.str.118) #22
  %154 = getelementptr i8, ptr %0, i32 1214
  store i8 1, ptr %154, align 2
  %155 = load i32, ptr %51, align 4
  %156 = and i32 %155, -16385
  store i32 %156, ptr %51, align 4
  br label %157

157:                                              ; preds = %150, %147, %128
  %158 = tail call i32 @igb_check_downshift(ptr noundef %6) #23
  %159 = getelementptr i8, ptr %0, i32 1047
  %160 = load i8, ptr %159, align 1, !range !15
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %163, label %162

162:                                              ; preds = %157
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %8, ptr noundef nonnull @.str.119) #22
  br label %163

163:                                              ; preds = %162, %157
  %164 = tail call fastcc zeroext i1 @igb_thermal_sensor_event(ptr noundef %6, i32 noundef 2)
  br i1 %164, label %165, label %166

165:                                              ; preds = %163
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %8, ptr noundef nonnull @.str.120) #22
  br label %166

166:                                              ; preds = %165, %163
  %167 = getelementptr i8, ptr %0, i32 17
  %168 = load i16, ptr %113, align 64
  %169 = icmp eq i16 %168, 10
  %170 = select i1 %169, i8 14, i8 1
  store i8 %170, ptr %167, align 1
  %171 = icmp eq i16 %168, 1000
  br i1 %171, label %172, label %196

172:                                              ; preds = %166
  %173 = getelementptr i8, ptr %0, i32 944
  br label %174

174:                                              ; preds = %187, %172
  %175 = phi i16 [ %188, %187 ], [ 20, %172 ]
  %176 = load ptr, ptr %173, align 4
  %177 = icmp eq ptr %176, null
  br i1 %177, label %181, label %178

178:                                              ; preds = %174
  %179 = call i32 %176(ptr noundef %6, i32 noundef 10, ptr noundef nonnull %4) #23
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %191

181:                                              ; preds = %178, %174
  %182 = load i16, ptr %4, align 2
  %183 = and i16 %182, 4096
  %184 = icmp eq i16 %183, 0
  %185 = icmp ne i16 %175, 0
  %186 = select i1 %184, i1 %185, i1 false
  br i1 %186, label %187, label %189

187:                                              ; preds = %181
  call void @msleep(i32 noundef 100) #23
  %188 = add nsw i16 %175, -1
  br label %174

189:                                              ; preds = %181
  %190 = icmp eq i16 %175, 0
  br i1 %190, label %191, label %196

191:                                              ; preds = %189, %178
  %192 = phi ptr [ @.str.121, %189 ], [ @.str.122, %178 ]
  %193 = getelementptr i8, ptr %0, i32 44
  %194 = load ptr, ptr %193, align 4
  %195 = getelementptr inbounds %struct.pci_dev, ptr %194, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %195, ptr noundef nonnull %192) #22
  br label %196

196:                                              ; preds = %191, %189, %166
  call void @netif_carrier_on(ptr noundef %8) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #23
  %197 = getelementptr i8, ptr %0, i32 2456
  %198 = load i32, ptr %197, align 16
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %215, label %200

200:                                              ; preds = %196
  %201 = getelementptr i8, ptr %0, i32 2460
  br label %202

202:                                              ; preds = %202, %200
  %203 = phi i32 [ 0, %200 ], [ %212, %202 ]
  store i32 256, ptr %3, align 4
  %204 = load ptr, ptr %201, align 4
  %205 = getelementptr %struct.vf_data_storage, ptr %204, i32 %203, i32 3
  %206 = load i32, ptr %205, align 4
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = select i1 %208, i32 256, i32 536871168
  store i32 %209, ptr %3, align 4
  %210 = trunc i32 %203 to i16
  %211 = call i32 @igb_write_mbx(ptr noundef %6, ptr noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext %210) #23
  %212 = add nuw i32 %203, 1
  %213 = load i32, ptr %197, align 16
  %214 = icmp ult i32 %212, %213
  br i1 %214, label %202, label %215

215:                                              ; preds = %202, %196
  %216 = phi i32 [ 0, %196 ], [ %213, %202 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #23
  %217 = getelementptr i8, ptr %0, i32 2464
  %218 = load i32, ptr %217, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %282, label %220

220:                                              ; preds = %215
  %221 = getelementptr i8, ptr %0, i32 328
  %222 = load i32, ptr %221, align 16
  %223 = icmp eq i32 %222, 2
  br i1 %223, label %224, label %282

224:                                              ; preds = %220
  %225 = load i16, ptr %113, align 64
  %226 = icmp eq i16 %225, 1000
  %227 = select i1 %226, i32 1000, i32 0
  %228 = icmp eq i16 %225, 100
  %229 = select i1 %228, i32 100, i32 %227
  %230 = icmp eq i32 %229, %218
  br i1 %230, label %236, label %231

231:                                              ; preds = %224
  store i32 0, ptr %217, align 8
  %232 = getelementptr i8, ptr %0, i32 44
  %233 = load ptr, ptr %232, align 4
  %234 = getelementptr inbounds %struct.pci_dev, ptr %233, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %234, ptr noundef nonnull @.str.125) #22
  %235 = load i32, ptr %197, align 16
  br label %236

236:                                              ; preds = %231, %224
  %237 = phi i32 [ %235, %231 ], [ %216, %224 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %282, label %239

239:                                              ; preds = %236
  %240 = getelementptr i8, ptr %0, i32 2460
  br label %241

241:                                              ; preds = %278, %239
  %242 = phi i32 [ 0, %239 ], [ %279, %278 ]
  br i1 %230, label %246, label %243

243:                                              ; preds = %241
  %244 = load ptr, ptr %240, align 4
  %245 = getelementptr %struct.vf_data_storage, ptr %244, i32 %242, i32 7
  store i16 0, ptr %245, align 4
  br label %246

246:                                              ; preds = %243, %241
  %247 = load ptr, ptr %240, align 4
  %248 = getelementptr %struct.vf_data_storage, ptr %247, i32 %242, i32 7
  %249 = load i16, ptr %248, align 4
  %250 = icmp eq i16 %249, 0
  br i1 %250, label %262, label %251

251:                                              ; preds = %246
  %252 = zext i16 %249 to i32
  %253 = udiv i32 %229, %252
  %254 = mul nuw nsw i32 %253, %252
  %255 = sub nsw i32 %229, %254
  %256 = shl i32 %255, 14
  %257 = udiv i32 %256, %252
  %258 = shl nuw nsw i32 %253, 14
  %259 = and i32 %257, 16383
  %260 = or i32 %259, %258
  %261 = or i32 %260, -2147483648
  br label %262

262:                                              ; preds = %251, %246
  %263 = phi i32 [ %261, %251 ], [ 0, %246 ]
  %264 = load volatile ptr, ptr %116, align 4
  %265 = icmp eq ptr %264, null
  br i1 %265, label %268, label %266, !prof !9

266:                                              ; preds = %262
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !128
  call void @arm_heavy_mb() #23
  %267 = getelementptr i8, ptr %264, i32 13828
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %267, i32 %242) #23, !srcloc !14
  br label %268

268:                                              ; preds = %266, %262
  %269 = load volatile ptr, ptr %116, align 4
  %270 = icmp eq ptr %269, null
  br i1 %270, label %273, label %271, !prof !9

271:                                              ; preds = %268
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !129
  call void @arm_heavy_mb() #23
  %272 = getelementptr i8, ptr %269, i32 13968
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %272, i32 20) #23, !srcloc !14
  br label %273

273:                                              ; preds = %271, %268
  %274 = load volatile ptr, ptr %116, align 4
  %275 = icmp eq ptr %274, null
  br i1 %275, label %278, label %276, !prof !9

276:                                              ; preds = %273
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !130
  call void @arm_heavy_mb() #23
  %277 = getelementptr i8, ptr %274, i32 14000
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %277, i32 %263) #23, !srcloc !14
  br label %278

278:                                              ; preds = %276, %273
  %279 = add nuw i32 %242, 1
  %280 = load i32, ptr %197, align 16
  %281 = icmp ult i32 %279, %280
  br i1 %281, label %241, label %282

282:                                              ; preds = %278, %236, %220, %215
  %283 = getelementptr i8, ptr %0, i32 -336
  %284 = load volatile i32, ptr %283, align 4
  %285 = and i32 %284, 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %365

287:                                              ; preds = %282
  %288 = getelementptr i8, ptr %0, i32 -60
  %289 = load volatile i32, ptr @jiffies, align 64
  %290 = add i32 %289, 200
  %291 = call i32 @round_jiffies(i32 noundef %290) #23
  %292 = call i32 @mod_timer(ptr noundef %288, i32 noundef %291) #23
  br label %365

293:                                              ; preds = %94, %89
  %294 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 6
  %295 = load volatile i32, ptr %294, align 4
  %296 = and i32 %295, 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %349

298:                                              ; preds = %293
  %299 = getelementptr i8, ptr %0, i32 -24
  store i16 0, ptr %299, align 64
  %300 = getelementptr i8, ptr %0, i32 -22
  store i16 0, ptr %300, align 2
  %301 = tail call fastcc zeroext i1 @igb_thermal_sensor_event(ptr noundef %6, i32 noundef 1)
  br i1 %301, label %302, label %303

302:                                              ; preds = %298
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %8, ptr noundef nonnull @.str.123) #22
  br label %303

303:                                              ; preds = %302, %298
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %8, ptr noundef nonnull @.str.124, ptr noundef %8) #22
  tail call void @netif_carrier_off(ptr noundef %8) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #23
  %304 = getelementptr i8, ptr %0, i32 2456
  %305 = load i32, ptr %304, align 16
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %322, label %307

307:                                              ; preds = %303
  %308 = getelementptr i8, ptr %0, i32 2460
  br label %309

309:                                              ; preds = %309, %307
  %310 = phi i32 [ 0, %307 ], [ %319, %309 ]
  store i32 256, ptr %2, align 4
  %311 = load ptr, ptr %308, align 4
  %312 = getelementptr %struct.vf_data_storage, ptr %311, i32 %310, i32 3
  %313 = load i32, ptr %312, align 4
  %314 = and i32 %313, 1
  %315 = icmp eq i32 %314, 0
  %316 = select i1 %315, i32 256, i32 536871168
  store i32 %316, ptr %2, align 4
  %317 = trunc i32 %310 to i16
  %318 = call i32 @igb_write_mbx(ptr noundef %6, ptr noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext %317) #23
  %319 = add nuw i32 %310, 1
  %320 = load i32, ptr %304, align 16
  %321 = icmp ult i32 %319, %320
  br i1 %321, label %309, label %322

322:                                              ; preds = %309, %303
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #23
  %323 = getelementptr i8, ptr %0, i32 -336
  %324 = load volatile i32, ptr %323, align 4
  %325 = and i32 %324, 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %333

327:                                              ; preds = %322
  %328 = getelementptr i8, ptr %0, i32 -60
  %329 = load volatile i32, ptr @jiffies, align 64
  %330 = add i32 %329, 200
  %331 = call i32 @round_jiffies(i32 noundef %330) #23
  %332 = call i32 @mod_timer(ptr noundef %328, i32 noundef %331) #23
  br label %333

333:                                              ; preds = %327, %322
  %334 = load i32, ptr %51, align 4
  %335 = and i32 %334, 4096
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %345, label %337

337:                                              ; preds = %333
  call fastcc void @igb_check_swap_media(ptr noundef %5)
  %338 = load i32, ptr %51, align 4
  %339 = and i32 %338, 1024
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %345, label %341

341:                                              ; preds = %337
  %342 = getelementptr i8, ptr %0, i32 -16
  %343 = load ptr, ptr @system_wq, align 4
  %344 = call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %343, ptr noundef %342) #23
  br label %534

345:                                              ; preds = %337, %333
  %346 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 111, i32 1
  %347 = load ptr, ptr %346, align 4
  %348 = call i32 @pm_schedule_suspend(ptr noundef %347, i32 noundef 5000) #23
  br label %365

349:                                              ; preds = %293
  %350 = load volatile i32, ptr %294, align 4
  %351 = and i32 %350, 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %365, label %353

353:                                              ; preds = %349
  %354 = load i32, ptr %51, align 4
  %355 = and i32 %354, 4096
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %365, label %357

357:                                              ; preds = %353
  tail call fastcc void @igb_check_swap_media(ptr noundef %5)
  %358 = load i32, ptr %51, align 4
  %359 = and i32 %358, 1024
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %365, label %361

361:                                              ; preds = %357
  %362 = getelementptr i8, ptr %0, i32 -16
  %363 = load ptr, ptr @system_wq, align 4
  %364 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %363, ptr noundef %362) #23
  br label %534

365:                                              ; preds = %357, %353, %349, %345, %287, %282, %102
  %366 = getelementptr i8, ptr %0, i32 48
  call void @_raw_spin_lock(ptr noundef %366) #23
  call void @igb_update_stats(ptr noundef %5)
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %367 = load i16, ptr %366, align 4
  %368 = add i16 %367, 1
  store i16 %368, ptr %366, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  %369 = getelementptr i8, ptr %0, i32 -224
  %370 = load i32, ptr %369, align 8
  %371 = icmp sgt i32 %370, 0
  br i1 %371, label %372, label %420

372:                                              ; preds = %365
  %373 = getelementptr i8, ptr %0, i32 -220
  %374 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 6
  br label %375

375:                                              ; preds = %415, %372
  %376 = phi i32 [ 0, %372 ], [ %417, %415 ]
  %377 = getelementptr [16 x ptr], ptr %373, i32 0, i32 %376
  %378 = load ptr, ptr %377, align 4
  %379 = load volatile i32, ptr %374, align 4
  %380 = and i32 %379, 4
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %415, label %382

382:                                              ; preds = %375
  %383 = getelementptr inbounds %struct.igb_ring, ptr %378, i32 0, i32 19
  %384 = load i16, ptr %383, align 64
  %385 = zext i16 %384 to i32
  %386 = getelementptr inbounds %struct.igb_ring, ptr %378, i32 0, i32 20
  %387 = load i16, ptr %386, align 2
  %388 = zext i16 %387 to i32
  %389 = icmp ugt i16 %384, %387
  br i1 %389, label %390, label %396

390:                                              ; preds = %382
  %391 = xor i32 %388, -1
  %392 = add nsw i32 %391, %385
  %393 = getelementptr inbounds %struct.igb_ring, ptr %378, i32 0, i32 10
  %394 = load i16, ptr %393, align 8
  %395 = zext i16 %394 to i32
  br label %403

396:                                              ; preds = %382
  %397 = getelementptr inbounds %struct.igb_ring, ptr %378, i32 0, i32 10
  %398 = load i16, ptr %397, align 8
  %399 = zext i16 %398 to i32
  %400 = xor i32 %388, -1
  %401 = add nsw i32 %400, %385
  %402 = add nsw i32 %401, %399
  br label %403

403:                                              ; preds = %396, %390
  %404 = phi i32 [ %395, %390 ], [ %399, %396 ]
  %405 = phi i32 [ %392, %390 ], [ %402, %396 ]
  %406 = add nsw i32 %405, 1
  %407 = icmp slt i32 %406, %404
  br i1 %407, label %408, label %415

408:                                              ; preds = %403
  %409 = getelementptr i8, ptr %0, i32 -228
  %410 = load i32, ptr %409, align 4
  %411 = add i32 %410, 1
  store i32 %411, ptr %409, align 4
  %412 = getelementptr i8, ptr %0, i32 -16
  %413 = load ptr, ptr @system_wq, align 4
  %414 = call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %413, ptr noundef %412) #23
  br label %534

415:                                              ; preds = %403, %375
  %416 = getelementptr inbounds %struct.igb_ring, ptr %378, i32 0, i32 6
  call void @_set_bit(i32 noundef 5, ptr noundef %416) #23
  %417 = add nuw nsw i32 %376, 1
  %418 = load i32, ptr %369, align 8
  %419 = icmp slt i32 %417, %418
  br i1 %419, label %375, label %420

420:                                              ; preds = %415, %365
  %421 = load i32, ptr %51, align 4
  %422 = and i32 %421, 8192
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %447, label %424

424:                                              ; preds = %420
  %425 = getelementptr i8, ptr %0, i32 -328
  %426 = load i32, ptr %425, align 16
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %440, label %428

428:                                              ; preds = %424
  %429 = getelementptr i8, ptr %0, i32 2412
  br label %430

430:                                              ; preds = %430, %428
  %431 = phi i32 [ 0, %428 ], [ %437, %430 ]
  %432 = phi i32 [ 0, %428 ], [ %438, %430 ]
  %433 = getelementptr [8 x ptr], ptr %429, i32 0, i32 %432
  %434 = load ptr, ptr %433, align 4
  %435 = getelementptr inbounds %struct.igb_q_vector, ptr %434, i32 0, i32 2
  %436 = load i32, ptr %435, align 8
  %437 = or i32 %436, %431
  %438 = add nuw i32 %432, 1
  %439 = icmp eq i32 %438, %426
  br i1 %439, label %440, label %430

440:                                              ; preds = %430, %424
  %441 = phi i32 [ 0, %424 ], [ %437, %430 ]
  %442 = getelementptr i8, ptr %0, i32 252
  %443 = load volatile ptr, ptr %442, align 4
  %444 = icmp eq ptr %443, null
  br i1 %444, label %453, label %445, !prof !9

445:                                              ; preds = %440
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !131
  call void @arm_heavy_mb() #23
  %446 = getelementptr i8, ptr %443, i32 5408
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %446, i32 %441) #23, !srcloc !14
  br label %453

447:                                              ; preds = %420
  %448 = getelementptr i8, ptr %0, i32 252
  %449 = load volatile ptr, ptr %448, align 4
  %450 = icmp eq ptr %449, null
  br i1 %450, label %453, label %451, !prof !9

451:                                              ; preds = %447
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !132
  call void @arm_heavy_mb() #23
  %452 = getelementptr i8, ptr %449, i32 200
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %452, i32 16) #23, !srcloc !14
  br label %453

453:                                              ; preds = %451, %447, %445, %440
  %454 = getelementptr i8, ptr %0, i32 2472
  %455 = load i32, ptr %454, align 64
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %488, label %457

457:                                              ; preds = %453
  %458 = getelementptr i8, ptr %0, i32 2456
  %459 = load i32, ptr %458, align 16
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %488, label %461

461:                                              ; preds = %457
  %462 = getelementptr i8, ptr %0, i32 44
  br label %463

463:                                              ; preds = %483, %461
  %464 = phi i32 [ %459, %461 ], [ %484, %483 ]
  %465 = phi i32 [ %455, %461 ], [ %485, %483 ]
  %466 = phi i32 [ 0, %461 ], [ %486, %483 ]
  %467 = shl nuw i32 1, %466
  %468 = and i32 %467, %465
  %469 = icmp eq i32 %468, 0
  %470 = add i32 %466, 8
  %471 = shl nuw i32 1, %470
  %472 = and i32 %471, %465
  %473 = icmp eq i32 %472, 0
  %474 = select i1 %469, i1 %473, i1 false
  br i1 %474, label %483, label %475

475:                                              ; preds = %463
  %476 = load ptr, ptr %462, align 4
  %477 = getelementptr inbounds %struct.pci_dev, ptr %476, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %477, ptr noundef nonnull @.str.129, i32 noundef %466) #22
  %478 = or i32 %471, %467
  %479 = xor i32 %478, -1
  %480 = load i32, ptr %454, align 64
  %481 = and i32 %480, %479
  store i32 %481, ptr %454, align 64
  %482 = load i32, ptr %458, align 16
  br label %483

483:                                              ; preds = %475, %463
  %484 = phi i32 [ %482, %475 ], [ %464, %463 ]
  %485 = phi i32 [ %481, %475 ], [ %465, %463 ]
  %486 = add nuw i32 %466, 1
  %487 = icmp ult i32 %486, %484
  br i1 %487, label %463, label %488

488:                                              ; preds = %483, %457, %453
  call void @igb_ptp_rx_hang(ptr noundef %5) #23
  call void @igb_ptp_tx_hang(ptr noundef %5) #23
  %489 = getelementptr i8, ptr %0, i32 328
  %490 = load i32, ptr %489, align 16
  %491 = and i32 %490, -2
  %492 = icmp eq i32 %491, 4
  br i1 %492, label %493, label %515

493:                                              ; preds = %488
  %494 = getelementptr i8, ptr %0, i32 252
  %495 = load volatile ptr, ptr %494, align 4
  %496 = icmp eq ptr %495, null
  br i1 %496, label %509, label %497, !prof !9

497:                                              ; preds = %493
  %498 = getelementptr i8, ptr %495, i32 13640
  %499 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %498) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  switch i32 %499, label %509 [
    i32 -1, label %500
    i32 0, label %515
  ]

500:                                              ; preds = %497
  %501 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %495) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %502 = icmp eq i32 %501, -1
  br i1 %502, label %503, label %509

503:                                              ; preds = %500
  %504 = load ptr, ptr %7, align 64
  store ptr null, ptr %494, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %504, ptr noundef nonnull @.str) #22
  %505 = getelementptr i8, ptr %0, i32 44
  %506 = load ptr, ptr %505, align 4
  %507 = call zeroext i1 @pci_device_is_present(ptr noundef %506) #23
  br i1 %507, label %508, label %509, !prof !9

508:                                              ; preds = %503
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13640) #23
  br label %509

509:                                              ; preds = %508, %503, %500, %497, %493
  %510 = phi i32 [ -1, %493 ], [ -1, %503 ], [ -1, %508 ], [ -1, %500 ], [ %499, %497 ]
  %511 = call i32 @net_ratelimit() #23
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %515, label %513, !prof !80

513:                                              ; preds = %509
  %514 = load ptr, ptr %7, align 64
  call void (ptr, ptr, ...) @netdev_warn(ptr noundef %514, ptr noundef nonnull @.str.130, i32 noundef %510) #22
  br label %515

515:                                              ; preds = %513, %509, %497, %488
  %516 = getelementptr i8, ptr %0, i32 -336
  %517 = load volatile i32, ptr %516, align 4
  %518 = and i32 %517, 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %534

520:                                              ; preds = %515
  %521 = load i32, ptr %51, align 4
  %522 = and i32 %521, 512
  %523 = icmp eq i32 %522, 0
  %524 = getelementptr i8, ptr %0, i32 -80
  %525 = load volatile i32, ptr @jiffies, align 64
  br i1 %523, label %530, label %526

526:                                              ; preds = %520
  %527 = add i32 %525, 100
  %528 = call i32 @round_jiffies(i32 noundef %527) #23
  %529 = call i32 @mod_timer(ptr noundef %524, i32 noundef %528) #23
  br label %534

530:                                              ; preds = %520
  %531 = add i32 %525, 200
  %532 = call i32 @round_jiffies(i32 noundef %531) #23
  %533 = call i32 @mod_timer(ptr noundef %524, i32 noundef %532) #23
  br label %534

534:                                              ; preds = %530, %526, %515, %408, %361, %341
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %4) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_validate_mdi_setting(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_set_wakeup_enable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_init_i2c(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %3 = load i32, ptr %2, align 16
  %4 = icmp eq i32 %3, 4
  br i1 %4, label %5, label %58

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %23, label %9, !prof !9

9:                                                ; preds = %5
  %10 = getelementptr i8, ptr %7, i32 4140
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %10) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %7) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 64
  store ptr null, ptr %6, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %18, ptr noundef nonnull @.str) #22
  %19 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %20 = load ptr, ptr %19, align 4
  %21 = tail call zeroext i1 @pci_device_is_present(ptr noundef %20) #23
  br i1 %21, label %22, label %23, !prof !9

22:                                               ; preds = %16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 4140) #23
  br label %23

23:                                               ; preds = %22, %16, %13, %9, %5
  %24 = phi i32 [ -1, %5 ], [ -1, %16 ], [ -1, %22 ], [ -1, %13 ], [ %11, %9 ]
  %25 = load volatile ptr, ptr %6, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %30, label %27, !prof !9

27:                                               ; preds = %23
  %28 = or i32 %24, 12032
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !133
  tail call void @arm_heavy_mb() #23
  %29 = getelementptr i8, ptr %25, i32 4140
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %29, i32 %28) #23, !srcloc !14
  br label %30

30:                                               ; preds = %27, %23
  %31 = load volatile ptr, ptr %6, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %47, label %33, !prof !9

33:                                               ; preds = %30
  %34 = getelementptr i8, ptr %31, i32 8
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %34) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %47

37:                                               ; preds = %33
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %31) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 64
  store ptr null, ptr %6, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %42, ptr noundef nonnull @.str) #22
  %43 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %44 = load ptr, ptr %43, align 4
  %45 = tail call zeroext i1 @pci_device_is_present(ptr noundef %44) #23
  br i1 %45, label %46, label %47, !prof !9

46:                                               ; preds = %40
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %47

47:                                               ; preds = %46, %40, %37, %33, %30
  %48 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 79
  store ptr null, ptr %48, align 8
  %49 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 78
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 16 dereferenceable(40) %49, ptr noundef nonnull align 4 dereferenceable(40) @igb_i2c_algo, i32 40, i1 false)
  store ptr %0, ptr %49, align 16
  %50 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 79, i32 3
  store ptr %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %52 = load ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.pci_dev, ptr %52, i32 0, i32 44
  %54 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 79, i32 9, i32 1
  store ptr %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 79, i32 12
  %56 = tail call i32 @strlcpy(ptr noundef %55, ptr noundef nonnull @.str.131, i32 noundef 48) #23
  %57 = tail call i32 @i2c_bit_add_bus(ptr noundef %48) #23
  br label %58

58:                                               ; preds = %47, %1
  %59 = phi i32 [ %57, %47 ], [ 0, %1 ]
  ret i32 %59
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_get_hw_control(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %19, label %5, !prof !9

5:                                                ; preds = %1
  %6 = getelementptr i8, ptr %3, i32 24
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %3) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 64
  store ptr null, ptr %2, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str) #22
  %15 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %16 = load ptr, ptr %15, align 4
  %17 = tail call zeroext i1 @pci_device_is_present(ptr noundef %16) #23
  br i1 %17, label %18, label %19, !prof !9

18:                                               ; preds = %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 24) #23
  br label %19

19:                                               ; preds = %18, %12, %9, %5, %1
  %20 = phi i32 [ -1, %1 ], [ -1, %12 ], [ -1, %18 ], [ -1, %9 ], [ %7, %5 ]
  %21 = load volatile ptr, ptr %2, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %26, label %23, !prof !9

23:                                               ; preds = %19
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !134
  tail call void @arm_heavy_mb() #23
  %24 = or i32 %20, 268435456
  %25 = getelementptr i8, ptr %21, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %25, i32 %24) #23, !srcloc !14
  br label %26

26:                                               ; preds = %23, %19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_sysfs_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_init_mas(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca i16, align 2
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #23
  store i16 0, ptr %2, align 2, !annotation !24
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 7, i32 0, i32 1
  %5 = load ptr, ptr %4, align 4
  %6 = call i32 %5(ptr noundef %3, i16 noundef zeroext 3, i16 noundef zeroext 1, ptr noundef nonnull %2) #23
  %7 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 8, i32 4
  %8 = load i16, ptr %7, align 4
  switch i16 %8, label %49 [
    i16 0, label %9
    i16 1, label %19
    i16 2, label %29
    i16 3, label %39
  ]

9:                                                ; preds = %1
  %10 = load i16, ptr %2, align 2
  %11 = and i16 %10, 1
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %52, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %15 = load i32, ptr %14, align 4
  %16 = or i32 %15, 4096
  store i32 %16, ptr %14, align 4
  %17 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 64
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %18, ptr noundef nonnull @.str.132, i32 noundef 0) #22
  br label %52

19:                                               ; preds = %1
  %20 = load i16, ptr %2, align 2
  %21 = and i16 %20, 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %52, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %25 = load i32, ptr %24, align 4
  %26 = or i32 %25, 4096
  store i32 %26, ptr %24, align 4
  %27 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 64
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %28, ptr noundef nonnull @.str.132, i32 noundef 1) #22
  br label %52

29:                                               ; preds = %1
  %30 = load i16, ptr %2, align 2
  %31 = and i16 %30, 4
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %52, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %35 = load i32, ptr %34, align 4
  %36 = or i32 %35, 4096
  store i32 %36, ptr %34, align 4
  %37 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 64
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %38, ptr noundef nonnull @.str.132, i32 noundef 2) #22
  br label %52

39:                                               ; preds = %1
  %40 = load i16, ptr %2, align 2
  %41 = and i16 %40, 8
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %45 = load i32, ptr %44, align 4
  %46 = or i32 %45, 4096
  store i32 %46, ptr %44, align 4
  %47 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %48 = load ptr, ptr %47, align 64
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %48, ptr noundef nonnull @.str.132, i32 noundef 3) #22
  br label %52

49:                                               ; preds = %1
  %50 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %51 = load ptr, ptr %50, align 64
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %51, ptr noundef nonnull @.str.133) #22
  br label %52

52:                                               ; preds = %49, %43, %39, %33, %29, %23, %19, %13, %9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %2) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_ptp_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_read_part_string(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_release_hw_control(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %19, label %5, !prof !9

5:                                                ; preds = %1
  %6 = getelementptr i8, ptr %3, i32 24
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %3) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 64
  store ptr null, ptr %2, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str) #22
  %15 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %16 = load ptr, ptr %15, align 4
  %17 = tail call zeroext i1 @pci_device_is_present(ptr noundef %16) #23
  br i1 %17, label %18, label %19, !prof !9

18:                                               ; preds = %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 24) #23
  br label %19

19:                                               ; preds = %18, %12, %9, %5, %1
  %20 = phi i32 [ -1, %1 ], [ -1, %12 ], [ -1, %18 ], [ -1, %9 ], [ %7, %5 ]
  %21 = load volatile ptr, ptr %2, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %26, label %23, !prof !9

23:                                               ; preds = %19
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !135
  tail call void @arm_heavy_mb() #23
  %24 = and i32 %20, -268435457
  %25 = getelementptr i8, ptr %21, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %25, i32 %24) #23, !srcloc !14
  br label %26

26:                                               ; preds = %23, %19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_clear_interrupt_scheme(ptr nocapture noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 5
  %3 = load i32, ptr %2, align 16
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  store i32 0, ptr %4, align 8
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  store i32 0, ptr %5, align 4
  store i32 0, ptr %2, align 16
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %38, %1
  %8 = phi i32 [ %9, %38 ], [ %3, %1 ]
  %9 = add i32 %8, -1
  %10 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 45, i32 %9
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store ptr null, ptr %10, align 4
  br label %38

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.igb_q_vector, ptr %11, i32 0, i32 7
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.igb_ring, ptr %16, i32 0, i32 11
  %20 = load i8, ptr %19, align 2
  %21 = zext i8 %20 to i32
  %22 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %21
  store ptr null, ptr %22, align 4
  br label %23

23:                                               ; preds = %18, %14
  %24 = getelementptr inbounds %struct.igb_q_vector, ptr %11, i32 0, i32 6
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.igb_ring, ptr %25, i32 0, i32 11
  %29 = load i8, ptr %28, align 2
  %30 = zext i8 %29 to i32
  %31 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %30
  store ptr null, ptr %31, align 4
  br label %32

32:                                               ; preds = %27, %23
  %33 = getelementptr inbounds %struct.igb_q_vector, ptr %11, i32 0, i32 8
  tail call void @__netif_napi_del(ptr noundef %33) #23
  tail call void @synchronize_net() #23
  %34 = load ptr, ptr %10, align 4
  store ptr null, ptr %10, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.igb_q_vector, ptr %34, i32 0, i32 9
  tail call void @kvfree_call_rcu(ptr noundef %37, ptr noundef nonnull inttoptr (i32 272 to ptr)) #23
  br label %38

38:                                               ; preds = %36, %32, %13
  %39 = icmp eq i32 %9, 0
  br i1 %39, label %40, label %7

40:                                               ; preds = %38, %1
  tail call fastcc void @igb_reset_interrupt_capability(ptr noundef %0)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_iounmap(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_mask(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_set_coherent_mask(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_request_selected_regions(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_select_bars(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_xmit_frame(ptr noundef %0, ptr nocapture noundef readonly %1) #4 {
  %3 = getelementptr i8, ptr %1, i32 1408
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %5 = load i32, ptr %4, align 8
  %6 = icmp ult i32 %5, 17
  br i1 %6, label %7, label %22, !prof !9

7:                                                ; preds = %2
  %8 = sub nuw nsw i32 17, %5
  %9 = tail call i32 @__skb_pad(ptr noundef %0, i32 noundef %8, i1 noundef zeroext true) #23
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %13 = load i32, ptr %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !80

15:                                               ; preds = %11
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #23, !srcloc !136
  unreachable

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr i8, ptr %18, i32 %8
  store ptr %19, ptr %17, align 8
  %20 = load i32, ptr %4, align 8
  %21 = add i32 %20, %8
  store i32 %21, ptr %4, align 8
  br label %22

22:                                               ; preds = %16, %2
  %23 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 9
  %24 = load i16, ptr %23, align 4
  %25 = zext i16 %24 to i32
  %26 = getelementptr i8, ptr %1, i32 2040
  %27 = load i32, ptr %26, align 8
  %28 = icmp ugt i32 %27, %25
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  %30 = urem i32 %25, %27
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %25, %22 ]
  %33 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 14, i32 %32
  %34 = load ptr, ptr %33, align 4
  %35 = tail call i32 @igb_xmit_frame_ring(ptr noundef %0, ptr noundef %34)
  br label %36

36:                                               ; preds = %31, %7
  %37 = phi i32 [ %35, %31 ], [ 0, %7 ]
  ret i32 %37
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define internal i64 @igb_features_check(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, i64 noundef %2) #9 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %7 = load i16, ptr %6, align 4
  %8 = zext i16 %7 to i32
  %9 = getelementptr i8, ptr %5, i32 %8
  %10 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %9 to i32
  %13 = ptrtoint ptr %11 to i32
  %14 = sub i32 %12, %13
  %15 = icmp ugt i32 %14, 127
  br i1 %15, label %16, label %18, !prof !9

16:                                               ; preds = %3
  %17 = and i64 %2, -77310525577
  br label %36

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %20 = load i16, ptr %19, align 4
  %21 = zext i16 %20 to i32
  %22 = sub nsw i32 %21, %8
  %23 = icmp ugt i32 %22, 511
  br i1 %23, label %24, label %26, !prof !9

24:                                               ; preds = %18
  %25 = and i64 %2, -77310525449
  br label %36

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, 8192
  %30 = icmp ne i16 %29, 0
  %31 = and i64 %2, 524288
  %32 = icmp eq i64 %31, 0
  %33 = and i1 %32, %30
  %34 = and i64 %2, -65537
  %35 = select i1 %33, i64 %34, i64 %2
  br label %36

36:                                               ; preds = %26, %24, %16
  %37 = phi i64 [ %17, %16 ], [ %25, %24 ], [ %35, %26 ]
  ret i64 %37
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_set_rx_mode(ptr noundef %0) #4 {
  %2 = alloca [8 x i32], align 4
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 2512
  %5 = getelementptr i8, ptr %0, i32 4720
  %6 = load i32, ptr %5, align 16
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %8 = load i32, ptr %7, align 8
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = getelementptr i8, ptr %0, i32 2592
  %13 = load i32, ptr %12, align 4
  %14 = icmp eq i32 %13, 2
  %15 = select i1 %14, i32 335544320, i32 268435456
  br label %51

16:                                               ; preds = %1
  %17 = and i32 %8, 512
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %51

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 61
  %21 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 61, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @igb_update_mc_addr_list(ptr noundef %4, ptr noundef null, i32 noundef 0) #23
  tail call fastcc void @igb_restore_vf_multicasts(ptr noundef %3) #23
  br label %50

25:                                               ; preds = %19
  %26 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %22, i32 6) #23
  %27 = extractvalue { i32, i1 } %26, 1
  br i1 %27, label %51, label %28, !prof !9

28:                                               ; preds = %25
  %29 = extractvalue { i32, i1 } %26, 0
  %30 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %29, i32 noundef 2848) #24
  %31 = icmp eq ptr %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %28
  %33 = load ptr, ptr %20, align 4
  %34 = icmp eq ptr %33, %20
  br i1 %34, label %44, label %35

35:                                               ; preds = %35, %32
  %36 = phi ptr [ %42, %35 ], [ %33, %32 ]
  %37 = phi i32 [ %38, %35 ], [ 0, %32 ]
  %38 = add i32 %37, 1
  %39 = mul i32 %37, 6
  %40 = getelementptr i8, ptr %30, i32 %39
  %41 = getelementptr inbounds %struct.netdev_hw_addr, ptr %36, i32 0, i32 2
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 2 dereferenceable(6) %40, ptr noundef align 4 dereferenceable(6) %41, i32 6, i1 false) #23
  %42 = load ptr, ptr %36, align 4
  %43 = icmp eq ptr %42, %20
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %32
  %45 = phi i32 [ 0, %32 ], [ %38, %35 ]
  tail call void @igb_update_mc_addr_list(ptr noundef %4, ptr noundef nonnull %30, i32 noundef %45) #23
  tail call void @kfree(ptr noundef nonnull %30) #23
  %46 = load i32, ptr %21, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %48, %24
  br label %51

51:                                               ; preds = %50, %48, %44, %28, %25, %16, %11
  %52 = phi i32 [ 24, %11 ], [ 16, %16 ], [ 16, %44 ], [ 0, %48 ], [ 0, %50 ], [ 16, %28 ], [ 16, %25 ]
  %53 = phi i32 [ %15, %11 ], [ 268435456, %16 ], [ 268435456, %44 ], [ 33554432, %48 ], [ 0, %50 ], [ 268435456, %28 ], [ 268435456, %25 ]
  %54 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 60
  %55 = tail call i32 @__hw_addr_sync_dev(ptr noundef %54, ptr noundef %0, ptr noundef nonnull @igb_uc_sync, ptr noundef nonnull @igb_uc_unsync) #23
  %56 = icmp eq i32 %55, 0
  %57 = or i32 %52, 8
  %58 = or i32 %53, 67108864
  %59 = select i1 %56, i32 %52, i32 %57
  %60 = select i1 %56, i32 %53, i32 %58
  %61 = or i32 %59, 262144
  %62 = load i32, ptr %7, align 8
  %63 = and i32 %62, 256
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %51
  %66 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %67 = load i64, ptr %66, align 16
  %68 = and i64 %67, 17592186044416
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %135, label %70

70:                                               ; preds = %65, %51
  %71 = getelementptr i8, ptr %0, i32 2592
  %72 = load i32, ptr %71, align 4
  switch i32 %72, label %292 [
    i32 6, label %73
    i32 7, label %73
    i32 4, label %73
    i32 2, label %80
    i32 3, label %80
    i32 5, label %80
  ]

73:                                               ; preds = %70, %70, %70
  %74 = getelementptr i8, ptr %0, i32 1920
  %75 = load ptr, ptr %74, align 64
  %76 = getelementptr inbounds %struct.net_device, ptr %75, i32 0, i32 23
  %77 = load i64, ptr %76, align 16
  %78 = and i64 %77, 274877906944
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %73, %70, %70, %70
  %81 = load i32, ptr %5, align 16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %292, label %83

83:                                               ; preds = %80, %73
  %84 = getelementptr i8, ptr %0, i32 1932
  %85 = load i32, ptr %84, align 4
  %86 = and i32 %85, 32768
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %292

88:                                               ; preds = %83
  %89 = load i32, ptr %5, align 16
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %125, label %91

91:                                               ; preds = %88
  %92 = add i32 %89, 12
  %93 = getelementptr i8, ptr %0, i32 2516
  %94 = getelementptr i8, ptr %0, i32 1920
  %95 = getelementptr i8, ptr %0, i32 2308
  %96 = shl nuw i32 1, %92
  br label %97

97:                                               ; preds = %122, %91
  %98 = phi i32 [ 31, %91 ], [ %123, %122 ]
  %99 = shl i32 %98, 2
  %100 = add nuw nsw i32 %99, 23808
  %101 = load volatile ptr, ptr %93, align 4
  %102 = icmp eq ptr %101, null
  br i1 %102, label %115, label %103, !prof !9

103:                                              ; preds = %97
  %104 = getelementptr i8, ptr %101, i32 %100
  %105 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %104) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %107, label %115

107:                                              ; preds = %103
  %108 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %101) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %109 = icmp eq i32 %108, -1
  br i1 %109, label %110, label %115

110:                                              ; preds = %107
  %111 = load ptr, ptr %94, align 64
  store ptr null, ptr %93, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %111, ptr noundef nonnull @.str) #22
  %112 = load ptr, ptr %95, align 4
  %113 = tail call zeroext i1 @pci_device_is_present(ptr noundef %112) #23
  br i1 %113, label %114, label %115, !prof !9

114:                                              ; preds = %110
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %100) #23
  br label %115

115:                                              ; preds = %114, %110, %107, %103, %97
  %116 = phi i32 [ -1, %97 ], [ -1, %110 ], [ -1, %114 ], [ -1, %107 ], [ %105, %103 ]
  %117 = load volatile ptr, ptr %93, align 4
  %118 = icmp eq ptr %117, null
  br i1 %118, label %122, label %119, !prof !9

119:                                              ; preds = %115
  %120 = or i32 %116, %96
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !137
  tail call void @arm_heavy_mb() #23
  %121 = getelementptr i8, ptr %117, i32 %100
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %121, i32 %120) #23, !srcloc !14
  br label %122

122:                                              ; preds = %119, %115
  %123 = add nsw i32 %98, -1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %97

125:                                              ; preds = %122, %88
  %126 = getelementptr i8, ptr %0, i32 2576
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i32 [ 128, %125 ], [ %129, %127 ]
  %129 = add nsw i32 %128, -1
  %130 = load ptr, ptr %126, align 4
  tail call void %130(ptr noundef %4, i32 noundef %129, i32 noundef -1) #23
  %131 = icmp eq i32 %129, 0
  br i1 %131, label %132, label %127

132:                                              ; preds = %127
  %133 = load i32, ptr %84, align 4
  %134 = or i32 %133, 32768
  store i32 %134, ptr %84, align 4
  br label %292

135:                                              ; preds = %65
  %136 = getelementptr i8, ptr %0, i32 1932
  %137 = load i32, ptr %136, align 4
  %138 = and i32 %137, 32768
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %292, label %140

140:                                              ; preds = %135
  %141 = and i32 %137, -32769
  store i32 %141, ptr %136, align 4
  %142 = getelementptr i8, ptr %0, i32 2224
  %143 = getelementptr i8, ptr %0, i32 2516
  %144 = getelementptr i8, ptr %0, i32 1920
  %145 = getelementptr i8, ptr %0, i32 2308
  %146 = getelementptr i8, ptr %0, i32 2576
  %147 = getelementptr inbounds [8 x i32], ptr %2, i32 0, i32 7
  %148 = getelementptr inbounds [8 x i32], ptr %2, i32 0, i32 6
  %149 = getelementptr inbounds [8 x i32], ptr %2, i32 0, i32 5
  %150 = getelementptr inbounds [8 x i32], ptr %2, i32 0, i32 4
  %151 = getelementptr inbounds [8 x i32], ptr %2, i32 0, i32 3
  %152 = getelementptr inbounds [8 x i32], ptr %2, i32 0, i32 2
  %153 = getelementptr inbounds [8 x i32], ptr %2, i32 0, i32 1
  br label %154

154:                                              ; preds = %242, %140
  %155 = phi i32 [ 0, %140 ], [ %290, %242 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(32) %2, i8 0, i32 32, i1 false) #23
  %156 = shl nuw nsw i32 %155, 5
  %157 = add nuw nsw i32 %156, 256
  %158 = load i16, ptr %142, align 16
  %159 = zext i16 %158 to i32
  %160 = icmp ule i32 %156, %159
  %161 = icmp ugt i32 %157, %159
  %162 = and i1 %160, %161
  br i1 %162, label %163, label %171

163:                                              ; preds = %154
  %164 = and i32 %159, 31
  %165 = shl nuw i32 1, %164
  %166 = sub nsw i32 %159, %156
  %167 = lshr i32 %166, 5
  %168 = getelementptr [8 x i32], ptr %2, i32 0, i32 %167
  %169 = load i32, ptr %168, align 4
  %170 = or i32 %169, %165
  store i32 %170, ptr %168, align 4
  br label %171

171:                                              ; preds = %163, %154
  %172 = load i32, ptr %5, align 16
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %242, label %174

174:                                              ; preds = %171
  %175 = add i32 %172, 12
  %176 = shl nuw i32 1, %175
  %177 = xor i32 %176, -1
  br label %178

178:                                              ; preds = %239, %174
  %179 = phi i32 [ 31, %174 ], [ %240, %239 ]
  %180 = shl i32 %179, 2
  %181 = add nuw nsw i32 %180, 23808
  %182 = load volatile ptr, ptr %143, align 4
  %183 = icmp eq ptr %182, null
  br i1 %183, label %196, label %184, !prof !9

184:                                              ; preds = %178
  %185 = getelementptr i8, ptr %182, i32 %181
  %186 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %185) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %187 = icmp eq i32 %186, -1
  br i1 %187, label %188, label %196

188:                                              ; preds = %184
  %189 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %182) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %190 = icmp eq i32 %189, -1
  br i1 %190, label %191, label %196

191:                                              ; preds = %188
  %192 = load ptr, ptr %144, align 64
  store ptr null, ptr %143, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %192, ptr noundef nonnull @.str) #22
  %193 = load ptr, ptr %145, align 4
  %194 = tail call zeroext i1 @pci_device_is_present(ptr noundef %193) #23
  br i1 %194, label %195, label %196, !prof !9

195:                                              ; preds = %191
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %181) #23
  br label %196

196:                                              ; preds = %195, %191, %188, %184, %178
  %197 = phi i32 [ -1, %178 ], [ -1, %191 ], [ -1, %195 ], [ -1, %188 ], [ %186, %184 ]
  %198 = and i32 %197, 4095
  %199 = icmp uge i32 %198, %156
  %200 = icmp ult i32 %198, %157
  %201 = and i1 %199, %200
  br i1 %201, label %202, label %239

202:                                              ; preds = %196
  %203 = icmp sgt i32 %197, -1
  br i1 %203, label %217, label %204

204:                                              ; preds = %202
  %205 = and i32 %197, 31
  %206 = shl nuw i32 1, %205
  %207 = sub nsw i32 %198, %156
  %208 = lshr i32 %207, 5
  %209 = getelementptr [8 x i32], ptr %2, i32 0, i32 %208
  %210 = load i32, ptr %209, align 4
  %211 = or i32 %210, %206
  store i32 %211, ptr %209, align 4
  %212 = lshr i32 %198, 5
  %213 = getelementptr i32, ptr %3, i32 %212
  %214 = load volatile i32, ptr %213, align 4
  %215 = and i32 %214, %206
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %239

217:                                              ; preds = %204, %202
  %218 = load volatile ptr, ptr %143, align 4
  %219 = icmp eq ptr %218, null
  br i1 %219, label %232, label %220, !prof !9

220:                                              ; preds = %217
  %221 = getelementptr i8, ptr %218, i32 %181
  %222 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %221) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %223 = icmp eq i32 %222, -1
  br i1 %223, label %224, label %232

224:                                              ; preds = %220
  %225 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %218) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %227, label %232

227:                                              ; preds = %224
  %228 = load ptr, ptr %144, align 64
  store ptr null, ptr %143, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %228, ptr noundef nonnull @.str) #22
  %229 = load ptr, ptr %145, align 4
  %230 = tail call zeroext i1 @pci_device_is_present(ptr noundef %229) #23
  br i1 %230, label %231, label %232, !prof !9

231:                                              ; preds = %227
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %181) #23
  br label %232

232:                                              ; preds = %231, %227, %224, %220, %217
  %233 = phi i32 [ -1, %217 ], [ -1, %227 ], [ -1, %231 ], [ -1, %224 ], [ %222, %220 ]
  %234 = load volatile ptr, ptr %143, align 4
  %235 = icmp eq ptr %234, null
  br i1 %235, label %239, label %236, !prof !9

236:                                              ; preds = %232
  %237 = and i32 %233, %177
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !138
  tail call void @arm_heavy_mb() #23
  %238 = getelementptr i8, ptr %234, i32 %181
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %238, i32 %237) #23, !srcloc !14
  br label %239

239:                                              ; preds = %236, %232, %204, %196
  %240 = add nsw i32 %179, -1
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %178

242:                                              ; preds = %239, %171
  %243 = or i32 %155, 7
  %244 = getelementptr [128 x i32], ptr %3, i32 0, i32 %243
  %245 = load i32, ptr %244, align 4
  %246 = load i32, ptr %147, align 4
  %247 = or i32 %246, %245
  %248 = load ptr, ptr %146, align 4
  tail call void %248(ptr noundef %4, i32 noundef %243, i32 noundef %247) #23
  %249 = or i32 %155, 6
  %250 = getelementptr [128 x i32], ptr %3, i32 0, i32 %249
  %251 = load i32, ptr %250, align 4
  %252 = load i32, ptr %148, align 4
  %253 = or i32 %252, %251
  %254 = load ptr, ptr %146, align 4
  tail call void %254(ptr noundef %4, i32 noundef %249, i32 noundef %253) #23
  %255 = or i32 %155, 5
  %256 = getelementptr [128 x i32], ptr %3, i32 0, i32 %255
  %257 = load i32, ptr %256, align 4
  %258 = load i32, ptr %149, align 4
  %259 = or i32 %258, %257
  %260 = load ptr, ptr %146, align 4
  tail call void %260(ptr noundef %4, i32 noundef %255, i32 noundef %259) #23
  %261 = or i32 %155, 4
  %262 = getelementptr [128 x i32], ptr %3, i32 0, i32 %261
  %263 = load i32, ptr %262, align 4
  %264 = load i32, ptr %150, align 4
  %265 = or i32 %264, %263
  %266 = load ptr, ptr %146, align 4
  tail call void %266(ptr noundef %4, i32 noundef %261, i32 noundef %265) #23
  %267 = or i32 %155, 3
  %268 = getelementptr [128 x i32], ptr %3, i32 0, i32 %267
  %269 = load i32, ptr %268, align 4
  %270 = load i32, ptr %151, align 4
  %271 = or i32 %270, %269
  %272 = load ptr, ptr %146, align 4
  tail call void %272(ptr noundef %4, i32 noundef %267, i32 noundef %271) #23
  %273 = or i32 %155, 2
  %274 = getelementptr [128 x i32], ptr %3, i32 0, i32 %273
  %275 = load i32, ptr %274, align 4
  %276 = load i32, ptr %152, align 4
  %277 = or i32 %276, %275
  %278 = load ptr, ptr %146, align 4
  tail call void %278(ptr noundef %4, i32 noundef %273, i32 noundef %277) #23
  %279 = or i32 %155, 1
  %280 = getelementptr [128 x i32], ptr %3, i32 0, i32 %279
  %281 = load i32, ptr %280, align 4
  %282 = load i32, ptr %153, align 4
  %283 = or i32 %282, %281
  %284 = load ptr, ptr %146, align 4
  tail call void %284(ptr noundef %4, i32 noundef %279, i32 noundef %283) #23
  %285 = getelementptr [128 x i32], ptr %3, i32 0, i32 %155
  %286 = load i32, ptr %285, align 4
  %287 = load i32, ptr %2, align 4
  %288 = or i32 %287, %286
  %289 = load ptr, ptr %146, align 4
  tail call void %289(ptr noundef %4, i32 noundef %155, i32 noundef %288) #23
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #23
  %290 = add nuw nsw i32 %155, 8
  %291 = icmp ult i32 %155, 120
  br i1 %291, label %154, label %292

292:                                              ; preds = %242, %135, %132, %83, %80, %70
  %293 = phi i32 [ %61, %132 ], [ %61, %83 ], [ %61, %135 ], [ %59, %70 ], [ %59, %80 ], [ %61, %242 ]
  %294 = getelementptr i8, ptr %0, i32 2516
  %295 = load volatile ptr, ptr %294, align 4
  %296 = icmp eq ptr %295, null
  br i1 %296, label %311, label %297, !prof !9

297:                                              ; preds = %292
  %298 = getelementptr i8, ptr %295, i32 256
  %299 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %298) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %300 = icmp eq i32 %299, -1
  br i1 %300, label %301, label %311

301:                                              ; preds = %297
  %302 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %295) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %303 = icmp eq i32 %302, -1
  br i1 %303, label %304, label %311

304:                                              ; preds = %301
  %305 = getelementptr i8, ptr %0, i32 1920
  %306 = load ptr, ptr %305, align 64
  store ptr null, ptr %294, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %306, ptr noundef nonnull @.str) #22
  %307 = getelementptr i8, ptr %0, i32 2308
  %308 = load ptr, ptr %307, align 4
  %309 = tail call zeroext i1 @pci_device_is_present(ptr noundef %308) #23
  br i1 %309, label %310, label %311, !prof !9

310:                                              ; preds = %304
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 256) #23
  br label %311

311:                                              ; preds = %310, %304, %301, %297, %292
  %312 = phi i32 [ -1, %292 ], [ -1, %304 ], [ -1, %310 ], [ -1, %301 ], [ %299, %297 ]
  %313 = load volatile ptr, ptr %294, align 4
  %314 = icmp eq ptr %313, null
  br i1 %314, label %319, label %315, !prof !9

315:                                              ; preds = %311
  %316 = and i32 %312, -262169
  %317 = or i32 %316, %293
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !139
  tail call void @arm_heavy_mb() #23
  %318 = getelementptr i8, ptr %313, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %318, i32 %317) #23, !srcloc !14
  br label %319

319:                                              ; preds = %315, %311
  %320 = load i32, ptr %5, align 16
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %327

322:                                              ; preds = %319
  %323 = getelementptr i8, ptr %0, i32 2176
  %324 = load i32, ptr %323, align 64
  %325 = icmp ugt i32 %324, 1534
  %326 = select i1 %325, i32 9728, i32 1534
  br label %327

327:                                              ; preds = %322, %319
  %328 = phi i32 [ 9728, %319 ], [ %326, %322 ]
  %329 = load volatile ptr, ptr %294, align 4
  %330 = icmp eq ptr %329, null
  br i1 %330, label %333, label %331, !prof !9

331:                                              ; preds = %327
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !140
  tail call void @arm_heavy_mb() #23
  %332 = getelementptr i8, ptr %329, i32 20484
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %332, i32 %328) #23, !srcloc !14
  br label %333

333:                                              ; preds = %331, %327
  %334 = getelementptr i8, ptr %0, i32 2592
  %335 = load i32, ptr %334, align 4
  %336 = add i32 %335, -5
  %337 = icmp ult i32 %336, -3
  br i1 %337, label %396, label %338

338:                                              ; preds = %333
  %339 = shl i32 %60, 5
  %340 = ashr i32 %339, 31
  %341 = load i32, ptr %5, align 16
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %360, label %343

343:                                              ; preds = %338
  %344 = getelementptr i8, ptr %0, i32 2618
  %345 = load i16, ptr %344, align 2
  %346 = icmp eq i16 %345, 0
  br i1 %346, label %360, label %347

347:                                              ; preds = %343
  %348 = zext i16 %345 to i32
  br label %349

349:                                              ; preds = %358, %347
  %350 = phi i32 [ %348, %347 ], [ %351, %358 ]
  %351 = add nsw i32 %350, -1
  %352 = load volatile ptr, ptr %294, align 4
  %353 = icmp eq ptr %352, null
  br i1 %353, label %358, label %354, !prof !9

354:                                              ; preds = %349
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !141
  tail call void @arm_heavy_mb() #23
  %355 = shl i32 %351, 2
  %356 = add nsw i32 %355, 40960
  %357 = getelementptr i8, ptr %352, i32 %356
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %357, i32 %340) #23, !srcloc !14
  br label %358

358:                                              ; preds = %354, %349
  %359 = icmp eq i32 %351, 0
  br i1 %359, label %360, label %349

360:                                              ; preds = %358, %343, %338
  %361 = shl i32 %6, 2
  %362 = add i32 %361, 23248
  %363 = load volatile ptr, ptr %294, align 4
  %364 = icmp eq ptr %363, null
  br i1 %364, label %381, label %365, !prof !9

365:                                              ; preds = %360
  %366 = getelementptr i8, ptr %363, i32 %362
  %367 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %366) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %368 = icmp eq i32 %367, -1
  br i1 %368, label %369, label %381

369:                                              ; preds = %365
  %370 = icmp eq i32 %362, 0
  br i1 %370, label %374, label %371

371:                                              ; preds = %369
  %372 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %363) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %373 = icmp eq i32 %372, -1
  br i1 %373, label %374, label %381

374:                                              ; preds = %371, %369
  %375 = getelementptr i8, ptr %0, i32 1920
  %376 = load ptr, ptr %375, align 64
  store ptr null, ptr %294, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %376, ptr noundef nonnull @.str) #22
  %377 = getelementptr i8, ptr %0, i32 2308
  %378 = load ptr, ptr %377, align 4
  %379 = tail call zeroext i1 @pci_device_is_present(ptr noundef %378) #23
  br i1 %379, label %380, label %381, !prof !9

380:                                              ; preds = %374
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %362) #23
  br label %381

381:                                              ; preds = %380, %374, %371, %365, %360
  %382 = phi i32 [ -1, %360 ], [ -1, %374 ], [ -1, %380 ], [ -1, %371 ], [ %367, %365 ]
  %383 = getelementptr i8, ptr %0, i32 2176
  %384 = load i32, ptr %383, align 64
  %385 = load volatile ptr, ptr %294, align 4
  %386 = icmp eq ptr %385, null
  br i1 %386, label %395, label %387, !prof !9

387:                                              ; preds = %381
  %388 = and i32 %382, -369180672
  %389 = icmp ugt i32 %384, 1534
  %390 = select i1 %389, i32 9728, i32 1534
  %391 = or i32 %60, %388
  %392 = or i32 %391, %390
  %393 = or i32 %392, 65536
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !142
  tail call void @arm_heavy_mb() #23
  %394 = getelementptr i8, ptr %385, i32 %362
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %394, i32 %393) #23, !srcloc !14
  br label %395

395:                                              ; preds = %387, %381
  tail call fastcc void @igb_restore_vf_multicasts(ptr noundef %3)
  br label %396

396:                                              ; preds = %395, %333
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_set_mac(ptr noundef %0, ptr noundef %1) #4 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr inbounds %struct.sockaddr, ptr %1, i32 0, i32 1
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  %9 = getelementptr %struct.sockaddr, ptr %1, i32 0, i32 1, i32 4
  %10 = load i16, ptr %9, align 2
  %11 = zext i16 %10 to i32
  %12 = or i32 %5, %11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %8
  tail call void @dev_addr_mod(ptr noundef %0, i32 noundef 0, ptr noundef %4, i32 noundef 6) #23
  %15 = getelementptr i8, ptr %0, i32 2580
  %16 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 51
  %17 = load i8, ptr %16, align 1
  %18 = zext i8 %17 to i32
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 4 %15, ptr align 2 %4, i32 %18, i1 false)
  %19 = getelementptr i8, ptr %0, i32 6400
  %20 = load ptr, ptr %19, align 64
  %21 = load i32, ptr %15, align 4
  store i32 %21, ptr %20, align 4
  %22 = getelementptr i8, ptr %0, i32 2584
  %23 = load i16, ptr %22, align 2
  %24 = getelementptr i8, ptr %20, i32 4
  store i16 %23, ptr %24, align 2
  %25 = getelementptr i8, ptr %0, i32 4720
  %26 = load i32, ptr %25, align 16
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.igb_mac_addr, ptr %20, i32 0, i32 1
  store i8 %27, ptr %28, align 1
  %29 = getelementptr inbounds %struct.igb_mac_addr, ptr %20, i32 0, i32 2
  store i8 3, ptr %29, align 1
  tail call fastcc void @igb_rar_set_index(ptr noundef %3, i32 noundef 0) #23
  br label %30

30:                                               ; preds = %14, %8, %2
  %31 = phi i32 [ 0, %14 ], [ -99, %8 ], [ -99, %2 ]
  ret i32 %31
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_validate_addr(ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_ioctl(ptr noundef %0, ptr noundef %1, i32 noundef %2) #4 {
  switch i32 %2, label %32 [
    i32 35143, label %4
    i32 35144, label %4
    i32 35145, label %4
    i32 35249, label %28
    i32 35248, label %30
  ]

4:                                                ; preds = %3, %3, %3
  %5 = getelementptr inbounds %struct.ifreq, ptr %1, i32 0, i32 1
  %6 = getelementptr i8, ptr %0, i32 2512
  %7 = getelementptr i8, ptr %0, i32 3284
  %8 = load i32, ptr %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %32

10:                                               ; preds = %4
  switch i32 %2, label %32 [
    i32 35143, label %11
    i32 35144, label %15
  ]

11:                                               ; preds = %10
  %12 = getelementptr i8, ptr %0, i32 3268
  %13 = load i32, ptr %12, align 4
  %14 = trunc i32 %13 to i16
  store i16 %14, ptr %5, align 2
  br label %27

15:                                               ; preds = %10
  %16 = getelementptr i8, ptr %0, i32 3208
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.mii_ioctl_data, ptr %5, i32 0, i32 3
  %21 = getelementptr inbounds %struct.mii_ioctl_data, ptr %5, i32 0, i32 1
  %22 = load i16, ptr %21, align 2
  %23 = and i16 %22, 31
  %24 = zext i16 %23 to i32
  %25 = tail call i32 %17(ptr noundef %6, i32 noundef %24, ptr noundef %20) #23
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %19, %15, %11
  br label %32

28:                                               ; preds = %3
  %29 = tail call i32 @igb_ptp_get_ts_config(ptr noundef %0, ptr noundef %1) #23
  br label %32

30:                                               ; preds = %3
  %31 = tail call i32 @igb_ptp_set_ts_config(ptr noundef %0, ptr noundef %1) #23
  br label %32

32:                                               ; preds = %30, %28, %27, %19, %10, %4, %3
  %33 = phi i32 [ %31, %30 ], [ %29, %28 ], [ -95, %3 ], [ 0, %27 ], [ -95, %4 ], [ -5, %19 ], [ -95, %10 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_change_mtu(ptr noundef %0, i32 noundef %1) #4 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = add i32 %1, 26
  %5 = getelementptr i8, ptr %0, i32 1924
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = getelementptr i8, ptr %0, i32 2108
  %10 = load i32, ptr %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %15, label %34

12:                                               ; preds = %28
  %13 = add nuw nsw i32 %16, 1
  %14 = icmp eq i32 %13, %10
  br i1 %14, label %34, label %15

15:                                               ; preds = %12, %8
  %16 = phi i32 [ %13, %12 ], [ 0, %8 ]
  %17 = getelementptr %struct.igb_adapter, ptr %3, i32 0, i32 16, i32 %16
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.igb_ring, ptr %18, i32 0, i32 6
  %20 = load volatile i32, ptr %19, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %15
  %24 = load volatile i32, ptr %19, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 2048, i32 1534
  br label %28

28:                                               ; preds = %23, %15
  %29 = phi i32 [ 3072, %15 ], [ %27, %23 ]
  %30 = icmp ugt i32 %4, %29
  br i1 %30, label %31, label %12

31:                                               ; preds = %28
  %32 = getelementptr i8, ptr %0, i32 1920
  %33 = load ptr, ptr %32, align 64
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %33, ptr noundef nonnull @.str.37, i32 noundef %4) #22
  br label %58

34:                                               ; preds = %12, %8, %2
  %35 = tail call i32 @llvm.smax.i32(i32 %4, i32 1518)
  %36 = getelementptr i8, ptr %0, i32 1928
  %37 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %36) #23
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %39, %34
  tail call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #23
  %40 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %36) #23
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %39

42:                                               ; preds = %39, %34
  %43 = getelementptr i8, ptr %0, i32 2176
  store i32 %35, ptr %43, align 64
  %44 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %45 = load volatile i32, ptr %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %42
  tail call void @igb_down(ptr noundef %3)
  br label %49

49:                                               ; preds = %48, %42
  %50 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  store i32 %1, ptr %50, align 4
  %51 = load volatile i32, ptr %44, align 4
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = tail call i32 @igb_up(ptr noundef %3)
  br label %57

56:                                               ; preds = %49
  tail call void @igb_reset(ptr noundef %3)
  br label %57

57:                                               ; preds = %56, %54
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %36) #23
  br label %58

58:                                               ; preds = %57, %31
  %59 = phi i32 [ 0, %57 ], [ -22, %31 ]
  ret i32 %59
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_tx_timeout(ptr noundef %0, i32 noundef %1) #4 {
  %3 = getelementptr i8, ptr %0, i32 2036
  %4 = load i32, ptr %3, align 4
  %5 = add i32 %4, 1
  store i32 %5, ptr %3, align 4
  %6 = getelementptr i8, ptr %0, i32 2592
  %7 = load i32, ptr %6, align 4
  %8 = icmp ugt i32 %7, 2
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr i8, ptr %0, i32 3477
  store i8 1, ptr %10, align 1
  br label %11

11:                                               ; preds = %9, %2
  %12 = getelementptr i8, ptr %0, i32 2248
  %13 = load ptr, ptr @system_wq, align 4
  %14 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %13, ptr noundef %12) #23
  %15 = getelementptr i8, ptr %0, i32 2516
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %26, label %18, !prof !9

18:                                               ; preds = %11
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !143
  tail call void @arm_heavy_mb() #23
  %19 = getelementptr i8, ptr %0, i32 4708
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr i8, ptr %0, i32 4712
  %22 = load i32, ptr %21, align 8
  %23 = xor i32 %22, -1
  %24 = and i32 %20, %23
  %25 = getelementptr i8, ptr %16, i32 5408
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %25, i32 %24) #23, !srcloc !14
  br label %26

26:                                               ; preds = %18, %11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_get_stats64(ptr noundef %0, ptr nocapture noundef writeonly %1) #4 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 2312
  tail call void @_raw_spin_lock(ptr noundef %4) #23
  tail call void @igb_update_stats(ptr noundef %3)
  %5 = getelementptr i8, ptr %0, i32 2320
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(192) %1, ptr noundef align 16 dereferenceable(192) %5, i32 192, i1 false)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %6 = load i16, ptr %4, align 4
  %7 = add i16 %6, 1
  store i16 %7, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_vlan_rx_add_vid(ptr noundef %0, i16 noundef zeroext %1, i16 noundef zeroext %2) #4 {
  %4 = getelementptr i8, ptr %0, i32 2512
  %5 = getelementptr i8, ptr %0, i32 4720
  %6 = load i32, ptr %5, align 16
  %7 = icmp ne i16 %2, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr i8, ptr %0, i32 1932
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 32768
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = zext i16 %2 to i32
  br label %18

15:                                               ; preds = %8, %3
  %16 = zext i16 %2 to i32
  %17 = tail call i32 @igb_vfta_set(ptr noundef %4, i32 noundef %16, i32 noundef %6, i1 noundef zeroext true, i1 noundef zeroext %7) #23
  br label %18

18:                                               ; preds = %15, %13
  %19 = phi i32 [ %14, %13 ], [ %16, %15 ]
  %20 = getelementptr i8, ptr %0, i32 1408
  tail call void @_set_bit(i32 noundef %19, ptr noundef %20) #23
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_vlan_rx_kill_vid(ptr noundef %0, i16 noundef zeroext %1, i16 noundef zeroext %2) #4 {
  %4 = getelementptr i8, ptr %0, i32 4720
  %5 = load i32, ptr %4, align 16
  %6 = getelementptr i8, ptr %0, i32 2512
  %7 = zext i16 %2 to i32
  %8 = icmp eq i16 %2, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr i8, ptr %0, i32 1932
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 32768
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = tail call i32 @igb_vfta_set(ptr noundef %6, i32 noundef %7, i32 noundef %5, i1 noundef zeroext false, i1 noundef zeroext true) #23
  br label %16

16:                                               ; preds = %14, %9, %3
  %17 = getelementptr i8, ptr %0, i32 1408
  tail call void @_clear_bit(i32 noundef %7, ptr noundef %17) #23
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_ndo_set_vf_mac(ptr noundef %0, i32 noundef %1, ptr noundef %2) #4 {
  %4 = getelementptr i8, ptr %0, i32 1408
  %5 = getelementptr i8, ptr %0, i32 4720
  %6 = load i32, ptr %5, align 16
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %8, label %72

8:                                                ; preds = %3
  %9 = load i32, ptr %2, align 4
  %10 = getelementptr i8, ptr %2, i32 4
  %11 = load i16, ptr %10, align 2
  %12 = zext i16 %11 to i32
  %13 = or i32 %9, %12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %8
  %16 = getelementptr i8, ptr %0, i32 4724
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr %struct.vf_data_storage, ptr %17, i32 %1, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, -9
  store i32 %20, ptr %18, align 4
  %21 = getelementptr i8, ptr %0, i32 2308
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.pci_dev, ptr %22, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %23, ptr noundef nonnull @.str.38, i32 noundef %1) #22
  br label %47

24:                                               ; preds = %8
  %25 = and i32 %9, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %72

27:                                               ; preds = %24
  %28 = getelementptr i8, ptr %0, i32 4724
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr %struct.vf_data_storage, ptr %29, i32 %1, i32 3
  %31 = load i32, ptr %30, align 4
  %32 = or i32 %31, 8
  store i32 %32, ptr %30, align 4
  %33 = getelementptr i8, ptr %0, i32 2308
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %35, ptr noundef nonnull @.str.39, ptr noundef %2, i32 noundef %1) #22
  %36 = load ptr, ptr %33, align 4
  %37 = getelementptr inbounds %struct.pci_dev, ptr %36, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %37, ptr noundef nonnull @.str.40) #22
  %38 = getelementptr i8, ptr %0, i32 1928
  %39 = load volatile i32, ptr %38, align 4
  %40 = and i32 %39, 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %27
  %43 = load ptr, ptr %33, align 4
  %44 = getelementptr inbounds %struct.pci_dev, ptr %43, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %44, ptr noundef nonnull @.str.41) #22
  %45 = load ptr, ptr %33, align 4
  %46 = getelementptr inbounds %struct.pci_dev, ptr %45, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %46, ptr noundef nonnull @.str.42) #22
  br label %47

47:                                               ; preds = %42, %27, %15
  %48 = getelementptr i8, ptr %0, i32 3132
  %49 = load i16, ptr %48, align 4
  %50 = zext i16 %49 to i32
  %51 = xor i32 %1, -1
  %52 = add i32 %50, %51
  %53 = getelementptr i8, ptr %0, i32 4724
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr %struct.vf_data_storage, ptr %54, i32 %1
  %56 = load i32, ptr %2, align 4
  store i32 %56, ptr %55, align 4
  %57 = load i16, ptr %10, align 2
  %58 = getelementptr i8, ptr %55, i32 4
  store i16 %57, ptr %58, align 2
  %59 = getelementptr i8, ptr %0, i32 6400
  %60 = load ptr, ptr %59, align 64
  %61 = getelementptr %struct.igb_mac_addr, ptr %60, i32 %52
  %62 = load i32, ptr %2, align 4
  store i32 %62, ptr %61, align 4
  %63 = load i16, ptr %10, align 2
  %64 = getelementptr i8, ptr %61, i32 4
  store i16 %63, ptr %64, align 2
  %65 = trunc i32 %1 to i8
  %66 = load ptr, ptr %59, align 64
  %67 = getelementptr %struct.igb_mac_addr, ptr %66, i32 %52, i32 1
  store i8 %65, ptr %67, align 1
  %68 = load ptr, ptr %59, align 64
  %69 = getelementptr %struct.igb_mac_addr, ptr %68, i32 %52, i32 2
  %70 = load i8, ptr %69, align 1
  %71 = or i8 %70, 2
  store i8 %71, ptr %69, align 1
  tail call fastcc void @igb_rar_set_index(ptr noundef %4, i32 noundef %52) #23
  br label %72

72:                                               ; preds = %47, %24, %3
  %73 = phi i32 [ 0, %47 ], [ -22, %3 ], [ -22, %24 ]
  ret i32 %73
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_ndo_set_vf_vlan(ptr noundef %0, i32 noundef %1, i16 noundef zeroext %2, i8 noundef zeroext %3, i16 noundef zeroext %4) #4 {
  %6 = getelementptr i8, ptr %0, i32 1408
  %7 = getelementptr i8, ptr %0, i32 4720
  %8 = load i32, ptr %7, align 16
  %9 = icmp ule i32 %8, %1
  %10 = icmp ugt i16 %2, 4095
  %11 = or i1 %10, %9
  %12 = icmp ugt i8 %3, 7
  %13 = or i1 %12, %11
  br i1 %13, label %179, label %14

14:                                               ; preds = %5
  %15 = icmp eq i16 %4, 129
  br i1 %15, label %16, label %179

16:                                               ; preds = %14
  %17 = icmp ne i16 %2, 0
  %18 = icmp ne i8 %3, 0
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %108

20:                                               ; preds = %16
  %21 = zext i16 %2 to i32
  %22 = tail call fastcc i32 @igb_set_vf_vlan(ptr noundef %6, i32 noundef %21, i1 noundef zeroext true, i32 noundef %1) #23
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %179

24:                                               ; preds = %20
  %25 = zext i8 %3 to i32
  %26 = shl nuw nsw i32 %25, 13
  %27 = or i32 %26, %21
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr i8, ptr %0, i32 2516
  %30 = load volatile ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %28, label %38, label %32

32:                                               ; preds = %24
  br i1 %31, label %43, label %33, !prof !9

33:                                               ; preds = %32
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !144
  tail call void @arm_heavy_mb() #23
  %34 = or i32 %27, 1073741824
  %35 = shl i32 %1, 2
  %36 = add i32 %35, 14080
  %37 = getelementptr i8, ptr %30, i32 %36
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %37, i32 %34) #23, !srcloc !14
  br label %43

38:                                               ; preds = %24
  br i1 %31, label %43, label %39, !prof !9

39:                                               ; preds = %38
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !145
  tail call void @arm_heavy_mb() #23
  %40 = shl i32 %1, 2
  %41 = add i32 %40, 14080
  %42 = getelementptr i8, ptr %30, i32 %41
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %42, i32 0) #23, !srcloc !14
  br label %43

43:                                               ; preds = %39, %38, %33, %32
  %44 = icmp eq i16 %2, 0
  tail call fastcc void @igb_set_vmolr(ptr noundef %6, i32 noundef %1, i1 noundef zeroext %44) #23
  %45 = getelementptr i8, ptr %0, i32 4724
  %46 = load ptr, ptr %45, align 4
  %47 = getelementptr %struct.vf_data_storage, ptr %46, i32 %1, i32 5
  %48 = load i16, ptr %47, align 4
  %49 = icmp eq i16 %48, %2
  br i1 %49, label %54, label %50

50:                                               ; preds = %43
  %51 = zext i16 %48 to i32
  %52 = tail call fastcc i32 @igb_set_vf_vlan(ptr noundef %6, i32 noundef %51, i1 noundef zeroext false, i32 noundef %1) #23
  %53 = load ptr, ptr %45, align 4
  br label %54

54:                                               ; preds = %50, %43
  %55 = phi ptr [ %53, %50 ], [ %46, %43 ]
  %56 = getelementptr %struct.vf_data_storage, ptr %55, i32 %1, i32 5
  store i16 %2, ptr %56, align 4
  %57 = zext i8 %3 to i16
  %58 = load ptr, ptr %45, align 4
  %59 = getelementptr %struct.vf_data_storage, ptr %58, i32 %1, i32 6
  store i16 %57, ptr %59, align 2
  %60 = getelementptr i8, ptr %0, i32 2592
  %61 = load i32, ptr %60, align 4
  %62 = icmp ult i32 %61, 2
  br i1 %62, label %95, label %63

63:                                               ; preds = %54
  %64 = icmp eq i32 %61, 4
  %65 = shl i32 %1, 6
  %66 = add i32 %65, 49208
  %67 = shl i32 %1, 2
  %68 = add i32 %67, 23248
  %69 = select i1 %64, i32 %66, i32 %68
  %70 = load volatile ptr, ptr %29, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %88, label %72, !prof !9

72:                                               ; preds = %63
  %73 = getelementptr i8, ptr %70, i32 %69
  %74 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %73) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = icmp eq i32 %69, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %76
  %79 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %70) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %88

81:                                               ; preds = %78, %76
  %82 = getelementptr i8, ptr %0, i32 1920
  %83 = load ptr, ptr %82, align 64
  store ptr null, ptr %29, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %83, ptr noundef nonnull @.str) #22
  %84 = getelementptr i8, ptr %0, i32 2308
  %85 = load ptr, ptr %84, align 4
  %86 = tail call zeroext i1 @pci_device_is_present(ptr noundef %85) #23
  br i1 %86, label %87, label %88, !prof !9

87:                                               ; preds = %81
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %69) #23
  br label %88

88:                                               ; preds = %87, %81, %78, %72, %63
  %89 = phi i32 [ -1, %63 ], [ -1, %81 ], [ -1, %87 ], [ -1, %78 ], [ %74, %72 ]
  %90 = load volatile ptr, ptr %29, align 4
  %91 = icmp eq ptr %90, null
  br i1 %91, label %95, label %92, !prof !9

92:                                               ; preds = %88
  %93 = or i32 %89, 1073741824
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !146
  tail call void @arm_heavy_mb() #23
  %94 = getelementptr i8, ptr %90, i32 %69
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %94, i32 %93) #23, !srcloc !14
  br label %95

95:                                               ; preds = %92, %88, %54
  %96 = getelementptr i8, ptr %0, i32 2308
  %97 = load ptr, ptr %96, align 4
  %98 = getelementptr inbounds %struct.pci_dev, ptr %97, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %98, ptr noundef nonnull @.str.43, i32 noundef %21, i32 noundef %25, i32 noundef %1) #22
  %99 = getelementptr i8, ptr %0, i32 1928
  %100 = load volatile i32, ptr %99, align 4
  %101 = and i32 %100, 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %179, label %103

103:                                              ; preds = %95
  %104 = load ptr, ptr %96, align 4
  %105 = getelementptr inbounds %struct.pci_dev, ptr %104, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %105, ptr noundef nonnull @.str.44) #22
  %106 = load ptr, ptr %96, align 4
  %107 = getelementptr inbounds %struct.pci_dev, ptr %106, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %107, ptr noundef nonnull @.str.42) #22
  br label %179

108:                                              ; preds = %16
  %109 = getelementptr i8, ptr %0, i32 2512
  %110 = load volatile i32, ptr %6, align 4
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %108
  %114 = tail call i32 @igb_vfta_set(ptr noundef %109, i32 noundef 0, i32 noundef %8, i1 noundef zeroext true, i1 noundef zeroext false) #23
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %121

116:                                              ; preds = %113, %108
  %117 = tail call i32 @igb_vfta_set(ptr noundef %109, i32 noundef 0, i32 noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #23
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = load volatile i32, ptr %6, align 4
  br label %121

121:                                              ; preds = %119, %116, %113
  %122 = getelementptr i8, ptr %0, i32 2516
  %123 = load volatile ptr, ptr %122, align 4
  %124 = icmp eq ptr %123, null
  br i1 %124, label %129, label %125, !prof !9

125:                                              ; preds = %121
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !145
  tail call void @arm_heavy_mb() #23
  %126 = shl i32 %1, 2
  %127 = add i32 %126, 14080
  %128 = getelementptr i8, ptr %123, i32 %127
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %128, i32 0) #23, !srcloc !14
  br label %129

129:                                              ; preds = %125, %121
  tail call fastcc void @igb_set_vmolr(ptr noundef %6, i32 noundef %1, i1 noundef zeroext true) #23
  %130 = getelementptr i8, ptr %0, i32 4724
  %131 = load ptr, ptr %130, align 4
  %132 = getelementptr %struct.vf_data_storage, ptr %131, i32 %1, i32 5
  %133 = load i16, ptr %132, align 4
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %129
  %136 = zext i16 %133 to i32
  %137 = tail call fastcc i32 @igb_set_vf_vlan(ptr noundef %6, i32 noundef %136, i1 noundef zeroext false, i32 noundef %1) #23
  %138 = load ptr, ptr %130, align 4
  br label %139

139:                                              ; preds = %135, %129
  %140 = phi ptr [ %138, %135 ], [ %131, %129 ]
  %141 = getelementptr %struct.vf_data_storage, ptr %140, i32 %1, i32 5
  store i16 0, ptr %141, align 4
  %142 = load ptr, ptr %130, align 4
  %143 = getelementptr %struct.vf_data_storage, ptr %142, i32 %1, i32 6
  store i16 0, ptr %143, align 2
  %144 = getelementptr i8, ptr %0, i32 2592
  %145 = load i32, ptr %144, align 4
  %146 = icmp ult i32 %145, 2
  br i1 %146, label %179, label %147

147:                                              ; preds = %139
  %148 = icmp eq i32 %145, 4
  %149 = shl i32 %1, 6
  %150 = add i32 %149, 49208
  %151 = shl i32 %1, 2
  %152 = add i32 %151, 23248
  %153 = select i1 %148, i32 %150, i32 %152
  %154 = load volatile ptr, ptr %122, align 4
  %155 = icmp eq ptr %154, null
  br i1 %155, label %172, label %156, !prof !9

156:                                              ; preds = %147
  %157 = getelementptr i8, ptr %154, i32 %153
  %158 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %157) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %160, label %172

160:                                              ; preds = %156
  %161 = icmp eq i32 %153, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %160
  %163 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %154) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %164 = icmp eq i32 %163, -1
  br i1 %164, label %165, label %172

165:                                              ; preds = %162, %160
  %166 = getelementptr i8, ptr %0, i32 1920
  %167 = load ptr, ptr %166, align 64
  store ptr null, ptr %122, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %167, ptr noundef nonnull @.str) #22
  %168 = getelementptr i8, ptr %0, i32 2308
  %169 = load ptr, ptr %168, align 4
  %170 = tail call zeroext i1 @pci_device_is_present(ptr noundef %169) #23
  br i1 %170, label %171, label %172, !prof !9

171:                                              ; preds = %165
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %153) #23
  br label %172

172:                                              ; preds = %171, %165, %162, %156, %147
  %173 = phi i32 [ -1, %147 ], [ -1, %165 ], [ -1, %171 ], [ -1, %162 ], [ %158, %156 ]
  %174 = load volatile ptr, ptr %122, align 4
  %175 = icmp eq ptr %174, null
  br i1 %175, label %179, label %176, !prof !9

176:                                              ; preds = %172
  %177 = and i32 %173, -1073741825
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !146
  tail call void @arm_heavy_mb() #23
  %178 = getelementptr i8, ptr %174, i32 %153
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %178, i32 %177) #23, !srcloc !14
  br label %179

179:                                              ; preds = %176, %172, %139, %103, %95, %20, %14, %5
  %180 = phi i32 [ -22, %5 ], [ -93, %14 ], [ %22, %20 ], [ 0, %95 ], [ 0, %103 ], [ 0, %139 ], [ 0, %172 ], [ 0, %176 ]
  ret i32 %180
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_ndo_set_vf_bw(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #4 {
  %5 = getelementptr i8, ptr %0, i32 2592
  %6 = load i32, ptr %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %79

8:                                                ; preds = %4
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %10, label %79

10:                                               ; preds = %8
  %11 = getelementptr i8, ptr %0, i32 2240
  %12 = load i16, ptr %11, align 64
  %13 = icmp eq i16 %12, 1000
  %14 = select i1 %13, i32 1000, i32 0
  %15 = icmp eq i16 %12, 100
  %16 = select i1 %15, i32 100, i32 %14
  %17 = getelementptr i8, ptr %0, i32 4720
  %18 = load i32, ptr %17, align 16
  %19 = icmp ugt i32 %18, %1
  br i1 %19, label %20, label %79

20:                                               ; preds = %10
  %21 = getelementptr i8, ptr %0, i32 2516
  %22 = load volatile ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %38, label %24, !prof !9

24:                                               ; preds = %20
  %25 = getelementptr i8, ptr %22, i32 8
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %25) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %38

28:                                               ; preds = %24
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %22) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = getelementptr i8, ptr %0, i32 1920
  %33 = load ptr, ptr %32, align 64
  store ptr null, ptr %21, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %33, ptr noundef nonnull @.str) #22
  %34 = getelementptr i8, ptr %0, i32 2308
  %35 = load ptr, ptr %34, align 4
  %36 = tail call zeroext i1 @pci_device_is_present(ptr noundef %35) #23
  br i1 %36, label %37, label %38, !prof !9

37:                                               ; preds = %31
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %38

38:                                               ; preds = %37, %31, %28, %24, %20
  %39 = phi i32 [ -1, %20 ], [ -1, %31 ], [ -1, %37 ], [ -1, %28 ], [ %26, %24 ]
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %3, 0
  %43 = or i1 %42, %41
  %44 = icmp slt i32 %16, %3
  %45 = select i1 %43, i1 true, i1 %44
  br i1 %45, label %79, label %46

46:                                               ; preds = %38
  %47 = getelementptr i8, ptr %0, i32 4728
  store i32 %16, ptr %47, align 8
  %48 = trunc i32 %3 to i16
  %49 = getelementptr i8, ptr %0, i32 4724
  %50 = load ptr, ptr %49, align 4
  %51 = getelementptr %struct.vf_data_storage, ptr %50, i32 %1, i32 7
  store i16 %48, ptr %51, align 4
  %52 = icmp eq i32 %3, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %46
  %54 = udiv i32 %16, %3
  %55 = mul i32 %54, %3
  %56 = sub i32 %16, %55
  %57 = shl i32 %56, 14
  %58 = udiv i32 %57, %3
  %59 = shl nuw nsw i32 %54, 14
  %60 = and i32 %58, 16383
  %61 = or i32 %60, %59
  %62 = or i32 %61, -2147483648
  br label %63

63:                                               ; preds = %53, %46
  %64 = phi i32 [ %62, %53 ], [ 0, %46 ]
  %65 = load volatile ptr, ptr %21, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %69, label %67, !prof !9

67:                                               ; preds = %63
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !128
  tail call void @arm_heavy_mb() #23
  %68 = getelementptr i8, ptr %65, i32 13828
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %68, i32 %1) #23, !srcloc !14
  br label %69

69:                                               ; preds = %67, %63
  %70 = load volatile ptr, ptr %21, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %74, label %72, !prof !9

72:                                               ; preds = %69
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !129
  tail call void @arm_heavy_mb() #23
  %73 = getelementptr i8, ptr %70, i32 13968
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %73, i32 20) #23, !srcloc !14
  br label %74

74:                                               ; preds = %72, %69
  %75 = load volatile ptr, ptr %21, align 4
  %76 = icmp eq ptr %75, null
  br i1 %76, label %79, label %77, !prof !9

77:                                               ; preds = %74
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !130
  tail call void @arm_heavy_mb() #23
  %78 = getelementptr i8, ptr %75, i32 14000
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %78, i32 %64) #23, !srcloc !14
  br label %79

79:                                               ; preds = %77, %74, %38, %10, %8, %4
  %80 = phi i32 [ -95, %4 ], [ -22, %8 ], [ -22, %38 ], [ -22, %10 ], [ 0, %74 ], [ 0, %77 ]
  ret i32 %80
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_ndo_set_vf_spoofchk(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %2) #4 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr i8, ptr %0, i32 4720
  %6 = load i32, ptr %5, align 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %50, label %8

8:                                                ; preds = %3
  %9 = icmp ugt i32 %6, %1
  br i1 %9, label %10, label %50

10:                                               ; preds = %8
  %11 = getelementptr i8, ptr %0, i32 2592
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 2
  %14 = select i1 %13, i32 13568, i32 23244
  %15 = getelementptr i8, ptr %0, i32 2516
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %32, label %18, !prof !9

18:                                               ; preds = %10
  %19 = getelementptr i8, ptr %16, i32 %14
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %19) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %16) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %32

25:                                               ; preds = %22
  %26 = getelementptr i8, ptr %0, i32 1920
  %27 = load ptr, ptr %26, align 64
  store ptr null, ptr %15, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %27, ptr noundef nonnull @.str) #22
  %28 = getelementptr i8, ptr %0, i32 2308
  %29 = load ptr, ptr %28, align 4
  %30 = tail call zeroext i1 @pci_device_is_present(ptr noundef %29) #23
  br i1 %30, label %31, label %32, !prof !9

31:                                               ; preds = %25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %14) #23
  br label %32

32:                                               ; preds = %31, %25, %22, %18, %10
  %33 = phi i32 [ -1, %10 ], [ -1, %25 ], [ -1, %31 ], [ -1, %22 ], [ %20, %18 ]
  %34 = load volatile ptr, ptr %15, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %46, label %36, !prof !9

36:                                               ; preds = %32
  %37 = add i32 %1, 8
  %38 = shl nuw i32 1, %37
  %39 = shl nuw i32 1, %1
  %40 = or i32 %38, %39
  %41 = or i32 %40, %33
  %42 = xor i32 %40, -1
  %43 = and i32 %33, %42
  %44 = select i1 %2, i32 %41, i32 %43
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !147
  tail call void @arm_heavy_mb() #23
  %45 = getelementptr i8, ptr %34, i32 %14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %45, i32 %44) #23, !srcloc !14
  br label %46

46:                                               ; preds = %36, %32
  %47 = getelementptr i8, ptr %0, i32 4724
  %48 = load ptr, ptr %47, align 4
  %49 = getelementptr %struct.vf_data_storage, ptr %48, i32 %1, i32 8
  store i8 %4, ptr %49, align 2
  br label %50

50:                                               ; preds = %46, %8, %3
  %51 = phi i32 [ 0, %46 ], [ -95, %3 ], [ -22, %8 ]
  ret i32 %51
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_ndo_set_vf_trust(ptr nocapture noundef readonly %0, i32 noundef %1, i1 noundef zeroext %2) #4 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr i8, ptr %0, i32 4720
  %6 = load i32, ptr %5, align 16
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr i8, ptr %0, i32 4724
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr %struct.vf_data_storage, ptr %10, i32 %1, i32 9
  %12 = load i8, ptr %11, align 1, !range !15
  %13 = icmp eq i8 %12, %4
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  store i8 %4, ptr %11, align 1
  %15 = getelementptr i8, ptr %0, i32 2308
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  %18 = select i1 %2, ptr @.str.46, ptr @.str.47
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %17, ptr noundef nonnull @.str.45, i32 noundef %1, ptr noundef nonnull %18) #22
  br label %19

19:                                               ; preds = %14, %8, %3
  %20 = phi i32 [ 0, %14 ], [ -22, %3 ], [ 0, %8 ]
  ret i32 %20
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @igb_ndo_get_vf_config(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #15 {
  %4 = getelementptr i8, ptr %0, i32 4720
  %5 = load i32, ptr %4, align 16
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %7, label %38

7:                                                ; preds = %3
  store i32 %1, ptr %2, align 4
  %8 = getelementptr inbounds %struct.ifla_vf_info, ptr %2, i32 0, i32 1
  %9 = getelementptr i8, ptr %0, i32 4724
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr %struct.vf_data_storage, ptr %10, i32 %1
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(6) %8, ptr noundef align 4 dereferenceable(6) %11, i32 6, i1 false)
  %12 = load ptr, ptr %9, align 4
  %13 = getelementptr %struct.vf_data_storage, ptr %12, i32 %1, i32 7
  %14 = load i16, ptr %13, align 4
  %15 = zext i16 %14 to i32
  %16 = getelementptr inbounds %struct.ifla_vf_info, ptr %2, i32 0, i32 7
  store i32 %15, ptr %16, align 4
  %17 = getelementptr inbounds %struct.ifla_vf_info, ptr %2, i32 0, i32 6
  store i32 0, ptr %17, align 4
  %18 = load ptr, ptr %9, align 4
  %19 = getelementptr %struct.vf_data_storage, ptr %18, i32 %1, i32 5
  %20 = load i16, ptr %19, align 4
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %struct.ifla_vf_info, ptr %2, i32 0, i32 2
  store i32 %21, ptr %22, align 4
  %23 = load ptr, ptr %9, align 4
  %24 = getelementptr %struct.vf_data_storage, ptr %23, i32 %1, i32 6
  %25 = load i16, ptr %24, align 2
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %struct.ifla_vf_info, ptr %2, i32 0, i32 3
  store i32 %26, ptr %27, align 4
  %28 = load ptr, ptr %9, align 4
  %29 = getelementptr %struct.vf_data_storage, ptr %28, i32 %1, i32 8
  %30 = load i8, ptr %29, align 2, !range !15
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds %struct.ifla_vf_info, ptr %2, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = load ptr, ptr %9, align 4
  %34 = getelementptr %struct.vf_data_storage, ptr %33, i32 %1, i32 9
  %35 = load i8, ptr %34, align 1, !range !15
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds %struct.ifla_vf_info, ptr %2, i32 0, i32 9
  store i32 %36, ptr %37, align 4
  br label %38

38:                                               ; preds = %7, %3
  %39 = phi i32 [ 0, %7 ], [ -22, %3 ]
  ret i32 %39
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_setup_tc(ptr noundef %0, i32 noundef %1, ptr noundef %2) #4 {
  %4 = getelementptr i8, ptr %0, i32 1408
  switch i32 %1, label %59 [
    i32 6, label %5
    i32 5, label %37
    i32 10, label %39
  ]

5:                                                ; preds = %3
  %6 = getelementptr i8, ptr %0, i32 2592
  %7 = load i32, ptr %6, align 4
  %8 = icmp eq i32 %7, 6
  br i1 %8, label %9, label %59

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.tc_cbs_qopt_offload, ptr %2, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = icmp ugt i32 %11, 1
  br i1 %12, label %59, label %13

13:                                               ; preds = %9
  %14 = getelementptr i8, ptr %0, i32 2040
  %15 = load i32, ptr %14, align 8
  %16 = icmp slt i32 %15, %11
  br i1 %16, label %59, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tc_cbs_qopt_offload, ptr %2, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.tc_cbs_qopt_offload, ptr %2, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.tc_cbs_qopt_offload, ptr %2, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.tc_cbs_qopt_offload, ptr %2, i32 0, i32 4
  %25 = load i32, ptr %24, align 4
  %26 = load i8, ptr %2, align 4
  %27 = icmp ne i8 %26, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr %struct.igb_adapter, ptr %4, i32 0, i32 14, i32 %11
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.igb_ring, ptr %30, i32 0, i32 14
  store i8 %28, ptr %31, align 1
  %32 = getelementptr inbounds %struct.igb_ring, ptr %30, i32 0, i32 15
  store i32 %25, ptr %32, align 16
  %33 = getelementptr inbounds %struct.igb_ring, ptr %30, i32 0, i32 16
  store i32 %23, ptr %33, align 4
  %34 = getelementptr inbounds %struct.igb_ring, ptr %30, i32 0, i32 17
  store i32 %21, ptr %34, align 8
  %35 = getelementptr inbounds %struct.igb_ring, ptr %30, i32 0, i32 18
  store i32 %19, ptr %35, align 4
  %36 = load i32, ptr %10, align 4
  tail call fastcc void @igb_offload_apply(ptr noundef %4, i32 noundef %36) #23
  br label %59

37:                                               ; preds = %3
  %38 = tail call i32 @flow_block_cb_setup_simple(ptr noundef %2, ptr noundef nonnull @igb_block_cb_list, ptr noundef nonnull @igb_setup_tc_block_cb, ptr noundef %4, ptr noundef %4, i1 noundef zeroext true) #23
  br label %59

39:                                               ; preds = %3
  %40 = getelementptr i8, ptr %0, i32 2592
  %41 = load i32, ptr %40, align 4
  %42 = icmp eq i32 %41, 6
  br i1 %42, label %43, label %59

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.tc_etf_qopt_offload, ptr %2, i32 0, i32 1
  %45 = load i32, ptr %44, align 4
  %46 = icmp ugt i32 %45, 1
  br i1 %46, label %59, label %47

47:                                               ; preds = %43
  %48 = getelementptr i8, ptr %0, i32 2040
  %49 = load i32, ptr %48, align 8
  %50 = icmp slt i32 %49, %45
  br i1 %50, label %59, label %51

51:                                               ; preds = %47
  %52 = load i8, ptr %2, align 4
  %53 = icmp ne i8 %52, 0
  %54 = zext i1 %53 to i8
  %55 = getelementptr %struct.igb_adapter, ptr %4, i32 0, i32 14, i32 %45
  %56 = load ptr, ptr %55, align 4
  %57 = getelementptr inbounds %struct.igb_ring, ptr %56, i32 0, i32 13
  store i8 %54, ptr %57, align 4
  %58 = load i32, ptr %44, align 4
  tail call fastcc void @igb_offload_apply(ptr noundef %4, i32 noundef %58) #23
  br label %59

59:                                               ; preds = %51, %47, %43, %39, %37, %17, %13, %9, %5, %3
  %60 = phi i32 [ %38, %37 ], [ -95, %3 ], [ 0, %17 ], [ -95, %5 ], [ -22, %9 ], [ -22, %13 ], [ 0, %51 ], [ -95, %39 ], [ -22, %43 ], [ -22, %47 ]
  ret i32 %60
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i64 @igb_fix_features(ptr nocapture noundef readnone %0, i64 noundef %1) #12 {
  %3 = and i64 %1, -129
  %4 = lshr i64 %1, 1
  %5 = and i64 %4, 128
  %6 = or i64 %5, %3
  ret i64 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_set_features(ptr noundef %0, i64 noundef %1) #4 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %4 = load i64, ptr %3, align 16
  %5 = xor i64 %4, %1
  %6 = getelementptr i8, ptr %0, i32 1408
  %7 = and i64 %5, 256
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call fastcc void @igb_vlan_mode(ptr noundef %0, i64 noundef %1)
  br label %10

10:                                               ; preds = %9, %2
  %11 = and i64 %5, 17867063951360
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %52, label %13

13:                                               ; preds = %10
  %14 = and i64 %1, 274877906944
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %13
  %17 = getelementptr i8, ptr %0, i32 6392
  tail call void @_raw_spin_lock(ptr noundef %17) #23
  %18 = getelementptr i8, ptr %0, i32 6380
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %31, %16
  %22 = phi ptr [ %23, %31 ], [ %19, %16 ]
  %23 = load ptr, ptr %22, align 4
  %24 = tail call i32 @igb_erase_filter(ptr noundef %6, ptr noundef nonnull %22) #23
  %25 = load ptr, ptr %22, align 4
  %26 = getelementptr inbounds %struct.hlist_node, ptr %22, i32 0, i32 1
  %27 = load ptr, ptr %26, align 4
  store volatile ptr %25, ptr %27, align 4
  %28 = icmp eq ptr %25, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.hlist_node, ptr %25, i32 0, i32 1
  store volatile ptr %27, ptr %30, align 4
  br label %31

31:                                               ; preds = %29, %21
  store ptr inttoptr (i32 256 to ptr), ptr %22, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %26, align 4
  tail call void @kfree(ptr noundef nonnull %22) #23
  %32 = icmp eq ptr %23, null
  br i1 %32, label %33, label %21

33:                                               ; preds = %31, %16
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %34 = load i16, ptr %17, align 4
  %35 = add i16 %34, 1
  store i16 %35, ptr %17, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  %36 = getelementptr i8, ptr %0, i32 6388
  store i32 0, ptr %36, align 4
  br label %37

37:                                               ; preds = %33, %13
  store i64 %1, ptr %3, align 16
  %38 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %39 = load volatile i32, ptr %38, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %37
  %43 = getelementptr i8, ptr %0, i32 1928
  %44 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %43) #23
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %46, %42
  tail call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #23
  %47 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %43) #23
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %46

49:                                               ; preds = %46, %42
  tail call void @igb_down(ptr noundef %6) #23
  %50 = tail call i32 @igb_up(ptr noundef %6) #23
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %43) #23
  br label %52

51:                                               ; preds = %37
  tail call void @igb_reset(ptr noundef %6)
  br label %52

52:                                               ; preds = %51, %49, %10
  %53 = phi i32 [ 0, %10 ], [ 1, %51 ], [ 1, %49 ]
  ret i32 %53
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_ndo_fdb_add(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5, ptr nocapture noundef readnone %6) #4 {
  %8 = load i32, ptr %3, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %7
  %12 = xor i32 %8, 12746753
  %13 = getelementptr i16, ptr %3, i32 2
  %14 = load i16, ptr %13, align 2
  %15 = and i16 %14, -3841
  %16 = zext i16 %15 to i32
  %17 = or i32 %12, %16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %57

19:                                               ; preds = %11, %7
  %20 = getelementptr i8, ptr %2, i32 4720
  %21 = load i32, ptr %20, align 16
  %22 = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 60, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = trunc i32 %21 to i8
  %25 = getelementptr i8, ptr %2, i32 3132
  %26 = load i16, ptr %25, align 4
  %27 = zext i16 %26 to i32
  %28 = sub i32 %27, %21
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %54

30:                                               ; preds = %19
  %31 = getelementptr i8, ptr %2, i32 6400
  %32 = load ptr, ptr %31, align 64
  br label %33

33:                                               ; preds = %50, %30
  %34 = phi i32 [ 0, %30 ], [ %51, %50 ]
  %35 = phi i32 [ 0, %30 ], [ %52, %50 ]
  %36 = getelementptr %struct.igb_mac_addr, ptr %32, i32 %35, i32 2
  %37 = load i8, ptr %36, align 1
  %38 = zext i8 %37 to i32
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %33
  %42 = and i32 %38, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr %struct.igb_mac_addr, ptr %32, i32 %35, i32 1
  %46 = load i8, ptr %45, align 1
  %47 = icmp eq i8 %46, %24
  br i1 %47, label %48, label %50

48:                                               ; preds = %44, %41
  %49 = add i32 %34, 1
  br label %50

50:                                               ; preds = %48, %44, %33
  %51 = phi i32 [ %34, %33 ], [ %34, %44 ], [ %49, %48 ]
  %52 = add nuw nsw i32 %35, 1
  %53 = icmp eq i32 %52, %28
  br i1 %53, label %54, label %33

54:                                               ; preds = %50, %19
  %55 = phi i32 [ 0, %19 ], [ %51, %50 ]
  %56 = icmp slt i32 %23, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %54, %11
  %58 = tail call i32 @ndo_dflt_fdb_add(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5) #23
  br label %59

59:                                               ; preds = %57, %54
  %60 = phi i32 [ -12, %54 ], [ %58, %57 ]
  ret i32 %60
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_xdp(ptr noundef %0, ptr nocapture noundef readonly %1) #4 {
  %3 = load i32, ptr %1, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %88

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  %7 = load i32, ptr %6, align 4
  %8 = add i32 %7, 26
  %9 = getelementptr i8, ptr %0, i32 1408
  %10 = getelementptr inbounds %struct.netdev_bpf, ptr %1, i32 0, i32 1, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %13 = load volatile i32, ptr %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr i8, ptr %0, i32 2108
  %17 = load i32, ptr %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %22, label %54

19:                                               ; preds = %35
  %20 = add nuw nsw i32 %23, 1
  %21 = icmp eq i32 %20, %17
  br i1 %21, label %54, label %22

22:                                               ; preds = %19, %5
  %23 = phi i32 [ %20, %19 ], [ 0, %5 ]
  %24 = getelementptr %struct.igb_adapter, ptr %9, i32 0, i32 16, i32 %23
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.igb_ring, ptr %25, i32 0, i32 6
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %22
  %31 = load volatile i32, ptr %26, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i32 2048, i32 1534
  br label %35

35:                                               ; preds = %30, %22
  %36 = phi i32 [ 3072, %22 ], [ %34, %30 ]
  %37 = icmp ugt i32 %8, %36
  br i1 %37, label %38, label %19

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.netdev_bpf, ptr %1, i32 0, i32 1, i32 0, i32 2
  %40 = load ptr, ptr %39, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @igb_xdp_setup.__msg) #23
  %41 = icmp eq ptr %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  store ptr @igb_xdp_setup.__msg, ptr %40, align 4
  br label %43

43:                                               ; preds = %42, %38
  %44 = load volatile i32, ptr %26, align 4
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = load volatile i32, ptr %26, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i32 2048, i32 1534
  br label %52

52:                                               ; preds = %47, %43
  %53 = phi i32 [ 3072, %43 ], [ %51, %47 ]
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.55, i32 noundef %53, i32 noundef %8) #22
  br label %88

54:                                               ; preds = %19, %5
  %55 = getelementptr i8, ptr %0, i32 1924
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !148
  %56 = ptrtoint ptr %11 to i32
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %55) #23, !srcloc !110
  %57 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %56, ptr %55) #23, !srcloc !149
  %58 = extractvalue { i32, i32 } %57, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !150
  %59 = icmp eq ptr %11, null
  %60 = icmp ne i32 %58, 0
  %61 = xor i1 %59, %60
  %62 = select i1 %61, i1 true, i1 %15
  br i1 %62, label %63, label %66

63:                                               ; preds = %54
  %64 = load i32, ptr %16, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %75, label %88

66:                                               ; preds = %54
  %67 = load volatile i32, ptr %12, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 103
  %72 = load i8, ptr %71, align 1, !range !15
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %70, %66
  tail call fastcc void @__igb_close(ptr noundef %0, i1 noundef zeroext false) #23
  br label %86

75:                                               ; preds = %75, %63
  %76 = phi i32 [ %83, %75 ], [ 0, %63 ]
  %77 = getelementptr %struct.igb_adapter, ptr %9, i32 0, i32 16, i32 %76
  %78 = load ptr, ptr %77, align 4
  %79 = getelementptr inbounds %struct.igb_ring, ptr %78, i32 0, i32 2
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !151
  %80 = load ptr, ptr %55, align 4
  %81 = ptrtoint ptr %80 to i32
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %79) #23, !srcloc !110
  %82 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %81, ptr %79) #23, !srcloc !149
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !152
  %83 = add nuw nsw i32 %76, 1
  %84 = load i32, ptr %16, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %75, label %88

86:                                               ; preds = %74, %70
  %87 = tail call fastcc i32 @__igb_open(ptr noundef %0, i1 noundef zeroext false) #23
  br label %88

88:                                               ; preds = %86, %75, %63, %52, %2
  %89 = phi i32 [ -22, %2 ], [ -22, %52 ], [ 0, %86 ], [ 0, %63 ], [ 0, %75 ]
  ret i32 %89
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_xdp_xmit(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #4 {
  %5 = getelementptr i8, ptr %0, i32 1408
  %6 = tail call ptr @llvm.thread.pointer() #23
  %7 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %8 = load i32, ptr %7, align 8
  %9 = getelementptr i8, ptr %0, i32 1928
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %63, !prof !80

13:                                               ; preds = %4
  %14 = icmp ult i32 %3, 2
  br i1 %14, label %15, label %63, !prof !80

15:                                               ; preds = %13
  %16 = getelementptr i8, ptr %0, i32 1924
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %63, label %19

19:                                               ; preds = %15
  %20 = getelementptr i8, ptr %0, i32 2040
  %21 = load i32, ptr %20, align 8
  %22 = icmp ult i32 %8, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = urem i32 %8, %21
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i32 [ %24, %23 ], [ %8, %19 ]
  %27 = getelementptr %struct.igb_adapter, ptr %5, i32 0, i32 14, i32 %26
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %63, label %30, !prof !9

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.igb_ring, ptr %28, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  %33 = getelementptr inbounds %struct.igb_ring, ptr %28, i32 0, i32 11
  %34 = load i8, ptr %33, align 2
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds %struct.net_device, ptr %32, i32 0, i32 87
  %37 = load ptr, ptr %36, align 64
  %38 = getelementptr %struct.netdev_queue, ptr %37, i32 %35, i32 9
  tail call void @_raw_spin_lock(ptr noundef %38) #23
  %39 = getelementptr %struct.netdev_queue, ptr %37, i32 %35, i32 10
  store volatile i32 %8, ptr %39, align 4
  %40 = load volatile i32, ptr @jiffies, align 64
  %41 = getelementptr %struct.netdev_queue, ptr %37, i32 %35, i32 11
  %42 = load volatile i32, ptr %41, align 8
  %43 = icmp eq i32 %42, %40
  br i1 %43, label %45, label %44

44:                                               ; preds = %30
  store volatile i32 %40, ptr %41, align 8
  br label %45

45:                                               ; preds = %44, %30
  %46 = icmp sgt i32 %1, 0
  br i1 %46, label %47, label %56

47:                                               ; preds = %53, %45
  %48 = phi i32 [ %54, %53 ], [ 0, %45 ]
  %49 = getelementptr ptr, ptr %2, i32 %48
  %50 = load ptr, ptr %49, align 4
  %51 = tail call i32 @igb_xmit_xdp_ring(ptr undef, ptr noundef nonnull %28, ptr noundef %50)
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = add nuw nsw i32 %48, 1
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %56, label %47

56:                                               ; preds = %53, %47, %45
  %57 = phi i32 [ 0, %45 ], [ %48, %47 ], [ %1, %53 ]
  store volatile i32 -1, ptr %39, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %58 = load i16, ptr %38, align 4
  %59 = add i16 %58, 1
  store i16 %59, ptr %38, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  %60 = and i32 %3, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62, !prof !80

62:                                               ; preds = %56
  tail call fastcc void @igb_xdp_ring_update_tail(ptr noundef nonnull %28)
  br label %63

63:                                               ; preds = %62, %56, %25, %15, %13, %4
  %64 = phi i32 [ -100, %4 ], [ -22, %13 ], [ -6, %25 ], [ %57, %62 ], [ %57, %56 ], [ -6, %15 ]
  ret i32 %64
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__skb_pad(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_uc_sync(ptr noundef %0, ptr nocapture noundef readonly %1) #4 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 4720
  %5 = load i32, ptr %4, align 16
  %6 = trunc i32 %5 to i8
  %7 = getelementptr i8, ptr %0, i32 3132
  %8 = load i16, ptr %7, align 4
  %9 = zext i16 %8 to i32
  %10 = sub i32 %9, %5
  %11 = load i32, ptr %1, align 4
  %12 = getelementptr i8, ptr %1, i32 4
  %13 = load i16, ptr %12, align 2
  %14 = zext i16 %13 to i32
  %15 = or i32 %11, %14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %54, label %17

17:                                               ; preds = %2
  %18 = icmp sgt i32 %10, 0
  br i1 %18, label %19, label %54

19:                                               ; preds = %17
  %20 = getelementptr i8, ptr %0, i32 6400
  %21 = load ptr, ptr %20, align 64
  br label %22

22:                                               ; preds = %51, %19
  %23 = phi i32 [ 0, %19 ], [ %52, %51 ]
  %24 = getelementptr %struct.igb_mac_addr, ptr %21, i32 %23
  %25 = getelementptr %struct.igb_mac_addr, ptr %21, i32 %23, i32 2
  %26 = load i8, ptr %25, align 1
  %27 = zext i8 %26 to i32
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %22
  %31 = and i32 %27, 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %51

33:                                               ; preds = %30
  %34 = load i32, ptr %24, align 4
  %35 = xor i32 %34, %11
  %36 = getelementptr i8, ptr %24, i32 4
  %37 = load i16, ptr %36, align 2
  %38 = xor i16 %37, %13
  %39 = zext i16 %38 to i32
  %40 = or i32 %35, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %51

42:                                               ; preds = %33, %22
  store i32 %11, ptr %24, align 4
  %43 = load i16, ptr %12, align 2
  %44 = getelementptr i8, ptr %24, i32 4
  store i16 %43, ptr %44, align 2
  %45 = load ptr, ptr %20, align 64
  %46 = getelementptr %struct.igb_mac_addr, ptr %45, i32 %23, i32 1
  store i8 %6, ptr %46, align 1
  %47 = load ptr, ptr %20, align 64
  %48 = getelementptr %struct.igb_mac_addr, ptr %47, i32 %23, i32 2
  %49 = load i8, ptr %48, align 1
  %50 = or i8 %49, 2
  store i8 %50, ptr %48, align 1
  tail call fastcc void @igb_rar_set_index(ptr noundef %3, i32 noundef %23) #23
  br label %54

51:                                               ; preds = %33, %30
  %52 = add nuw nsw i32 %23, 1
  %53 = icmp eq i32 %52, %10
  br i1 %53, label %54, label %22

54:                                               ; preds = %51, %42, %17, %2
  %55 = phi i32 [ %23, %42 ], [ -22, %2 ], [ -28, %17 ], [ -28, %51 ]
  %56 = tail call i32 @llvm.smin.i32(i32 %55, i32 0)
  ret i32 %56
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_uc_unsync(ptr noundef %0, ptr nocapture noundef readonly %1) #4 {
  %3 = getelementptr i8, ptr %0, i32 1408
  %4 = getelementptr i8, ptr %0, i32 4720
  %5 = load i32, ptr %4, align 16
  %6 = trunc i32 %5 to i8
  %7 = tail call fastcc i32 @igb_del_mac_filter_flags(ptr noundef %3, ptr noundef %1, i8 noundef zeroext %6, i8 noundef zeroext 0) #23
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_restore_vf_multicasts(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %4 = load i32, ptr %3, align 16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %8 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %9 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 51
  br label %11

11:                                               ; preds = %64, %6
  %12 = phi i32 [ 0, %6 ], [ %65, %64 ]
  %13 = shl i32 %12, 2
  %14 = add i32 %13, 23248
  %15 = load volatile ptr, ptr %7, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %31, label %17, !prof !9

17:                                               ; preds = %11
  %18 = getelementptr i8, ptr %15, i32 %14
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %18) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = icmp eq i32 %14, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %15) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %31

26:                                               ; preds = %23, %21
  %27 = load ptr, ptr %8, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %27, ptr noundef nonnull @.str) #22
  %28 = load ptr, ptr %9, align 4
  %29 = tail call zeroext i1 @pci_device_is_present(ptr noundef %28) #23
  br i1 %29, label %30, label %31, !prof !9

30:                                               ; preds = %26
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %14) #23
  br label %31

31:                                               ; preds = %30, %26, %23, %17, %11
  %32 = phi i32 [ -1, %11 ], [ -1, %26 ], [ -1, %30 ], [ -1, %23 ], [ %19, %17 ]
  %33 = and i32 %32, -301989889
  %34 = load ptr, ptr %10, align 4
  %35 = getelementptr %struct.vf_data_storage, ptr %34, i32 %12, i32 2
  %36 = load i16, ptr %35, align 2
  %37 = icmp ugt i16 %36, 30
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr %struct.vf_data_storage, ptr %34, i32 %12, i32 3
  %40 = load i32, ptr %39, align 4
  %41 = and i32 %40, 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %31
  %44 = or i32 %33, 268435456
  br label %58

45:                                               ; preds = %38
  %46 = icmp eq i16 %36, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %45
  %48 = or i32 %33, 33554432
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i32 [ %54, %49 ], [ 0, %47 ]
  %51 = getelementptr %struct.vf_data_storage, ptr %34, i32 %12, i32 1, i32 %50
  %52 = load i16, ptr %51, align 2
  %53 = zext i16 %52 to i32
  tail call void @igb_mta_set(ptr noundef %2, i32 noundef %53) #23
  %54 = add nuw nsw i32 %50, 1
  %55 = load i16, ptr %35, align 2
  %56 = zext i16 %55 to i32
  %57 = icmp ult i32 %54, %56
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %45, %43
  %59 = phi i32 [ %44, %43 ], [ %33, %45 ], [ %48, %49 ]
  %60 = load volatile ptr, ptr %7, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %64, label %62, !prof !9

62:                                               ; preds = %58
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !153
  tail call void @arm_heavy_mb() #23
  %63 = getelementptr i8, ptr %60, i32 %14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %63, i32 %59) #23, !srcloc !14
  br label %64

64:                                               ; preds = %62, %58
  %65 = add nuw i32 %12, 1
  %66 = load i32, ptr %3, align 16
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %11, label %68

68:                                               ; preds = %64, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_update_mc_addr_list(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #16

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #17

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__hw_addr_sync_dev(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_mta_set(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_ptp_get_ts_config(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_ptp_set_ts_config(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_vfta_set(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_rar_set_index(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 92
  %4 = load ptr, ptr %3, align 64
  %5 = getelementptr %struct.igb_mac_addr, ptr %4, i32 %1
  %6 = load i32, ptr %5, align 4
  %7 = getelementptr i8, ptr %5, i32 4
  %8 = load i16, ptr %7, align 2
  %9 = zext i16 %8 to i32
  %10 = getelementptr %struct.igb_mac_addr, ptr %4, i32 %1, i32 2
  %11 = load i8, ptr %10, align 1
  %12 = and i8 %11, 2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %2
  %15 = and i32 %6, 1
  %16 = icmp eq i32 %15, 0
  %17 = or i32 %6, %9
  %18 = icmp eq i32 %17, 0
  %19 = or i32 %9, -2147483648
  %20 = select i1 %18, i32 %9, i32 %19
  %21 = select i1 %16, i32 %20, i32 %9
  %22 = and i8 %11, 4
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 14
  %25 = or i32 %21, %24
  %26 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %27 = load i32, ptr %26, align 4
  switch i32 %27, label %36 [
    i32 1, label %28
    i32 6, label %28
  ]

28:                                               ; preds = %14, %14
  %29 = and i8 %11, 8
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 25
  %32 = or i32 %25, %31
  %33 = getelementptr %struct.igb_mac_addr, ptr %4, i32 %1, i32 1
  %34 = load i8, ptr %33, align 1
  %35 = zext i8 %34 to i32
  br label %40

36:                                               ; preds = %14
  %37 = getelementptr %struct.igb_mac_addr, ptr %4, i32 %1, i32 1
  %38 = load i8, ptr %37, align 1
  %39 = zext i8 %38 to i32
  br label %40

40:                                               ; preds = %36, %28
  %41 = phi i32 [ %39, %36 ], [ 18, %28 ]
  %42 = phi i32 [ 262144, %36 ], [ %35, %28 ]
  %43 = phi i32 [ %25, %36 ], [ %32, %28 ]
  %44 = shl i32 %42, %41
  %45 = or i32 %44, %43
  br label %46

46:                                               ; preds = %40, %2
  %47 = phi i32 [ %9, %2 ], [ %45, %40 ]
  %48 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %49 = load volatile ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %57, label %51, !prof !9

51:                                               ; preds = %46
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !154
  tail call void @arm_heavy_mb() #23
  %52 = icmp ult i32 %1, 16
  %53 = shl i32 %1, 3
  %54 = select i1 %52, i32 21504, i32 21600
  %55 = add i32 %54, %53
  %56 = getelementptr i8, ptr %49, i32 %55
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %56, i32 %6) #23, !srcloc !14
  br label %57

57:                                               ; preds = %51, %46
  %58 = load volatile ptr, ptr %48, align 4
  %59 = icmp eq ptr %58, null
  br i1 %59, label %74, label %60, !prof !9

60:                                               ; preds = %57
  %61 = getelementptr i8, ptr %58, i32 8
  %62 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %61) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %74

64:                                               ; preds = %60
  %65 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %58) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %67, label %74

67:                                               ; preds = %64
  %68 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %69 = load ptr, ptr %68, align 64
  store ptr null, ptr %48, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %69, ptr noundef nonnull @.str) #22
  %70 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %71 = load ptr, ptr %70, align 4
  %72 = tail call zeroext i1 @pci_device_is_present(ptr noundef %71) #23
  br i1 %72, label %73, label %74, !prof !9

73:                                               ; preds = %67
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %74

74:                                               ; preds = %73, %67, %64, %60, %57
  %75 = load volatile ptr, ptr %48, align 4
  %76 = icmp eq ptr %75, null
  br i1 %76, label %83, label %77, !prof !9

77:                                               ; preds = %74
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !155
  tail call void @arm_heavy_mb() #23
  %78 = icmp ult i32 %1, 16
  %79 = shl i32 %1, 3
  %80 = select i1 %78, i32 21508, i32 21604
  %81 = add i32 %80, %79
  %82 = getelementptr i8, ptr %75, i32 %81
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %82, i32 %47) #23, !srcloc !14
  br label %83

83:                                               ; preds = %77, %74
  %84 = load volatile ptr, ptr %48, align 4
  %85 = icmp eq ptr %84, null
  br i1 %85, label %100, label %86, !prof !9

86:                                               ; preds = %83
  %87 = getelementptr i8, ptr %84, i32 8
  %88 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %87) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %90, label %100

90:                                               ; preds = %86
  %91 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %84) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %92 = icmp eq i32 %91, -1
  br i1 %92, label %93, label %100

93:                                               ; preds = %90
  %94 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %95 = load ptr, ptr %94, align 64
  store ptr null, ptr %48, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %95, ptr noundef nonnull @.str) #22
  %96 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %97 = load ptr, ptr %96, align 4
  %98 = tail call zeroext i1 @pci_device_is_present(ptr noundef %97) #23
  br i1 %98, label %99, label %100, !prof !9

99:                                               ; preds = %93
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %100

100:                                              ; preds = %99, %93, %90, %86, %83
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_set_vf_vlan(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %2, i32 noundef %3) unnamed_addr #4 {
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %6 = load i32, ptr %5, align 16
  %7 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  br i1 %2, label %8, label %19

8:                                                ; preds = %4
  %9 = lshr i32 %1, 5
  %10 = getelementptr i32, ptr %0, i32 %9
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %1, 31
  %13 = shl nuw i32 1, %12
  %14 = and i32 %11, %13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %8
  %17 = tail call i32 @igb_vfta_set(ptr noundef %7, i32 noundef %1, i32 noundef %6, i1 noundef zeroext true, i1 noundef zeroext false) #23
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %107

19:                                               ; preds = %16, %8, %4
  %20 = tail call i32 @igb_vfta_set(ptr noundef %7, i32 noundef %1, i32 noundef %3, i1 noundef zeroext %2, i1 noundef zeroext false) #23
  %21 = xor i1 %2, true
  %22 = icmp ne i32 %20, 0
  %23 = select i1 %21, i1 true, i1 %22
  br i1 %23, label %24, label %107

24:                                               ; preds = %19
  %25 = lshr i32 %1, 5
  %26 = getelementptr i32, ptr %0, i32 %25
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %1, 31
  %29 = shl nuw i32 1, %28
  %30 = and i32 %27, %29
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %34 = load i32, ptr %33, align 4
  %35 = and i32 %34, 32768
  %36 = icmp eq i32 %35, 0
  %37 = icmp eq i32 %1, 0
  %38 = or i1 %37, %36
  br i1 %38, label %107, label %41

39:                                               ; preds = %24
  %40 = icmp eq i32 %1, 0
  br i1 %40, label %107, label %41

41:                                               ; preds = %39, %32
  %42 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %43 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %44 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  br label %45

45:                                               ; preds = %66, %41
  %46 = phi i32 [ %47, %66 ], [ 32, %41 ]
  %47 = add nsw i32 %46, -1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %107, label %49

49:                                               ; preds = %45
  %50 = shl i32 %47, 2
  %51 = add nuw nsw i32 %50, 23808
  %52 = load volatile ptr, ptr %42, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %66, label %54, !prof !9

54:                                               ; preds = %49
  %55 = getelementptr i8, ptr %52, i32 %51
  %56 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %55) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %52) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = load ptr, ptr %43, align 64
  store ptr null, ptr %42, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %62, ptr noundef nonnull @.str) #22
  %63 = load ptr, ptr %44, align 4
  %64 = tail call zeroext i1 @pci_device_is_present(ptr noundef %63) #23
  br i1 %64, label %65, label %66, !prof !9

65:                                               ; preds = %61
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %51) #23
  br label %66

66:                                               ; preds = %65, %61, %58, %54, %49
  %67 = phi i32 [ -1, %49 ], [ -1, %61 ], [ -1, %65 ], [ -1, %58 ], [ %56, %54 ]
  %68 = and i32 %67, 4095
  %69 = icmp eq i32 %68, %1
  br i1 %69, label %70, label %45

70:                                               ; preds = %66
  %71 = load i32, ptr %5, align 16
  %72 = add i32 %71, 12
  %73 = shl nuw i32 1, %72
  %74 = and i32 %73, 1044480
  %75 = xor i32 %74, 1044480
  %76 = load volatile ptr, ptr %42, align 4
  %77 = icmp eq ptr %76, null
  br i1 %77, label %90, label %78, !prof !9

78:                                               ; preds = %70
  %79 = getelementptr i8, ptr %76, i32 %51
  %80 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %79) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %90

82:                                               ; preds = %78
  %83 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %76) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %85, label %90

85:                                               ; preds = %82
  %86 = load ptr, ptr %43, align 64
  store ptr null, ptr %42, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %86, ptr noundef nonnull @.str) #22
  %87 = load ptr, ptr %44, align 4
  %88 = tail call zeroext i1 @pci_device_is_present(ptr noundef %87) #23
  br i1 %88, label %89, label %90, !prof !9

89:                                               ; preds = %85
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %51) #23
  br label %90

90:                                               ; preds = %89, %85, %82, %78, %70
  %91 = phi i32 [ -1, %70 ], [ -1, %85 ], [ -1, %89 ], [ -1, %82 ], [ %80, %78 ]
  %92 = and i32 %91, %75
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %107

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %96 = load i32, ptr %95, align 4
  %97 = and i32 %96, 32768
  %98 = icmp eq i32 %97, 0
  %99 = load volatile ptr, ptr %42, align 4
  %100 = icmp eq ptr %99, null
  br i1 %98, label %104, label %101

101:                                              ; preds = %94
  br i1 %100, label %107, label %102, !prof !9

102:                                              ; preds = %101
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !156
  tail call void @arm_heavy_mb() #23
  %103 = getelementptr i8, ptr %99, i32 %51
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %103, i32 %73) #23, !srcloc !14
  br label %107

104:                                              ; preds = %94
  br i1 %100, label %107, label %105, !prof !9

105:                                              ; preds = %104
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !157
  tail call void @arm_heavy_mb() #23
  %106 = getelementptr i8, ptr %99, i32 %51
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %106, i32 0) #23, !srcloc !14
  br label %107

107:                                              ; preds = %105, %104, %102, %101, %90, %45, %39, %32, %19, %16
  %108 = phi i32 [ %17, %16 ], [ 0, %19 ], [ %20, %32 ], [ %20, %39 ], [ %20, %90 ], [ %20, %101 ], [ %20, %102 ], [ %20, %104 ], [ %20, %105 ], [ %20, %45 ]
  ret i32 %108
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @flow_block_cb_setup_simple(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_setup_tc_block_cb(i32 noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #4 {
  %4 = alloca %struct.flow_match_eth_addrs, align 8
  %5 = alloca %struct.flow_match_basic, align 8
  %6 = alloca %struct.flow_match_vlan, align 8
  %7 = getelementptr inbounds %struct.igb_adapter, ptr %2, i32 0, i32 1
  %8 = load ptr, ptr %7, align 64
  %9 = getelementptr inbounds %struct.flow_cls_common_offload, ptr %1, i32 0, i32 3
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 23
  %12 = load i64, ptr %11, align 16
  %13 = and i64 %12, 562949953421312
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @tc_can_offload_extack.__msg) #23
  %16 = icmp eq ptr %10, null
  br i1 %16, label %252, label %22

17:                                               ; preds = %3
  %18 = load i32, ptr %1, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @tc_cls_can_offload_and_chain0.__msg) #23
  %21 = icmp eq ptr %10, null
  br i1 %21, label %252, label %22

22:                                               ; preds = %20, %15
  %23 = phi ptr [ @tc_can_offload_extack.__msg, %15 ], [ @tc_cls_can_offload_and_chain0.__msg, %20 ]
  store ptr %23, ptr %10, align 4
  br label %252

24:                                               ; preds = %17
  %25 = icmp eq i32 %0, 2
  br i1 %25, label %26, label %252

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.flow_cls_offload, ptr %1, i32 0, i32 1
  %28 = load i32, ptr %27, align 8
  switch i32 %28, label %252 [
    i32 0, label %29
    i32 1, label %224
  ]

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.flow_cls_offload, ptr %1, i32 0, i32 5
  %31 = load i32, ptr %30, align 8
  %32 = and i32 %31, 65535
  %33 = add nsw i32 %32, -65504
  %34 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 117
  %35 = load i16, ptr %34, align 2
  %36 = sext i16 %35 to i32
  %37 = icmp ult i32 %33, %36
  %38 = select i1 %37, i32 %33, i32 -22
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @igb_configure_clsflower.__msg) #23
  %41 = icmp eq ptr %10, null
  br i1 %41, label %252, label %42

42:                                               ; preds = %40
  store ptr @igb_configure_clsflower.__msg, ptr %10, align 4
  br label %252

43:                                               ; preds = %29
  %44 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %45 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %44, i32 noundef 3520, i32 noundef 40) #26
  %46 = icmp eq ptr %45, null
  br i1 %46, label %252, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.flow_cls_offload, ptr %1, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr %9, align 4
  %52 = load i32, ptr %50, align 4
  %53 = and i32 %52, -1156
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @igb_parse_cls_flower.__msg) #23
  %56 = icmp eq ptr %51, null
  br i1 %56, label %222, label %57

57:                                               ; preds = %55
  store ptr @igb_parse_cls_flower.__msg, ptr %51, align 4
  br label %222

58:                                               ; preds = %47
  %59 = and i32 %52, 128
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %122, label %61

61:                                               ; preds = %58
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #23
  store i64 0, ptr %4, align 8, !annotation !24
  call void @flow_rule_match_eth_addrs(ptr noundef %49, ptr noundef nonnull %4) #23
  %62 = getelementptr inbounds %struct.flow_match_eth_addrs, ptr %4, i32 0, i32 1
  %63 = load ptr, ptr %62, align 4
  %64 = load i32, ptr %63, align 4
  %65 = getelementptr i8, ptr %63, i32 4
  %66 = load i16, ptr %65, align 2
  %67 = zext i16 %66 to i32
  %68 = or i32 %64, %67
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %61
  %71 = lshr i32 %64, 16
  %72 = trunc i32 %71 to i16
  %73 = trunc i32 %64 to i16
  %74 = and i16 %66, %73
  %75 = and i16 %74, %72
  %76 = icmp eq i16 %75, -1
  br i1 %76, label %80, label %77

77:                                               ; preds = %70
  call void @do_trace_netlink_extack(ptr noundef nonnull @igb_parse_cls_flower.__msg.51) #23
  %78 = icmp eq ptr %51, null
  br i1 %78, label %166, label %79

79:                                               ; preds = %77
  store ptr @igb_parse_cls_flower.__msg.51, ptr %51, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  br label %222

80:                                               ; preds = %70
  %81 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1
  %82 = load i8, ptr %81, align 8
  %83 = or i8 %82, 8
  store i8 %83, ptr %81, align 8
  %84 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1, i32 4
  %85 = load ptr, ptr %4, align 8
  %86 = load i32, ptr %85, align 4
  store i32 %86, ptr %84, align 4
  %87 = getelementptr i8, ptr %85, i32 4
  %88 = load i16, ptr %87, align 2
  %89 = getelementptr %struct.igb_nfc_filter, ptr %45, i32 0, i32 1, i32 4, i32 4
  store i16 %88, ptr %89, align 8
  br label %90

90:                                               ; preds = %80, %61
  %91 = getelementptr inbounds %struct.flow_dissector_key_eth_addrs, ptr %63, i32 0, i32 1
  %92 = load i32, ptr %91, align 4
  %93 = getelementptr %struct.flow_dissector_key_eth_addrs, ptr %63, i32 0, i32 1, i32 4
  %94 = load i16, ptr %93, align 2
  %95 = zext i16 %94 to i32
  %96 = or i32 %92, %95
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %119, label %98

98:                                               ; preds = %90
  %99 = lshr i32 %92, 16
  %100 = trunc i32 %99 to i16
  %101 = trunc i32 %92 to i16
  %102 = and i16 %94, %101
  %103 = and i16 %102, %100
  %104 = icmp eq i16 %103, -1
  br i1 %104, label %108, label %105

105:                                              ; preds = %98
  call void @do_trace_netlink_extack(ptr noundef nonnull @igb_parse_cls_flower.__msg.52) #23
  %106 = icmp eq ptr %51, null
  br i1 %106, label %167, label %107

107:                                              ; preds = %105
  store ptr @igb_parse_cls_flower.__msg.52, ptr %51, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  br label %222

108:                                              ; preds = %98
  %109 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1
  %110 = load i8, ptr %109, align 8
  %111 = or i8 %110, 4
  store i8 %111, ptr %109, align 8
  %112 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1, i32 3
  %113 = load ptr, ptr %4, align 8
  %114 = getelementptr inbounds %struct.flow_dissector_key_eth_addrs, ptr %113, i32 0, i32 1
  %115 = load i32, ptr %114, align 4
  store i32 %115, ptr %112, align 4
  %116 = getelementptr %struct.flow_dissector_key_eth_addrs, ptr %113, i32 0, i32 1, i32 4
  %117 = load i16, ptr %116, align 2
  %118 = getelementptr %struct.igb_nfc_filter, ptr %45, i32 0, i32 1, i32 3, i32 4
  store i16 %117, ptr %118, align 2
  br label %119

119:                                              ; preds = %108, %90
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  %120 = load ptr, ptr %49, align 8
  %121 = load i32, ptr %120, align 4
  br label %122

122:                                              ; preds = %119, %58
  %123 = phi i32 [ %121, %119 ], [ %52, %58 ]
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %143, label %126

126:                                              ; preds = %122
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #23
  store i64 0, ptr %5, align 8, !annotation !24
  call void @flow_rule_match_basic(ptr noundef %49, ptr noundef nonnull %5) #23
  %127 = getelementptr inbounds %struct.flow_match_basic, ptr %5, i32 0, i32 1
  %128 = load ptr, ptr %127, align 4
  %129 = load i16, ptr %128, align 2
  switch i16 %129, label %130 [
    i16 0, label %140
    i16 -1, label %133
  ]

130:                                              ; preds = %126
  call void @do_trace_netlink_extack(ptr noundef nonnull @igb_parse_cls_flower.__msg.53) #23
  %131 = icmp eq ptr %51, null
  br i1 %131, label %168, label %132

132:                                              ; preds = %130
  store ptr @igb_parse_cls_flower.__msg.53, ptr %51, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #23
  br label %222

133:                                              ; preds = %126
  %134 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1
  %135 = load i8, ptr %134, align 8
  %136 = or i8 %135, 1
  store i8 %136, ptr %134, align 8
  %137 = load ptr, ptr %5, align 8
  %138 = load i16, ptr %137, align 2
  %139 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1, i32 1
  store i16 %138, ptr %139, align 2
  br label %140

140:                                              ; preds = %133, %126
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #23
  %141 = load ptr, ptr %49, align 8
  %142 = load i32, ptr %141, align 4
  br label %143

143:                                              ; preds = %140, %122
  %144 = phi i32 [ %142, %140 ], [ %123, %122 ]
  %145 = and i32 %144, 1024
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %170, label %147

147:                                              ; preds = %143
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #23
  store i64 0, ptr %6, align 8, !annotation !24
  call void @flow_rule_match_vlan(ptr noundef %49, ptr noundef nonnull %6) #23
  %148 = getelementptr inbounds %struct.flow_match_vlan, ptr %6, i32 0, i32 1
  %149 = load ptr, ptr %148, align 4
  %150 = load i16, ptr %149, align 2
  %151 = icmp ult i16 %150, 8192
  br i1 %151, label %165, label %152

152:                                              ; preds = %147
  %153 = icmp ugt i16 %150, -8193
  br i1 %153, label %157, label %154

154:                                              ; preds = %152
  call void @do_trace_netlink_extack(ptr noundef nonnull @igb_parse_cls_flower.__msg.54) #23
  %155 = icmp eq ptr %51, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %154
  store ptr @igb_parse_cls_flower.__msg.54, ptr %51, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #23
  br label %222

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1
  %159 = load i8, ptr %158, align 8
  %160 = or i8 %159, 2
  store i8 %160, ptr %158, align 8
  %161 = load ptr, ptr %6, align 8
  %162 = load i16, ptr %161, align 2
  %163 = lshr i16 %162, 13
  %164 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1, i32 2
  store i16 %163, ptr %164, align 4
  br label %165

165:                                              ; preds = %157, %147
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #23
  br label %170

166:                                              ; preds = %77
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  br label %222

167:                                              ; preds = %105
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  br label %222

168:                                              ; preds = %130
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #23
  br label %222

169:                                              ; preds = %154
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #23
  br label %222

170:                                              ; preds = %165, %143
  %171 = trunc i32 %38 to i16
  %172 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 5
  store i16 %171, ptr %172, align 4
  %173 = getelementptr inbounds %struct.flow_cls_offload, ptr %1, i32 0, i32 2
  %174 = load i32, ptr %173, align 4
  %175 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 2
  store i32 %174, ptr %175, align 4
  %176 = getelementptr inbounds %struct.igb_adapter, ptr %2, i32 0, i32 90
  call void @_raw_spin_lock(ptr noundef %176) #23
  %177 = getelementptr inbounds %struct.igb_adapter, ptr %2, i32 0, i32 87
  %178 = getelementptr inbounds %struct.igb_nfc_filter, ptr %45, i32 0, i32 1
  br label %179

179:                                              ; preds = %183, %170
  %180 = phi ptr [ %177, %170 ], [ %181, %183 ]
  %181 = load ptr, ptr %180, align 4
  %182 = icmp eq ptr %181, null
  br i1 %182, label %189, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.igb_nfc_filter, ptr %181, i32 0, i32 1
  %185 = call i32 @bcmp(ptr noundef dereferenceable(18) %184, ptr noundef dereferenceable(18) %178, i32 18) #23
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %179

187:                                              ; preds = %183
  call void @do_trace_netlink_extack(ptr noundef nonnull @igb_configure_clsflower.__msg.48) #23
  %188 = icmp eq ptr %10, null
  br i1 %188, label %218, label %215

189:                                              ; preds = %179
  %190 = getelementptr inbounds %struct.igb_adapter, ptr %2, i32 0, i32 88
  br label %191

191:                                              ; preds = %195, %189
  %192 = phi ptr [ %190, %189 ], [ %193, %195 ]
  %193 = load ptr, ptr %192, align 4
  %194 = icmp eq ptr %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %struct.igb_nfc_filter, ptr %193, i32 0, i32 1
  %197 = call i32 @bcmp(ptr noundef dereferenceable(18) %196, ptr noundef dereferenceable(18) %178, i32 18) #23
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %191

199:                                              ; preds = %195
  call void @do_trace_netlink_extack(ptr noundef nonnull @igb_configure_clsflower.__msg.49) #23
  %200 = icmp eq ptr %10, null
  br i1 %200, label %218, label %215

201:                                              ; preds = %191
  %202 = call i32 @igb_add_filter(ptr noundef %2, ptr noundef nonnull %45) #23
  %203 = icmp slt i32 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  call void @do_trace_netlink_extack(ptr noundef nonnull @igb_configure_clsflower.__msg.50) #23
  %205 = icmp eq ptr %10, null
  br i1 %205, label %218, label %215

206:                                              ; preds = %201
  %207 = load ptr, ptr %190, align 4
  store volatile ptr %207, ptr %45, align 8
  %208 = icmp eq ptr %207, null
  br i1 %208, label %211, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %struct.hlist_node, ptr %207, i32 0, i32 1
  store volatile ptr %45, ptr %210, align 4
  br label %211

211:                                              ; preds = %209, %206
  store volatile ptr %45, ptr %190, align 4
  %212 = getelementptr inbounds %struct.hlist_node, ptr %45, i32 0, i32 1
  store volatile ptr %190, ptr %212, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %213 = load i16, ptr %176, align 4
  %214 = add i16 %213, 1
  store i16 %214, ptr %176, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  br label %252

215:                                              ; preds = %204, %199, %187
  %216 = phi ptr [ @igb_configure_clsflower.__msg.48, %187 ], [ @igb_configure_clsflower.__msg.49, %199 ], [ @igb_configure_clsflower.__msg.50, %204 ]
  %217 = phi i32 [ -17, %187 ], [ -17, %199 ], [ %202, %204 ]
  store ptr %216, ptr %10, align 4
  br label %218

218:                                              ; preds = %215, %204, %199, %187
  %219 = phi i32 [ -17, %187 ], [ -17, %199 ], [ %202, %204 ], [ %217, %215 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %220 = load i16, ptr %176, align 4
  %221 = add i16 %220, 1
  store i16 %221, ptr %176, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  br label %222

222:                                              ; preds = %218, %169, %168, %167, %166, %156, %132, %107, %79, %57, %55
  %223 = phi i32 [ %219, %218 ], [ -22, %169 ], [ -22, %156 ], [ -22, %168 ], [ -22, %132 ], [ -22, %167 ], [ -22, %107 ], [ -22, %166 ], [ -22, %79 ], [ -95, %55 ], [ -95, %57 ]
  call void @kfree(ptr noundef nonnull %45) #23
  br label %252

224:                                              ; preds = %26
  %225 = getelementptr inbounds %struct.igb_adapter, ptr %2, i32 0, i32 90
  tail call void @_raw_spin_lock(ptr noundef %225) #23
  %226 = getelementptr inbounds %struct.igb_adapter, ptr %2, i32 0, i32 88
  %227 = getelementptr inbounds %struct.flow_cls_offload, ptr %1, i32 0, i32 2
  br label %228

228:                                              ; preds = %232, %224
  %229 = phi ptr [ %226, %224 ], [ %230, %232 ]
  %230 = load ptr, ptr %229, align 4
  %231 = icmp eq ptr %230, null
  br i1 %231, label %248, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.igb_nfc_filter, ptr %230, i32 0, i32 2
  %234 = load i32, ptr %233, align 4
  %235 = load i32, ptr %227, align 4
  %236 = icmp eq i32 %234, %235
  br i1 %236, label %237, label %228

237:                                              ; preds = %232
  %238 = tail call i32 @igb_erase_filter(ptr noundef %2, ptr noundef nonnull %230) #23
  %239 = icmp slt i32 %238, 0
  br i1 %239, label %248, label %240

240:                                              ; preds = %237
  %241 = load ptr, ptr %230, align 4
  %242 = getelementptr inbounds %struct.hlist_node, ptr %230, i32 0, i32 1
  %243 = load ptr, ptr %242, align 4
  store volatile ptr %241, ptr %243, align 4
  %244 = icmp eq ptr %241, null
  br i1 %244, label %247, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %struct.hlist_node, ptr %241, i32 0, i32 1
  store volatile ptr %243, ptr %246, align 4
  br label %247

247:                                              ; preds = %245, %240
  store ptr inttoptr (i32 256 to ptr), ptr %230, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %242, align 4
  tail call void @kfree(ptr noundef nonnull %230) #23
  br label %248

248:                                              ; preds = %247, %237, %228
  %249 = phi i32 [ %238, %237 ], [ %238, %247 ], [ -2, %228 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %250 = load i16, ptr %225, align 4
  %251 = add i16 %250, 1
  store i16 %251, ptr %225, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  br label %252

252:                                              ; preds = %248, %222, %211, %43, %42, %40, %26, %24, %22, %20, %15
  %253 = phi i32 [ -95, %24 ], [ %249, %248 ], [ -95, %26 ], [ %223, %222 ], [ 0, %211 ], [ -22, %42 ], [ -22, %40 ], [ -12, %43 ], [ -95, %20 ], [ -95, %15 ], [ -95, %22 ]
  ret i32 %253
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_offload_apply(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 131072
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 64
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %15, label %13, !prof !80

13:                                               ; preds = %7
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1599, i32 noundef 9, ptr noundef null) #23
  %14 = load i32, ptr %3, align 4
  br label %15

15:                                               ; preds = %13, %7
  %16 = phi i32 [ %14, %13 ], [ %4, %7 ]
  %17 = or i32 %16, 131072
  store i32 %17, ptr %3, align 4
  %18 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 6
  %19 = load volatile i32, ptr %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %78, label %74

22:                                               ; preds = %2
  tail call fastcc void @igb_config_tx_modes(ptr noundef %0, i32 noundef %1)
  %23 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %24 = load i32, ptr %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %60

26:                                               ; preds = %22
  %27 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 0
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.igb_ring, ptr %28, i32 0, i32 14
  %30 = load i8, ptr %29, align 1, !range !15
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %78

32:                                               ; preds = %36, %26
  %33 = phi i32 [ %34, %36 ], [ 0, %26 ]
  %34 = add nuw nsw i32 %33, 1
  %35 = icmp eq i32 %34, %24
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %34
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.igb_ring, ptr %38, i32 0, i32 14
  %40 = load i8, ptr %39, align 1, !range !15
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %32, label %42

42:                                               ; preds = %36, %32
  %43 = icmp slt i32 %34, %24
  br i1 %43, label %78, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.igb_ring, ptr %28, i32 0, i32 13
  %46 = load i8, ptr %45, align 4, !range !15
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %78

48:                                               ; preds = %52, %44
  %49 = phi i32 [ %50, %52 ], [ 0, %44 ]
  %50 = add nuw nsw i32 %49, 1
  %51 = icmp eq i32 %50, %24
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %50
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.igb_ring, ptr %54, i32 0, i32 13
  %56 = load i8, ptr %55, align 4, !range !15
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %48, label %58

58:                                               ; preds = %52, %48
  %59 = icmp slt i32 %50, %24
  br i1 %59, label %78, label %60

60:                                               ; preds = %58, %22
  %61 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %62 = load ptr, ptr %61, align 64
  %63 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %64 = load i32, ptr %63, align 4
  %65 = icmp eq i32 %64, 6
  br i1 %65, label %67, label %66, !prof !80

66:                                               ; preds = %60
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1599, i32 noundef 9, ptr noundef null) #23
  br label %67

67:                                               ; preds = %66, %60
  %68 = load i32, ptr %3, align 4
  %69 = and i32 %68, -131073
  store i32 %69, ptr %3, align 4
  %70 = getelementptr inbounds %struct.net_device, ptr %62, i32 0, i32 6
  %71 = load volatile i32, ptr %70, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %67, %15
  %75 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 28
  %76 = load ptr, ptr @system_wq, align 4
  %77 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %76, ptr noundef %75) #23
  br label %78

78:                                               ; preds = %74, %67, %58, %44, %42, %26, %15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_config_tx_modes(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %8, label %7, !prof !80

7:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1692, i32 noundef 9, ptr noundef null) #23
  br label %8

8:                                                ; preds = %7, %2
  %9 = icmp ugt i32 %1, 1
  br i1 %9, label %10, label %11, !prof !9

10:                                               ; preds = %8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1693, i32 noundef 9, ptr noundef null) #23
  br label %11

11:                                               ; preds = %10, %8
  %12 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %1
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.igb_ring, ptr %13, i32 0, i32 14
  %15 = load i8, ptr %14, align 1, !range !15
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.igb_ring, ptr %13, i32 0, i32 13
  %19 = load i8, ptr %18, align 4, !range !15
  %20 = xor i8 %19, 1
  %21 = zext i8 %20 to i32
  %22 = zext i8 %19 to i32
  br label %23

23:                                               ; preds = %17, %11
  %24 = phi i32 [ 0, %11 ], [ %21, %17 ]
  %25 = phi i32 [ 1, %11 ], [ %22, %17 ]
  tail call fastcc void @set_tx_desc_fetch_prio(ptr noundef %3, i32 noundef %1, i32 noundef %24)
  tail call fastcc void @set_queue_mode(ptr noundef %3, i32 noundef %1, i32 noundef %25)
  %26 = load i8, ptr %14, align 1, !range !15
  %27 = icmp ne i8 %26, 0
  %28 = icmp eq i32 %1, 0
  %29 = or i1 %28, %27
  br i1 %29, label %30, label %109

30:                                               ; preds = %23
  %31 = xor i1 %28, true
  %32 = select i1 %31, i1 true, i1 %27
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.igb_ring, ptr %13, i32 0, i32 15
  store i32 1000000, ptr %34, align 16
  %35 = getelementptr inbounds %struct.igb_ring, ptr %13, i32 0, i32 17
  store i32 1514, ptr %35, align 8
  br label %36

36:                                               ; preds = %33, %30
  %37 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %38 = load volatile ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %54, label %40, !prof !9

40:                                               ; preds = %36
  %41 = getelementptr i8, ptr %38, i32 13680
  %42 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %41) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %54

44:                                               ; preds = %40
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %38) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %54

47:                                               ; preds = %44
  %48 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %49 = load ptr, ptr %48, align 64
  store ptr null, ptr %37, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %49, ptr noundef nonnull @.str) #22
  %50 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %51 = load ptr, ptr %50, align 4
  %52 = tail call zeroext i1 @pci_device_is_present(ptr noundef %51) #23
  br i1 %52, label %53, label %54, !prof !9

53:                                               ; preds = %47
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13680) #23
  br label %54

54:                                               ; preds = %53, %47, %44, %40, %36
  %55 = phi i32 [ -1, %36 ], [ -1, %47 ], [ -1, %53 ], [ -1, %44 ], [ %42, %40 ]
  %56 = load volatile ptr, ptr %37, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %61, label %58, !prof !9

58:                                               ; preds = %54
  %59 = or i32 %55, 256
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !158
  tail call void @arm_heavy_mb() #23
  %60 = getelementptr i8, ptr %56, i32 13680
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %60, i32 %59) #23, !srcloc !14
  br label %61

61:                                               ; preds = %58, %54
  %62 = getelementptr inbounds %struct.igb_ring, ptr %13, i32 0, i32 15
  %63 = load i32, ptr %62, align 16
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %64, 61034
  %66 = add nsw i64 %65, 999999
  %67 = tail call i64 asm "umull\09${0:Q}, ${0:R}, ${1:Q}, ${2:Q}\0A\09mov\09${0:Q}, #0", "=&r,r,r,~{cc}"(i64 4835703278458516699, i64 %66) #25, !srcloc !159
  %68 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 4835703278458516699, i64 %66, i64 %67, i32 0) #25, !srcloc !160
  %69 = extractvalue { i64, i32 } %68, 0
  %70 = lshr i64 %69, 18
  %71 = trunc i64 %70 to i32
  %72 = shl i32 %1, 6
  %73 = add i32 %72, 12292
  %74 = load volatile ptr, ptr %37, align 4
  %75 = icmp eq ptr %74, null
  br i1 %75, label %90, label %76, !prof !9

76:                                               ; preds = %61
  %77 = getelementptr i8, ptr %74, i32 %73
  %78 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %77) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %90

80:                                               ; preds = %76
  %81 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %74) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %83, label %90

83:                                               ; preds = %80
  %84 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %85 = load ptr, ptr %84, align 64
  store ptr null, ptr %37, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %85, ptr noundef nonnull @.str) #22
  %86 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %87 = load ptr, ptr %86, align 4
  %88 = tail call zeroext i1 @pci_device_is_present(ptr noundef %87) #23
  br i1 %88, label %89, label %90, !prof !9

89:                                               ; preds = %83
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %73) #23
  br label %90

90:                                               ; preds = %89, %83, %80, %76, %61
  %91 = phi i32 [ -1, %61 ], [ -1, %83 ], [ -1, %89 ], [ -1, %80 ], [ %78, %76 ]
  %92 = load volatile ptr, ptr %37, align 4
  %93 = icmp eq ptr %92, null
  br i1 %93, label %99, label %94, !prof !9

94:                                               ; preds = %90
  %95 = and i32 %91, -65536
  %96 = and i32 %71, 65535
  %97 = or i32 %95, %96
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !161
  tail call void @arm_heavy_mb() #23
  %98 = getelementptr i8, ptr %92, i32 %73
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %98, i32 %97) #23, !srcloc !14
  br label %99

99:                                               ; preds = %94, %90
  %100 = load volatile ptr, ptr %37, align 4
  %101 = icmp eq ptr %100, null
  br i1 %101, label %188, label %102, !prof !9

102:                                              ; preds = %99
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !162
  tail call void @arm_heavy_mb() #23
  %103 = getelementptr inbounds %struct.igb_ring, ptr %13, i32 0, i32 17
  %104 = load i32, ptr %103, align 8
  %105 = mul i32 %104, 30517
  %106 = xor i32 %105, -2147483648
  %107 = add i32 %72, 12300
  %108 = getelementptr i8, ptr %100, i32 %107
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %108, i32 %106) #23, !srcloc !14
  br label %188

109:                                              ; preds = %23
  %110 = shl i32 %1, 6
  %111 = add i32 %110, 12292
  %112 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %113 = load volatile ptr, ptr %112, align 4
  %114 = icmp eq ptr %113, null
  br i1 %114, label %129, label %115, !prof !9

115:                                              ; preds = %109
  %116 = getelementptr i8, ptr %113, i32 %111
  %117 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %116) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %119, label %129

119:                                              ; preds = %115
  %120 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %113) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %129

122:                                              ; preds = %119
  %123 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %124 = load ptr, ptr %123, align 64
  store ptr null, ptr %112, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %124, ptr noundef nonnull @.str) #22
  %125 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %126 = load ptr, ptr %125, align 4
  %127 = tail call zeroext i1 @pci_device_is_present(ptr noundef %126) #23
  br i1 %127, label %128, label %129, !prof !9

128:                                              ; preds = %122
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %111) #23
  br label %129

129:                                              ; preds = %128, %122, %119, %115, %109
  %130 = phi i32 [ -1, %109 ], [ -1, %122 ], [ -1, %128 ], [ -1, %119 ], [ %117, %115 ]
  %131 = load volatile ptr, ptr %112, align 4
  %132 = icmp eq ptr %131, null
  br i1 %132, label %136, label %133, !prof !9

133:                                              ; preds = %129
  %134 = and i32 %130, -65536
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !163
  tail call void @arm_heavy_mb() #23
  %135 = getelementptr i8, ptr %131, i32 %111
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %135, i32 %134) #23, !srcloc !14
  br label %136

136:                                              ; preds = %133, %129
  %137 = load volatile ptr, ptr %112, align 4
  %138 = icmp eq ptr %137, null
  br i1 %138, label %142, label %139, !prof !9

139:                                              ; preds = %136
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !164
  tail call void @arm_heavy_mb() #23
  %140 = add i32 %110, 12300
  %141 = getelementptr i8, ptr %137, i32 %140
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %141, i32 0) #23, !srcloc !14
  br label %142

142:                                              ; preds = %139, %136
  %143 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %144 = load i32, ptr %143, align 8
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %164

146:                                              ; preds = %142
  %147 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 0
  %148 = load ptr, ptr %147, align 4
  %149 = getelementptr inbounds %struct.igb_ring, ptr %148, i32 0, i32 14
  %150 = load i8, ptr %149, align 1, !range !15
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %188

152:                                              ; preds = %156, %146
  %153 = phi i32 [ %154, %156 ], [ 0, %146 ]
  %154 = add nuw nsw i32 %153, 1
  %155 = icmp eq i32 %154, %144
  br i1 %155, label %162, label %156

156:                                              ; preds = %152
  %157 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %154
  %158 = load ptr, ptr %157, align 4
  %159 = getelementptr inbounds %struct.igb_ring, ptr %158, i32 0, i32 14
  %160 = load i8, ptr %159, align 1, !range !15
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %152, label %162

162:                                              ; preds = %156, %152
  %163 = icmp slt i32 %154, %144
  br i1 %163, label %188, label %164

164:                                              ; preds = %162, %142
  %165 = load volatile ptr, ptr %112, align 4
  %166 = icmp eq ptr %165, null
  br i1 %166, label %181, label %167, !prof !9

167:                                              ; preds = %164
  %168 = getelementptr i8, ptr %165, i32 13680
  %169 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %168) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %170 = icmp eq i32 %169, -1
  br i1 %170, label %171, label %181

171:                                              ; preds = %167
  %172 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %165) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %173 = icmp eq i32 %172, -1
  br i1 %173, label %174, label %181

174:                                              ; preds = %171
  %175 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %176 = load ptr, ptr %175, align 64
  store ptr null, ptr %112, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %176, ptr noundef nonnull @.str) #22
  %177 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %178 = load ptr, ptr %177, align 4
  %179 = tail call zeroext i1 @pci_device_is_present(ptr noundef %178) #23
  br i1 %179, label %180, label %181, !prof !9

180:                                              ; preds = %174
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13680) #23
  br label %181

181:                                              ; preds = %180, %174, %171, %167, %164
  %182 = phi i32 [ -1, %164 ], [ -1, %174 ], [ -1, %180 ], [ -1, %171 ], [ %169, %167 ]
  %183 = load volatile ptr, ptr %112, align 4
  %184 = icmp eq ptr %183, null
  br i1 %184, label %188, label %185, !prof !9

185:                                              ; preds = %181
  %186 = and i32 %182, -257
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !165
  tail call void @arm_heavy_mb() #23
  %187 = getelementptr i8, ptr %183, i32 13680
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %187, i32 %186) #23, !srcloc !14
  br label %188

188:                                              ; preds = %185, %181, %162, %146, %102, %99
  %189 = getelementptr inbounds %struct.igb_ring, ptr %13, i32 0, i32 13
  %190 = load i8, ptr %189, align 4, !range !15
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %217, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %194 = load volatile ptr, ptr %193, align 4
  %195 = icmp eq ptr %194, null
  br i1 %195, label %210, label %196, !prof !9

196:                                              ; preds = %192
  %197 = getelementptr i8, ptr %194, i32 13680
  %198 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %197) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %199 = icmp eq i32 %198, -1
  br i1 %199, label %200, label %210

200:                                              ; preds = %196
  %201 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %194) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %202 = icmp eq i32 %201, -1
  br i1 %202, label %203, label %210

203:                                              ; preds = %200
  %204 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %205 = load ptr, ptr %204, align 64
  store ptr null, ptr %193, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %205, ptr noundef nonnull @.str) #22
  %206 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %207 = load ptr, ptr %206, align 4
  %208 = tail call zeroext i1 @pci_device_is_present(ptr noundef %207) #23
  br i1 %208, label %209, label %210, !prof !9

209:                                              ; preds = %203
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13680) #23
  br label %210

210:                                              ; preds = %209, %203, %200, %196, %192
  %211 = phi i32 [ -1, %192 ], [ -1, %203 ], [ -1, %209 ], [ -1, %200 ], [ %198, %196 ]
  %212 = load volatile ptr, ptr %193, align 4
  %213 = icmp eq ptr %212, null
  br i1 %213, label %264, label %214, !prof !9

214:                                              ; preds = %210
  %215 = or i32 %211, -65024
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !166
  tail call void @arm_heavy_mb() #23
  %216 = getelementptr i8, ptr %212, i32 13680
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %216, i32 %215) #23, !srcloc !14
  br label %264

217:                                              ; preds = %188
  %218 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %219 = load i32, ptr %218, align 8
  %220 = icmp sgt i32 %219, 0
  br i1 %220, label %221, label %239

221:                                              ; preds = %217
  %222 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 0
  %223 = load ptr, ptr %222, align 4
  %224 = getelementptr inbounds %struct.igb_ring, ptr %223, i32 0, i32 13
  %225 = load i8, ptr %224, align 4, !range !15
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %227, label %264

227:                                              ; preds = %231, %221
  %228 = phi i32 [ %229, %231 ], [ 0, %221 ]
  %229 = add nuw nsw i32 %228, 1
  %230 = icmp eq i32 %229, %219
  br i1 %230, label %237, label %231

231:                                              ; preds = %227
  %232 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %229
  %233 = load ptr, ptr %232, align 4
  %234 = getelementptr inbounds %struct.igb_ring, ptr %233, i32 0, i32 13
  %235 = load i8, ptr %234, align 4, !range !15
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %227, label %237

237:                                              ; preds = %231, %227
  %238 = icmp slt i32 %229, %219
  br i1 %238, label %264, label %239

239:                                              ; preds = %237, %217
  %240 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %241 = load volatile ptr, ptr %240, align 4
  %242 = icmp eq ptr %241, null
  br i1 %242, label %257, label %243, !prof !9

243:                                              ; preds = %239
  %244 = getelementptr i8, ptr %241, i32 13680
  %245 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %244) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %246 = icmp eq i32 %245, -1
  br i1 %246, label %247, label %257

247:                                              ; preds = %243
  %248 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %241) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %249 = icmp eq i32 %248, -1
  br i1 %249, label %250, label %257

250:                                              ; preds = %247
  %251 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %252 = load ptr, ptr %251, align 64
  store ptr null, ptr %240, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %252, ptr noundef nonnull @.str) #22
  %253 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %254 = load ptr, ptr %253, align 4
  %255 = tail call zeroext i1 @pci_device_is_present(ptr noundef %254) #23
  br i1 %255, label %256, label %257, !prof !9

256:                                              ; preds = %250
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13680) #23
  br label %257

257:                                              ; preds = %256, %250, %247, %243, %239
  %258 = phi i32 [ -1, %239 ], [ -1, %250 ], [ -1, %256 ], [ -1, %247 ], [ %245, %243 ]
  %259 = load volatile ptr, ptr %240, align 4
  %260 = icmp eq ptr %259, null
  br i1 %260, label %264, label %261, !prof !9

261:                                              ; preds = %257
  %262 = and i32 %258, 65023
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !167
  tail call void @arm_heavy_mb() #23
  %263 = getelementptr i8, ptr %259, i32 13680
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %263, i32 %262) #23, !srcloc !14
  br label %264

264:                                              ; preds = %261, %257, %237, %221, %214, %210
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @set_tx_desc_fetch_prio(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 4, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %8, label %7, !prof !80

7:                                                ; preds = %3
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1620, i32 noundef 9, ptr noundef null) #23
  br label %8

8:                                                ; preds = %7, %3
  %9 = icmp ugt i32 %1, 4
  br i1 %9, label %10, label %11, !prof !9

10:                                               ; preds = %8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1621, i32 noundef 9, ptr noundef null) #23
  br label %11

11:                                               ; preds = %10, %8
  %12 = shl i32 %1, 6
  %13 = add i32 %12, 57384
  %14 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 1
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %31, label %17, !prof !9

17:                                               ; preds = %11
  %18 = getelementptr i8, ptr %15, i32 %13
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %18) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %15) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = getelementptr i8, ptr %0, i32 -592
  %26 = load ptr, ptr %25, align 64
  store ptr null, ptr %14, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %26, ptr noundef nonnull @.str) #22
  %27 = getelementptr i8, ptr %0, i32 -204
  %28 = load ptr, ptr %27, align 4
  %29 = tail call zeroext i1 @pci_device_is_present(ptr noundef %28) #23
  br i1 %29, label %30, label %31, !prof !9

30:                                               ; preds = %24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %13) #23
  br label %31

31:                                               ; preds = %30, %24, %21, %17, %11
  %32 = phi i32 [ -1, %11 ], [ -1, %24 ], [ -1, %30 ], [ -1, %21 ], [ %19, %17 ]
  %33 = load volatile ptr, ptr %14, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %41, label %35, !prof !9

35:                                               ; preds = %31
  %36 = icmp eq i32 %2, 0
  %37 = and i32 %32, -134217729
  %38 = select i1 %36, i32 134217728, i32 0
  %39 = or i32 %37, %38
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !168
  tail call void @arm_heavy_mb() #23
  %40 = getelementptr i8, ptr %33, i32 %13
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %40, i32 %39) #23, !srcloc !14
  br label %41

41:                                               ; preds = %35, %31
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @set_queue_mode(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 4, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %8, label %7, !prof !80

7:                                                ; preds = %3
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1637, i32 noundef 9, ptr noundef null) #23
  br label %8

8:                                                ; preds = %7, %3
  %9 = icmp ugt i32 %1, 1
  br i1 %9, label %10, label %11, !prof !9

10:                                               ; preds = %8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1638, i32 noundef 9, ptr noundef null) #23
  br label %11

11:                                               ; preds = %10, %8
  %12 = shl i32 %1, 6
  %13 = add i32 %12, 12292
  %14 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 1
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %31, label %17, !prof !9

17:                                               ; preds = %11
  %18 = getelementptr i8, ptr %15, i32 %13
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %18) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %15) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = getelementptr i8, ptr %0, i32 -592
  %26 = load ptr, ptr %25, align 64
  store ptr null, ptr %14, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %26, ptr noundef nonnull @.str) #22
  %27 = getelementptr i8, ptr %0, i32 -204
  %28 = load ptr, ptr %27, align 4
  %29 = tail call zeroext i1 @pci_device_is_present(ptr noundef %28) #23
  br i1 %29, label %30, label %31, !prof !9

30:                                               ; preds = %24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %13) #23
  br label %31

31:                                               ; preds = %30, %24, %21, %17, %11
  %32 = phi i32 [ -1, %11 ], [ -1, %24 ], [ -1, %30 ], [ -1, %21 ], [ %19, %17 ]
  %33 = load volatile ptr, ptr %14, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %41, label %35, !prof !9

35:                                               ; preds = %31
  %36 = icmp eq i32 %2, 1
  %37 = and i32 %32, 2147483647
  %38 = select i1 %36, i32 -2147483648, i32 0
  %39 = or i32 %37, %38
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !169
  tail call void @arm_heavy_mb() #23
  %40 = getelementptr i8, ptr %33, i32 %13
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %40, i32 %39) #23, !srcloc !14
  br label %41

41:                                               ; preds = %35, %31
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_trace_netlink_extack(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_add_filter(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_eth_addrs(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_basic(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @flow_rule_match_vlan(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_erase_filter(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_vlan_mode(ptr noundef %0, i64 noundef %1) unnamed_addr #4 {
  %3 = and i64 %1, 256
  %4 = icmp eq i64 %3, 0
  %5 = getelementptr i8, ptr %0, i32 2516
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %4, label %49, label %8

8:                                                ; preds = %2
  br i1 %7, label %19, label %9, !prof !9

9:                                                ; preds = %8
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr i8, ptr %0, i32 1920
  %14 = load ptr, ptr %13, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str) #22
  %15 = getelementptr i8, ptr %0, i32 2308
  %16 = load ptr, ptr %15, align 4
  %17 = tail call zeroext i1 @pci_device_is_present(ptr noundef %16) #23
  br i1 %17, label %18, label %19, !prof !9

18:                                               ; preds = %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 0) #23
  br label %19

19:                                               ; preds = %18, %12, %9, %8
  %20 = phi i32 [ -1, %8 ], [ -1, %12 ], [ -1, %18 ], [ %10, %9 ]
  %21 = load volatile ptr, ptr %5, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23, !prof !9

23:                                               ; preds = %19
  %24 = or i32 %20, 1073741824
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !170
  tail call void @arm_heavy_mb() #23
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr nonnull elementtype(i32) %21, i32 %24) #23, !srcloc !14
  br label %25

25:                                               ; preds = %23, %19
  %26 = load volatile ptr, ptr %5, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %42, label %28, !prof !9

28:                                               ; preds = %25
  %29 = getelementptr i8, ptr %26, i32 256
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %29) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %28
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %26) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %42

35:                                               ; preds = %32
  %36 = getelementptr i8, ptr %0, i32 1920
  %37 = load ptr, ptr %36, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %37, ptr noundef nonnull @.str) #22
  %38 = getelementptr i8, ptr %0, i32 2308
  %39 = load ptr, ptr %38, align 4
  %40 = tail call zeroext i1 @pci_device_is_present(ptr noundef %39) #23
  br i1 %40, label %41, label %42, !prof !9

41:                                               ; preds = %35
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 256) #23
  br label %42

42:                                               ; preds = %41, %35, %32, %28, %25
  %43 = phi i32 [ -1, %25 ], [ -1, %35 ], [ -1, %41 ], [ -1, %32 ], [ %30, %28 ]
  %44 = load volatile ptr, ptr %5, align 4
  %45 = icmp eq ptr %44, null
  br i1 %45, label %66, label %46, !prof !9

46:                                               ; preds = %42
  %47 = and i32 %43, -524289
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !171
  tail call void @arm_heavy_mb() #23
  %48 = getelementptr i8, ptr %44, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %48, i32 %47) #23, !srcloc !14
  br label %66

49:                                               ; preds = %2
  br i1 %7, label %60, label %50, !prof !9

50:                                               ; preds = %49
  %51 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %53, label %60

53:                                               ; preds = %50
  %54 = getelementptr i8, ptr %0, i32 1920
  %55 = load ptr, ptr %54, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %55, ptr noundef nonnull @.str) #22
  %56 = getelementptr i8, ptr %0, i32 2308
  %57 = load ptr, ptr %56, align 4
  %58 = tail call zeroext i1 @pci_device_is_present(ptr noundef %57) #23
  br i1 %58, label %59, label %60, !prof !9

59:                                               ; preds = %53
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 0) #23
  br label %60

60:                                               ; preds = %59, %53, %50, %49
  %61 = phi i32 [ -1, %49 ], [ -1, %53 ], [ -1, %59 ], [ %51, %50 ]
  %62 = load volatile ptr, ptr %5, align 4
  %63 = icmp eq ptr %62, null
  br i1 %63, label %66, label %64, !prof !9

64:                                               ; preds = %60
  %65 = and i32 %61, -1073741825
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !172
  tail call void @arm_heavy_mb() #23
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr nonnull elementtype(i32) %62, i32 %65) #23, !srcloc !14
  br label %66

66:                                               ; preds = %64, %60, %46, %42
  %67 = getelementptr i8, ptr %0, i32 2592
  %68 = load i32, ptr %67, align 4
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %108, label %70

70:                                               ; preds = %66
  %71 = getelementptr i8, ptr %0, i32 4720
  %72 = load i32, ptr %71, align 16
  %73 = icmp eq i32 %68, 4
  %74 = shl i32 %72, 6
  %75 = add i32 %74, 49208
  %76 = shl i32 %72, 2
  %77 = add i32 %76, 23248
  %78 = select i1 %73, i32 %75, i32 %77
  %79 = getelementptr i8, ptr %0, i32 2516
  %80 = load volatile ptr, ptr %79, align 4
  %81 = icmp eq ptr %80, null
  br i1 %81, label %98, label %82, !prof !9

82:                                               ; preds = %70
  %83 = getelementptr i8, ptr %80, i32 %78
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %83) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %98

86:                                               ; preds = %82
  %87 = icmp eq i32 %78, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %80) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %91, label %98

91:                                               ; preds = %88, %86
  %92 = getelementptr i8, ptr %0, i32 1920
  %93 = load ptr, ptr %92, align 64
  store ptr null, ptr %79, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %93, ptr noundef nonnull @.str) #22
  %94 = getelementptr i8, ptr %0, i32 2308
  %95 = load ptr, ptr %94, align 4
  %96 = tail call zeroext i1 @pci_device_is_present(ptr noundef %95) #23
  br i1 %96, label %97, label %98, !prof !9

97:                                               ; preds = %91
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %78) #23
  br label %98

98:                                               ; preds = %97, %91, %88, %82, %70
  %99 = phi i32 [ -1, %70 ], [ -1, %91 ], [ -1, %97 ], [ -1, %88 ], [ %84, %82 ]
  %100 = load volatile ptr, ptr %79, align 4
  %101 = icmp eq ptr %100, null
  br i1 %101, label %108, label %102, !prof !9

102:                                              ; preds = %98
  %103 = and i32 %99, -1073741825
  %104 = trunc i64 %3 to i32
  %105 = shl nuw nsw i32 %104, 22
  %106 = or i32 %103, %105
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !146
  tail call void @arm_heavy_mb() #23
  %107 = getelementptr i8, ptr %100, i32 %78
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %107, i32 %106) #23, !srcloc !14
  br label %108

108:                                              ; preds = %102, %98, %66
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ndo_dflt_fdb_add(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_xdp_ring_update_tail(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !173
  tail call void @arm_heavy_mb() #23
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !174
  tail call void @arm_heavy_mb() #23
  %2 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 20
  %3 = load i16, ptr %2, align 2
  %4 = zext i16 %3 to i32
  %5 = getelementptr inbounds %struct.igb_ring, ptr %0, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %6, i32 %4) #23, !srcloc !14
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_trans_start(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @print_hex_dump(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_check_downshift(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @igb_thermal_sensor_event(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 4, i32 3
  %4 = load i32, ptr %3, align 4
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %52

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 1
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %24, label %10, !prof !9

10:                                               ; preds = %6
  %11 = getelementptr i8, ptr %8, i32 33040
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %11) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %8) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %24

17:                                               ; preds = %14
  %18 = getelementptr i8, ptr %0, i32 -592
  %19 = load ptr, ptr %18, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %19, ptr noundef nonnull @.str) #22
  %20 = getelementptr i8, ptr %0, i32 -204
  %21 = load ptr, ptr %20, align 4
  %22 = tail call zeroext i1 @pci_device_is_present(ptr noundef %21) #23
  br i1 %22, label %23, label %24, !prof !9

23:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 33040) #23
  br label %24

24:                                               ; preds = %23, %17, %14, %10, %6
  %25 = phi i32 [ -1, %6 ], [ -1, %17 ], [ -1, %23 ], [ -1, %14 ], [ %12, %10 ]
  %26 = load volatile ptr, ptr %7, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %52, label %28, !prof !9

28:                                               ; preds = %24
  %29 = getelementptr i8, ptr %26, i32 24
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %29) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %28
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %26) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %52

35:                                               ; preds = %32
  %36 = getelementptr i8, ptr %0, i32 -592
  %37 = load ptr, ptr %36, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %37, ptr noundef nonnull @.str) #22
  %38 = getelementptr i8, ptr %0, i32 -204
  %39 = load ptr, ptr %38, align 4
  %40 = tail call zeroext i1 @pci_device_is_present(ptr noundef %39) #23
  br i1 %40, label %41, label %52, !prof !9

41:                                               ; preds = %35
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 24) #23
  br label %52

42:                                               ; preds = %28
  %43 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 6, i32 12
  %44 = load i32, ptr %43, align 4
  %45 = icmp eq i32 %44, 1
  %46 = and i32 %30, 8388608
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %45, i1 %47, i1 false
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = and i32 %25, %1
  %51 = icmp ne i32 %50, 0
  br label %52

52:                                               ; preds = %49, %42, %41, %35, %32, %24, %2
  %53 = phi i1 [ %51, %49 ], [ false, %42 ], [ false, %2 ], [ false, %24 ], [ false, %35 ], [ false, %41 ], [ false, %32 ]
  ret i1 %53
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @round_jiffies(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_check_swap_media(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %19, label %5, !prof !9

5:                                                ; preds = %1
  %6 = getelementptr i8, ptr %3, i32 24
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %3) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 64
  store ptr null, ptr %2, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str) #22
  %15 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %16 = load ptr, ptr %15, align 4
  %17 = tail call zeroext i1 @pci_device_is_present(ptr noundef %16) #23
  br i1 %17, label %18, label %19, !prof !9

18:                                               ; preds = %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 24) #23
  br label %19

19:                                               ; preds = %18, %12, %9, %5, %1
  %20 = phi i32 [ -1, %1 ], [ -1, %12 ], [ -1, %18 ], [ -1, %9 ], [ %7, %5 ]
  %21 = load volatile ptr, ptr %2, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %96, label %23, !prof !9

23:                                               ; preds = %19
  %24 = getelementptr i8, ptr %21, i32 52
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %24) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %37

27:                                               ; preds = %23
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %21) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %96

30:                                               ; preds = %27
  %31 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %32 = load ptr, ptr %31, align 64
  store ptr null, ptr %2, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %32, ptr noundef nonnull @.str) #22
  %33 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %34 = load ptr, ptr %33, align 4
  %35 = tail call zeroext i1 @pci_device_is_present(ptr noundef %34) #23
  br i1 %35, label %36, label %96, !prof !9

36:                                               ; preds = %30
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 52) #23
  br label %96

37:                                               ; preds = %23
  %38 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 6, i32 12
  %39 = load i32, ptr %38, align 4
  %40 = icmp eq i32 %39, 1
  %41 = and i32 %25, 1
  %42 = icmp eq i32 %41, 0
  %43 = select i1 %40, i1 %42, i1 false
  br i1 %43, label %72, label %44

44:                                               ; preds = %37
  %45 = icmp ne i32 %39, 1
  %46 = and i32 %25, 512
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %45, i1 %47, i1 false
  br i1 %48, label %49, label %96

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 84
  %51 = load i32, ptr %50, align 4
  %52 = icmp slt i32 %51, 4
  br i1 %52, label %53, label %60

53:                                               ; preds = %49
  %54 = add nsw i32 %51, 1
  store i32 %54, ptr %50, align 4
  %55 = load volatile ptr, ptr %2, align 4
  %56 = icmp eq ptr %55, null
  br i1 %56, label %96, label %57, !prof !9

57:                                               ; preds = %53
  %58 = or i32 %25, 2
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !175
  tail call void @arm_heavy_mb() #23
  %59 = getelementptr i8, ptr %55, i32 52
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %59, i32 %58) #23, !srcloc !14
  br label %96

60:                                               ; preds = %49
  store i32 0, ptr %50, align 4
  %61 = and i32 %25, 3072
  %62 = icmp eq i32 %61, 1024
  br i1 %62, label %63, label %96

63:                                               ; preds = %60
  %64 = load volatile ptr, ptr %2, align 4
  %65 = icmp eq ptr %64, null
  br i1 %65, label %70, label %66, !prof !9

66:                                               ; preds = %63
  %67 = and i32 %25, -3
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !176
  tail call void @arm_heavy_mb() #23
  %68 = getelementptr i8, ptr %64, i32 52
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %68, i32 %67) #23, !srcloc !14
  %69 = load i32, ptr %38, align 4
  br label %70

70:                                               ; preds = %66, %63
  %71 = phi i32 [ %69, %66 ], [ %39, %63 ]
  switch i32 %71, label %87 [
    i32 1, label %72
    i32 3, label %80
    i32 2, label %80
  ]

72:                                               ; preds = %70, %37
  %73 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %74 = load ptr, ptr %73, align 64
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %74, ptr noundef nonnull @.str.126) #22
  %75 = or i32 %20, 12582912
  %76 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %77 = load i32, ptr %76, align 4
  %78 = or i32 %77, 1024
  store i32 %78, ptr %76, align 4
  %79 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 84
  store i32 0, ptr %79, align 4
  br label %90

80:                                               ; preds = %70, %70
  %81 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %82 = load ptr, ptr %81, align 64
  tail call void (ptr, ptr, ...) @netdev_info(ptr noundef %82, ptr noundef nonnull @.str.127) #22
  %83 = and i32 %20, -12582913
  %84 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  %85 = load i32, ptr %84, align 4
  %86 = or i32 %85, 1024
  store i32 %86, ptr %84, align 4
  br label %90

87:                                               ; preds = %70
  %88 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %89 = load ptr, ptr %88, align 64
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %89, ptr noundef nonnull @.str.128) #22
  br label %90

90:                                               ; preds = %87, %80, %72
  %91 = phi i32 [ %20, %87 ], [ %83, %80 ], [ %75, %72 ]
  %92 = load volatile ptr, ptr %2, align 4
  %93 = icmp eq ptr %92, null
  br i1 %93, label %96, label %94, !prof !9

94:                                               ; preds = %90
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !177
  tail call void @arm_heavy_mb() #23
  %95 = getelementptr i8, ptr %92, i32 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %95, i32 %91) #23, !srcloc !14
  br label %96

96:                                               ; preds = %94, %90, %60, %57, %53, %44, %36, %30, %27, %19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pm_schedule_suspend(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_ptp_rx_hang(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_ptp_tx_hang(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #3

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i2c_bit_add_bus(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_set_i2c_data(ptr noundef %0, i32 noundef %1) #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %4 = load volatile ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %20, label %6, !prof !9

6:                                                ; preds = %2
  %7 = getelementptr i8, ptr %4, i32 4140
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %7) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %4) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 64
  store ptr null, ptr %3, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %15, ptr noundef nonnull @.str) #22
  %16 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %17 = load ptr, ptr %16, align 4
  %18 = tail call zeroext i1 @pci_device_is_present(ptr noundef %17) #23
  br i1 %18, label %19, label %20, !prof !9

19:                                               ; preds = %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 4140) #23
  br label %20

20:                                               ; preds = %19, %13, %10, %6, %2
  %21 = phi i32 [ -1, %2 ], [ -1, %13 ], [ -1, %19 ], [ -1, %10 ], [ %8, %6 ]
  %22 = load volatile ptr, ptr %3, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %30, label %24, !prof !9

24:                                               ; preds = %20
  %25 = icmp eq i32 %1, 0
  %26 = and i32 %21, -3073
  %27 = select i1 %25, i32 0, i32 3072
  %28 = or i32 %26, %27
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !178
  tail call void @arm_heavy_mb() #23
  %29 = getelementptr i8, ptr %22, i32 4140
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %29, i32 %28) #23, !srcloc !14
  br label %30

30:                                               ; preds = %24, %20
  %31 = load volatile ptr, ptr %3, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %47, label %33, !prof !9

33:                                               ; preds = %30
  %34 = getelementptr i8, ptr %31, i32 8
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %34) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %47

37:                                               ; preds = %33
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %31) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 64
  store ptr null, ptr %3, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %42, ptr noundef nonnull @.str) #22
  %43 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %44 = load ptr, ptr %43, align 4
  %45 = tail call zeroext i1 @pci_device_is_present(ptr noundef %44) #23
  br i1 %45, label %46, label %47, !prof !9

46:                                               ; preds = %40
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %47

47:                                               ; preds = %46, %40, %37, %33, %30
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_set_i2c_clk(ptr noundef %0, i32 noundef %1) #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %4 = load volatile ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %20, label %6, !prof !9

6:                                                ; preds = %2
  %7 = getelementptr i8, ptr %4, i32 4140
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %7) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %4) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 64
  store ptr null, ptr %3, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %15, ptr noundef nonnull @.str) #22
  %16 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %17 = load ptr, ptr %16, align 4
  %18 = tail call zeroext i1 @pci_device_is_present(ptr noundef %17) #23
  br i1 %18, label %19, label %20, !prof !9

19:                                               ; preds = %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 4140) #23
  br label %20

20:                                               ; preds = %19, %13, %10, %6, %2
  %21 = phi i32 [ -1, %2 ], [ -1, %13 ], [ -1, %19 ], [ -1, %10 ], [ %8, %6 ]
  %22 = load volatile ptr, ptr %3, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %30, label %24, !prof !9

24:                                               ; preds = %20
  %25 = icmp eq i32 %1, 0
  %26 = and i32 %21, -8705
  %27 = select i1 %25, i32 0, i32 8704
  %28 = or i32 %26, %27
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !179
  tail call void @arm_heavy_mb() #23
  %29 = getelementptr i8, ptr %22, i32 4140
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %29, i32 %28) #23, !srcloc !14
  br label %30

30:                                               ; preds = %24, %20
  %31 = load volatile ptr, ptr %3, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %47, label %33, !prof !9

33:                                               ; preds = %30
  %34 = getelementptr i8, ptr %31, i32 8
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %34) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %47

37:                                               ; preds = %33
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %31) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 64
  store ptr null, ptr %3, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %42, ptr noundef nonnull @.str) #22
  %43 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %44 = load ptr, ptr %43, align 4
  %45 = tail call zeroext i1 @pci_device_is_present(ptr noundef %44) #23
  br i1 %45, label %46, label %47, !prof !9

46:                                               ; preds = %40
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %47

47:                                               ; preds = %46, %40, %37, %33, %30
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_get_i2c_data(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %19, label %5, !prof !9

5:                                                ; preds = %1
  %6 = getelementptr i8, ptr %3, i32 4140
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %3) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 64
  store ptr null, ptr %2, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str) #22
  %15 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %16 = load ptr, ptr %15, align 4
  %17 = tail call zeroext i1 @pci_device_is_present(ptr noundef %16) #23
  br i1 %17, label %18, label %19, !prof !9

18:                                               ; preds = %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 4140) #23
  br label %19

19:                                               ; preds = %18, %12, %9, %5, %1
  %20 = phi i32 [ -1, %1 ], [ -1, %12 ], [ -1, %18 ], [ -1, %9 ], [ %7, %5 ]
  %21 = lshr i32 %20, 12
  %22 = and i32 %21, 1
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_get_i2c_clk(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %19, label %5, !prof !9

5:                                                ; preds = %1
  %6 = getelementptr i8, ptr %3, i32 4140
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %3) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 64
  store ptr null, ptr %2, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str) #22
  %15 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %16 = load ptr, ptr %15, align 4
  %17 = tail call zeroext i1 @pci_device_is_present(ptr noundef %16) #23
  br i1 %17, label %18, label %19, !prof !9

18:                                               ; preds = %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 4140) #23
  br label %19

19:                                               ; preds = %18, %12, %9, %5, %1
  %20 = phi i32 [ -1, %1 ], [ -1, %12 ], [ -1, %18 ], [ -1, %9 ], [ %7, %5 ]
  %21 = lshr i32 %20, 14
  %22 = and i32 %21, 1
  ret i32 %22
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__netif_napi_del(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_net() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_release_selected_regions(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_sysfs_exit(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_ptp_stop(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdev(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @i2c_del_adapter(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__igb_shutdown(ptr noundef %0, ptr noundef writeonly %1, i1 noundef zeroext %2) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %5, i32 1408
  %7 = getelementptr i8, ptr %5, i32 2512
  br i1 %2, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr i8, ptr %5, i32 2232
  %10 = load i32, ptr %9, align 8
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi i32 [ %10, %8 ], [ 1, %3 ]
  tail call void @rtnl_lock() #23
  tail call void @netif_device_detach(ptr noundef %5) #23
  %13 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 6
  %14 = load volatile i32, ptr %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call fastcc void @__igb_close(ptr noundef %5, i1 noundef zeroext true)
  br label %18

18:                                               ; preds = %17, %11
  tail call void @igb_ptp_suspend(ptr noundef %6) #23
  tail call fastcc void @igb_clear_interrupt_scheme(ptr noundef %6)
  tail call void @rtnl_unlock() #23
  %19 = getelementptr i8, ptr %5, i32 2516
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %36, label %22, !prof !9

22:                                               ; preds = %18
  %23 = getelementptr i8, ptr %20, i32 8
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %23) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %36

26:                                               ; preds = %22
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %20) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = getelementptr i8, ptr %5, i32 1920
  %31 = load ptr, ptr %30, align 64
  store ptr null, ptr %19, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %31, ptr noundef nonnull @.str) #22
  %32 = getelementptr i8, ptr %5, i32 2308
  %33 = load ptr, ptr %32, align 4
  %34 = tail call zeroext i1 @pci_device_is_present(ptr noundef %33) #23
  br i1 %34, label %35, label %36, !prof !9

35:                                               ; preds = %29
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %36

36:                                               ; preds = %35, %29, %26, %22, %18
  %37 = phi i32 [ -1, %18 ], [ -1, %29 ], [ -1, %35 ], [ -1, %26 ], [ %24, %22 ]
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = and i32 %12, -2
  %41 = select i1 %39, i32 %12, i32 %40
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %100, label %43

43:                                               ; preds = %36
  tail call void @igb_setup_rctl(ptr noundef %6)
  tail call void @igb_set_rx_mode(ptr noundef %5)
  %44 = and i32 %41, 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %70, label %46

46:                                               ; preds = %43
  %47 = load volatile ptr, ptr %19, align 4
  %48 = icmp eq ptr %47, null
  br i1 %48, label %63, label %49, !prof !9

49:                                               ; preds = %46
  %50 = getelementptr i8, ptr %47, i32 256
  %51 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %50) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %53, label %63

53:                                               ; preds = %49
  %54 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %47) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %63

56:                                               ; preds = %53
  %57 = getelementptr i8, ptr %5, i32 1920
  %58 = load ptr, ptr %57, align 64
  store ptr null, ptr %19, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %58, ptr noundef nonnull @.str) #22
  %59 = getelementptr i8, ptr %5, i32 2308
  %60 = load ptr, ptr %59, align 4
  %61 = tail call zeroext i1 @pci_device_is_present(ptr noundef %60) #23
  br i1 %61, label %62, label %63, !prof !9

62:                                               ; preds = %56
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 256) #23
  br label %63

63:                                               ; preds = %62, %56, %53, %49, %46
  %64 = phi i32 [ -1, %46 ], [ -1, %56 ], [ -1, %62 ], [ -1, %53 ], [ %51, %49 ]
  %65 = load volatile ptr, ptr %19, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %70, label %67, !prof !9

67:                                               ; preds = %63
  %68 = or i32 %64, 16
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !180
  tail call void @arm_heavy_mb() #23
  %69 = getelementptr i8, ptr %65, i32 256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %69, i32 %68) #23, !srcloc !14
  br label %70

70:                                               ; preds = %67, %63, %43
  %71 = load volatile ptr, ptr %19, align 4
  %72 = icmp eq ptr %71, null
  br i1 %72, label %83, label %73, !prof !9

73:                                               ; preds = %70
  %74 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %71) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %76, label %83

76:                                               ; preds = %73
  %77 = getelementptr i8, ptr %5, i32 1920
  %78 = load ptr, ptr %77, align 64
  store ptr null, ptr %19, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %78, ptr noundef nonnull @.str) #22
  %79 = getelementptr i8, ptr %5, i32 2308
  %80 = load ptr, ptr %79, align 4
  %81 = tail call zeroext i1 @pci_device_is_present(ptr noundef %80) #23
  br i1 %81, label %82, label %83, !prof !9

82:                                               ; preds = %76
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 0) #23
  br label %83

83:                                               ; preds = %82, %76, %73, %70
  %84 = phi i32 [ -1, %70 ], [ -1, %76 ], [ -1, %82 ], [ %74, %73 ]
  %85 = load volatile ptr, ptr %19, align 4
  %86 = icmp eq ptr %85, null
  br i1 %86, label %89, label %87, !prof !9

87:                                               ; preds = %83
  %88 = or i32 %84, 1048576
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !181
  tail call void @arm_heavy_mb() #23
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr nonnull elementtype(i32) %85, i32 %88) #23, !srcloc !14
  br label %89

89:                                               ; preds = %87, %83
  %90 = tail call i32 @igb_disable_pcie_master(ptr noundef %7) #23
  %91 = load volatile ptr, ptr %19, align 4
  %92 = icmp eq ptr %91, null
  br i1 %92, label %95, label %93, !prof !9

93:                                               ; preds = %89
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !182
  tail call void @arm_heavy_mb() #23
  %94 = getelementptr i8, ptr %91, i32 22528
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %94, i32 2) #23, !srcloc !14
  br label %95

95:                                               ; preds = %93, %89
  %96 = load volatile ptr, ptr %19, align 4
  %97 = icmp eq ptr %96, null
  br i1 %97, label %120, label %98, !prof !9

98:                                               ; preds = %95
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !183
  tail call void @arm_heavy_mb() #23
  %99 = getelementptr i8, ptr %96, i32 22536
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %99, i32 %41) #23, !srcloc !14
  br label %120

100:                                              ; preds = %36
  %101 = load volatile ptr, ptr %19, align 4
  %102 = icmp eq ptr %101, null
  br i1 %102, label %105, label %103, !prof !9

103:                                              ; preds = %100
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !184
  tail call void @arm_heavy_mb() #23
  %104 = getelementptr i8, ptr %101, i32 22528
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %104, i32 0) #23, !srcloc !14
  br label %105

105:                                              ; preds = %103, %100
  %106 = load volatile ptr, ptr %19, align 4
  %107 = icmp eq ptr %106, null
  br i1 %107, label %110, label %108, !prof !9

108:                                              ; preds = %105
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !185
  tail call void @arm_heavy_mb() #23
  %109 = getelementptr i8, ptr %106, i32 22536
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %109, i32 0) #23, !srcloc !14
  br label %110

110:                                              ; preds = %108, %105
  %111 = getelementptr i8, ptr %5, i32 2236
  %112 = load i32, ptr %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = getelementptr i8, ptr %5, i32 3284
  %116 = load i32, ptr %115, align 4
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %119

118:                                              ; preds = %114
  tail call void @igb_power_down_phy_copper_82575(ptr noundef %7) #23
  br label %134

119:                                              ; preds = %114
  tail call void @igb_shutdown_serdes_link_82575(ptr noundef %7) #23
  br label %134

120:                                              ; preds = %110, %98, %95
  %121 = getelementptr i8, ptr %5, i32 3216
  %122 = load ptr, ptr %121, align 4
  %123 = icmp eq ptr %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = tail call i32 %122(ptr noundef %7) #23
  br label %126

126:                                              ; preds = %124, %120
  %127 = getelementptr i8, ptr %5, i32 3284
  %128 = load i32, ptr %127, align 4
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %131

130:                                              ; preds = %126
  tail call void @igb_power_up_phy_copper(ptr noundef %7) #23
  br label %132

131:                                              ; preds = %126
  tail call void @igb_power_up_serdes_link_82575(ptr noundef %7) #23
  br label %132

132:                                              ; preds = %131, %130
  %133 = tail call i32 @igb_setup_link(ptr noundef %7) #23
  br label %134

134:                                              ; preds = %132, %119, %118
  %135 = phi i8 [ 1, %132 ], [ 0, %118 ], [ 0, %119 ]
  %136 = icmp eq ptr %1, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  store i8 %135, ptr %1, align 1
  br label %138

138:                                              ; preds = %137, %134
  tail call fastcc void @igb_release_hw_control(ptr noundef %6)
  tail call void @pci_disable_device(ptr noundef %0) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_wake_from_d3(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_set_power_state(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_detach(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_ptp_suspend(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_disable_pcie_master(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_io_error_detected(ptr noundef %0, i32 noundef %1) #4 {
  %3 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr i8, ptr %4, i32 1408
  tail call void @netif_device_detach(ptr noundef %4) #23
  %6 = icmp eq i32 %1, 3
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 6
  %9 = load volatile i32, ptr %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @igb_down(ptr noundef %5)
  br label %13

13:                                               ; preds = %12, %7
  tail call void @pci_disable_device(ptr noundef %0) #23
  br label %14

14:                                               ; preds = %13, %2
  %15 = phi i32 [ 3, %13 ], [ 4, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_io_slot_reset(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = tail call i32 @pci_enable_device_mem(ptr noundef %0) #23
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %7, ptr noundef nonnull @.str.134) #22
  br label %20

8:                                                ; preds = %1
  %9 = getelementptr i8, ptr %3, i32 1408
  tail call void @pci_set_master(ptr noundef %0) #23
  tail call void @pci_restore_state(ptr noundef %0) #23
  %10 = tail call i32 @pci_save_state(ptr noundef %0) #23
  %11 = tail call i32 @pci_enable_wake(ptr noundef %0, i32 noundef 3, i1 noundef zeroext false) #23
  %12 = tail call i32 @pci_enable_wake(ptr noundef %0, i32 noundef 4, i1 noundef zeroext false) #23
  %13 = getelementptr i8, ptr %3, i32 2244
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %3, i32 2516
  store ptr %14, ptr %15, align 4
  tail call void @igb_reset(ptr noundef %9)
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %20, label %18, !prof !9

18:                                               ; preds = %8
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !186
  tail call void @arm_heavy_mb() #23
  %19 = getelementptr i8, ptr %16, i32 22544
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %19, i32 -1) #23, !srcloc !14
  br label %20

20:                                               ; preds = %18, %8, %6
  %21 = phi i32 [ 4, %6 ], [ 5, %18 ], [ 5, %8 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @igb_io_resume(ptr nocapture noundef readonly %0) #4 {
  %2 = getelementptr inbounds %struct.pci_dev, ptr %0, i32 0, i32 44, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %3, i32 1408
  %5 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 6
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i32 @igb_up(ptr noundef %4)
  br label %11

11:                                               ; preds = %9, %1
  tail call void @netif_device_attach(ptr noundef %3) #23
  tail call fastcc void @igb_get_hw_control(ptr noundef %4)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_restore_state(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_wake(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_attach(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_suspend(ptr noundef %0) #4 {
  %2 = getelementptr i8, ptr %0, i32 -136
  tail call fastcc void @__igb_shutdown(ptr noundef %2, ptr noundef null, i1 noundef zeroext false)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_resume(ptr noundef %0) #4 {
  %2 = tail call fastcc i32 @__igb_resume(ptr noundef %0, i1 noundef zeroext false)
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_runtime_suspend(ptr noundef %0) #4 {
  %2 = getelementptr i8, ptr %0, i32 -136
  tail call fastcc void @__igb_shutdown(ptr noundef %2, ptr noundef null, i1 noundef zeroext true)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_runtime_resume(ptr noundef %0) #4 {
  %2 = tail call fastcc i32 @__igb_resume(ptr noundef %0, i1 noundef zeroext true)
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_runtime_idle(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.device, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %3, i32 2512
  %5 = getelementptr i8, ptr %3, i32 3284
  %6 = load i32, ptr %5, align 4
  switch i32 %6, label %18 [
    i32 1, label %7
    i32 3, label %11
  ]

7:                                                ; preds = %1
  %8 = getelementptr i8, ptr %3, i32 3141
  %9 = load i8, ptr %8, align 1, !range !15
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %49, label %11

11:                                               ; preds = %7, %1
  %12 = getelementptr i8, ptr %3, i32 2528
  %13 = load ptr, ptr %12, align 4
  %14 = tail call i32 %13(ptr noundef %4) #23
  %15 = getelementptr i8, ptr %3, i32 3141
  %16 = load i8, ptr %15, align 1, !range !15
  %17 = icmp ne i8 %16, 1
  br label %18

18:                                               ; preds = %11, %1
  %19 = phi i1 [ false, %1 ], [ %17, %11 ]
  %20 = getelementptr i8, ptr %3, i32 2592
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, -2
  %23 = icmp eq i32 %22, 6
  br i1 %23, label %24, label %46

24:                                               ; preds = %18
  %25 = getelementptr i8, ptr %3, i32 3272
  %26 = load i32, ptr %25, align 4
  %27 = icmp eq i32 %26, 21040128
  br i1 %27, label %28, label %46

28:                                               ; preds = %24
  %29 = getelementptr i8, ptr %3, i32 1920
  %30 = load ptr, ptr %29, align 64
  %31 = getelementptr inbounds %struct.net_device, ptr %30, i32 0, i32 6
  %32 = load volatile i32, ptr %31, align 4
  %33 = and i32 %32, 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr i8, ptr %3, i32 1932
  %36 = load i32, ptr %35, align 4
  br i1 %34, label %39, label %37

37:                                               ; preds = %28
  %38 = and i32 %36, -513
  store i32 %38, ptr %35, align 4
  br i1 %19, label %49, label %47

39:                                               ; preds = %28
  %40 = and i32 %36, 512
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = or i32 %36, 512
  store i32 %43, ptr %35, align 4
  %44 = load volatile i32, ptr @jiffies, align 64
  %45 = getelementptr i8, ptr %3, i32 6352
  store i32 %44, ptr %45, align 16
  br i1 %19, label %49, label %47

46:                                               ; preds = %39, %24, %18
  br i1 %19, label %49, label %47

47:                                               ; preds = %46, %42, %37
  %48 = tail call i32 @pm_schedule_suspend(ptr noundef %0, i32 noundef 5000) #23
  br label %49

49:                                               ; preds = %47, %46, %42, %37, %7
  ret i32 -16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__igb_resume(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #4 {
  %3 = getelementptr i8, ptr %0, i32 -136
  %4 = getelementptr i8, ptr %0, i32 64
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %5, i32 1408
  %7 = tail call i32 @pci_set_power_state(ptr noundef %3, i32 noundef 0) #23
  tail call void @pci_restore_state(ptr noundef %3) #23
  %8 = tail call i32 @pci_save_state(ptr noundef %3) #23
  %9 = tail call zeroext i1 @pci_device_is_present(ptr noundef %3) #23
  br i1 %9, label %10, label %100

10:                                               ; preds = %2
  %11 = tail call i32 @pci_enable_device_mem(ptr noundef %3) #23
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %0, ptr noundef nonnull @.str.136) #22
  br label %100

14:                                               ; preds = %10
  tail call void @pci_set_master(ptr noundef %3) #23
  %15 = tail call i32 @pci_enable_wake(ptr noundef %3, i32 noundef 3, i1 noundef zeroext false) #23
  %16 = tail call i32 @pci_enable_wake(ptr noundef %3, i32 noundef 4, i1 noundef zeroext false) #23
  %17 = tail call fastcc i32 @igb_init_interrupt_scheme(ptr noundef %6, i1 noundef zeroext true)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %0, ptr noundef nonnull @.str.11) #22
  br label %100

20:                                               ; preds = %14
  tail call void @igb_reset(ptr noundef %6)
  tail call fastcc void @igb_get_hw_control(ptr noundef %6)
  %21 = getelementptr i8, ptr %5, i32 2516
  %22 = load volatile ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %41, label %24, !prof !9

24:                                               ; preds = %20
  %25 = getelementptr i8, ptr %22, i32 22544
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %25) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %38

28:                                               ; preds = %24
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %22) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %41

31:                                               ; preds = %28
  %32 = getelementptr i8, ptr %5, i32 1920
  %33 = load ptr, ptr %32, align 64
  store ptr null, ptr %21, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %33, ptr noundef nonnull @.str) #22
  %34 = getelementptr i8, ptr %5, i32 2308
  %35 = load ptr, ptr %34, align 4
  %36 = tail call zeroext i1 @pci_device_is_present(ptr noundef %35) #23
  br i1 %36, label %37, label %41, !prof !9

37:                                               ; preds = %31
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 22544) #23
  br label %41

38:                                               ; preds = %24
  %39 = and i32 %26, 1252
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %81, label %41

41:                                               ; preds = %38, %37, %31, %28, %20
  %42 = load volatile ptr, ptr %21, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %81, label %44, !prof !9

44:                                               ; preds = %41
  %45 = getelementptr i8, ptr %42, i32 22784
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %45) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %58

48:                                               ; preds = %44
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %42) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %81

51:                                               ; preds = %48
  %52 = getelementptr i8, ptr %5, i32 1920
  %53 = load ptr, ptr %52, align 64
  store ptr null, ptr %21, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %53, ptr noundef nonnull @.str) #22
  %54 = getelementptr i8, ptr %5, i32 2308
  %55 = load ptr, ptr %54, align 4
  %56 = tail call zeroext i1 @pci_device_is_present(ptr noundef %55) #23
  br i1 %56, label %57, label %81, !prof !9

57:                                               ; preds = %51
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 22784) #23
  br label %81

58:                                               ; preds = %44
  %59 = and i32 %46, 4095
  %60 = add nsw i32 %59, -129
  %61 = icmp ult i32 %60, -128
  br i1 %61, label %81, label %62

62:                                               ; preds = %58
  %63 = tail call ptr @__netdev_alloc_skb(ptr noundef %5, i32 noundef 130, i32 noundef 2592) #23
  %64 = icmp eq ptr %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.sk_buff, ptr %63, i32 0, i32 17
  %67 = load ptr, ptr %66, align 4
  %68 = getelementptr i8, ptr %67, i32 2
  store ptr %68, ptr %66, align 4
  %69 = getelementptr inbounds %struct.sk_buff, ptr %63, i32 0, i32 14
  %70 = load ptr, ptr %69, align 8
  %71 = getelementptr i8, ptr %70, i32 2
  store ptr %71, ptr %69, align 8
  %72 = tail call ptr @skb_put(ptr noundef nonnull %63, i32 noundef %59) #23
  %73 = add nuw nsw i32 %59, 3
  %74 = and i32 %73, 8188
  %75 = load ptr, ptr %66, align 4
  %76 = load ptr, ptr %21, align 4
  %77 = getelementptr i8, ptr %76, i32 23040
  tail call void @mmiocpy(ptr noundef %75, ptr noundef %77, i32 noundef %74) #23
  %78 = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %63, ptr noundef %5) #23
  %79 = getelementptr inbounds %struct.sk_buff, ptr %63, i32 0, i32 13, i32 0, i32 16
  store i16 %78, ptr %79, align 8
  %80 = tail call i32 @netif_rx(ptr noundef nonnull %63) #23
  br label %81

81:                                               ; preds = %65, %62, %58, %57, %51, %48, %41, %38
  %82 = load volatile ptr, ptr %21, align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %86, label %84, !prof !9

84:                                               ; preds = %81
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !187
  tail call void @arm_heavy_mb() #23
  %85 = getelementptr i8, ptr %82, i32 22544
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %85, i32 -1) #23, !srcloc !14
  br label %86

86:                                               ; preds = %84, %81
  br i1 %1, label %88, label %87

87:                                               ; preds = %86
  tail call void @rtnl_lock() #23
  br label %88

88:                                               ; preds = %87, %86
  %89 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 6
  %90 = load volatile i32, ptr %89, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = tail call fastcc i32 @__igb_open(ptr noundef %5, i1 noundef zeroext true)
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93, %88
  tail call void @netif_device_attach(ptr noundef %5) #23
  br label %97

97:                                               ; preds = %96, %93
  %98 = phi i32 [ 0, %96 ], [ %94, %93 ]
  br i1 %1, label %100, label %99

99:                                               ; preds = %97
  tail call void @rtnl_unlock() #23
  br label %100

100:                                              ; preds = %99, %97, %19, %13, %2
  %101 = phi i32 [ %11, %13 ], [ -12, %19 ], [ -19, %2 ], [ %98, %99 ], [ %98, %97 ]
  ret i32 %101
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_rx(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__netdev_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mmiocpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_rx_fifo_flush_82575(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_le(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_rss_key_fill(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_write_rss_indir_tbl(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_vmdq_set_loopback_pf(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_vmdq_set_replication_pf(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_vmdq_set_anti_spoofing_pf(ptr noundef, i1 noundef zeroext, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_write_ivar(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 {
  %5 = shl i32 %2, 2
  %6 = add i32 %5, 5888
  %7 = getelementptr inbounds %struct.e1000_hw, ptr %0, i32 0, i32 1
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %26, label %10, !prof !9

10:                                               ; preds = %4
  %11 = getelementptr i8, ptr %8, i32 %6
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %11) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = icmp eq i32 %6, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %8) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %26

19:                                               ; preds = %16, %14
  %20 = getelementptr i8, ptr %0, i32 -592
  %21 = load ptr, ptr %20, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %21, ptr noundef nonnull @.str) #22
  %22 = getelementptr i8, ptr %0, i32 -204
  %23 = load ptr, ptr %22, align 4
  %24 = tail call zeroext i1 @pci_device_is_present(ptr noundef %23) #23
  br i1 %24, label %25, label %26, !prof !9

25:                                               ; preds = %19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %6) #23
  br label %26

26:                                               ; preds = %25, %19, %16, %10, %4
  %27 = phi i32 [ -1, %4 ], [ -1, %19 ], [ -1, %25 ], [ -1, %16 ], [ %12, %10 ]
  %28 = load volatile ptr, ptr %7, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %38, label %30, !prof !9

30:                                               ; preds = %26
  %31 = shl i32 255, %3
  %32 = xor i32 %31, -1
  %33 = and i32 %27, %32
  %34 = or i32 %1, 128
  %35 = shl i32 %34, %3
  %36 = or i32 %33, %35
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !188
  tail call void @arm_heavy_mb() #23
  %37 = getelementptr i8, ptr %28, i32 %6
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %37, i32 %36) #23, !srcloc !14
  br label %38

38:                                               ; preds = %30, %26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_irq(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__hw_addr_unsync_dev(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_power_down_phy_copper_82575(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_shutdown_serdes_link_82575(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_setup_all_tx_resources(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 13
  %5 = load i32, ptr %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %62

7:                                                ; preds = %56, %1
  %8 = phi i32 [ %59, %56 ], [ 0, %1 ]
  %9 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %8
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 3
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 10
  %14 = load i16, ptr %13, align 8
  %15 = zext i16 %14 to i32
  %16 = mul nuw nsw i32 %15, 36
  %17 = tail call noalias ptr @vmalloc(i32 noundef %16) #24
  %18 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 4
  store ptr %17, ptr %18, align 16
  %19 = icmp eq ptr %17, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %7
  %21 = load i16, ptr %13, align 8
  %22 = zext i16 %21 to i32
  %23 = shl nuw nsw i32 %22, 4
  %24 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 9
  %25 = add nuw nsw i32 %23, 4095
  %26 = and i32 %25, 2093056
  store i32 %26, ptr %24, align 4
  %27 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 8
  %28 = tail call ptr @dma_alloc_attrs(ptr noundef %12, i32 noundef %26, ptr noundef %27, i32 noundef 3264, i32 noundef 0) #23
  %29 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 5
  store ptr %28, ptr %29, align 4
  %30 = icmp eq ptr %28, null
  br i1 %30, label %31, label %56

31:                                               ; preds = %20
  %32 = load ptr, ptr %18, align 16
  br label %33

33:                                               ; preds = %31, %7
  %34 = phi ptr [ %32, %31 ], [ null, %7 ]
  tail call void @vfree(ptr noundef %34) #23
  store ptr null, ptr %18, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %12, ptr noundef nonnull @.str.8) #22
  %35 = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %35, ptr noundef nonnull @.str.137, i32 noundef %8) #22
  %36 = icmp eq i32 %8, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %54, %33
  %38 = phi i32 [ %39, %54 ], [ %8, %33 ]
  %39 = add nsw i32 %38, -1
  %40 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %39
  %41 = load ptr, ptr %40, align 4
  tail call fastcc void @igb_clean_tx_ring(ptr noundef %41) #23
  %42 = getelementptr inbounds %struct.igb_ring, ptr %41, i32 0, i32 4
  %43 = load ptr, ptr %42, align 16
  tail call void @vfree(ptr noundef %43) #23
  store ptr null, ptr %42, align 16
  %44 = getelementptr inbounds %struct.igb_ring, ptr %41, i32 0, i32 5
  %45 = load ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.igb_ring, ptr %41, i32 0, i32 3
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.igb_ring, ptr %41, i32 0, i32 9
  %51 = load i32, ptr %50, align 4
  %52 = getelementptr inbounds %struct.igb_ring, ptr %41, i32 0, i32 8
  %53 = load i32, ptr %52, align 32
  tail call void @dma_free_attrs(ptr noundef %49, i32 noundef %51, ptr noundef nonnull %45, i32 noundef %53, i32 noundef 0) #23
  store ptr null, ptr %44, align 4
  br label %54

54:                                               ; preds = %47, %37
  %55 = icmp sgt i32 %38, 1
  br i1 %55, label %37, label %62

56:                                               ; preds = %20
  %57 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 20
  store i16 0, ptr %57, align 2
  %58 = getelementptr inbounds %struct.igb_ring, ptr %10, i32 0, i32 19
  store i16 0, ptr %58, align 64
  %59 = add nuw nsw i32 %8, 1
  %60 = load i32, ptr %4, align 8
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %7, label %62

62:                                               ; preds = %56, %54, %33, %1
  %63 = phi i32 [ -12, %33 ], [ 0, %1 ], [ -12, %54 ], [ 0, %56 ]
  ret i32 %63
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_setup_all_rx_resources(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %5 = load i32, ptr %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %41

7:                                                ; preds = %37, %1
  %8 = phi i32 [ %38, %37 ], [ 0, %1 ]
  %9 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %8
  %10 = load ptr, ptr %9, align 4
  %11 = tail call i32 @igb_setup_rx_resources(ptr noundef %10)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %37, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %14, ptr noundef nonnull @.str.138, i32 noundef %8) #22
  %15 = icmp eq i32 %8, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %35, %13
  %17 = phi i32 [ %18, %35 ], [ %8, %13 ]
  %18 = add nsw i32 %17, -1
  %19 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %18
  %20 = load ptr, ptr %19, align 4
  tail call fastcc void @igb_clean_rx_ring(ptr noundef %20) #23
  %21 = getelementptr inbounds %struct.igb_ring, ptr %20, i32 0, i32 2
  store ptr null, ptr %21, align 8
  %22 = getelementptr inbounds %struct.igb_ring, ptr %20, i32 0, i32 23
  tail call void @xdp_rxq_info_unreg(ptr noundef %22) #23
  %23 = getelementptr inbounds %struct.igb_ring, ptr %20, i32 0, i32 4
  %24 = load ptr, ptr %23, align 16
  tail call void @vfree(ptr noundef %24) #23
  store ptr null, ptr %23, align 16
  %25 = getelementptr inbounds %struct.igb_ring, ptr %20, i32 0, i32 5
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct.igb_ring, ptr %20, i32 0, i32 3
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.igb_ring, ptr %20, i32 0, i32 9
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.igb_ring, ptr %20, i32 0, i32 8
  %34 = load i32, ptr %33, align 32
  tail call void @dma_free_attrs(ptr noundef %30, i32 noundef %32, ptr noundef nonnull %26, i32 noundef %34, i32 noundef 0) #23
  store ptr null, ptr %25, align 4
  br label %35

35:                                               ; preds = %28, %16
  %36 = icmp sgt i32 %17, 1
  br i1 %36, label %16, label %41

37:                                               ; preds = %7
  %38 = add nuw nsw i32 %8, 1
  %39 = load i32, ptr %4, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %7, label %41

41:                                               ; preds = %37, %35, %13, %1
  %42 = phi i32 [ %11, %13 ], [ 0, %1 ], [ %11, %35 ], [ 0, %37 ]
  ret i32 %42
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_set_real_num_tx_queues(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_set_real_num_rx_queues(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_free_all_rx_resources(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 15
  %3 = load i32, ptr %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %29

5:                                                ; preds = %25, %1
  %6 = phi i32 [ %26, %25 ], [ 0, %1 ]
  %7 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %6
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %5
  tail call fastcc void @igb_clean_rx_ring(ptr noundef nonnull %8) #23
  %11 = getelementptr inbounds %struct.igb_ring, ptr %8, i32 0, i32 2
  store ptr null, ptr %11, align 8
  %12 = getelementptr inbounds %struct.igb_ring, ptr %8, i32 0, i32 23
  tail call void @xdp_rxq_info_unreg(ptr noundef %12) #23
  %13 = getelementptr inbounds %struct.igb_ring, ptr %8, i32 0, i32 4
  %14 = load ptr, ptr %13, align 16
  tail call void @vfree(ptr noundef %14) #23
  store ptr null, ptr %13, align 16
  %15 = getelementptr inbounds %struct.igb_ring, ptr %8, i32 0, i32 5
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.igb_ring, ptr %8, i32 0, i32 3
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.igb_ring, ptr %8, i32 0, i32 9
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.igb_ring, ptr %8, i32 0, i32 8
  %24 = load i32, ptr %23, align 32
  tail call void @dma_free_attrs(ptr noundef %20, i32 noundef %22, ptr noundef nonnull %16, i32 noundef %24, i32 noundef 0) #23
  store ptr null, ptr %15, align 4
  br label %25

25:                                               ; preds = %18, %10, %5
  %26 = add nuw nsw i32 %6, 1
  %27 = load i32, ptr %2, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %5, label %29

29:                                               ; preds = %25, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_intr_msi(i32 noundef %0, ptr noundef %1) #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 45
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 1
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %22, label %8, !prof !9

8:                                                ; preds = %2
  %9 = getelementptr i8, ptr %6, i32 192
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %9) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %22

15:                                               ; preds = %12
  %16 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %17, ptr noundef nonnull @.str) #22
  %18 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 34
  %19 = load ptr, ptr %18, align 4
  %20 = tail call zeroext i1 @pci_device_is_present(ptr noundef %19) #23
  br i1 %20, label %21, label %22, !prof !9

21:                                               ; preds = %15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 192) #23
  br label %22

22:                                               ; preds = %21, %15, %12, %8, %2
  %23 = phi i32 [ -1, %2 ], [ -1, %15 ], [ -1, %21 ], [ -1, %12 ], [ %10, %8 ]
  %24 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 4
  %25 = load i8, ptr %24, align 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 3
  %29 = load i16, ptr %28, align 4
  %30 = and i16 %29, 32764
  %31 = load ptr, ptr %4, align 64
  %32 = icmp eq i16 %30, 0
  %33 = select i1 %32, i16 4, i16 %30
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %struct.igb_adapter, ptr %31, i32 0, i32 37, i32 4, i32 3
  %36 = load i32, ptr %35, align 16
  %37 = icmp eq i32 %36, 1
  %38 = shl nuw nsw i32 %34, 16
  %39 = select i1 %37, i32 %38, i32 -2147483648
  %40 = or i32 %39, %34
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !189
  tail call void @arm_heavy_mb() #23
  %41 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 5
  %42 = load ptr, ptr %41, align 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %42, i32 %40) #23, !srcloc !14
  store i8 0, ptr %24, align 2
  br label %43

43:                                               ; preds = %27, %22
  %44 = and i32 %23, 1073741824
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 28
  %48 = load ptr, ptr @system_wq, align 4
  %49 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %48, ptr noundef %47) #23
  br label %50

50:                                               ; preds = %46, %43
  %51 = and i32 %23, 268435456
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 38, i32 75
  %55 = load i64, ptr %54, align 8
  %56 = add i64 %55, 1
  store i64 %56, ptr %54, align 8
  br label %57

57:                                               ; preds = %53, %50
  %58 = and i32 %23, 12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %71, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 4, i32 20
  store i8 1, ptr %61, align 1
  %62 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 3
  %63 = load volatile i32, ptr %62, align 4
  %64 = and i32 %63, 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 19
  %68 = load volatile i32, ptr @jiffies, align 64
  %69 = add i32 %68, 1
  %70 = tail call i32 @mod_timer(ptr noundef %67, i32 noundef %69) #23
  br label %71

71:                                               ; preds = %66, %60, %57
  %72 = and i32 %23, 524288
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  tail call fastcc void @igb_tsync_interrupt(ptr noundef %1)
  br label %75

75:                                               ; preds = %74, %71
  %76 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 8
  %77 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %76) #23
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @__napi_schedule(ptr noundef %76) #23
  br label %79

79:                                               ; preds = %78, %75
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_intr(i32 noundef %0, ptr noundef %1) #4 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 45
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 1
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %24, label %8, !prof !9

8:                                                ; preds = %2
  %9 = getelementptr i8, ptr %6, i32 192
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %9) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %6) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 64
  store ptr null, ptr %5, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %17, ptr noundef nonnull @.str) #22
  %18 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 34
  %19 = load ptr, ptr %18, align 4
  %20 = tail call zeroext i1 @pci_device_is_present(ptr noundef %19) #23
  br i1 %20, label %21, label %24, !prof !9

21:                                               ; preds = %15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 192) #23
  br label %24

22:                                               ; preds = %8
  %23 = icmp sgt i32 %10, -1
  br i1 %23, label %81, label %24

24:                                               ; preds = %22, %21, %15, %12, %2
  %25 = phi i32 [ %10, %22 ], [ -1, %2 ], [ -1, %15 ], [ -1, %21 ], [ -1, %12 ]
  %26 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 4
  %27 = load i8, ptr %26, align 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 3
  %31 = load i16, ptr %30, align 4
  %32 = and i16 %31, 32764
  %33 = load ptr, ptr %4, align 64
  %34 = icmp eq i16 %32, 0
  %35 = select i1 %34, i16 4, i16 %32
  %36 = zext i16 %35 to i32
  %37 = getelementptr inbounds %struct.igb_adapter, ptr %33, i32 0, i32 37, i32 4, i32 3
  %38 = load i32, ptr %37, align 16
  %39 = icmp eq i32 %38, 1
  %40 = shl nuw nsw i32 %36, 16
  %41 = select i1 %39, i32 %40, i32 -2147483648
  %42 = or i32 %41, %36
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !189
  tail call void @arm_heavy_mb() #23
  %43 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 5
  %44 = load ptr, ptr %43, align 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %44, i32 %42) #23, !srcloc !14
  store i8 0, ptr %26, align 2
  br label %45

45:                                               ; preds = %29, %24
  %46 = and i32 %25, 1073741824
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 28
  %50 = load ptr, ptr @system_wq, align 4
  %51 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %50, ptr noundef %49) #23
  br label %52

52:                                               ; preds = %48, %45
  %53 = and i32 %25, 268435456
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 38, i32 75
  %57 = load i64, ptr %56, align 8
  %58 = add i64 %57, 1
  store i64 %58, ptr %56, align 8
  br label %59

59:                                               ; preds = %55, %52
  %60 = and i32 %25, 12
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 4, i32 20
  store i8 1, ptr %63, align 1
  %64 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 3
  %65 = load volatile i32, ptr %64, align 4
  %66 = and i32 %65, 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 19
  %70 = load volatile i32, ptr @jiffies, align 64
  %71 = add i32 %70, 1
  %72 = tail call i32 @mod_timer(ptr noundef %69, i32 noundef %71) #23
  br label %73

73:                                               ; preds = %68, %62, %59
  %74 = and i32 %25, 524288
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  tail call fastcc void @igb_tsync_interrupt(ptr noundef %1)
  br label %77

77:                                               ; preds = %76, %73
  %78 = getelementptr inbounds %struct.igb_q_vector, ptr %4, i32 0, i32 8
  %79 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %78) #23
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @__napi_schedule(ptr noundef %78) #23
  br label %81

81:                                               ; preds = %80, %77, %22
  %82 = phi i32 [ 0, %22 ], [ 1, %77 ], [ 1, %80 ]
  ret i32 %82
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_msix_other(i32 noundef %0, ptr noundef %1) #4 {
  %3 = alloca i32, align 4
  %4 = alloca [3 x i32], align 4
  %5 = alloca [16 x i32], align 4
  %6 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37
  %7 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 1
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %27, label %10, !prof !9

10:                                               ; preds = %2
  %11 = getelementptr i8, ptr %8, i32 192
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %11) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %8) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %19, ptr noundef nonnull @.str) #22
  %20 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 34
  %21 = load ptr, ptr %20, align 4
  %22 = tail call zeroext i1 @pci_device_is_present(ptr noundef %21) #23
  br i1 %22, label %23, label %27, !prof !9

23:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 192) #23
  br label %27

24:                                               ; preds = %10
  %25 = and i32 %12, 1073741824
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %24, %23, %17, %14, %2
  %28 = phi i32 [ %12, %24 ], [ -1, %2 ], [ -1, %17 ], [ -1, %23 ], [ -1, %14 ]
  %29 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 28
  %30 = load ptr, ptr @system_wq, align 4
  %31 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %30, ptr noundef %29) #23
  br label %32

32:                                               ; preds = %27, %24
  %33 = phi i32 [ %28, %27 ], [ %12, %24 ]
  %34 = and i32 %33, 268435456
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 38, i32 75
  %38 = load i64, ptr %37, align 8
  %39 = add i64 %38, 1
  store i64 %39, ptr %37, align 8
  %40 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 4, i32 3
  %41 = load i32, ptr %40, align 4
  switch i32 %41, label %58 [
    i32 2, label %42
    i32 4, label %42
  ]

42:                                               ; preds = %36, %36
  %43 = load volatile ptr, ptr %7, align 4
  %44 = icmp eq ptr %43, null
  br i1 %44, label %58, label %45, !prof !9

45:                                               ; preds = %42
  %46 = getelementptr i8, ptr %43, i32 13652
  %47 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %46) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  switch i32 %47, label %58 [
    i32 -1, label %48
    i32 0, label %63
  ]

48:                                               ; preds = %45
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %43) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %58

51:                                               ; preds = %48
  %52 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 1
  %53 = load ptr, ptr %52, align 64
  store ptr null, ptr %7, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %53, ptr noundef nonnull @.str) #22
  %54 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 34
  %55 = load ptr, ptr %54, align 4
  %56 = tail call zeroext i1 @pci_device_is_present(ptr noundef %55) #23
  br i1 %56, label %57, label %58, !prof !9

57:                                               ; preds = %51
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 13652) #23
  br label %58

58:                                               ; preds = %57, %51, %48, %45, %42, %36
  %59 = phi i32 [ 0, %36 ], [ -1, %42 ], [ -1, %51 ], [ -1, %57 ], [ -1, %48 ], [ %47, %45 ]
  %60 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 54
  %61 = load i32, ptr %60, align 64
  %62 = or i32 %61, %59
  store i32 %62, ptr %60, align 64
  br label %63

63:                                               ; preds = %58, %45, %32
  %64 = and i32 %33, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %584, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 50
  %68 = load i32, ptr %67, align 16
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %584, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 51
  %72 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 34
  %73 = getelementptr inbounds i32, ptr %5, i32 1
  %74 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 4, i32 3
  %75 = getelementptr %struct.igb_adapter, ptr %1, i32 0, i32 1
  %76 = getelementptr inbounds i32, ptr %5, i32 2
  %77 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 93
  %78 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 4, i32 12
  %79 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 92
  %80 = getelementptr inbounds [3 x i32], ptr %4, i32 0, i32 1
  br label %81

81:                                               ; preds = %580, %70
  %82 = phi i32 [ 0, %70 ], [ %581, %580 ]
  %83 = trunc i32 %82 to i16
  %84 = call i32 @igb_check_for_rst(ptr noundef %6, i16 noundef zeroext %83) #23
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %95

86:                                               ; preds = %81
  %87 = load ptr, ptr %71, align 4
  %88 = getelementptr %struct.vf_data_storage, ptr %87, i32 %82, i32 3
  %89 = load i32, ptr %88, align 4
  %90 = and i32 %89, 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = getelementptr %struct.vf_data_storage, ptr %87, i32 %82
  call void @llvm.memset.p0.i32(ptr noundef align 1 dereferenceable(6) %93, i8 0, i32 6, i1 false) #23
  br label %94

94:                                               ; preds = %92, %86
  call fastcc void @igb_vf_reset(ptr noundef %1, i32 noundef %82) #23
  br label %95

95:                                               ; preds = %94, %81
  %96 = call i32 @igb_check_for_msg(ptr noundef %6, i16 noundef zeroext %83) #23
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %560

98:                                               ; preds = %95
  %99 = load ptr, ptr %72, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(64) %5, i8 0, i32 64, i1 false) #23, !annotation !24
  %100 = load ptr, ptr %71, align 4
  %101 = call i32 @igb_read_mbx(ptr noundef %6, ptr noundef nonnull %5, i16 noundef zeroext 16, i16 noundef zeroext %83, i1 noundef zeroext false) #23
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %116, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct.pci_dev, ptr %99, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %104, ptr noundef nonnull @.str.145) #22
  %105 = getelementptr %struct.vf_data_storage, ptr %100, i32 %82, i32 3
  %106 = load i32, ptr %105, align 4
  %107 = and i32 %106, -2
  store i32 %107, ptr %105, align 4
  %108 = getelementptr %struct.vf_data_storage, ptr %100, i32 %82, i32 4
  %109 = load i32, ptr %108, align 4
  %110 = add i32 %109, 200
  %111 = load volatile i32, ptr @jiffies, align 64
  %112 = sub i32 %110, %111
  %113 = icmp slt i32 %112, 0
  br i1 %113, label %114, label %557

114:                                              ; preds = %103
  %115 = load i32, ptr %5, align 4
  br label %538

116:                                              ; preds = %98
  %117 = load i32, ptr %5, align 4
  %118 = icmp ult i32 %117, 1073741824
  br i1 %118, label %119, label %557

119:                                              ; preds = %116
  %120 = icmp eq i32 %117, 1
  br i1 %120, label %121, label %205

121:                                              ; preds = %119
  %122 = load ptr, ptr %71, align 4
  %123 = getelementptr %struct.vf_data_storage, ptr %122, i32 %82
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(12) %4, i8 0, i32 12, i1 false) #23, !annotation !24
  call fastcc void @igb_vf_reset(ptr noundef %1, i32 noundef %82) #23
  %124 = load i16, ptr %78, align 4
  %125 = zext i16 %124 to i32
  %126 = xor i32 %82, -1
  %127 = add i32 %125, %126
  %128 = load ptr, ptr %71, align 4
  %129 = getelementptr %struct.vf_data_storage, ptr %128, i32 %82
  %130 = load i32, ptr %123, align 4
  store i32 %130, ptr %129, align 4
  %131 = getelementptr i8, ptr %123, i32 4
  %132 = load i16, ptr %131, align 2
  %133 = getelementptr i8, ptr %129, i32 4
  store i16 %132, ptr %133, align 2
  %134 = load ptr, ptr %79, align 64
  %135 = getelementptr %struct.igb_mac_addr, ptr %134, i32 %127
  %136 = load i32, ptr %123, align 4
  store i32 %136, ptr %135, align 4
  %137 = load i16, ptr %131, align 2
  %138 = getelementptr i8, ptr %135, i32 4
  store i16 %137, ptr %138, align 2
  %139 = trunc i32 %82 to i8
  %140 = load ptr, ptr %79, align 64
  %141 = getelementptr %struct.igb_mac_addr, ptr %140, i32 %127, i32 1
  store i8 %139, ptr %141, align 1
  %142 = load ptr, ptr %79, align 64
  %143 = getelementptr %struct.igb_mac_addr, ptr %142, i32 %127, i32 2
  %144 = load i8, ptr %143, align 1
  %145 = or i8 %144, 2
  store i8 %145, ptr %143, align 1
  call fastcc void @igb_rar_set_index(ptr noundef %1, i32 noundef %127) #23
  %146 = load volatile ptr, ptr %7, align 4
  %147 = icmp eq ptr %146, null
  br i1 %147, label %160, label %148, !prof !9

148:                                              ; preds = %121
  %149 = getelementptr i8, ptr %146, i32 3216
  %150 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %149) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %151 = icmp eq i32 %150, -1
  br i1 %151, label %152, label %160

152:                                              ; preds = %148
  %153 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %146) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %154 = icmp eq i32 %153, -1
  br i1 %154, label %155, label %160

155:                                              ; preds = %152
  %156 = load ptr, ptr %75, align 64
  store ptr null, ptr %7, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %156, ptr noundef nonnull @.str) #22
  %157 = load ptr, ptr %72, align 4
  %158 = call zeroext i1 @pci_device_is_present(ptr noundef %157) #23
  br i1 %158, label %159, label %160, !prof !9

159:                                              ; preds = %155
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 3216) #23
  br label %160

160:                                              ; preds = %159, %155, %152, %148, %121
  %161 = phi i32 [ -1, %121 ], [ -1, %155 ], [ -1, %159 ], [ -1, %152 ], [ %150, %148 ]
  %162 = load volatile ptr, ptr %7, align 4
  %163 = icmp eq ptr %162, null
  br i1 %163, label %168, label %164, !prof !9

164:                                              ; preds = %160
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !190
  call void @arm_heavy_mb() #23
  %165 = shl nuw i32 1, %82
  %166 = or i32 %161, %165
  %167 = getelementptr i8, ptr %162, i32 3216
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %167, i32 %166) #23, !srcloc !14
  br label %168

168:                                              ; preds = %164, %160
  %169 = load volatile ptr, ptr %7, align 4
  %170 = icmp eq ptr %169, null
  br i1 %170, label %183, label %171, !prof !9

171:                                              ; preds = %168
  %172 = getelementptr i8, ptr %169, i32 3212
  %173 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %172) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %174 = icmp eq i32 %173, -1
  br i1 %174, label %175, label %183

175:                                              ; preds = %171
  %176 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %169) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %177 = icmp eq i32 %176, -1
  br i1 %177, label %178, label %183

178:                                              ; preds = %175
  %179 = load ptr, ptr %75, align 64
  store ptr null, ptr %7, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %179, ptr noundef nonnull @.str) #22
  %180 = load ptr, ptr %72, align 4
  %181 = call zeroext i1 @pci_device_is_present(ptr noundef %180) #23
  br i1 %181, label %182, label %183, !prof !9

182:                                              ; preds = %178
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 3212) #23
  br label %183

183:                                              ; preds = %182, %178, %175, %171, %168
  %184 = phi i32 [ -1, %168 ], [ -1, %178 ], [ -1, %182 ], [ -1, %175 ], [ %173, %171 ]
  %185 = load volatile ptr, ptr %7, align 4
  %186 = icmp eq ptr %185, null
  br i1 %186, label %191, label %187, !prof !9

187:                                              ; preds = %183
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !191
  call void @arm_heavy_mb() #23
  %188 = shl nuw i32 1, %82
  %189 = or i32 %184, %188
  %190 = getelementptr i8, ptr %185, i32 3212
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %190, i32 %189) #23, !srcloc !14
  br label %191

191:                                              ; preds = %187, %183
  %192 = load ptr, ptr %71, align 4
  %193 = getelementptr %struct.vf_data_storage, ptr %192, i32 %82, i32 3
  %194 = load i32, ptr %193, align 4
  %195 = or i32 %194, 1
  store i32 %195, ptr %193, align 4
  %196 = load i32, ptr %123, align 4
  %197 = load i16, ptr %131, align 2
  %198 = zext i16 %197 to i32
  %199 = or i32 %196, %198
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %191
  store i32 -2147483647, ptr %4, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(6) %80, ptr noundef align 1 dereferenceable(6) %123, i32 6, i1 false) #23
  br label %203

202:                                              ; preds = %191
  store i32 1073741825, ptr %4, align 4
  br label %203

203:                                              ; preds = %202, %201
  %204 = call i32 @igb_write_mbx(ptr noundef %6, ptr noundef nonnull %4, i16 noundef zeroext 3, i16 noundef zeroext %83) #23
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #23
  br label %559

205:                                              ; preds = %119
  %206 = getelementptr %struct.vf_data_storage, ptr %100, i32 %82, i32 3
  %207 = load i32, ptr %206, align 4
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %217

210:                                              ; preds = %205
  %211 = getelementptr %struct.vf_data_storage, ptr %100, i32 %82, i32 4
  %212 = load i32, ptr %211, align 4
  %213 = add i32 %212, 200
  %214 = load volatile i32, ptr @jiffies, align 64
  %215 = sub i32 %213, %214
  %216 = icmp slt i32 %215, 0
  br i1 %216, label %538, label %557

217:                                              ; preds = %205
  %218 = trunc i32 %117 to i16
  switch i16 %218, label %536 [
    i16 2, label %219
    i16 6, label %370
    i16 3, label %433
    i16 5, label %450
    i16 4, label %480
  ]

219:                                              ; preds = %217
  %220 = load ptr, ptr %72, align 4
  %221 = load ptr, ptr %71, align 4
  %222 = and i32 %117, 16711680
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr %struct.vf_data_storage, ptr %221, i32 %82, i32 3
  %225 = load i32, ptr %224, align 4
  %226 = and i32 %225, 8
  %227 = icmp eq i32 %226, 0
  br i1 %223, label %228, label %266

228:                                              ; preds = %219
  br i1 %227, label %235, label %229

229:                                              ; preds = %228
  %230 = getelementptr %struct.vf_data_storage, ptr %221, i32 %82, i32 9
  %231 = load i8, ptr %230, align 1, !range !15
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %235

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.pci_dev, ptr %220, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %234, ptr noundef nonnull @.str.148, i32 noundef %82) #22
  br label %543

235:                                              ; preds = %229, %228
  %236 = load i32, ptr %73, align 4
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %244

239:                                              ; preds = %235
  %240 = load i16, ptr %76, align 4
  %241 = zext i16 %240 to i32
  %242 = or i32 %236, %241
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %239, %235
  %245 = getelementptr inbounds %struct.pci_dev, ptr %220, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %245, ptr noundef nonnull @.str.149, i32 noundef %82) #22
  br label %543

246:                                              ; preds = %239
  %247 = load i16, ptr %78, align 4
  %248 = zext i16 %247 to i32
  %249 = xor i32 %82, -1
  %250 = add i32 %248, %249
  %251 = getelementptr %struct.vf_data_storage, ptr %221, i32 %82
  store i32 %236, ptr %251, align 4
  %252 = load i16, ptr %76, align 4
  %253 = getelementptr i8, ptr %251, i32 4
  store i16 %252, ptr %253, align 2
  %254 = load ptr, ptr %79, align 64
  %255 = getelementptr %struct.igb_mac_addr, ptr %254, i32 %250
  %256 = load i32, ptr %73, align 4
  store i32 %256, ptr %255, align 4
  %257 = load i16, ptr %76, align 4
  %258 = getelementptr i8, ptr %255, i32 4
  store i16 %257, ptr %258, align 2
  %259 = trunc i32 %82 to i8
  %260 = load ptr, ptr %79, align 64
  %261 = getelementptr %struct.igb_mac_addr, ptr %260, i32 %250, i32 1
  store i8 %259, ptr %261, align 1
  %262 = load ptr, ptr %79, align 64
  %263 = getelementptr %struct.igb_mac_addr, ptr %262, i32 %250, i32 2
  %264 = load i8, ptr %263, align 1
  %265 = or i8 %264, 2
  store i8 %265, ptr %263, align 1
  call fastcc void @igb_rar_set_index(ptr noundef %1, i32 noundef %250) #23
  br label %541

266:                                              ; preds = %219
  br i1 %227, label %271, label %267

267:                                              ; preds = %266
  %268 = getelementptr %struct.vf_data_storage, ptr %221, i32 %82, i32 9
  %269 = load i8, ptr %268, align 1, !range !15
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %367, label %271

271:                                              ; preds = %267, %266
  %272 = load i32, ptr %73, align 4
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %367

275:                                              ; preds = %271
  %276 = load i16, ptr %76, align 4
  %277 = zext i16 %276 to i32
  %278 = or i32 %272, %277
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %367, label %280

280:                                              ; preds = %275
  switch i32 %222, label %543 [
    i32 65536, label %281
    i32 131072, label %298
  ]

281:                                              ; preds = %280
  %282 = load ptr, ptr %77, align 4
  %283 = icmp eq ptr %282, %77
  br i1 %283, label %541, label %284

284:                                              ; preds = %281
  %285 = trunc i32 %82 to i8
  br label %286

286:                                              ; preds = %295, %284
  %287 = phi ptr [ %282, %284 ], [ %296, %295 ]
  %288 = getelementptr inbounds %struct.vf_mac_filter, ptr %287, i32 0, i32 1
  %289 = load i32, ptr %288, align 4
  %290 = icmp eq i32 %289, %82
  br i1 %290, label %291, label %295

291:                                              ; preds = %286
  store i32 -1, ptr %288, align 4
  %292 = getelementptr inbounds %struct.vf_mac_filter, ptr %287, i32 0, i32 2
  store i8 1, ptr %292, align 4
  %293 = getelementptr inbounds %struct.vf_mac_filter, ptr %287, i32 0, i32 3
  %294 = call fastcc i32 @igb_del_mac_filter_flags(ptr noundef %1, ptr noundef %293, i8 noundef zeroext %285, i8 noundef zeroext 0) #23
  br label %295

295:                                              ; preds = %291, %286
  %296 = load ptr, ptr %287, align 4
  %297 = icmp eq ptr %296, %77
  br i1 %297, label %541, label %286

298:                                              ; preds = %280
  %299 = load ptr, ptr %77, align 4
  %300 = icmp eq ptr %299, %77
  br i1 %300, label %367, label %304

301:                                              ; preds = %304
  %302 = load ptr, ptr %305, align 4
  %303 = icmp eq ptr %302, %77
  br i1 %303, label %367, label %304

304:                                              ; preds = %301, %298
  %305 = phi ptr [ %302, %301 ], [ %299, %298 ]
  %306 = getelementptr inbounds %struct.vf_mac_filter, ptr %305, i32 0, i32 2
  %307 = load i8, ptr %306, align 4, !range !15
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %301, label %309

309:                                              ; preds = %304
  %310 = icmp eq ptr %305, null
  br i1 %310, label %367, label %311

311:                                              ; preds = %309
  %312 = getelementptr inbounds %struct.vf_mac_filter, ptr %305, i32 0, i32 2
  store i8 0, ptr %312, align 4
  %313 = getelementptr inbounds %struct.vf_mac_filter, ptr %305, i32 0, i32 1
  store i32 %82, ptr %313, align 4
  %314 = getelementptr inbounds %struct.vf_mac_filter, ptr %305, i32 0, i32 3
  store i32 %272, ptr %314, align 4
  %315 = load i16, ptr %76, align 4
  %316 = getelementptr %struct.vf_mac_filter, ptr %305, i32 0, i32 3, i32 4
  store i16 %315, ptr %316, align 2
  %317 = trunc i32 %82 to i8
  %318 = load i16, ptr %78, align 4
  %319 = zext i16 %318 to i32
  %320 = load i32, ptr %67, align 16
  %321 = sub i32 %319, %320
  %322 = load i32, ptr %73, align 4
  %323 = load i16, ptr %76, align 4
  %324 = zext i16 %323 to i32
  %325 = or i32 %322, %324
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %363, label %327

327:                                              ; preds = %311
  %328 = icmp sgt i32 %321, 0
  br i1 %328, label %329, label %363

329:                                              ; preds = %327
  %330 = load ptr, ptr %79, align 64
  br label %331

331:                                              ; preds = %360, %329
  %332 = phi i32 [ 0, %329 ], [ %361, %360 ]
  %333 = getelementptr %struct.igb_mac_addr, ptr %330, i32 %332
  %334 = getelementptr %struct.igb_mac_addr, ptr %330, i32 %332, i32 2
  %335 = load i8, ptr %334, align 1
  %336 = zext i8 %335 to i32
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %351, label %339

339:                                              ; preds = %331
  %340 = and i32 %336, 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %360

342:                                              ; preds = %339
  %343 = load i32, ptr %333, align 4
  %344 = xor i32 %343, %322
  %345 = getelementptr i8, ptr %333, i32 4
  %346 = load i16, ptr %345, align 2
  %347 = xor i16 %346, %323
  %348 = zext i16 %347 to i32
  %349 = or i32 %344, %348
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %360

351:                                              ; preds = %342, %331
  store i32 %322, ptr %333, align 4
  %352 = load i16, ptr %76, align 4
  %353 = getelementptr i8, ptr %333, i32 4
  store i16 %352, ptr %353, align 2
  %354 = load ptr, ptr %79, align 64
  %355 = getelementptr %struct.igb_mac_addr, ptr %354, i32 %332, i32 1
  store i8 %317, ptr %355, align 1
  %356 = load ptr, ptr %79, align 64
  %357 = getelementptr %struct.igb_mac_addr, ptr %356, i32 %332, i32 2
  %358 = load i8, ptr %357, align 1
  %359 = or i8 %358, 2
  store i8 %359, ptr %357, align 1
  call fastcc void @igb_rar_set_index(ptr noundef %1, i32 noundef %332) #23
  br label %363

360:                                              ; preds = %342, %339
  %361 = add nuw nsw i32 %332, 1
  %362 = icmp eq i32 %361, %321
  br i1 %362, label %363, label %331

363:                                              ; preds = %360, %351, %327, %311
  %364 = phi i32 [ %332, %351 ], [ -22, %311 ], [ -28, %327 ], [ -28, %360 ]
  %365 = call i32 @llvm.smin.i32(i32 %364, i32 0) #23
  %366 = icmp eq i32 %365, -28
  br i1 %366, label %367, label %545

367:                                              ; preds = %363, %309, %301, %298, %275, %271, %267
  %368 = phi ptr [ @.str.150, %267 ], [ @.str.151, %271 ], [ @.str.151, %275 ], [ @.str.152, %298 ], [ @.str.152, %363 ], [ @.str.152, %309 ], [ @.str.152, %301 ]
  %369 = getelementptr inbounds %struct.pci_dev, ptr %220, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %369, ptr noundef nonnull %368, i32 noundef %82) #22
  br label %543

370:                                              ; preds = %217
  %371 = shl i32 %82, 2
  %372 = add i32 %371, 23248
  %373 = load volatile ptr, ptr %7, align 4
  %374 = icmp eq ptr %373, null
  br i1 %374, label %389, label %375, !prof !9

375:                                              ; preds = %370
  %376 = getelementptr i8, ptr %373, i32 %372
  %377 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %376) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %378 = icmp eq i32 %377, -1
  br i1 %378, label %379, label %389

379:                                              ; preds = %375
  %380 = icmp eq i32 %372, 0
  br i1 %380, label %384, label %381

381:                                              ; preds = %379
  %382 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %373) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %383 = icmp eq i32 %382, -1
  br i1 %383, label %384, label %389

384:                                              ; preds = %381, %379
  %385 = load ptr, ptr %75, align 64
  store ptr null, ptr %7, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %385, ptr noundef nonnull @.str) #22
  %386 = load ptr, ptr %72, align 4
  %387 = call zeroext i1 @pci_device_is_present(ptr noundef %386) #23
  br i1 %387, label %388, label %389, !prof !9

388:                                              ; preds = %384
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %372) #23
  br label %389

389:                                              ; preds = %388, %384, %381, %375, %370
  %390 = phi i32 [ -1, %370 ], [ -1, %384 ], [ -1, %388 ], [ -1, %381 ], [ %377, %375 ]
  %391 = load ptr, ptr %71, align 4
  %392 = getelementptr %struct.vf_data_storage, ptr %391, i32 %82, i32 3
  %393 = load i32, ptr %392, align 4
  %394 = and i32 %393, -7
  store i32 %394, ptr %392, align 4
  %395 = and i32 %390, -369098753
  %396 = load i32, ptr %5, align 4
  %397 = and i32 %396, 131072
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %404, label %399

399:                                              ; preds = %389
  %400 = or i32 %395, 268435456
  %401 = or i32 %394, 4
  store i32 %401, ptr %392, align 4
  %402 = load i32, ptr %5, align 4
  %403 = and i32 %402, -131073
  store i32 %403, ptr %5, align 4
  br label %423

404:                                              ; preds = %389
  %405 = getelementptr %struct.vf_data_storage, ptr %391, i32 %82, i32 2
  %406 = load i16, ptr %405, align 2
  %407 = icmp ugt i16 %406, 30
  br i1 %407, label %408, label %410

408:                                              ; preds = %404
  %409 = or i32 %395, 268435456
  br label %423

410:                                              ; preds = %404
  %411 = icmp eq i16 %406, 0
  br i1 %411, label %423, label %412

412:                                              ; preds = %412, %410
  %413 = phi i32 [ %417, %412 ], [ 0, %410 ]
  %414 = getelementptr %struct.vf_data_storage, ptr %391, i32 %82, i32 1, i32 %413
  %415 = load i16, ptr %414, align 2
  %416 = zext i16 %415 to i32
  call void @igb_mta_set(ptr noundef %6, i32 noundef %416) #23
  %417 = add nuw nsw i32 %413, 1
  %418 = load i16, ptr %405, align 2
  %419 = zext i16 %418 to i32
  %420 = icmp ult i32 %417, %419
  br i1 %420, label %412, label %421

421:                                              ; preds = %412
  %422 = or i32 %395, 33554432
  br label %423

423:                                              ; preds = %421, %410, %408, %399
  %424 = phi i32 [ %400, %399 ], [ %409, %408 ], [ %395, %410 ], [ %422, %421 ]
  %425 = load volatile ptr, ptr %7, align 4
  %426 = icmp eq ptr %425, null
  br i1 %426, label %429, label %427, !prof !9

427:                                              ; preds = %423
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !192
  call void @arm_heavy_mb() #23
  %428 = getelementptr i8, ptr %425, i32 %372
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %428, i32 %424) #23, !srcloc !14
  br label %429

429:                                              ; preds = %427, %423
  %430 = load i32, ptr %5, align 4
  %431 = and i32 %430, 16711680
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %541, label %543

433:                                              ; preds = %217
  %434 = lshr i32 %117, 16
  %435 = and i32 %434, 255
  %436 = load ptr, ptr %71, align 4
  %437 = trunc i32 %435 to i16
  %438 = getelementptr %struct.vf_data_storage, ptr %436, i32 %82, i32 2
  store i16 %437, ptr %438, align 2
  %439 = call i32 @llvm.umin.i32(i32 %435, i32 30) #23
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %448, label %441

441:                                              ; preds = %441, %433
  %442 = phi i32 [ %446, %441 ], [ 0, %433 ]
  %443 = getelementptr i16, ptr %73, i32 %442
  %444 = load i16, ptr %443, align 2
  %445 = getelementptr %struct.vf_data_storage, ptr %436, i32 %82, i32 1, i32 %442
  store i16 %444, ptr %445, align 2
  %446 = add nuw nsw i32 %442, 1
  %447 = icmp eq i32 %446, %439
  br i1 %447, label %448, label %441

448:                                              ; preds = %441, %433
  %449 = load ptr, ptr %75, align 64
  call void @igb_set_rx_mode(ptr noundef %449) #23
  br label %541

450:                                              ; preds = %217
  %451 = load i32, ptr %73, align 4
  %452 = shl i32 %82, 2
  %453 = add i32 %452, 23248
  %454 = load volatile ptr, ptr %7, align 4
  %455 = icmp eq ptr %454, null
  br i1 %455, label %470, label %456, !prof !9

456:                                              ; preds = %450
  %457 = getelementptr i8, ptr %454, i32 %453
  %458 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %457) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %459 = icmp eq i32 %458, -1
  br i1 %459, label %460, label %470

460:                                              ; preds = %456
  %461 = icmp eq i32 %453, 0
  br i1 %461, label %465, label %462

462:                                              ; preds = %460
  %463 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %454) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %464 = icmp eq i32 %463, -1
  br i1 %464, label %465, label %470

465:                                              ; preds = %462, %460
  %466 = load ptr, ptr %75, align 64
  store ptr null, ptr %7, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %466, ptr noundef nonnull @.str) #22
  %467 = load ptr, ptr %72, align 4
  %468 = call zeroext i1 @pci_device_is_present(ptr noundef %467) #23
  br i1 %468, label %469, label %470, !prof !9

469:                                              ; preds = %465
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %453) #23
  br label %470

470:                                              ; preds = %469, %465, %462, %456, %450
  %471 = phi i32 [ -1, %450 ], [ -1, %465 ], [ -1, %469 ], [ -1, %462 ], [ %458, %456 ]
  %472 = load volatile ptr, ptr %7, align 4
  %473 = icmp eq ptr %472, null
  br i1 %473, label %541, label %474, !prof !9

474:                                              ; preds = %470
  %475 = and i32 %471, -81920
  %476 = call i32 @llvm.smin.i32(i32 %451, i32 9728) #23
  %477 = or i32 %476, %475
  %478 = or i32 %477, 65536
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !193
  call void @arm_heavy_mb() #23
  %479 = getelementptr i8, ptr %472, i32 %453
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %479, i32 %478) #23, !srcloc !14
  br label %541

480:                                              ; preds = %217
  %481 = getelementptr %struct.vf_data_storage, ptr %100, i32 %82, i32 5
  %482 = load i16, ptr %481, align 4
  %483 = icmp eq i16 %482, 0
  br i1 %483, label %486, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %struct.pci_dev, ptr %99, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %485, ptr noundef nonnull @.str.146, i32 noundef %82) #22
  br label %543

486:                                              ; preds = %480
  %487 = load i32, ptr %73, align 4
  %488 = and i32 %487, 4095
  %489 = load ptr, ptr %71, align 4
  %490 = getelementptr %struct.vf_data_storage, ptr %489, i32 %82, i32 5
  %491 = load i16, ptr %490, align 4
  %492 = icmp eq i16 %491, 0
  br i1 %492, label %493, label %543

493:                                              ; preds = %486
  %494 = icmp ne i32 %488, 0
  %495 = and i32 %117, 16711680
  %496 = icmp ne i32 %495, 0
  %497 = select i1 %494, i1 true, i1 %496
  br i1 %497, label %498, label %541

498:                                              ; preds = %493
  %499 = call fastcc i32 @igb_set_vf_vlan(ptr noundef %1, i32 noundef %488, i1 noundef zeroext %496, i32 noundef %82) #23
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %543

501:                                              ; preds = %498
  %502 = load i32, ptr %74, align 4
  %503 = icmp ult i32 %502, 2
  br i1 %503, label %541, label %504

504:                                              ; preds = %501
  %505 = icmp eq i32 %502, 4
  %506 = shl i32 %82, 6
  %507 = add i32 %506, 49208
  %508 = shl i32 %82, 2
  %509 = add i32 %508, 23248
  %510 = select i1 %505, i32 %507, i32 %509
  %511 = load volatile ptr, ptr %7, align 4
  %512 = icmp eq ptr %511, null
  br i1 %512, label %527, label %513, !prof !9

513:                                              ; preds = %504
  %514 = getelementptr i8, ptr %511, i32 %510
  %515 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %514) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %516 = icmp eq i32 %515, -1
  br i1 %516, label %517, label %527

517:                                              ; preds = %513
  %518 = icmp eq i32 %510, 0
  br i1 %518, label %522, label %519

519:                                              ; preds = %517
  %520 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %511) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %521 = icmp eq i32 %520, -1
  br i1 %521, label %522, label %527

522:                                              ; preds = %519, %517
  %523 = load ptr, ptr %75, align 64
  store ptr null, ptr %7, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %523, ptr noundef nonnull @.str) #22
  %524 = load ptr, ptr %72, align 4
  %525 = call zeroext i1 @pci_device_is_present(ptr noundef %524) #23
  br i1 %525, label %526, label %527, !prof !9

526:                                              ; preds = %522
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %510) #23
  br label %527

527:                                              ; preds = %526, %522, %519, %513, %504
  %528 = phi i32 [ -1, %504 ], [ -1, %522 ], [ -1, %526 ], [ -1, %519 ], [ %515, %513 ]
  %529 = load volatile ptr, ptr %7, align 4
  %530 = icmp eq ptr %529, null
  br i1 %530, label %541, label %531, !prof !9

531:                                              ; preds = %527
  %532 = and i32 %528, -1073741825
  %533 = select i1 %494, i32 1073741824, i32 0
  %534 = or i32 %532, %533
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !146
  call void @arm_heavy_mb() #23
  %535 = getelementptr i8, ptr %529, i32 %510
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %535, i32 %534) #23, !srcloc !14
  br label %541

536:                                              ; preds = %217
  %537 = getelementptr inbounds %struct.pci_dev, ptr %99, i32 0, i32 44
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %537, ptr noundef nonnull @.str.147, i32 noundef %117) #22
  br label %543

538:                                              ; preds = %210, %114
  %539 = phi i32 [ %115, %114 ], [ %117, %210 ]
  %540 = or i32 %539, 1073741824
  br label %554

541:                                              ; preds = %531, %527, %501, %493, %474, %470, %448, %429, %295, %281, %246
  %542 = load i32, ptr %5, align 4
  br label %548

543:                                              ; preds = %536, %498, %486, %484, %429, %367, %280, %244, %233
  %544 = load i32, ptr %5, align 4
  br label %550

545:                                              ; preds = %363
  %546 = load i32, ptr %5, align 4
  %547 = icmp sgt i32 %364, -1
  br i1 %547, label %548, label %550

548:                                              ; preds = %545, %541
  %549 = phi i32 [ %542, %541 ], [ %546, %545 ]
  br label %550

550:                                              ; preds = %548, %545, %543
  %551 = phi i32 [ %549, %548 ], [ %546, %545 ], [ %544, %543 ]
  %552 = phi i32 [ -1610612736, %548 ], [ 1610612736, %545 ], [ 1610612736, %543 ]
  %553 = or i32 %552, %551
  br label %554

554:                                              ; preds = %550, %538
  %555 = phi i32 [ %540, %538 ], [ %553, %550 ]
  store i32 %555, ptr %5, align 4
  %556 = call i32 @igb_write_mbx(ptr noundef %6, ptr noundef nonnull %5, i16 noundef zeroext 1, i16 noundef zeroext %83) #23
  br label %559

557:                                              ; preds = %210, %116, %103
  %558 = call i32 @igb_unlock_mbx(ptr noundef %6, i16 noundef zeroext %83) #23
  br label %559

559:                                              ; preds = %557, %554, %203
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #23
  br label %560

560:                                              ; preds = %559, %95
  %561 = call i32 @igb_check_for_ack(ptr noundef %6, i16 noundef zeroext %83) #23
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %580

563:                                              ; preds = %560
  %564 = load ptr, ptr %71, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #23
  store i32 1073741824, ptr %3, align 4
  %565 = getelementptr %struct.vf_data_storage, ptr %564, i32 %82, i32 3
  %566 = load i32, ptr %565, align 4
  %567 = and i32 %566, 1
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %579

569:                                              ; preds = %563
  %570 = getelementptr %struct.vf_data_storage, ptr %564, i32 %82, i32 4
  %571 = load i32, ptr %570, align 4
  %572 = add i32 %571, 200
  %573 = load volatile i32, ptr @jiffies, align 64
  %574 = sub i32 %572, %573
  %575 = icmp slt i32 %574, 0
  br i1 %575, label %576, label %579

576:                                              ; preds = %569
  %577 = call i32 @igb_write_mbx(ptr noundef %6, ptr noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext %83) #23
  %578 = load volatile i32, ptr @jiffies, align 64
  store i32 %578, ptr %570, align 4
  br label %579

579:                                              ; preds = %576, %569, %563
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #23
  br label %580

580:                                              ; preds = %579, %560
  %581 = add nuw i32 %82, 1
  %582 = load i32, ptr %67, align 16
  %583 = icmp ult i32 %581, %582
  br i1 %583, label %81, label %584

584:                                              ; preds = %580, %66, %63
  %585 = and i32 %33, 4
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %598, label %587

587:                                              ; preds = %584
  %588 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 37, i32 4, i32 20
  store i8 1, ptr %588, align 1
  %589 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 3
  %590 = load volatile i32, ptr %589, align 4
  %591 = and i32 %590, 4
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %598

593:                                              ; preds = %587
  %594 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 19
  %595 = load volatile i32, ptr @jiffies, align 64
  %596 = add i32 %595, 1
  %597 = call i32 @mod_timer(ptr noundef %594, i32 noundef %596) #23
  br label %598

598:                                              ; preds = %593, %587, %584
  %599 = and i32 %33, 524288
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %602, label %601

601:                                              ; preds = %598
  call fastcc void @igb_tsync_interrupt(ptr noundef %1)
  br label %602

602:                                              ; preds = %601, %598
  %603 = load volatile ptr, ptr %7, align 4
  %604 = icmp eq ptr %603, null
  br i1 %604, label %609, label %605, !prof !9

605:                                              ; preds = %602
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !194
  call void @arm_heavy_mb() #23
  %606 = getelementptr inbounds %struct.igb_adapter, ptr %1, i32 0, i32 47
  %607 = load i32, ptr %606, align 8
  %608 = getelementptr i8, ptr %603, i32 5412
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %608, i32 %607) #23, !srcloc !14
  br label %609

609:                                              ; preds = %605, %602
  ret i32 1
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_msix_ring(i32 noundef %0, ptr noundef %1) #4 {
  %3 = getelementptr inbounds %struct.igb_q_vector, ptr %1, i32 0, i32 4
  %4 = load i8, ptr %3, align 2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.igb_q_vector, ptr %1, i32 0, i32 3
  %8 = load i16, ptr %7, align 4
  %9 = and i16 %8, 32764
  %10 = load ptr, ptr %1, align 64
  %11 = icmp eq i16 %9, 0
  %12 = select i1 %11, i16 4, i16 %9
  %13 = zext i16 %12 to i32
  %14 = getelementptr inbounds %struct.igb_adapter, ptr %10, i32 0, i32 37, i32 4, i32 3
  %15 = load i32, ptr %14, align 16
  %16 = icmp eq i32 %15, 1
  %17 = shl nuw nsw i32 %13, 16
  %18 = select i1 %16, i32 %17, i32 -2147483648
  %19 = or i32 %18, %13
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !189
  tail call void @arm_heavy_mb() #23
  %20 = getelementptr inbounds %struct.igb_q_vector, ptr %1, i32 0, i32 5
  %21 = load ptr, ptr %20, align 16
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %21, i32 %19) #23, !srcloc !14
  store i8 0, ptr %3, align 2
  br label %22

22:                                               ; preds = %6, %2
  %23 = getelementptr inbounds %struct.igb_q_vector, ptr %1, i32 0, i32 8
  %24 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %23) #23
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @__napi_schedule(ptr noundef %23) #23
  br label %26

26:                                               ; preds = %25, %22
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_tsync_interrupt(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca %struct.ptp_clock_event, align 8
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %4 = load volatile ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %20, label %6, !prof !9

6:                                                ; preds = %1
  %7 = getelementptr i8, ptr %4, i32 46700
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %7) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %4) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 64
  store ptr null, ptr %3, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %15, ptr noundef nonnull @.str) #22
  %16 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %17 = load ptr, ptr %16, align 4
  %18 = tail call zeroext i1 @pci_device_is_present(ptr noundef %17) #23
  br i1 %18, label %19, label %20, !prof !9

19:                                               ; preds = %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 46700) #23
  br label %20

20:                                               ; preds = %19, %13, %10, %1
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(24) %2, i8 0, i32 24, i1 false), !annotation !24
  br label %24

21:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(24) %2, i8 0, i32 24, i1 false), !annotation !24
  %22 = and i32 %8, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %21, %20
  %25 = phi i32 [ -1, %20 ], [ %8, %21 ]
  store i32 2, ptr %2, align 8
  %26 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 57, i32 7
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 56
  %31 = load ptr, ptr %30, align 8
  call void @ptp_clock_event(ptr noundef %31, ptr noundef nonnull %2) #23
  br label %32

32:                                               ; preds = %29, %24, %21
  %33 = phi i32 [ %8, %21 ], [ %25, %29 ], [ %25, %24 ]
  %34 = phi i32 [ 0, %21 ], [ 1, %29 ], [ 1, %24 ]
  %35 = and i32 %33, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 59
  %39 = load ptr, ptr @system_wq, align 4
  %40 = call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %39, ptr noundef %38) #23
  %41 = or i32 %34, 2
  br label %42

42:                                               ; preds = %37, %32
  %43 = phi i32 [ %41, %37 ], [ %34, %32 ]
  %44 = and i32 %33, 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  call fastcc void @igb_perout(ptr noundef %0, i32 noundef 0)
  %47 = or i32 %43, 8
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i32 [ %47, %46 ], [ %43, %42 ]
  %50 = and i32 %33, 16
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  call fastcc void @igb_perout(ptr noundef %0, i32 noundef 1)
  %53 = or i32 %49, 16
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi i32 [ %53, %52 ], [ %49, %48 ]
  %56 = and i32 %33, 32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  call fastcc void @igb_extts(ptr noundef %0, i32 noundef 0)
  %59 = or i32 %55, 32
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi i32 [ %59, %58 ], [ %55, %54 ]
  %62 = and i32 %33, 64
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  call fastcc void @igb_extts(ptr noundef %0, i32 noundef 1)
  %65 = or i32 %61, 64
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi i32 [ %65, %64 ], [ %61, %60 ]
  %68 = load volatile ptr, ptr %3, align 4
  %69 = icmp eq ptr %68, null
  br i1 %69, label %72, label %70, !prof !9

70:                                               ; preds = %66
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !195
  call void @arm_heavy_mb() #23
  %71 = getelementptr i8, ptr %68, i32 46700
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %71, i32 %67) #23, !srcloc !14
  br label %72

72:                                               ; preds = %70, %66
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_check_for_rst(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_check_for_msg(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_check_for_ack(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_vf_reset(ptr noundef %0, i32 noundef %1) unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 51
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr %struct.vf_data_storage, ptr %4, i32 %1, i32 3
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 8
  store i32 %7, ptr %5, align 4
  %8 = load volatile i32, ptr @jiffies, align 64
  %9 = getelementptr %struct.vf_data_storage, ptr %4, i32 %1, i32 4
  store i32 %8, ptr %9, align 4
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37
  %11 = add i32 %1, 12
  %12 = shl nuw i32 1, %11
  %13 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 50
  %14 = load i32, ptr %13, align 16
  %15 = add i32 %14, 12
  %16 = shl nuw i32 1, %15
  %17 = and i32 %16, 1044480
  %18 = xor i32 %17, 1044480
  %19 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %20 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %21 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %22 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 55
  %23 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 0, i32 12
  %24 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 4
  br label %25

25:                                               ; preds = %78, %2
  %26 = phi i32 [ 31, %2 ], [ %79, %78 ]
  %27 = shl i32 %26, 2
  %28 = add nuw nsw i32 %27, 23808
  %29 = load volatile ptr, ptr %19, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %43, label %31, !prof !9

31:                                               ; preds = %25
  %32 = getelementptr i8, ptr %29, i32 %28
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %32) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %29) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = load ptr, ptr %20, align 64
  store ptr null, ptr %19, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %39, ptr noundef nonnull @.str) #22
  %40 = load ptr, ptr %21, align 4
  %41 = tail call zeroext i1 @pci_device_is_present(ptr noundef %40) #23
  br i1 %41, label %42, label %43, !prof !9

42:                                               ; preds = %38
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %28) #23
  br label %43

43:                                               ; preds = %42, %38, %35, %31, %25
  %44 = phi i32 [ -1, %25 ], [ -1, %38 ], [ -1, %42 ], [ -1, %35 ], [ %33, %31 ]
  %45 = and i32 %44, %12
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = xor i32 %44, %12
  %49 = and i32 %48, %18
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %72

51:                                               ; preds = %47
  %52 = and i32 %48, 1044480
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %67

54:                                               ; preds = %51
  %55 = and i32 %48, 31
  %56 = shl nuw i32 1, %55
  %57 = load ptr, ptr %22, align 4
  %58 = lshr i32 %48, 5
  %59 = and i32 %58, 127
  %60 = getelementptr i32, ptr %57, i32 %59
  %61 = load i32, ptr %60, align 4
  %62 = and i32 %61, %56
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %54
  %65 = load ptr, ptr %23, align 4
  %66 = xor i32 %61, %56
  tail call void %65(ptr noundef %10, i32 noundef %59, i32 noundef %66) #23
  br label %67

67:                                               ; preds = %64, %54, %51
  %68 = load i32, ptr %24, align 4
  %69 = and i32 %68, 32768
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %52
  br label %72

72:                                               ; preds = %67, %47
  %73 = phi i32 [ %48, %47 ], [ %71, %67 ]
  %74 = load volatile ptr, ptr %19, align 4
  %75 = icmp eq ptr %74, null
  br i1 %75, label %78, label %76, !prof !9

76:                                               ; preds = %72
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !196
  tail call void @arm_heavy_mb() #23
  %77 = getelementptr i8, ptr %74, i32 %28
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %77, i32 %73) #23, !srcloc !14
  br label %78

78:                                               ; preds = %76, %72, %43
  %79 = add nsw i32 %26, -1
  %80 = icmp eq i32 %26, 0
  br i1 %80, label %81, label %25

81:                                               ; preds = %78
  %82 = getelementptr %struct.vf_data_storage, ptr %4, i32 %1, i32 5
  %83 = load i16, ptr %82, align 4
  %84 = zext i16 %83 to i32
  %85 = tail call fastcc i32 @igb_set_vf_vlan(ptr noundef %0, i32 noundef %84, i1 noundef zeroext true, i32 noundef %1)
  %86 = load i16, ptr %82, align 4
  %87 = zext i16 %86 to i32
  %88 = getelementptr %struct.vf_data_storage, ptr %4, i32 %1, i32 6
  %89 = load i16, ptr %88, align 2
  %90 = zext i16 %89 to i32
  %91 = shl nuw nsw i32 %90, 13
  %92 = or i32 %91, %87
  %93 = icmp eq i32 %92, 0
  %94 = load volatile ptr, ptr %19, align 4
  %95 = icmp eq ptr %94, null
  br i1 %93, label %102, label %96

96:                                               ; preds = %81
  br i1 %95, label %107, label %97, !prof !9

97:                                               ; preds = %96
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !144
  tail call void @arm_heavy_mb() #23
  %98 = or i32 %92, 1073741824
  %99 = shl i32 %1, 2
  %100 = add i32 %99, 14080
  %101 = getelementptr i8, ptr %94, i32 %100
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %101, i32 %98) #23, !srcloc !14
  br label %107

102:                                              ; preds = %81
  br i1 %95, label %107, label %103, !prof !9

103:                                              ; preds = %102
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !145
  tail call void @arm_heavy_mb() #23
  %104 = shl i32 %1, 2
  %105 = add i32 %104, 14080
  %106 = getelementptr i8, ptr %94, i32 %105
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %106, i32 0) #23, !srcloc !14
  br label %107

107:                                              ; preds = %103, %102, %97, %96
  %108 = load i16, ptr %82, align 4
  %109 = icmp eq i16 %108, 0
  tail call fastcc void @igb_set_vmolr(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %109)
  %110 = load i16, ptr %82, align 4
  %111 = icmp eq i16 %110, 0
  %112 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %113 = load i32, ptr %112, align 4
  %114 = icmp ult i32 %113, 2
  br i1 %114, label %147, label %115

115:                                              ; preds = %107
  %116 = icmp eq i32 %113, 4
  %117 = shl i32 %1, 6
  %118 = add i32 %117, 49208
  %119 = shl i32 %1, 2
  %120 = add i32 %119, 23248
  %121 = select i1 %116, i32 %118, i32 %120
  %122 = load volatile ptr, ptr %19, align 4
  %123 = icmp eq ptr %122, null
  br i1 %123, label %138, label %124, !prof !9

124:                                              ; preds = %115
  %125 = getelementptr i8, ptr %122, i32 %121
  %126 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %125) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %127 = icmp eq i32 %126, -1
  br i1 %127, label %128, label %138

128:                                              ; preds = %124
  %129 = icmp eq i32 %121, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %128
  %131 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %122) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %132 = icmp eq i32 %131, -1
  br i1 %132, label %133, label %138

133:                                              ; preds = %130, %128
  %134 = load ptr, ptr %20, align 64
  store ptr null, ptr %19, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %134, ptr noundef nonnull @.str) #22
  %135 = load ptr, ptr %21, align 4
  %136 = tail call zeroext i1 @pci_device_is_present(ptr noundef %135) #23
  br i1 %136, label %137, label %138, !prof !9

137:                                              ; preds = %133
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %121) #23
  br label %138

138:                                              ; preds = %137, %133, %130, %124, %115
  %139 = phi i32 [ -1, %115 ], [ -1, %133 ], [ -1, %137 ], [ -1, %130 ], [ %126, %124 ]
  %140 = load volatile ptr, ptr %19, align 4
  %141 = icmp eq ptr %140, null
  br i1 %141, label %147, label %142, !prof !9

142:                                              ; preds = %138
  %143 = and i32 %139, -1073741825
  %144 = select i1 %111, i32 0, i32 1073741824
  %145 = or i32 %143, %144
  tail call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !146
  tail call void @arm_heavy_mb() #23
  %146 = getelementptr i8, ptr %140, i32 %121
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %146, i32 %145) #23, !srcloc !14
  br label %147

147:                                              ; preds = %142, %138, %107
  %148 = load ptr, ptr %3, align 4
  %149 = getelementptr %struct.vf_data_storage, ptr %148, i32 %1, i32 2
  store i16 0, ptr %149, align 2
  %150 = load ptr, ptr %20, align 64
  tail call void @igb_set_rx_mode(ptr noundef %150)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_read_mbx(ptr noundef, ptr noundef, i16 noundef zeroext, i16 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_write_mbx(ptr noundef, ptr noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_unlock_mbx(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ptp_clock_event(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_perout(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = alloca %struct.timespec64, align 8
  %4 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 56
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @ptp_find_pin(ptr noundef %5, i32 noundef 2, i32 noundef %1) #23
  %7 = icmp ugt i32 %6, 1
  br i1 %7, label %222, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 66
  tail call void @_raw_spin_lock(ptr noundef %9) #23
  %10 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = add i32 %11, -3
  %13 = icmp ult i32 %12, 3
  br i1 %13, label %14, label %154

14:                                               ; preds = %8
  %15 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 74, i32 %6, i32 1
  %16 = load i64, ptr %15, align 8
  %17 = icmp sgt i64 %16, 9223372035
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = icmp slt i64 %16, -9223372035
  br i1 %19, label %26, label %20

20:                                               ; preds = %18
  %21 = mul nsw i64 %16, 1000000000
  %22 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 74, i32 %6, i32 1, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = sext i32 %23 to i64
  %25 = add i64 %21, %24
  br label %26

26:                                               ; preds = %20, %18, %14
  %27 = phi i64 [ %25, %20 ], [ 9223372036854775807, %14 ], [ -9223372036854775808, %18 ]
  %28 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %29 = load volatile ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %45, label %31, !prof !9

31:                                               ; preds = %26
  %32 = getelementptr i8, ptr %29, i32 46840
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %32) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %45

35:                                               ; preds = %31
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %29) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %40 = load ptr, ptr %39, align 64
  store ptr null, ptr %28, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %40, ptr noundef nonnull @.str) #22
  %41 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %42 = load ptr, ptr %41, align 4
  %43 = tail call zeroext i1 @pci_device_is_present(ptr noundef %42) #23
  br i1 %43, label %44, label %45, !prof !9

44:                                               ; preds = %38
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 46840) #23
  br label %45

45:                                               ; preds = %44, %38, %35, %31, %26
  %46 = load volatile ptr, ptr %28, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %62, label %48, !prof !9

48:                                               ; preds = %45
  %49 = getelementptr i8, ptr %46, i32 46592
  %50 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %49) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %62

52:                                               ; preds = %48
  %53 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %46) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %62

55:                                               ; preds = %52
  %56 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %57 = load ptr, ptr %56, align 64
  store ptr null, ptr %28, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %57, ptr noundef nonnull @.str) #22
  %58 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %59 = load ptr, ptr %58, align 4
  %60 = tail call zeroext i1 @pci_device_is_present(ptr noundef %59) #23
  br i1 %60, label %61, label %62, !prof !9

61:                                               ; preds = %55
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 46592) #23
  br label %62

62:                                               ; preds = %61, %55, %52, %48, %45
  %63 = phi i32 [ -1, %45 ], [ -1, %55 ], [ -1, %61 ], [ -1, %52 ], [ %50, %48 ]
  %64 = load volatile ptr, ptr %28, align 4
  %65 = icmp eq ptr %64, null
  br i1 %65, label %80, label %66, !prof !9

66:                                               ; preds = %62
  %67 = getelementptr i8, ptr %64, i32 46596
  %68 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %67) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %80

70:                                               ; preds = %66
  %71 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %64) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %80

73:                                               ; preds = %70
  %74 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %75 = load ptr, ptr %74, align 64
  store ptr null, ptr %28, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %75, ptr noundef nonnull @.str) #22
  %76 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %77 = load ptr, ptr %76, align 4
  %78 = tail call zeroext i1 @pci_device_is_present(ptr noundef %77) #23
  br i1 %78, label %79, label %80, !prof !9

79:                                               ; preds = %73
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 46596) #23
  br label %80

80:                                               ; preds = %79, %73, %70, %66, %62
  %81 = phi i32 [ -1, %62 ], [ -1, %73 ], [ -1, %79 ], [ -1, %70 ], [ %68, %66 ]
  %82 = and i32 %81, 255
  %83 = zext i32 %82 to i64
  %84 = shl nuw nsw i64 %83, 32
  %85 = zext i32 %63 to i64
  %86 = or i64 %84, %85
  %87 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 68
  %88 = tail call i64 @timecounter_cyc2time(ptr noundef %87, i64 noundef %86) #23
  %89 = icmp eq i32 %1, 1
  %90 = select i1 %89, i32 524288, i32 262144
  %91 = load volatile ptr, ptr %28, align 4
  %92 = icmp eq ptr %91, null
  br i1 %92, label %103, label %93, !prof !9

93:                                               ; preds = %80
  %94 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %91) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %96, label %103

96:                                               ; preds = %93
  %97 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %98 = load ptr, ptr %97, align 64
  store ptr null, ptr %28, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %98, ptr noundef nonnull @.str) #22
  %99 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %100 = load ptr, ptr %99, align 4
  %101 = tail call zeroext i1 @pci_device_is_present(ptr noundef %100) #23
  br i1 %101, label %102, label %103, !prof !9

102:                                              ; preds = %96
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 0) #23
  br label %103

103:                                              ; preds = %102, %96, %93, %80
  %104 = phi i32 [ -1, %80 ], [ -1, %96 ], [ -1, %102 ], [ %94, %93 ]
  %105 = and i32 %104, %90
  %106 = icmp eq i32 %105, 0
  %107 = trunc i64 %27 to i32
  %108 = icmp ult i64 %88, 4294967296
  br i1 %108, label %109, label %112, !prof !80

109:                                              ; preds = %103
  %110 = trunc i64 %88 to i32
  %111 = urem i32 %110, %107
  br label %117

112:                                              ; preds = %103
  %113 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %107, i64 %88) #25, !srcloc !197
  %114 = extractvalue { i64, i64 } %113, 0
  %115 = lshr i64 %114, 32
  %116 = trunc i64 %115 to i32
  br label %117

117:                                              ; preds = %112, %109
  %118 = phi i32 [ %111, %109 ], [ %116, %112 ]
  %119 = zext i32 %118 to i64
  %120 = sub i64 %27, %119
  %121 = add i64 %120, %86
  %122 = shl i32 %107, 1
  %123 = icmp ult i64 %88, 4294967296
  br i1 %123, label %124, label %127, !prof !80

124:                                              ; preds = %117
  %125 = trunc i64 %88 to i32
  %126 = urem i32 %125, %122
  br label %132

127:                                              ; preds = %117
  %128 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %122, i64 %88) #25, !srcloc !197
  %129 = extractvalue { i64, i64 } %128, 0
  %130 = lshr i64 %129, 32
  %131 = trunc i64 %130 to i32
  br label %132

132:                                              ; preds = %127, %124
  %133 = phi i32 [ %126, %124 ], [ %131, %127 ]
  %134 = zext i32 %133 to i64
  %135 = icmp sgt i64 %27, %134
  %136 = trunc i64 %121 to i32
  %137 = lshr i64 %121, 32
  %138 = trunc i64 %137 to i32
  br i1 %135, label %139, label %140

139:                                              ; preds = %132
  br i1 %106, label %141, label %149

140:                                              ; preds = %132
  br i1 %106, label %149, label %141

141:                                              ; preds = %140, %139
  %142 = phi ptr [ @.str.153, %139 ], [ @.str.154, %140 ]
  %143 = add i64 %121, %27
  %144 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 73, i32 %6
  %145 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %142, ptr noundef %144) #22
  %146 = trunc i64 %143 to i32
  %147 = lshr i64 %143, 32
  %148 = trunc i64 %147 to i32
  br label %149

149:                                              ; preds = %141, %140, %139
  %150 = phi i32 [ %136, %139 ], [ %136, %140 ], [ %146, %141 ]
  %151 = phi i32 [ %138, %139 ], [ %138, %140 ], [ %148, %141 ]
  %152 = and i32 %151, 255
  %153 = zext i32 %152 to i64
  br label %173

154:                                              ; preds = %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #23
  %155 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 74, i32 %6
  %156 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 74, i32 %6, i32 1
  %157 = load i64, ptr %155, align 8
  %158 = getelementptr inbounds [2 x i64], ptr %155, i32 0, i32 1
  %159 = load i64, ptr %158, align 8
  %160 = load i64, ptr %156, align 8
  %161 = getelementptr inbounds [2 x i64], ptr %156, i32 0, i32 1
  %162 = load i64, ptr %161, align 8
  %163 = trunc i64 %159 to i32
  %164 = trunc i64 %162 to i32
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i32 16, i1 false) #23, !alias.scope !198, !annotation !24
  %165 = add i64 %160, %157
  %166 = add i32 %164, %163
  %167 = sext i32 %166 to i64
  call void @set_normalized_timespec64(ptr noundef nonnull %3, i64 noundef %165, i64 noundef %167) #23
  %168 = load i64, ptr %3, align 8
  %169 = getelementptr inbounds i8, ptr %3, i32 8
  %170 = load i32, ptr %169, align 8
  %171 = getelementptr inbounds i8, ptr %3, i32 12
  %172 = load i32, ptr %171, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #23
  br label %173

173:                                              ; preds = %154, %149
  %174 = phi i32 [ 0, %149 ], [ %172, %154 ]
  %175 = phi i32 [ %150, %149 ], [ %170, %154 ]
  %176 = phi i64 [ %153, %149 ], [ %168, %154 ]
  %177 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %178 = load volatile ptr, ptr %177, align 4
  %179 = icmp eq ptr %178, null
  br i1 %179, label %184, label %180, !prof !9

180:                                              ; preds = %173
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !201
  call void @arm_heavy_mb() #23
  %181 = icmp eq i32 %1, 1
  %182 = select i1 %181, i32 46668, i32 46660
  %183 = getelementptr i8, ptr %178, i32 %182
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %183, i32 %175) #23, !srcloc !14
  br label %184

184:                                              ; preds = %180, %173
  %185 = load volatile ptr, ptr %177, align 4
  %186 = icmp eq ptr %185, null
  br i1 %186, label %192, label %187, !prof !9

187:                                              ; preds = %184
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !202
  call void @arm_heavy_mb() #23
  %188 = trunc i64 %176 to i32
  %189 = icmp eq i32 %1, 1
  %190 = select i1 %189, i32 46672, i32 46664
  %191 = getelementptr i8, ptr %185, i32 %190
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %191, i32 %188) #23, !srcloc !14
  br label %192

192:                                              ; preds = %187, %184
  %193 = load volatile ptr, ptr %177, align 4
  %194 = icmp eq ptr %193, null
  br i1 %194, label %209, label %195, !prof !9

195:                                              ; preds = %192
  %196 = getelementptr i8, ptr %193, i32 46656
  %197 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %196) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %198 = icmp eq i32 %197, -1
  br i1 %198, label %199, label %209

199:                                              ; preds = %195
  %200 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %193) #23, !srcloc !10
  call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %202, label %209

202:                                              ; preds = %199
  %203 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %204 = load ptr, ptr %203, align 64
  store ptr null, ptr %177, align 4
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %204, ptr noundef nonnull @.str) #22
  %205 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %206 = load ptr, ptr %205, align 4
  %207 = call zeroext i1 @pci_device_is_present(ptr noundef %206) #23
  br i1 %207, label %208, label %209, !prof !9

208:                                              ; preds = %202
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 46656) #23
  br label %209

209:                                              ; preds = %208, %202, %199, %195, %192
  %210 = phi i32 [ -1, %192 ], [ -1, %202 ], [ -1, %208 ], [ -1, %199 ], [ %197, %195 ]
  %211 = load volatile ptr, ptr %177, align 4
  %212 = icmp eq ptr %211, null
  br i1 %212, label %216, label %213, !prof !9

213:                                              ; preds = %209
  %214 = or i32 %210, 1
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !203
  call void @arm_heavy_mb() #23
  %215 = getelementptr i8, ptr %211, i32 46656
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %215, i32 %214) #23, !srcloc !14
  br label %216

216:                                              ; preds = %213, %209
  %217 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 74, i32 %6
  store i64 %176, ptr %217, align 8
  %218 = getelementptr inbounds i8, ptr %217, i32 8
  store i32 %175, ptr %218, align 8
  %219 = getelementptr inbounds i8, ptr %217, i32 12
  store i32 %174, ptr %219, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %220 = load i16, ptr %9, align 4
  %221 = add i16 %220, 1
  store i16 %221, ptr %9, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  br label %222

222:                                              ; preds = %216, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @igb_extts(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = alloca %struct.ptp_clock_event, align 8
  %4 = alloca %struct.timespec64, align 8
  %5 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 56
  %6 = load ptr, ptr %5, align 8
  %7 = tail call i32 @ptp_find_pin(ptr noundef %6, i32 noundef 1, i32 noundef %1) #23
  %8 = icmp eq i32 %1, 1
  %9 = select i1 %8, i32 46692, i32 46684
  %10 = select i1 %8, i32 46696, i32 46688
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !24
  %11 = icmp ugt i32 %7, 1
  br i1 %11, label %108, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = add i32 %14, -3
  %16 = icmp ult i32 %15, 3
  %17 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 1
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %16, label %20, label %63

20:                                               ; preds = %12
  br i1 %19, label %35, label %21, !prof !9

21:                                               ; preds = %20
  %22 = getelementptr i8, ptr %18, i32 %9
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %22) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %35

25:                                               ; preds = %21
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %18) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 64
  store ptr null, ptr %17, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %30, ptr noundef nonnull @.str) #22
  %31 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %32 = load ptr, ptr %31, align 4
  %33 = tail call zeroext i1 @pci_device_is_present(ptr noundef %32) #23
  br i1 %33, label %34, label %35, !prof !9

34:                                               ; preds = %28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %9) #23
  br label %35

35:                                               ; preds = %34, %28, %25, %21, %20
  %36 = phi i32 [ -1, %20 ], [ -1, %28 ], [ -1, %34 ], [ -1, %25 ], [ %23, %21 ]
  %37 = zext i32 %36 to i64
  %38 = load volatile ptr, ptr %17, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %54, label %40, !prof !9

40:                                               ; preds = %35
  %41 = getelementptr i8, ptr %38, i32 %10
  %42 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %41) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %54

44:                                               ; preds = %40
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %38) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %54

47:                                               ; preds = %44
  %48 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %49 = load ptr, ptr %48, align 64
  store ptr null, ptr %17, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %49, ptr noundef nonnull @.str) #22
  %50 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %51 = load ptr, ptr %50, align 4
  %52 = tail call zeroext i1 @pci_device_is_present(ptr noundef %51) #23
  br i1 %52, label %53, label %54, !prof !9

53:                                               ; preds = %47
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %10) #23
  br label %54

54:                                               ; preds = %53, %47, %44, %40, %35
  %55 = phi i32 [ -1, %35 ], [ -1, %47 ], [ -1, %53 ], [ -1, %44 ], [ %42, %40 ]
  %56 = and i32 %55, 255
  %57 = zext i32 %56 to i64
  %58 = shl nuw nsw i64 %57, 32
  %59 = or i64 %58, %37
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #23
  call void @ns_to_timespec64(ptr nonnull sret(%struct.timespec64) align 8 %4, i64 noundef %59) #23
  %60 = load i64, ptr %4, align 8
  %61 = getelementptr inbounds i8, ptr %4, i32 8
  %62 = load i32, ptr %61, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #23
  br label %99

63:                                               ; preds = %12
  br i1 %19, label %78, label %64, !prof !9

64:                                               ; preds = %63
  %65 = getelementptr i8, ptr %18, i32 %9
  %66 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %65) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %78

68:                                               ; preds = %64
  %69 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %18) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %78

71:                                               ; preds = %68
  %72 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %73 = load ptr, ptr %72, align 64
  store ptr null, ptr %17, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %73, ptr noundef nonnull @.str) #22
  %74 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %75 = load ptr, ptr %74, align 4
  %76 = tail call zeroext i1 @pci_device_is_present(ptr noundef %75) #23
  br i1 %76, label %77, label %78, !prof !9

77:                                               ; preds = %71
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %9) #23
  br label %78

78:                                               ; preds = %77, %71, %68, %64, %63
  %79 = phi i32 [ -1, %63 ], [ -1, %71 ], [ -1, %77 ], [ -1, %68 ], [ %66, %64 ]
  %80 = load volatile ptr, ptr %17, align 4
  %81 = icmp eq ptr %80, null
  br i1 %81, label %96, label %82, !prof !9

82:                                               ; preds = %78
  %83 = getelementptr i8, ptr %80, i32 %10
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %83) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %96

86:                                               ; preds = %82
  %87 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %80) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %96

89:                                               ; preds = %86
  %90 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 1
  %91 = load ptr, ptr %90, align 64
  store ptr null, ptr %17, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %91, ptr noundef nonnull @.str) #22
  %92 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 34
  %93 = load ptr, ptr %92, align 4
  %94 = tail call zeroext i1 @pci_device_is_present(ptr noundef %93) #23
  br i1 %94, label %95, label %96, !prof !9

95:                                               ; preds = %89
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %10) #23
  br label %96

96:                                               ; preds = %95, %89, %86, %82, %78
  %97 = phi i32 [ -1, %78 ], [ -1, %89 ], [ -1, %95 ], [ -1, %86 ], [ %84, %82 ]
  %98 = zext i32 %97 to i64
  br label %99

99:                                               ; preds = %96, %54
  %100 = phi i64 [ %60, %54 ], [ %98, %96 ]
  %101 = phi i32 [ %62, %54 ], [ %79, %96 ]
  store i32 1, ptr %3, align 8
  %102 = getelementptr inbounds %struct.ptp_clock_event, ptr %3, i32 0, i32 1
  store i32 %1, ptr %102, align 4
  %103 = mul i64 %100, 1000000000
  %104 = sext i32 %101 to i64
  %105 = add i64 %103, %104
  %106 = getelementptr inbounds %struct.ptp_clock_event, ptr %3, i32 0, i32 2
  store i64 %105, ptr %106, align 8
  %107 = load ptr, ptr %5, align 8
  call void @ptp_clock_event(ptr noundef %107, ptr noundef nonnull %3) #23
  br label %108

108:                                              ; preds = %99, %2
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ptp_find_pin(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @timecounter_cyc2time(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_normalized_timespec64(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ns_to_timespec64(ptr sret(%struct.timespec64) align 8, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_threaded_irq(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_idle(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dma_alloc_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_free_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_page_attrs(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_frag_cache_drain(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_cpu(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_page_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_wake_queue(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #20

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @csum_partial(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_checksum_help(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_tstamp_tx(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_sync_single_for_device(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_msix(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pci_disable_msi(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_msix_range(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_enable_msi(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @igb_alloc_q_vector(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) unnamed_addr #4 {
  %7 = icmp sgt i32 %2, 1
  %8 = icmp sgt i32 %4, 1
  %9 = or i1 %7, %8
  br i1 %9, label %116, label %10

10:                                               ; preds = %6
  %11 = add i32 %4, %2
  %12 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %11, i32 192) #23
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = tail call i32 @llvm.uadd.sat.i32(i32 %14, i32 320) #23
  %16 = select i1 %13, i32 -1, i32 %15
  %17 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 45, i32 %1
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %10
  %21 = tail call i32 @ksize(ptr noundef nonnull %18) #23
  %22 = icmp ugt i32 %16, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.igb_q_vector, ptr %18, i32 0, i32 9
  tail call void @kvfree_call_rcu(ptr noundef %24, ptr noundef nonnull inttoptr (i32 272 to ptr)) #23
  br label %26

25:                                               ; preds = %20
  tail call void @llvm.memset.p0.i32(ptr nonnull align 64 %18, i8 0, i32 %16, i1 false)
  br label %29

26:                                               ; preds = %23, %10
  %27 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %16, i32 noundef 3520) #24
  %28 = icmp eq ptr %27, null
  br i1 %28, label %116, label %29

29:                                               ; preds = %26, %25
  %30 = phi ptr [ %18, %25 ], [ %27, %26 ]
  %31 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 1
  %32 = load ptr, ptr %31, align 64
  %33 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 8
  tail call void @netif_napi_add(ptr noundef %32, ptr noundef %33, ptr noundef nonnull @igb_poll, i32 noundef 64) #23
  store ptr %30, ptr %17, align 4
  store ptr %0, ptr %30, align 64
  %34 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 11
  %35 = load i16, ptr %34, align 16
  %36 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 7
  %37 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 7, i32 3
  store i16 %35, ptr %37, align 4
  %38 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 27
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr i8, ptr %39, i32 5760
  %41 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 5
  store ptr %40, ptr %41, align 16
  %42 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 3
  store i16 648, ptr %42, align 4
  %43 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 12
  %44 = icmp eq i32 %4, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %29
  %46 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 7
  %47 = load i32, ptr %46, align 4
  %48 = add i32 %47, -4
  %49 = icmp ult i32 %48, -3
  br i1 %49, label %55, label %58

50:                                               ; preds = %29
  %51 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 8
  %52 = load i32, ptr %51, align 8
  %53 = add i32 %52, -4
  %54 = icmp ult i32 %53, -3
  br i1 %54, label %55, label %58

55:                                               ; preds = %50, %45
  %56 = phi i32 [ %47, %45 ], [ %52, %50 ]
  %57 = trunc i32 %56 to i16
  store i16 %57, ptr %42, align 4
  br label %58

58:                                               ; preds = %55, %50, %45
  %59 = icmp eq i32 %2, 0
  br i1 %59, label %87, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %62 = load ptr, ptr %61, align 4
  %63 = getelementptr inbounds %struct.pci_dev, ptr %62, i32 0, i32 44
  %64 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 1, i32 3
  store ptr %63, ptr %64, align 4
  %65 = load ptr, ptr %31, align 64
  %66 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 1, i32 1
  store ptr %65, ptr %66, align 4
  store ptr %30, ptr %43, align 64
  store ptr %43, ptr %36, align 4
  %67 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 7, i32 4
  %68 = load i8, ptr %67, align 2
  %69 = add i8 %68, 1
  store i8 %69, ptr %67, align 2
  %70 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %71 = load i32, ptr %70, align 16
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %75

73:                                               ; preds = %60
  %74 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 1, i32 6, i32 1
  tail call void @_set_bit(i32 noundef 4, ptr noundef %74) #23
  br label %75

75:                                               ; preds = %73, %60
  %76 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 48
  %77 = load i16, ptr %76, align 4
  %78 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 1, i32 7, i32 1
  store i16 %77, ptr %78, align 8
  %79 = trunc i32 %3 to i8
  %80 = getelementptr inbounds %struct.igb_ring, ptr %43, i32 0, i32 11
  store i8 %79, ptr %80, align 2
  %81 = getelementptr inbounds %struct.igb_ring, ptr %43, i32 0, i32 14
  store i8 0, ptr %81, align 1
  %82 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 1, i32 7, i32 3
  %83 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 1, i32 8, i32 7, i32 1, i32 0, i32 1
  store i32 0, ptr %83, align 4
  %84 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 1, i32 8, i32 7, i32 1, i32 1
  store i32 0, ptr %84, align 4
  %85 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 14, i32 %3
  call void @llvm.memset.p0.i64(ptr noundef align 16 dereferenceable(16) %82, i8 0, i64 16, i1 false)
  store ptr %43, ptr %85, align 4
  %86 = getelementptr %struct.igb_q_vector, ptr %30, i32 1, i32 8, i32 9, i32 1
  br label %87

87:                                               ; preds = %75, %58
  %88 = phi ptr [ %86, %75 ], [ %43, %58 ]
  br i1 %44, label %116, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 34
  %91 = load ptr, ptr %90, align 4
  %92 = getelementptr inbounds %struct.pci_dev, ptr %91, i32 0, i32 44
  %93 = getelementptr inbounds %struct.igb_ring, ptr %88, i32 0, i32 3
  store ptr %92, ptr %93, align 4
  %94 = load ptr, ptr %31, align 64
  %95 = getelementptr inbounds %struct.igb_ring, ptr %88, i32 0, i32 1
  store ptr %94, ptr %95, align 4
  store ptr %30, ptr %88, align 64
  %96 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 6
  store ptr %88, ptr %96, align 4
  %97 = getelementptr inbounds %struct.igb_q_vector, ptr %30, i32 0, i32 6, i32 4
  %98 = load i8, ptr %97, align 2
  %99 = add i8 %98, 1
  store i8 %99, ptr %97, align 2
  %100 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 37, i32 4, i32 3
  %101 = load i32, ptr %100, align 16
  %102 = icmp ugt i32 %101, 1
  br i1 %102, label %103, label %108

103:                                              ; preds = %89
  %104 = getelementptr inbounds %struct.igb_ring, ptr %88, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 2, ptr noundef %104) #23
  %105 = load i32, ptr %100, align 16
  %106 = icmp ugt i32 %105, 3
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  tail call void @_set_bit(i32 noundef 3, ptr noundef %104) #23
  br label %108

108:                                              ; preds = %107, %103, %89
  %109 = getelementptr inbounds %struct.igb_adapter, ptr %0, i32 0, i32 49
  %110 = load i16, ptr %109, align 2
  %111 = getelementptr inbounds %struct.igb_ring, ptr %88, i32 0, i32 10
  store i16 %110, ptr %111, align 8
  %112 = trunc i32 %5 to i8
  %113 = getelementptr inbounds %struct.igb_ring, ptr %88, i32 0, i32 11
  store i8 %112, ptr %113, align 2
  %114 = getelementptr inbounds %struct.igb_ring, ptr %88, i32 0, i32 22, i32 0, i32 2
  store i32 0, ptr %114, align 4
  %115 = getelementptr %struct.igb_adapter, ptr %0, i32 0, i32 16, i32 %5
  store ptr %88, ptr %115, align 4
  br label %116

116:                                              ; preds = %108, %87, %26, %6
  %117 = phi i32 [ -12, %6 ], [ -12, %26 ], [ 0, %108 ], [ 0, %87 ]
  ret i32 %117
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ksize(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @igb_poll(ptr noundef %0, i32 noundef %1) #4 {
  %3 = alloca %struct.xdp_buff, align 4
  %4 = alloca i64, align 8
  %5 = getelementptr i8, ptr %0, i32 -56
  %6 = getelementptr i8, ptr %0, i32 -20
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %307, label %9

9:                                                ; preds = %2
  %10 = load ptr, ptr %5, align 64
  %11 = getelementptr i8, ptr %0, i32 -8
  %12 = load i16, ptr %11, align 4
  %13 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 19
  %14 = load i16, ptr %13, align 64
  %15 = getelementptr inbounds %struct.igb_adapter, ptr %10, i32 0, i32 3
  %16 = load volatile i32, ptr %15, align 4
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %307

19:                                               ; preds = %9
  %20 = zext i16 %14 to i32
  %21 = zext i16 %12 to i32
  %22 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 4
  %23 = load ptr, ptr %22, align 16
  %24 = getelementptr %struct.igb_tx_buffer, ptr %23, i32 %20
  %25 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 5
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr %union.e1000_adv_tx_desc, ptr %26, i32 %20
  %28 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 10
  %29 = load i16, ptr %28, align 8
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %20, %30
  %32 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 3
  br label %33

33:                                               ; preds = %110, %19
  %34 = phi ptr [ %27, %19 ], [ %111, %110 ]
  %35 = phi i32 [ 0, %19 ], [ %50, %110 ]
  %36 = phi i32 [ 0, %19 ], [ %54, %110 ]
  %37 = phi i32 [ %21, %19 ], [ %114, %110 ]
  %38 = phi i32 [ %31, %19 ], [ %112, %110 ]
  %39 = phi ptr [ %24, %19 ], [ %113, %110 ]
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %116, label %42

42:                                               ; preds = %33
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !204
  %43 = getelementptr inbounds %struct.anon.187, ptr %40, i32 0, i32 2
  %44 = load i32, ptr %43, align 4
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %116, label %47

47:                                               ; preds = %42
  store ptr null, ptr %39, align 4
  %48 = getelementptr inbounds %struct.igb_tx_buffer, ptr %39, i32 0, i32 4
  %49 = load i32, ptr %48, align 4
  %50 = add i32 %49, %35
  %51 = getelementptr inbounds %struct.igb_tx_buffer, ptr %39, i32 0, i32 5
  %52 = load i16, ptr %51, align 4
  %53 = zext i16 %52 to i32
  %54 = add i32 %36, %53
  %55 = getelementptr inbounds %struct.igb_tx_buffer, ptr %39, i32 0, i32 2
  %56 = load i32, ptr %55, align 4
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %struct.igb_tx_buffer, ptr %39, i32 0, i32 3
  %59 = load ptr, ptr %58, align 4
  br i1 %57, label %60, label %61

60:                                               ; preds = %47
  tail call void @napi_consume_skb(ptr noundef %59, i32 noundef %1) #23
  br label %62

61:                                               ; preds = %47
  tail call void @xdp_return_frame(ptr noundef %59) #23
  br label %62

62:                                               ; preds = %61, %60
  %63 = load ptr, ptr %32, align 4
  %64 = getelementptr inbounds %struct.igb_tx_buffer, ptr %39, i32 0, i32 7
  %65 = load i32, ptr %64, align 4
  %66 = getelementptr inbounds %struct.igb_tx_buffer, ptr %39, i32 0, i32 8
  %67 = load i32, ptr %66, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %63, i32 noundef %65, i32 noundef %67, i32 noundef 1, i32 noundef 0) #23
  store i32 0, ptr %66, align 4
  %68 = icmp eq ptr %34, %40
  br i1 %68, label %96, label %69

69:                                               ; preds = %94, %62
  %70 = phi ptr [ %86, %94 ], [ %39, %62 ]
  %71 = phi i32 [ %85, %94 ], [ %38, %62 ]
  %72 = phi ptr [ %84, %94 ], [ %34, %62 ]
  %73 = getelementptr %struct.igb_tx_buffer, ptr %70, i32 1
  %74 = getelementptr %union.e1000_adv_tx_desc, ptr %72, i32 1
  %75 = add i32 %71, 1
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %83, !prof !9

77:                                               ; preds = %69
  %78 = load i16, ptr %28, align 8
  %79 = zext i16 %78 to i32
  %80 = sub nsw i32 0, %79
  %81 = load ptr, ptr %22, align 16
  %82 = load ptr, ptr %25, align 4
  br label %83

83:                                               ; preds = %77, %69
  %84 = phi ptr [ %82, %77 ], [ %74, %69 ]
  %85 = phi i32 [ %80, %77 ], [ %75, %69 ]
  %86 = phi ptr [ %81, %77 ], [ %73, %69 ]
  %87 = getelementptr inbounds %struct.igb_tx_buffer, ptr %86, i32 0, i32 8
  %88 = load i32, ptr %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %83
  %91 = load ptr, ptr %32, align 4
  %92 = getelementptr inbounds %struct.igb_tx_buffer, ptr %86, i32 0, i32 7
  %93 = load i32, ptr %92, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %91, i32 noundef %93, i32 noundef %88, i32 noundef 1, i32 noundef 0) #23
  store i32 0, ptr %87, align 4
  br label %94

94:                                               ; preds = %90, %83
  %95 = icmp eq ptr %84, %40
  br i1 %95, label %96, label %69

96:                                               ; preds = %94, %62
  %97 = phi ptr [ %34, %62 ], [ %40, %94 ]
  %98 = phi i32 [ %38, %62 ], [ %85, %94 ]
  %99 = phi ptr [ %39, %62 ], [ %86, %94 ]
  %100 = getelementptr %struct.igb_tx_buffer, ptr %99, i32 1
  %101 = getelementptr %union.e1000_adv_tx_desc, ptr %97, i32 1
  %102 = add i32 %98, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %110, !prof !9

104:                                              ; preds = %96
  %105 = load i16, ptr %28, align 8
  %106 = zext i16 %105 to i32
  %107 = sub nsw i32 0, %106
  %108 = load ptr, ptr %22, align 16
  %109 = load ptr, ptr %25, align 4
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi ptr [ %109, %104 ], [ %101, %96 ]
  %112 = phi i32 [ %107, %104 ], [ %102, %96 ]
  %113 = phi ptr [ %108, %104 ], [ %100, %96 ]
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %111) #23, !srcloc !205
  %114 = add i32 %37, -1
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %33, !prof !206

116:                                              ; preds = %110, %42, %33
  %117 = phi ptr [ %113, %110 ], [ %39, %33 ], [ %39, %42 ]
  %118 = phi i32 [ %112, %110 ], [ %38, %33 ], [ %38, %42 ]
  %119 = phi i32 [ 0, %110 ], [ %37, %33 ], [ %37, %42 ]
  %120 = phi i32 [ %54, %110 ], [ %36, %33 ], [ %36, %42 ]
  %121 = phi i32 [ %50, %110 ], [ %35, %33 ], [ %35, %42 ]
  %122 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 1
  %123 = load ptr, ptr %122, align 4
  %124 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 11
  %125 = load i8, ptr %124, align 2
  %126 = zext i8 %125 to i32
  %127 = getelementptr inbounds %struct.net_device, ptr %123, i32 0, i32 87
  %128 = load ptr, ptr %127, align 64
  %129 = getelementptr %struct.netdev_queue, ptr %128, i32 %126
  %130 = icmp eq i32 %121, 0
  br i1 %130, label %143, label %131, !prof !9

131:                                              ; preds = %116
  %132 = getelementptr %struct.netdev_queue, ptr %128, i32 %126, i32 14
  tail call void @dql_completed(ptr noundef %132, i32 noundef %121) #23
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !207
  %133 = getelementptr %struct.netdev_queue, ptr %128, i32 %126, i32 14, i32 1
  %134 = load volatile i32, ptr %133, align 4
  %135 = load volatile i32, ptr %132, align 64
  %136 = sub i32 %134, %135
  %137 = icmp slt i32 %136, 0
  br i1 %137, label %143, label %138, !prof !9

138:                                              ; preds = %131
  %139 = getelementptr %struct.netdev_queue, ptr %128, i32 %126, i32 12
  %140 = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %139) #23
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %138
  tail call void @netif_schedule_queue(ptr noundef %129) #23
  br label %143

143:                                              ; preds = %142, %138, %131, %116
  %144 = load i16, ptr %28, align 8
  %145 = trunc i32 %118 to i16
  %146 = add i16 %144, %145
  store i16 %146, ptr %13, align 64
  %147 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 22
  %148 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 22, i32 0, i32 1, i32 3
  %149 = load i32, ptr %148, align 4
  %150 = add i32 %149, 1
  store i32 %150, ptr %148, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %151 = zext i32 %121 to i64
  %152 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 22, i32 0, i32 1
  %153 = load i64, ptr %152, align 8
  %154 = add i64 %153, %151
  store i64 %154, ptr %152, align 8
  %155 = zext i32 %120 to i64
  %156 = load i64, ptr %147, align 8
  %157 = add i64 %156, %155
  store i64 %157, ptr %147, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %158 = load i32, ptr %148, align 4
  %159 = add i32 %158, 1
  store i32 %159, ptr %148, align 4
  %160 = getelementptr i8, ptr %0, i32 -16
  %161 = load i32, ptr %160, align 4
  %162 = add i32 %161, %121
  store i32 %162, ptr %160, align 4
  %163 = getelementptr i8, ptr %0, i32 -12
  %164 = load i32, ptr %163, align 4
  %165 = add i32 %164, %120
  store i32 %165, ptr %163, align 4
  %166 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 6
  %167 = load volatile i32, ptr %166, align 4
  %168 = and i32 %167, 32
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %255, label %170

170:                                              ; preds = %143
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %166) #23
  %171 = load ptr, ptr %117, align 4
  %172 = icmp eq ptr %171, null
  br i1 %172, label %255, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.igb_tx_buffer, ptr %117, i32 0, i32 1
  %175 = load i32, ptr %174, align 4
  %176 = getelementptr inbounds %struct.igb_adapter, ptr %10, i32 0, i32 31
  %177 = load i8, ptr %176, align 1
  %178 = zext i8 %177 to i32
  %179 = mul nuw nsw i32 %178, 100
  %180 = load volatile i32, ptr @jiffies, align 64
  %181 = sub i32 %175, %180
  %182 = add i32 %181, %179
  %183 = icmp slt i32 %182, 0
  br i1 %183, label %184, label %255

184:                                              ; preds = %173
  %185 = getelementptr inbounds %struct.igb_adapter, ptr %10, i32 0, i32 37, i32 1
  %186 = load volatile ptr, ptr %185, align 4
  %187 = icmp eq ptr %186, null
  br i1 %187, label %255, label %188, !prof !9

188:                                              ; preds = %184
  %189 = getelementptr i8, ptr %186, i32 8
  %190 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %189) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %191 = icmp eq i32 %190, -1
  br i1 %191, label %192, label %202

192:                                              ; preds = %188
  %193 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %186) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %194 = icmp eq i32 %193, -1
  br i1 %194, label %195, label %255

195:                                              ; preds = %192
  %196 = getelementptr %struct.igb_adapter, ptr %10, i32 0, i32 1
  %197 = load ptr, ptr %196, align 64
  store ptr null, ptr %185, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %197, ptr noundef nonnull @.str) #22
  %198 = getelementptr %struct.igb_adapter, ptr %10, i32 0, i32 34
  %199 = load ptr, ptr %198, align 4
  %200 = tail call zeroext i1 @pci_device_is_present(ptr noundef %199) #23
  br i1 %200, label %201, label %255, !prof !9

201:                                              ; preds = %195
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef 8) #23
  br label %255

202:                                              ; preds = %188
  %203 = and i32 %190, 16
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %255

205:                                              ; preds = %202
  %206 = load ptr, ptr %32, align 4
  %207 = load i8, ptr %124, align 2
  %208 = zext i8 %207 to i32
  %209 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 12
  %210 = load i8, ptr %209, align 1
  %211 = zext i8 %210 to i32
  %212 = icmp ult i8 %210, 4
  %213 = shl nuw nsw i32 %211, 8
  %214 = add nuw nsw i32 %213, 14352
  %215 = shl nuw nsw i32 %211, 6
  %216 = add nuw nsw i32 %215, 57360
  %217 = select i1 %212, i32 %214, i32 %216
  %218 = load volatile ptr, ptr %185, align 4
  %219 = icmp eq ptr %218, null
  br i1 %219, label %234, label %220, !prof !9

220:                                              ; preds = %205
  %221 = getelementptr i8, ptr %218, i32 %217
  %222 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %221) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !11
  %223 = icmp eq i32 %222, -1
  br i1 %223, label %224, label %234

224:                                              ; preds = %220
  %225 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr nonnull elementtype(i32) %218) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !12
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %227, label %234

227:                                              ; preds = %224
  %228 = getelementptr %struct.igb_adapter, ptr %10, i32 0, i32 1
  %229 = load ptr, ptr %228, align 64
  store ptr null, ptr %185, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %229, ptr noundef nonnull @.str) #22
  %230 = getelementptr %struct.igb_adapter, ptr %10, i32 0, i32 34
  %231 = load ptr, ptr %230, align 4
  %232 = tail call zeroext i1 @pci_device_is_present(ptr noundef %231) #23
  br i1 %232, label %233, label %234, !prof !9

233:                                              ; preds = %227
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 746, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %217) #23
  br label %234

234:                                              ; preds = %233, %227, %224, %220, %205
  %235 = phi i32 [ -1, %205 ], [ -1, %227 ], [ -1, %233 ], [ -1, %224 ], [ %222, %220 ]
  %236 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 7
  %237 = load ptr, ptr %236, align 4
  %238 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %237) #23, !srcloc !10
  tail call void asm sideeffect "dsb ", "~{memory}"() #23, !srcloc !208
  %239 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 20
  %240 = load i16, ptr %239, align 2
  %241 = zext i16 %240 to i32
  %242 = load i16, ptr %13, align 64
  %243 = zext i16 %242 to i32
  %244 = load i32, ptr %174, align 4
  %245 = load ptr, ptr %117, align 4
  %246 = load volatile i32, ptr @jiffies, align 64
  %247 = getelementptr inbounds %struct.anon.187, ptr %245, i32 0, i32 2
  %248 = load i32, ptr %247, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %206, ptr noundef nonnull @.str.161, i32 noundef %208, i32 noundef %235, i32 noundef %238, i32 noundef %241, i32 noundef %243, i32 noundef %244, ptr noundef %245, i32 noundef %246, i32 noundef %248) #22
  %249 = load ptr, ptr %122, align 4
  %250 = load i8, ptr %124, align 2
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds %struct.net_device, ptr %249, i32 0, i32 87
  %253 = load ptr, ptr %252, align 64
  %254 = getelementptr %struct.netdev_queue, ptr %253, i32 %251, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %254) #23
  br label %307

255:                                              ; preds = %202, %201, %195, %192, %184, %173, %170, %143
  %256 = icmp eq i32 %120, 0
  br i1 %256, label %305, label %257

257:                                              ; preds = %255
  %258 = load ptr, ptr %122, align 4
  %259 = getelementptr inbounds %struct.net_device, ptr %258, i32 0, i32 6
  %260 = load volatile i32, ptr %259, align 4
  %261 = and i32 %260, 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %305

263:                                              ; preds = %257
  %264 = load i16, ptr %13, align 64
  %265 = zext i16 %264 to i32
  %266 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 20
  %267 = load i16, ptr %266, align 2
  %268 = zext i16 %267 to i32
  %269 = icmp ugt i16 %264, %267
  br i1 %269, label %270, label %273

270:                                              ; preds = %263
  %271 = xor i32 %268, -1
  %272 = add nsw i32 %271, %265
  br label %279

273:                                              ; preds = %263
  %274 = load i16, ptr %28, align 8
  %275 = zext i16 %274 to i32
  %276 = xor i32 %268, -1
  %277 = add nsw i32 %276, %265
  %278 = add nsw i32 %277, %275
  br label %279

279:                                              ; preds = %273, %270
  %280 = phi i32 [ %272, %270 ], [ %278, %273 ]
  %281 = icmp ugt i32 %280, 41
  br i1 %281, label %282, label %305, !prof !9

282:                                              ; preds = %279
  tail call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !209
  %283 = load ptr, ptr %122, align 4
  %284 = load i8, ptr %124, align 2
  %285 = zext i8 %284 to i32
  %286 = getelementptr inbounds %struct.net_device, ptr %283, i32 0, i32 87
  %287 = load ptr, ptr %286, align 64
  %288 = getelementptr %struct.netdev_queue, ptr %287, i32 %285, i32 12
  %289 = load volatile i32, ptr %288, align 4
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %305, label %292

292:                                              ; preds = %282
  %293 = load volatile i32, ptr %15, align 4
  %294 = and i32 %293, 4
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %305

296:                                              ; preds = %292
  %297 = getelementptr %struct.netdev_queue, ptr %287, i32 %285
  tail call void @netif_tx_wake_queue(ptr noundef %297) #23
  %298 = load i32, ptr %148, align 4
  %299 = add i32 %298, 1
  store i32 %299, ptr %148, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %300 = getelementptr inbounds %struct.igb_ring, ptr %7, i32 0, i32 22, i32 0, i32 1, i32 1
  %301 = load i64, ptr %300, align 8
  %302 = add i64 %301, 1
  store i64 %302, ptr %300, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %303 = load i32, ptr %148, align 4
  %304 = add i32 %303, 1
  store i32 %304, ptr %148, align 4
  br label %305

305:                                              ; preds = %296, %292, %282, %279, %257, %255
  %306 = icmp ne i32 %119, 0
  br label %307

307:                                              ; preds = %305, %234, %9, %2
  %308 = phi i1 [ true, %2 ], [ %306, %305 ], [ true, %9 ], [ true, %234 ]
  %309 = getelementptr i8, ptr %0, i32 -36
  %310 = load ptr, ptr %309, align 4
  %311 = icmp eq ptr %310, null
  br i1 %311, label %1027, label %312

312:                                              ; preds = %307
  %313 = load ptr, ptr %5, align 64
  %314 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 22
  %315 = load ptr, ptr %314, align 8
  %316 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 19
  %317 = load i16, ptr %316, align 64
  %318 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 20
  %319 = load i16, ptr %318, align 2
  %320 = icmp ugt i16 %317, %319
  br i1 %320, label %321, label %324

321:                                              ; preds = %312
  %322 = xor i16 %319, -1
  %323 = add i16 %317, %322
  br label %330

324:                                              ; preds = %312
  %325 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 10
  %326 = load i16, ptr %325, align 8
  %327 = xor i16 %319, -1
  %328 = add i16 %317, %327
  %329 = add i16 %328, %326
  br label %330

330:                                              ; preds = %324, %321
  %331 = phi i16 [ %323, %321 ], [ %329, %324 ]
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %3) #23
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(28) %3, i8 0, i32 28, i1 false) #23, !annotation !24
  %332 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 6
  %333 = load volatile i32, ptr %332, align 4
  %334 = and i32 %333, 1
  %335 = shl nuw nsw i32 4096, %334
  %336 = lshr exact i32 %335, 1
  %337 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 23
  %338 = getelementptr inbounds %struct.xdp_buff, ptr %3, i32 0, i32 6
  store i32 %336, ptr %338, align 4
  %339 = getelementptr inbounds %struct.xdp_buff, ptr %3, i32 0, i32 4
  store ptr %337, ptr %339, align 4
  %340 = icmp eq i32 %1, 0
  br i1 %340, label %999, label %341, !prof !9

341:                                              ; preds = %330
  %342 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 5
  %343 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 4
  %344 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 3
  %345 = getelementptr inbounds %struct.xdp_buff, ptr %3, i32 0, i32 3
  %346 = getelementptr inbounds %struct.xdp_buff, ptr %3, i32 0, i32 1
  %347 = getelementptr inbounds %struct.xdp_buff, ptr %3, i32 0, i32 2
  %348 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 2
  %349 = getelementptr inbounds %struct.igb_adapter, ptr %313, i32 0, i32 1
  %350 = getelementptr inbounds %struct.igb_adapter, ptr %313, i32 0, i32 2
  %351 = getelementptr inbounds %struct.igb_adapter, ptr %313, i32 0, i32 13
  %352 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 1
  %353 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 21
  %354 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 10
  %355 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 22, i32 0, i32 2
  %356 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 22, i32 0, i32 1, i32 3
  %357 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 11
  br label %358

358:                                              ; preds = %965, %341
  %359 = phi ptr [ %315, %341 ], [ %968, %965 ]
  %360 = phi i32 [ 0, %341 ], [ %967, %965 ]
  %361 = phi i32 [ 0, %341 ], [ %966, %965 ]
  %362 = phi i32 [ 0, %341 ], [ %780, %965 ]
  %363 = phi i16 [ %331, %341 ], [ %824, %965 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #23
  store i64 0, ptr %4, align 8
  %364 = icmp ugt i16 %363, 15
  br i1 %364, label %365, label %366

365:                                              ; preds = %358
  call void @igb_alloc_rx_buffers(ptr noundef %310, i16 noundef zeroext %363) #23
  br label %366

366:                                              ; preds = %365, %358
  %367 = phi i16 [ 0, %365 ], [ %363, %358 ]
  %368 = load ptr, ptr %342, align 4
  %369 = load i16, ptr %316, align 64
  %370 = zext i16 %369 to i32
  %371 = getelementptr %union.e1000_adv_rx_desc, ptr %368, i32 %370
  %372 = getelementptr inbounds %struct.anon.197, ptr %371, i32 0, i32 1
  %373 = getelementptr inbounds %struct.anon.202, ptr %372, i32 0, i32 1
  %374 = load i16, ptr %373, align 4
  %375 = zext i16 %374 to i32
  %376 = icmp eq i16 %374, 0
  br i1 %376, label %963, label %377

377:                                              ; preds = %366
  call void asm sideeffect "dmb osh", "~{memory}"() #23, !srcloc !210
  %378 = load ptr, ptr %343, align 16
  %379 = load i16, ptr %316, align 64
  %380 = zext i16 %379 to i32
  %381 = getelementptr %struct.igb_rx_buffer, ptr %378, i32 %380, i32 1
  %382 = load ptr, ptr %381, align 4
  %383 = getelementptr inbounds %struct.page, ptr %382, i32 0, i32 1
  %384 = load volatile i32, ptr %383, align 4
  %385 = and i32 %384, 1
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %389, label %387, !prof !80

387:                                              ; preds = %377
  %388 = add i32 %384, -1
  br label %391

389:                                              ; preds = %377
  %390 = ptrtoint ptr %382 to i32
  br label %391

391:                                              ; preds = %389, %387
  %392 = phi i32 [ %388, %387 ], [ %390, %389 ]
  %393 = getelementptr %struct.igb_rx_buffer, ptr %378, i32 %380
  %394 = inttoptr i32 %392 to ptr
  %395 = getelementptr inbounds %struct.page, ptr %394, i32 0, i32 3
  %396 = load volatile i32, ptr %395, align 4
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %382) #23, !srcloc !110
  %397 = load ptr, ptr %344, align 4
  %398 = load i32, ptr %393, align 4
  %399 = getelementptr %struct.igb_rx_buffer, ptr %378, i32 %380, i32 2
  %400 = load i16, ptr %399, align 4
  %401 = zext i16 %400 to i32
  %402 = add i32 %398, %401
  call void @dma_sync_single_for_cpu(ptr noundef %397, i32 noundef %402, i32 noundef %375, i32 noundef 2) #23
  %403 = getelementptr %struct.igb_rx_buffer, ptr %378, i32 %380, i32 3
  %404 = load i16, ptr %403, align 2
  %405 = add i16 %404, -1
  store i16 %405, ptr %403, align 2
  %406 = load ptr, ptr %381, align 4
  %407 = call ptr @page_address(ptr noundef %406) #23
  %408 = load i16, ptr %399, align 4
  %409 = zext i16 %408 to i32
  %410 = getelementptr i8, ptr %407, i32 %409
  %411 = load i32, ptr %372, align 8
  %412 = and i32 %411, 32768
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %418, label %414

414:                                              ; preds = %391
  %415 = load ptr, ptr %310, align 64
  %416 = call i32 @igb_ptp_rx_pktstamp(ptr noundef %415, ptr noundef %410, ptr noundef nonnull %4) #23
  %417 = sub i32 %375, %416
  br label %418

418:                                              ; preds = %414, %391
  %419 = phi i32 [ %416, %414 ], [ 0, %391 ]
  %420 = phi i32 [ %417, %414 ], [ %375, %391 ]
  %421 = icmp eq ptr %359, null
  br i1 %421, label %422, label %614

422:                                              ; preds = %418
  %423 = load volatile i32, ptr %332, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = select i1 %425, i32 0, i32 -258
  %427 = getelementptr i8, ptr %410, i32 %426
  %428 = load volatile i32, ptr %332, align 4
  %429 = and i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = select i1 %430, i32 0, i32 258
  %432 = add i32 %431, %419
  %433 = getelementptr i8, ptr %427, i32 %432
  store ptr %427, ptr %345, align 4
  store ptr %433, ptr %3, align 4
  %434 = getelementptr i8, ptr %433, i32 %420
  store ptr %434, ptr %346, align 4
  store ptr %433, ptr %347, align 4
  %435 = load volatile ptr, ptr %348, align 8
  %436 = icmp eq ptr %435, null
  br i1 %436, label %610, label %437

437:                                              ; preds = %422
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %427) #23, !srcloc !110
  %438 = load volatile i32, ptr @bpf_stats_enabled_key, align 4
  %439 = icmp sgt i32 %438, 0
  br i1 %439, label %440, label %468, !prof !9

440:                                              ; preds = %437
  %441 = call i64 @sched_clock() #23
  %442 = getelementptr inbounds %struct.bpf_prog, ptr %435, i32 1
  %443 = getelementptr inbounds %struct.bpf_prog, ptr %435, i32 0, i32 9
  %444 = load ptr, ptr %443, align 4
  %445 = call i32 %444(ptr noundef nonnull %3, ptr noundef %442) #23
  %446 = getelementptr inbounds %struct.bpf_prog, ptr %435, i32 0, i32 7
  %447 = load ptr, ptr %446, align 4
  %448 = ptrtoint ptr %447 to i32
  %449 = call i32 @llvm.read_register.i32(metadata !0) #23
  %450 = inttoptr i32 %449 to ptr
  %451 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %450) #20, !srcloc !108
  %452 = add i32 %451, %448
  %453 = inttoptr i32 %452 to ptr
  %454 = getelementptr inbounds %struct.bpf_prog_stats, ptr %453, i32 0, i32 3
  %455 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #23, !srcloc !211
  %456 = load i32, ptr %454, align 4
  %457 = add i32 %456, 1
  store i32 %457, ptr %454, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %458 = load i64, ptr %453, align 8
  %459 = add i64 %458, 1
  store i64 %459, ptr %453, align 8
  %460 = getelementptr inbounds %struct.bpf_prog_stats, ptr %453, i32 0, i32 1
  %461 = call i64 @sched_clock() #23
  %462 = sub i64 %461, %441
  %463 = and i64 %462, 4294967295
  %464 = load i64, ptr %460, align 8
  %465 = add i64 %463, %464
  store i64 %465, ptr %460, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %466 = load i32, ptr %454, align 4
  %467 = add i32 %466, 1
  store i32 %467, ptr %454, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %455) #23, !srcloc !212
  br label %473

468:                                              ; preds = %437
  %469 = getelementptr inbounds %struct.bpf_prog, ptr %435, i32 1
  %470 = getelementptr inbounds %struct.bpf_prog, ptr %435, i32 0, i32 9
  %471 = load ptr, ptr %470, align 4
  %472 = call i32 %471(ptr noundef nonnull %3, ptr noundef %469) #23
  br label %473

473:                                              ; preds = %468, %440
  %474 = phi i32 [ %445, %440 ], [ %472, %468 ]
  %475 = load volatile i32, ptr @bpf_master_redirect_enabled_key, align 4
  %476 = icmp sgt i32 %475, 0
  br i1 %476, label %477, label %493, !prof !9

477:                                              ; preds = %473
  %478 = icmp eq i32 %474, 3
  br i1 %478, label %479, label %493

479:                                              ; preds = %477
  %480 = load ptr, ptr %339, align 4
  %481 = load ptr, ptr %480, align 64
  %482 = getelementptr inbounds %struct.net_device, ptr %481, i32 0, i32 14
  %483 = load i32, ptr %482, align 8
  %484 = and i32 %483, 2048
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %497, label %486

486:                                              ; preds = %479
  %487 = getelementptr inbounds %struct.net_device, ptr %481, i32 0, i32 15
  %488 = load i64, ptr %487, align 16
  %489 = and i64 %488, 4
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %497, label %491

491:                                              ; preds = %486
  %492 = call i32 @xdp_master_redirect(ptr noundef nonnull %3) #23
  br label %493

493:                                              ; preds = %491, %477, %473
  %494 = phi i32 [ %492, %491 ], [ %474, %477 ], [ %474, %473 ]
  switch i32 %494, label %589 [
    i32 2, label %610
    i32 3, label %495
    i32 4, label %585
    i32 0, label %591
    i32 1, label %609
  ]

495:                                              ; preds = %493
  %496 = load ptr, ptr %339, align 4
  br label %497

497:                                              ; preds = %495, %486, %479
  %498 = phi ptr [ %496, %495 ], [ %480, %479 ], [ %480, %486 ]
  %499 = getelementptr inbounds %struct.xdp_rxq_info, ptr %498, i32 0, i32 3
  %500 = load i32, ptr %499, align 4
  %501 = icmp eq i32 %500, 3
  br i1 %501, label %502, label %504

502:                                              ; preds = %497
  %503 = call ptr @xdp_convert_zc_to_xdp_frame(ptr noundef nonnull %3) #23
  br label %546

504:                                              ; preds = %497
  %505 = load ptr, ptr %345, align 4
  %506 = load ptr, ptr %3, align 4
  %507 = ptrtoint ptr %506 to i32
  %508 = ptrtoint ptr %505 to i32
  %509 = sub i32 %507, %508
  %510 = load ptr, ptr %347, align 4
  %511 = ptrtoint ptr %510 to i32
  %512 = sub i32 %507, %511
  %513 = call i32 @llvm.smax.i32(i32 %512, i32 0) #23
  %514 = sub i32 %509, %513
  %515 = icmp ult i32 %514, 24
  br i1 %515, label %591, label %516, !prof !9

516:                                              ; preds = %504
  %517 = load ptr, ptr %346, align 4
  %518 = load i32, ptr %338, align 4
  %519 = getelementptr i8, ptr %505, i32 -256
  %520 = getelementptr i8, ptr %519, i32 %518
  %521 = icmp ugt ptr %517, %520
  br i1 %521, label %522, label %523, !prof !9

522:                                              ; preds = %516
  call void @xdp_warn(ptr noundef nonnull @.str.162, ptr noundef nonnull @__func__.xdp_update_frame_from_buff, i32 noundef 200) #23
  br label %591

523:                                              ; preds = %516
  store ptr %506, ptr %505, align 4
  %524 = load ptr, ptr %346, align 4
  %525 = load ptr, ptr %3, align 4
  %526 = ptrtoint ptr %524 to i32
  %527 = ptrtoint ptr %525 to i32
  %528 = sub i32 %526, %527
  %529 = trunc i32 %528 to i16
  %530 = getelementptr inbounds %struct.xdp_frame, ptr %505, i32 0, i32 1
  store i16 %529, ptr %530, align 4
  %531 = trunc i32 %509 to i16
  %532 = add i16 %531, -24
  %533 = getelementptr inbounds %struct.xdp_frame, ptr %505, i32 0, i32 2
  store i16 %532, ptr %533, align 2
  %534 = getelementptr inbounds %struct.xdp_frame, ptr %505, i32 0, i32 3
  %535 = load i32, ptr %534, align 4
  %536 = and i32 %513, 255
  %537 = and i32 %535, -256
  %538 = or i32 %537, %536
  store i32 %538, ptr %534, align 4
  %539 = load i32, ptr %338, align 4
  %540 = shl i32 %539, 8
  %541 = or i32 %540, %536
  store i32 %541, ptr %534, align 4
  %542 = getelementptr inbounds %struct.xdp_frame, ptr %505, i32 0, i32 4
  %543 = load ptr, ptr %339, align 4
  %544 = getelementptr inbounds %struct.xdp_rxq_info, ptr %543, i32 0, i32 3
  %545 = load i64, ptr %544, align 4
  store i64 %545, ptr %542, align 4
  br label %546

546:                                              ; preds = %523, %502
  %547 = phi ptr [ %503, %502 ], [ %505, %523 ]
  %548 = tail call ptr @llvm.thread.pointer() #23
  %549 = getelementptr inbounds %struct.thread_info, ptr %548, i32 0, i32 2
  %550 = load i32, ptr %549, align 8
  %551 = icmp eq ptr %547, null
  br i1 %551, label %591, label %552, !prof !9

552:                                              ; preds = %546
  %553 = load ptr, ptr %350, align 4
  %554 = icmp eq ptr %553, null
  br i1 %554, label %591, label %555

555:                                              ; preds = %552
  %556 = load i32, ptr %351, align 8
  %557 = icmp ult i32 %550, %556
  br i1 %557, label %560, label %558

558:                                              ; preds = %555
  %559 = urem i32 %550, %556
  br label %560

560:                                              ; preds = %558, %555
  %561 = phi i32 [ %559, %558 ], [ %550, %555 ]
  %562 = getelementptr %struct.igb_adapter, ptr %313, i32 0, i32 14, i32 %561
  %563 = load ptr, ptr %562, align 4
  %564 = icmp eq ptr %563, null
  br i1 %564, label %591, label %565, !prof !9

565:                                              ; preds = %560
  %566 = getelementptr inbounds %struct.igb_ring, ptr %563, i32 0, i32 1
  %567 = load ptr, ptr %566, align 4
  %568 = getelementptr inbounds %struct.igb_ring, ptr %563, i32 0, i32 11
  %569 = load i8, ptr %568, align 2
  %570 = zext i8 %569 to i32
  %571 = getelementptr inbounds %struct.net_device, ptr %567, i32 0, i32 87
  %572 = load ptr, ptr %571, align 64
  %573 = getelementptr %struct.netdev_queue, ptr %572, i32 %570, i32 9
  call void @_raw_spin_lock(ptr noundef %573) #23
  %574 = getelementptr %struct.netdev_queue, ptr %572, i32 %570, i32 10
  store volatile i32 %550, ptr %574, align 4
  %575 = load volatile i32, ptr @jiffies, align 64
  %576 = getelementptr %struct.netdev_queue, ptr %572, i32 %570, i32 11
  %577 = load volatile i32, ptr %576, align 8
  %578 = icmp eq i32 %577, %575
  br i1 %578, label %580, label %579

579:                                              ; preds = %565
  store volatile i32 %575, ptr %576, align 8
  br label %580

580:                                              ; preds = %579, %565
  %581 = call i32 @igb_xmit_xdp_ring(ptr undef, ptr noundef nonnull %563, ptr noundef nonnull %547) #23
  store volatile i32 -1, ptr %574, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #23, !srcloc !31
  %582 = load i16, ptr %573, align 4
  %583 = add i16 %582, 1
  store i16 %583, ptr %573, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #23, !srcloc !32
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #23, !srcloc !33
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !34
  %584 = icmp eq i32 %581, 1
  br i1 %584, label %591, label %610

585:                                              ; preds = %493
  %586 = load ptr, ptr %349, align 64
  %587 = call i32 @xdp_do_redirect(ptr noundef %586, ptr noundef nonnull %3, ptr noundef nonnull %435) #23
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %610, label %591

589:                                              ; preds = %493
  %590 = load ptr, ptr %349, align 64
  call void @bpf_warn_invalid_xdp_action(ptr noundef %590, ptr noundef nonnull %435, i32 noundef %494) #23
  br label %591

591:                                              ; preds = %589, %585, %580, %560, %552, %546, %522, %504, %493
  %592 = phi i32 [ %494, %589 ], [ %494, %493 ], [ 4, %585 ], [ 3, %580 ], [ 3, %546 ], [ 3, %560 ], [ 3, %522 ], [ 3, %504 ], [ 3, %552 ]
  %593 = load ptr, ptr %352, align 4
  %594 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 1), align 4
  %595 = icmp sgt i32 %594, 0
  br i1 %595, label %596, label %609

596:                                              ; preds = %591
  %597 = tail call ptr @llvm.thread.pointer() #23
  %598 = getelementptr inbounds %struct.thread_info, ptr %597, i32 0, i32 2
  %599 = load i32, ptr %598, align 8
  %600 = lshr i32 %599, 5
  %601 = getelementptr i32, ptr @__cpu_online_mask, i32 %600
  %602 = load volatile i32, ptr %601, align 4
  %603 = and i32 %599, 31
  %604 = shl nuw i32 1, %603
  %605 = and i32 %604, %602
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %609, label %607

607:                                              ; preds = %596
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !213
  %608 = call i32 @__traceiter_xdp_exception(ptr noundef null, ptr noundef %593, ptr noundef nonnull %435, i32 noundef %592) #23
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !214
  br label %609

609:                                              ; preds = %607, %596, %591, %493
  br label %610

610:                                              ; preds = %609, %585, %580, %493, %422
  %611 = phi i32 [ 1, %609 ], [ %581, %580 ], [ 0, %493 ], [ 0, %422 ], [ 4, %585 ]
  %612 = sub i32 0, %611
  %613 = inttoptr i32 %612 to ptr
  br label %614

614:                                              ; preds = %610, %418
  %615 = phi ptr [ %359, %418 ], [ %613, %610 ]
  %616 = icmp ugt ptr %615, inttoptr (i32 -4096 to ptr)
  br i1 %616, label %617, label %634

617:                                              ; preds = %614
  %618 = ptrtoint ptr %615 to i32
  %619 = sub i32 0, %618
  %620 = and i32 %619, 6
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %631, label %622

622:                                              ; preds = %617
  %623 = or i32 %362, %619
  %624 = load volatile i32, ptr %332, align 4
  %625 = and i32 %624, 1
  %626 = shl nuw nsw i32 4096, %625
  %627 = lshr exact i32 %626, 1
  %628 = load i16, ptr %399, align 4
  %629 = trunc i32 %627 to i16
  %630 = xor i16 %628, %629
  store i16 %630, ptr %399, align 4
  br label %766

631:                                              ; preds = %617
  %632 = load i16, ptr %403, align 2
  %633 = add i16 %632, 1
  store i16 %633, ptr %403, align 2
  br label %766

634:                                              ; preds = %614
  %635 = icmp eq ptr %615, null
  %636 = load volatile i32, ptr %332, align 4
  br i1 %635, label %652, label %637

637:                                              ; preds = %634
  %638 = and i32 %636, 1
  %639 = shl nuw nsw i32 4096, %638
  %640 = lshr exact i32 %639, 1
  %641 = getelementptr inbounds %struct.sk_buff, ptr %615, i32 0, i32 15
  %642 = load ptr, ptr %641, align 4
  %643 = getelementptr inbounds %struct.skb_shared_info, ptr %642, i32 0, i32 2
  %644 = load i8, ptr %643, align 2
  %645 = zext i8 %644 to i32
  %646 = load ptr, ptr %381, align 4
  %647 = load i16, ptr %399, align 4
  %648 = zext i16 %647 to i32
  call void @skb_add_rx_frag(ptr noundef nonnull %615, i32 noundef %645, ptr noundef %646, i32 noundef %648, i32 noundef %420, i32 noundef %640) #23
  %649 = load i16, ptr %399, align 4
  %650 = trunc i32 %640 to i16
  %651 = xor i16 %649, %650
  store i16 %651, ptr %399, align 4
  br label %776

652:                                              ; preds = %634
  %653 = and i32 %636, 2
  %654 = icmp eq i32 %653, 0
  %655 = load i64, ptr %4, align 8
  %656 = load volatile i32, ptr %332, align 4
  %657 = and i32 %656, 1
  %658 = shl nuw nsw i32 4096, %657
  %659 = lshr exact i32 %658, 1
  br i1 %654, label %710, label %660

660:                                              ; preds = %652
  %661 = load ptr, ptr %3, align 4
  %662 = load ptr, ptr %347, align 4
  %663 = ptrtoint ptr %661 to i32
  %664 = ptrtoint ptr %662 to i32
  %665 = sub i32 %663, %664
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %662) #23, !srcloc !205
  %666 = getelementptr i8, ptr %662, i32 64
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %666) #23, !srcloc !205
  %667 = load ptr, ptr %345, align 4
  %668 = call ptr @napi_build_skb(ptr noundef %667, i32 noundef %659) #23
  %669 = icmp eq ptr %668, null
  br i1 %669, label %770, label %670, !prof !9

670:                                              ; preds = %660
  %671 = load ptr, ptr %3, align 4
  %672 = load ptr, ptr %345, align 4
  %673 = ptrtoint ptr %671 to i32
  %674 = ptrtoint ptr %672 to i32
  %675 = sub i32 %673, %674
  %676 = getelementptr inbounds %struct.sk_buff, ptr %668, i32 0, i32 17
  %677 = load ptr, ptr %676, align 4
  %678 = getelementptr i8, ptr %677, i32 %675
  store ptr %678, ptr %676, align 4
  %679 = getelementptr inbounds %struct.sk_buff, ptr %668, i32 0, i32 14
  %680 = load ptr, ptr %679, align 8
  %681 = getelementptr i8, ptr %680, i32 %675
  store ptr %681, ptr %679, align 8
  %682 = getelementptr inbounds %struct.sk_buff, ptr %668, i32 0, i32 6
  %683 = load i32, ptr %682, align 4
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %686, label %685, !prof !80

685:                                              ; preds = %670
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #23, !srcloc !136
  unreachable

686:                                              ; preds = %670
  %687 = load ptr, ptr %346, align 4
  %688 = ptrtoint ptr %687 to i32
  %689 = sub i32 %688, %673
  %690 = getelementptr i8, ptr %681, i32 %689
  store ptr %690, ptr %679, align 8
  %691 = getelementptr inbounds %struct.sk_buff, ptr %668, i32 0, i32 5
  %692 = load i32, ptr %691, align 8
  %693 = add i32 %692, %689
  store i32 %693, ptr %691, align 8
  %694 = icmp eq ptr %661, %662
  br i1 %694, label %700, label %695

695:                                              ; preds = %686
  %696 = trunc i32 %665 to i8
  %697 = getelementptr inbounds %struct.sk_buff, ptr %668, i32 0, i32 15
  %698 = load ptr, ptr %697, align 4
  %699 = getelementptr inbounds %struct.skb_shared_info, ptr %698, i32 0, i32 1
  store i8 %696, ptr %699, align 1
  br label %700

700:                                              ; preds = %695, %686
  %701 = icmp eq i64 %655, 0
  br i1 %701, label %706, label %702

702:                                              ; preds = %700
  %703 = getelementptr inbounds %struct.sk_buff, ptr %668, i32 0, i32 15
  %704 = load ptr, ptr %703, align 4
  %705 = getelementptr inbounds %struct.skb_shared_info, ptr %704, i32 0, i32 7
  store i64 %655, ptr %705, align 8
  br label %706

706:                                              ; preds = %702, %700
  %707 = load i16, ptr %399, align 4
  %708 = trunc i32 %659 to i16
  %709 = xor i16 %707, %708
  store i16 %709, ptr %399, align 4
  br label %776

710:                                              ; preds = %652
  %711 = load ptr, ptr %346, align 4
  %712 = load ptr, ptr %3, align 4
  %713 = ptrtoint ptr %711 to i32
  %714 = ptrtoint ptr %712 to i32
  %715 = sub i32 %713, %714
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %712) #23, !srcloc !205
  %716 = getelementptr i8, ptr %712, i32 64
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %716) #23, !srcloc !205
  %717 = load ptr, ptr %310, align 64
  %718 = getelementptr inbounds %struct.igb_q_vector, ptr %717, i32 0, i32 8
  %719 = call ptr @__napi_alloc_skb(ptr noundef %718, i32 noundef 256, i32 noundef 2592) #23
  %720 = icmp eq ptr %719, null
  br i1 %720, label %770, label %721, !prof !9

721:                                              ; preds = %710
  %722 = icmp eq i64 %655, 0
  br i1 %722, label %727, label %723

723:                                              ; preds = %721
  %724 = getelementptr inbounds %struct.sk_buff, ptr %719, i32 0, i32 15
  %725 = load ptr, ptr %724, align 4
  %726 = getelementptr inbounds %struct.skb_shared_info, ptr %725, i32 0, i32 7
  store i64 %655, ptr %726, align 8
  br label %727

727:                                              ; preds = %723, %721
  %728 = icmp ugt i32 %715, 256
  br i1 %728, label %729, label %734

729:                                              ; preds = %727
  %730 = getelementptr inbounds %struct.anon.49, ptr %719, i32 0, i32 2
  %731 = load ptr, ptr %730, align 8
  %732 = load ptr, ptr %3, align 4
  %733 = call i32 @eth_get_headlen(ptr noundef %731, ptr noundef %732, i32 noundef 256) #23
  br label %734

734:                                              ; preds = %729, %727
  %735 = phi i32 [ %733, %729 ], [ %715, %727 ]
  %736 = getelementptr inbounds %struct.sk_buff, ptr %719, i32 0, i32 6
  %737 = load i32, ptr %736, align 4
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %740, label %739, !prof !80

739:                                              ; preds = %734
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #23, !srcloc !136
  unreachable

740:                                              ; preds = %734
  %741 = getelementptr inbounds %struct.sk_buff, ptr %719, i32 0, i32 14
  %742 = load ptr, ptr %741, align 8
  %743 = getelementptr i8, ptr %742, i32 %735
  store ptr %743, ptr %741, align 8
  %744 = getelementptr inbounds %struct.sk_buff, ptr %719, i32 0, i32 5
  %745 = load i32, ptr %744, align 8
  %746 = add i32 %745, %735
  store i32 %746, ptr %744, align 8
  %747 = load ptr, ptr %3, align 4
  %748 = add i32 %735, 3
  %749 = and i32 %748, -4
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %742, ptr align 1 %747, i32 %749, i1 false) #23
  %750 = icmp eq i32 %715, %735
  br i1 %750, label %763, label %751

751:                                              ; preds = %740
  %752 = sub i32 %715, %735
  %753 = load ptr, ptr %381, align 4
  %754 = load ptr, ptr %3, align 4
  %755 = getelementptr i8, ptr %754, i32 %735
  %756 = call ptr @page_address(ptr noundef %753) #23
  %757 = ptrtoint ptr %755 to i32
  %758 = ptrtoint ptr %756 to i32
  %759 = sub i32 %757, %758
  call void @skb_add_rx_frag(ptr noundef nonnull %719, i32 noundef 0, ptr noundef %753, i32 noundef %759, i32 noundef %752, i32 noundef %659) #23
  %760 = load i16, ptr %399, align 4
  %761 = trunc i32 %659 to i16
  %762 = xor i16 %760, %761
  store i16 %762, ptr %399, align 4
  br label %776

763:                                              ; preds = %740
  %764 = load i16, ptr %403, align 2
  %765 = add i16 %764, 1
  store i16 %765, ptr %403, align 2
  br label %776

766:                                              ; preds = %631, %622
  %767 = phi i32 [ %623, %622 ], [ %362, %631 ]
  %768 = add nuw i32 %361, 1
  %769 = add i32 %420, %360
  br label %776

770:                                              ; preds = %710, %660
  %771 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 22, i32 0, i32 1, i32 4
  %772 = load i64, ptr %771, align 8
  %773 = add i64 %772, 1
  store i64 %773, ptr %771, align 8
  %774 = load i16, ptr %403, align 2
  %775 = add i16 %774, 1
  store i16 %775, ptr %403, align 2
  br label %963

776:                                              ; preds = %766, %763, %751, %706, %637
  %777 = phi ptr [ %615, %766 ], [ %719, %763 ], [ %719, %751 ], [ %668, %706 ], [ %615, %637 ]
  %778 = phi i32 [ %769, %766 ], [ %360, %763 ], [ %360, %751 ], [ %360, %706 ], [ %360, %637 ]
  %779 = phi i32 [ %768, %766 ], [ %361, %763 ], [ %361, %751 ], [ %361, %706 ], [ %361, %637 ]
  %780 = phi i32 [ %767, %766 ], [ %362, %763 ], [ %362, %751 ], [ %362, %706 ], [ %362, %637 ]
  %781 = load i16, ptr %403, align 2
  %782 = load ptr, ptr %381, align 4
  %783 = getelementptr inbounds %struct.page, ptr %782, i32 0, i32 1
  %784 = load ptr, ptr %783, align 4
  %785 = ptrtoint ptr %784 to i32
  %786 = and i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = zext i16 %781 to i32
  %789 = sub i32 %396, %788
  %790 = icmp ult i32 %789, 2
  %791 = select i1 %787, i1 %790, i1 false
  %792 = icmp eq i16 %781, 1
  %793 = select i1 %791, i1 %792, i1 false
  br i1 %793, label %794, label %797, !prof !215

794:                                              ; preds = %776
  %795 = getelementptr inbounds %struct.page, ptr %782, i32 0, i32 3
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %795) #23, !srcloc !110
  %796 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %795, ptr %795, i32 65534, ptr elementtype(i32) %795) #23, !srcloc !120
  store i16 -1, ptr %403, align 2
  br label %797

797:                                              ; preds = %794, %776
  br i1 %791, label %798, label %814

798:                                              ; preds = %797
  %799 = load i16, ptr %353, align 4
  %800 = load ptr, ptr %343, align 16
  %801 = zext i16 %799 to i32
  %802 = getelementptr %struct.igb_rx_buffer, ptr %800, i32 %801
  %803 = add i16 %799, 1
  %804 = load i16, ptr %354, align 8
  %805 = icmp ult i16 %803, %804
  %806 = select i1 %805, i16 %803, i16 0
  store i16 %806, ptr %353, align 4
  %807 = load i32, ptr %393, align 4
  store i32 %807, ptr %802, align 4
  %808 = load ptr, ptr %381, align 4
  %809 = getelementptr %struct.igb_rx_buffer, ptr %800, i32 %801, i32 1
  store ptr %808, ptr %809, align 4
  %810 = load i16, ptr %399, align 4
  %811 = getelementptr %struct.igb_rx_buffer, ptr %800, i32 %801, i32 2
  store i16 %810, ptr %811, align 4
  %812 = load i16, ptr %403, align 2
  %813 = getelementptr %struct.igb_rx_buffer, ptr %800, i32 %801, i32 3
  store i16 %812, ptr %813, align 2
  br label %823

814:                                              ; preds = %797
  %815 = load ptr, ptr %344, align 4
  %816 = load i32, ptr %393, align 4
  %817 = load volatile i32, ptr %332, align 4
  %818 = and i32 %817, 1
  %819 = shl nuw nsw i32 4096, %818
  call void @dma_unmap_page_attrs(ptr noundef %815, i32 noundef %816, i32 noundef %819, i32 noundef 2, i32 noundef 34) #23
  %820 = load ptr, ptr %381, align 4
  %821 = load i16, ptr %403, align 2
  %822 = zext i16 %821 to i32
  call void @__page_frag_cache_drain(ptr noundef %820, i32 noundef %822) #23
  br label %823

823:                                              ; preds = %814, %798
  store ptr null, ptr %381, align 4
  %824 = add nuw nsw i16 %367, 1
  %825 = load i16, ptr %316, align 64
  %826 = zext i16 %825 to i32
  %827 = add nuw nsw i32 %826, 1
  %828 = load i16, ptr %354, align 8
  %829 = zext i16 %828 to i32
  %830 = icmp ult i32 %827, %829
  %831 = select i1 %830, i32 %827, i32 0
  %832 = trunc i32 %831 to i16
  store i16 %832, ptr %316, align 64
  %833 = load ptr, ptr %342, align 4
  %834 = getelementptr %union.e1000_adv_rx_desc, ptr %833, i32 %831
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %834) #23, !srcloc !205
  %835 = load i32, ptr %372, align 8
  %836 = and i32 %835, 2
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %965, label %838

838:                                              ; preds = %823
  %839 = icmp ugt ptr %777, inttoptr (i32 -4096 to ptr)
  br i1 %839, label %965, label %840

840:                                              ; preds = %838
  %841 = and i32 %835, -1761607680
  %842 = icmp eq i32 %841, 0
  br i1 %842, label %850, label %843, !prof !80

843:                                              ; preds = %840
  %844 = load ptr, ptr %352, align 4
  %845 = getelementptr inbounds %struct.net_device, ptr %844, i32 0, i32 23
  %846 = load i64, ptr %845, align 16
  %847 = and i64 %846, 17592186044416
  %848 = icmp eq i64 %847, 0
  br i1 %848, label %849, label %850

849:                                              ; preds = %843
  call void @__dev_kfree_skb_any(ptr noundef nonnull %777, i32 noundef 1) #23
  br label %965

850:                                              ; preds = %843, %840
  %851 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 5
  %852 = load i32, ptr %851, align 8
  %853 = icmp ult i32 %852, 60
  br i1 %853, label %854, label %869, !prof !9

854:                                              ; preds = %850
  %855 = sub nuw nsw i32 60, %852
  %856 = call i32 @__skb_pad(ptr noundef nonnull %777, i32 noundef %855, i1 noundef zeroext true) #23
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %858, label %965

858:                                              ; preds = %854
  %859 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 6
  %860 = load i32, ptr %859, align 4
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %863, label %862, !prof !80

862:                                              ; preds = %858
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #23, !srcloc !136
  unreachable

863:                                              ; preds = %858
  %864 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 14
  %865 = load ptr, ptr %864, align 8
  %866 = getelementptr i8, ptr %865, i32 %855
  store ptr %866, ptr %864, align 8
  %867 = load i32, ptr %851, align 8
  %868 = add i32 %867, %855
  store i32 %868, ptr %851, align 8
  br label %869

869:                                              ; preds = %863, %850
  %870 = phi i32 [ %868, %863 ], [ %852, %850 ]
  %871 = add i32 %870, %778
  %872 = load ptr, ptr %352, align 4
  %873 = getelementptr inbounds %struct.net_device, ptr %872, i32 0, i32 23
  %874 = load i64, ptr %873, align 16
  %875 = and i64 %874, 549755813888
  %876 = icmp eq i64 %875, 0
  br i1 %876, label %884, label %877

877:                                              ; preds = %869
  %878 = getelementptr inbounds %struct.anon.198, ptr %371, i32 0, i32 1
  %879 = load i32, ptr %878, align 4
  %880 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 13
  %881 = load i16, ptr %880, align 8
  %882 = and i16 %881, -769
  store i16 %882, ptr %880, align 8
  %883 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 13, i32 0, i32 7
  store i32 %879, ptr %883, align 8
  br label %884

884:                                              ; preds = %877, %869
  %885 = load i32, ptr %372, align 8
  %886 = and i32 %885, 4
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %888, label %918

888:                                              ; preds = %884
  %889 = load ptr, ptr %352, align 4
  %890 = getelementptr inbounds %struct.net_device, ptr %889, i32 0, i32 23
  %891 = load i64, ptr %890, align 16
  %892 = and i64 %891, 1099511627776
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %918, label %894

894:                                              ; preds = %888
  %895 = and i32 %885, 1610612736
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %910, label %897

897:                                              ; preds = %894
  %898 = icmp eq i32 %870, 60
  br i1 %898, label %899, label %903

899:                                              ; preds = %897
  %900 = load volatile i32, ptr %332, align 4
  %901 = and i32 %900, 4
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %903, label %918

903:                                              ; preds = %899, %897
  %904 = load i32, ptr %355, align 4
  %905 = add i32 %904, 1
  store i32 %905, ptr %355, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %906 = load i64, ptr %356, align 8
  %907 = add i64 %906, 1
  store i64 %907, ptr %356, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %908 = load i32, ptr %355, align 4
  %909 = add i32 %908, 1
  store i32 %909, ptr %355, align 4
  br label %918

910:                                              ; preds = %894
  %911 = and i32 %885, 48
  %912 = icmp eq i32 %911, 0
  br i1 %912, label %918, label %913

913:                                              ; preds = %910
  %914 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 13
  %915 = load i16, ptr %914, align 8
  %916 = and i16 %915, -97
  %917 = or i16 %916, 32
  store i16 %917, ptr %914, align 8
  br label %918

918:                                              ; preds = %913, %910, %903, %899, %888, %884
  %919 = load i32, ptr %372, align 8
  %920 = and i32 %919, 98304
  %921 = icmp eq i32 %920, 65536
  br i1 %921, label %922, label %924

922:                                              ; preds = %918
  %923 = load ptr, ptr %310, align 64
  call void @igb_ptp_rx_rgtstamp(ptr noundef %923, ptr noundef nonnull %777) #23
  br label %924

924:                                              ; preds = %922, %918
  %925 = load i64, ptr %873, align 16
  %926 = and i64 %925, 256
  %927 = icmp eq i64 %926, 0
  br i1 %927, label %953, label %928

928:                                              ; preds = %924
  %929 = load i32, ptr %372, align 8
  %930 = and i32 %929, 8
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %953, label %932

932:                                              ; preds = %928
  %933 = and i32 %929, 262144
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %943, label %935

935:                                              ; preds = %932
  %936 = load volatile i32, ptr %332, align 4
  %937 = and i32 %936, 8
  %938 = icmp eq i32 %937, 0
  br i1 %938, label %943, label %939

939:                                              ; preds = %935
  %940 = getelementptr inbounds %struct.anon.197, ptr %371, i32 0, i32 1, i32 2
  %941 = load i16, ptr %940, align 2
  %942 = call i16 @llvm.bswap.i16(i16 %941) #23
  br label %946

943:                                              ; preds = %935, %932
  %944 = getelementptr inbounds %struct.anon.197, ptr %371, i32 0, i32 1, i32 2
  %945 = load i16, ptr %944, align 2
  br label %946

946:                                              ; preds = %943, %939
  %947 = phi i16 [ %942, %939 ], [ %945, %943 ]
  %948 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 13, i32 0, i32 8
  store i16 129, ptr %948, align 4
  %949 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 13, i32 0, i32 9
  store i16 %947, ptr %949, align 2
  %950 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 13, i32 0, i32 3
  %951 = load i16, ptr %950, align 2
  %952 = or i16 %951, 1
  store i16 %952, ptr %950, align 2
  br label %953

953:                                              ; preds = %946, %928, %924
  %954 = load i8, ptr %357, align 2
  %955 = zext i8 %954 to i16
  %956 = add nuw nsw i16 %955, 1
  %957 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 9
  store i16 %956, ptr %957, align 4
  %958 = load ptr, ptr %352, align 4
  %959 = call zeroext i16 @eth_type_trans(ptr noundef nonnull %777, ptr noundef %958) #23
  %960 = getelementptr inbounds %struct.sk_buff, ptr %777, i32 0, i32 13, i32 0, i32 16
  store i16 %959, ptr %960, align 8
  %961 = call i32 @napi_gro_receive(ptr noundef %0, ptr noundef nonnull %777) #23
  %962 = add i32 %779, 1
  br label %965

963:                                              ; preds = %770, %366
  %964 = phi ptr [ null, %770 ], [ %359, %366 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  br label %970

965:                                              ; preds = %953, %854, %849, %838, %823
  %966 = phi i32 [ %962, %953 ], [ %779, %823 ], [ %779, %849 ], [ %779, %838 ], [ %779, %854 ]
  %967 = phi i32 [ %871, %953 ], [ %778, %823 ], [ %778, %849 ], [ %778, %838 ], [ %778, %854 ]
  %968 = phi ptr [ null, %953 ], [ %777, %823 ], [ null, %849 ], [ null, %838 ], [ null, %854 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  %969 = icmp ult i32 %966, %1
  br i1 %969, label %358, label %970, !prof !80

970:                                              ; preds = %965, %963
  %971 = phi i16 [ %367, %963 ], [ %824, %965 ]
  %972 = phi i32 [ %362, %963 ], [ %780, %965 ]
  %973 = phi i32 [ %361, %963 ], [ %966, %965 ]
  %974 = phi i32 [ %360, %963 ], [ %967, %965 ]
  %975 = phi ptr [ %964, %963 ], [ %968, %965 ]
  store ptr %975, ptr %314, align 8
  %976 = and i32 %972, 4
  %977 = icmp eq i32 %976, 0
  br i1 %977, label %979, label %978

978:                                              ; preds = %970
  call void @xdp_do_flush() #23
  br label %979

979:                                              ; preds = %978, %970
  %980 = and i32 %972, 2
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %999, label %982

982:                                              ; preds = %979
  %983 = tail call ptr @llvm.thread.pointer() #23
  %984 = getelementptr inbounds %struct.thread_info, ptr %983, i32 0, i32 2
  %985 = load i32, ptr %984, align 8
  %986 = load i32, ptr %351, align 8
  %987 = icmp ult i32 %985, %986
  br i1 %987, label %990, label %988

988:                                              ; preds = %982
  %989 = urem i32 %985, %986
  br label %990

990:                                              ; preds = %988, %982
  %991 = phi i32 [ %989, %988 ], [ %985, %982 ]
  %992 = getelementptr %struct.igb_adapter, ptr %313, i32 0, i32 14, i32 %991
  %993 = load ptr, ptr %992, align 4
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !173
  call void @arm_heavy_mb() #23
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !174
  call void @arm_heavy_mb() #23
  %994 = getelementptr inbounds %struct.igb_ring, ptr %993, i32 0, i32 20
  %995 = load i16, ptr %994, align 2
  %996 = zext i16 %995 to i32
  %997 = getelementptr inbounds %struct.igb_ring, ptr %993, i32 0, i32 7
  %998 = load ptr, ptr %997, align 4
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %998, i32 %996) #23, !srcloc !14
  br label %999

999:                                              ; preds = %990, %979, %330
  %1000 = phi i16 [ %971, %990 ], [ %971, %979 ], [ %331, %330 ]
  %1001 = phi i32 [ %973, %990 ], [ %973, %979 ], [ 0, %330 ]
  %1002 = phi i32 [ %974, %990 ], [ %974, %979 ], [ 0, %330 ]
  %1003 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 22, i32 0, i32 2
  %1004 = load i32, ptr %1003, align 4
  %1005 = add i32 %1004, 1
  store i32 %1005, ptr %1003, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !106
  %1006 = zext i32 %1001 to i64
  %1007 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 22, i32 0, i32 1
  %1008 = load i64, ptr %1007, align 8
  %1009 = add i64 %1008, %1006
  store i64 %1009, ptr %1007, align 8
  %1010 = zext i32 %1002 to i64
  %1011 = getelementptr inbounds %struct.igb_ring, ptr %310, i32 0, i32 22, i32 0, i32 1, i32 1
  %1012 = load i64, ptr %1011, align 8
  %1013 = add i64 %1012, %1010
  store i64 %1013, ptr %1011, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #23, !srcloc !107
  %1014 = load i32, ptr %1003, align 4
  %1015 = add i32 %1014, 1
  store i32 %1015, ptr %1003, align 4
  %1016 = getelementptr i8, ptr %0, i32 -28
  %1017 = load i32, ptr %1016, align 4
  %1018 = add i32 %1017, %1001
  store i32 %1018, ptr %1016, align 4
  %1019 = getelementptr i8, ptr %0, i32 -32
  %1020 = load i32, ptr %1019, align 4
  %1021 = add i32 %1020, %1002
  store i32 %1021, ptr %1019, align 4
  %1022 = icmp eq i16 %1000, 0
  br i1 %1022, label %1024, label %1023

1023:                                             ; preds = %999
  call void @igb_alloc_rx_buffers(ptr noundef %310, i16 noundef zeroext %1000) #23
  br label %1024

1024:                                             ; preds = %1023, %999
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %3) #23
  %1025 = icmp slt i32 %1001, %1
  %1026 = select i1 %1025, i1 %308, i1 false
  br i1 %1026, label %1028, label %1257

1027:                                             ; preds = %307
  br i1 %308, label %1028, label %1257

1028:                                             ; preds = %1027, %1024
  %1029 = phi i32 [ %1001, %1024 ], [ 0, %1027 ]
  %1030 = call zeroext i1 @napi_complete_done(ptr noundef %0, i32 noundef %1029) #23
  br i1 %1030, label %1031, label %1257, !prof !80

1031:                                             ; preds = %1028
  %1032 = load ptr, ptr %5, align 64
  %1033 = load ptr, ptr %309, align 4
  %1034 = icmp eq ptr %1033, null
  br i1 %1034, label %1040, label %1035

1035:                                             ; preds = %1031
  %1036 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 7
  %1037 = load i32, ptr %1036, align 4
  %1038 = and i32 %1037, 3
  %1039 = icmp eq i32 %1038, 0
  br i1 %1039, label %1238, label %1045

1040:                                             ; preds = %1031
  %1041 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 8
  %1042 = load i32, ptr %1041, align 8
  %1043 = and i32 %1042, 3
  %1044 = icmp eq i32 %1043, 0
  br i1 %1044, label %1238, label %1045

1045:                                             ; preds = %1040, %1035
  %1046 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 5
  %1047 = load i32, ptr %1046, align 16
  %1048 = icmp eq i32 %1047, 1
  br i1 %1048, label %1049, label %1181

1049:                                             ; preds = %1045
  %1050 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 51
  %1051 = load ptr, ptr %1050, align 4
  %1052 = icmp eq ptr %1051, null
  br i1 %1052, label %1053, label %1181

1053:                                             ; preds = %1049
  %1054 = getelementptr i8, ptr %0, i32 -44
  %1055 = load i16, ptr %1054, align 4
  %1056 = zext i16 %1055 to i32
  %1057 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 25
  %1058 = load i16, ptr %1057, align 64
  %1059 = icmp eq i16 %1058, 1000
  br i1 %1059, label %1060, label %1166

1060:                                             ; preds = %1053
  %1061 = getelementptr i8, ptr %0, i32 -12
  %1062 = load i32, ptr %1061, align 4
  %1063 = getelementptr i8, ptr %0, i32 -16
  %1064 = load i32, ptr %1063, align 4
  %1065 = getelementptr i8, ptr %0, i32 -5
  %1066 = icmp eq i32 %1062, 0
  br i1 %1066, label %1106, label %1067

1067:                                             ; preds = %1060
  %1068 = load i8, ptr %1065, align 1
  switch i8 %1068, label %1104 [
    i8 0, label %1069
    i8 1, label %1077
    i8 2, label %1096
  ]

1069:                                             ; preds = %1067
  %1070 = udiv i32 %1064, %1062
  %1071 = icmp ugt i32 %1070, 8000
  br i1 %1071, label %1104, label %1072

1072:                                             ; preds = %1069
  %1073 = icmp ult i32 %1062, 5
  %1074 = icmp ugt i32 %1064, 512
  %1075 = select i1 %1073, i1 %1074, i1 false
  %1076 = zext i1 %1075 to i8
  br label %1104

1077:                                             ; preds = %1067
  %1078 = icmp ugt i32 %1064, 10000
  %1079 = udiv i32 %1064, %1062
  br i1 %1078, label %1080, label %1089

1080:                                             ; preds = %1077
  %1081 = icmp ugt i32 %1079, 8000
  br i1 %1081, label %1104, label %1082

1082:                                             ; preds = %1080
  %1083 = icmp ult i32 %1062, 10
  %1084 = icmp ugt i32 %1079, 1200
  %1085 = select i1 %1083, i1 true, i1 %1084
  br i1 %1085, label %1104, label %1086

1086:                                             ; preds = %1082
  %1087 = icmp ult i32 %1062, 36
  %1088 = zext i1 %1087 to i8
  br label %1104

1089:                                             ; preds = %1077
  %1090 = icmp ugt i32 %1079, 2000
  br i1 %1090, label %1104, label %1091

1091:                                             ; preds = %1089
  %1092 = icmp ugt i32 %1062, 2
  %1093 = icmp ugt i32 %1064, 511
  %1094 = select i1 %1092, i1 true, i1 %1093
  %1095 = zext i1 %1094 to i8
  br label %1104

1096:                                             ; preds = %1067
  %1097 = icmp ugt i32 %1064, 25000
  br i1 %1097, label %1098, label %1101

1098:                                             ; preds = %1096
  %1099 = icmp ugt i32 %1062, 35
  %1100 = select i1 %1099, i8 1, i8 2
  br label %1104

1101:                                             ; preds = %1096
  %1102 = icmp ult i32 %1064, 1500
  %1103 = select i1 %1102, i8 1, i8 2
  br label %1104

1104:                                             ; preds = %1101, %1098, %1091, %1089, %1086, %1082, %1080, %1072, %1069, %1067
  %1105 = phi i8 [ %1068, %1067 ], [ 2, %1069 ], [ %1076, %1072 ], [ 2, %1080 ], [ 2, %1082 ], [ %1088, %1086 ], [ 2, %1089 ], [ %1095, %1091 ], [ %1100, %1098 ], [ %1103, %1101 ]
  store i32 0, ptr %1063, align 4
  store i32 0, ptr %1061, align 4
  store i8 %1105, ptr %1065, align 1
  br label %1106

1106:                                             ; preds = %1104, %1060
  %1107 = getelementptr i8, ptr %0, i32 -28
  %1108 = load i32, ptr %1107, align 4
  %1109 = getelementptr i8, ptr %0, i32 -32
  %1110 = load i32, ptr %1109, align 4
  %1111 = getelementptr i8, ptr %0, i32 -21
  %1112 = icmp eq i32 %1108, 0
  %1113 = load i8, ptr %1111, align 1
  br i1 %1112, label %1152, label %1114

1114:                                             ; preds = %1106
  switch i8 %1113, label %1150 [
    i8 0, label %1115
    i8 1, label %1123
    i8 2, label %1142
  ]

1115:                                             ; preds = %1114
  %1116 = udiv i32 %1110, %1108
  %1117 = icmp ugt i32 %1116, 8000
  br i1 %1117, label %1150, label %1118

1118:                                             ; preds = %1115
  %1119 = icmp ult i32 %1108, 5
  %1120 = icmp ugt i32 %1110, 512
  %1121 = select i1 %1119, i1 %1120, i1 false
  %1122 = zext i1 %1121 to i8
  br label %1150

1123:                                             ; preds = %1114
  %1124 = icmp ugt i32 %1110, 10000
  %1125 = udiv i32 %1110, %1108
  br i1 %1124, label %1126, label %1135

1126:                                             ; preds = %1123
  %1127 = icmp ugt i32 %1125, 8000
  br i1 %1127, label %1150, label %1128

1128:                                             ; preds = %1126
  %1129 = icmp ult i32 %1108, 10
  %1130 = icmp ugt i32 %1125, 1200
  %1131 = select i1 %1129, i1 true, i1 %1130
  br i1 %1131, label %1150, label %1132

1132:                                             ; preds = %1128
  %1133 = icmp ult i32 %1108, 36
  %1134 = zext i1 %1133 to i8
  br label %1150

1135:                                             ; preds = %1123
  %1136 = icmp ugt i32 %1125, 2000
  br i1 %1136, label %1150, label %1137

1137:                                             ; preds = %1135
  %1138 = icmp ugt i32 %1108, 2
  %1139 = icmp ugt i32 %1110, 511
  %1140 = select i1 %1138, i1 true, i1 %1139
  %1141 = zext i1 %1140 to i8
  br label %1150

1142:                                             ; preds = %1114
  %1143 = icmp ugt i32 %1110, 25000
  br i1 %1143, label %1144, label %1147

1144:                                             ; preds = %1142
  %1145 = icmp ugt i32 %1108, 35
  %1146 = select i1 %1145, i8 1, i8 2
  br label %1150

1147:                                             ; preds = %1142
  %1148 = icmp ult i32 %1110, 1500
  %1149 = select i1 %1148, i8 1, i8 2
  br label %1150

1150:                                             ; preds = %1147, %1144, %1137, %1135, %1132, %1128, %1126, %1118, %1115, %1114
  %1151 = phi i8 [ %1113, %1114 ], [ 2, %1115 ], [ %1122, %1118 ], [ 2, %1126 ], [ 2, %1128 ], [ %1134, %1132 ], [ 2, %1135 ], [ %1141, %1137 ], [ %1146, %1144 ], [ %1149, %1147 ]
  store i32 0, ptr %1109, align 4
  store i32 0, ptr %1107, align 4
  store i8 %1151, ptr %1111, align 1
  br label %1152

1152:                                             ; preds = %1150, %1106
  %1153 = phi i8 [ %1151, %1150 ], [ %1113, %1106 ]
  %1154 = load i8, ptr %1065, align 1
  %1155 = call i8 @llvm.umax.i8(i8 %1153, i8 %1154) #23
  switch i8 %1155, label %1238 [
    i8 0, label %1156
    i8 2, label %1166
    i8 1, label %1165
  ]

1156:                                             ; preds = %1152
  br i1 %1034, label %1161, label %1157

1157:                                             ; preds = %1156
  %1158 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 7
  %1159 = load i32, ptr %1158, align 4
  %1160 = icmp eq i32 %1159, 3
  br i1 %1160, label %1165, label %1166

1161:                                             ; preds = %1156
  %1162 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 8
  %1163 = load i32, ptr %1162, align 8
  %1164 = icmp eq i32 %1163, 3
  br i1 %1164, label %1165, label %1166

1165:                                             ; preds = %1161, %1157, %1152
  br label %1166

1166:                                             ; preds = %1165, %1161, %1157, %1152, %1053
  %1167 = phi i32 [ 196, %1165 ], [ 980, %1053 ], [ 56, %1157 ], [ 56, %1161 ], [ 980, %1152 ]
  %1168 = icmp eq i32 %1167, %1056
  br i1 %1168, label %1238, label %1169

1169:                                             ; preds = %1166
  %1170 = icmp ugt i32 %1167, %1056
  br i1 %1170, label %1171, label %1177

1171:                                             ; preds = %1169
  %1172 = mul nuw nsw i32 %1167, %1056
  %1173 = lshr i32 %1056, 2
  %1174 = add nuw nsw i32 %1167, %1173
  %1175 = udiv i32 %1172, %1174
  %1176 = call i32 @llvm.umax.i32(i32 %1175, i32 %1167) #23
  br label %1177

1177:                                             ; preds = %1171, %1169
  %1178 = phi i32 [ %1176, %1171 ], [ %1167, %1169 ]
  %1179 = trunc i32 %1178 to i16
  store i16 %1179, ptr %1054, align 4
  %1180 = getelementptr i8, ptr %0, i32 -42
  store i8 1, ptr %1180, align 2
  br label %1238

1181:                                             ; preds = %1049, %1045
  %1182 = getelementptr i8, ptr %0, i32 -44
  %1183 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 25
  %1184 = load i16, ptr %1183, align 64
  %1185 = icmp eq i16 %1184, 1000
  br i1 %1185, label %1186, label %1225

1186:                                             ; preds = %1181
  %1187 = getelementptr i8, ptr %0, i32 -28
  %1188 = load i32, ptr %1187, align 4
  %1189 = icmp eq i32 %1188, 0
  br i1 %1189, label %1194, label %1190

1190:                                             ; preds = %1186
  %1191 = getelementptr i8, ptr %0, i32 -32
  %1192 = load i32, ptr %1191, align 4
  %1193 = udiv i32 %1192, %1188
  br label %1194

1194:                                             ; preds = %1190, %1186
  %1195 = phi i32 [ %1193, %1190 ], [ 0, %1186 ]
  %1196 = getelementptr i8, ptr %0, i32 -12
  %1197 = load i32, ptr %1196, align 4
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1204, label %1199

1199:                                             ; preds = %1194
  %1200 = getelementptr i8, ptr %0, i32 -16
  %1201 = load i32, ptr %1200, align 4
  %1202 = udiv i32 %1201, %1197
  %1203 = call i32 @llvm.umax.i32(i32 %1195, i32 %1202) #23
  br label %1204

1204:                                             ; preds = %1199, %1194
  %1205 = phi i32 [ %1203, %1199 ], [ %1195, %1194 ]
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1233, label %1207

1207:                                             ; preds = %1204
  %1208 = add i32 %1205, 24
  %1209 = call i32 @llvm.smin.i32(i32 %1208, i32 3000) #23
  %1210 = add i32 %1209, -301
  %1211 = icmp ult i32 %1210, 899
  %1212 = select i1 %1211, i32 3, i32 2
  %1213 = sdiv i32 %1209, %1212
  %1214 = icmp slt i32 %1213, 196
  br i1 %1214, label %1215, label %1225

1215:                                             ; preds = %1207
  br i1 %1034, label %1220, label %1216

1216:                                             ; preds = %1215
  %1217 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 7
  %1218 = load i32, ptr %1217, align 4
  %1219 = icmp eq i32 %1218, 3
  br i1 %1219, label %1224, label %1225

1220:                                             ; preds = %1215
  %1221 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 8
  %1222 = load i32, ptr %1221, align 8
  %1223 = icmp eq i32 %1222, 3
  br i1 %1223, label %1224, label %1225

1224:                                             ; preds = %1220, %1216
  br label %1225

1225:                                             ; preds = %1224, %1220, %1216, %1207, %1181
  %1226 = phi i32 [ 196, %1224 ], [ %1213, %1220 ], [ %1213, %1207 ], [ 980, %1181 ], [ %1213, %1216 ]
  %1227 = load i16, ptr %1182, align 4
  %1228 = zext i16 %1227 to i32
  %1229 = icmp eq i32 %1226, %1228
  br i1 %1229, label %1233, label %1230

1230:                                             ; preds = %1225
  %1231 = trunc i32 %1226 to i16
  store i16 %1231, ptr %1182, align 4
  %1232 = getelementptr i8, ptr %0, i32 -42
  store i8 1, ptr %1232, align 2
  br label %1233

1233:                                             ; preds = %1230, %1225, %1204
  %1234 = getelementptr i8, ptr %0, i32 -32
  store i32 0, ptr %1234, align 4
  %1235 = getelementptr i8, ptr %0, i32 -28
  store i32 0, ptr %1235, align 4
  %1236 = getelementptr i8, ptr %0, i32 -16
  store i32 0, ptr %1236, align 4
  %1237 = getelementptr i8, ptr %0, i32 -12
  store i32 0, ptr %1237, align 4
  br label %1238

1238:                                             ; preds = %1233, %1177, %1166, %1152, %1040, %1035
  %1239 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 3
  %1240 = load volatile i32, ptr %1239, align 4
  %1241 = and i32 %1240, 4
  %1242 = icmp eq i32 %1241, 0
  br i1 %1242, label %1243, label %1257

1243:                                             ; preds = %1238
  %1244 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 4
  %1245 = load i32, ptr %1244, align 4
  %1246 = and i32 %1245, 8192
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %1256, label %1248

1248:                                             ; preds = %1243
  %1249 = getelementptr inbounds %struct.igb_adapter, ptr %1032, i32 0, i32 37, i32 1
  %1250 = load volatile ptr, ptr %1249, align 4
  %1251 = icmp eq ptr %1250, null
  br i1 %1251, label %1257, label %1252, !prof !9

1252:                                             ; preds = %1248
  call void asm sideeffect "dsb st", "~{memory}"() #23, !srcloc !216
  call void @arm_heavy_mb() #23
  %1253 = getelementptr i8, ptr %0, i32 -48
  %1254 = load i32, ptr %1253, align 8
  %1255 = getelementptr i8, ptr %1250, i32 5412
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %1255, i32 %1254) #23, !srcloc !14
  br label %1257

1256:                                             ; preds = %1243
  call fastcc void @igb_irq_enable(ptr noundef %1032) #23
  br label %1257

1257:                                             ; preds = %1256, %1252, %1248, %1238, %1028, %1027, %1024
  %1258 = phi i32 [ %1, %1027 ], [ %1029, %1028 ], [ %1, %1024 ], [ %1029, %1238 ], [ %1029, %1248 ], [ %1029, %1252 ], [ %1029, %1256 ]
  ret i32 %1258
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_consume_skb(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_return_frame(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_completed(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_schedule_queue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @igb_ptp_rx_pktstamp(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_receive(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_do_flush() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_do_redirect(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_warn_invalid_xdp_action(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_master_redirect(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdp_convert_zc_to_xdp_frame(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_warn(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xdp_exception(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_add_rx_frag(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @napi_build_skb(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_get_headlen(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__napi_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @igb_ptp_rx_rgtstamp(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #16

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #21

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umax.i8(i8, i8) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #16

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { nofree nounwind null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn }
attributes #15 = { mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #19 = { nofree null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nounwind readonly }
attributes #21 = { argmemonly nofree nounwind readonly willreturn }
attributes #22 = { cold nounwind }
attributes #23 = { nounwind }
attributes #24 = { nounwind allocsize(0) }
attributes #25 = { nounwind readnone }
attributes #26 = { nounwind allocsize(2) }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{i64 5148242}
!11 = !{i64 2159200932}
!12 = !{i64 2159201236}
!13 = !{i64 2159377187}
!14 = !{i64 5147824}
!15 = !{i8 0, i8 2}
!16 = !{i64 2159334441}
!17 = !{i64 2159341992}
!18 = !{i64 2159345456}
!19 = !{i64 2159348859}
!20 = !{i64 2159352293}
!21 = !{i64 2159355738}
!22 = !{i64 2159359180}
!23 = !{i64 2159362712}
!24 = !{!"auto-init"}
!25 = !{i64 2159514940}
!26 = !{i64 2159518448}
!27 = !{i64 2159522270}
!28 = !{i64 2159823766}
!29 = !{i64 2159827252}
!30 = !{i64 2159525715}
!31 = !{i64 2149199799}
!32 = !{i64 2149195623}
!33 = !{i64 2149195698, i64 2149195725, i64 2149195772, i64 2149195794, i64 2149195822, i64 2149195842}
!34 = !{i64 2149222802}
!35 = !{i64 2159509461}
!36 = !{i64 2159213756}
!37 = !{i64 2159217396}
!38 = !{i64 2159221030}
!39 = !{i64 2159224613}
!40 = !{i64 2159209060}
!41 = !{i64 2159209691, i64 2159210197, i64 2159209728, i64 2159209784, i64 2159209818, i64 2159209842, i64 2159209883, i64 2159209904, i64 2159209932, i64 2159209966}
!42 = !{i64 2159255831}
!43 = !{i64 2159259397}
!44 = !{i64 2159262909}
!45 = !{i64 2159266361}
!46 = !{i64 2159269795}
!47 = !{i64 2159273718}
!48 = !{i64 2159277819}
!49 = !{i64 2159380936}
!50 = !{i64 2159384423}
!51 = !{i64 2159238086}
!52 = !{i64 2159241600}
!53 = !{i64 2159245150}
!54 = !{i64 2159248616}
!55 = !{i64 2159252016}
!56 = !{i64 2149318154}
!57 = !{i64 2159645632}
!58 = !{i64 2153218583}
!59 = !{i64 2153218425}
!60 = !{i64 2153218727}
!61 = !{i64 2149655375}
!62 = !{i64 2149318371}
!63 = !{i64 2159391958}
!64 = !{i64 2159395539}
!65 = !{i64 2159398959}
!66 = !{i64 2159402357}
!67 = !{i64 2159405755}
!68 = !{i64 2159388393}
!69 = !{i64 2159830769}
!70 = !{i64 2159834231}
!71 = !{i64 2159837731}
!72 = !{i64 2159841133}
!73 = !{i64 2159844546}
!74 = !{i64 2159848071}
!75 = !{i64 2159851632}
!76 = !{i64 2159855115}
!77 = !{i64 2159858547}
!78 = !{i64 2159409948}
!79 = !{i64 2159476245}
!80 = !{!"branch_weights", i32 2000, i32 1}
!81 = !{i64 2159482244}
!82 = !{i64 2159485806}
!83 = !{i64 2159489574}
!84 = !{i64 2159493481}
!85 = !{i64 2159497318}
!86 = !{i64 2159501203}
!87 = !{i64 2159501607}
!88 = !{i64 2159505497}
!89 = !{i64 2159529482}
!90 = !{i64 2159532970}
!91 = !{i64 2159536566}
!92 = !{i64 2159551616}
!93 = !{i64 2159555995}
!94 = !{i64 2159559814}
!95 = !{i64 2159563651}
!96 = !{i64 2159567522}
!97 = !{i64 2159571477}
!98 = !{i64 2159571881}
!99 = !{i64 2159575826}
!100 = !{i64 2159547762}
!101 = !{i64 2153042206, i64 2153042706, i64 2153042243, i64 2153042299, i64 2153042333, i64 2153042357, i64 2153042398, i64 2153042419, i64 2153042447, i64 2153042481}
!102 = !{i64 2153042986}
!103 = !{i64 2154764305}
!104 = !{i64 2159635248}
!105 = !{i64 2159631779}
!106 = !{i64 2149655674}
!107 = !{i64 2149655975}
!108 = !{i64 739652}
!109 = !{i64 2159635534}
!110 = !{i64 815274, i64 2148305245, i64 2148305271, i64 2148305318, i64 2148305340, i64 2148305368, i64 2148305388}
!111 = !{i64 2148325122, i64 2148325154, i64 2148325183, i64 2148325217, i64 2148325248, i64 2148325271}
!112 = !{i64 2148426462}
!113 = !{i64 6040250}
!114 = !{i64 2159632956}
!115 = !{i64 2159633242}
!116 = !{!"branch_weights", i32 4001, i32 1}
!117 = !{i64 2148425427}
!118 = !{i64 2148323581, i64 2148323613, i64 2148323642, i64 2148323676, i64 2148323707, i64 2148323730}
!119 = !{i64 2148318118, i64 2148318150, i64 2148318179, i64 2148318213, i64 2148318244, i64 2148318267}
!120 = !{i64 2148316660, i64 2148316686, i64 2148316715, i64 2148316749, i64 2148316780, i64 2148316803}
!121 = !{i64 2159742374}
!122 = !{i64 2159742558}
!123 = !{i64 2159455869}
!124 = !{i64 2159459314}
!125 = !{i64 2148316167}
!126 = !{i64 801843, i64 801868, i64 801890, i64 801906, i64 801918, i64 801938, i64 801962, i64 801978, i64 801990}
!127 = !{i64 2148316293}
!128 = !{i64 2159804195}
!129 = !{i64 2159807597}
!130 = !{i64 2159811013}
!131 = !{i64 2159613565}
!132 = !{i64 2159621076}
!133 = !{i64 2159438224}
!134 = !{i64 2159285043}
!135 = !{i64 2159281514}
!136 = !{i64 2153952731, i64 2153953219, i64 2153952768, i64 2153952824, i64 2153952858, i64 2153952882, i64 2153952923, i64 2153952944, i64 2153952972, i64 2153953006}
!137 = !{i64 2159585739}
!138 = !{i64 2159589725}
!139 = !{i64 2159593716}
!140 = !{i64 2159597272}
!141 = !{i64 2159721886}
!142 = !{i64 2159601031}
!143 = !{i64 2159640251}
!144 = !{i64 2159691441}
!145 = !{i64 2159694944}
!146 = !{i64 2159543993}
!147 = !{i64 2159819701}
!148 = !{i64 2159431463}
!149 = !{i64 823924, i64 823941, i64 823965, i64 823991, i64 824009}
!150 = !{i64 2159431783}
!151 = !{i64 2159432692}
!152 = !{i64 2159433025}
!153 = !{i64 2159676267}
!154 = !{i64 2159792953}
!155 = !{i64 2159796776}
!156 = !{i64 2159684283}
!157 = !{i64 2159687814}
!158 = !{i64 2159300071}
!159 = !{i64 677845, i64 677872}
!160 = !{i64 678540, i64 678567, i64 678600, i64 678621, i64 678648, i64 678674}
!161 = !{i64 2159308971}
!162 = !{i64 2159312538}
!163 = !{i64 2159316193}
!164 = !{i64 2159319690}
!165 = !{i64 2159323237}
!166 = !{i64 2159326790}
!167 = !{i64 2159330343}
!168 = !{i64 2159290650}
!169 = !{i64 2159295455}
!170 = !{i64 2159746231}
!171 = !{i64 2159749688}
!172 = !{i64 2159753145}
!173 = !{i64 2159433150}
!174 = !{i64 2159433344}
!175 = !{i64 2159366394}
!176 = !{i64 2159369828}
!177 = !{i64 2159373440}
!178 = !{i64 2159188932}
!179 = !{i64 2159192493}
!180 = !{i64 2159758480}
!181 = !{i64 2159761937}
!182 = !{i64 2159765370}
!183 = !{i64 2159768792}
!184 = !{i64 2159772196}
!185 = !{i64 2159775594}
!186 = !{i64 2159788625}
!187 = !{i64 2159783204}
!188 = !{i64 2159205272}
!189 = !{i64 2159668851}
!190 = !{i64 2159701186}
!191 = !{i64 2159704828}
!192 = !{i64 2159672585}
!193 = !{i64 2159540311}
!194 = !{i64 2159668473}
!195 = !{i64 2159664930}
!196 = !{i64 2159680309}
!197 = !{i64 2148163676, i64 2148163956, i64 2148164290, i64 2148164624}
!198 = !{!199}
!199 = distinct !{!199, !200, !"timespec64_add: argument 0"}
!200 = distinct !{!200, !"timespec64_add"}
!201 = !{i64 2159653206}
!202 = !{i64 2159656743}
!203 = !{i64 2159660324}
!204 = !{i64 2159727294}
!205 = !{i64 815092}
!206 = !{!"branch_weights", i32 2002, i32 2000}
!207 = !{i64 2154765350}
!208 = !{i64 2159732628}
!209 = !{i64 2159733035}
!210 = !{i64 2159741297}
!211 = !{i64 720952, i64 721013}
!212 = !{i64 723969}
!213 = !{i64 2157664830}
!214 = !{i64 2157664994}
!215 = !{!"branch_weights", i32 2000, i32 8006002}
!216 = !{i64 2159725672}
