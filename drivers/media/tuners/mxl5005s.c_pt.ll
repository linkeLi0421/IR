; ModuleID = '/llk/IR/drivers/media/tuners/mxl5005s.c_pt.bc'
source_filename = "../drivers/media/tuners/mxl5005s.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mxl5005s_attach:\09\09\09\09\09"
module asm "\09.asciz \09\22mxl5005s_attach\22\09\09\09\09\09"
module asm "__kstrtabns_mxl5005s_attach:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.dvb_tuner_ops = type { %struct.dvb_tuner_info, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dvb_tuner_info = type { [128 x i8], i32, i32, i32, i32, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.mxl5005s_state = type { i8, i8, i32, i32, i16, i32, i32, i8, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i16, [40 x %struct.TunerControl], i16, [36 x %struct.TunerControl], i16, [189 x %struct.TunerControl], i16, [104 x %struct.TunerReg], ptr, ptr, ptr, i32 }
%struct.TunerControl = type { i16, i16, [25 x i16], [25 x i16], [25 x i16] }
%struct.TunerReg = type { i16, i16 }
%struct.dvb_frontend = type { %struct.kref, %struct.dvb_frontend_ops, ptr, ptr, ptr, ptr, ptr, ptr, %struct.dtv_frontend_properties, ptr, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.dvb_frontend_ops = type { %struct.dvb_frontend_internal_info, [8 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.dvb_tuner_ops, %struct.analog_demod_ops }
%struct.dvb_frontend_internal_info = type { [128 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.analog_demod_ops = type { %struct.analog_demod_info, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.analog_demod_info = type { ptr }
%struct.dtv_frontend_properties = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i8, [3 x %struct.anon], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats }
%struct.anon = type { i8, i32, i32, i8 }
%struct.dtv_fe_stats = type { i8, [4 x %struct.dtv_stats] }
%struct.dtv_stats = type <{ i8, %union.anon }>
%union.anon = type { i64 }
%struct.i2c_msg = type { i16, i16, i16, ptr }
%struct.mxl5005s_config = type { i8, i32, i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8 }

@.str.1 = private unnamed_addr constant [40 x i8] c"\016MXL5005S: Attached at address 0x%02x\0A\00", align 1
@mxl5005s_tuner_ops = internal unnamed_addr constant %struct.dvb_tuner_ops { %struct.dvb_tuner_info { [128 x i8] c"MaxLinear MXL5005S\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 48000000, i32 860000000, i32 50000, i32 0, i32 0, i32 0 }, ptr @mxl5005s_release, ptr @mxl5005s_init, ptr null, ptr null, ptr null, ptr @mxl5005s_set_params, ptr null, ptr null, ptr @mxl5005s_get_frequency, ptr @mxl5005s_get_bandwidth, ptr @mxl5005s_get_if_frequency, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@__kstrtab_mxl5005s_attach = external dso_local constant [0 x i8], align 1
@__kstrtabns_mxl5005s_attach = external dso_local constant [0 x i8], align 1
@__ksymtab_mxl5005s_attach = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mxl5005s_attach to i32), ptr @__kstrtab_mxl5005s_attach, ptr @__kstrtabns_mxl5005s_attach }, section "___ksymtab+mxl5005s_attach", align 4
@__UNIQUE_ID_description249 = internal constant [52 x i8] c"description=MaxLinear MXL5005S silicon tuner driver\00", section ".modinfo", align 1
@__UNIQUE_ID_author250 = internal constant [19 x i8] c"author=Steven Toth\00", section ".modinfo", align 1
@__UNIQUE_ID_license251 = internal constant [12 x i8] c"license=GPL\00", section ".modinfo", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@.str.3 = private unnamed_addr constant [29 x i8] c"\014mxl5005s I2C reset failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"\014mxl5005s I2C write failed\0A\00", align 1
@MXL_GetInitRegister.RegAddr = internal unnamed_addr constant [23 x i8] c"\0B\0C\0D\16 +,58;ILM[\86\87\89\93\9C\A6\A7\A8\19", align 1
@__const.MXL_RegWriteBit.AND_MAP = private unnamed_addr constant [8 x i8] c"\FE\FD\FB\F7\EF\DF\BF\7F", align 1
@__const.MXL_RegWriteBit.OR_MAP = private unnamed_addr constant [8 x i8] c"\01\02\04\08\10 @\80", align 1
@MXL_GetCHRegister.RegAddr = internal unnamed_addr constant [26 x i8] c"\0E\0F\10\11\16+DEFI\\]jklmnop\88\8A\95M\A6\A7\A8", align 1
@llvm.compiler.used = appending global [4 x ptr] [ptr @__UNIQUE_ID_author250, ptr @__UNIQUE_ID_description249, ptr @__UNIQUE_ID_license251, ptr @__ksymtab_mxl5005s_attach], section "llvm.metadata"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @mxl5005s_attach(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = tail call noalias align 4096 ptr @kmalloc_order_trace(i32 noundef 41300, i32 noundef 3520, i32 noundef 4) #10
  %5 = icmp eq ptr %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 27
  store ptr %0, ptr %7, align 8
  %8 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 26
  store ptr %2, ptr %8, align 4
  %9 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 28
  store ptr %1, ptr %9, align 4
  %10 = load i8, ptr %2, align 4
  %11 = zext i8 %10 to i32
  %12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, i32 noundef %11) #11
  %13 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 1, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(220) %13, ptr noundef nonnull align 4 dereferenceable(220) @mxl5005s_tuner_ops, i32 220, i1 false)
  %14 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  store ptr %4, ptr %14, align 4
  br label %15

15:                                               ; preds = %6, %3
  %16 = phi ptr [ %0, %6 ], [ null, %3 ]
  ret ptr %16
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kmalloc_order_trace(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @mxl5005s_release(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  tail call void @kfree(ptr noundef %3) #12
  store ptr null, ptr %2, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @mxl5005s_init(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 29
  store i32 3, ptr %4, align 4
  %5 = tail call fastcc i32 @mxl5005s_reconfigure(ptr noundef %0, i32 noundef 3, i32 noundef 6000000)
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @mxl5005s_set_params(ptr noundef %0) #0 {
  %2 = alloca [3 x i8], align 1
  %3 = alloca %struct.i2c_msg, align 4
  %4 = alloca [104 x i8], align 2
  %5 = alloca [104 x i8], align 1
  %6 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 8
  %9 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 8, i32 15
  %10 = load i32, ptr %9, align 4
  switch i32 %10, label %12 [
    i32 11, label %17
    i32 2, label %11
  ]

11:                                               ; preds = %1
  br label %17

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 8, i32 7
  %14 = load i32, ptr %13, align 4
  switch i32 %14, label %317 [
    i32 6000000, label %17
    i32 7000000, label %15
    i32 8000000, label %16
    i32 0, label %16
  ]

15:                                               ; preds = %12
  br label %17

16:                                               ; preds = %12, %12
  br label %17

17:                                               ; preds = %16, %15, %12, %11, %1
  %18 = phi i32 [ 1, %16 ], [ 1, %15 ], [ 3, %11 ], [ 2, %1 ], [ 1, %12 ]
  %19 = phi i32 [ 8000000, %16 ], [ 7000000, %15 ], [ 6000000, %11 ], [ 6000000, %1 ], [ %14, %12 ]
  %20 = getelementptr inbounds %struct.mxl5005s_state, ptr %7, i32 0, i32 29
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq i32 %18, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.mxl5005s_state, ptr %7, i32 0, i32 2
  %25 = load i32, ptr %24, align 4
  %26 = icmp eq i32 %19, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %23, %17
  store i32 %18, ptr %20, align 4
  %28 = tail call fastcc i32 @mxl5005s_reconfigure(ptr noundef %0, i32 noundef %18, i32 noundef %19)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %317

30:                                               ; preds = %27
  %31 = load ptr, ptr %6, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi ptr [ %31, %30 ], [ %7, %23 ]
  %34 = load i32, ptr %8, align 4
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %4) #12
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 2 dereferenceable(104) %4, i8 0, i32 104, i1 false) #12, !annotation !8
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %5) #12
  %35 = getelementptr inbounds i8, ptr %5, i32 1
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(104) %35, i8 0, i32 103, i1 false) #12, !annotation !8
  store i8 9, ptr %4, align 2
  %36 = getelementptr inbounds %struct.mxl5005s_state, ptr %33, i32 0, i32 26
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.mxl5005s_config, ptr %37, i32 0, i32 14
  %39 = load i8, ptr %38, align 1
  %40 = or i8 %39, -79
  store i8 %40, ptr %5, align 1
  %41 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 1, i32 28
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %32
  %45 = tail call i32 %42(ptr noundef %0, i32 noundef 1) #12
  %46 = load ptr, ptr %6, align 4
  %47 = getelementptr inbounds %struct.mxl5005s_state, ptr %46, i32 0, i32 26
  %48 = load ptr, ptr %47, align 4
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi ptr [ %48, %44 ], [ %37, %32 ]
  %51 = phi ptr [ %46, %44 ], [ %33, %32 ]
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %2) #12
  store i8 9, ptr %2, align 1
  %52 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %40, ptr %52, align 1
  %53 = getelementptr inbounds i8, ptr %2, i32 2
  store i8 -2, ptr %53, align 1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #12
  %54 = getelementptr inbounds i8, ptr %3, i32 4
  store i32 3, ptr %54, align 4, !annotation !8
  %55 = load i8, ptr %50, align 4
  %56 = zext i8 %55 to i16
  store i16 %56, ptr %3, align 4
  %57 = getelementptr inbounds %struct.i2c_msg, ptr %3, i32 0, i32 1
  store i16 0, ptr %57, align 2
  %58 = getelementptr inbounds %struct.i2c_msg, ptr %3, i32 0, i32 3
  store ptr %2, ptr %58, align 4
  %59 = getelementptr inbounds %struct.mxl5005s_state, ptr %51, i32 0, i32 28
  %60 = load ptr, ptr %59, align 4
  %61 = call i32 @i2c_transfer(ptr noundef %60, ptr noundef nonnull %3, i32 noundef 1) #12
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %65, label %63

63:                                               ; preds = %49
  %64 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5) #11
  br label %65

65:                                               ; preds = %63, %49
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #12
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %2) #12
  %66 = load ptr, ptr %41, align 4
  %67 = icmp eq ptr %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = call i32 %66(ptr noundef %0, i32 noundef 0) #12
  br label %70

70:                                               ; preds = %68, %65
  call fastcc void @MXL_TuneRF(ptr noundef %0, i32 noundef %34) #12
  %71 = load ptr, ptr %6, align 4
  %72 = getelementptr inbounds %struct.mxl5005s_state, ptr %71, i32 0, i32 18
  %73 = load i16, ptr %72, align 4
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = zext i16 %73 to i32
  br label %86

77:                                               ; preds = %86
  %78 = add nuw nsw i32 %87, 1
  %79 = icmp eq i32 %78, %76
  br i1 %79, label %80, label %86

80:                                               ; preds = %77, %70
  %81 = getelementptr inbounds %struct.mxl5005s_state, ptr %71, i32 0, i32 20
  %82 = load i16, ptr %81, align 2
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %131, label %84

84:                                               ; preds = %80
  %85 = zext i16 %82 to i32
  br label %110

86:                                               ; preds = %77, %75
  %87 = phi i32 [ 0, %75 ], [ %78, %77 ]
  %88 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %87
  %89 = load i16, ptr %88, align 2
  %90 = icmp eq i16 %89, 12
  br i1 %90, label %91, label %77

91:                                               ; preds = %86
  %92 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %87, i32 1
  %93 = load i16, ptr %92, align 2
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %131, label %95

95:                                               ; preds = %91
  %96 = zext i16 %93 to i32
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i32 [ 0, %95 ], [ %105, %97 ]
  %99 = phi i32 [ 0, %95 ], [ %104, %97 ]
  %100 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %87, i32 4, i32 %98
  %101 = load i16, ptr %100, align 2
  %102 = zext i16 %101 to i32
  %103 = shl i32 %102, %98
  %104 = add i32 %103, %99
  %105 = add nuw nsw i32 %98, 1
  %106 = icmp eq i32 %105, %96
  br i1 %106, label %131, label %97

107:                                              ; preds = %110
  %108 = add nuw nsw i32 %111, 1
  %109 = icmp eq i32 %108, %85
  br i1 %109, label %131, label %110

110:                                              ; preds = %107, %84
  %111 = phi i32 [ 0, %84 ], [ %108, %107 ]
  %112 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 21, i32 %111
  %113 = load i16, ptr %112, align 2
  %114 = icmp eq i16 %113, 12
  br i1 %114, label %115, label %107

115:                                              ; preds = %110
  %116 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 21, i32 %111, i32 1
  %117 = load i16, ptr %116, align 2
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %131, label %119

119:                                              ; preds = %115
  %120 = zext i16 %117 to i32
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i32 [ 0, %119 ], [ %129, %121 ]
  %123 = phi i32 [ 0, %119 ], [ %128, %121 ]
  %124 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 21, i32 %111, i32 4, i32 %122
  %125 = load i16, ptr %124, align 2
  %126 = zext i16 %125 to i32
  %127 = shl i32 %126, %122
  %128 = add i32 %127, %123
  %129 = add nuw nsw i32 %122, 1
  %130 = icmp eq i32 %129, %120
  br i1 %130, label %131, label %121

131:                                              ; preds = %121, %115, %107, %97, %91, %80
  %132 = phi i32 [ 0, %80 ], [ 0, %91 ], [ 0, %115 ], [ %128, %121 ], [ 0, %107 ], [ %104, %97 ]
  br i1 %74, label %188, label %133

133:                                              ; preds = %181, %131
  %134 = phi i16 [ %182, %181 ], [ %73, %131 ]
  %135 = phi i32 [ %183, %181 ], [ 0, %131 ]
  %136 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %135
  %137 = load i16, ptr %136, align 2
  %138 = icmp eq i16 %137, 77
  br i1 %138, label %139, label %181

139:                                              ; preds = %133
  %140 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %135, i32 1
  %141 = load i16, ptr %140, align 2
  %142 = icmp eq i16 %141, 0
  br i1 %142, label %181, label %143

143:                                              ; preds = %174, %139
  %144 = phi i32 [ %175, %174 ], [ 0, %139 ]
  %145 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %135, i32 4, i32 %144
  store i16 0, ptr %145, align 2
  %146 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %135, i32 3, i32 %144
  %147 = load i16, ptr %146, align 2
  %148 = load ptr, ptr %6, align 4
  %149 = getelementptr inbounds %struct.mxl5005s_state, ptr %148, i32 0, i32 24
  %150 = load i16, ptr %149, align 4
  %151 = zext i16 %150 to i32
  %152 = icmp eq i16 %150, 0
  br i1 %152, label %174, label %153

153:                                              ; preds = %143
  %154 = getelementptr %struct.mxl5005s_state, ptr %71, i32 0, i32 19, i32 %135, i32 2, i32 %144
  %155 = load i16, ptr %154, align 2
  %156 = and i16 %155, 255
  br label %157

157:                                              ; preds = %171, %153
  %158 = phi i32 [ 0, %153 ], [ %172, %171 ]
  %159 = getelementptr %struct.mxl5005s_state, ptr %148, i32 0, i32 25, i32 %158
  %160 = load i16, ptr %159, align 2
  %161 = icmp eq i16 %160, %156
  br i1 %161, label %162, label %171

162:                                              ; preds = %157
  %163 = and i16 %147, 255
  %164 = zext i16 %163 to i32
  %165 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %164
  %166 = load i8, ptr %165, align 1
  %167 = zext i8 %166 to i16
  %168 = getelementptr %struct.mxl5005s_state, ptr %148, i32 0, i32 25, i32 %158, i32 1
  %169 = load i16, ptr %168, align 2
  %170 = and i16 %169, %167
  store i16 %170, ptr %168, align 2
  br label %174

171:                                              ; preds = %157
  %172 = add nuw nsw i32 %158, 1
  %173 = icmp eq i32 %172, %151
  br i1 %173, label %174, label %157

174:                                              ; preds = %171, %162, %143
  %175 = add nuw nsw i32 %144, 1
  %176 = load i16, ptr %140, align 2
  %177 = zext i16 %176 to i32
  %178 = icmp ult i32 %175, %177
  br i1 %178, label %143, label %179

179:                                              ; preds = %174
  %180 = load i16, ptr %72, align 4
  br label %181

181:                                              ; preds = %179, %139, %133
  %182 = phi i16 [ %180, %179 ], [ %134, %139 ], [ %134, %133 ]
  %183 = add nuw nsw i32 %135, 1
  %184 = zext i16 %182 to i32
  %185 = icmp ult i32 %183, %184
  br i1 %185, label %133, label %186

186:                                              ; preds = %181
  %187 = load ptr, ptr %6, align 4
  br label %188

188:                                              ; preds = %186, %131
  %189 = phi ptr [ %187, %186 ], [ %71, %131 ]
  %190 = getelementptr inbounds %struct.mxl5005s_state, ptr %189, i32 0, i32 20
  %191 = load i16, ptr %190, align 2
  %192 = icmp eq i16 %191, 0
  br i1 %192, label %246, label %193

193:                                              ; preds = %241, %188
  %194 = phi i16 [ %242, %241 ], [ %191, %188 ]
  %195 = phi i32 [ %243, %241 ], [ 0, %188 ]
  %196 = getelementptr %struct.mxl5005s_state, ptr %189, i32 0, i32 21, i32 %195
  %197 = load i16, ptr %196, align 2
  %198 = icmp eq i16 %197, 77
  br i1 %198, label %199, label %241

199:                                              ; preds = %193
  %200 = getelementptr %struct.mxl5005s_state, ptr %189, i32 0, i32 21, i32 %195, i32 1
  %201 = load i16, ptr %200, align 2
  %202 = icmp eq i16 %201, 0
  br i1 %202, label %241, label %203

203:                                              ; preds = %234, %199
  %204 = phi i32 [ %235, %234 ], [ 0, %199 ]
  %205 = getelementptr %struct.mxl5005s_state, ptr %189, i32 0, i32 21, i32 %195, i32 4, i32 %204
  store i16 0, ptr %205, align 2
  %206 = getelementptr %struct.mxl5005s_state, ptr %189, i32 0, i32 21, i32 %195, i32 3, i32 %204
  %207 = load i16, ptr %206, align 2
  %208 = load ptr, ptr %6, align 4
  %209 = getelementptr inbounds %struct.mxl5005s_state, ptr %208, i32 0, i32 24
  %210 = load i16, ptr %209, align 4
  %211 = zext i16 %210 to i32
  %212 = icmp eq i16 %210, 0
  br i1 %212, label %234, label %213

213:                                              ; preds = %203
  %214 = getelementptr %struct.mxl5005s_state, ptr %189, i32 0, i32 21, i32 %195, i32 2, i32 %204
  %215 = load i16, ptr %214, align 2
  %216 = and i16 %215, 255
  br label %217

217:                                              ; preds = %231, %213
  %218 = phi i32 [ 0, %213 ], [ %232, %231 ]
  %219 = getelementptr %struct.mxl5005s_state, ptr %208, i32 0, i32 25, i32 %218
  %220 = load i16, ptr %219, align 2
  %221 = icmp eq i16 %220, %216
  br i1 %221, label %222, label %231

222:                                              ; preds = %217
  %223 = and i16 %207, 255
  %224 = zext i16 %223 to i32
  %225 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %224
  %226 = load i8, ptr %225, align 1
  %227 = zext i8 %226 to i16
  %228 = getelementptr %struct.mxl5005s_state, ptr %208, i32 0, i32 25, i32 %218, i32 1
  %229 = load i16, ptr %228, align 2
  %230 = and i16 %229, %227
  store i16 %230, ptr %228, align 2
  br label %234

231:                                              ; preds = %217
  %232 = add nuw nsw i32 %218, 1
  %233 = icmp eq i32 %232, %211
  br i1 %233, label %234, label %217

234:                                              ; preds = %231, %222, %203
  %235 = add nuw nsw i32 %204, 1
  %236 = load i16, ptr %200, align 2
  %237 = zext i16 %236 to i32
  %238 = icmp ult i32 %235, %237
  br i1 %238, label %203, label %239

239:                                              ; preds = %234
  %240 = load i16, ptr %190, align 2
  br label %241

241:                                              ; preds = %239, %199, %193
  %242 = phi i16 [ %240, %239 ], [ %194, %199 ], [ %194, %193 ]
  %243 = add nuw nsw i32 %195, 1
  %244 = zext i16 %242 to i32
  %245 = icmp ult i32 %243, %244
  br i1 %245, label %193, label %246

246:                                              ; preds = %241, %188
  %247 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 73, i32 noundef 1, i16 noundef zeroext 1) #12
  %248 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 73, i32 noundef 1, i16 noundef zeroext 2) #12
  %249 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %250 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %251 = load ptr, ptr %6, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 2 dereferenceable(26) %4, ptr noundef nonnull align 1 dereferenceable(26) @MXL_GetCHRegister.RegAddr, i32 26, i1 false) #12
  br label %252

252:                                              ; preds = %270, %246
  %253 = phi i32 [ 0, %246 ], [ %271, %270 ]
  %254 = getelementptr [26 x i8], ptr @MXL_GetCHRegister.RegAddr, i32 0, i32 %253
  %255 = load i8, ptr %254, align 1
  %256 = getelementptr i8, ptr %5, i32 %253
  %257 = zext i8 %255 to i16
  br label %258

258:                                              ; preds = %267, %252
  %259 = phi i32 [ 0, %252 ], [ %268, %267 ]
  %260 = getelementptr %struct.mxl5005s_state, ptr %251, i32 0, i32 25, i32 %259
  %261 = load i16, ptr %260, align 2
  %262 = icmp eq i16 %261, %257
  br i1 %262, label %263, label %267

263:                                              ; preds = %258
  %264 = getelementptr %struct.mxl5005s_state, ptr %251, i32 0, i32 25, i32 %259, i32 1
  %265 = load i16, ptr %264, align 2
  %266 = trunc i16 %265 to i8
  store i8 %266, ptr %256, align 1
  br label %270

267:                                              ; preds = %258
  %268 = add nuw nsw i32 %259, 1
  %269 = icmp eq i32 %268, 104
  br i1 %269, label %270, label %258

270:                                              ; preds = %267, %263
  %271 = add nuw nsw i32 %253, 1
  %272 = icmp eq i32 %271, 26
  br i1 %272, label %273, label %252

273:                                              ; preds = %270
  %274 = getelementptr inbounds [104 x i8], ptr %4, i32 0, i32 26
  store i8 9, ptr %274, align 2
  %275 = load ptr, ptr %36, align 4
  %276 = getelementptr inbounds %struct.mxl5005s_config, ptr %275, i32 0, i32 14
  %277 = load i8, ptr %276, align 1
  %278 = or i8 %277, -13
  %279 = getelementptr inbounds [104 x i8], ptr %5, i32 0, i32 26
  store i8 %278, ptr %279, align 1
  call fastcc void @mxl5005s_writeregs(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i8 noundef zeroext 27) #12
  call void @msleep(i32 noundef 150) #12
  %280 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 77, i32 noundef 1, i16 noundef zeroext 1) #12
  %281 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 77, i32 noundef 1, i16 noundef zeroext 2) #12
  %282 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef %132, i16 noundef zeroext 1) #12
  %283 = call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef %132, i16 noundef zeroext 2) #12
  %284 = load ptr, ptr %6, align 4
  store i16 -30677, ptr %4, align 2
  br label %285

285:                                              ; preds = %294, %273
  %286 = phi i32 [ 0, %273 ], [ %295, %294 ]
  %287 = getelementptr %struct.mxl5005s_state, ptr %284, i32 0, i32 25, i32 %286
  %288 = load i16, ptr %287, align 2
  %289 = icmp eq i16 %288, 43
  br i1 %289, label %290, label %294

290:                                              ; preds = %285
  %291 = getelementptr %struct.mxl5005s_state, ptr %284, i32 0, i32 25, i32 %286, i32 1
  %292 = load i16, ptr %291, align 2
  %293 = trunc i16 %292 to i8
  store i8 %293, ptr %5, align 1
  br label %297

294:                                              ; preds = %285
  %295 = add nuw nsw i32 %286, 1
  %296 = icmp eq i32 %295, 104
  br i1 %296, label %297, label %285

297:                                              ; preds = %294, %290
  br label %298

298:                                              ; preds = %303, %297
  %299 = phi i32 [ %304, %303 ], [ 0, %297 ]
  %300 = getelementptr %struct.mxl5005s_state, ptr %284, i32 0, i32 25, i32 %299
  %301 = load i16, ptr %300, align 2
  %302 = icmp eq i16 %301, 136
  br i1 %302, label %306, label %303

303:                                              ; preds = %298
  %304 = add nuw nsw i32 %299, 1
  %305 = icmp eq i32 %304, 104
  br i1 %305, label %310, label %298

306:                                              ; preds = %298
  %307 = getelementptr %struct.mxl5005s_state, ptr %284, i32 0, i32 25, i32 %299, i32 1
  %308 = load i16, ptr %307, align 2
  %309 = trunc i16 %308 to i8
  store i8 %309, ptr %35, align 1
  br label %310

310:                                              ; preds = %306, %303
  %311 = getelementptr inbounds [104 x i8], ptr %4, i32 0, i32 2
  store i8 9, ptr %311, align 2
  %312 = load ptr, ptr %36, align 4
  %313 = getelementptr inbounds %struct.mxl5005s_config, ptr %312, i32 0, i32 14
  %314 = load i8, ptr %313, align 1
  %315 = or i8 %314, -13
  %316 = getelementptr inbounds [104 x i8], ptr %5, i32 0, i32 2
  store i8 %315, ptr %316, align 1
  call fastcc void @mxl5005s_writeregs(ptr noundef %0, ptr noundef nonnull %4, ptr noundef nonnull %5, i8 noundef zeroext 3) #12
  call void @msleep(i32 noundef 100) #12
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %5) #12
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %4) #12
  br label %317

317:                                              ; preds = %310, %27, %12
  %318 = phi i32 [ -22, %12 ], [ 0, %310 ], [ %28, %27 ]
  ret i32 %318
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @mxl5005s_get_frequency(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #6 {
  %3 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 5
  %6 = load i32, ptr %5, align 4
  store i32 %6, ptr %1, align 4
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @mxl5005s_get_bandwidth(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #6 {
  %3 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 2
  %6 = load i32, ptr %5, align 4
  store i32 %6, ptr %1, align 4
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @mxl5005s_get_if_frequency(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #6 {
  %3 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 3
  %6 = load i32, ptr %5, align 4
  store i32 %6, ptr %1, align 4
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @mxl5005s_reconfigure(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca [3 x i8], align 1
  %5 = alloca %struct.i2c_msg, align 4
  %6 = alloca [2 x i8], align 2
  %7 = alloca %struct.i2c_msg, align 4
  %8 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %9 = load ptr, ptr %8, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %6) #12
  store i16 255, ptr %6, align 2
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #12
  %10 = getelementptr inbounds i8, ptr %7, i32 4
  store i32 2, ptr %10, align 4, !annotation !8
  %11 = getelementptr inbounds %struct.mxl5005s_state, ptr %9, i32 0, i32 26
  %12 = load ptr, ptr %11, align 4
  %13 = load i8, ptr %12, align 4
  %14 = zext i8 %13 to i16
  store i16 %14, ptr %7, align 4
  %15 = getelementptr inbounds %struct.i2c_msg, ptr %7, i32 0, i32 1
  store i16 0, ptr %15, align 2
  %16 = getelementptr inbounds %struct.i2c_msg, ptr %7, i32 0, i32 3
  store ptr %6, ptr %16, align 4
  %17 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 1, i32 28
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  %21 = call i32 %18(ptr noundef %0, i32 noundef 1) #12
  br label %22

22:                                               ; preds = %20, %3
  %23 = getelementptr inbounds %struct.mxl5005s_state, ptr %9, i32 0, i32 28
  %24 = load ptr, ptr %23, align 4
  %25 = call i32 @i2c_transfer(ptr noundef %24, ptr noundef nonnull %7, i32 noundef 1) #12
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.3) #11
  br label %29

29:                                               ; preds = %27, %22
  %30 = load ptr, ptr %17, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = call i32 %30(ptr noundef %0, i32 noundef 0) #12
  br label %34

34:                                               ; preds = %32, %29
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #12
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %6) #12
  %35 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %36 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %35, i32 noundef 3520, i32 noundef 104) #13
  %37 = icmp eq ptr %36, null
  br i1 %37, label %168, label %38

38:                                               ; preds = %34
  %39 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %40 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %39, i32 noundef 3520, i32 noundef 104) #13
  %41 = icmp eq ptr %40, null
  br i1 %41, label %165, label %42

42:                                               ; preds = %38
  store i8 9, ptr %36, align 8
  %43 = load ptr, ptr %11, align 4
  %44 = getelementptr inbounds %struct.mxl5005s_config, ptr %43, i32 0, i32 14
  %45 = load i8, ptr %44, align 1
  %46 = or i8 %45, -79
  store i8 %46, ptr %40, align 8
  %47 = load ptr, ptr %17, align 4
  %48 = icmp eq ptr %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %42
  %50 = call i32 %47(ptr noundef %0, i32 noundef 1) #12
  br label %51

51:                                               ; preds = %49, %42
  %52 = load ptr, ptr %8, align 4
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %4) #12
  store i8 9, ptr %4, align 1
  %53 = getelementptr inbounds i8, ptr %4, i32 1
  store i8 %46, ptr %53, align 1
  %54 = getelementptr inbounds i8, ptr %4, i32 2
  store i8 -2, ptr %54, align 1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #12
  %55 = getelementptr inbounds i8, ptr %5, i32 4
  store i32 3, ptr %55, align 4, !annotation !8
  %56 = getelementptr inbounds %struct.mxl5005s_state, ptr %52, i32 0, i32 26
  %57 = load ptr, ptr %56, align 4
  %58 = load i8, ptr %57, align 4
  %59 = zext i8 %58 to i16
  store i16 %59, ptr %5, align 4
  %60 = getelementptr inbounds %struct.i2c_msg, ptr %5, i32 0, i32 1
  store i16 0, ptr %60, align 2
  %61 = getelementptr inbounds %struct.i2c_msg, ptr %5, i32 0, i32 3
  store ptr %4, ptr %61, align 4
  %62 = getelementptr inbounds %struct.mxl5005s_state, ptr %52, i32 0, i32 28
  %63 = load ptr, ptr %62, align 4
  %64 = call i32 @i2c_transfer(ptr noundef %63, ptr noundef nonnull %5, i32 noundef 1) #12
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %68, label %66

66:                                               ; preds = %51
  %67 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5) #11
  br label %68

68:                                               ; preds = %66, %51
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #12
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %4) #12
  %69 = load ptr, ptr %17, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = call i32 %69(ptr noundef %0, i32 noundef 0) #12
  br label %73

73:                                               ; preds = %71, %68
  %74 = load ptr, ptr %8, align 4
  %75 = getelementptr inbounds %struct.mxl5005s_state, ptr %74, i32 0, i32 26
  %76 = load ptr, ptr %75, align 4
  call fastcc void @InitTunerControls(ptr noundef %0) #12
  %77 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 11
  %78 = load i8, ptr %77, align 4
  %79 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 12
  %80 = load i8, ptr %79, align 1
  %81 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 1
  %82 = load i32, ptr %81, align 4
  %83 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 2
  %84 = load i32, ptr %83, align 4
  %85 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 3
  %86 = load i8, ptr %85, align 4
  %87 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 10
  %88 = load i32, ptr %87, align 4
  %89 = trunc i32 %88 to i16
  %90 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 9
  %91 = load i32, ptr %90, align 4
  %92 = trunc i32 %91 to i16
  %93 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 8
  %94 = load i8, ptr %93, align 1
  %95 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 7
  %96 = load i8, ptr %95, align 4
  %97 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 6
  %98 = load i8, ptr %97, align 1
  %99 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 5
  %100 = load i8, ptr %99, align 2
  %101 = trunc i32 %1 to i8
  %102 = getelementptr inbounds %struct.mxl5005s_config, ptr %76, i32 0, i32 4
  %103 = load i8, ptr %102, align 1
  %104 = load ptr, ptr %8, align 4
  store i8 %78, ptr %104, align 4
  %105 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 1
  store i8 %80, ptr %105, align 1
  %106 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 2
  store i32 %2, ptr %106, align 4
  %107 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 3
  store i32 %82, ptr %107, align 4
  %108 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 6
  store i32 %84, ptr %108, align 4
  %109 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 7
  store i8 %86, ptr %109, align 4
  %110 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 8
  store i16 %89, ptr %110, align 2
  %111 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 4
  store i16 %92, ptr %111, align 4
  %112 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 9
  store i8 %94, ptr %112, align 4
  %113 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 10
  store i8 %96, ptr %113, align 1
  %114 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 11
  store i8 %98, ptr %114, align 2
  %115 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 12
  store i8 %100, ptr %115, align 1
  %116 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 13
  store i8 %101, ptr %116, align 4
  %117 = getelementptr inbounds %struct.mxl5005s_state, ptr %104, i32 0, i32 14
  store i8 %103, ptr %117, align 1
  call fastcc void @InitTunerControls(ptr noundef %0) #12
  %118 = load ptr, ptr %8, align 4
  %119 = load i8, ptr %118, align 4
  %120 = icmp eq i8 %119, 1
  br i1 %120, label %121, label %124

121:                                              ; preds = %73
  %122 = getelementptr inbounds %struct.mxl5005s_state, ptr %118, i32 0, i32 3
  %123 = load i32, ptr %122, align 4
  br label %137

124:                                              ; preds = %73
  %125 = getelementptr inbounds %struct.mxl5005s_state, ptr %118, i32 0, i32 1
  %126 = load i8, ptr %125, align 1
  %127 = icmp eq i8 %126, 0
  %128 = getelementptr inbounds %struct.mxl5005s_state, ptr %118, i32 0, i32 3
  %129 = load i32, ptr %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %124
  %131 = add i32 %129, 400000
  br label %137

132:                                              ; preds = %124
  %133 = getelementptr inbounds %struct.mxl5005s_state, ptr %118, i32 0, i32 2
  %134 = load i32, ptr %133, align 4
  %135 = lshr i32 %134, 1
  %136 = add i32 %135, %129
  br label %137

137:                                              ; preds = %132, %130, %121
  %138 = phi i32 [ %131, %130 ], [ %136, %132 ], [ %123, %121 ]
  %139 = getelementptr inbounds %struct.mxl5005s_state, ptr %118, i32 0, i32 16
  store i32 %138, ptr %139, align 4
  %140 = call fastcc zeroext i16 @MXL_BlockInit(ptr noundef %0) #12
  %141 = load ptr, ptr %8, align 4
  br label %142

142:                                              ; preds = %161, %137
  %143 = phi i32 [ 0, %137 ], [ %162, %161 ]
  %144 = getelementptr [23 x i8], ptr @MXL_GetInitRegister.RegAddr, i32 0, i32 %143
  %145 = load i8, ptr %144, align 1
  %146 = getelementptr i8, ptr %36, i32 %143
  store i8 %145, ptr %146, align 1
  %147 = getelementptr i8, ptr %40, i32 %143
  %148 = zext i8 %145 to i16
  br label %149

149:                                              ; preds = %158, %142
  %150 = phi i32 [ 0, %142 ], [ %159, %158 ]
  %151 = getelementptr %struct.mxl5005s_state, ptr %141, i32 0, i32 25, i32 %150
  %152 = load i16, ptr %151, align 2
  %153 = icmp eq i16 %152, %148
  br i1 %153, label %154, label %158

154:                                              ; preds = %149
  %155 = getelementptr %struct.mxl5005s_state, ptr %141, i32 0, i32 25, i32 %150, i32 1
  %156 = load i16, ptr %155, align 2
  %157 = trunc i16 %156 to i8
  store i8 %157, ptr %147, align 1
  br label %161

158:                                              ; preds = %149
  %159 = add nuw nsw i32 %150, 1
  %160 = icmp eq i32 %159, 104
  br i1 %160, label %161, label %149

161:                                              ; preds = %158, %154
  %162 = add nuw nsw i32 %143, 1
  %163 = icmp eq i32 %162, 23
  br i1 %163, label %164, label %142

164:                                              ; preds = %161
  call fastcc void @mxl5005s_writeregs(ptr noundef %0, ptr noundef nonnull %36, ptr noundef nonnull %40, i8 noundef zeroext 23)
  call void @kfree(ptr noundef nonnull %36) #12
  br label %165

165:                                              ; preds = %164, %38
  %166 = phi ptr [ %40, %164 ], [ %36, %38 ]
  %167 = phi i32 [ 0, %164 ], [ -12, %38 ]
  call void @kfree(ptr noundef nonnull %166) #12
  br label %168

168:                                              ; preds = %165, %34
  %169 = phi i32 [ -12, %34 ], [ %167, %165 ]
  ret i32 %169
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @mxl5005s_writeregs(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i8 noundef zeroext %3) unnamed_addr #0 {
  %5 = alloca [3 x i8], align 1
  %6 = alloca %struct.i2c_msg, align 4
  %7 = alloca [3 x i8], align 1
  %8 = alloca %struct.i2c_msg, align 4
  %9 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 1, i32 28
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = tail call i32 %10(ptr noundef %0, i32 noundef 1) #12
  br label %14

14:                                               ; preds = %12, %4
  %15 = zext i8 %3 to i32
  %16 = add nsw i32 %15, -1
  %17 = icmp ugt i8 %3, 1
  br i1 %17, label %18, label %45

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %20 = getelementptr inbounds i8, ptr %7, i32 1
  %21 = getelementptr inbounds i8, ptr %7, i32 2
  %22 = getelementptr inbounds i8, ptr %8, i32 4
  %23 = getelementptr inbounds %struct.i2c_msg, ptr %8, i32 0, i32 1
  %24 = getelementptr inbounds %struct.i2c_msg, ptr %8, i32 0, i32 3
  br label %25

25:                                               ; preds = %42, %18
  %26 = phi i32 [ 0, %18 ], [ %43, %42 ]
  %27 = getelementptr i8, ptr %1, i32 %26
  %28 = load i8, ptr %27, align 1
  %29 = getelementptr i8, ptr %2, i32 %26
  %30 = load i8, ptr %29, align 1
  %31 = load ptr, ptr %19, align 4
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %7) #12
  store i8 %28, ptr %7, align 1
  store i8 %30, ptr %20, align 1
  store i8 -2, ptr %21, align 1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #12
  store i32 0, ptr %22, align 4, !annotation !8
  %32 = getelementptr inbounds %struct.mxl5005s_state, ptr %31, i32 0, i32 26
  %33 = load ptr, ptr %32, align 4
  %34 = load i8, ptr %33, align 4
  %35 = zext i8 %34 to i16
  store i16 %35, ptr %8, align 4
  store i16 0, ptr %23, align 2
  store ptr %7, ptr %24, align 4
  store i16 2, ptr %22, align 4
  %36 = getelementptr inbounds %struct.mxl5005s_state, ptr %31, i32 0, i32 28
  %37 = load ptr, ptr %36, align 4
  %38 = call i32 @i2c_transfer(ptr noundef %37, ptr noundef nonnull %8, i32 noundef 1) #12
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %42, label %40

40:                                               ; preds = %25
  %41 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5) #11
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #12
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %7) #12
  br label %45

42:                                               ; preds = %25
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #12
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %7) #12
  %43 = add nuw nsw i32 %26, 1
  %44 = icmp eq i32 %43, %16
  br i1 %44, label %45, label %25

45:                                               ; preds = %42, %40, %14
  %46 = phi i32 [ %26, %40 ], [ 0, %14 ], [ %16, %42 ]
  %47 = getelementptr i8, ptr %1, i32 %46
  %48 = load i8, ptr %47, align 1
  %49 = getelementptr i8, ptr %2, i32 %46
  %50 = load i8, ptr %49, align 1
  %51 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %52 = load ptr, ptr %51, align 4
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %5) #12
  store i8 %48, ptr %5, align 1
  %53 = getelementptr inbounds i8, ptr %5, i32 1
  store i8 %50, ptr %53, align 1
  %54 = getelementptr inbounds i8, ptr %5, i32 2
  store i8 -2, ptr %54, align 1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #12
  %55 = getelementptr inbounds i8, ptr %6, i32 4
  store i32 3, ptr %55, align 4, !annotation !8
  %56 = getelementptr inbounds %struct.mxl5005s_state, ptr %52, i32 0, i32 26
  %57 = load ptr, ptr %56, align 4
  %58 = load i8, ptr %57, align 4
  %59 = zext i8 %58 to i16
  store i16 %59, ptr %6, align 4
  %60 = getelementptr inbounds %struct.i2c_msg, ptr %6, i32 0, i32 1
  store i16 0, ptr %60, align 2
  %61 = getelementptr inbounds %struct.i2c_msg, ptr %6, i32 0, i32 3
  store ptr %5, ptr %61, align 4
  %62 = getelementptr inbounds %struct.mxl5005s_state, ptr %52, i32 0, i32 28
  %63 = load ptr, ptr %62, align 4
  %64 = call i32 @i2c_transfer(ptr noundef %63, ptr noundef nonnull %6, i32 noundef 1) #12
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %68, label %66

66:                                               ; preds = %45
  %67 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5) #11
  br label %68

68:                                               ; preds = %66, %45
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #12
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %5) #12
  %69 = load ptr, ptr %9, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = call i32 %69(ptr noundef %0, i32 noundef 0) #12
  br label %73

73:                                               ; preds = %71, %68
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @i2c_transfer(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc void @InitTunerControls(ptr nocapture noundef readonly %0) unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 24
  store i16 104, ptr %4, align 4
  %5 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 25
  store i16 9, ptr %5, align 2
  %6 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 0, i32 1
  store i16 64, ptr %6, align 2
  %7 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 1
  store i16 11, ptr %7, align 2
  %8 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 1, i32 1
  store i16 25, ptr %8, align 2
  %9 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 2
  store i16 12, ptr %9, align 2
  %10 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 2, i32 1
  store i16 96, ptr %10, align 2
  %11 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 3
  store i16 13, ptr %11, align 2
  %12 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 3, i32 1
  store i16 0, ptr %12, align 2
  %13 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 4
  store i16 14, ptr %13, align 2
  %14 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 4, i32 1
  store i16 0, ptr %14, align 2
  %15 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 5
  store i16 15, ptr %15, align 2
  %16 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 5, i32 1
  store i16 192, ptr %16, align 2
  %17 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 6
  store i16 16, ptr %17, align 2
  %18 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 6, i32 1
  store i16 0, ptr %18, align 2
  %19 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 7
  store i16 17, ptr %19, align 2
  %20 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 7, i32 1
  store i16 0, ptr %20, align 2
  %21 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 8
  store i16 18, ptr %21, align 2
  %22 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 8, i32 1
  store i16 0, ptr %22, align 2
  %23 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 9
  store i16 19, ptr %23, align 2
  %24 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 9, i32 1
  store i16 52, ptr %24, align 2
  %25 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 10
  store i16 21, ptr %25, align 2
  %26 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 10, i32 1
  store i16 0, ptr %26, align 2
  %27 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 11
  store i16 22, ptr %27, align 2
  %28 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 11, i32 1
  store i16 107, ptr %28, align 2
  %29 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 12
  store i16 23, ptr %29, align 2
  %30 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 12, i32 1
  store i16 53, ptr %30, align 2
  %31 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 13
  store i16 24, ptr %31, align 2
  %32 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 13, i32 1
  store i16 112, ptr %32, align 2
  %33 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 14
  store i16 25, ptr %33, align 2
  %34 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 14, i32 1
  store i16 62, ptr %34, align 2
  %35 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 15
  store i16 26, ptr %35, align 2
  %36 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 15, i32 1
  store i16 130, ptr %36, align 2
  %37 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 16
  store i16 31, ptr %37, align 2
  %38 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 16, i32 1
  store i16 0, ptr %38, align 2
  %39 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 17
  store i16 32, ptr %39, align 2
  %40 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 17, i32 1
  store i16 64, ptr %40, align 2
  %41 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 18
  store i16 33, ptr %41, align 2
  %42 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 18, i32 1
  store i16 83, ptr %42, align 2
  %43 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 19
  store i16 34, ptr %43, align 2
  %44 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 19, i32 1
  store i16 129, ptr %44, align 2
  %45 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 20
  store i16 35, ptr %45, align 2
  %46 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 20, i32 1
  store i16 201, ptr %46, align 2
  %47 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 21
  store i16 36, ptr %47, align 2
  %48 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 21, i32 1
  store i16 1, ptr %48, align 2
  %49 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 22
  store i16 37, ptr %49, align 2
  %50 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 22, i32 1
  store i16 0, ptr %50, align 2
  %51 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 23
  store i16 41, ptr %51, align 2
  %52 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 23, i32 1
  store i16 0, ptr %52, align 2
  %53 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 24
  store i16 42, ptr %53, align 2
  %54 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 24, i32 1
  store i16 248, ptr %54, align 2
  %55 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 25
  store i16 43, ptr %55, align 2
  %56 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 25, i32 1
  store i16 67, ptr %56, align 2
  %57 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 26
  store i16 44, ptr %57, align 2
  %58 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 26, i32 1
  store i16 32, ptr %58, align 2
  %59 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 27
  store i16 45, ptr %59, align 2
  %60 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 27, i32 1
  store i16 128, ptr %60, align 2
  %61 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 28
  store i16 46, ptr %61, align 2
  %62 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 28, i32 1
  store i16 136, ptr %62, align 2
  %63 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 29
  store i16 47, ptr %63, align 2
  %64 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 29, i32 1
  store i16 134, ptr %64, align 2
  %65 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 30
  store i16 48, ptr %65, align 2
  %66 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 30, i32 1
  store i16 0, ptr %66, align 2
  %67 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 31
  store i16 49, ptr %67, align 2
  %68 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 31, i32 1
  store i16 0, ptr %68, align 2
  %69 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 32
  store i16 53, ptr %69, align 2
  %70 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 32, i32 1
  store i16 148, ptr %70, align 2
  %71 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 33
  store i16 54, ptr %71, align 2
  %72 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 33, i32 1
  store i16 250, ptr %72, align 2
  %73 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 34
  store i16 55, ptr %73, align 2
  %74 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 34, i32 1
  store i16 146, ptr %74, align 2
  %75 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 35
  store i16 56, ptr %75, align 2
  %76 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 35, i32 1
  store i16 128, ptr %76, align 2
  %77 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 36
  store i16 57, ptr %77, align 2
  %78 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 36, i32 1
  store i16 65, ptr %78, align 2
  %79 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 37
  store i16 58, ptr %79, align 2
  %80 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 37, i32 1
  store i16 219, ptr %80, align 2
  %81 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 38
  store i16 59, ptr %81, align 2
  %82 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 38, i32 1
  store i16 0, ptr %82, align 2
  %83 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 39
  store i16 60, ptr %83, align 2
  %84 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 39, i32 1
  store i16 0, ptr %84, align 2
  %85 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 40
  store i16 61, ptr %85, align 2
  %86 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 40, i32 1
  store i16 0, ptr %86, align 2
  %87 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 41
  store i16 62, ptr %87, align 2
  %88 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 41, i32 1
  store i16 0, ptr %88, align 2
  %89 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 42
  store i16 65, ptr %89, align 2
  %90 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 42, i32 1
  store i16 248, ptr %90, align 2
  %91 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 43
  store i16 66, ptr %91, align 2
  %92 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 43, i32 1
  store i16 228, ptr %92, align 2
  %93 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 44
  store i16 67, ptr %93, align 2
  %94 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 44, i32 1
  store i16 144, ptr %94, align 2
  %95 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 45
  store i16 68, ptr %95, align 2
  %96 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 45, i32 1
  store i16 192, ptr %96, align 2
  %97 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 46
  store i16 69, ptr %97, align 2
  %98 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 46, i32 1
  store i16 1, ptr %98, align 2
  %99 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 47
  store i16 70, ptr %99, align 2
  %100 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 47, i32 1
  store i16 80, ptr %100, align 2
  %101 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 48
  store i16 71, ptr %101, align 2
  %102 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 48, i32 1
  store i16 6, ptr %102, align 2
  %103 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 49
  store i16 72, ptr %103, align 2
  %104 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 49, i32 1
  store i16 0, ptr %104, align 2
  %105 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 50
  store i16 73, ptr %105, align 2
  %106 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 50, i32 1
  store i16 32, ptr %106, align 2
  %107 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 51
  store i16 76, ptr %107, align 2
  %108 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 51, i32 1
  store i16 187, ptr %108, align 2
  %109 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 52
  store i16 77, ptr %109, align 2
  %110 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 52, i32 1
  store i16 19, ptr %110, align 2
  %111 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 53
  store i16 81, ptr %111, align 2
  %112 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 53, i32 1
  store i16 4, ptr %112, align 2
  %113 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 54
  store i16 82, ptr %113, align 2
  %114 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 54, i32 1
  store i16 117, ptr %114, align 2
  %115 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 55
  store i16 83, ptr %115, align 2
  %116 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 55, i32 1
  store i16 0, ptr %116, align 2
  %117 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 56
  store i16 84, ptr %117, align 2
  %118 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 56, i32 1
  store i16 0, ptr %118, align 2
  %119 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 57
  store i16 85, ptr %119, align 2
  %120 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 57, i32 1
  store i16 0, ptr %120, align 2
  %121 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 58
  store i16 91, ptr %121, align 2
  %122 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 58, i32 1
  store i16 112, ptr %122, align 2
  %123 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 59
  store i16 92, ptr %123, align 2
  %124 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 59, i32 1
  store i16 0, ptr %124, align 2
  %125 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 60
  store i16 93, ptr %125, align 2
  %126 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 60, i32 1
  store i16 0, ptr %126, align 2
  %127 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 61
  store i16 94, ptr %127, align 2
  %128 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 61, i32 1
  store i16 0, ptr %128, align 2
  %129 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 62
  store i16 95, ptr %129, align 2
  %130 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 62, i32 1
  store i16 12, ptr %130, align 2
  %131 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 63
  store i16 96, ptr %131, align 2
  %132 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 63, i32 1
  store i16 0, ptr %132, align 2
  %133 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 64
  store i16 97, ptr %133, align 2
  %134 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 64, i32 1
  store i16 0, ptr %134, align 2
  %135 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 65
  store i16 98, ptr %135, align 2
  %136 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 65, i32 1
  store i16 226, ptr %136, align 2
  %137 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 66
  store i16 99, ptr %137, align 2
  %138 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 66, i32 1
  store i16 0, ptr %138, align 2
  %139 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 67
  store i16 100, ptr %139, align 2
  %140 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 67, i32 1
  store i16 0, ptr %140, align 2
  %141 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 68
  store i16 101, ptr %141, align 2
  %142 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 68, i32 1
  store i16 18, ptr %142, align 2
  %143 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 69
  store i16 102, ptr %143, align 2
  %144 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 69, i32 1
  store i16 128, ptr %144, align 2
  %145 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 70
  store i16 103, ptr %145, align 2
  %146 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 70, i32 1
  store i16 50, ptr %146, align 2
  %147 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 71
  store i16 104, ptr %147, align 2
  %148 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 71, i32 1
  store i16 180, ptr %148, align 2
  %149 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 72
  store i16 105, ptr %149, align 2
  %150 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 72, i32 1
  store i16 96, ptr %150, align 2
  %151 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 73
  store i16 106, ptr %151, align 2
  %152 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 73, i32 1
  store i16 131, ptr %152, align 2
  %153 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 74
  store i16 107, ptr %153, align 2
  %154 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 74, i32 1
  store i16 132, ptr %154, align 2
  %155 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 75
  store i16 108, ptr %155, align 2
  %156 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 75, i32 1
  store i16 156, ptr %156, align 2
  %157 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 76
  store i16 109, ptr %157, align 2
  %158 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 76, i32 1
  store i16 2, ptr %158, align 2
  %159 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 77
  store i16 110, ptr %159, align 2
  %160 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 77, i32 1
  store i16 129, ptr %160, align 2
  %161 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 78
  store i16 111, ptr %161, align 2
  %162 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 78, i32 1
  store i16 192, ptr %162, align 2
  %163 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 79
  store i16 112, ptr %163, align 2
  %164 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 79, i32 1
  store i16 16, ptr %164, align 2
  %165 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 80
  store i16 131, ptr %165, align 2
  %166 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 80, i32 1
  store i16 138, ptr %166, align 2
  %167 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 81
  store i16 132, ptr %167, align 2
  %168 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 81, i32 1
  store i16 16, ptr %168, align 2
  %169 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 82
  store i16 133, ptr %169, align 2
  %170 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 82, i32 1
  store i16 36, ptr %170, align 2
  %171 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 83
  store i16 134, ptr %171, align 2
  %172 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 83, i32 1
  store i16 0, ptr %172, align 2
  %173 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 84
  store i16 135, ptr %173, align 2
  %174 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 84, i32 1
  store i16 0, ptr %174, align 2
  %175 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 85
  store i16 136, ptr %175, align 2
  %176 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 85, i32 1
  store i16 126, ptr %176, align 2
  %177 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 86
  store i16 137, ptr %177, align 2
  %178 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 86, i32 1
  store i16 64, ptr %178, align 2
  %179 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 87
  store i16 138, ptr %179, align 2
  %180 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 87, i32 1
  store i16 56, ptr %180, align 2
  %181 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 88
  store i16 146, ptr %181, align 2
  %182 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 88, i32 1
  store i16 246, ptr %182, align 2
  %183 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 89
  store i16 147, ptr %183, align 2
  %184 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 89, i32 1
  store i16 26, ptr %184, align 2
  %185 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 90
  store i16 148, ptr %185, align 2
  %186 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 90, i32 1
  store i16 98, ptr %186, align 2
  %187 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 91
  store i16 149, ptr %187, align 2
  %188 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 91, i32 1
  store i16 51, ptr %188, align 2
  %189 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 92
  store i16 150, ptr %189, align 2
  %190 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 92, i32 1
  store i16 128, ptr %190, align 2
  %191 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 93
  store i16 156, ptr %191, align 2
  %192 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 93, i32 1
  store i16 86, ptr %192, align 2
  %193 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 94
  store i16 157, ptr %193, align 2
  %194 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 94, i32 1
  store i16 23, ptr %194, align 2
  %195 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 95
  store i16 158, ptr %195, align 2
  %196 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 95, i32 1
  store i16 169, ptr %196, align 2
  %197 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 96
  store i16 159, ptr %197, align 2
  %198 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 96, i32 1
  store i16 0, ptr %198, align 2
  %199 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 97
  store i16 160, ptr %199, align 2
  %200 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 97, i32 1
  store i16 0, ptr %200, align 2
  %201 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 98
  store i16 161, ptr %201, align 2
  %202 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 98, i32 1
  store i16 0, ptr %202, align 2
  %203 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 99
  store i16 162, ptr %203, align 2
  %204 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 99, i32 1
  store i16 64, ptr %204, align 2
  %205 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 100
  store i16 166, ptr %205, align 2
  %206 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 100, i32 1
  store i16 174, ptr %206, align 2
  %207 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 101
  store i16 167, ptr %207, align 2
  %208 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 101, i32 1
  store i16 27, ptr %208, align 2
  %209 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 102
  store i16 168, ptr %209, align 2
  %210 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 102, i32 1
  store i16 242, ptr %210, align 2
  %211 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 103
  store i16 195, ptr %211, align 2
  %212 = getelementptr %struct.mxl5005s_state, ptr %3, i32 0, i32 25, i32 103, i32 1
  store i16 0, ptr %212, align 2
  %213 = load ptr, ptr %2, align 4
  %214 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 18
  store i16 40, ptr %214, align 4
  %215 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 19
  store i16 1, ptr %215, align 2
  %216 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 0, i32 1
  store i16 1, ptr %216, align 2
  %217 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 0, i32 2
  store i16 73, ptr %217, align 2
  %218 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 0, i32 3
  store i16 7, ptr %218, align 2
  %219 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 0, i32 4
  store i16 0, ptr %219, align 2
  %220 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 1
  store i16 2, ptr %220, align 2
  %221 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 1, i32 1
  store i16 1, ptr %221, align 2
  %222 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 1, i32 2
  store i16 53, ptr %222, align 2
  %223 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 1, i32 3
  store i16 2, ptr %223, align 2
  %224 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 1, i32 4
  store i16 1, ptr %224, align 2
  %225 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2
  store i16 3, ptr %225, align 2
  %226 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2, i32 1
  store i16 2, ptr %226, align 2
  %227 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2, i32 2
  store i16 53, ptr %227, align 2
  %228 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2, i32 3
  store i16 1, ptr %228, align 2
  %229 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2, i32 4
  store i16 0, ptr %229, align 2
  %230 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2, i32 2, i32 1
  store i16 57, ptr %230, align 2
  %231 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2, i32 3, i32 1
  store i16 0, ptr %231, align 2
  %232 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 2, i32 4, i32 1
  store i16 1, ptr %232, align 2
  %233 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 3
  store i16 4, ptr %233, align 2
  %234 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 3, i32 1
  store i16 1, ptr %234, align 2
  %235 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 3, i32 2
  store i16 53, ptr %235, align 2
  %236 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 3, i32 3
  store i16 0, ptr %236, align 2
  %237 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 3, i32 4
  store i16 0, ptr %237, align 2
  %238 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4
  store i16 5, ptr %238, align 2
  %239 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 1
  store i16 3, ptr %239, align 2
  %240 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 2
  store i16 53, ptr %240, align 2
  %241 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 3
  store i16 5, ptr %241, align 2
  %242 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 4
  store i16 0, ptr %242, align 2
  %243 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 2, i32 1
  store i16 53, ptr %243, align 2
  %244 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 3, i32 1
  store i16 6, ptr %244, align 2
  %245 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 4, i32 1
  store i16 0, ptr %245, align 2
  %246 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 2, i32 2
  store i16 53, ptr %246, align 2
  %247 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 3, i32 2
  store i16 7, ptr %247, align 2
  %248 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 4, i32 4, i32 2
  store i16 1, ptr %248, align 2
  %249 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 5
  store i16 6, ptr %249, align 2
  %250 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 5, i32 1
  store i16 1, ptr %250, align 2
  %251 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 5, i32 2
  store i16 59, ptr %251, align 2
  %252 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 5, i32 3
  store i16 0, ptr %252, align 2
  %253 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 5, i32 4
  store i16 0, ptr %253, align 2
  %254 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6
  store i16 7, ptr %254, align 2
  %255 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6, i32 1
  store i16 2, ptr %255, align 2
  %256 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6, i32 2
  store i16 53, ptr %256, align 2
  %257 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6, i32 3
  store i16 3, ptr %257, align 2
  %258 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6, i32 4
  store i16 0, ptr %258, align 2
  %259 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6, i32 2, i32 1
  store i16 53, ptr %259, align 2
  %260 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6, i32 3, i32 1
  store i16 4, ptr %260, align 2
  %261 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 6, i32 4, i32 1
  store i16 1, ptr %261, align 2
  %262 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7
  store i16 8, ptr %262, align 2
  %263 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 1
  store i16 4, ptr %263, align 2
  %264 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 2
  store i16 22, ptr %264, align 2
  %265 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 3
  store i16 4, ptr %265, align 2
  %266 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 4
  store i16 0, ptr %266, align 2
  %267 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 2, i32 1
  store i16 22, ptr %267, align 2
  %268 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 3, i32 1
  store i16 5, ptr %268, align 2
  %269 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 4, i32 1
  store i16 1, ptr %269, align 2
  %270 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 2, i32 2
  store i16 22, ptr %270, align 2
  %271 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 3, i32 2
  store i16 6, ptr %271, align 2
  %272 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 4, i32 2
  store i16 1, ptr %272, align 2
  %273 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 2, i32 3
  store i16 22, ptr %273, align 2
  %274 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 3, i32 3
  store i16 7, ptr %274, align 2
  %275 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 7, i32 4, i32 3
  store i16 0, ptr %275, align 2
  %276 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 8
  store i16 9, ptr %276, align 2
  %277 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 8, i32 1
  store i16 1, ptr %277, align 2
  %278 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 8, i32 2
  store i16 22, ptr %278, align 2
  %279 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 8, i32 3
  store i16 2, ptr %279, align 2
  %280 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 8, i32 4
  store i16 0, ptr %280, align 2
  %281 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9
  store i16 10, ptr %281, align 2
  %282 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 1
  store i16 4, ptr %282, align 2
  %283 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 2
  store i16 76, ptr %283, align 2
  %284 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 3
  store i16 0, ptr %284, align 2
  %285 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 4
  store i16 1, ptr %285, align 2
  %286 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 2, i32 1
  store i16 76, ptr %286, align 2
  %287 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 3, i32 1
  store i16 1, ptr %287, align 2
  %288 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 4, i32 1
  store i16 1, ptr %288, align 2
  %289 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 2, i32 2
  store i16 76, ptr %289, align 2
  %290 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 3, i32 2
  store i16 2, ptr %290, align 2
  %291 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 4, i32 2
  store i16 0, ptr %291, align 2
  %292 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 2, i32 3
  store i16 76, ptr %292, align 2
  %293 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 3, i32 3
  store i16 3, ptr %293, align 2
  %294 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 9, i32 4, i32 3
  store i16 1, ptr %294, align 2
  %295 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10
  store i16 11, ptr %295, align 2
  %296 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 1
  store i16 4, ptr %296, align 2
  %297 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 2
  store i16 76, ptr %297, align 2
  %298 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 3
  store i16 4, ptr %298, align 2
  %299 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 4
  store i16 1, ptr %299, align 2
  %300 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 2, i32 1
  store i16 76, ptr %300, align 2
  %301 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 3, i32 1
  store i16 5, ptr %301, align 2
  %302 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 4, i32 1
  store i16 1, ptr %302, align 2
  %303 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 2, i32 2
  store i16 76, ptr %303, align 2
  %304 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 3, i32 2
  store i16 6, ptr %304, align 2
  %305 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 4, i32 2
  store i16 0, ptr %305, align 2
  %306 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 2, i32 3
  store i16 76, ptr %306, align 2
  %307 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 3, i32 3
  store i16 7, ptr %307, align 2
  %308 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 10, i32 4, i32 3
  store i16 1, ptr %308, align 2
  %309 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11
  store i16 12, ptr %309, align 2
  %310 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 1
  store i16 5, ptr %310, align 2
  %311 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 2
  store i16 43, ptr %311, align 2
  %312 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 3
  store i16 3, ptr %312, align 2
  %313 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 4
  store i16 0, ptr %313, align 2
  %314 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 2, i32 1
  store i16 43, ptr %314, align 2
  %315 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 3, i32 1
  store i16 4, ptr %315, align 2
  %316 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 4, i32 1
  store i16 0, ptr %316, align 2
  %317 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 2, i32 2
  store i16 43, ptr %317, align 2
  %318 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 3, i32 2
  store i16 5, ptr %318, align 2
  %319 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 4, i32 2
  store i16 0, ptr %319, align 2
  %320 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 2, i32 3
  store i16 43, ptr %320, align 2
  %321 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 3, i32 3
  store i16 6, ptr %321, align 2
  %322 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 4, i32 3
  store i16 1, ptr %322, align 2
  %323 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 2, i32 4
  store i16 43, ptr %323, align 2
  %324 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 3, i32 4
  store i16 7, ptr %324, align 2
  %325 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 11, i32 4, i32 4
  store i16 0, ptr %325, align 2
  %326 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12
  store i16 13, ptr %326, align 2
  %327 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 1
  store i16 6, ptr %327, align 2
  %328 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 2
  store i16 44, ptr %328, align 2
  %329 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 3
  store i16 2, ptr %329, align 2
  %330 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 4
  store i16 0, ptr %330, align 2
  %331 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 2, i32 1
  store i16 44, ptr %331, align 2
  %332 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 3, i32 1
  store i16 3, ptr %332, align 2
  %333 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 4, i32 1
  store i16 0, ptr %333, align 2
  %334 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 2, i32 2
  store i16 44, ptr %334, align 2
  %335 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 3, i32 2
  store i16 4, ptr %335, align 2
  %336 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 4, i32 2
  store i16 0, ptr %336, align 2
  %337 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 2, i32 3
  store i16 44, ptr %337, align 2
  %338 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 3, i32 3
  store i16 5, ptr %338, align 2
  %339 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 4, i32 3
  store i16 1, ptr %339, align 2
  %340 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 2, i32 4
  store i16 44, ptr %340, align 2
  %341 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 3, i32 4
  store i16 6, ptr %341, align 2
  %342 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 4, i32 4
  store i16 0, ptr %342, align 2
  %343 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 2, i32 5
  store i16 44, ptr %343, align 2
  %344 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 3, i32 5
  store i16 7, ptr %344, align 2
  %345 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 12, i32 4, i32 5
  store i16 0, ptr %345, align 2
  %346 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13
  store i16 14, ptr %346, align 2
  %347 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 1
  store i16 7, ptr %347, align 2
  %348 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 2
  store i16 11, ptr %348, align 2
  %349 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 3
  store i16 0, ptr %349, align 2
  %350 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 4
  store i16 1, ptr %350, align 2
  %351 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 2, i32 1
  store i16 11, ptr %351, align 2
  %352 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 3, i32 1
  store i16 1, ptr %352, align 2
  %353 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 4, i32 1
  store i16 0, ptr %353, align 2
  %354 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 2, i32 2
  store i16 11, ptr %354, align 2
  %355 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 3, i32 2
  store i16 2, ptr %355, align 2
  %356 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 4, i32 2
  store i16 0, ptr %356, align 2
  %357 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 2, i32 3
  store i16 11, ptr %357, align 2
  %358 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 3, i32 3
  store i16 3, ptr %358, align 2
  %359 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 4, i32 3
  store i16 1, ptr %359, align 2
  %360 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 2, i32 4
  store i16 11, ptr %360, align 2
  %361 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 3, i32 4
  store i16 4, ptr %361, align 2
  %362 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 4, i32 4
  store i16 1, ptr %362, align 2
  %363 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 2, i32 5
  store i16 11, ptr %363, align 2
  %364 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 3, i32 5
  store i16 5, ptr %364, align 2
  %365 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 4, i32 5
  store i16 0, ptr %365, align 2
  %366 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 2, i32 6
  store i16 11, ptr %366, align 2
  %367 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 3, i32 6
  store i16 6, ptr %367, align 2
  %368 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 13, i32 4, i32 6
  store i16 0, ptr %368, align 2
  %369 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14
  store i16 15, ptr %369, align 2
  %370 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 1
  store i16 16, ptr %370, align 2
  %371 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2
  store i16 13, ptr %371, align 2
  %372 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3
  store i16 0, ptr %372, align 2
  %373 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4
  store i16 0, ptr %373, align 2
  %374 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 1
  store i16 13, ptr %374, align 2
  %375 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 1
  store i16 1, ptr %375, align 2
  %376 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 1
  store i16 0, ptr %376, align 2
  %377 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 2
  store i16 13, ptr %377, align 2
  %378 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 2
  store i16 2, ptr %378, align 2
  %379 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 2
  store i16 0, ptr %379, align 2
  %380 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 3
  store i16 13, ptr %380, align 2
  %381 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 3
  store i16 3, ptr %381, align 2
  %382 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 3
  store i16 0, ptr %382, align 2
  %383 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 4
  store i16 13, ptr %383, align 2
  %384 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 4
  store i16 4, ptr %384, align 2
  %385 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 4
  store i16 0, ptr %385, align 2
  %386 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 5
  store i16 13, ptr %386, align 2
  %387 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 5
  store i16 5, ptr %387, align 2
  %388 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 5
  store i16 0, ptr %388, align 2
  %389 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 6
  store i16 13, ptr %389, align 2
  %390 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 6
  store i16 6, ptr %390, align 2
  %391 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 6
  store i16 0, ptr %391, align 2
  %392 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 7
  store i16 13, ptr %392, align 2
  %393 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 7
  store i16 7, ptr %393, align 2
  %394 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 7
  store i16 0, ptr %394, align 2
  %395 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 8
  store i16 12, ptr %395, align 2
  %396 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 8
  store i16 0, ptr %396, align 2
  %397 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 8
  store i16 0, ptr %397, align 2
  %398 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 9
  store i16 12, ptr %398, align 2
  %399 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 9
  store i16 1, ptr %399, align 2
  %400 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 9
  store i16 0, ptr %400, align 2
  %401 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 10
  store i16 12, ptr %401, align 2
  %402 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 10
  store i16 2, ptr %402, align 2
  %403 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 10
  store i16 0, ptr %403, align 2
  %404 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 11
  store i16 12, ptr %404, align 2
  %405 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 11
  store i16 3, ptr %405, align 2
  %406 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 11
  store i16 0, ptr %406, align 2
  %407 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 12
  store i16 12, ptr %407, align 2
  %408 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 12
  store i16 4, ptr %408, align 2
  %409 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 12
  store i16 0, ptr %409, align 2
  %410 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 13
  store i16 12, ptr %410, align 2
  %411 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 13
  store i16 5, ptr %411, align 2
  %412 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 13
  store i16 1, ptr %412, align 2
  %413 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 14
  store i16 12, ptr %413, align 2
  %414 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 14
  store i16 6, ptr %414, align 2
  %415 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 14
  store i16 1, ptr %415, align 2
  %416 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 2, i32 15
  store i16 12, ptr %416, align 2
  %417 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 3, i32 15
  store i16 7, ptr %417, align 2
  %418 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 14, i32 4, i32 15
  store i16 0, ptr %418, align 2
  %419 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15
  store i16 16, ptr %419, align 2
  %420 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 1
  store i16 3, ptr %420, align 2
  %421 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 2
  store i16 147, ptr %421, align 2
  %422 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 3
  store i16 2, ptr %422, align 2
  %423 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 4
  store i16 0, ptr %423, align 2
  %424 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 2, i32 1
  store i16 147, ptr %424, align 2
  %425 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 3, i32 1
  store i16 3, ptr %425, align 2
  %426 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 4, i32 1
  store i16 1, ptr %426, align 2
  %427 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 2, i32 2
  store i16 147, ptr %427, align 2
  %428 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 3, i32 2
  store i16 4, ptr %428, align 2
  %429 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 15, i32 4, i32 2
  store i16 1, ptr %429, align 2
  %430 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16
  store i16 17, ptr %430, align 2
  %431 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16, i32 1
  store i16 2, ptr %431, align 2
  %432 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16, i32 2
  store i16 147, ptr %432, align 2
  %433 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16, i32 3
  store i16 0, ptr %433, align 2
  %434 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16, i32 4
  store i16 0, ptr %434, align 2
  %435 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16, i32 2, i32 1
  store i16 147, ptr %435, align 2
  %436 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16, i32 3, i32 1
  store i16 1, ptr %436, align 2
  %437 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 16, i32 4, i32 1
  store i16 1, ptr %437, align 2
  %438 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 17
  store i16 18, ptr %438, align 2
  %439 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 17, i32 1
  store i16 1, ptr %439, align 2
  %440 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 17, i32 2
  store i16 147, ptr %440, align 2
  %441 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 17, i32 3
  store i16 7, ptr %441, align 2
  %442 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 17, i32 4
  store i16 0, ptr %442, align 2
  %443 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 18
  store i16 19, ptr %443, align 2
  %444 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 18, i32 1
  store i16 1, ptr %444, align 2
  %445 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 18, i32 2
  store i16 147, ptr %445, align 2
  %446 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 18, i32 3
  store i16 6, ptr %446, align 2
  %447 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 18, i32 4
  store i16 0, ptr %447, align 2
  %448 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 19
  store i16 20, ptr %448, align 2
  %449 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 19, i32 1
  store i16 1, ptr %449, align 2
  %450 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 19, i32 2
  store i16 156, ptr %450, align 2
  %451 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 19, i32 3
  store i16 0, ptr %451, align 2
  %452 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 19, i32 4
  store i16 0, ptr %452, align 2
  %453 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 20
  store i16 21, ptr %453, align 2
  %454 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 20, i32 1
  store i16 1, ptr %454, align 2
  %455 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 20, i32 2
  store i16 147, ptr %455, align 2
  %456 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 20, i32 3
  store i16 5, ptr %456, align 2
  %457 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 20, i32 4
  store i16 0, ptr %457, align 2
  %458 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 21
  store i16 22, ptr %458, align 2
  %459 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 21, i32 1
  store i16 1, ptr %459, align 2
  %460 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 21, i32 2
  store i16 137, ptr %460, align 2
  %461 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 21, i32 3
  store i16 4, ptr %461, align 2
  %462 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 21, i32 4
  store i16 0, ptr %462, align 2
  %463 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 22
  store i16 23, ptr %463, align 2
  %464 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 22, i32 1
  store i16 1, ptr %464, align 2
  %465 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 22, i32 2
  store i16 137, ptr %465, align 2
  %466 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 22, i32 3
  store i16 7, ptr %466, align 2
  %467 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 22, i32 4
  store i16 0, ptr %467, align 2
  %468 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 23
  store i16 24, ptr %468, align 2
  %469 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 23, i32 1
  store i16 1, ptr %469, align 2
  %470 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 23, i32 2
  store i16 91, ptr %470, align 2
  %471 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 23, i32 3
  store i16 5, ptr %471, align 2
  %472 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 23, i32 4
  store i16 1, ptr %472, align 2
  %473 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 24
  store i16 25, ptr %473, align 2
  %474 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 24, i32 1
  store i16 1, ptr %474, align 2
  %475 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 24, i32 2
  store i16 43, ptr %475, align 2
  %476 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 24, i32 3
  store i16 0, ptr %476, align 2
  %477 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 24, i32 4
  store i16 1, ptr %477, align 2
  %478 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25
  store i16 26, ptr %478, align 2
  %479 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25, i32 1
  store i16 2, ptr %479, align 2
  %480 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25, i32 2
  store i16 22, ptr %480, align 2
  %481 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25, i32 3
  store i16 0, ptr %481, align 2
  %482 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25, i32 4
  store i16 1, ptr %482, align 2
  %483 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25, i32 2, i32 1
  store i16 22, ptr %483, align 2
  %484 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25, i32 3, i32 1
  store i16 1, ptr %484, align 2
  %485 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 25, i32 4, i32 1
  store i16 1, ptr %485, align 2
  %486 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 26
  store i16 27, ptr %486, align 2
  %487 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 26, i32 1
  store i16 1, ptr %487, align 2
  %488 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 26, i32 2
  store i16 134, ptr %488, align 2
  %489 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 26, i32 3
  store i16 2, ptr %489, align 2
  %490 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 26, i32 4
  store i16 0, ptr %490, align 2
  %491 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 27
  store i16 28, ptr %491, align 2
  %492 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 27, i32 1
  store i16 1, ptr %492, align 2
  %493 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 27, i32 2
  store i16 137, ptr %493, align 2
  %494 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 27, i32 3
  store i16 3, ptr %494, align 2
  %495 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 27, i32 4
  store i16 0, ptr %495, align 2
  %496 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 28
  store i16 29, ptr %496, align 2
  %497 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 28, i32 1
  store i16 1, ptr %497, align 2
  %498 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 28, i32 2
  store i16 77, ptr %498, align 2
  %499 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 28, i32 3
  store i16 7, ptr %499, align 2
  %500 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 28, i32 4
  store i16 0, ptr %500, align 2
  %501 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 29
  store i16 30, ptr %501, align 2
  %502 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 29, i32 1
  store i16 1, ptr %502, align 2
  %503 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 29, i32 2
  store i16 166, ptr %503, align 2
  %504 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 29, i32 3
  store i16 7, ptr %504, align 2
  %505 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 29, i32 4
  store i16 1, ptr %505, align 2
  %506 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30
  store i16 31, ptr %506, align 2
  %507 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 1
  store i16 3, ptr %507, align 2
  %508 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 2
  store i16 166, ptr %508, align 2
  %509 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 3
  store i16 0, ptr %509, align 2
  %510 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 4
  store i16 0, ptr %510, align 2
  %511 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 2, i32 1
  store i16 166, ptr %511, align 2
  %512 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 3, i32 1
  store i16 1, ptr %512, align 2
  %513 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 4, i32 1
  store i16 1, ptr %513, align 2
  %514 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 2, i32 2
  store i16 166, ptr %514, align 2
  %515 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 3, i32 2
  store i16 2, ptr %515, align 2
  %516 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 30, i32 4, i32 2
  store i16 1, ptr %516, align 2
  %517 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31
  store i16 32, ptr %517, align 2
  %518 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 1
  store i16 3, ptr %518, align 2
  %519 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 2
  store i16 166, ptr %519, align 2
  %520 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 3
  store i16 3, ptr %520, align 2
  %521 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 4
  store i16 1, ptr %521, align 2
  %522 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 2, i32 1
  store i16 166, ptr %522, align 2
  %523 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 3, i32 1
  store i16 4, ptr %523, align 2
  %524 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 4, i32 1
  store i16 0, ptr %524, align 2
  %525 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 2, i32 2
  store i16 166, ptr %525, align 2
  %526 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 3, i32 2
  store i16 5, ptr %526, align 2
  %527 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 31, i32 4, i32 2
  store i16 1, ptr %527, align 2
  %528 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32
  store i16 33, ptr %528, align 2
  %529 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 1
  store i16 3, ptr %529, align 2
  %530 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 2
  store i16 167, ptr %530, align 2
  %531 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 3
  store i16 0, ptr %531, align 2
  %532 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 4
  store i16 1, ptr %532, align 2
  %533 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 2, i32 1
  store i16 167, ptr %533, align 2
  %534 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 3, i32 1
  store i16 1, ptr %534, align 2
  %535 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 4, i32 1
  store i16 1, ptr %535, align 2
  %536 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 2, i32 2
  store i16 167, ptr %536, align 2
  %537 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 3, i32 2
  store i16 2, ptr %537, align 2
  %538 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 32, i32 4, i32 2
  store i16 0, ptr %538, align 2
  %539 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33
  store i16 34, ptr %539, align 2
  %540 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 1
  store i16 4, ptr %540, align 2
  %541 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 2
  store i16 168, ptr %541, align 2
  %542 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 3
  store i16 0, ptr %542, align 2
  %543 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 4
  store i16 0, ptr %543, align 2
  %544 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 2, i32 1
  store i16 168, ptr %544, align 2
  %545 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 3, i32 1
  store i16 1, ptr %545, align 2
  %546 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 4, i32 1
  store i16 1, ptr %546, align 2
  %547 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 2, i32 2
  store i16 168, ptr %547, align 2
  %548 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 3, i32 2
  store i16 2, ptr %548, align 2
  %549 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 4, i32 2
  store i16 0, ptr %549, align 2
  %550 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 2, i32 3
  store i16 168, ptr %550, align 2
  %551 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 3, i32 3
  store i16 3, ptr %551, align 2
  %552 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 33, i32 4, i32 3
  store i16 0, ptr %552, align 2
  %553 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34
  store i16 35, ptr %553, align 2
  %554 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 1
  store i16 4, ptr %554, align 2
  %555 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 2
  store i16 168, ptr %555, align 2
  %556 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 3
  store i16 4, ptr %556, align 2
  %557 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 4
  store i16 1, ptr %557, align 2
  %558 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 2, i32 1
  store i16 168, ptr %558, align 2
  %559 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 3, i32 1
  store i16 5, ptr %559, align 2
  %560 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 4, i32 1
  store i16 1, ptr %560, align 2
  %561 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 2, i32 2
  store i16 168, ptr %561, align 2
  %562 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 3, i32 2
  store i16 6, ptr %562, align 2
  %563 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 4, i32 2
  store i16 1, ptr %563, align 2
  %564 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 2, i32 3
  store i16 168, ptr %564, align 2
  %565 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 3, i32 3
  store i16 7, ptr %565, align 2
  %566 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 34, i32 4, i32 3
  store i16 1, ptr %566, align 2
  %567 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 35
  store i16 36, ptr %567, align 2
  %568 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 35, i32 1
  store i16 1, ptr %568, align 2
  %569 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 35, i32 2
  store i16 135, ptr %569, align 2
  %570 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 35, i32 3
  store i16 0, ptr %570, align 2
  %571 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 35, i32 4
  store i16 0, ptr %571, align 2
  %572 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 36
  store i16 37, ptr %572, align 2
  %573 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 36, i32 1
  store i16 1, ptr %573, align 2
  %574 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 36, i32 2
  store i16 56, ptr %574, align 2
  %575 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 36, i32 3
  store i16 3, ptr %575, align 2
  %576 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 36, i32 4
  store i16 0, ptr %576, align 2
  %577 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37
  store i16 38, ptr %577, align 2
  %578 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 1
  store i16 7, ptr %578, align 2
  %579 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 2
  store i16 59, ptr %579, align 2
  %580 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 3
  store i16 1, ptr %580, align 2
  %581 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 4
  store i16 0, ptr %581, align 2
  %582 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 2, i32 1
  store i16 59, ptr %582, align 2
  %583 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 3, i32 1
  store i16 2, ptr %583, align 2
  %584 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 4, i32 1
  store i16 0, ptr %584, align 2
  %585 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 2, i32 2
  store i16 59, ptr %585, align 2
  %586 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 3, i32 2
  store i16 3, ptr %586, align 2
  %587 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 4, i32 2
  store i16 0, ptr %587, align 2
  %588 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 2, i32 3
  store i16 59, ptr %588, align 2
  %589 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 3, i32 3
  store i16 4, ptr %589, align 2
  %590 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 4, i32 3
  store i16 0, ptr %590, align 2
  %591 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 2, i32 4
  store i16 59, ptr %591, align 2
  %592 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 3, i32 4
  store i16 5, ptr %592, align 2
  %593 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 4, i32 4
  store i16 0, ptr %593, align 2
  %594 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 2, i32 5
  store i16 59, ptr %594, align 2
  %595 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 3, i32 5
  store i16 6, ptr %595, align 2
  %596 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 4, i32 5
  store i16 0, ptr %596, align 2
  %597 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 2, i32 6
  store i16 59, ptr %597, align 2
  %598 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 3, i32 6
  store i16 7, ptr %598, align 2
  %599 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 37, i32 4, i32 6
  store i16 0, ptr %599, align 2
  %600 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38
  store i16 39, ptr %600, align 2
  %601 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 1
  store i16 6, ptr %601, align 2
  %602 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 2
  store i16 32, ptr %602, align 2
  %603 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 3
  store i16 2, ptr %603, align 2
  %604 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 4
  store i16 0, ptr %604, align 2
  %605 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 2, i32 1
  store i16 32, ptr %605, align 2
  %606 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 3, i32 1
  store i16 3, ptr %606, align 2
  %607 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 4, i32 1
  store i16 0, ptr %607, align 2
  %608 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 2, i32 2
  store i16 32, ptr %608, align 2
  %609 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 3, i32 2
  store i16 4, ptr %609, align 2
  %610 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 4, i32 2
  store i16 0, ptr %610, align 2
  %611 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 2, i32 3
  store i16 32, ptr %611, align 2
  %612 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 3, i32 3
  store i16 5, ptr %612, align 2
  %613 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 4, i32 3
  store i16 0, ptr %613, align 2
  %614 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 2, i32 4
  store i16 32, ptr %614, align 2
  %615 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 3, i32 4
  store i16 6, ptr %615, align 2
  %616 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 4, i32 4
  store i16 1, ptr %616, align 2
  %617 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 2, i32 5
  store i16 32, ptr %617, align 2
  %618 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 3, i32 5
  store i16 7, ptr %618, align 2
  %619 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 38, i32 4, i32 5
  store i16 0, ptr %619, align 2
  %620 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 39
  store i16 40, ptr %620, align 2
  %621 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 39, i32 1
  store i16 1, ptr %621, align 2
  %622 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 39, i32 2
  store i16 25, ptr %622, align 2
  %623 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 39, i32 3
  store i16 3, ptr %623, align 2
  %624 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 19, i32 39, i32 4
  store i16 1, ptr %624, align 2
  %625 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 20
  store i16 36, ptr %625, align 2
  %626 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 21
  store i16 51, ptr %626, align 4
  %627 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 0, i32 1
  store i16 2, ptr %627, align 2
  %628 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 0, i32 2
  store i16 68, ptr %628, align 4
  %629 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 0, i32 3
  store i16 6, ptr %629, align 2
  %630 = getelementptr inbounds %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 0, i32 4
  store i16 1, ptr %630, align 4
  %631 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 0, i32 2, i32 1
  store i16 68, ptr %631, align 2
  %632 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 0, i32 3, i32 1
  store i16 7, ptr %632, align 2
  %633 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 0, i32 4, i32 1
  store i16 1, ptr %633, align 2
  %634 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1
  store i16 52, ptr %634, align 2
  %635 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1, i32 1
  store i16 2, ptr %635, align 2
  %636 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1, i32 2
  store i16 70, ptr %636, align 2
  %637 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1, i32 3
  store i16 6, ptr %637, align 2
  %638 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1, i32 4
  store i16 1, ptr %638, align 2
  %639 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1, i32 2, i32 1
  store i16 70, ptr %639, align 2
  %640 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1, i32 3, i32 1
  store i16 7, ptr %640, align 2
  %641 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 1, i32 4, i32 1
  store i16 0, ptr %641, align 2
  %642 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2
  store i16 53, ptr %642, align 4
  %643 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 1
  store i16 9, ptr %643, align 2
  %644 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2
  store i16 69, ptr %644, align 4
  %645 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3
  store i16 5, ptr %645, align 2
  %646 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4
  store i16 0, ptr %646, align 4
  %647 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 1
  store i16 69, ptr %647, align 2
  %648 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 1
  store i16 6, ptr %648, align 2
  %649 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 1
  store i16 0, ptr %649, align 2
  %650 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 2
  store i16 69, ptr %650, align 4
  %651 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 2
  store i16 7, ptr %651, align 2
  %652 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 2
  store i16 0, ptr %652, align 4
  %653 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 3
  store i16 68, ptr %653, align 2
  %654 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 3
  store i16 0, ptr %654, align 2
  %655 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 3
  store i16 0, ptr %655, align 2
  %656 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 4
  store i16 68, ptr %656, align 4
  %657 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 4
  store i16 1, ptr %657, align 2
  %658 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 4
  store i16 0, ptr %658, align 4
  %659 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 5
  store i16 68, ptr %659, align 2
  %660 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 5
  store i16 2, ptr %660, align 2
  %661 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 5
  store i16 0, ptr %661, align 2
  %662 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 6
  store i16 68, ptr %662, align 4
  %663 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 6
  store i16 3, ptr %663, align 2
  %664 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 6
  store i16 0, ptr %664, align 4
  %665 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 7
  store i16 68, ptr %665, align 2
  %666 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 7
  store i16 4, ptr %666, align 2
  %667 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 7
  store i16 0, ptr %667, align 2
  %668 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 2, i32 8
  store i16 68, ptr %668, align 4
  %669 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 3, i32 8
  store i16 5, ptr %669, align 2
  %670 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 2, i32 4, i32 8
  store i16 0, ptr %670, align 4
  %671 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 3
  store i16 54, ptr %671, align 2
  %672 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 3, i32 1
  store i16 1, ptr %672, align 2
  %673 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 3, i32 2
  store i16 70, ptr %673, align 2
  %674 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 3, i32 3
  store i16 5, ptr %674, align 2
  %675 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 3, i32 4
  store i16 0, ptr %675, align 2
  %676 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4
  store i16 55, ptr %676, align 4
  %677 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 1
  store i16 3, ptr %677, align 2
  %678 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 2
  store i16 73, ptr %678, align 4
  %679 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 3
  store i16 4, ptr %679, align 2
  %680 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 4
  store i16 0, ptr %680, align 4
  %681 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 2, i32 1
  store i16 73, ptr %681, align 2
  %682 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 3, i32 1
  store i16 5, ptr %682, align 2
  %683 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 4, i32 1
  store i16 1, ptr %683, align 2
  %684 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 2, i32 2
  store i16 73, ptr %684, align 4
  %685 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 3, i32 2
  store i16 6, ptr %685, align 2
  %686 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 4, i32 4, i32 2
  store i16 0, ptr %686, align 4
  %687 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5
  store i16 56, ptr %687, align 2
  %688 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 1
  store i16 4, ptr %688, align 2
  %689 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 2
  store i16 70, ptr %689, align 2
  %690 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 3
  store i16 0, ptr %690, align 2
  %691 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 4
  store i16 0, ptr %691, align 2
  %692 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 2, i32 1
  store i16 70, ptr %692, align 2
  %693 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 3, i32 1
  store i16 1, ptr %693, align 2
  %694 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 4, i32 1
  store i16 0, ptr %694, align 2
  %695 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 2, i32 2
  store i16 70, ptr %695, align 2
  %696 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 3, i32 2
  store i16 2, ptr %696, align 2
  %697 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 4, i32 2
  store i16 0, ptr %697, align 2
  %698 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 2, i32 3
  store i16 70, ptr %698, align 2
  %699 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 3, i32 3
  store i16 3, ptr %699, align 2
  %700 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 5, i32 4, i32 3
  store i16 0, ptr %700, align 2
  %701 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 6
  store i16 57, ptr %701, align 4
  %702 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 6, i32 1
  store i16 1, ptr %702, align 2
  %703 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 6, i32 2
  store i16 70, ptr %703, align 4
  %704 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 6, i32 3
  store i16 4, ptr %704, align 2
  %705 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 6, i32 4
  store i16 1, ptr %705, align 4
  %706 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 7
  store i16 58, ptr %706, align 2
  %707 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 7, i32 1
  store i16 1, ptr %707, align 2
  %708 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 7, i32 2
  store i16 111, ptr %708, align 2
  %709 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 7, i32 3
  store i16 4, ptr %709, align 2
  %710 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 7, i32 4
  store i16 0, ptr %710, align 2
  %711 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 8
  store i16 59, ptr %711, align 4
  %712 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 8, i32 1
  store i16 1, ptr %712, align 2
  %713 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 8, i32 2
  store i16 111, ptr %713, align 4
  %714 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 8, i32 3
  store i16 7, ptr %714, align 2
  %715 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 8, i32 4
  store i16 1, ptr %715, align 4
  %716 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 9
  store i16 60, ptr %716, align 2
  %717 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 9, i32 1
  store i16 1, ptr %717, align 2
  %718 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 9, i32 2
  store i16 111, ptr %718, align 2
  %719 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 9, i32 3
  store i16 6, ptr %719, align 2
  %720 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 9, i32 4
  store i16 1, ptr %720, align 2
  %721 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 10
  store i16 61, ptr %721, align 4
  %722 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 10, i32 1
  store i16 1, ptr %722, align 2
  %723 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 10, i32 2
  store i16 111, ptr %723, align 4
  %724 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 10, i32 3
  store i16 5, ptr %724, align 2
  %725 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 10, i32 4
  store i16 0, ptr %725, align 4
  %726 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11
  store i16 62, ptr %726, align 2
  %727 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11, i32 1
  store i16 2, ptr %727, align 2
  %728 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11, i32 2
  store i16 110, ptr %728, align 2
  %729 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11, i32 3
  store i16 0, ptr %729, align 2
  %730 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11, i32 4
  store i16 1, ptr %730, align 2
  %731 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11, i32 2, i32 1
  store i16 110, ptr %731, align 2
  %732 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11, i32 3, i32 1
  store i16 1, ptr %732, align 2
  %733 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 11, i32 4, i32 1
  store i16 0, ptr %733, align 2
  %734 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12
  store i16 63, ptr %734, align 4
  %735 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 1
  store i16 3, ptr %735, align 2
  %736 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 2
  store i16 69, ptr %736, align 4
  %737 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 3
  store i16 2, ptr %737, align 2
  %738 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 4
  store i16 0, ptr %738, align 4
  %739 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 2, i32 1
  store i16 69, ptr %739, align 2
  %740 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 3, i32 1
  store i16 3, ptr %740, align 2
  %741 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 4, i32 1
  store i16 0, ptr %741, align 2
  %742 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 2, i32 2
  store i16 69, ptr %742, align 4
  %743 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 3, i32 2
  store i16 4, ptr %743, align 2
  %744 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 12, i32 4, i32 2
  store i16 0, ptr %744, align 4
  %745 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13
  store i16 64, ptr %745, align 2
  %746 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 1
  store i16 6, ptr %746, align 2
  %747 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 2
  store i16 110, ptr %747, align 2
  %748 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 3
  store i16 2, ptr %748, align 2
  %749 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 4
  store i16 0, ptr %749, align 2
  %750 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 2, i32 1
  store i16 110, ptr %750, align 2
  %751 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 3, i32 1
  store i16 3, ptr %751, align 2
  %752 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 4, i32 1
  store i16 0, ptr %752, align 2
  %753 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 2, i32 2
  store i16 110, ptr %753, align 2
  %754 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 3, i32 2
  store i16 4, ptr %754, align 2
  %755 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 4, i32 2
  store i16 0, ptr %755, align 2
  %756 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 2, i32 3
  store i16 110, ptr %756, align 2
  %757 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 3, i32 3
  store i16 5, ptr %757, align 2
  %758 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 4, i32 3
  store i16 0, ptr %758, align 2
  %759 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 2, i32 4
  store i16 110, ptr %759, align 2
  %760 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 3, i32 4
  store i16 6, ptr %760, align 2
  %761 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 4, i32 4
  store i16 0, ptr %761, align 2
  %762 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 2, i32 5
  store i16 110, ptr %762, align 2
  %763 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 3, i32 5
  store i16 7, ptr %763, align 2
  %764 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 13, i32 4, i32 5
  store i16 1, ptr %764, align 2
  %765 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14
  store i16 65, ptr %765, align 4
  %766 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 1
  store i16 7, ptr %766, align 2
  %767 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 2
  store i16 14, ptr %767, align 4
  %768 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 3
  store i16 0, ptr %768, align 2
  %769 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 4
  store i16 0, ptr %769, align 4
  %770 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 2, i32 1
  store i16 14, ptr %770, align 2
  %771 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 3, i32 1
  store i16 1, ptr %771, align 2
  %772 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 4, i32 1
  store i16 0, ptr %772, align 2
  %773 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 2, i32 2
  store i16 14, ptr %773, align 4
  %774 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 3, i32 2
  store i16 2, ptr %774, align 2
  %775 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 4, i32 2
  store i16 0, ptr %775, align 4
  %776 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 2, i32 3
  store i16 14, ptr %776, align 2
  %777 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 3, i32 3
  store i16 3, ptr %777, align 2
  %778 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 4, i32 3
  store i16 0, ptr %778, align 2
  %779 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 2, i32 4
  store i16 14, ptr %779, align 4
  %780 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 3, i32 4
  store i16 4, ptr %780, align 2
  %781 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 4, i32 4
  store i16 0, ptr %781, align 4
  %782 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 2, i32 5
  store i16 14, ptr %782, align 2
  %783 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 3, i32 5
  store i16 5, ptr %783, align 2
  %784 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 4, i32 5
  store i16 0, ptr %784, align 2
  %785 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 2, i32 6
  store i16 14, ptr %785, align 4
  %786 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 3, i32 6
  store i16 6, ptr %786, align 2
  %787 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 14, i32 4, i32 6
  store i16 0, ptr %787, align 4
  %788 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15
  store i16 66, ptr %788, align 2
  %789 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 1
  store i16 18, ptr %789, align 2
  %790 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2
  store i16 17, ptr %790, align 2
  %791 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3
  store i16 6, ptr %791, align 2
  %792 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4
  store i16 0, ptr %792, align 2
  %793 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 1
  store i16 17, ptr %793, align 2
  %794 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 1
  store i16 7, ptr %794, align 2
  %795 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 1
  store i16 0, ptr %795, align 2
  %796 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 2
  store i16 16, ptr %796, align 2
  %797 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 2
  store i16 0, ptr %797, align 2
  %798 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 2
  store i16 0, ptr %798, align 2
  %799 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 3
  store i16 16, ptr %799, align 2
  %800 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 3
  store i16 1, ptr %800, align 2
  %801 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 3
  store i16 0, ptr %801, align 2
  %802 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 4
  store i16 16, ptr %802, align 2
  %803 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 4
  store i16 2, ptr %803, align 2
  %804 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 4
  store i16 0, ptr %804, align 2
  %805 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 5
  store i16 16, ptr %805, align 2
  %806 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 5
  store i16 3, ptr %806, align 2
  %807 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 5
  store i16 0, ptr %807, align 2
  %808 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 6
  store i16 16, ptr %808, align 2
  %809 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 6
  store i16 4, ptr %809, align 2
  %810 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 6
  store i16 0, ptr %810, align 2
  %811 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 7
  store i16 16, ptr %811, align 2
  %812 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 7
  store i16 5, ptr %812, align 2
  %813 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 7
  store i16 0, ptr %813, align 2
  %814 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 8
  store i16 16, ptr %814, align 2
  %815 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 8
  store i16 6, ptr %815, align 2
  %816 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 8
  store i16 0, ptr %816, align 2
  %817 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 9
  store i16 16, ptr %817, align 2
  %818 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 9
  store i16 7, ptr %818, align 2
  %819 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 9
  store i16 0, ptr %819, align 2
  %820 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 10
  store i16 15, ptr %820, align 2
  %821 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 10
  store i16 0, ptr %821, align 2
  %822 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 10
  store i16 0, ptr %822, align 2
  %823 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 11
  store i16 15, ptr %823, align 2
  %824 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 11
  store i16 1, ptr %824, align 2
  %825 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 11
  store i16 0, ptr %825, align 2
  %826 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 12
  store i16 15, ptr %826, align 2
  %827 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 12
  store i16 2, ptr %827, align 2
  %828 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 12
  store i16 0, ptr %828, align 2
  %829 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 13
  store i16 15, ptr %829, align 2
  %830 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 13
  store i16 3, ptr %830, align 2
  %831 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 13
  store i16 0, ptr %831, align 2
  %832 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 14
  store i16 15, ptr %832, align 2
  %833 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 14
  store i16 4, ptr %833, align 2
  %834 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 14
  store i16 0, ptr %834, align 2
  %835 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 15
  store i16 15, ptr %835, align 2
  %836 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 15
  store i16 5, ptr %836, align 2
  %837 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 15
  store i16 0, ptr %837, align 2
  %838 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 16
  store i16 15, ptr %838, align 2
  %839 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 16
  store i16 6, ptr %839, align 2
  %840 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 16
  store i16 1, ptr %840, align 2
  %841 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 2, i32 17
  store i16 15, ptr %841, align 2
  %842 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 3, i32 17
  store i16 7, ptr %842, align 2
  %843 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 15, i32 4, i32 17
  store i16 1, ptr %843, align 2
  %844 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16
  store i16 67, ptr %844, align 4
  %845 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 1
  store i16 5, ptr %845, align 2
  %846 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 2
  store i16 112, ptr %846, align 4
  %847 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 3
  store i16 0, ptr %847, align 2
  %848 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 4
  store i16 0, ptr %848, align 4
  %849 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 2, i32 1
  store i16 112, ptr %849, align 2
  %850 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 3, i32 1
  store i16 1, ptr %850, align 2
  %851 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 4, i32 1
  store i16 0, ptr %851, align 2
  %852 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 2, i32 2
  store i16 112, ptr %852, align 4
  %853 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 3, i32 2
  store i16 2, ptr %853, align 2
  %854 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 4, i32 2
  store i16 0, ptr %854, align 4
  %855 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 2, i32 3
  store i16 112, ptr %855, align 2
  %856 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 3, i32 3
  store i16 3, ptr %856, align 2
  %857 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 4, i32 3
  store i16 0, ptr %857, align 2
  %858 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 2, i32 4
  store i16 112, ptr %858, align 4
  %859 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 3, i32 4
  store i16 4, ptr %859, align 2
  %860 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 16, i32 4, i32 4
  store i16 1, ptr %860, align 4
  %861 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 17
  store i16 68, ptr %861, align 2
  %862 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 17, i32 1
  store i16 1, ptr %862, align 2
  %863 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 17, i32 2
  store i16 14, ptr %863, align 2
  %864 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 17, i32 3
  store i16 7, ptr %864, align 2
  %865 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 17, i32 4
  store i16 0, ptr %865, align 2
  %866 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18
  store i16 69, ptr %866, align 4
  %867 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 1
  store i16 4, ptr %867, align 2
  %868 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 2
  store i16 107, ptr %868, align 4
  %869 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 3
  store i16 3, ptr %869, align 2
  %870 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 4
  store i16 0, ptr %870, align 4
  %871 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 2, i32 1
  store i16 107, ptr %871, align 2
  %872 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 3, i32 1
  store i16 4, ptr %872, align 2
  %873 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 4, i32 1
  store i16 0, ptr %873, align 2
  %874 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 2, i32 2
  store i16 107, ptr %874, align 4
  %875 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 3, i32 2
  store i16 5, ptr %875, align 2
  %876 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 4, i32 2
  store i16 0, ptr %876, align 4
  %877 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 2, i32 3
  store i16 107, ptr %877, align 2
  %878 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 3, i32 3
  store i16 6, ptr %878, align 2
  %879 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 18, i32 4, i32 3
  store i16 0, ptr %879, align 2
  %880 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19
  store i16 70, ptr %880, align 2
  %881 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 1
  store i16 3, ptr %881, align 2
  %882 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 2
  store i16 107, ptr %882, align 2
  %883 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 3
  store i16 7, ptr %883, align 2
  %884 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 4
  store i16 1, ptr %884, align 2
  %885 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 2, i32 1
  store i16 106, ptr %885, align 2
  %886 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 3, i32 1
  store i16 0, ptr %886, align 2
  %887 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 4, i32 1
  store i16 1, ptr %887, align 2
  %888 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 2, i32 2
  store i16 106, ptr %888, align 2
  %889 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 3, i32 2
  store i16 1, ptr %889, align 2
  %890 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 19, i32 4, i32 2
  store i16 1, ptr %890, align 2
  %891 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20
  store i16 71, ptr %891, align 4
  %892 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 1
  store i16 11, ptr %892, align 2
  %893 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2
  store i16 109, ptr %893, align 4
  %894 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3
  store i16 2, ptr %894, align 2
  %895 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4
  store i16 0, ptr %895, align 4
  %896 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 1
  store i16 109, ptr %896, align 2
  %897 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 1
  store i16 3, ptr %897, align 2
  %898 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 1
  store i16 0, ptr %898, align 2
  %899 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 2
  store i16 109, ptr %899, align 4
  %900 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 2
  store i16 4, ptr %900, align 2
  %901 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 2
  store i16 0, ptr %901, align 4
  %902 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 3
  store i16 109, ptr %902, align 2
  %903 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 3
  store i16 5, ptr %903, align 2
  %904 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 3
  store i16 0, ptr %904, align 2
  %905 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 4
  store i16 109, ptr %905, align 4
  %906 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 4
  store i16 6, ptr %906, align 2
  %907 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 4
  store i16 0, ptr %907, align 4
  %908 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 5
  store i16 109, ptr %908, align 2
  %909 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 5
  store i16 7, ptr %909, align 2
  %910 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 5
  store i16 0, ptr %910, align 2
  %911 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 6
  store i16 108, ptr %911, align 4
  %912 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 6
  store i16 0, ptr %912, align 2
  %913 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 6
  store i16 0, ptr %913, align 4
  %914 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 7
  store i16 108, ptr %914, align 2
  %915 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 7
  store i16 1, ptr %915, align 2
  %916 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 7
  store i16 0, ptr %916, align 2
  %917 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 8
  store i16 108, ptr %917, align 4
  %918 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 8
  store i16 2, ptr %918, align 2
  %919 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 8
  store i16 1, ptr %919, align 4
  %920 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 9
  store i16 108, ptr %920, align 2
  %921 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 9
  store i16 3, ptr %921, align 2
  %922 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 9
  store i16 1, ptr %922, align 2
  %923 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 2, i32 10
  store i16 108, ptr %923, align 4
  %924 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 3, i32 10
  store i16 4, ptr %924, align 2
  %925 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 20, i32 4, i32 10
  store i16 1, ptr %925, align 4
  %926 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21
  store i16 72, ptr %926, align 2
  %927 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 1
  store i16 6, ptr %927, align 2
  %928 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 2
  store i16 106, ptr %928, align 2
  %929 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 3
  store i16 2, ptr %929, align 2
  %930 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 4
  store i16 0, ptr %930, align 2
  %931 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 2, i32 1
  store i16 106, ptr %931, align 2
  %932 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 3, i32 1
  store i16 3, ptr %932, align 2
  %933 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 4, i32 1
  store i16 0, ptr %933, align 2
  %934 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 2, i32 2
  store i16 106, ptr %934, align 2
  %935 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 3, i32 2
  store i16 4, ptr %935, align 2
  %936 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 4, i32 2
  store i16 0, ptr %936, align 2
  %937 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 2, i32 3
  store i16 106, ptr %937, align 2
  %938 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 3, i32 3
  store i16 5, ptr %938, align 2
  %939 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 4, i32 3
  store i16 0, ptr %939, align 2
  %940 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 2, i32 4
  store i16 106, ptr %940, align 2
  %941 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 3, i32 4
  store i16 6, ptr %941, align 2
  %942 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 4, i32 4
  store i16 0, ptr %942, align 2
  %943 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 2, i32 5
  store i16 106, ptr %943, align 2
  %944 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 3, i32 5
  store i16 7, ptr %944, align 2
  %945 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 21, i32 4, i32 5
  store i16 1, ptr %945, align 2
  %946 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 22
  store i16 73, ptr %946, align 4
  %947 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 22, i32 1
  store i16 1, ptr %947, align 2
  %948 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 22, i32 2
  store i16 138, ptr %948, align 4
  %949 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 22, i32 3
  store i16 4, ptr %949, align 2
  %950 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 22, i32 4
  store i16 1, ptr %950, align 4
  %951 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 23
  store i16 74, ptr %951, align 2
  %952 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 23, i32 1
  store i16 1, ptr %952, align 2
  %953 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 23, i32 2
  store i16 17, ptr %953, align 2
  %954 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 23, i32 3
  store i16 5, ptr %954, align 2
  %955 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 23, i32 4
  store i16 0, ptr %955, align 2
  %956 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 24
  store i16 75, ptr %956, align 4
  %957 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 24, i32 1
  store i16 1, ptr %957, align 2
  %958 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 24, i32 2
  store i16 111, ptr %958, align 4
  %959 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 24, i32 3
  store i16 3, ptr %959, align 2
  %960 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 24, i32 4
  store i16 0, ptr %960, align 4
  %961 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 25
  store i16 76, ptr %961, align 2
  %962 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 25, i32 1
  store i16 1, ptr %962, align 2
  %963 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 25, i32 2
  store i16 112, ptr %963, align 2
  %964 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 25, i32 3
  store i16 7, ptr %964, align 2
  %965 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 25, i32 4
  store i16 0, ptr %965, align 2
  %966 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 26
  store i16 77, ptr %966, align 4
  %967 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 26, i32 1
  store i16 1, ptr %967, align 2
  %968 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 26, i32 2
  store i16 136, ptr %968, align 4
  %969 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 26, i32 3
  store i16 7, ptr %969, align 2
  %970 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 26, i32 4
  store i16 0, ptr %970, align 4
  %971 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 27
  store i16 78, ptr %971, align 2
  %972 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 27, i32 1
  store i16 1, ptr %972, align 2
  %973 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 27, i32 2
  store i16 149, ptr %973, align 2
  %974 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 27, i32 3
  store i16 7, ptr %974, align 2
  %975 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 27, i32 4
  store i16 0, ptr %975, align 2
  %976 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 28
  store i16 79, ptr %976, align 4
  %977 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 28, i32 1
  store i16 1, ptr %977, align 2
  %978 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 28, i32 2
  store i16 149, ptr %978, align 4
  %979 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 28, i32 3
  store i16 6, ptr %979, align 2
  %980 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 28, i32 4
  store i16 0, ptr %980, align 4
  %981 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 29
  store i16 80, ptr %981, align 2
  %982 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 29, i32 1
  store i16 1, ptr %982, align 2
  %983 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 29, i32 2
  store i16 149, ptr %983, align 2
  %984 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 29, i32 3
  store i16 5, ptr %984, align 2
  %985 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 29, i32 4
  store i16 1, ptr %985, align 2
  %986 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 30
  store i16 81, ptr %986, align 4
  %987 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 30, i32 1
  store i16 1, ptr %987, align 2
  %988 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 30, i32 2
  store i16 149, ptr %988, align 4
  %989 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 30, i32 3
  store i16 4, ptr %989, align 2
  %990 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 30, i32 4
  store i16 1, ptr %990, align 4
  %991 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 31
  store i16 82, ptr %991, align 2
  %992 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 31, i32 1
  store i16 1, ptr %992, align 2
  %993 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 31, i32 2
  store i16 149, ptr %993, align 2
  %994 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 31, i32 3
  store i16 3, ptr %994, align 2
  %995 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 31, i32 4
  store i16 0, ptr %995, align 2
  %996 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 32
  store i16 83, ptr %996, align 4
  %997 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 32, i32 1
  store i16 1, ptr %997, align 2
  %998 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 32, i32 2
  store i16 93, ptr %998, align 4
  %999 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 32, i32 3
  store i16 1, ptr %999, align 2
  %1000 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 32, i32 4
  store i16 0, ptr %1000, align 4
  %1001 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 33
  store i16 84, ptr %1001, align 2
  %1002 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 33, i32 1
  store i16 1, ptr %1002, align 2
  %1003 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 33, i32 2
  store i16 93, ptr %1003, align 2
  %1004 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 33, i32 3
  store i16 0, ptr %1004, align 2
  %1005 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 33, i32 4
  store i16 0, ptr %1005, align 2
  %1006 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34
  store i16 85, ptr %1006, align 4
  %1007 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 1
  store i16 6, ptr %1007, align 2
  %1008 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 2
  store i16 92, ptr %1008, align 4
  %1009 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 3
  store i16 2, ptr %1009, align 2
  %1010 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 4
  store i16 0, ptr %1010, align 4
  %1011 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 2, i32 1
  store i16 92, ptr %1011, align 2
  %1012 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 3, i32 1
  store i16 3, ptr %1012, align 2
  %1013 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 4, i32 1
  store i16 0, ptr %1013, align 2
  %1014 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 2, i32 2
  store i16 92, ptr %1014, align 4
  %1015 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 3, i32 2
  store i16 4, ptr %1015, align 2
  %1016 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 4, i32 2
  store i16 0, ptr %1016, align 4
  %1017 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 2, i32 3
  store i16 92, ptr %1017, align 2
  %1018 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 3, i32 3
  store i16 5, ptr %1018, align 2
  %1019 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 4, i32 3
  store i16 0, ptr %1019, align 2
  %1020 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 2, i32 4
  store i16 92, ptr %1020, align 4
  %1021 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 3, i32 4
  store i16 6, ptr %1021, align 2
  %1022 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 4, i32 4
  store i16 0, ptr %1022, align 4
  %1023 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 2, i32 5
  store i16 92, ptr %1023, align 2
  %1024 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 3, i32 5
  store i16 7, ptr %1024, align 2
  %1025 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 34, i32 4, i32 5
  store i16 0, ptr %1025, align 2
  %1026 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35
  store i16 86, ptr %1026, align 2
  %1027 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 1
  store i16 6, ptr %1027, align 2
  %1028 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 2
  store i16 93, ptr %1028, align 2
  %1029 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 3
  store i16 2, ptr %1029, align 2
  %1030 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 4
  store i16 0, ptr %1030, align 2
  %1031 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 2, i32 1
  store i16 93, ptr %1031, align 2
  %1032 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 3, i32 1
  store i16 3, ptr %1032, align 2
  %1033 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 4, i32 1
  store i16 0, ptr %1033, align 2
  %1034 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 2, i32 2
  store i16 93, ptr %1034, align 2
  %1035 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 3, i32 2
  store i16 4, ptr %1035, align 2
  %1036 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 4, i32 2
  store i16 0, ptr %1036, align 2
  %1037 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 2, i32 3
  store i16 93, ptr %1037, align 2
  %1038 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 3, i32 3
  store i16 5, ptr %1038, align 2
  %1039 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 4, i32 3
  store i16 0, ptr %1039, align 2
  %1040 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 2, i32 4
  store i16 93, ptr %1040, align 2
  %1041 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 3, i32 4
  store i16 6, ptr %1041, align 2
  %1042 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 4, i32 4
  store i16 0, ptr %1042, align 2
  %1043 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 2, i32 5
  store i16 93, ptr %1043, align 2
  %1044 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 3, i32 5
  store i16 7, ptr %1044, align 2
  %1045 = getelementptr %struct.mxl5005s_state, ptr %213, i32 0, i32 21, i32 35, i32 4, i32 5
  store i16 0, ptr %1045, align 2
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i16 @MXL_BlockInit(ptr noundef readonly %0) unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  %4 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 37, i32 noundef 1, i16 noundef zeroext 1) #12
  %5 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 37, i32 noundef 1, i16 noundef zeroext 2) #12
  %6 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 74, i32 noundef 1, i16 noundef zeroext 1) #12
  %7 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 74, i32 noundef 1, i16 noundef zeroext 2) #12
  %8 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 75, i32 noundef 1, i16 noundef zeroext 1) #12
  %9 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 75, i32 noundef 1, i16 noundef zeroext 2) #12
  %10 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 76, i32 noundef 1, i16 noundef zeroext 1) #12
  %11 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 76, i32 noundef 1, i16 noundef zeroext 2) #12
  %12 = load i8, ptr %3, align 4
  %13 = icmp ne i8 %12, 0
  %14 = zext i1 %13 to i32
  %15 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 1, i32 noundef %14, i16 noundef zeroext 1) #12
  %16 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 1, i32 noundef %14, i16 noundef zeroext 2) #12
  %17 = load i8, ptr %3, align 4
  %18 = icmp eq i8 %17, 0
  %19 = zext i1 %18 to i32
  %20 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 2, i32 noundef %19, i16 noundef zeroext 1) #12
  %21 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 2, i32 noundef %19, i16 noundef zeroext 2) #12
  %22 = load i8, ptr %3, align 4
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 2, i32 3
  %25 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 3, i32 noundef %24, i16 noundef zeroext 1) #12
  %26 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 3, i32 noundef %24, i16 noundef zeroext 2) #12
  %27 = load i8, ptr %3, align 4
  %28 = icmp ne i8 %27, 0
  %29 = zext i1 %28 to i32
  %30 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 4, i32 noundef %29, i16 noundef zeroext 1) #12
  %31 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 4, i32 noundef %29, i16 noundef zeroext 2) #12
  %32 = load i8, ptr %3, align 4
  %33 = icmp eq i8 %32, 0
  %34 = zext i1 %33 to i32
  %35 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef %34, i16 noundef zeroext 1) #12
  %36 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef %34, i16 noundef zeroext 2) #12
  %37 = add i16 %5, %4
  %38 = add i16 %37, %6
  %39 = add i16 %38, %7
  %40 = add i16 %39, %8
  %41 = add i16 %40, %9
  %42 = add i16 %41, %10
  %43 = add i16 %42, %11
  %44 = add i16 %43, %15
  %45 = add i16 %44, %16
  %46 = add i16 %45, %20
  %47 = add i16 %46, %21
  %48 = add i16 %47, %25
  %49 = add i16 %48, %26
  %50 = add i16 %49, %30
  %51 = add i16 %50, %31
  %52 = add i16 %51, %35
  %53 = add i16 %52, %36
  %54 = load ptr, ptr %2, align 4
  %55 = getelementptr inbounds %struct.mxl5005s_state, ptr %54, i32 0, i32 18
  %56 = load i16, ptr %55, align 4
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %113, label %58

58:                                               ; preds = %106, %1
  %59 = phi i16 [ %107, %106 ], [ %56, %1 ]
  %60 = phi i32 [ %108, %106 ], [ 0, %1 ]
  %61 = getelementptr %struct.mxl5005s_state, ptr %54, i32 0, i32 19, i32 %60
  %62 = load i16, ptr %61, align 2
  %63 = icmp eq i16 %62, 38
  br i1 %63, label %64, label %106

64:                                               ; preds = %58
  %65 = getelementptr %struct.mxl5005s_state, ptr %54, i32 0, i32 19, i32 %60, i32 1
  %66 = load i16, ptr %65, align 2
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %106, label %68

68:                                               ; preds = %99, %64
  %69 = phi i32 [ %100, %99 ], [ 0, %64 ]
  %70 = getelementptr %struct.mxl5005s_state, ptr %54, i32 0, i32 19, i32 %60, i32 4, i32 %69
  store i16 0, ptr %70, align 2
  %71 = getelementptr %struct.mxl5005s_state, ptr %54, i32 0, i32 19, i32 %60, i32 3, i32 %69
  %72 = load i16, ptr %71, align 2
  %73 = load ptr, ptr %2, align 4
  %74 = getelementptr inbounds %struct.mxl5005s_state, ptr %73, i32 0, i32 24
  %75 = load i16, ptr %74, align 4
  %76 = zext i16 %75 to i32
  %77 = icmp eq i16 %75, 0
  br i1 %77, label %99, label %78

78:                                               ; preds = %68
  %79 = getelementptr %struct.mxl5005s_state, ptr %54, i32 0, i32 19, i32 %60, i32 2, i32 %69
  %80 = load i16, ptr %79, align 2
  %81 = and i16 %80, 255
  br label %82

82:                                               ; preds = %96, %78
  %83 = phi i32 [ 0, %78 ], [ %97, %96 ]
  %84 = getelementptr %struct.mxl5005s_state, ptr %73, i32 0, i32 25, i32 %83
  %85 = load i16, ptr %84, align 2
  %86 = icmp eq i16 %85, %81
  br i1 %86, label %87, label %96

87:                                               ; preds = %82
  %88 = and i16 %72, 255
  %89 = zext i16 %88 to i32
  %90 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %89
  %91 = load i8, ptr %90, align 1
  %92 = zext i8 %91 to i16
  %93 = getelementptr %struct.mxl5005s_state, ptr %73, i32 0, i32 25, i32 %83, i32 1
  %94 = load i16, ptr %93, align 2
  %95 = and i16 %94, %92
  store i16 %95, ptr %93, align 2
  br label %99

96:                                               ; preds = %82
  %97 = add nuw nsw i32 %83, 1
  %98 = icmp eq i32 %97, %76
  br i1 %98, label %99, label %82

99:                                               ; preds = %96, %87, %68
  %100 = add nuw nsw i32 %69, 1
  %101 = load i16, ptr %65, align 2
  %102 = zext i16 %101 to i32
  %103 = icmp ult i32 %100, %102
  br i1 %103, label %68, label %104

104:                                              ; preds = %99
  %105 = load i16, ptr %55, align 4
  br label %106

106:                                              ; preds = %104, %64, %58
  %107 = phi i16 [ %105, %104 ], [ %59, %64 ], [ %59, %58 ]
  %108 = add nuw nsw i32 %60, 1
  %109 = zext i16 %107 to i32
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %58, label %111

111:                                              ; preds = %106
  %112 = load ptr, ptr %2, align 4
  br label %113

113:                                              ; preds = %111, %1
  %114 = phi ptr [ %112, %111 ], [ %54, %1 ]
  %115 = getelementptr inbounds %struct.mxl5005s_state, ptr %114, i32 0, i32 20
  %116 = load i16, ptr %115, align 2
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %171, label %118

118:                                              ; preds = %166, %113
  %119 = phi i16 [ %167, %166 ], [ %116, %113 ]
  %120 = phi i32 [ %168, %166 ], [ 0, %113 ]
  %121 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 21, i32 %120
  %122 = load i16, ptr %121, align 2
  %123 = icmp eq i16 %122, 38
  br i1 %123, label %124, label %166

124:                                              ; preds = %118
  %125 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 21, i32 %120, i32 1
  %126 = load i16, ptr %125, align 2
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %166, label %128

128:                                              ; preds = %159, %124
  %129 = phi i32 [ %160, %159 ], [ 0, %124 ]
  %130 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 21, i32 %120, i32 4, i32 %129
  store i16 0, ptr %130, align 2
  %131 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 21, i32 %120, i32 3, i32 %129
  %132 = load i16, ptr %131, align 2
  %133 = load ptr, ptr %2, align 4
  %134 = getelementptr inbounds %struct.mxl5005s_state, ptr %133, i32 0, i32 24
  %135 = load i16, ptr %134, align 4
  %136 = zext i16 %135 to i32
  %137 = icmp eq i16 %135, 0
  br i1 %137, label %159, label %138

138:                                              ; preds = %128
  %139 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 21, i32 %120, i32 2, i32 %129
  %140 = load i16, ptr %139, align 2
  %141 = and i16 %140, 255
  br label %142

142:                                              ; preds = %156, %138
  %143 = phi i32 [ 0, %138 ], [ %157, %156 ]
  %144 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 25, i32 %143
  %145 = load i16, ptr %144, align 2
  %146 = icmp eq i16 %145, %141
  br i1 %146, label %147, label %156

147:                                              ; preds = %142
  %148 = and i16 %132, 255
  %149 = zext i16 %148 to i32
  %150 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %149
  %151 = load i8, ptr %150, align 1
  %152 = zext i8 %151 to i16
  %153 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 25, i32 %143, i32 1
  %154 = load i16, ptr %153, align 2
  %155 = and i16 %154, %152
  store i16 %155, ptr %153, align 2
  br label %159

156:                                              ; preds = %142
  %157 = add nuw nsw i32 %143, 1
  %158 = icmp eq i32 %157, %136
  br i1 %158, label %159, label %142

159:                                              ; preds = %156, %147, %128
  %160 = add nuw nsw i32 %129, 1
  %161 = load i16, ptr %125, align 2
  %162 = zext i16 %161 to i32
  %163 = icmp ult i32 %160, %162
  br i1 %163, label %128, label %164

164:                                              ; preds = %159
  %165 = load i16, ptr %115, align 2
  br label %166

166:                                              ; preds = %164, %124, %118
  %167 = phi i16 [ %165, %164 ], [ %119, %124 ], [ %119, %118 ]
  %168 = add nuw nsw i32 %120, 1
  %169 = zext i16 %167 to i32
  %170 = icmp ult i32 %168, %169
  br i1 %170, label %118, label %171

171:                                              ; preds = %166, %113
  %172 = load i8, ptr %3, align 4
  %173 = icmp eq i8 %172, 0
  %174 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 2
  %175 = load i32, ptr %174, align 4
  br i1 %173, label %305, label %176

176:                                              ; preds = %171
  switch i32 %175, label %333 [
    i32 8000000, label %177
    i32 7000000, label %295
    i32 6000000, label %300
  ]

177:                                              ; preds = %176
  %178 = load ptr, ptr %2, align 4
  %179 = getelementptr inbounds %struct.mxl5005s_state, ptr %178, i32 0, i32 18
  %180 = load i16, ptr %179, align 4
  %181 = icmp eq i16 %180, 0
  br i1 %181, label %237, label %182

182:                                              ; preds = %230, %177
  %183 = phi i16 [ %231, %230 ], [ %180, %177 ]
  %184 = phi i32 [ %232, %230 ], [ 0, %177 ]
  %185 = getelementptr %struct.mxl5005s_state, ptr %178, i32 0, i32 19, i32 %184
  %186 = load i16, ptr %185, align 2
  %187 = icmp eq i16 %186, 7
  br i1 %187, label %188, label %230

188:                                              ; preds = %182
  %189 = getelementptr %struct.mxl5005s_state, ptr %178, i32 0, i32 19, i32 %184, i32 1
  %190 = load i16, ptr %189, align 2
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %230, label %192

192:                                              ; preds = %223, %188
  %193 = phi i32 [ %224, %223 ], [ 0, %188 ]
  %194 = getelementptr %struct.mxl5005s_state, ptr %178, i32 0, i32 19, i32 %184, i32 4, i32 %193
  store i16 0, ptr %194, align 2
  %195 = getelementptr %struct.mxl5005s_state, ptr %178, i32 0, i32 19, i32 %184, i32 3, i32 %193
  %196 = load i16, ptr %195, align 2
  %197 = load ptr, ptr %2, align 4
  %198 = getelementptr inbounds %struct.mxl5005s_state, ptr %197, i32 0, i32 24
  %199 = load i16, ptr %198, align 4
  %200 = zext i16 %199 to i32
  %201 = icmp eq i16 %199, 0
  br i1 %201, label %223, label %202

202:                                              ; preds = %192
  %203 = getelementptr %struct.mxl5005s_state, ptr %178, i32 0, i32 19, i32 %184, i32 2, i32 %193
  %204 = load i16, ptr %203, align 2
  %205 = and i16 %204, 255
  br label %206

206:                                              ; preds = %220, %202
  %207 = phi i32 [ 0, %202 ], [ %221, %220 ]
  %208 = getelementptr %struct.mxl5005s_state, ptr %197, i32 0, i32 25, i32 %207
  %209 = load i16, ptr %208, align 2
  %210 = icmp eq i16 %209, %205
  br i1 %210, label %211, label %220

211:                                              ; preds = %206
  %212 = and i16 %196, 255
  %213 = zext i16 %212 to i32
  %214 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %213
  %215 = load i8, ptr %214, align 1
  %216 = zext i8 %215 to i16
  %217 = getelementptr %struct.mxl5005s_state, ptr %197, i32 0, i32 25, i32 %207, i32 1
  %218 = load i16, ptr %217, align 2
  %219 = and i16 %218, %216
  store i16 %219, ptr %217, align 2
  br label %223

220:                                              ; preds = %206
  %221 = add nuw nsw i32 %207, 1
  %222 = icmp eq i32 %221, %200
  br i1 %222, label %223, label %206

223:                                              ; preds = %220, %211, %192
  %224 = add nuw nsw i32 %193, 1
  %225 = load i16, ptr %189, align 2
  %226 = zext i16 %225 to i32
  %227 = icmp ult i32 %224, %226
  br i1 %227, label %192, label %228

228:                                              ; preds = %223
  %229 = load i16, ptr %179, align 4
  br label %230

230:                                              ; preds = %228, %188, %182
  %231 = phi i16 [ %229, %228 ], [ %183, %188 ], [ %183, %182 ]
  %232 = add nuw nsw i32 %184, 1
  %233 = zext i16 %231 to i32
  %234 = icmp ult i32 %232, %233
  br i1 %234, label %182, label %235

235:                                              ; preds = %230
  %236 = load ptr, ptr %2, align 4
  br label %237

237:                                              ; preds = %235, %177
  %238 = phi ptr [ %236, %235 ], [ %178, %177 ]
  %239 = getelementptr inbounds %struct.mxl5005s_state, ptr %238, i32 0, i32 20
  %240 = load i16, ptr %239, align 2
  %241 = icmp eq i16 %240, 0
  br i1 %241, label %333, label %242

242:                                              ; preds = %290, %237
  %243 = phi i16 [ %291, %290 ], [ %240, %237 ]
  %244 = phi i32 [ %292, %290 ], [ 0, %237 ]
  %245 = getelementptr %struct.mxl5005s_state, ptr %238, i32 0, i32 21, i32 %244
  %246 = load i16, ptr %245, align 2
  %247 = icmp eq i16 %246, 7
  br i1 %247, label %248, label %290

248:                                              ; preds = %242
  %249 = getelementptr %struct.mxl5005s_state, ptr %238, i32 0, i32 21, i32 %244, i32 1
  %250 = load i16, ptr %249, align 2
  %251 = icmp eq i16 %250, 0
  br i1 %251, label %290, label %252

252:                                              ; preds = %283, %248
  %253 = phi i32 [ %284, %283 ], [ 0, %248 ]
  %254 = getelementptr %struct.mxl5005s_state, ptr %238, i32 0, i32 21, i32 %244, i32 4, i32 %253
  store i16 0, ptr %254, align 2
  %255 = getelementptr %struct.mxl5005s_state, ptr %238, i32 0, i32 21, i32 %244, i32 3, i32 %253
  %256 = load i16, ptr %255, align 2
  %257 = load ptr, ptr %2, align 4
  %258 = getelementptr inbounds %struct.mxl5005s_state, ptr %257, i32 0, i32 24
  %259 = load i16, ptr %258, align 4
  %260 = zext i16 %259 to i32
  %261 = icmp eq i16 %259, 0
  br i1 %261, label %283, label %262

262:                                              ; preds = %252
  %263 = getelementptr %struct.mxl5005s_state, ptr %238, i32 0, i32 21, i32 %244, i32 2, i32 %253
  %264 = load i16, ptr %263, align 2
  %265 = and i16 %264, 255
  br label %266

266:                                              ; preds = %280, %262
  %267 = phi i32 [ 0, %262 ], [ %281, %280 ]
  %268 = getelementptr %struct.mxl5005s_state, ptr %257, i32 0, i32 25, i32 %267
  %269 = load i16, ptr %268, align 2
  %270 = icmp eq i16 %269, %265
  br i1 %270, label %271, label %280

271:                                              ; preds = %266
  %272 = and i16 %256, 255
  %273 = zext i16 %272 to i32
  %274 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %273
  %275 = load i8, ptr %274, align 1
  %276 = zext i8 %275 to i16
  %277 = getelementptr %struct.mxl5005s_state, ptr %257, i32 0, i32 25, i32 %267, i32 1
  %278 = load i16, ptr %277, align 2
  %279 = and i16 %278, %276
  store i16 %279, ptr %277, align 2
  br label %283

280:                                              ; preds = %266
  %281 = add nuw nsw i32 %267, 1
  %282 = icmp eq i32 %281, %260
  br i1 %282, label %283, label %266

283:                                              ; preds = %280, %271, %252
  %284 = add nuw nsw i32 %253, 1
  %285 = load i16, ptr %249, align 2
  %286 = zext i16 %285 to i32
  %287 = icmp ult i32 %284, %286
  br i1 %287, label %252, label %288

288:                                              ; preds = %283
  %289 = load i16, ptr %239, align 2
  br label %290

290:                                              ; preds = %288, %248, %242
  %291 = phi i16 [ %289, %288 ], [ %243, %248 ], [ %243, %242 ]
  %292 = add nuw nsw i32 %244, 1
  %293 = zext i16 %291 to i32
  %294 = icmp ult i32 %292, %293
  br i1 %294, label %242, label %333

295:                                              ; preds = %176
  %296 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 7, i32 noundef 2, i16 noundef zeroext 1) #12
  %297 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 7, i32 noundef 2, i16 noundef zeroext 2) #12
  %298 = add i16 %296, %53
  %299 = add i16 %298, %297
  br label %333

300:                                              ; preds = %176
  %301 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 7, i32 noundef 3, i16 noundef zeroext 1) #12
  %302 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 7, i32 noundef 3, i16 noundef zeroext 2) #12
  %303 = add i16 %301, %53
  %304 = add i16 %303, %302
  br label %333

305:                                              ; preds = %171
  switch i32 %175, label %333 [
    i32 8000000, label %306
    i32 7000000, label %315
    i32 6000000, label %324
  ]

306:                                              ; preds = %305
  %307 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 1
  %308 = load i8, ptr %307, align 1
  %309 = icmp eq i8 %308, 0
  %310 = select i1 %309, i32 3, i32 0
  %311 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 5, i32 noundef %310, i16 noundef zeroext 1) #12
  %312 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 5, i32 noundef %310, i16 noundef zeroext 2) #12
  %313 = add i16 %311, %53
  %314 = add i16 %313, %312
  br label %333

315:                                              ; preds = %305
  %316 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 1
  %317 = load i8, ptr %316, align 1
  %318 = icmp eq i8 %317, 0
  %319 = select i1 %318, i32 4, i32 1
  %320 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 5, i32 noundef %319, i16 noundef zeroext 1) #12
  %321 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 5, i32 noundef %319, i16 noundef zeroext 2) #12
  %322 = add i16 %320, %53
  %323 = add i16 %322, %321
  br label %333

324:                                              ; preds = %305
  %325 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 1
  %326 = load i8, ptr %325, align 1
  %327 = icmp eq i8 %326, 0
  %328 = select i1 %327, i32 5, i32 2
  %329 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 5, i32 noundef %328, i16 noundef zeroext 1) #12
  %330 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 5, i32 noundef %328, i16 noundef zeroext 2) #12
  %331 = add i16 %329, %53
  %332 = add i16 %331, %330
  br label %333

333:                                              ; preds = %324, %315, %306, %305, %300, %295, %290, %237, %176
  %334 = phi i16 [ %53, %176 ], [ %304, %300 ], [ %299, %295 ], [ %53, %305 ], [ %332, %324 ], [ %323, %315 ], [ %314, %306 ], [ %53, %237 ], [ %53, %290 ]
  %335 = load i8, ptr %3, align 4
  %336 = icmp eq i8 %335, 0
  %337 = select i1 %336, i32 8, i32 5
  %338 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef %337, i16 noundef zeroext 1) #12
  %339 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef %337, i16 noundef zeroext 2) #12
  %340 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 9, i32 noundef 1, i16 noundef zeroext 1) #12
  %341 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 9, i32 noundef 1, i16 noundef zeroext 2) #12
  %342 = add i16 %338, %334
  %343 = add i16 %342, %339
  %344 = add i16 %343, %340
  %345 = add i16 %344, %341
  %346 = load ptr, ptr %2, align 4
  %347 = getelementptr inbounds %struct.mxl5005s_state, ptr %346, i32 0, i32 18
  %348 = load i16, ptr %347, align 4
  %349 = icmp eq i16 %348, 0
  br i1 %349, label %405, label %350

350:                                              ; preds = %398, %333
  %351 = phi i16 [ %399, %398 ], [ %348, %333 ]
  %352 = phi i32 [ %400, %398 ], [ 0, %333 ]
  %353 = getelementptr %struct.mxl5005s_state, ptr %346, i32 0, i32 19, i32 %352
  %354 = load i16, ptr %353, align 2
  %355 = icmp eq i16 %354, 40
  br i1 %355, label %356, label %398

356:                                              ; preds = %350
  %357 = getelementptr %struct.mxl5005s_state, ptr %346, i32 0, i32 19, i32 %352, i32 1
  %358 = load i16, ptr %357, align 2
  %359 = icmp eq i16 %358, 0
  br i1 %359, label %398, label %360

360:                                              ; preds = %391, %356
  %361 = phi i32 [ %392, %391 ], [ 0, %356 ]
  %362 = getelementptr %struct.mxl5005s_state, ptr %346, i32 0, i32 19, i32 %352, i32 4, i32 %361
  store i16 0, ptr %362, align 2
  %363 = getelementptr %struct.mxl5005s_state, ptr %346, i32 0, i32 19, i32 %352, i32 3, i32 %361
  %364 = load i16, ptr %363, align 2
  %365 = load ptr, ptr %2, align 4
  %366 = getelementptr inbounds %struct.mxl5005s_state, ptr %365, i32 0, i32 24
  %367 = load i16, ptr %366, align 4
  %368 = zext i16 %367 to i32
  %369 = icmp eq i16 %367, 0
  br i1 %369, label %391, label %370

370:                                              ; preds = %360
  %371 = getelementptr %struct.mxl5005s_state, ptr %346, i32 0, i32 19, i32 %352, i32 2, i32 %361
  %372 = load i16, ptr %371, align 2
  %373 = and i16 %372, 255
  br label %374

374:                                              ; preds = %388, %370
  %375 = phi i32 [ 0, %370 ], [ %389, %388 ]
  %376 = getelementptr %struct.mxl5005s_state, ptr %365, i32 0, i32 25, i32 %375
  %377 = load i16, ptr %376, align 2
  %378 = icmp eq i16 %377, %373
  br i1 %378, label %379, label %388

379:                                              ; preds = %374
  %380 = and i16 %364, 255
  %381 = zext i16 %380 to i32
  %382 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %381
  %383 = load i8, ptr %382, align 1
  %384 = zext i8 %383 to i16
  %385 = getelementptr %struct.mxl5005s_state, ptr %365, i32 0, i32 25, i32 %375, i32 1
  %386 = load i16, ptr %385, align 2
  %387 = and i16 %386, %384
  store i16 %387, ptr %385, align 2
  br label %391

388:                                              ; preds = %374
  %389 = add nuw nsw i32 %375, 1
  %390 = icmp eq i32 %389, %368
  br i1 %390, label %391, label %374

391:                                              ; preds = %388, %379, %360
  %392 = add nuw nsw i32 %361, 1
  %393 = load i16, ptr %357, align 2
  %394 = zext i16 %393 to i32
  %395 = icmp ult i32 %392, %394
  br i1 %395, label %360, label %396

396:                                              ; preds = %391
  %397 = load i16, ptr %347, align 4
  br label %398

398:                                              ; preds = %396, %356, %350
  %399 = phi i16 [ %397, %396 ], [ %351, %356 ], [ %351, %350 ]
  %400 = add nuw nsw i32 %352, 1
  %401 = zext i16 %399 to i32
  %402 = icmp ult i32 %400, %401
  br i1 %402, label %350, label %403

403:                                              ; preds = %398
  %404 = load ptr, ptr %2, align 4
  br label %405

405:                                              ; preds = %403, %333
  %406 = phi ptr [ %404, %403 ], [ %346, %333 ]
  %407 = getelementptr inbounds %struct.mxl5005s_state, ptr %406, i32 0, i32 20
  %408 = load i16, ptr %407, align 2
  %409 = icmp eq i16 %408, 0
  br i1 %409, label %463, label %410

410:                                              ; preds = %458, %405
  %411 = phi i16 [ %459, %458 ], [ %408, %405 ]
  %412 = phi i32 [ %460, %458 ], [ 0, %405 ]
  %413 = getelementptr %struct.mxl5005s_state, ptr %406, i32 0, i32 21, i32 %412
  %414 = load i16, ptr %413, align 2
  %415 = icmp eq i16 %414, 40
  br i1 %415, label %416, label %458

416:                                              ; preds = %410
  %417 = getelementptr %struct.mxl5005s_state, ptr %406, i32 0, i32 21, i32 %412, i32 1
  %418 = load i16, ptr %417, align 2
  %419 = icmp eq i16 %418, 0
  br i1 %419, label %458, label %420

420:                                              ; preds = %451, %416
  %421 = phi i32 [ %452, %451 ], [ 0, %416 ]
  %422 = getelementptr %struct.mxl5005s_state, ptr %406, i32 0, i32 21, i32 %412, i32 4, i32 %421
  store i16 0, ptr %422, align 2
  %423 = getelementptr %struct.mxl5005s_state, ptr %406, i32 0, i32 21, i32 %412, i32 3, i32 %421
  %424 = load i16, ptr %423, align 2
  %425 = load ptr, ptr %2, align 4
  %426 = getelementptr inbounds %struct.mxl5005s_state, ptr %425, i32 0, i32 24
  %427 = load i16, ptr %426, align 4
  %428 = zext i16 %427 to i32
  %429 = icmp eq i16 %427, 0
  br i1 %429, label %451, label %430

430:                                              ; preds = %420
  %431 = getelementptr %struct.mxl5005s_state, ptr %406, i32 0, i32 21, i32 %412, i32 2, i32 %421
  %432 = load i16, ptr %431, align 2
  %433 = and i16 %432, 255
  br label %434

434:                                              ; preds = %448, %430
  %435 = phi i32 [ 0, %430 ], [ %449, %448 ]
  %436 = getelementptr %struct.mxl5005s_state, ptr %425, i32 0, i32 25, i32 %435
  %437 = load i16, ptr %436, align 2
  %438 = icmp eq i16 %437, %433
  br i1 %438, label %439, label %448

439:                                              ; preds = %434
  %440 = and i16 %424, 255
  %441 = zext i16 %440 to i32
  %442 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %441
  %443 = load i8, ptr %442, align 1
  %444 = zext i8 %443 to i16
  %445 = getelementptr %struct.mxl5005s_state, ptr %425, i32 0, i32 25, i32 %435, i32 1
  %446 = load i16, ptr %445, align 2
  %447 = and i16 %446, %444
  store i16 %447, ptr %445, align 2
  br label %451

448:                                              ; preds = %434
  %449 = add nuw nsw i32 %435, 1
  %450 = icmp eq i32 %449, %428
  br i1 %450, label %451, label %434

451:                                              ; preds = %448, %439, %420
  %452 = add nuw nsw i32 %421, 1
  %453 = load i16, ptr %417, align 2
  %454 = zext i16 %453 to i32
  %455 = icmp ult i32 %452, %454
  br i1 %455, label %420, label %456

456:                                              ; preds = %451
  %457 = load i16, ptr %407, align 2
  br label %458

458:                                              ; preds = %456, %416, %410
  %459 = phi i16 [ %457, %456 ], [ %411, %416 ], [ %411, %410 ]
  %460 = add nuw nsw i32 %412, 1
  %461 = zext i16 %459 to i32
  %462 = icmp ult i32 %460, %461
  br i1 %462, label %410, label %463

463:                                              ; preds = %458, %405
  %464 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 7
  %465 = load i8, ptr %464, align 4
  %466 = icmp eq i8 %465, 0
  br i1 %466, label %467, label %476

467:                                              ; preds = %463
  %468 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 15, i16 noundef zeroext 1) #12
  %469 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 15, i16 noundef zeroext 2) #12
  %470 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 11, i32 noundef 15, i16 noundef zeroext 1) #12
  %471 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 11, i32 noundef 15, i16 noundef zeroext 2) #12
  %472 = add i16 %468, %345
  %473 = add i16 %472, %469
  %474 = add i16 %473, %470
  %475 = add i16 %474, %471
  br label %484

476:                                              ; preds = %463
  %477 = load i8, ptr %3, align 4
  %478 = icmp eq i8 %477, 0
  %479 = select i1 %478, i32 12, i32 15
  %480 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 11, i32 noundef %479, i16 noundef zeroext 1) #12
  %481 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 11, i32 noundef %479, i16 noundef zeroext 2) #12
  %482 = add i16 %480, %345
  %483 = add i16 %482, %481
  br label %484

484:                                              ; preds = %476, %467
  %485 = phi i16 [ %475, %467 ], [ %483, %476 ]
  %486 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 8
  %487 = load i16, ptr %486, align 2
  %488 = icmp eq i16 %487, 55
  br i1 %488, label %489, label %609

489:                                              ; preds = %484
  %490 = load ptr, ptr %2, align 4
  %491 = getelementptr inbounds %struct.mxl5005s_state, ptr %490, i32 0, i32 18
  %492 = load i16, ptr %491, align 4
  %493 = icmp eq i16 %492, 0
  br i1 %493, label %549, label %494

494:                                              ; preds = %542, %489
  %495 = phi i16 [ %543, %542 ], [ %492, %489 ]
  %496 = phi i32 [ %544, %542 ], [ 0, %489 ]
  %497 = getelementptr %struct.mxl5005s_state, ptr %490, i32 0, i32 19, i32 %496
  %498 = load i16, ptr %497, align 2
  %499 = icmp eq i16 %498, 10
  br i1 %499, label %500, label %542

500:                                              ; preds = %494
  %501 = getelementptr %struct.mxl5005s_state, ptr %490, i32 0, i32 19, i32 %496, i32 1
  %502 = load i16, ptr %501, align 2
  %503 = icmp eq i16 %502, 0
  br i1 %503, label %542, label %504

504:                                              ; preds = %535, %500
  %505 = phi i32 [ %536, %535 ], [ 0, %500 ]
  %506 = getelementptr %struct.mxl5005s_state, ptr %490, i32 0, i32 19, i32 %496, i32 4, i32 %505
  store i16 0, ptr %506, align 2
  %507 = getelementptr %struct.mxl5005s_state, ptr %490, i32 0, i32 19, i32 %496, i32 3, i32 %505
  %508 = load i16, ptr %507, align 2
  %509 = load ptr, ptr %2, align 4
  %510 = getelementptr inbounds %struct.mxl5005s_state, ptr %509, i32 0, i32 24
  %511 = load i16, ptr %510, align 4
  %512 = zext i16 %511 to i32
  %513 = icmp eq i16 %511, 0
  br i1 %513, label %535, label %514

514:                                              ; preds = %504
  %515 = getelementptr %struct.mxl5005s_state, ptr %490, i32 0, i32 19, i32 %496, i32 2, i32 %505
  %516 = load i16, ptr %515, align 2
  %517 = and i16 %516, 255
  br label %518

518:                                              ; preds = %532, %514
  %519 = phi i32 [ 0, %514 ], [ %533, %532 ]
  %520 = getelementptr %struct.mxl5005s_state, ptr %509, i32 0, i32 25, i32 %519
  %521 = load i16, ptr %520, align 2
  %522 = icmp eq i16 %521, %517
  br i1 %522, label %523, label %532

523:                                              ; preds = %518
  %524 = and i16 %508, 255
  %525 = zext i16 %524 to i32
  %526 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %525
  %527 = load i8, ptr %526, align 1
  %528 = zext i8 %527 to i16
  %529 = getelementptr %struct.mxl5005s_state, ptr %509, i32 0, i32 25, i32 %519, i32 1
  %530 = load i16, ptr %529, align 2
  %531 = and i16 %530, %528
  store i16 %531, ptr %529, align 2
  br label %535

532:                                              ; preds = %518
  %533 = add nuw nsw i32 %519, 1
  %534 = icmp eq i32 %533, %512
  br i1 %534, label %535, label %518

535:                                              ; preds = %532, %523, %504
  %536 = add nuw nsw i32 %505, 1
  %537 = load i16, ptr %501, align 2
  %538 = zext i16 %537 to i32
  %539 = icmp ult i32 %536, %538
  br i1 %539, label %504, label %540

540:                                              ; preds = %535
  %541 = load i16, ptr %491, align 4
  br label %542

542:                                              ; preds = %540, %500, %494
  %543 = phi i16 [ %541, %540 ], [ %495, %500 ], [ %495, %494 ]
  %544 = add nuw nsw i32 %496, 1
  %545 = zext i16 %543 to i32
  %546 = icmp ult i32 %544, %545
  br i1 %546, label %494, label %547

547:                                              ; preds = %542
  %548 = load ptr, ptr %2, align 4
  br label %549

549:                                              ; preds = %547, %489
  %550 = phi ptr [ %548, %547 ], [ %490, %489 ]
  %551 = getelementptr inbounds %struct.mxl5005s_state, ptr %550, i32 0, i32 20
  %552 = load i16, ptr %551, align 2
  %553 = icmp eq i16 %552, 0
  br i1 %553, label %607, label %554

554:                                              ; preds = %602, %549
  %555 = phi i16 [ %603, %602 ], [ %552, %549 ]
  %556 = phi i32 [ %604, %602 ], [ 0, %549 ]
  %557 = getelementptr %struct.mxl5005s_state, ptr %550, i32 0, i32 21, i32 %556
  %558 = load i16, ptr %557, align 2
  %559 = icmp eq i16 %558, 10
  br i1 %559, label %560, label %602

560:                                              ; preds = %554
  %561 = getelementptr %struct.mxl5005s_state, ptr %550, i32 0, i32 21, i32 %556, i32 1
  %562 = load i16, ptr %561, align 2
  %563 = icmp eq i16 %562, 0
  br i1 %563, label %602, label %564

564:                                              ; preds = %595, %560
  %565 = phi i32 [ %596, %595 ], [ 0, %560 ]
  %566 = getelementptr %struct.mxl5005s_state, ptr %550, i32 0, i32 21, i32 %556, i32 4, i32 %565
  store i16 0, ptr %566, align 2
  %567 = getelementptr %struct.mxl5005s_state, ptr %550, i32 0, i32 21, i32 %556, i32 3, i32 %565
  %568 = load i16, ptr %567, align 2
  %569 = load ptr, ptr %2, align 4
  %570 = getelementptr inbounds %struct.mxl5005s_state, ptr %569, i32 0, i32 24
  %571 = load i16, ptr %570, align 4
  %572 = zext i16 %571 to i32
  %573 = icmp eq i16 %571, 0
  br i1 %573, label %595, label %574

574:                                              ; preds = %564
  %575 = getelementptr %struct.mxl5005s_state, ptr %550, i32 0, i32 21, i32 %556, i32 2, i32 %565
  %576 = load i16, ptr %575, align 2
  %577 = and i16 %576, 255
  br label %578

578:                                              ; preds = %592, %574
  %579 = phi i32 [ 0, %574 ], [ %593, %592 ]
  %580 = getelementptr %struct.mxl5005s_state, ptr %569, i32 0, i32 25, i32 %579
  %581 = load i16, ptr %580, align 2
  %582 = icmp eq i16 %581, %577
  br i1 %582, label %583, label %592

583:                                              ; preds = %578
  %584 = and i16 %568, 255
  %585 = zext i16 %584 to i32
  %586 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %585
  %587 = load i8, ptr %586, align 1
  %588 = zext i8 %587 to i16
  %589 = getelementptr %struct.mxl5005s_state, ptr %569, i32 0, i32 25, i32 %579, i32 1
  %590 = load i16, ptr %589, align 2
  %591 = and i16 %590, %588
  store i16 %591, ptr %589, align 2
  br label %595

592:                                              ; preds = %578
  %593 = add nuw nsw i32 %579, 1
  %594 = icmp eq i32 %593, %572
  br i1 %594, label %595, label %578

595:                                              ; preds = %592, %583, %564
  %596 = add nuw nsw i32 %565, 1
  %597 = load i16, ptr %561, align 2
  %598 = zext i16 %597 to i32
  %599 = icmp ult i32 %596, %598
  br i1 %599, label %564, label %600

600:                                              ; preds = %595
  %601 = load i16, ptr %551, align 2
  br label %602

602:                                              ; preds = %600, %560, %554
  %603 = phi i16 [ %601, %600 ], [ %555, %560 ], [ %555, %554 ]
  %604 = add nuw nsw i32 %556, 1
  %605 = zext i16 %603 to i32
  %606 = icmp ult i32 %604, %605
  br i1 %606, label %554, label %607

607:                                              ; preds = %602, %549
  %608 = load i16, ptr %486, align 2
  br label %609

609:                                              ; preds = %607, %484
  %610 = phi i16 [ %608, %607 ], [ %487, %484 ]
  %611 = icmp eq i16 %610, 72
  br i1 %611, label %612, label %618

612:                                              ; preds = %609
  %613 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 1, i16 noundef zeroext 1) #12
  %614 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 1, i16 noundef zeroext 2) #12
  %615 = add i16 %613, %485
  %616 = add i16 %615, %614
  %617 = load i16, ptr %486, align 2
  br label %618

618:                                              ; preds = %612, %609
  %619 = phi i16 [ %617, %612 ], [ %610, %609 ]
  %620 = phi i16 [ %616, %612 ], [ %485, %609 ]
  %621 = icmp eq i16 %619, 92
  br i1 %621, label %622, label %628

622:                                              ; preds = %618
  %623 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 2, i16 noundef zeroext 1) #12
  %624 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 2, i16 noundef zeroext 2) #12
  %625 = add i16 %623, %620
  %626 = add i16 %625, %624
  %627 = load i16, ptr %486, align 2
  br label %628

628:                                              ; preds = %622, %618
  %629 = phi i16 [ %627, %622 ], [ %619, %618 ]
  %630 = phi i16 [ %626, %622 ], [ %620, %618 ]
  %631 = icmp eq i16 %629, 110
  br i1 %631, label %632, label %638

632:                                              ; preds = %628
  %633 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 3, i16 noundef zeroext 1) #12
  %634 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 3, i16 noundef zeroext 2) #12
  %635 = add i16 %633, %630
  %636 = add i16 %635, %634
  %637 = load i16, ptr %486, align 2
  br label %638

638:                                              ; preds = %632, %628
  %639 = phi i16 [ %637, %632 ], [ %629, %628 ]
  %640 = phi i16 [ %636, %632 ], [ %630, %628 ]
  %641 = icmp eq i16 %639, 129
  br i1 %641, label %642, label %648

642:                                              ; preds = %638
  %643 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 4, i16 noundef zeroext 1) #12
  %644 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 4, i16 noundef zeroext 2) #12
  %645 = add i16 %643, %640
  %646 = add i16 %645, %644
  %647 = load i16, ptr %486, align 2
  br label %648

648:                                              ; preds = %642, %638
  %649 = phi i16 [ %647, %642 ], [ %639, %638 ]
  %650 = phi i16 [ %646, %642 ], [ %640, %638 ]
  %651 = icmp eq i16 %649, 147
  br i1 %651, label %652, label %658

652:                                              ; preds = %648
  %653 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 5, i16 noundef zeroext 1) #12
  %654 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 5, i16 noundef zeroext 2) #12
  %655 = add i16 %653, %650
  %656 = add i16 %655, %654
  %657 = load i16, ptr %486, align 2
  br label %658

658:                                              ; preds = %652, %648
  %659 = phi i16 [ %657, %652 ], [ %649, %648 ]
  %660 = phi i16 [ %656, %652 ], [ %650, %648 ]
  %661 = icmp eq i16 %659, 168
  br i1 %661, label %662, label %668

662:                                              ; preds = %658
  %663 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 6, i16 noundef zeroext 1) #12
  %664 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 6, i16 noundef zeroext 2) #12
  %665 = add i16 %663, %660
  %666 = add i16 %665, %664
  %667 = load i16, ptr %486, align 2
  br label %668

668:                                              ; preds = %662, %658
  %669 = phi i16 [ %667, %662 ], [ %659, %658 ]
  %670 = phi i16 [ %666, %662 ], [ %660, %658 ]
  %671 = icmp eq i16 %669, 194
  br i1 %671, label %672, label %678

672:                                              ; preds = %668
  %673 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 7, i16 noundef zeroext 1) #12
  %674 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 7, i16 noundef zeroext 2) #12
  %675 = add i16 %673, %670
  %676 = add i16 %675, %674
  %677 = load i16, ptr %486, align 2
  br label %678

678:                                              ; preds = %672, %668
  %679 = phi i16 [ %677, %672 ], [ %669, %668 ]
  %680 = phi i16 [ %676, %672 ], [ %670, %668 ]
  %681 = icmp eq i16 %679, 212
  br i1 %681, label %682, label %688

682:                                              ; preds = %678
  %683 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 9, i16 noundef zeroext 1) #12
  %684 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 9, i16 noundef zeroext 2) #12
  %685 = add i16 %683, %680
  %686 = add i16 %685, %684
  %687 = load i16, ptr %486, align 2
  br label %688

688:                                              ; preds = %682, %678
  %689 = phi i16 [ %687, %682 ], [ %679, %678 ]
  %690 = phi i16 [ %686, %682 ], [ %680, %678 ]
  %691 = icmp eq i16 %689, 232
  br i1 %691, label %692, label %698

692:                                              ; preds = %688
  %693 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 10, i16 noundef zeroext 1) #12
  %694 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 10, i16 noundef zeroext 2) #12
  %695 = add i16 %693, %690
  %696 = add i16 %695, %694
  %697 = load i16, ptr %486, align 2
  br label %698

698:                                              ; preds = %692, %688
  %699 = phi i16 [ %697, %692 ], [ %689, %688 ]
  %700 = phi i16 [ %696, %692 ], [ %690, %688 ]
  %701 = icmp eq i16 %699, 252
  br i1 %701, label %702, label %708

702:                                              ; preds = %698
  %703 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 11, i16 noundef zeroext 1) #12
  %704 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 11, i16 noundef zeroext 2) #12
  %705 = add i16 %703, %700
  %706 = add i16 %705, %704
  %707 = load i16, ptr %486, align 2
  br label %708

708:                                              ; preds = %702, %698
  %709 = phi i16 [ %707, %702 ], [ %699, %698 ]
  %710 = phi i16 [ %706, %702 ], [ %700, %698 ]
  %711 = icmp eq i16 %709, 271
  br i1 %711, label %712, label %718

712:                                              ; preds = %708
  %713 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 12, i16 noundef zeroext 1) #12
  %714 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 12, i16 noundef zeroext 2) #12
  %715 = add i16 %713, %710
  %716 = add i16 %715, %714
  %717 = load i16, ptr %486, align 2
  br label %718

718:                                              ; preds = %712, %708
  %719 = phi i16 [ %717, %712 ], [ %709, %708 ]
  %720 = phi i16 [ %716, %712 ], [ %710, %708 ]
  %721 = icmp eq i16 %719, 292
  br i1 %721, label %722, label %728

722:                                              ; preds = %718
  %723 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 13, i16 noundef zeroext 1) #12
  %724 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 13, i16 noundef zeroext 2) #12
  %725 = add i16 %723, %720
  %726 = add i16 %725, %724
  %727 = load i16, ptr %486, align 2
  br label %728

728:                                              ; preds = %722, %718
  %729 = phi i16 [ %727, %722 ], [ %719, %718 ]
  %730 = phi i16 [ %726, %722 ], [ %720, %718 ]
  %731 = icmp eq i16 %729, 317
  br i1 %731, label %732, label %738

732:                                              ; preds = %728
  %733 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 14, i16 noundef zeroext 1) #12
  %734 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 14, i16 noundef zeroext 2) #12
  %735 = add i16 %733, %730
  %736 = add i16 %735, %734
  %737 = load i16, ptr %486, align 2
  br label %738

738:                                              ; preds = %732, %728
  %739 = phi i16 [ %737, %732 ], [ %729, %728 ]
  %740 = phi i16 [ %736, %732 ], [ %730, %728 ]
  %741 = icmp eq i16 %739, 349
  br i1 %741, label %742, label %747

742:                                              ; preds = %738
  %743 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 15, i16 noundef zeroext 1) #12
  %744 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 15, i16 noundef zeroext 2) #12
  %745 = add i16 %743, %740
  %746 = add i16 %745, %744
  br label %747

747:                                              ; preds = %742, %738
  %748 = phi i16 [ %746, %742 ], [ %740, %738 ]
  %749 = load ptr, ptr %2, align 4
  %750 = getelementptr inbounds %struct.mxl5005s_state, ptr %749, i32 0, i32 6
  %751 = load i32, ptr %750, align 4
  %752 = load i8, ptr %749, align 4
  %753 = icmp eq i8 %752, 0
  br i1 %753, label %754, label %883

754:                                              ; preds = %747
  %755 = getelementptr inbounds %struct.mxl5005s_state, ptr %749, i32 0, i32 1
  %756 = load i8, ptr %755, align 1
  %757 = icmp eq i8 %756, 1
  br i1 %757, label %758, label %875

758:                                              ; preds = %754
  %759 = getelementptr inbounds %struct.mxl5005s_state, ptr %749, i32 0, i32 16
  %760 = load i32, ptr %759, align 4
  %761 = icmp eq i32 %760, 41000000
  br i1 %761, label %762, label %771

762:                                              ; preds = %758
  %763 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %764 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %765 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %766 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %767 = add i16 %764, %763
  %768 = add i16 %767, %765
  %769 = add i16 %768, %766
  %770 = load i32, ptr %759, align 4
  br label %771

771:                                              ; preds = %762, %758
  %772 = phi i32 [ %770, %762 ], [ %760, %758 ]
  %773 = phi i16 [ %769, %762 ], [ 0, %758 ]
  %774 = phi i32 [ 328000000, %762 ], [ 0, %758 ]
  %775 = icmp eq i32 %772, 47000000
  br i1 %775, label %776, label %786

776:                                              ; preds = %771
  %777 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %778 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %779 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %780 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %781 = add i16 %777, %773
  %782 = add i16 %781, %778
  %783 = add i16 %782, %779
  %784 = add i16 %783, %780
  %785 = load i32, ptr %759, align 4
  br label %786

786:                                              ; preds = %776, %771
  %787 = phi i32 [ %785, %776 ], [ %772, %771 ]
  %788 = phi i16 [ %784, %776 ], [ %773, %771 ]
  %789 = phi i32 [ 376000000, %776 ], [ %774, %771 ]
  %790 = icmp eq i32 %787, 54000000
  br i1 %790, label %791, label %801

791:                                              ; preds = %786
  %792 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 1) #12
  %793 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 2) #12
  %794 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %795 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %796 = add i16 %792, %788
  %797 = add i16 %796, %793
  %798 = add i16 %797, %794
  %799 = add i16 %798, %795
  %800 = load i32, ptr %759, align 4
  br label %801

801:                                              ; preds = %791, %786
  %802 = phi i32 [ %800, %791 ], [ %787, %786 ]
  %803 = phi i16 [ %799, %791 ], [ %788, %786 ]
  %804 = phi i32 [ 324000000, %791 ], [ %789, %786 ]
  %805 = icmp eq i32 %802, 60000000
  br i1 %805, label %806, label %816

806:                                              ; preds = %801
  %807 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 1) #12
  %808 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 2) #12
  %809 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %810 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %811 = add i16 %807, %803
  %812 = add i16 %811, %808
  %813 = add i16 %812, %809
  %814 = add i16 %813, %810
  %815 = load i32, ptr %759, align 4
  br label %816

816:                                              ; preds = %806, %801
  %817 = phi i32 [ %815, %806 ], [ %802, %801 ]
  %818 = phi i16 [ %814, %806 ], [ %803, %801 ]
  %819 = phi i32 [ 360000000, %806 ], [ %804, %801 ]
  %820 = icmp eq i32 %817, 39250000
  br i1 %820, label %821, label %831

821:                                              ; preds = %816
  %822 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %823 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %824 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %825 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %826 = add i16 %822, %818
  %827 = add i16 %826, %823
  %828 = add i16 %827, %824
  %829 = add i16 %828, %825
  %830 = load i32, ptr %759, align 4
  br label %831

831:                                              ; preds = %821, %816
  %832 = phi i32 [ %830, %821 ], [ %817, %816 ]
  %833 = phi i16 [ %829, %821 ], [ %818, %816 ]
  %834 = phi i32 [ 314000000, %821 ], [ %819, %816 ]
  %835 = icmp eq i32 %832, 39650000
  br i1 %835, label %836, label %846

836:                                              ; preds = %831
  %837 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %838 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %839 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %840 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %841 = add i16 %837, %833
  %842 = add i16 %841, %838
  %843 = add i16 %842, %839
  %844 = add i16 %843, %840
  %845 = load i32, ptr %759, align 4
  br label %846

846:                                              ; preds = %836, %831
  %847 = phi i32 [ %845, %836 ], [ %832, %831 ]
  %848 = phi i16 [ %844, %836 ], [ %833, %831 ]
  %849 = phi i32 [ 317200000, %836 ], [ %834, %831 ]
  %850 = icmp eq i32 %847, 40150000
  br i1 %850, label %851, label %861

851:                                              ; preds = %846
  %852 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %853 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %854 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %855 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %856 = add i16 %852, %848
  %857 = add i16 %856, %853
  %858 = add i16 %857, %854
  %859 = add i16 %858, %855
  %860 = load i32, ptr %759, align 4
  br label %861

861:                                              ; preds = %851, %846
  %862 = phi i32 [ %860, %851 ], [ %847, %846 ]
  %863 = phi i16 [ %859, %851 ], [ %848, %846 ]
  %864 = phi i32 [ 321200000, %851 ], [ %849, %846 ]
  %865 = icmp eq i32 %862, 40650000
  br i1 %865, label %866, label %875

866:                                              ; preds = %861
  %867 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %868 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %869 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %870 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %871 = add i16 %867, %863
  %872 = add i16 %871, %868
  %873 = add i16 %872, %869
  %874 = add i16 %873, %870
  br label %875

875:                                              ; preds = %866, %861, %754
  %876 = phi i16 [ 0, %754 ], [ %863, %861 ], [ %874, %866 ]
  %877 = phi i32 [ 0, %754 ], [ %864, %861 ], [ 325200000, %866 ]
  %878 = load i8, ptr %749, align 4
  %879 = icmp eq i8 %878, 0
  br i1 %879, label %880, label %883

880:                                              ; preds = %875
  %881 = load i8, ptr %755, align 1
  %882 = icmp eq i8 %881, 0
  br i1 %882, label %883, label %1273

883:                                              ; preds = %880, %875, %747
  %884 = phi i32 [ %877, %880 ], [ %877, %875 ], [ 0, %747 ]
  %885 = phi i16 [ %876, %880 ], [ %876, %875 ], [ 0, %747 ]
  %886 = getelementptr inbounds %struct.mxl5005s_state, ptr %749, i32 0, i32 16
  %887 = load i32, ptr %886, align 4
  %888 = icmp eq i32 %887, 57000000
  br i1 %888, label %889, label %899

889:                                              ; preds = %883
  %890 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 1) #12
  %891 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 2) #12
  %892 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %893 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %894 = add i16 %890, %885
  %895 = add i16 %894, %891
  %896 = add i16 %895, %892
  %897 = add i16 %896, %893
  %898 = load i32, ptr %886, align 4
  br label %899

899:                                              ; preds = %889, %883
  %900 = phi i32 [ %898, %889 ], [ %887, %883 ]
  %901 = phi i16 [ %897, %889 ], [ %885, %883 ]
  %902 = phi i32 [ 342000000, %889 ], [ %884, %883 ]
  %903 = icmp eq i32 %900, 44000000
  br i1 %903, label %904, label %914

904:                                              ; preds = %899
  %905 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %906 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %907 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %908 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %909 = add i16 %905, %901
  %910 = add i16 %909, %906
  %911 = add i16 %910, %907
  %912 = add i16 %911, %908
  %913 = load i32, ptr %886, align 4
  br label %914

914:                                              ; preds = %904, %899
  %915 = phi i32 [ %913, %904 ], [ %900, %899 ]
  %916 = phi i16 [ %912, %904 ], [ %901, %899 ]
  %917 = phi i32 [ 352000000, %904 ], [ %902, %899 ]
  %918 = icmp eq i32 %915, 43750000
  br i1 %918, label %919, label %929

919:                                              ; preds = %914
  %920 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %921 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %922 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %923 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %924 = add i16 %920, %916
  %925 = add i16 %924, %921
  %926 = add i16 %925, %922
  %927 = add i16 %926, %923
  %928 = load i32, ptr %886, align 4
  br label %929

929:                                              ; preds = %919, %914
  %930 = phi i32 [ %928, %919 ], [ %915, %914 ]
  %931 = phi i16 [ %927, %919 ], [ %916, %914 ]
  %932 = phi i32 [ 350000000, %919 ], [ %917, %914 ]
  %933 = icmp eq i32 %930, 36650000
  br i1 %933, label %934, label %944

934:                                              ; preds = %929
  %935 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %936 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %937 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %938 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %939 = add i16 %935, %931
  %940 = add i16 %939, %936
  %941 = add i16 %940, %937
  %942 = add i16 %941, %938
  %943 = load i32, ptr %886, align 4
  br label %944

944:                                              ; preds = %934, %929
  %945 = phi i32 [ %943, %934 ], [ %930, %929 ]
  %946 = phi i16 [ %942, %934 ], [ %931, %929 ]
  %947 = phi i32 [ 366500000, %934 ], [ %932, %929 ]
  %948 = icmp eq i32 %945, 36150000
  br i1 %948, label %949, label %959

949:                                              ; preds = %944
  %950 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %951 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %952 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %953 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %954 = add i16 %950, %946
  %955 = add i16 %954, %951
  %956 = add i16 %955, %952
  %957 = add i16 %956, %953
  %958 = load i32, ptr %886, align 4
  br label %959

959:                                              ; preds = %949, %944
  %960 = phi i32 [ %958, %949 ], [ %945, %944 ]
  %961 = phi i16 [ %957, %949 ], [ %946, %944 ]
  %962 = phi i32 [ 361500000, %949 ], [ %947, %944 ]
  %963 = icmp eq i32 %960, 36000000
  br i1 %963, label %964, label %974

964:                                              ; preds = %959
  %965 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %966 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %967 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %968 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %969 = add i16 %965, %961
  %970 = add i16 %969, %966
  %971 = add i16 %970, %967
  %972 = add i16 %971, %968
  %973 = load i32, ptr %886, align 4
  br label %974

974:                                              ; preds = %964, %959
  %975 = phi i32 [ %973, %964 ], [ %960, %959 ]
  %976 = phi i16 [ %972, %964 ], [ %961, %959 ]
  %977 = phi i32 [ 360000000, %964 ], [ %962, %959 ]
  %978 = icmp eq i32 %975, 35250000
  br i1 %978, label %979, label %989

979:                                              ; preds = %974
  %980 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %981 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %982 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %983 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %984 = add i16 %980, %976
  %985 = add i16 %984, %981
  %986 = add i16 %985, %982
  %987 = add i16 %986, %983
  %988 = load i32, ptr %886, align 4
  br label %989

989:                                              ; preds = %979, %974
  %990 = phi i32 [ %988, %979 ], [ %975, %974 ]
  %991 = phi i16 [ %987, %979 ], [ %976, %974 ]
  %992 = phi i32 [ 352500000, %979 ], [ %977, %974 ]
  %993 = icmp eq i32 %990, 34750000
  br i1 %993, label %994, label %1004

994:                                              ; preds = %989
  %995 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %996 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %997 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %998 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %999 = add i16 %995, %991
  %1000 = add i16 %999, %996
  %1001 = add i16 %1000, %997
  %1002 = add i16 %1001, %998
  %1003 = load i32, ptr %886, align 4
  br label %1004

1004:                                             ; preds = %994, %989
  %1005 = phi i32 [ %1003, %994 ], [ %990, %989 ]
  %1006 = phi i16 [ %1002, %994 ], [ %991, %989 ]
  %1007 = phi i32 [ 347500000, %994 ], [ %992, %989 ]
  %1008 = icmp eq i32 %1005, 6280000
  br i1 %1008, label %1009, label %1019

1009:                                             ; preds = %1004
  %1010 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 1) #12
  %1011 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 2) #12
  %1012 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1013 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1014 = add i16 %1010, %1006
  %1015 = add i16 %1014, %1011
  %1016 = add i16 %1015, %1012
  %1017 = add i16 %1016, %1013
  %1018 = load i32, ptr %886, align 4
  br label %1019

1019:                                             ; preds = %1009, %1004
  %1020 = phi i32 [ %1018, %1009 ], [ %1005, %1004 ]
  %1021 = phi i16 [ %1017, %1009 ], [ %1006, %1004 ]
  %1022 = phi i32 [ 376800000, %1009 ], [ %1007, %1004 ]
  %1023 = icmp eq i32 %1020, 5000000
  br i1 %1023, label %1024, label %1034

1024:                                             ; preds = %1019
  %1025 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 9, i16 noundef zeroext 1) #12
  %1026 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 9, i16 noundef zeroext 2) #12
  %1027 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1028 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1029 = add i16 %1025, %1021
  %1030 = add i16 %1029, %1026
  %1031 = add i16 %1030, %1027
  %1032 = add i16 %1031, %1028
  %1033 = load i32, ptr %886, align 4
  br label %1034

1034:                                             ; preds = %1024, %1019
  %1035 = phi i32 [ %1033, %1024 ], [ %1020, %1019 ]
  %1036 = phi i16 [ %1032, %1024 ], [ %1021, %1019 ]
  %1037 = phi i32 [ 360000000, %1024 ], [ %1022, %1019 ]
  %1038 = icmp eq i32 %1035, 4500000
  br i1 %1038, label %1039, label %1049

1039:                                             ; preds = %1034
  %1040 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 6, i16 noundef zeroext 1) #12
  %1041 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 6, i16 noundef zeroext 2) #12
  %1042 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1043 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1044 = add i16 %1040, %1036
  %1045 = add i16 %1044, %1041
  %1046 = add i16 %1045, %1042
  %1047 = add i16 %1046, %1043
  %1048 = load i32, ptr %886, align 4
  br label %1049

1049:                                             ; preds = %1039, %1034
  %1050 = phi i32 [ %1048, %1039 ], [ %1035, %1034 ]
  %1051 = phi i16 [ %1047, %1039 ], [ %1036, %1034 ]
  %1052 = phi i32 [ 360000000, %1039 ], [ %1037, %1034 ]
  %1053 = icmp eq i32 %1050, 4570000
  br i1 %1053, label %1054, label %1064

1054:                                             ; preds = %1049
  %1055 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 6, i16 noundef zeroext 1) #12
  %1056 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 6, i16 noundef zeroext 2) #12
  %1057 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1058 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1059 = add i16 %1055, %1051
  %1060 = add i16 %1059, %1056
  %1061 = add i16 %1060, %1057
  %1062 = add i16 %1061, %1058
  %1063 = load i32, ptr %886, align 4
  br label %1064

1064:                                             ; preds = %1054, %1049
  %1065 = phi i32 [ %1063, %1054 ], [ %1050, %1049 ]
  %1066 = phi i16 [ %1062, %1054 ], [ %1051, %1049 ]
  %1067 = phi i32 [ 365600000, %1054 ], [ %1052, %1049 ]
  %1068 = icmp eq i32 %1065, 4000000
  br i1 %1068, label %1069, label %1079

1069:                                             ; preds = %1064
  %1070 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 5, i16 noundef zeroext 1) #12
  %1071 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 5, i16 noundef zeroext 2) #12
  %1072 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1073 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1074 = add i16 %1070, %1066
  %1075 = add i16 %1074, %1071
  %1076 = add i16 %1075, %1072
  %1077 = add i16 %1076, %1073
  %1078 = load i32, ptr %886, align 4
  br label %1079

1079:                                             ; preds = %1069, %1064
  %1080 = phi i32 [ %1078, %1069 ], [ %1065, %1064 ]
  %1081 = phi i16 [ %1077, %1069 ], [ %1066, %1064 ]
  %1082 = phi i32 [ 360000000, %1069 ], [ %1067, %1064 ]
  %1083 = icmp eq i32 %1080, 57400000
  br i1 %1083, label %1084, label %1094

1084:                                             ; preds = %1079
  %1085 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 1) #12
  %1086 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 16, i16 noundef zeroext 2) #12
  %1087 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1088 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1089 = add i16 %1085, %1081
  %1090 = add i16 %1089, %1086
  %1091 = add i16 %1090, %1087
  %1092 = add i16 %1091, %1088
  %1093 = load i32, ptr %886, align 4
  br label %1094

1094:                                             ; preds = %1084, %1079
  %1095 = phi i32 [ %1093, %1084 ], [ %1080, %1079 ]
  %1096 = phi i16 [ %1092, %1084 ], [ %1081, %1079 ]
  %1097 = phi i32 [ 344400000, %1084 ], [ %1082, %1079 ]
  %1098 = icmp eq i32 %1095, 44400000
  br i1 %1098, label %1099, label %1109

1099:                                             ; preds = %1094
  %1100 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %1101 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %1102 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1103 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1104 = add i16 %1100, %1096
  %1105 = add i16 %1104, %1101
  %1106 = add i16 %1105, %1102
  %1107 = add i16 %1106, %1103
  %1108 = load i32, ptr %886, align 4
  br label %1109

1109:                                             ; preds = %1099, %1094
  %1110 = phi i32 [ %1108, %1099 ], [ %1095, %1094 ]
  %1111 = phi i16 [ %1107, %1099 ], [ %1096, %1094 ]
  %1112 = phi i32 [ 355200000, %1099 ], [ %1097, %1094 ]
  %1113 = icmp eq i32 %1110, 44150000
  br i1 %1113, label %1114, label %1124

1114:                                             ; preds = %1109
  %1115 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 1) #12
  %1116 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 8, i16 noundef zeroext 2) #12
  %1117 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1118 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1119 = add i16 %1115, %1111
  %1120 = add i16 %1119, %1116
  %1121 = add i16 %1120, %1117
  %1122 = add i16 %1121, %1118
  %1123 = load i32, ptr %886, align 4
  br label %1124

1124:                                             ; preds = %1114, %1109
  %1125 = phi i32 [ %1123, %1114 ], [ %1110, %1109 ]
  %1126 = phi i16 [ %1122, %1114 ], [ %1111, %1109 ]
  %1127 = phi i32 [ 353200000, %1114 ], [ %1112, %1109 ]
  %1128 = icmp eq i32 %1125, 37050000
  br i1 %1128, label %1129, label %1139

1129:                                             ; preds = %1124
  %1130 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %1131 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %1132 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1133 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1134 = add i16 %1130, %1126
  %1135 = add i16 %1134, %1131
  %1136 = add i16 %1135, %1132
  %1137 = add i16 %1136, %1133
  %1138 = load i32, ptr %886, align 4
  br label %1139

1139:                                             ; preds = %1129, %1124
  %1140 = phi i32 [ %1138, %1129 ], [ %1125, %1124 ]
  %1141 = phi i16 [ %1137, %1129 ], [ %1126, %1124 ]
  %1142 = phi i32 [ 370500000, %1129 ], [ %1127, %1124 ]
  %1143 = icmp eq i32 %1140, 36550000
  br i1 %1143, label %1144, label %1154

1144:                                             ; preds = %1139
  %1145 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %1146 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %1147 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1148 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1149 = add i16 %1145, %1141
  %1150 = add i16 %1149, %1146
  %1151 = add i16 %1150, %1147
  %1152 = add i16 %1151, %1148
  %1153 = load i32, ptr %886, align 4
  br label %1154

1154:                                             ; preds = %1144, %1139
  %1155 = phi i32 [ %1153, %1144 ], [ %1140, %1139 ]
  %1156 = phi i16 [ %1152, %1144 ], [ %1141, %1139 ]
  %1157 = phi i32 [ 365500000, %1144 ], [ %1142, %1139 ]
  %1158 = icmp eq i32 %1155, 36125000
  br i1 %1158, label %1159, label %1169

1159:                                             ; preds = %1154
  %1160 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 1) #12
  %1161 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 4, i16 noundef zeroext 2) #12
  %1162 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1163 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1164 = add i16 %1160, %1156
  %1165 = add i16 %1164, %1161
  %1166 = add i16 %1165, %1162
  %1167 = add i16 %1166, %1163
  %1168 = load i32, ptr %886, align 4
  br label %1169

1169:                                             ; preds = %1159, %1154
  %1170 = phi i32 [ %1168, %1159 ], [ %1155, %1154 ]
  %1171 = phi i16 [ %1167, %1159 ], [ %1156, %1154 ]
  %1172 = phi i32 [ 361250000, %1159 ], [ %1157, %1154 ]
  %1173 = icmp eq i32 %1170, 6000000
  br i1 %1173, label %1174, label %1184

1174:                                             ; preds = %1169
  %1175 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 1) #12
  %1176 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 2) #12
  %1177 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1178 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1179 = add i16 %1175, %1171
  %1180 = add i16 %1179, %1176
  %1181 = add i16 %1180, %1177
  %1182 = add i16 %1181, %1178
  %1183 = load i32, ptr %886, align 4
  br label %1184

1184:                                             ; preds = %1174, %1169
  %1185 = phi i32 [ %1183, %1174 ], [ %1170, %1169 ]
  %1186 = phi i16 [ %1182, %1174 ], [ %1171, %1169 ]
  %1187 = phi i32 [ 360000000, %1174 ], [ %1172, %1169 ]
  %1188 = icmp eq i32 %1185, 5400000
  br i1 %1188, label %1189, label %1199

1189:                                             ; preds = %1184
  %1190 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 1) #12
  %1191 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 2) #12
  %1192 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %1193 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %1194 = add i16 %1190, %1186
  %1195 = add i16 %1194, %1191
  %1196 = add i16 %1195, %1192
  %1197 = add i16 %1196, %1193
  %1198 = load i32, ptr %886, align 4
  br label %1199

1199:                                             ; preds = %1189, %1184
  %1200 = phi i32 [ %1198, %1189 ], [ %1185, %1184 ]
  %1201 = phi i16 [ %1197, %1189 ], [ %1186, %1184 ]
  %1202 = phi i32 [ 324000000, %1189 ], [ %1187, %1184 ]
  %1203 = icmp eq i32 %1200, 5380000
  br i1 %1203, label %1204, label %1214

1204:                                             ; preds = %1199
  %1205 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 1) #12
  %1206 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 7, i16 noundef zeroext 2) #12
  %1207 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 1) #12
  %1208 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 12, i16 noundef zeroext 2) #12
  %1209 = add i16 %1205, %1201
  %1210 = add i16 %1209, %1206
  %1211 = add i16 %1210, %1207
  %1212 = add i16 %1211, %1208
  %1213 = load i32, ptr %886, align 4
  br label %1214

1214:                                             ; preds = %1204, %1199
  %1215 = phi i32 [ %1213, %1204 ], [ %1200, %1199 ]
  %1216 = phi i16 [ %1212, %1204 ], [ %1201, %1199 ]
  %1217 = phi i32 [ 322800000, %1204 ], [ %1202, %1199 ]
  %1218 = icmp eq i32 %1215, 5200000
  br i1 %1218, label %1219, label %1229

1219:                                             ; preds = %1214
  %1220 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 9, i16 noundef zeroext 1) #12
  %1221 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 9, i16 noundef zeroext 2) #12
  %1222 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1223 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1224 = add i16 %1220, %1216
  %1225 = add i16 %1224, %1221
  %1226 = add i16 %1225, %1222
  %1227 = add i16 %1226, %1223
  %1228 = load i32, ptr %886, align 4
  br label %1229

1229:                                             ; preds = %1219, %1214
  %1230 = phi i32 [ %1228, %1219 ], [ %1215, %1214 ]
  %1231 = phi i16 [ %1227, %1219 ], [ %1216, %1214 ]
  %1232 = phi i32 [ 374400000, %1219 ], [ %1217, %1214 ]
  %1233 = icmp eq i32 %1230, 4900000
  br i1 %1233, label %1234, label %1244

1234:                                             ; preds = %1229
  %1235 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 9, i16 noundef zeroext 1) #12
  %1236 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 9, i16 noundef zeroext 2) #12
  %1237 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1238 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1239 = add i16 %1235, %1231
  %1240 = add i16 %1239, %1236
  %1241 = add i16 %1240, %1237
  %1242 = add i16 %1241, %1238
  %1243 = load i32, ptr %886, align 4
  br label %1244

1244:                                             ; preds = %1234, %1229
  %1245 = phi i32 [ %1243, %1234 ], [ %1230, %1229 ]
  %1246 = phi i16 [ %1242, %1234 ], [ %1231, %1229 ]
  %1247 = phi i32 [ 352800000, %1234 ], [ %1232, %1229 ]
  %1248 = icmp eq i32 %1245, 4400000
  br i1 %1248, label %1249, label %1259

1249:                                             ; preds = %1244
  %1250 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 6, i16 noundef zeroext 1) #12
  %1251 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 6, i16 noundef zeroext 2) #12
  %1252 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1253 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1254 = add i16 %1250, %1246
  %1255 = add i16 %1254, %1251
  %1256 = add i16 %1255, %1252
  %1257 = add i16 %1256, %1253
  %1258 = load i32, ptr %886, align 4
  br label %1259

1259:                                             ; preds = %1249, %1244
  %1260 = phi i32 [ %1258, %1249 ], [ %1245, %1244 ]
  %1261 = phi i16 [ %1257, %1249 ], [ %1246, %1244 ]
  %1262 = phi i32 [ 352000000, %1249 ], [ %1247, %1244 ]
  %1263 = icmp eq i32 %1260, 4063000
  br i1 %1263, label %1264, label %1273

1264:                                             ; preds = %1259
  %1265 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 5, i16 noundef zeroext 1) #12
  %1266 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 12, i32 noundef 5, i16 noundef zeroext 2) #12
  %1267 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 1) #12
  %1268 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 13, i32 noundef 8, i16 noundef zeroext 2) #12
  %1269 = add i16 %1265, %1261
  %1270 = add i16 %1269, %1266
  %1271 = add i16 %1270, %1267
  %1272 = add i16 %1271, %1268
  br label %1273

1273:                                             ; preds = %1264, %1259, %880
  %1274 = phi i16 [ %1272, %1264 ], [ %1261, %1259 ], [ %876, %880 ]
  %1275 = phi i32 [ 365670000, %1264 ], [ %1262, %1259 ], [ %877, %880 ]
  %1276 = add i32 %751, -16000001
  %1277 = icmp ult i32 %1276, 16000000
  %1278 = select i1 %1277, i32 1, i32 2
  %1279 = load i32, ptr %750, align 4
  %1280 = mul i32 %1279, %1278
  %1281 = lshr i32 %1280, 1
  %1282 = udiv i32 %1275, %1281
  %1283 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 14, i32 noundef %1282, i16 noundef zeroext 1) #12
  %1284 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 14, i32 noundef %1282, i16 noundef zeroext 2) #12
  %1285 = udiv i32 %1275, 1000
  %1286 = load i32, ptr %750, align 4
  %1287 = udiv i32 %1286, 1000
  %1288 = mul nuw nsw i32 %1287, %1278
  %1289 = lshr i32 %1288, 1
  %1290 = mul i32 %1289, %1282
  %1291 = sub i32 %1285, %1290
  %1292 = shl i32 %1291, 16
  %1293 = mul i32 %1286, %1278
  %1294 = udiv i32 %1293, 2000
  %1295 = udiv i32 %1292, %1294
  %1296 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 15, i32 noundef %1295, i16 noundef zeroext 1) #12
  %1297 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 15, i32 noundef %1295, i16 noundef zeroext 2) #12
  %1298 = add i16 %1274, %748
  %1299 = add i16 %1298, %1283
  %1300 = add i16 %1299, %1284
  %1301 = add i16 %1300, %1296
  %1302 = add i16 %1301, %1297
  %1303 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 4
  %1304 = load i16, ptr %1303, align 4
  %1305 = icmp eq i16 %1304, 200
  br i1 %1305, label %1306, label %1316

1306:                                             ; preds = %1273
  %1307 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 16, i32 noundef 6, i16 noundef zeroext 1) #12
  %1308 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 16, i32 noundef 6, i16 noundef zeroext 2) #12
  %1309 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 17, i32 noundef 2, i16 noundef zeroext 1) #12
  %1310 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 17, i32 noundef 2, i16 noundef zeroext 2) #12
  %1311 = add i16 %1307, %1302
  %1312 = add i16 %1311, %1308
  %1313 = add i16 %1312, %1309
  %1314 = add i16 %1313, %1310
  %1315 = load i16, ptr %1303, align 4
  br label %1316

1316:                                             ; preds = %1306, %1273
  %1317 = phi i16 [ %1315, %1306 ], [ %1304, %1273 ]
  %1318 = phi i16 [ %1314, %1306 ], [ %1302, %1273 ]
  %1319 = icmp eq i16 %1317, 300
  br i1 %1319, label %1320, label %1329

1320:                                             ; preds = %1316
  %1321 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 16, i32 noundef 4, i16 noundef zeroext 1) #12
  %1322 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 16, i32 noundef 4, i16 noundef zeroext 2) #12
  %1323 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 17, i32 noundef 1, i16 noundef zeroext 1) #12
  %1324 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 17, i32 noundef 1, i16 noundef zeroext 2) #12
  %1325 = add i16 %1321, %1318
  %1326 = add i16 %1325, %1322
  %1327 = add i16 %1326, %1323
  %1328 = add i16 %1327, %1324
  br label %1329

1329:                                             ; preds = %1320, %1316
  %1330 = phi i16 [ %1328, %1320 ], [ %1318, %1316 ]
  %1331 = load i8, ptr %3, align 4
  %1332 = icmp eq i8 %1331, 0
  %1333 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 3
  %1334 = load i32, ptr %1333, align 4
  %1335 = add i32 %1334, -4000000
  br i1 %1332, label %1626, label %1336

1336:                                             ; preds = %1329
  %1337 = icmp ult i32 %1335, 2280001
  br i1 %1337, label %1338, label %1470

1338:                                             ; preds = %1336
  %1339 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 18, i32 noundef 1, i16 noundef zeroext 1) #12
  %1340 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 18, i32 noundef 1, i16 noundef zeroext 2) #12
  %1341 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 1) #12
  %1342 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 2) #12
  %1343 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 1) #12
  %1344 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 2) #12
  %1345 = add i16 %1339, %1330
  %1346 = add i16 %1345, %1340
  %1347 = add i16 %1346, %1341
  %1348 = add i16 %1347, %1342
  %1349 = add i16 %1348, %1343
  %1350 = add i16 %1349, %1344
  %1351 = load ptr, ptr %2, align 4
  %1352 = getelementptr inbounds %struct.mxl5005s_state, ptr %1351, i32 0, i32 18
  %1353 = load i16, ptr %1352, align 4
  %1354 = icmp eq i16 %1353, 0
  br i1 %1354, label %1410, label %1355

1355:                                             ; preds = %1403, %1338
  %1356 = phi i16 [ %1404, %1403 ], [ %1353, %1338 ]
  %1357 = phi i32 [ %1405, %1403 ], [ 0, %1338 ]
  %1358 = getelementptr %struct.mxl5005s_state, ptr %1351, i32 0, i32 19, i32 %1357
  %1359 = load i16, ptr %1358, align 2
  %1360 = icmp eq i16 %1359, 21
  br i1 %1360, label %1361, label %1403

1361:                                             ; preds = %1355
  %1362 = getelementptr %struct.mxl5005s_state, ptr %1351, i32 0, i32 19, i32 %1357, i32 1
  %1363 = load i16, ptr %1362, align 2
  %1364 = icmp eq i16 %1363, 0
  br i1 %1364, label %1403, label %1365

1365:                                             ; preds = %1396, %1361
  %1366 = phi i32 [ %1397, %1396 ], [ 0, %1361 ]
  %1367 = getelementptr %struct.mxl5005s_state, ptr %1351, i32 0, i32 19, i32 %1357, i32 4, i32 %1366
  store i16 0, ptr %1367, align 2
  %1368 = getelementptr %struct.mxl5005s_state, ptr %1351, i32 0, i32 19, i32 %1357, i32 3, i32 %1366
  %1369 = load i16, ptr %1368, align 2
  %1370 = load ptr, ptr %2, align 4
  %1371 = getelementptr inbounds %struct.mxl5005s_state, ptr %1370, i32 0, i32 24
  %1372 = load i16, ptr %1371, align 4
  %1373 = zext i16 %1372 to i32
  %1374 = icmp eq i16 %1372, 0
  br i1 %1374, label %1396, label %1375

1375:                                             ; preds = %1365
  %1376 = getelementptr %struct.mxl5005s_state, ptr %1351, i32 0, i32 19, i32 %1357, i32 2, i32 %1366
  %1377 = load i16, ptr %1376, align 2
  %1378 = and i16 %1377, 255
  br label %1379

1379:                                             ; preds = %1393, %1375
  %1380 = phi i32 [ 0, %1375 ], [ %1394, %1393 ]
  %1381 = getelementptr %struct.mxl5005s_state, ptr %1370, i32 0, i32 25, i32 %1380
  %1382 = load i16, ptr %1381, align 2
  %1383 = icmp eq i16 %1382, %1378
  br i1 %1383, label %1384, label %1393

1384:                                             ; preds = %1379
  %1385 = and i16 %1369, 255
  %1386 = zext i16 %1385 to i32
  %1387 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1386
  %1388 = load i8, ptr %1387, align 1
  %1389 = zext i8 %1388 to i16
  %1390 = getelementptr %struct.mxl5005s_state, ptr %1370, i32 0, i32 25, i32 %1380, i32 1
  %1391 = load i16, ptr %1390, align 2
  %1392 = and i16 %1391, %1389
  store i16 %1392, ptr %1390, align 2
  br label %1396

1393:                                             ; preds = %1379
  %1394 = add nuw nsw i32 %1380, 1
  %1395 = icmp eq i32 %1394, %1373
  br i1 %1395, label %1396, label %1379

1396:                                             ; preds = %1393, %1384, %1365
  %1397 = add nuw nsw i32 %1366, 1
  %1398 = load i16, ptr %1362, align 2
  %1399 = zext i16 %1398 to i32
  %1400 = icmp ult i32 %1397, %1399
  br i1 %1400, label %1365, label %1401

1401:                                             ; preds = %1396
  %1402 = load i16, ptr %1352, align 4
  br label %1403

1403:                                             ; preds = %1401, %1361, %1355
  %1404 = phi i16 [ %1402, %1401 ], [ %1356, %1361 ], [ %1356, %1355 ]
  %1405 = add nuw nsw i32 %1357, 1
  %1406 = zext i16 %1404 to i32
  %1407 = icmp ult i32 %1405, %1406
  br i1 %1407, label %1355, label %1408

1408:                                             ; preds = %1403
  %1409 = load ptr, ptr %2, align 4
  br label %1410

1410:                                             ; preds = %1408, %1338
  %1411 = phi ptr [ %1409, %1408 ], [ %1351, %1338 ]
  %1412 = getelementptr inbounds %struct.mxl5005s_state, ptr %1411, i32 0, i32 20
  %1413 = load i16, ptr %1412, align 2
  %1414 = icmp eq i16 %1413, 0
  br i1 %1414, label %1468, label %1415

1415:                                             ; preds = %1463, %1410
  %1416 = phi i16 [ %1464, %1463 ], [ %1413, %1410 ]
  %1417 = phi i32 [ %1465, %1463 ], [ 0, %1410 ]
  %1418 = getelementptr %struct.mxl5005s_state, ptr %1411, i32 0, i32 21, i32 %1417
  %1419 = load i16, ptr %1418, align 2
  %1420 = icmp eq i16 %1419, 21
  br i1 %1420, label %1421, label %1463

1421:                                             ; preds = %1415
  %1422 = getelementptr %struct.mxl5005s_state, ptr %1411, i32 0, i32 21, i32 %1417, i32 1
  %1423 = load i16, ptr %1422, align 2
  %1424 = icmp eq i16 %1423, 0
  br i1 %1424, label %1463, label %1425

1425:                                             ; preds = %1456, %1421
  %1426 = phi i32 [ %1457, %1456 ], [ 0, %1421 ]
  %1427 = getelementptr %struct.mxl5005s_state, ptr %1411, i32 0, i32 21, i32 %1417, i32 4, i32 %1426
  store i16 0, ptr %1427, align 2
  %1428 = getelementptr %struct.mxl5005s_state, ptr %1411, i32 0, i32 21, i32 %1417, i32 3, i32 %1426
  %1429 = load i16, ptr %1428, align 2
  %1430 = load ptr, ptr %2, align 4
  %1431 = getelementptr inbounds %struct.mxl5005s_state, ptr %1430, i32 0, i32 24
  %1432 = load i16, ptr %1431, align 4
  %1433 = zext i16 %1432 to i32
  %1434 = icmp eq i16 %1432, 0
  br i1 %1434, label %1456, label %1435

1435:                                             ; preds = %1425
  %1436 = getelementptr %struct.mxl5005s_state, ptr %1411, i32 0, i32 21, i32 %1417, i32 2, i32 %1426
  %1437 = load i16, ptr %1436, align 2
  %1438 = and i16 %1437, 255
  br label %1439

1439:                                             ; preds = %1453, %1435
  %1440 = phi i32 [ 0, %1435 ], [ %1454, %1453 ]
  %1441 = getelementptr %struct.mxl5005s_state, ptr %1430, i32 0, i32 25, i32 %1440
  %1442 = load i16, ptr %1441, align 2
  %1443 = icmp eq i16 %1442, %1438
  br i1 %1443, label %1444, label %1453

1444:                                             ; preds = %1439
  %1445 = and i16 %1429, 255
  %1446 = zext i16 %1445 to i32
  %1447 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1446
  %1448 = load i8, ptr %1447, align 1
  %1449 = zext i8 %1448 to i16
  %1450 = getelementptr %struct.mxl5005s_state, ptr %1430, i32 0, i32 25, i32 %1440, i32 1
  %1451 = load i16, ptr %1450, align 2
  %1452 = and i16 %1451, %1449
  store i16 %1452, ptr %1450, align 2
  br label %1456

1453:                                             ; preds = %1439
  %1454 = add nuw nsw i32 %1440, 1
  %1455 = icmp eq i32 %1454, %1433
  br i1 %1455, label %1456, label %1439

1456:                                             ; preds = %1453, %1444, %1425
  %1457 = add nuw nsw i32 %1426, 1
  %1458 = load i16, ptr %1422, align 2
  %1459 = zext i16 %1458 to i32
  %1460 = icmp ult i32 %1457, %1459
  br i1 %1460, label %1425, label %1461

1461:                                             ; preds = %1456
  %1462 = load i16, ptr %1412, align 2
  br label %1463

1463:                                             ; preds = %1461, %1421, %1415
  %1464 = phi i16 [ %1462, %1461 ], [ %1416, %1421 ], [ %1416, %1415 ]
  %1465 = add nuw nsw i32 %1417, 1
  %1466 = zext i16 %1464 to i32
  %1467 = icmp ult i32 %1465, %1466
  br i1 %1467, label %1415, label %1468

1468:                                             ; preds = %1463, %1410
  %1469 = load i32, ptr %1333, align 4
  br label %1470

1470:                                             ; preds = %1468, %1336
  %1471 = phi i32 [ %1469, %1468 ], [ %1334, %1336 ]
  %1472 = phi i16 [ %1350, %1468 ], [ %1330, %1336 ]
  switch i32 %1471, label %1491 [
    i32 36125000, label %1473
    i32 36150000, label %1473
  ]

1473:                                             ; preds = %1470, %1470
  %1474 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 18, i32 noundef 1, i16 noundef zeroext 1) #12
  %1475 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 18, i32 noundef 1, i16 noundef zeroext 2) #12
  %1476 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 1) #12
  %1477 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 2) #12
  %1478 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 1) #12
  %1479 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 2) #12
  %1480 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 21, i32 noundef 1, i16 noundef zeroext 1) #12
  %1481 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 21, i32 noundef 1, i16 noundef zeroext 2) #12
  %1482 = add i16 %1474, %1472
  %1483 = add i16 %1482, %1475
  %1484 = add i16 %1483, %1476
  %1485 = add i16 %1484, %1477
  %1486 = add i16 %1485, %1478
  %1487 = add i16 %1486, %1479
  %1488 = add i16 %1487, %1480
  %1489 = add i16 %1488, %1481
  %1490 = load i32, ptr %1333, align 4
  br label %1491

1491:                                             ; preds = %1473, %1470
  %1492 = phi i32 [ %1490, %1473 ], [ %1471, %1470 ]
  %1493 = phi i16 [ %1489, %1473 ], [ %1472, %1470 ]
  %1494 = icmp ugt i32 %1492, 36150000
  br i1 %1494, label %1495, label %2242

1495:                                             ; preds = %1491
  %1496 = load ptr, ptr %2, align 4
  %1497 = getelementptr inbounds %struct.mxl5005s_state, ptr %1496, i32 0, i32 18
  %1498 = load i16, ptr %1497, align 4
  %1499 = icmp eq i16 %1498, 0
  br i1 %1499, label %1555, label %1500

1500:                                             ; preds = %1548, %1495
  %1501 = phi i16 [ %1549, %1548 ], [ %1498, %1495 ]
  %1502 = phi i32 [ %1550, %1548 ], [ 0, %1495 ]
  %1503 = getelementptr %struct.mxl5005s_state, ptr %1496, i32 0, i32 19, i32 %1502
  %1504 = load i16, ptr %1503, align 2
  %1505 = icmp eq i16 %1504, 18
  br i1 %1505, label %1506, label %1548

1506:                                             ; preds = %1500
  %1507 = getelementptr %struct.mxl5005s_state, ptr %1496, i32 0, i32 19, i32 %1502, i32 1
  %1508 = load i16, ptr %1507, align 2
  %1509 = icmp eq i16 %1508, 0
  br i1 %1509, label %1548, label %1510

1510:                                             ; preds = %1541, %1506
  %1511 = phi i32 [ %1542, %1541 ], [ 0, %1506 ]
  %1512 = getelementptr %struct.mxl5005s_state, ptr %1496, i32 0, i32 19, i32 %1502, i32 4, i32 %1511
  store i16 0, ptr %1512, align 2
  %1513 = getelementptr %struct.mxl5005s_state, ptr %1496, i32 0, i32 19, i32 %1502, i32 3, i32 %1511
  %1514 = load i16, ptr %1513, align 2
  %1515 = load ptr, ptr %2, align 4
  %1516 = getelementptr inbounds %struct.mxl5005s_state, ptr %1515, i32 0, i32 24
  %1517 = load i16, ptr %1516, align 4
  %1518 = zext i16 %1517 to i32
  %1519 = icmp eq i16 %1517, 0
  br i1 %1519, label %1541, label %1520

1520:                                             ; preds = %1510
  %1521 = getelementptr %struct.mxl5005s_state, ptr %1496, i32 0, i32 19, i32 %1502, i32 2, i32 %1511
  %1522 = load i16, ptr %1521, align 2
  %1523 = and i16 %1522, 255
  br label %1524

1524:                                             ; preds = %1538, %1520
  %1525 = phi i32 [ 0, %1520 ], [ %1539, %1538 ]
  %1526 = getelementptr %struct.mxl5005s_state, ptr %1515, i32 0, i32 25, i32 %1525
  %1527 = load i16, ptr %1526, align 2
  %1528 = icmp eq i16 %1527, %1523
  br i1 %1528, label %1529, label %1538

1529:                                             ; preds = %1524
  %1530 = and i16 %1514, 255
  %1531 = zext i16 %1530 to i32
  %1532 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1531
  %1533 = load i8, ptr %1532, align 1
  %1534 = zext i8 %1533 to i16
  %1535 = getelementptr %struct.mxl5005s_state, ptr %1515, i32 0, i32 25, i32 %1525, i32 1
  %1536 = load i16, ptr %1535, align 2
  %1537 = and i16 %1536, %1534
  store i16 %1537, ptr %1535, align 2
  br label %1541

1538:                                             ; preds = %1524
  %1539 = add nuw nsw i32 %1525, 1
  %1540 = icmp eq i32 %1539, %1518
  br i1 %1540, label %1541, label %1524

1541:                                             ; preds = %1538, %1529, %1510
  %1542 = add nuw nsw i32 %1511, 1
  %1543 = load i16, ptr %1507, align 2
  %1544 = zext i16 %1543 to i32
  %1545 = icmp ult i32 %1542, %1544
  br i1 %1545, label %1510, label %1546

1546:                                             ; preds = %1541
  %1547 = load i16, ptr %1497, align 4
  br label %1548

1548:                                             ; preds = %1546, %1506, %1500
  %1549 = phi i16 [ %1547, %1546 ], [ %1501, %1506 ], [ %1501, %1500 ]
  %1550 = add nuw nsw i32 %1502, 1
  %1551 = zext i16 %1549 to i32
  %1552 = icmp ult i32 %1550, %1551
  br i1 %1552, label %1500, label %1553

1553:                                             ; preds = %1548
  %1554 = load ptr, ptr %2, align 4
  br label %1555

1555:                                             ; preds = %1553, %1495
  %1556 = phi ptr [ %1554, %1553 ], [ %1496, %1495 ]
  %1557 = getelementptr inbounds %struct.mxl5005s_state, ptr %1556, i32 0, i32 20
  %1558 = load i16, ptr %1557, align 2
  %1559 = icmp eq i16 %1558, 0
  br i1 %1559, label %1613, label %1560

1560:                                             ; preds = %1608, %1555
  %1561 = phi i16 [ %1609, %1608 ], [ %1558, %1555 ]
  %1562 = phi i32 [ %1610, %1608 ], [ 0, %1555 ]
  %1563 = getelementptr %struct.mxl5005s_state, ptr %1556, i32 0, i32 21, i32 %1562
  %1564 = load i16, ptr %1563, align 2
  %1565 = icmp eq i16 %1564, 18
  br i1 %1565, label %1566, label %1608

1566:                                             ; preds = %1560
  %1567 = getelementptr %struct.mxl5005s_state, ptr %1556, i32 0, i32 21, i32 %1562, i32 1
  %1568 = load i16, ptr %1567, align 2
  %1569 = icmp eq i16 %1568, 0
  br i1 %1569, label %1608, label %1570

1570:                                             ; preds = %1601, %1566
  %1571 = phi i32 [ %1602, %1601 ], [ 0, %1566 ]
  %1572 = getelementptr %struct.mxl5005s_state, ptr %1556, i32 0, i32 21, i32 %1562, i32 4, i32 %1571
  store i16 0, ptr %1572, align 2
  %1573 = getelementptr %struct.mxl5005s_state, ptr %1556, i32 0, i32 21, i32 %1562, i32 3, i32 %1571
  %1574 = load i16, ptr %1573, align 2
  %1575 = load ptr, ptr %2, align 4
  %1576 = getelementptr inbounds %struct.mxl5005s_state, ptr %1575, i32 0, i32 24
  %1577 = load i16, ptr %1576, align 4
  %1578 = zext i16 %1577 to i32
  %1579 = icmp eq i16 %1577, 0
  br i1 %1579, label %1601, label %1580

1580:                                             ; preds = %1570
  %1581 = getelementptr %struct.mxl5005s_state, ptr %1556, i32 0, i32 21, i32 %1562, i32 2, i32 %1571
  %1582 = load i16, ptr %1581, align 2
  %1583 = and i16 %1582, 255
  br label %1584

1584:                                             ; preds = %1598, %1580
  %1585 = phi i32 [ 0, %1580 ], [ %1599, %1598 ]
  %1586 = getelementptr %struct.mxl5005s_state, ptr %1575, i32 0, i32 25, i32 %1585
  %1587 = load i16, ptr %1586, align 2
  %1588 = icmp eq i16 %1587, %1583
  br i1 %1588, label %1589, label %1598

1589:                                             ; preds = %1584
  %1590 = and i16 %1574, 255
  %1591 = zext i16 %1590 to i32
  %1592 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1591
  %1593 = load i8, ptr %1592, align 1
  %1594 = zext i8 %1593 to i16
  %1595 = getelementptr %struct.mxl5005s_state, ptr %1575, i32 0, i32 25, i32 %1585, i32 1
  %1596 = load i16, ptr %1595, align 2
  %1597 = and i16 %1596, %1594
  store i16 %1597, ptr %1595, align 2
  br label %1601

1598:                                             ; preds = %1584
  %1599 = add nuw nsw i32 %1585, 1
  %1600 = icmp eq i32 %1599, %1578
  br i1 %1600, label %1601, label %1584

1601:                                             ; preds = %1598, %1589, %1570
  %1602 = add nuw nsw i32 %1571, 1
  %1603 = load i16, ptr %1567, align 2
  %1604 = zext i16 %1603 to i32
  %1605 = icmp ult i32 %1602, %1604
  br i1 %1605, label %1570, label %1606

1606:                                             ; preds = %1601
  %1607 = load i16, ptr %1557, align 2
  br label %1608

1608:                                             ; preds = %1606, %1566, %1560
  %1609 = phi i16 [ %1607, %1606 ], [ %1561, %1566 ], [ %1561, %1560 ]
  %1610 = add nuw nsw i32 %1562, 1
  %1611 = zext i16 %1609 to i32
  %1612 = icmp ult i32 %1610, %1611
  br i1 %1612, label %1560, label %1613

1613:                                             ; preds = %1608, %1555
  %1614 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 1) #12
  %1615 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 2) #12
  %1616 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 1) #12
  %1617 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 2) #12
  %1618 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 21, i32 noundef 1, i16 noundef zeroext 1) #12
  %1619 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 21, i32 noundef 1, i16 noundef zeroext 2) #12
  %1620 = add i16 %1614, %1493
  %1621 = add i16 %1620, %1615
  %1622 = add i16 %1621, %1616
  %1623 = add i16 %1622, %1617
  %1624 = add i16 %1623, %1618
  %1625 = add i16 %1624, %1619
  br label %2242

1626:                                             ; preds = %1329
  %1627 = icmp ult i32 %1335, 1000001
  br i1 %1627, label %1628, label %1760

1628:                                             ; preds = %1626
  %1629 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 18, i32 noundef 1, i16 noundef zeroext 1) #12
  %1630 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 18, i32 noundef 1, i16 noundef zeroext 2) #12
  %1631 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 1) #12
  %1632 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 19, i32 noundef 1, i16 noundef zeroext 2) #12
  %1633 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 1) #12
  %1634 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 20, i32 noundef 1, i16 noundef zeroext 2) #12
  %1635 = add i16 %1629, %1330
  %1636 = add i16 %1635, %1630
  %1637 = add i16 %1636, %1631
  %1638 = add i16 %1637, %1632
  %1639 = add i16 %1638, %1633
  %1640 = add i16 %1639, %1634
  %1641 = load ptr, ptr %2, align 4
  %1642 = getelementptr inbounds %struct.mxl5005s_state, ptr %1641, i32 0, i32 18
  %1643 = load i16, ptr %1642, align 4
  %1644 = icmp eq i16 %1643, 0
  br i1 %1644, label %1700, label %1645

1645:                                             ; preds = %1693, %1628
  %1646 = phi i16 [ %1694, %1693 ], [ %1643, %1628 ]
  %1647 = phi i32 [ %1695, %1693 ], [ 0, %1628 ]
  %1648 = getelementptr %struct.mxl5005s_state, ptr %1641, i32 0, i32 19, i32 %1647
  %1649 = load i16, ptr %1648, align 2
  %1650 = icmp eq i16 %1649, 21
  br i1 %1650, label %1651, label %1693

1651:                                             ; preds = %1645
  %1652 = getelementptr %struct.mxl5005s_state, ptr %1641, i32 0, i32 19, i32 %1647, i32 1
  %1653 = load i16, ptr %1652, align 2
  %1654 = icmp eq i16 %1653, 0
  br i1 %1654, label %1693, label %1655

1655:                                             ; preds = %1686, %1651
  %1656 = phi i32 [ %1687, %1686 ], [ 0, %1651 ]
  %1657 = getelementptr %struct.mxl5005s_state, ptr %1641, i32 0, i32 19, i32 %1647, i32 4, i32 %1656
  store i16 0, ptr %1657, align 2
  %1658 = getelementptr %struct.mxl5005s_state, ptr %1641, i32 0, i32 19, i32 %1647, i32 3, i32 %1656
  %1659 = load i16, ptr %1658, align 2
  %1660 = load ptr, ptr %2, align 4
  %1661 = getelementptr inbounds %struct.mxl5005s_state, ptr %1660, i32 0, i32 24
  %1662 = load i16, ptr %1661, align 4
  %1663 = zext i16 %1662 to i32
  %1664 = icmp eq i16 %1662, 0
  br i1 %1664, label %1686, label %1665

1665:                                             ; preds = %1655
  %1666 = getelementptr %struct.mxl5005s_state, ptr %1641, i32 0, i32 19, i32 %1647, i32 2, i32 %1656
  %1667 = load i16, ptr %1666, align 2
  %1668 = and i16 %1667, 255
  br label %1669

1669:                                             ; preds = %1683, %1665
  %1670 = phi i32 [ 0, %1665 ], [ %1684, %1683 ]
  %1671 = getelementptr %struct.mxl5005s_state, ptr %1660, i32 0, i32 25, i32 %1670
  %1672 = load i16, ptr %1671, align 2
  %1673 = icmp eq i16 %1672, %1668
  br i1 %1673, label %1674, label %1683

1674:                                             ; preds = %1669
  %1675 = and i16 %1659, 255
  %1676 = zext i16 %1675 to i32
  %1677 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1676
  %1678 = load i8, ptr %1677, align 1
  %1679 = zext i8 %1678 to i16
  %1680 = getelementptr %struct.mxl5005s_state, ptr %1660, i32 0, i32 25, i32 %1670, i32 1
  %1681 = load i16, ptr %1680, align 2
  %1682 = and i16 %1681, %1679
  store i16 %1682, ptr %1680, align 2
  br label %1686

1683:                                             ; preds = %1669
  %1684 = add nuw nsw i32 %1670, 1
  %1685 = icmp eq i32 %1684, %1663
  br i1 %1685, label %1686, label %1669

1686:                                             ; preds = %1683, %1674, %1655
  %1687 = add nuw nsw i32 %1656, 1
  %1688 = load i16, ptr %1652, align 2
  %1689 = zext i16 %1688 to i32
  %1690 = icmp ult i32 %1687, %1689
  br i1 %1690, label %1655, label %1691

1691:                                             ; preds = %1686
  %1692 = load i16, ptr %1642, align 4
  br label %1693

1693:                                             ; preds = %1691, %1651, %1645
  %1694 = phi i16 [ %1692, %1691 ], [ %1646, %1651 ], [ %1646, %1645 ]
  %1695 = add nuw nsw i32 %1647, 1
  %1696 = zext i16 %1694 to i32
  %1697 = icmp ult i32 %1695, %1696
  br i1 %1697, label %1645, label %1698

1698:                                             ; preds = %1693
  %1699 = load ptr, ptr %2, align 4
  br label %1700

1700:                                             ; preds = %1698, %1628
  %1701 = phi ptr [ %1699, %1698 ], [ %1641, %1628 ]
  %1702 = getelementptr inbounds %struct.mxl5005s_state, ptr %1701, i32 0, i32 20
  %1703 = load i16, ptr %1702, align 2
  %1704 = icmp eq i16 %1703, 0
  br i1 %1704, label %1758, label %1705

1705:                                             ; preds = %1753, %1700
  %1706 = phi i16 [ %1754, %1753 ], [ %1703, %1700 ]
  %1707 = phi i32 [ %1755, %1753 ], [ 0, %1700 ]
  %1708 = getelementptr %struct.mxl5005s_state, ptr %1701, i32 0, i32 21, i32 %1707
  %1709 = load i16, ptr %1708, align 2
  %1710 = icmp eq i16 %1709, 21
  br i1 %1710, label %1711, label %1753

1711:                                             ; preds = %1705
  %1712 = getelementptr %struct.mxl5005s_state, ptr %1701, i32 0, i32 21, i32 %1707, i32 1
  %1713 = load i16, ptr %1712, align 2
  %1714 = icmp eq i16 %1713, 0
  br i1 %1714, label %1753, label %1715

1715:                                             ; preds = %1746, %1711
  %1716 = phi i32 [ %1747, %1746 ], [ 0, %1711 ]
  %1717 = getelementptr %struct.mxl5005s_state, ptr %1701, i32 0, i32 21, i32 %1707, i32 4, i32 %1716
  store i16 0, ptr %1717, align 2
  %1718 = getelementptr %struct.mxl5005s_state, ptr %1701, i32 0, i32 21, i32 %1707, i32 3, i32 %1716
  %1719 = load i16, ptr %1718, align 2
  %1720 = load ptr, ptr %2, align 4
  %1721 = getelementptr inbounds %struct.mxl5005s_state, ptr %1720, i32 0, i32 24
  %1722 = load i16, ptr %1721, align 4
  %1723 = zext i16 %1722 to i32
  %1724 = icmp eq i16 %1722, 0
  br i1 %1724, label %1746, label %1725

1725:                                             ; preds = %1715
  %1726 = getelementptr %struct.mxl5005s_state, ptr %1701, i32 0, i32 21, i32 %1707, i32 2, i32 %1716
  %1727 = load i16, ptr %1726, align 2
  %1728 = and i16 %1727, 255
  br label %1729

1729:                                             ; preds = %1743, %1725
  %1730 = phi i32 [ 0, %1725 ], [ %1744, %1743 ]
  %1731 = getelementptr %struct.mxl5005s_state, ptr %1720, i32 0, i32 25, i32 %1730
  %1732 = load i16, ptr %1731, align 2
  %1733 = icmp eq i16 %1732, %1728
  br i1 %1733, label %1734, label %1743

1734:                                             ; preds = %1729
  %1735 = and i16 %1719, 255
  %1736 = zext i16 %1735 to i32
  %1737 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1736
  %1738 = load i8, ptr %1737, align 1
  %1739 = zext i8 %1738 to i16
  %1740 = getelementptr %struct.mxl5005s_state, ptr %1720, i32 0, i32 25, i32 %1730, i32 1
  %1741 = load i16, ptr %1740, align 2
  %1742 = and i16 %1741, %1739
  store i16 %1742, ptr %1740, align 2
  br label %1746

1743:                                             ; preds = %1729
  %1744 = add nuw nsw i32 %1730, 1
  %1745 = icmp eq i32 %1744, %1723
  br i1 %1745, label %1746, label %1729

1746:                                             ; preds = %1743, %1734, %1715
  %1747 = add nuw nsw i32 %1716, 1
  %1748 = load i16, ptr %1712, align 2
  %1749 = zext i16 %1748 to i32
  %1750 = icmp ult i32 %1747, %1749
  br i1 %1750, label %1715, label %1751

1751:                                             ; preds = %1746
  %1752 = load i16, ptr %1702, align 2
  br label %1753

1753:                                             ; preds = %1751, %1711, %1705
  %1754 = phi i16 [ %1752, %1751 ], [ %1706, %1711 ], [ %1706, %1705 ]
  %1755 = add nuw nsw i32 %1707, 1
  %1756 = zext i16 %1754 to i32
  %1757 = icmp ult i32 %1755, %1756
  br i1 %1757, label %1705, label %1758

1758:                                             ; preds = %1753, %1700
  %1759 = load i32, ptr %1333, align 4
  br label %1760

1760:                                             ; preds = %1758, %1626
  %1761 = phi i32 [ %1759, %1758 ], [ %1334, %1626 ]
  %1762 = phi i16 [ %1640, %1758 ], [ %1330, %1626 ]
  %1763 = icmp ugt i32 %1761, 5000000
  br i1 %1763, label %1764, label %2242

1764:                                             ; preds = %1760
  %1765 = load ptr, ptr %2, align 4
  %1766 = getelementptr inbounds %struct.mxl5005s_state, ptr %1765, i32 0, i32 18
  %1767 = load i16, ptr %1766, align 4
  %1768 = icmp eq i16 %1767, 0
  br i1 %1768, label %1824, label %1769

1769:                                             ; preds = %1817, %1764
  %1770 = phi i16 [ %1818, %1817 ], [ %1767, %1764 ]
  %1771 = phi i32 [ %1819, %1817 ], [ 0, %1764 ]
  %1772 = getelementptr %struct.mxl5005s_state, ptr %1765, i32 0, i32 19, i32 %1771
  %1773 = load i16, ptr %1772, align 2
  %1774 = icmp eq i16 %1773, 18
  br i1 %1774, label %1775, label %1817

1775:                                             ; preds = %1769
  %1776 = getelementptr %struct.mxl5005s_state, ptr %1765, i32 0, i32 19, i32 %1771, i32 1
  %1777 = load i16, ptr %1776, align 2
  %1778 = icmp eq i16 %1777, 0
  br i1 %1778, label %1817, label %1779

1779:                                             ; preds = %1810, %1775
  %1780 = phi i32 [ %1811, %1810 ], [ 0, %1775 ]
  %1781 = getelementptr %struct.mxl5005s_state, ptr %1765, i32 0, i32 19, i32 %1771, i32 4, i32 %1780
  store i16 0, ptr %1781, align 2
  %1782 = getelementptr %struct.mxl5005s_state, ptr %1765, i32 0, i32 19, i32 %1771, i32 3, i32 %1780
  %1783 = load i16, ptr %1782, align 2
  %1784 = load ptr, ptr %2, align 4
  %1785 = getelementptr inbounds %struct.mxl5005s_state, ptr %1784, i32 0, i32 24
  %1786 = load i16, ptr %1785, align 4
  %1787 = zext i16 %1786 to i32
  %1788 = icmp eq i16 %1786, 0
  br i1 %1788, label %1810, label %1789

1789:                                             ; preds = %1779
  %1790 = getelementptr %struct.mxl5005s_state, ptr %1765, i32 0, i32 19, i32 %1771, i32 2, i32 %1780
  %1791 = load i16, ptr %1790, align 2
  %1792 = and i16 %1791, 255
  br label %1793

1793:                                             ; preds = %1807, %1789
  %1794 = phi i32 [ 0, %1789 ], [ %1808, %1807 ]
  %1795 = getelementptr %struct.mxl5005s_state, ptr %1784, i32 0, i32 25, i32 %1794
  %1796 = load i16, ptr %1795, align 2
  %1797 = icmp eq i16 %1796, %1792
  br i1 %1797, label %1798, label %1807

1798:                                             ; preds = %1793
  %1799 = and i16 %1783, 255
  %1800 = zext i16 %1799 to i32
  %1801 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1800
  %1802 = load i8, ptr %1801, align 1
  %1803 = zext i8 %1802 to i16
  %1804 = getelementptr %struct.mxl5005s_state, ptr %1784, i32 0, i32 25, i32 %1794, i32 1
  %1805 = load i16, ptr %1804, align 2
  %1806 = and i16 %1805, %1803
  store i16 %1806, ptr %1804, align 2
  br label %1810

1807:                                             ; preds = %1793
  %1808 = add nuw nsw i32 %1794, 1
  %1809 = icmp eq i32 %1808, %1787
  br i1 %1809, label %1810, label %1793

1810:                                             ; preds = %1807, %1798, %1779
  %1811 = add nuw nsw i32 %1780, 1
  %1812 = load i16, ptr %1776, align 2
  %1813 = zext i16 %1812 to i32
  %1814 = icmp ult i32 %1811, %1813
  br i1 %1814, label %1779, label %1815

1815:                                             ; preds = %1810
  %1816 = load i16, ptr %1766, align 4
  br label %1817

1817:                                             ; preds = %1815, %1775, %1769
  %1818 = phi i16 [ %1816, %1815 ], [ %1770, %1775 ], [ %1770, %1769 ]
  %1819 = add nuw nsw i32 %1771, 1
  %1820 = zext i16 %1818 to i32
  %1821 = icmp ult i32 %1819, %1820
  br i1 %1821, label %1769, label %1822

1822:                                             ; preds = %1817
  %1823 = load ptr, ptr %2, align 4
  br label %1824

1824:                                             ; preds = %1822, %1764
  %1825 = phi ptr [ %1823, %1822 ], [ %1765, %1764 ]
  %1826 = getelementptr inbounds %struct.mxl5005s_state, ptr %1825, i32 0, i32 20
  %1827 = load i16, ptr %1826, align 2
  %1828 = icmp eq i16 %1827, 0
  br i1 %1828, label %1884, label %1829

1829:                                             ; preds = %1877, %1824
  %1830 = phi i16 [ %1878, %1877 ], [ %1827, %1824 ]
  %1831 = phi i32 [ %1879, %1877 ], [ 0, %1824 ]
  %1832 = getelementptr %struct.mxl5005s_state, ptr %1825, i32 0, i32 21, i32 %1831
  %1833 = load i16, ptr %1832, align 2
  %1834 = icmp eq i16 %1833, 18
  br i1 %1834, label %1835, label %1877

1835:                                             ; preds = %1829
  %1836 = getelementptr %struct.mxl5005s_state, ptr %1825, i32 0, i32 21, i32 %1831, i32 1
  %1837 = load i16, ptr %1836, align 2
  %1838 = icmp eq i16 %1837, 0
  br i1 %1838, label %1877, label %1839

1839:                                             ; preds = %1870, %1835
  %1840 = phi i32 [ %1871, %1870 ], [ 0, %1835 ]
  %1841 = getelementptr %struct.mxl5005s_state, ptr %1825, i32 0, i32 21, i32 %1831, i32 4, i32 %1840
  store i16 0, ptr %1841, align 2
  %1842 = getelementptr %struct.mxl5005s_state, ptr %1825, i32 0, i32 21, i32 %1831, i32 3, i32 %1840
  %1843 = load i16, ptr %1842, align 2
  %1844 = load ptr, ptr %2, align 4
  %1845 = getelementptr inbounds %struct.mxl5005s_state, ptr %1844, i32 0, i32 24
  %1846 = load i16, ptr %1845, align 4
  %1847 = zext i16 %1846 to i32
  %1848 = icmp eq i16 %1846, 0
  br i1 %1848, label %1870, label %1849

1849:                                             ; preds = %1839
  %1850 = getelementptr %struct.mxl5005s_state, ptr %1825, i32 0, i32 21, i32 %1831, i32 2, i32 %1840
  %1851 = load i16, ptr %1850, align 2
  %1852 = and i16 %1851, 255
  br label %1853

1853:                                             ; preds = %1867, %1849
  %1854 = phi i32 [ 0, %1849 ], [ %1868, %1867 ]
  %1855 = getelementptr %struct.mxl5005s_state, ptr %1844, i32 0, i32 25, i32 %1854
  %1856 = load i16, ptr %1855, align 2
  %1857 = icmp eq i16 %1856, %1852
  br i1 %1857, label %1858, label %1867

1858:                                             ; preds = %1853
  %1859 = and i16 %1843, 255
  %1860 = zext i16 %1859 to i32
  %1861 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1860
  %1862 = load i8, ptr %1861, align 1
  %1863 = zext i8 %1862 to i16
  %1864 = getelementptr %struct.mxl5005s_state, ptr %1844, i32 0, i32 25, i32 %1854, i32 1
  %1865 = load i16, ptr %1864, align 2
  %1866 = and i16 %1865, %1863
  store i16 %1866, ptr %1864, align 2
  br label %1870

1867:                                             ; preds = %1853
  %1868 = add nuw nsw i32 %1854, 1
  %1869 = icmp eq i32 %1868, %1847
  br i1 %1869, label %1870, label %1853

1870:                                             ; preds = %1867, %1858, %1839
  %1871 = add nuw nsw i32 %1840, 1
  %1872 = load i16, ptr %1836, align 2
  %1873 = zext i16 %1872 to i32
  %1874 = icmp ult i32 %1871, %1873
  br i1 %1874, label %1839, label %1875

1875:                                             ; preds = %1870
  %1876 = load i16, ptr %1826, align 2
  br label %1877

1877:                                             ; preds = %1875, %1835, %1829
  %1878 = phi i16 [ %1876, %1875 ], [ %1830, %1835 ], [ %1830, %1829 ]
  %1879 = add nuw nsw i32 %1831, 1
  %1880 = zext i16 %1878 to i32
  %1881 = icmp ult i32 %1879, %1880
  br i1 %1881, label %1829, label %1882

1882:                                             ; preds = %1877
  %1883 = load ptr, ptr %2, align 4
  br label %1884

1884:                                             ; preds = %1882, %1824
  %1885 = phi ptr [ %1883, %1882 ], [ %1825, %1824 ]
  %1886 = getelementptr inbounds %struct.mxl5005s_state, ptr %1885, i32 0, i32 18
  %1887 = load i16, ptr %1886, align 4
  %1888 = icmp eq i16 %1887, 0
  br i1 %1888, label %1944, label %1889

1889:                                             ; preds = %1937, %1884
  %1890 = phi i16 [ %1938, %1937 ], [ %1887, %1884 ]
  %1891 = phi i32 [ %1939, %1937 ], [ 0, %1884 ]
  %1892 = getelementptr %struct.mxl5005s_state, ptr %1885, i32 0, i32 19, i32 %1891
  %1893 = load i16, ptr %1892, align 2
  %1894 = icmp eq i16 %1893, 19
  br i1 %1894, label %1895, label %1937

1895:                                             ; preds = %1889
  %1896 = getelementptr %struct.mxl5005s_state, ptr %1885, i32 0, i32 19, i32 %1891, i32 1
  %1897 = load i16, ptr %1896, align 2
  %1898 = icmp eq i16 %1897, 0
  br i1 %1898, label %1937, label %1899

1899:                                             ; preds = %1930, %1895
  %1900 = phi i32 [ %1931, %1930 ], [ 0, %1895 ]
  %1901 = getelementptr %struct.mxl5005s_state, ptr %1885, i32 0, i32 19, i32 %1891, i32 4, i32 %1900
  store i16 0, ptr %1901, align 2
  %1902 = getelementptr %struct.mxl5005s_state, ptr %1885, i32 0, i32 19, i32 %1891, i32 3, i32 %1900
  %1903 = load i16, ptr %1902, align 2
  %1904 = load ptr, ptr %2, align 4
  %1905 = getelementptr inbounds %struct.mxl5005s_state, ptr %1904, i32 0, i32 24
  %1906 = load i16, ptr %1905, align 4
  %1907 = zext i16 %1906 to i32
  %1908 = icmp eq i16 %1906, 0
  br i1 %1908, label %1930, label %1909

1909:                                             ; preds = %1899
  %1910 = getelementptr %struct.mxl5005s_state, ptr %1885, i32 0, i32 19, i32 %1891, i32 2, i32 %1900
  %1911 = load i16, ptr %1910, align 2
  %1912 = and i16 %1911, 255
  br label %1913

1913:                                             ; preds = %1927, %1909
  %1914 = phi i32 [ 0, %1909 ], [ %1928, %1927 ]
  %1915 = getelementptr %struct.mxl5005s_state, ptr %1904, i32 0, i32 25, i32 %1914
  %1916 = load i16, ptr %1915, align 2
  %1917 = icmp eq i16 %1916, %1912
  br i1 %1917, label %1918, label %1927

1918:                                             ; preds = %1913
  %1919 = and i16 %1903, 255
  %1920 = zext i16 %1919 to i32
  %1921 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1920
  %1922 = load i8, ptr %1921, align 1
  %1923 = zext i8 %1922 to i16
  %1924 = getelementptr %struct.mxl5005s_state, ptr %1904, i32 0, i32 25, i32 %1914, i32 1
  %1925 = load i16, ptr %1924, align 2
  %1926 = and i16 %1925, %1923
  store i16 %1926, ptr %1924, align 2
  br label %1930

1927:                                             ; preds = %1913
  %1928 = add nuw nsw i32 %1914, 1
  %1929 = icmp eq i32 %1928, %1907
  br i1 %1929, label %1930, label %1913

1930:                                             ; preds = %1927, %1918, %1899
  %1931 = add nuw nsw i32 %1900, 1
  %1932 = load i16, ptr %1896, align 2
  %1933 = zext i16 %1932 to i32
  %1934 = icmp ult i32 %1931, %1933
  br i1 %1934, label %1899, label %1935

1935:                                             ; preds = %1930
  %1936 = load i16, ptr %1886, align 4
  br label %1937

1937:                                             ; preds = %1935, %1895, %1889
  %1938 = phi i16 [ %1936, %1935 ], [ %1890, %1895 ], [ %1890, %1889 ]
  %1939 = add nuw nsw i32 %1891, 1
  %1940 = zext i16 %1938 to i32
  %1941 = icmp ult i32 %1939, %1940
  br i1 %1941, label %1889, label %1942

1942:                                             ; preds = %1937
  %1943 = load ptr, ptr %2, align 4
  br label %1944

1944:                                             ; preds = %1942, %1884
  %1945 = phi ptr [ %1943, %1942 ], [ %1885, %1884 ]
  %1946 = getelementptr inbounds %struct.mxl5005s_state, ptr %1945, i32 0, i32 20
  %1947 = load i16, ptr %1946, align 2
  %1948 = icmp eq i16 %1947, 0
  br i1 %1948, label %2004, label %1949

1949:                                             ; preds = %1997, %1944
  %1950 = phi i16 [ %1998, %1997 ], [ %1947, %1944 ]
  %1951 = phi i32 [ %1999, %1997 ], [ 0, %1944 ]
  %1952 = getelementptr %struct.mxl5005s_state, ptr %1945, i32 0, i32 21, i32 %1951
  %1953 = load i16, ptr %1952, align 2
  %1954 = icmp eq i16 %1953, 19
  br i1 %1954, label %1955, label %1997

1955:                                             ; preds = %1949
  %1956 = getelementptr %struct.mxl5005s_state, ptr %1945, i32 0, i32 21, i32 %1951, i32 1
  %1957 = load i16, ptr %1956, align 2
  %1958 = icmp eq i16 %1957, 0
  br i1 %1958, label %1997, label %1959

1959:                                             ; preds = %1990, %1955
  %1960 = phi i32 [ %1991, %1990 ], [ 0, %1955 ]
  %1961 = getelementptr %struct.mxl5005s_state, ptr %1945, i32 0, i32 21, i32 %1951, i32 4, i32 %1960
  store i16 0, ptr %1961, align 2
  %1962 = getelementptr %struct.mxl5005s_state, ptr %1945, i32 0, i32 21, i32 %1951, i32 3, i32 %1960
  %1963 = load i16, ptr %1962, align 2
  %1964 = load ptr, ptr %2, align 4
  %1965 = getelementptr inbounds %struct.mxl5005s_state, ptr %1964, i32 0, i32 24
  %1966 = load i16, ptr %1965, align 4
  %1967 = zext i16 %1966 to i32
  %1968 = icmp eq i16 %1966, 0
  br i1 %1968, label %1990, label %1969

1969:                                             ; preds = %1959
  %1970 = getelementptr %struct.mxl5005s_state, ptr %1945, i32 0, i32 21, i32 %1951, i32 2, i32 %1960
  %1971 = load i16, ptr %1970, align 2
  %1972 = and i16 %1971, 255
  br label %1973

1973:                                             ; preds = %1987, %1969
  %1974 = phi i32 [ 0, %1969 ], [ %1988, %1987 ]
  %1975 = getelementptr %struct.mxl5005s_state, ptr %1964, i32 0, i32 25, i32 %1974
  %1976 = load i16, ptr %1975, align 2
  %1977 = icmp eq i16 %1976, %1972
  br i1 %1977, label %1978, label %1987

1978:                                             ; preds = %1973
  %1979 = and i16 %1963, 255
  %1980 = zext i16 %1979 to i32
  %1981 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1980
  %1982 = load i8, ptr %1981, align 1
  %1983 = zext i8 %1982 to i16
  %1984 = getelementptr %struct.mxl5005s_state, ptr %1964, i32 0, i32 25, i32 %1974, i32 1
  %1985 = load i16, ptr %1984, align 2
  %1986 = and i16 %1985, %1983
  store i16 %1986, ptr %1984, align 2
  br label %1990

1987:                                             ; preds = %1973
  %1988 = add nuw nsw i32 %1974, 1
  %1989 = icmp eq i32 %1988, %1967
  br i1 %1989, label %1990, label %1973

1990:                                             ; preds = %1987, %1978, %1959
  %1991 = add nuw nsw i32 %1960, 1
  %1992 = load i16, ptr %1956, align 2
  %1993 = zext i16 %1992 to i32
  %1994 = icmp ult i32 %1991, %1993
  br i1 %1994, label %1959, label %1995

1995:                                             ; preds = %1990
  %1996 = load i16, ptr %1946, align 2
  br label %1997

1997:                                             ; preds = %1995, %1955, %1949
  %1998 = phi i16 [ %1996, %1995 ], [ %1950, %1955 ], [ %1950, %1949 ]
  %1999 = add nuw nsw i32 %1951, 1
  %2000 = zext i16 %1998 to i32
  %2001 = icmp ult i32 %1999, %2000
  br i1 %2001, label %1949, label %2002

2002:                                             ; preds = %1997
  %2003 = load ptr, ptr %2, align 4
  br label %2004

2004:                                             ; preds = %2002, %1944
  %2005 = phi ptr [ %2003, %2002 ], [ %1945, %1944 ]
  %2006 = getelementptr inbounds %struct.mxl5005s_state, ptr %2005, i32 0, i32 18
  %2007 = load i16, ptr %2006, align 4
  %2008 = icmp eq i16 %2007, 0
  br i1 %2008, label %2064, label %2009

2009:                                             ; preds = %2057, %2004
  %2010 = phi i16 [ %2058, %2057 ], [ %2007, %2004 ]
  %2011 = phi i32 [ %2059, %2057 ], [ 0, %2004 ]
  %2012 = getelementptr %struct.mxl5005s_state, ptr %2005, i32 0, i32 19, i32 %2011
  %2013 = load i16, ptr %2012, align 2
  %2014 = icmp eq i16 %2013, 20
  br i1 %2014, label %2015, label %2057

2015:                                             ; preds = %2009
  %2016 = getelementptr %struct.mxl5005s_state, ptr %2005, i32 0, i32 19, i32 %2011, i32 1
  %2017 = load i16, ptr %2016, align 2
  %2018 = icmp eq i16 %2017, 0
  br i1 %2018, label %2057, label %2019

2019:                                             ; preds = %2050, %2015
  %2020 = phi i32 [ %2051, %2050 ], [ 0, %2015 ]
  %2021 = getelementptr %struct.mxl5005s_state, ptr %2005, i32 0, i32 19, i32 %2011, i32 4, i32 %2020
  store i16 0, ptr %2021, align 2
  %2022 = getelementptr %struct.mxl5005s_state, ptr %2005, i32 0, i32 19, i32 %2011, i32 3, i32 %2020
  %2023 = load i16, ptr %2022, align 2
  %2024 = load ptr, ptr %2, align 4
  %2025 = getelementptr inbounds %struct.mxl5005s_state, ptr %2024, i32 0, i32 24
  %2026 = load i16, ptr %2025, align 4
  %2027 = zext i16 %2026 to i32
  %2028 = icmp eq i16 %2026, 0
  br i1 %2028, label %2050, label %2029

2029:                                             ; preds = %2019
  %2030 = getelementptr %struct.mxl5005s_state, ptr %2005, i32 0, i32 19, i32 %2011, i32 2, i32 %2020
  %2031 = load i16, ptr %2030, align 2
  %2032 = and i16 %2031, 255
  br label %2033

2033:                                             ; preds = %2047, %2029
  %2034 = phi i32 [ 0, %2029 ], [ %2048, %2047 ]
  %2035 = getelementptr %struct.mxl5005s_state, ptr %2024, i32 0, i32 25, i32 %2034
  %2036 = load i16, ptr %2035, align 2
  %2037 = icmp eq i16 %2036, %2032
  br i1 %2037, label %2038, label %2047

2038:                                             ; preds = %2033
  %2039 = and i16 %2023, 255
  %2040 = zext i16 %2039 to i32
  %2041 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2040
  %2042 = load i8, ptr %2041, align 1
  %2043 = zext i8 %2042 to i16
  %2044 = getelementptr %struct.mxl5005s_state, ptr %2024, i32 0, i32 25, i32 %2034, i32 1
  %2045 = load i16, ptr %2044, align 2
  %2046 = and i16 %2045, %2043
  store i16 %2046, ptr %2044, align 2
  br label %2050

2047:                                             ; preds = %2033
  %2048 = add nuw nsw i32 %2034, 1
  %2049 = icmp eq i32 %2048, %2027
  br i1 %2049, label %2050, label %2033

2050:                                             ; preds = %2047, %2038, %2019
  %2051 = add nuw nsw i32 %2020, 1
  %2052 = load i16, ptr %2016, align 2
  %2053 = zext i16 %2052 to i32
  %2054 = icmp ult i32 %2051, %2053
  br i1 %2054, label %2019, label %2055

2055:                                             ; preds = %2050
  %2056 = load i16, ptr %2006, align 4
  br label %2057

2057:                                             ; preds = %2055, %2015, %2009
  %2058 = phi i16 [ %2056, %2055 ], [ %2010, %2015 ], [ %2010, %2009 ]
  %2059 = add nuw nsw i32 %2011, 1
  %2060 = zext i16 %2058 to i32
  %2061 = icmp ult i32 %2059, %2060
  br i1 %2061, label %2009, label %2062

2062:                                             ; preds = %2057
  %2063 = load ptr, ptr %2, align 4
  br label %2064

2064:                                             ; preds = %2062, %2004
  %2065 = phi ptr [ %2063, %2062 ], [ %2005, %2004 ]
  %2066 = getelementptr inbounds %struct.mxl5005s_state, ptr %2065, i32 0, i32 20
  %2067 = load i16, ptr %2066, align 2
  %2068 = icmp eq i16 %2067, 0
  br i1 %2068, label %2124, label %2069

2069:                                             ; preds = %2117, %2064
  %2070 = phi i16 [ %2118, %2117 ], [ %2067, %2064 ]
  %2071 = phi i32 [ %2119, %2117 ], [ 0, %2064 ]
  %2072 = getelementptr %struct.mxl5005s_state, ptr %2065, i32 0, i32 21, i32 %2071
  %2073 = load i16, ptr %2072, align 2
  %2074 = icmp eq i16 %2073, 20
  br i1 %2074, label %2075, label %2117

2075:                                             ; preds = %2069
  %2076 = getelementptr %struct.mxl5005s_state, ptr %2065, i32 0, i32 21, i32 %2071, i32 1
  %2077 = load i16, ptr %2076, align 2
  %2078 = icmp eq i16 %2077, 0
  br i1 %2078, label %2117, label %2079

2079:                                             ; preds = %2110, %2075
  %2080 = phi i32 [ %2111, %2110 ], [ 0, %2075 ]
  %2081 = getelementptr %struct.mxl5005s_state, ptr %2065, i32 0, i32 21, i32 %2071, i32 4, i32 %2080
  store i16 0, ptr %2081, align 2
  %2082 = getelementptr %struct.mxl5005s_state, ptr %2065, i32 0, i32 21, i32 %2071, i32 3, i32 %2080
  %2083 = load i16, ptr %2082, align 2
  %2084 = load ptr, ptr %2, align 4
  %2085 = getelementptr inbounds %struct.mxl5005s_state, ptr %2084, i32 0, i32 24
  %2086 = load i16, ptr %2085, align 4
  %2087 = zext i16 %2086 to i32
  %2088 = icmp eq i16 %2086, 0
  br i1 %2088, label %2110, label %2089

2089:                                             ; preds = %2079
  %2090 = getelementptr %struct.mxl5005s_state, ptr %2065, i32 0, i32 21, i32 %2071, i32 2, i32 %2080
  %2091 = load i16, ptr %2090, align 2
  %2092 = and i16 %2091, 255
  br label %2093

2093:                                             ; preds = %2107, %2089
  %2094 = phi i32 [ 0, %2089 ], [ %2108, %2107 ]
  %2095 = getelementptr %struct.mxl5005s_state, ptr %2084, i32 0, i32 25, i32 %2094
  %2096 = load i16, ptr %2095, align 2
  %2097 = icmp eq i16 %2096, %2092
  br i1 %2097, label %2098, label %2107

2098:                                             ; preds = %2093
  %2099 = and i16 %2083, 255
  %2100 = zext i16 %2099 to i32
  %2101 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2100
  %2102 = load i8, ptr %2101, align 1
  %2103 = zext i8 %2102 to i16
  %2104 = getelementptr %struct.mxl5005s_state, ptr %2084, i32 0, i32 25, i32 %2094, i32 1
  %2105 = load i16, ptr %2104, align 2
  %2106 = and i16 %2105, %2103
  store i16 %2106, ptr %2104, align 2
  br label %2110

2107:                                             ; preds = %2093
  %2108 = add nuw nsw i32 %2094, 1
  %2109 = icmp eq i32 %2108, %2087
  br i1 %2109, label %2110, label %2093

2110:                                             ; preds = %2107, %2098, %2079
  %2111 = add nuw nsw i32 %2080, 1
  %2112 = load i16, ptr %2076, align 2
  %2113 = zext i16 %2112 to i32
  %2114 = icmp ult i32 %2111, %2113
  br i1 %2114, label %2079, label %2115

2115:                                             ; preds = %2110
  %2116 = load i16, ptr %2066, align 2
  br label %2117

2117:                                             ; preds = %2115, %2075, %2069
  %2118 = phi i16 [ %2116, %2115 ], [ %2070, %2075 ], [ %2070, %2069 ]
  %2119 = add nuw nsw i32 %2071, 1
  %2120 = zext i16 %2118 to i32
  %2121 = icmp ult i32 %2119, %2120
  br i1 %2121, label %2069, label %2122

2122:                                             ; preds = %2117
  %2123 = load ptr, ptr %2, align 4
  br label %2124

2124:                                             ; preds = %2122, %2064
  %2125 = phi ptr [ %2123, %2122 ], [ %2065, %2064 ]
  %2126 = getelementptr inbounds %struct.mxl5005s_state, ptr %2125, i32 0, i32 18
  %2127 = load i16, ptr %2126, align 4
  %2128 = icmp eq i16 %2127, 0
  br i1 %2128, label %2184, label %2129

2129:                                             ; preds = %2177, %2124
  %2130 = phi i16 [ %2178, %2177 ], [ %2127, %2124 ]
  %2131 = phi i32 [ %2179, %2177 ], [ 0, %2124 ]
  %2132 = getelementptr %struct.mxl5005s_state, ptr %2125, i32 0, i32 19, i32 %2131
  %2133 = load i16, ptr %2132, align 2
  %2134 = icmp eq i16 %2133, 21
  br i1 %2134, label %2135, label %2177

2135:                                             ; preds = %2129
  %2136 = getelementptr %struct.mxl5005s_state, ptr %2125, i32 0, i32 19, i32 %2131, i32 1
  %2137 = load i16, ptr %2136, align 2
  %2138 = icmp eq i16 %2137, 0
  br i1 %2138, label %2177, label %2139

2139:                                             ; preds = %2170, %2135
  %2140 = phi i32 [ %2171, %2170 ], [ 0, %2135 ]
  %2141 = getelementptr %struct.mxl5005s_state, ptr %2125, i32 0, i32 19, i32 %2131, i32 4, i32 %2140
  store i16 0, ptr %2141, align 2
  %2142 = getelementptr %struct.mxl5005s_state, ptr %2125, i32 0, i32 19, i32 %2131, i32 3, i32 %2140
  %2143 = load i16, ptr %2142, align 2
  %2144 = load ptr, ptr %2, align 4
  %2145 = getelementptr inbounds %struct.mxl5005s_state, ptr %2144, i32 0, i32 24
  %2146 = load i16, ptr %2145, align 4
  %2147 = zext i16 %2146 to i32
  %2148 = icmp eq i16 %2146, 0
  br i1 %2148, label %2170, label %2149

2149:                                             ; preds = %2139
  %2150 = getelementptr %struct.mxl5005s_state, ptr %2125, i32 0, i32 19, i32 %2131, i32 2, i32 %2140
  %2151 = load i16, ptr %2150, align 2
  %2152 = and i16 %2151, 255
  br label %2153

2153:                                             ; preds = %2167, %2149
  %2154 = phi i32 [ 0, %2149 ], [ %2168, %2167 ]
  %2155 = getelementptr %struct.mxl5005s_state, ptr %2144, i32 0, i32 25, i32 %2154
  %2156 = load i16, ptr %2155, align 2
  %2157 = icmp eq i16 %2156, %2152
  br i1 %2157, label %2158, label %2167

2158:                                             ; preds = %2153
  %2159 = and i16 %2143, 255
  %2160 = zext i16 %2159 to i32
  %2161 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2160
  %2162 = load i8, ptr %2161, align 1
  %2163 = zext i8 %2162 to i16
  %2164 = getelementptr %struct.mxl5005s_state, ptr %2144, i32 0, i32 25, i32 %2154, i32 1
  %2165 = load i16, ptr %2164, align 2
  %2166 = and i16 %2165, %2163
  store i16 %2166, ptr %2164, align 2
  br label %2170

2167:                                             ; preds = %2153
  %2168 = add nuw nsw i32 %2154, 1
  %2169 = icmp eq i32 %2168, %2147
  br i1 %2169, label %2170, label %2153

2170:                                             ; preds = %2167, %2158, %2139
  %2171 = add nuw nsw i32 %2140, 1
  %2172 = load i16, ptr %2136, align 2
  %2173 = zext i16 %2172 to i32
  %2174 = icmp ult i32 %2171, %2173
  br i1 %2174, label %2139, label %2175

2175:                                             ; preds = %2170
  %2176 = load i16, ptr %2126, align 4
  br label %2177

2177:                                             ; preds = %2175, %2135, %2129
  %2178 = phi i16 [ %2176, %2175 ], [ %2130, %2135 ], [ %2130, %2129 ]
  %2179 = add nuw nsw i32 %2131, 1
  %2180 = zext i16 %2178 to i32
  %2181 = icmp ult i32 %2179, %2180
  br i1 %2181, label %2129, label %2182

2182:                                             ; preds = %2177
  %2183 = load ptr, ptr %2, align 4
  br label %2184

2184:                                             ; preds = %2182, %2124
  %2185 = phi ptr [ %2183, %2182 ], [ %2125, %2124 ]
  %2186 = getelementptr inbounds %struct.mxl5005s_state, ptr %2185, i32 0, i32 20
  %2187 = load i16, ptr %2186, align 2
  %2188 = icmp eq i16 %2187, 0
  br i1 %2188, label %2242, label %2189

2189:                                             ; preds = %2237, %2184
  %2190 = phi i16 [ %2238, %2237 ], [ %2187, %2184 ]
  %2191 = phi i32 [ %2239, %2237 ], [ 0, %2184 ]
  %2192 = getelementptr %struct.mxl5005s_state, ptr %2185, i32 0, i32 21, i32 %2191
  %2193 = load i16, ptr %2192, align 2
  %2194 = icmp eq i16 %2193, 21
  br i1 %2194, label %2195, label %2237

2195:                                             ; preds = %2189
  %2196 = getelementptr %struct.mxl5005s_state, ptr %2185, i32 0, i32 21, i32 %2191, i32 1
  %2197 = load i16, ptr %2196, align 2
  %2198 = icmp eq i16 %2197, 0
  br i1 %2198, label %2237, label %2199

2199:                                             ; preds = %2230, %2195
  %2200 = phi i32 [ %2231, %2230 ], [ 0, %2195 ]
  %2201 = getelementptr %struct.mxl5005s_state, ptr %2185, i32 0, i32 21, i32 %2191, i32 4, i32 %2200
  store i16 0, ptr %2201, align 2
  %2202 = getelementptr %struct.mxl5005s_state, ptr %2185, i32 0, i32 21, i32 %2191, i32 3, i32 %2200
  %2203 = load i16, ptr %2202, align 2
  %2204 = load ptr, ptr %2, align 4
  %2205 = getelementptr inbounds %struct.mxl5005s_state, ptr %2204, i32 0, i32 24
  %2206 = load i16, ptr %2205, align 4
  %2207 = zext i16 %2206 to i32
  %2208 = icmp eq i16 %2206, 0
  br i1 %2208, label %2230, label %2209

2209:                                             ; preds = %2199
  %2210 = getelementptr %struct.mxl5005s_state, ptr %2185, i32 0, i32 21, i32 %2191, i32 2, i32 %2200
  %2211 = load i16, ptr %2210, align 2
  %2212 = and i16 %2211, 255
  br label %2213

2213:                                             ; preds = %2227, %2209
  %2214 = phi i32 [ 0, %2209 ], [ %2228, %2227 ]
  %2215 = getelementptr %struct.mxl5005s_state, ptr %2204, i32 0, i32 25, i32 %2214
  %2216 = load i16, ptr %2215, align 2
  %2217 = icmp eq i16 %2216, %2212
  br i1 %2217, label %2218, label %2227

2218:                                             ; preds = %2213
  %2219 = and i16 %2203, 255
  %2220 = zext i16 %2219 to i32
  %2221 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2220
  %2222 = load i8, ptr %2221, align 1
  %2223 = zext i8 %2222 to i16
  %2224 = getelementptr %struct.mxl5005s_state, ptr %2204, i32 0, i32 25, i32 %2214, i32 1
  %2225 = load i16, ptr %2224, align 2
  %2226 = and i16 %2225, %2223
  store i16 %2226, ptr %2224, align 2
  br label %2230

2227:                                             ; preds = %2213
  %2228 = add nuw nsw i32 %2214, 1
  %2229 = icmp eq i32 %2228, %2207
  br i1 %2229, label %2230, label %2213

2230:                                             ; preds = %2227, %2218, %2199
  %2231 = add nuw nsw i32 %2200, 1
  %2232 = load i16, ptr %2196, align 2
  %2233 = zext i16 %2232 to i32
  %2234 = icmp ult i32 %2231, %2233
  br i1 %2234, label %2199, label %2235

2235:                                             ; preds = %2230
  %2236 = load i16, ptr %2186, align 2
  br label %2237

2237:                                             ; preds = %2235, %2195, %2189
  %2238 = phi i16 [ %2236, %2235 ], [ %2190, %2195 ], [ %2190, %2189 ]
  %2239 = add nuw nsw i32 %2191, 1
  %2240 = zext i16 %2238 to i32
  %2241 = icmp ult i32 %2239, %2240
  br i1 %2241, label %2189, label %2242

2242:                                             ; preds = %2237, %2184, %1760, %1613, %1491
  %2243 = phi i16 [ %1625, %1613 ], [ %1493, %1491 ], [ %1762, %1760 ], [ %1762, %2184 ], [ %1762, %2237 ]
  %2244 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 9
  %2245 = load i8, ptr %2244, align 4
  %2246 = icmp eq i8 %2245, 0
  br i1 %2246, label %2251, label %2247

2247:                                             ; preds = %2242
  %2248 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 22, i32 noundef 1, i16 noundef zeroext 1) #12
  %2249 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 22, i32 noundef 1, i16 noundef zeroext 2) #12
  %2250 = add i16 %2249, %2248
  br label %2369

2251:                                             ; preds = %2242
  %2252 = load ptr, ptr %2, align 4
  %2253 = getelementptr inbounds %struct.mxl5005s_state, ptr %2252, i32 0, i32 18
  %2254 = load i16, ptr %2253, align 4
  %2255 = icmp eq i16 %2254, 0
  br i1 %2255, label %2311, label %2256

2256:                                             ; preds = %2304, %2251
  %2257 = phi i16 [ %2305, %2304 ], [ %2254, %2251 ]
  %2258 = phi i32 [ %2306, %2304 ], [ 0, %2251 ]
  %2259 = getelementptr %struct.mxl5005s_state, ptr %2252, i32 0, i32 19, i32 %2258
  %2260 = load i16, ptr %2259, align 2
  %2261 = icmp eq i16 %2260, 22
  br i1 %2261, label %2262, label %2304

2262:                                             ; preds = %2256
  %2263 = getelementptr %struct.mxl5005s_state, ptr %2252, i32 0, i32 19, i32 %2258, i32 1
  %2264 = load i16, ptr %2263, align 2
  %2265 = icmp eq i16 %2264, 0
  br i1 %2265, label %2304, label %2266

2266:                                             ; preds = %2297, %2262
  %2267 = phi i32 [ %2298, %2297 ], [ 0, %2262 ]
  %2268 = getelementptr %struct.mxl5005s_state, ptr %2252, i32 0, i32 19, i32 %2258, i32 4, i32 %2267
  store i16 0, ptr %2268, align 2
  %2269 = getelementptr %struct.mxl5005s_state, ptr %2252, i32 0, i32 19, i32 %2258, i32 3, i32 %2267
  %2270 = load i16, ptr %2269, align 2
  %2271 = load ptr, ptr %2, align 4
  %2272 = getelementptr inbounds %struct.mxl5005s_state, ptr %2271, i32 0, i32 24
  %2273 = load i16, ptr %2272, align 4
  %2274 = zext i16 %2273 to i32
  %2275 = icmp eq i16 %2273, 0
  br i1 %2275, label %2297, label %2276

2276:                                             ; preds = %2266
  %2277 = getelementptr %struct.mxl5005s_state, ptr %2252, i32 0, i32 19, i32 %2258, i32 2, i32 %2267
  %2278 = load i16, ptr %2277, align 2
  %2279 = and i16 %2278, 255
  br label %2280

2280:                                             ; preds = %2294, %2276
  %2281 = phi i32 [ 0, %2276 ], [ %2295, %2294 ]
  %2282 = getelementptr %struct.mxl5005s_state, ptr %2271, i32 0, i32 25, i32 %2281
  %2283 = load i16, ptr %2282, align 2
  %2284 = icmp eq i16 %2283, %2279
  br i1 %2284, label %2285, label %2294

2285:                                             ; preds = %2280
  %2286 = and i16 %2270, 255
  %2287 = zext i16 %2286 to i32
  %2288 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2287
  %2289 = load i8, ptr %2288, align 1
  %2290 = zext i8 %2289 to i16
  %2291 = getelementptr %struct.mxl5005s_state, ptr %2271, i32 0, i32 25, i32 %2281, i32 1
  %2292 = load i16, ptr %2291, align 2
  %2293 = and i16 %2292, %2290
  store i16 %2293, ptr %2291, align 2
  br label %2297

2294:                                             ; preds = %2280
  %2295 = add nuw nsw i32 %2281, 1
  %2296 = icmp eq i32 %2295, %2274
  br i1 %2296, label %2297, label %2280

2297:                                             ; preds = %2294, %2285, %2266
  %2298 = add nuw nsw i32 %2267, 1
  %2299 = load i16, ptr %2263, align 2
  %2300 = zext i16 %2299 to i32
  %2301 = icmp ult i32 %2298, %2300
  br i1 %2301, label %2266, label %2302

2302:                                             ; preds = %2297
  %2303 = load i16, ptr %2253, align 4
  br label %2304

2304:                                             ; preds = %2302, %2262, %2256
  %2305 = phi i16 [ %2303, %2302 ], [ %2257, %2262 ], [ %2257, %2256 ]
  %2306 = add nuw nsw i32 %2258, 1
  %2307 = zext i16 %2305 to i32
  %2308 = icmp ult i32 %2306, %2307
  br i1 %2308, label %2256, label %2309

2309:                                             ; preds = %2304
  %2310 = load ptr, ptr %2, align 4
  br label %2311

2311:                                             ; preds = %2309, %2251
  %2312 = phi ptr [ %2310, %2309 ], [ %2252, %2251 ]
  %2313 = getelementptr inbounds %struct.mxl5005s_state, ptr %2312, i32 0, i32 20
  %2314 = load i16, ptr %2313, align 2
  %2315 = icmp eq i16 %2314, 0
  br i1 %2315, label %2369, label %2316

2316:                                             ; preds = %2364, %2311
  %2317 = phi i16 [ %2365, %2364 ], [ %2314, %2311 ]
  %2318 = phi i32 [ %2366, %2364 ], [ 0, %2311 ]
  %2319 = getelementptr %struct.mxl5005s_state, ptr %2312, i32 0, i32 21, i32 %2318
  %2320 = load i16, ptr %2319, align 2
  %2321 = icmp eq i16 %2320, 22
  br i1 %2321, label %2322, label %2364

2322:                                             ; preds = %2316
  %2323 = getelementptr %struct.mxl5005s_state, ptr %2312, i32 0, i32 21, i32 %2318, i32 1
  %2324 = load i16, ptr %2323, align 2
  %2325 = icmp eq i16 %2324, 0
  br i1 %2325, label %2364, label %2326

2326:                                             ; preds = %2357, %2322
  %2327 = phi i32 [ %2358, %2357 ], [ 0, %2322 ]
  %2328 = getelementptr %struct.mxl5005s_state, ptr %2312, i32 0, i32 21, i32 %2318, i32 4, i32 %2327
  store i16 0, ptr %2328, align 2
  %2329 = getelementptr %struct.mxl5005s_state, ptr %2312, i32 0, i32 21, i32 %2318, i32 3, i32 %2327
  %2330 = load i16, ptr %2329, align 2
  %2331 = load ptr, ptr %2, align 4
  %2332 = getelementptr inbounds %struct.mxl5005s_state, ptr %2331, i32 0, i32 24
  %2333 = load i16, ptr %2332, align 4
  %2334 = zext i16 %2333 to i32
  %2335 = icmp eq i16 %2333, 0
  br i1 %2335, label %2357, label %2336

2336:                                             ; preds = %2326
  %2337 = getelementptr %struct.mxl5005s_state, ptr %2312, i32 0, i32 21, i32 %2318, i32 2, i32 %2327
  %2338 = load i16, ptr %2337, align 2
  %2339 = and i16 %2338, 255
  br label %2340

2340:                                             ; preds = %2354, %2336
  %2341 = phi i32 [ 0, %2336 ], [ %2355, %2354 ]
  %2342 = getelementptr %struct.mxl5005s_state, ptr %2331, i32 0, i32 25, i32 %2341
  %2343 = load i16, ptr %2342, align 2
  %2344 = icmp eq i16 %2343, %2339
  br i1 %2344, label %2345, label %2354

2345:                                             ; preds = %2340
  %2346 = and i16 %2330, 255
  %2347 = zext i16 %2346 to i32
  %2348 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2347
  %2349 = load i8, ptr %2348, align 1
  %2350 = zext i8 %2349 to i16
  %2351 = getelementptr %struct.mxl5005s_state, ptr %2331, i32 0, i32 25, i32 %2341, i32 1
  %2352 = load i16, ptr %2351, align 2
  %2353 = and i16 %2352, %2350
  store i16 %2353, ptr %2351, align 2
  br label %2357

2354:                                             ; preds = %2340
  %2355 = add nuw nsw i32 %2341, 1
  %2356 = icmp eq i32 %2355, %2334
  br i1 %2356, label %2357, label %2340

2357:                                             ; preds = %2354, %2345, %2326
  %2358 = add nuw nsw i32 %2327, 1
  %2359 = load i16, ptr %2323, align 2
  %2360 = zext i16 %2359 to i32
  %2361 = icmp ult i32 %2358, %2360
  br i1 %2361, label %2326, label %2362

2362:                                             ; preds = %2357
  %2363 = load i16, ptr %2313, align 2
  br label %2364

2364:                                             ; preds = %2362, %2322, %2316
  %2365 = phi i16 [ %2363, %2362 ], [ %2317, %2322 ], [ %2317, %2316 ]
  %2366 = add nuw nsw i32 %2318, 1
  %2367 = zext i16 %2365 to i32
  %2368 = icmp ult i32 %2366, %2367
  br i1 %2368, label %2316, label %2369

2369:                                             ; preds = %2364, %2311, %2247
  %2370 = phi i16 [ %2250, %2247 ], [ 0, %2311 ], [ 0, %2364 ]
  %2371 = add i16 %2370, %2243
  %2372 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 10
  %2373 = load i8, ptr %2372, align 1
  %2374 = icmp eq i8 %2373, 1
  br i1 %2374, label %2375, label %2381

2375:                                             ; preds = %2369
  %2376 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 23, i32 noundef 1, i16 noundef zeroext 1) #12
  %2377 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 23, i32 noundef 1, i16 noundef zeroext 2) #12
  %2378 = add i16 %2376, %2371
  %2379 = add i16 %2378, %2377
  %2380 = load i8, ptr %2372, align 1
  br label %2381

2381:                                             ; preds = %2375, %2369
  %2382 = phi i8 [ %2380, %2375 ], [ %2373, %2369 ]
  %2383 = phi i16 [ %2379, %2375 ], [ %2371, %2369 ]
  %2384 = icmp eq i8 %2382, 0
  br i1 %2384, label %2385, label %2503

2385:                                             ; preds = %2381
  %2386 = load ptr, ptr %2, align 4
  %2387 = getelementptr inbounds %struct.mxl5005s_state, ptr %2386, i32 0, i32 18
  %2388 = load i16, ptr %2387, align 4
  %2389 = icmp eq i16 %2388, 0
  br i1 %2389, label %2445, label %2390

2390:                                             ; preds = %2438, %2385
  %2391 = phi i16 [ %2439, %2438 ], [ %2388, %2385 ]
  %2392 = phi i32 [ %2440, %2438 ], [ 0, %2385 ]
  %2393 = getelementptr %struct.mxl5005s_state, ptr %2386, i32 0, i32 19, i32 %2392
  %2394 = load i16, ptr %2393, align 2
  %2395 = icmp eq i16 %2394, 23
  br i1 %2395, label %2396, label %2438

2396:                                             ; preds = %2390
  %2397 = getelementptr %struct.mxl5005s_state, ptr %2386, i32 0, i32 19, i32 %2392, i32 1
  %2398 = load i16, ptr %2397, align 2
  %2399 = icmp eq i16 %2398, 0
  br i1 %2399, label %2438, label %2400

2400:                                             ; preds = %2431, %2396
  %2401 = phi i32 [ %2432, %2431 ], [ 0, %2396 ]
  %2402 = getelementptr %struct.mxl5005s_state, ptr %2386, i32 0, i32 19, i32 %2392, i32 4, i32 %2401
  store i16 0, ptr %2402, align 2
  %2403 = getelementptr %struct.mxl5005s_state, ptr %2386, i32 0, i32 19, i32 %2392, i32 3, i32 %2401
  %2404 = load i16, ptr %2403, align 2
  %2405 = load ptr, ptr %2, align 4
  %2406 = getelementptr inbounds %struct.mxl5005s_state, ptr %2405, i32 0, i32 24
  %2407 = load i16, ptr %2406, align 4
  %2408 = zext i16 %2407 to i32
  %2409 = icmp eq i16 %2407, 0
  br i1 %2409, label %2431, label %2410

2410:                                             ; preds = %2400
  %2411 = getelementptr %struct.mxl5005s_state, ptr %2386, i32 0, i32 19, i32 %2392, i32 2, i32 %2401
  %2412 = load i16, ptr %2411, align 2
  %2413 = and i16 %2412, 255
  br label %2414

2414:                                             ; preds = %2428, %2410
  %2415 = phi i32 [ 0, %2410 ], [ %2429, %2428 ]
  %2416 = getelementptr %struct.mxl5005s_state, ptr %2405, i32 0, i32 25, i32 %2415
  %2417 = load i16, ptr %2416, align 2
  %2418 = icmp eq i16 %2417, %2413
  br i1 %2418, label %2419, label %2428

2419:                                             ; preds = %2414
  %2420 = and i16 %2404, 255
  %2421 = zext i16 %2420 to i32
  %2422 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2421
  %2423 = load i8, ptr %2422, align 1
  %2424 = zext i8 %2423 to i16
  %2425 = getelementptr %struct.mxl5005s_state, ptr %2405, i32 0, i32 25, i32 %2415, i32 1
  %2426 = load i16, ptr %2425, align 2
  %2427 = and i16 %2426, %2424
  store i16 %2427, ptr %2425, align 2
  br label %2431

2428:                                             ; preds = %2414
  %2429 = add nuw nsw i32 %2415, 1
  %2430 = icmp eq i32 %2429, %2408
  br i1 %2430, label %2431, label %2414

2431:                                             ; preds = %2428, %2419, %2400
  %2432 = add nuw nsw i32 %2401, 1
  %2433 = load i16, ptr %2397, align 2
  %2434 = zext i16 %2433 to i32
  %2435 = icmp ult i32 %2432, %2434
  br i1 %2435, label %2400, label %2436

2436:                                             ; preds = %2431
  %2437 = load i16, ptr %2387, align 4
  br label %2438

2438:                                             ; preds = %2436, %2396, %2390
  %2439 = phi i16 [ %2437, %2436 ], [ %2391, %2396 ], [ %2391, %2390 ]
  %2440 = add nuw nsw i32 %2392, 1
  %2441 = zext i16 %2439 to i32
  %2442 = icmp ult i32 %2440, %2441
  br i1 %2442, label %2390, label %2443

2443:                                             ; preds = %2438
  %2444 = load ptr, ptr %2, align 4
  br label %2445

2445:                                             ; preds = %2443, %2385
  %2446 = phi ptr [ %2444, %2443 ], [ %2386, %2385 ]
  %2447 = getelementptr inbounds %struct.mxl5005s_state, ptr %2446, i32 0, i32 20
  %2448 = load i16, ptr %2447, align 2
  %2449 = icmp eq i16 %2448, 0
  br i1 %2449, label %2503, label %2450

2450:                                             ; preds = %2498, %2445
  %2451 = phi i16 [ %2499, %2498 ], [ %2448, %2445 ]
  %2452 = phi i32 [ %2500, %2498 ], [ 0, %2445 ]
  %2453 = getelementptr %struct.mxl5005s_state, ptr %2446, i32 0, i32 21, i32 %2452
  %2454 = load i16, ptr %2453, align 2
  %2455 = icmp eq i16 %2454, 23
  br i1 %2455, label %2456, label %2498

2456:                                             ; preds = %2450
  %2457 = getelementptr %struct.mxl5005s_state, ptr %2446, i32 0, i32 21, i32 %2452, i32 1
  %2458 = load i16, ptr %2457, align 2
  %2459 = icmp eq i16 %2458, 0
  br i1 %2459, label %2498, label %2460

2460:                                             ; preds = %2491, %2456
  %2461 = phi i32 [ %2492, %2491 ], [ 0, %2456 ]
  %2462 = getelementptr %struct.mxl5005s_state, ptr %2446, i32 0, i32 21, i32 %2452, i32 4, i32 %2461
  store i16 0, ptr %2462, align 2
  %2463 = getelementptr %struct.mxl5005s_state, ptr %2446, i32 0, i32 21, i32 %2452, i32 3, i32 %2461
  %2464 = load i16, ptr %2463, align 2
  %2465 = load ptr, ptr %2, align 4
  %2466 = getelementptr inbounds %struct.mxl5005s_state, ptr %2465, i32 0, i32 24
  %2467 = load i16, ptr %2466, align 4
  %2468 = zext i16 %2467 to i32
  %2469 = icmp eq i16 %2467, 0
  br i1 %2469, label %2491, label %2470

2470:                                             ; preds = %2460
  %2471 = getelementptr %struct.mxl5005s_state, ptr %2446, i32 0, i32 21, i32 %2452, i32 2, i32 %2461
  %2472 = load i16, ptr %2471, align 2
  %2473 = and i16 %2472, 255
  br label %2474

2474:                                             ; preds = %2488, %2470
  %2475 = phi i32 [ 0, %2470 ], [ %2489, %2488 ]
  %2476 = getelementptr %struct.mxl5005s_state, ptr %2465, i32 0, i32 25, i32 %2475
  %2477 = load i16, ptr %2476, align 2
  %2478 = icmp eq i16 %2477, %2473
  br i1 %2478, label %2479, label %2488

2479:                                             ; preds = %2474
  %2480 = and i16 %2464, 255
  %2481 = zext i16 %2480 to i32
  %2482 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2481
  %2483 = load i8, ptr %2482, align 1
  %2484 = zext i8 %2483 to i16
  %2485 = getelementptr %struct.mxl5005s_state, ptr %2465, i32 0, i32 25, i32 %2475, i32 1
  %2486 = load i16, ptr %2485, align 2
  %2487 = and i16 %2486, %2484
  store i16 %2487, ptr %2485, align 2
  br label %2491

2488:                                             ; preds = %2474
  %2489 = add nuw nsw i32 %2475, 1
  %2490 = icmp eq i32 %2489, %2468
  br i1 %2490, label %2491, label %2474

2491:                                             ; preds = %2488, %2479, %2460
  %2492 = add nuw nsw i32 %2461, 1
  %2493 = load i16, ptr %2457, align 2
  %2494 = zext i16 %2493 to i32
  %2495 = icmp ult i32 %2492, %2494
  br i1 %2495, label %2460, label %2496

2496:                                             ; preds = %2491
  %2497 = load i16, ptr %2447, align 2
  br label %2498

2498:                                             ; preds = %2496, %2456, %2450
  %2499 = phi i16 [ %2497, %2496 ], [ %2451, %2456 ], [ %2451, %2450 ]
  %2500 = add nuw nsw i32 %2452, 1
  %2501 = zext i16 %2499 to i32
  %2502 = icmp ult i32 %2500, %2501
  br i1 %2502, label %2450, label %2503

2503:                                             ; preds = %2498, %2445, %2381
  %2504 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 11
  %2505 = load i8, ptr %2504, align 2
  %2506 = icmp eq i8 %2505, 0
  br i1 %2506, label %2511, label %2507

2507:                                             ; preds = %2503
  %2508 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 24, i32 noundef 1, i16 noundef zeroext 1) #12
  %2509 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 24, i32 noundef 1, i16 noundef zeroext 2) #12
  %2510 = add i16 %2509, %2508
  br label %2629

2511:                                             ; preds = %2503
  %2512 = load ptr, ptr %2, align 4
  %2513 = getelementptr inbounds %struct.mxl5005s_state, ptr %2512, i32 0, i32 18
  %2514 = load i16, ptr %2513, align 4
  %2515 = icmp eq i16 %2514, 0
  br i1 %2515, label %2571, label %2516

2516:                                             ; preds = %2564, %2511
  %2517 = phi i16 [ %2565, %2564 ], [ %2514, %2511 ]
  %2518 = phi i32 [ %2566, %2564 ], [ 0, %2511 ]
  %2519 = getelementptr %struct.mxl5005s_state, ptr %2512, i32 0, i32 19, i32 %2518
  %2520 = load i16, ptr %2519, align 2
  %2521 = icmp eq i16 %2520, 24
  br i1 %2521, label %2522, label %2564

2522:                                             ; preds = %2516
  %2523 = getelementptr %struct.mxl5005s_state, ptr %2512, i32 0, i32 19, i32 %2518, i32 1
  %2524 = load i16, ptr %2523, align 2
  %2525 = icmp eq i16 %2524, 0
  br i1 %2525, label %2564, label %2526

2526:                                             ; preds = %2557, %2522
  %2527 = phi i32 [ %2558, %2557 ], [ 0, %2522 ]
  %2528 = getelementptr %struct.mxl5005s_state, ptr %2512, i32 0, i32 19, i32 %2518, i32 4, i32 %2527
  store i16 0, ptr %2528, align 2
  %2529 = getelementptr %struct.mxl5005s_state, ptr %2512, i32 0, i32 19, i32 %2518, i32 3, i32 %2527
  %2530 = load i16, ptr %2529, align 2
  %2531 = load ptr, ptr %2, align 4
  %2532 = getelementptr inbounds %struct.mxl5005s_state, ptr %2531, i32 0, i32 24
  %2533 = load i16, ptr %2532, align 4
  %2534 = zext i16 %2533 to i32
  %2535 = icmp eq i16 %2533, 0
  br i1 %2535, label %2557, label %2536

2536:                                             ; preds = %2526
  %2537 = getelementptr %struct.mxl5005s_state, ptr %2512, i32 0, i32 19, i32 %2518, i32 2, i32 %2527
  %2538 = load i16, ptr %2537, align 2
  %2539 = and i16 %2538, 255
  br label %2540

2540:                                             ; preds = %2554, %2536
  %2541 = phi i32 [ 0, %2536 ], [ %2555, %2554 ]
  %2542 = getelementptr %struct.mxl5005s_state, ptr %2531, i32 0, i32 25, i32 %2541
  %2543 = load i16, ptr %2542, align 2
  %2544 = icmp eq i16 %2543, %2539
  br i1 %2544, label %2545, label %2554

2545:                                             ; preds = %2540
  %2546 = and i16 %2530, 255
  %2547 = zext i16 %2546 to i32
  %2548 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2547
  %2549 = load i8, ptr %2548, align 1
  %2550 = zext i8 %2549 to i16
  %2551 = getelementptr %struct.mxl5005s_state, ptr %2531, i32 0, i32 25, i32 %2541, i32 1
  %2552 = load i16, ptr %2551, align 2
  %2553 = and i16 %2552, %2550
  store i16 %2553, ptr %2551, align 2
  br label %2557

2554:                                             ; preds = %2540
  %2555 = add nuw nsw i32 %2541, 1
  %2556 = icmp eq i32 %2555, %2534
  br i1 %2556, label %2557, label %2540

2557:                                             ; preds = %2554, %2545, %2526
  %2558 = add nuw nsw i32 %2527, 1
  %2559 = load i16, ptr %2523, align 2
  %2560 = zext i16 %2559 to i32
  %2561 = icmp ult i32 %2558, %2560
  br i1 %2561, label %2526, label %2562

2562:                                             ; preds = %2557
  %2563 = load i16, ptr %2513, align 4
  br label %2564

2564:                                             ; preds = %2562, %2522, %2516
  %2565 = phi i16 [ %2563, %2562 ], [ %2517, %2522 ], [ %2517, %2516 ]
  %2566 = add nuw nsw i32 %2518, 1
  %2567 = zext i16 %2565 to i32
  %2568 = icmp ult i32 %2566, %2567
  br i1 %2568, label %2516, label %2569

2569:                                             ; preds = %2564
  %2570 = load ptr, ptr %2, align 4
  br label %2571

2571:                                             ; preds = %2569, %2511
  %2572 = phi ptr [ %2570, %2569 ], [ %2512, %2511 ]
  %2573 = getelementptr inbounds %struct.mxl5005s_state, ptr %2572, i32 0, i32 20
  %2574 = load i16, ptr %2573, align 2
  %2575 = icmp eq i16 %2574, 0
  br i1 %2575, label %2629, label %2576

2576:                                             ; preds = %2624, %2571
  %2577 = phi i16 [ %2625, %2624 ], [ %2574, %2571 ]
  %2578 = phi i32 [ %2626, %2624 ], [ 0, %2571 ]
  %2579 = getelementptr %struct.mxl5005s_state, ptr %2572, i32 0, i32 21, i32 %2578
  %2580 = load i16, ptr %2579, align 2
  %2581 = icmp eq i16 %2580, 24
  br i1 %2581, label %2582, label %2624

2582:                                             ; preds = %2576
  %2583 = getelementptr %struct.mxl5005s_state, ptr %2572, i32 0, i32 21, i32 %2578, i32 1
  %2584 = load i16, ptr %2583, align 2
  %2585 = icmp eq i16 %2584, 0
  br i1 %2585, label %2624, label %2586

2586:                                             ; preds = %2617, %2582
  %2587 = phi i32 [ %2618, %2617 ], [ 0, %2582 ]
  %2588 = getelementptr %struct.mxl5005s_state, ptr %2572, i32 0, i32 21, i32 %2578, i32 4, i32 %2587
  store i16 0, ptr %2588, align 2
  %2589 = getelementptr %struct.mxl5005s_state, ptr %2572, i32 0, i32 21, i32 %2578, i32 3, i32 %2587
  %2590 = load i16, ptr %2589, align 2
  %2591 = load ptr, ptr %2, align 4
  %2592 = getelementptr inbounds %struct.mxl5005s_state, ptr %2591, i32 0, i32 24
  %2593 = load i16, ptr %2592, align 4
  %2594 = zext i16 %2593 to i32
  %2595 = icmp eq i16 %2593, 0
  br i1 %2595, label %2617, label %2596

2596:                                             ; preds = %2586
  %2597 = getelementptr %struct.mxl5005s_state, ptr %2572, i32 0, i32 21, i32 %2578, i32 2, i32 %2587
  %2598 = load i16, ptr %2597, align 2
  %2599 = and i16 %2598, 255
  br label %2600

2600:                                             ; preds = %2614, %2596
  %2601 = phi i32 [ 0, %2596 ], [ %2615, %2614 ]
  %2602 = getelementptr %struct.mxl5005s_state, ptr %2591, i32 0, i32 25, i32 %2601
  %2603 = load i16, ptr %2602, align 2
  %2604 = icmp eq i16 %2603, %2599
  br i1 %2604, label %2605, label %2614

2605:                                             ; preds = %2600
  %2606 = and i16 %2590, 255
  %2607 = zext i16 %2606 to i32
  %2608 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2607
  %2609 = load i8, ptr %2608, align 1
  %2610 = zext i8 %2609 to i16
  %2611 = getelementptr %struct.mxl5005s_state, ptr %2591, i32 0, i32 25, i32 %2601, i32 1
  %2612 = load i16, ptr %2611, align 2
  %2613 = and i16 %2612, %2610
  store i16 %2613, ptr %2611, align 2
  br label %2617

2614:                                             ; preds = %2600
  %2615 = add nuw nsw i32 %2601, 1
  %2616 = icmp eq i32 %2615, %2594
  br i1 %2616, label %2617, label %2600

2617:                                             ; preds = %2614, %2605, %2586
  %2618 = add nuw nsw i32 %2587, 1
  %2619 = load i16, ptr %2583, align 2
  %2620 = zext i16 %2619 to i32
  %2621 = icmp ult i32 %2618, %2620
  br i1 %2621, label %2586, label %2622

2622:                                             ; preds = %2617
  %2623 = load i16, ptr %2573, align 2
  br label %2624

2624:                                             ; preds = %2622, %2582, %2576
  %2625 = phi i16 [ %2623, %2622 ], [ %2577, %2582 ], [ %2577, %2576 ]
  %2626 = add nuw nsw i32 %2578, 1
  %2627 = zext i16 %2625 to i32
  %2628 = icmp ult i32 %2626, %2627
  br i1 %2628, label %2576, label %2629

2629:                                             ; preds = %2624, %2571, %2507
  %2630 = phi i16 [ %2510, %2507 ], [ 0, %2571 ], [ 0, %2624 ]
  %2631 = add i16 %2630, %2383
  %2632 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 6
  %2633 = load i32, ptr %2632, align 4
  %2634 = add i32 %2633, -12000000
  %2635 = icmp ult i32 %2634, 4000001
  br i1 %2635, label %2636, label %2642

2636:                                             ; preds = %2629
  %2637 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 25, i32 noundef 1, i16 noundef zeroext 1) #12
  %2638 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 25, i32 noundef 1, i16 noundef zeroext 2) #12
  %2639 = add i16 %2637, %2631
  %2640 = add i16 %2639, %2638
  %2641 = load i32, ptr %2632, align 4
  br label %2642

2642:                                             ; preds = %2636, %2629
  %2643 = phi i32 [ %2641, %2636 ], [ %2633, %2629 ]
  %2644 = phi i16 [ %2640, %2636 ], [ %2631, %2629 ]
  %2645 = add i32 %2643, -16000001
  %2646 = icmp ult i32 %2645, 16000000
  br i1 %2646, label %2647, label %2765

2647:                                             ; preds = %2642
  %2648 = load ptr, ptr %2, align 4
  %2649 = getelementptr inbounds %struct.mxl5005s_state, ptr %2648, i32 0, i32 18
  %2650 = load i16, ptr %2649, align 4
  %2651 = icmp eq i16 %2650, 0
  br i1 %2651, label %2707, label %2652

2652:                                             ; preds = %2700, %2647
  %2653 = phi i16 [ %2701, %2700 ], [ %2650, %2647 ]
  %2654 = phi i32 [ %2702, %2700 ], [ 0, %2647 ]
  %2655 = getelementptr %struct.mxl5005s_state, ptr %2648, i32 0, i32 19, i32 %2654
  %2656 = load i16, ptr %2655, align 2
  %2657 = icmp eq i16 %2656, 25
  br i1 %2657, label %2658, label %2700

2658:                                             ; preds = %2652
  %2659 = getelementptr %struct.mxl5005s_state, ptr %2648, i32 0, i32 19, i32 %2654, i32 1
  %2660 = load i16, ptr %2659, align 2
  %2661 = icmp eq i16 %2660, 0
  br i1 %2661, label %2700, label %2662

2662:                                             ; preds = %2693, %2658
  %2663 = phi i32 [ %2694, %2693 ], [ 0, %2658 ]
  %2664 = getelementptr %struct.mxl5005s_state, ptr %2648, i32 0, i32 19, i32 %2654, i32 4, i32 %2663
  store i16 0, ptr %2664, align 2
  %2665 = getelementptr %struct.mxl5005s_state, ptr %2648, i32 0, i32 19, i32 %2654, i32 3, i32 %2663
  %2666 = load i16, ptr %2665, align 2
  %2667 = load ptr, ptr %2, align 4
  %2668 = getelementptr inbounds %struct.mxl5005s_state, ptr %2667, i32 0, i32 24
  %2669 = load i16, ptr %2668, align 4
  %2670 = zext i16 %2669 to i32
  %2671 = icmp eq i16 %2669, 0
  br i1 %2671, label %2693, label %2672

2672:                                             ; preds = %2662
  %2673 = getelementptr %struct.mxl5005s_state, ptr %2648, i32 0, i32 19, i32 %2654, i32 2, i32 %2663
  %2674 = load i16, ptr %2673, align 2
  %2675 = and i16 %2674, 255
  br label %2676

2676:                                             ; preds = %2690, %2672
  %2677 = phi i32 [ 0, %2672 ], [ %2691, %2690 ]
  %2678 = getelementptr %struct.mxl5005s_state, ptr %2667, i32 0, i32 25, i32 %2677
  %2679 = load i16, ptr %2678, align 2
  %2680 = icmp eq i16 %2679, %2675
  br i1 %2680, label %2681, label %2690

2681:                                             ; preds = %2676
  %2682 = and i16 %2666, 255
  %2683 = zext i16 %2682 to i32
  %2684 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2683
  %2685 = load i8, ptr %2684, align 1
  %2686 = zext i8 %2685 to i16
  %2687 = getelementptr %struct.mxl5005s_state, ptr %2667, i32 0, i32 25, i32 %2677, i32 1
  %2688 = load i16, ptr %2687, align 2
  %2689 = and i16 %2688, %2686
  store i16 %2689, ptr %2687, align 2
  br label %2693

2690:                                             ; preds = %2676
  %2691 = add nuw nsw i32 %2677, 1
  %2692 = icmp eq i32 %2691, %2670
  br i1 %2692, label %2693, label %2676

2693:                                             ; preds = %2690, %2681, %2662
  %2694 = add nuw nsw i32 %2663, 1
  %2695 = load i16, ptr %2659, align 2
  %2696 = zext i16 %2695 to i32
  %2697 = icmp ult i32 %2694, %2696
  br i1 %2697, label %2662, label %2698

2698:                                             ; preds = %2693
  %2699 = load i16, ptr %2649, align 4
  br label %2700

2700:                                             ; preds = %2698, %2658, %2652
  %2701 = phi i16 [ %2699, %2698 ], [ %2653, %2658 ], [ %2653, %2652 ]
  %2702 = add nuw nsw i32 %2654, 1
  %2703 = zext i16 %2701 to i32
  %2704 = icmp ult i32 %2702, %2703
  br i1 %2704, label %2652, label %2705

2705:                                             ; preds = %2700
  %2706 = load ptr, ptr %2, align 4
  br label %2707

2707:                                             ; preds = %2705, %2647
  %2708 = phi ptr [ %2706, %2705 ], [ %2648, %2647 ]
  %2709 = getelementptr inbounds %struct.mxl5005s_state, ptr %2708, i32 0, i32 20
  %2710 = load i16, ptr %2709, align 2
  %2711 = icmp eq i16 %2710, 0
  br i1 %2711, label %2765, label %2712

2712:                                             ; preds = %2760, %2707
  %2713 = phi i16 [ %2761, %2760 ], [ %2710, %2707 ]
  %2714 = phi i32 [ %2762, %2760 ], [ 0, %2707 ]
  %2715 = getelementptr %struct.mxl5005s_state, ptr %2708, i32 0, i32 21, i32 %2714
  %2716 = load i16, ptr %2715, align 2
  %2717 = icmp eq i16 %2716, 25
  br i1 %2717, label %2718, label %2760

2718:                                             ; preds = %2712
  %2719 = getelementptr %struct.mxl5005s_state, ptr %2708, i32 0, i32 21, i32 %2714, i32 1
  %2720 = load i16, ptr %2719, align 2
  %2721 = icmp eq i16 %2720, 0
  br i1 %2721, label %2760, label %2722

2722:                                             ; preds = %2753, %2718
  %2723 = phi i32 [ %2754, %2753 ], [ 0, %2718 ]
  %2724 = getelementptr %struct.mxl5005s_state, ptr %2708, i32 0, i32 21, i32 %2714, i32 4, i32 %2723
  store i16 0, ptr %2724, align 2
  %2725 = getelementptr %struct.mxl5005s_state, ptr %2708, i32 0, i32 21, i32 %2714, i32 3, i32 %2723
  %2726 = load i16, ptr %2725, align 2
  %2727 = load ptr, ptr %2, align 4
  %2728 = getelementptr inbounds %struct.mxl5005s_state, ptr %2727, i32 0, i32 24
  %2729 = load i16, ptr %2728, align 4
  %2730 = zext i16 %2729 to i32
  %2731 = icmp eq i16 %2729, 0
  br i1 %2731, label %2753, label %2732

2732:                                             ; preds = %2722
  %2733 = getelementptr %struct.mxl5005s_state, ptr %2708, i32 0, i32 21, i32 %2714, i32 2, i32 %2723
  %2734 = load i16, ptr %2733, align 2
  %2735 = and i16 %2734, 255
  br label %2736

2736:                                             ; preds = %2750, %2732
  %2737 = phi i32 [ 0, %2732 ], [ %2751, %2750 ]
  %2738 = getelementptr %struct.mxl5005s_state, ptr %2727, i32 0, i32 25, i32 %2737
  %2739 = load i16, ptr %2738, align 2
  %2740 = icmp eq i16 %2739, %2735
  br i1 %2740, label %2741, label %2750

2741:                                             ; preds = %2736
  %2742 = and i16 %2726, 255
  %2743 = zext i16 %2742 to i32
  %2744 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2743
  %2745 = load i8, ptr %2744, align 1
  %2746 = zext i8 %2745 to i16
  %2747 = getelementptr %struct.mxl5005s_state, ptr %2727, i32 0, i32 25, i32 %2737, i32 1
  %2748 = load i16, ptr %2747, align 2
  %2749 = and i16 %2748, %2746
  store i16 %2749, ptr %2747, align 2
  br label %2753

2750:                                             ; preds = %2736
  %2751 = add nuw nsw i32 %2737, 1
  %2752 = icmp eq i32 %2751, %2730
  br i1 %2752, label %2753, label %2736

2753:                                             ; preds = %2750, %2741, %2722
  %2754 = add nuw nsw i32 %2723, 1
  %2755 = load i16, ptr %2719, align 2
  %2756 = zext i16 %2755 to i32
  %2757 = icmp ult i32 %2754, %2756
  br i1 %2757, label %2722, label %2758

2758:                                             ; preds = %2753
  %2759 = load i16, ptr %2709, align 2
  br label %2760

2760:                                             ; preds = %2758, %2718, %2712
  %2761 = phi i16 [ %2759, %2758 ], [ %2713, %2718 ], [ %2713, %2712 ]
  %2762 = add nuw nsw i32 %2714, 1
  %2763 = zext i16 %2761 to i32
  %2764 = icmp ult i32 %2762, %2763
  br i1 %2764, label %2712, label %2765

2765:                                             ; preds = %2760, %2707, %2642
  %2766 = load i32, ptr %2632, align 4
  %2767 = add i32 %2766, -12000000
  %2768 = icmp ult i32 %2767, 10000001
  br i1 %2768, label %2769, label %2775

2769:                                             ; preds = %2765
  %2770 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 26, i32 noundef 3, i16 noundef zeroext 1) #12
  %2771 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 26, i32 noundef 3, i16 noundef zeroext 2) #12
  %2772 = add i16 %2770, %2644
  %2773 = add i16 %2772, %2771
  %2774 = load i32, ptr %2632, align 4
  br label %2775

2775:                                             ; preds = %2769, %2765
  %2776 = phi i32 [ %2774, %2769 ], [ %2766, %2765 ]
  %2777 = phi i16 [ %2773, %2769 ], [ %2644, %2765 ]
  %2778 = add i32 %2776, -22000001
  %2779 = icmp ult i32 %2778, 10000000
  br i1 %2779, label %2780, label %2898

2780:                                             ; preds = %2775
  %2781 = load ptr, ptr %2, align 4
  %2782 = getelementptr inbounds %struct.mxl5005s_state, ptr %2781, i32 0, i32 18
  %2783 = load i16, ptr %2782, align 4
  %2784 = icmp eq i16 %2783, 0
  br i1 %2784, label %2840, label %2785

2785:                                             ; preds = %2833, %2780
  %2786 = phi i16 [ %2834, %2833 ], [ %2783, %2780 ]
  %2787 = phi i32 [ %2835, %2833 ], [ 0, %2780 ]
  %2788 = getelementptr %struct.mxl5005s_state, ptr %2781, i32 0, i32 19, i32 %2787
  %2789 = load i16, ptr %2788, align 2
  %2790 = icmp eq i16 %2789, 26
  br i1 %2790, label %2791, label %2833

2791:                                             ; preds = %2785
  %2792 = getelementptr %struct.mxl5005s_state, ptr %2781, i32 0, i32 19, i32 %2787, i32 1
  %2793 = load i16, ptr %2792, align 2
  %2794 = icmp eq i16 %2793, 0
  br i1 %2794, label %2833, label %2795

2795:                                             ; preds = %2826, %2791
  %2796 = phi i32 [ %2827, %2826 ], [ 0, %2791 ]
  %2797 = getelementptr %struct.mxl5005s_state, ptr %2781, i32 0, i32 19, i32 %2787, i32 4, i32 %2796
  store i16 0, ptr %2797, align 2
  %2798 = getelementptr %struct.mxl5005s_state, ptr %2781, i32 0, i32 19, i32 %2787, i32 3, i32 %2796
  %2799 = load i16, ptr %2798, align 2
  %2800 = load ptr, ptr %2, align 4
  %2801 = getelementptr inbounds %struct.mxl5005s_state, ptr %2800, i32 0, i32 24
  %2802 = load i16, ptr %2801, align 4
  %2803 = zext i16 %2802 to i32
  %2804 = icmp eq i16 %2802, 0
  br i1 %2804, label %2826, label %2805

2805:                                             ; preds = %2795
  %2806 = getelementptr %struct.mxl5005s_state, ptr %2781, i32 0, i32 19, i32 %2787, i32 2, i32 %2796
  %2807 = load i16, ptr %2806, align 2
  %2808 = and i16 %2807, 255
  br label %2809

2809:                                             ; preds = %2823, %2805
  %2810 = phi i32 [ 0, %2805 ], [ %2824, %2823 ]
  %2811 = getelementptr %struct.mxl5005s_state, ptr %2800, i32 0, i32 25, i32 %2810
  %2812 = load i16, ptr %2811, align 2
  %2813 = icmp eq i16 %2812, %2808
  br i1 %2813, label %2814, label %2823

2814:                                             ; preds = %2809
  %2815 = and i16 %2799, 255
  %2816 = zext i16 %2815 to i32
  %2817 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2816
  %2818 = load i8, ptr %2817, align 1
  %2819 = zext i8 %2818 to i16
  %2820 = getelementptr %struct.mxl5005s_state, ptr %2800, i32 0, i32 25, i32 %2810, i32 1
  %2821 = load i16, ptr %2820, align 2
  %2822 = and i16 %2821, %2819
  store i16 %2822, ptr %2820, align 2
  br label %2826

2823:                                             ; preds = %2809
  %2824 = add nuw nsw i32 %2810, 1
  %2825 = icmp eq i32 %2824, %2803
  br i1 %2825, label %2826, label %2809

2826:                                             ; preds = %2823, %2814, %2795
  %2827 = add nuw nsw i32 %2796, 1
  %2828 = load i16, ptr %2792, align 2
  %2829 = zext i16 %2828 to i32
  %2830 = icmp ult i32 %2827, %2829
  br i1 %2830, label %2795, label %2831

2831:                                             ; preds = %2826
  %2832 = load i16, ptr %2782, align 4
  br label %2833

2833:                                             ; preds = %2831, %2791, %2785
  %2834 = phi i16 [ %2832, %2831 ], [ %2786, %2791 ], [ %2786, %2785 ]
  %2835 = add nuw nsw i32 %2787, 1
  %2836 = zext i16 %2834 to i32
  %2837 = icmp ult i32 %2835, %2836
  br i1 %2837, label %2785, label %2838

2838:                                             ; preds = %2833
  %2839 = load ptr, ptr %2, align 4
  br label %2840

2840:                                             ; preds = %2838, %2780
  %2841 = phi ptr [ %2839, %2838 ], [ %2781, %2780 ]
  %2842 = getelementptr inbounds %struct.mxl5005s_state, ptr %2841, i32 0, i32 20
  %2843 = load i16, ptr %2842, align 2
  %2844 = icmp eq i16 %2843, 0
  br i1 %2844, label %2898, label %2845

2845:                                             ; preds = %2893, %2840
  %2846 = phi i16 [ %2894, %2893 ], [ %2843, %2840 ]
  %2847 = phi i32 [ %2895, %2893 ], [ 0, %2840 ]
  %2848 = getelementptr %struct.mxl5005s_state, ptr %2841, i32 0, i32 21, i32 %2847
  %2849 = load i16, ptr %2848, align 2
  %2850 = icmp eq i16 %2849, 26
  br i1 %2850, label %2851, label %2893

2851:                                             ; preds = %2845
  %2852 = getelementptr %struct.mxl5005s_state, ptr %2841, i32 0, i32 21, i32 %2847, i32 1
  %2853 = load i16, ptr %2852, align 2
  %2854 = icmp eq i16 %2853, 0
  br i1 %2854, label %2893, label %2855

2855:                                             ; preds = %2886, %2851
  %2856 = phi i32 [ %2887, %2886 ], [ 0, %2851 ]
  %2857 = getelementptr %struct.mxl5005s_state, ptr %2841, i32 0, i32 21, i32 %2847, i32 4, i32 %2856
  store i16 0, ptr %2857, align 2
  %2858 = getelementptr %struct.mxl5005s_state, ptr %2841, i32 0, i32 21, i32 %2847, i32 3, i32 %2856
  %2859 = load i16, ptr %2858, align 2
  %2860 = load ptr, ptr %2, align 4
  %2861 = getelementptr inbounds %struct.mxl5005s_state, ptr %2860, i32 0, i32 24
  %2862 = load i16, ptr %2861, align 4
  %2863 = zext i16 %2862 to i32
  %2864 = icmp eq i16 %2862, 0
  br i1 %2864, label %2886, label %2865

2865:                                             ; preds = %2855
  %2866 = getelementptr %struct.mxl5005s_state, ptr %2841, i32 0, i32 21, i32 %2847, i32 2, i32 %2856
  %2867 = load i16, ptr %2866, align 2
  %2868 = and i16 %2867, 255
  br label %2869

2869:                                             ; preds = %2883, %2865
  %2870 = phi i32 [ 0, %2865 ], [ %2884, %2883 ]
  %2871 = getelementptr %struct.mxl5005s_state, ptr %2860, i32 0, i32 25, i32 %2870
  %2872 = load i16, ptr %2871, align 2
  %2873 = icmp eq i16 %2872, %2868
  br i1 %2873, label %2874, label %2883

2874:                                             ; preds = %2869
  %2875 = and i16 %2859, 255
  %2876 = zext i16 %2875 to i32
  %2877 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2876
  %2878 = load i8, ptr %2877, align 1
  %2879 = zext i8 %2878 to i16
  %2880 = getelementptr %struct.mxl5005s_state, ptr %2860, i32 0, i32 25, i32 %2870, i32 1
  %2881 = load i16, ptr %2880, align 2
  %2882 = and i16 %2881, %2879
  store i16 %2882, ptr %2880, align 2
  br label %2886

2883:                                             ; preds = %2869
  %2884 = add nuw nsw i32 %2870, 1
  %2885 = icmp eq i32 %2884, %2863
  br i1 %2885, label %2886, label %2869

2886:                                             ; preds = %2883, %2874, %2855
  %2887 = add nuw nsw i32 %2856, 1
  %2888 = load i16, ptr %2852, align 2
  %2889 = zext i16 %2888 to i32
  %2890 = icmp ult i32 %2887, %2889
  br i1 %2890, label %2855, label %2891

2891:                                             ; preds = %2886
  %2892 = load i16, ptr %2842, align 2
  br label %2893

2893:                                             ; preds = %2891, %2851, %2845
  %2894 = phi i16 [ %2892, %2891 ], [ %2846, %2851 ], [ %2846, %2845 ]
  %2895 = add nuw nsw i32 %2847, 1
  %2896 = zext i16 %2894 to i32
  %2897 = icmp ult i32 %2895, %2896
  br i1 %2897, label %2845, label %2898

2898:                                             ; preds = %2893, %2840, %2775
  %2899 = load i8, ptr %3, align 4
  %2900 = icmp eq i8 %2899, 0
  br i1 %2900, label %2901, label %3023

2901:                                             ; preds = %2898
  %2902 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 1
  %2903 = load i8, ptr %2902, align 1
  %2904 = icmp eq i8 %2903, 1
  br i1 %2904, label %2905, label %3023

2905:                                             ; preds = %2901
  %2906 = load ptr, ptr %2, align 4
  %2907 = getelementptr inbounds %struct.mxl5005s_state, ptr %2906, i32 0, i32 18
  %2908 = load i16, ptr %2907, align 4
  %2909 = icmp eq i16 %2908, 0
  br i1 %2909, label %2965, label %2910

2910:                                             ; preds = %2958, %2905
  %2911 = phi i16 [ %2959, %2958 ], [ %2908, %2905 ]
  %2912 = phi i32 [ %2960, %2958 ], [ 0, %2905 ]
  %2913 = getelementptr %struct.mxl5005s_state, ptr %2906, i32 0, i32 19, i32 %2912
  %2914 = load i16, ptr %2913, align 2
  %2915 = icmp eq i16 %2914, 36
  br i1 %2915, label %2916, label %2958

2916:                                             ; preds = %2910
  %2917 = getelementptr %struct.mxl5005s_state, ptr %2906, i32 0, i32 19, i32 %2912, i32 1
  %2918 = load i16, ptr %2917, align 2
  %2919 = icmp eq i16 %2918, 0
  br i1 %2919, label %2958, label %2920

2920:                                             ; preds = %2951, %2916
  %2921 = phi i32 [ %2952, %2951 ], [ 0, %2916 ]
  %2922 = getelementptr %struct.mxl5005s_state, ptr %2906, i32 0, i32 19, i32 %2912, i32 4, i32 %2921
  store i16 0, ptr %2922, align 2
  %2923 = getelementptr %struct.mxl5005s_state, ptr %2906, i32 0, i32 19, i32 %2912, i32 3, i32 %2921
  %2924 = load i16, ptr %2923, align 2
  %2925 = load ptr, ptr %2, align 4
  %2926 = getelementptr inbounds %struct.mxl5005s_state, ptr %2925, i32 0, i32 24
  %2927 = load i16, ptr %2926, align 4
  %2928 = zext i16 %2927 to i32
  %2929 = icmp eq i16 %2927, 0
  br i1 %2929, label %2951, label %2930

2930:                                             ; preds = %2920
  %2931 = getelementptr %struct.mxl5005s_state, ptr %2906, i32 0, i32 19, i32 %2912, i32 2, i32 %2921
  %2932 = load i16, ptr %2931, align 2
  %2933 = and i16 %2932, 255
  br label %2934

2934:                                             ; preds = %2948, %2930
  %2935 = phi i32 [ 0, %2930 ], [ %2949, %2948 ]
  %2936 = getelementptr %struct.mxl5005s_state, ptr %2925, i32 0, i32 25, i32 %2935
  %2937 = load i16, ptr %2936, align 2
  %2938 = icmp eq i16 %2937, %2933
  br i1 %2938, label %2939, label %2948

2939:                                             ; preds = %2934
  %2940 = and i16 %2924, 255
  %2941 = zext i16 %2940 to i32
  %2942 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2941
  %2943 = load i8, ptr %2942, align 1
  %2944 = zext i8 %2943 to i16
  %2945 = getelementptr %struct.mxl5005s_state, ptr %2925, i32 0, i32 25, i32 %2935, i32 1
  %2946 = load i16, ptr %2945, align 2
  %2947 = and i16 %2946, %2944
  store i16 %2947, ptr %2945, align 2
  br label %2951

2948:                                             ; preds = %2934
  %2949 = add nuw nsw i32 %2935, 1
  %2950 = icmp eq i32 %2949, %2928
  br i1 %2950, label %2951, label %2934

2951:                                             ; preds = %2948, %2939, %2920
  %2952 = add nuw nsw i32 %2921, 1
  %2953 = load i16, ptr %2917, align 2
  %2954 = zext i16 %2953 to i32
  %2955 = icmp ult i32 %2952, %2954
  br i1 %2955, label %2920, label %2956

2956:                                             ; preds = %2951
  %2957 = load i16, ptr %2907, align 4
  br label %2958

2958:                                             ; preds = %2956, %2916, %2910
  %2959 = phi i16 [ %2957, %2956 ], [ %2911, %2916 ], [ %2911, %2910 ]
  %2960 = add nuw nsw i32 %2912, 1
  %2961 = zext i16 %2959 to i32
  %2962 = icmp ult i32 %2960, %2961
  br i1 %2962, label %2910, label %2963

2963:                                             ; preds = %2958
  %2964 = load ptr, ptr %2, align 4
  br label %2965

2965:                                             ; preds = %2963, %2905
  %2966 = phi ptr [ %2964, %2963 ], [ %2906, %2905 ]
  %2967 = getelementptr inbounds %struct.mxl5005s_state, ptr %2966, i32 0, i32 20
  %2968 = load i16, ptr %2967, align 2
  %2969 = icmp eq i16 %2968, 0
  br i1 %2969, label %3027, label %2970

2970:                                             ; preds = %3018, %2965
  %2971 = phi i16 [ %3019, %3018 ], [ %2968, %2965 ]
  %2972 = phi i32 [ %3020, %3018 ], [ 0, %2965 ]
  %2973 = getelementptr %struct.mxl5005s_state, ptr %2966, i32 0, i32 21, i32 %2972
  %2974 = load i16, ptr %2973, align 2
  %2975 = icmp eq i16 %2974, 36
  br i1 %2975, label %2976, label %3018

2976:                                             ; preds = %2970
  %2977 = getelementptr %struct.mxl5005s_state, ptr %2966, i32 0, i32 21, i32 %2972, i32 1
  %2978 = load i16, ptr %2977, align 2
  %2979 = icmp eq i16 %2978, 0
  br i1 %2979, label %3018, label %2980

2980:                                             ; preds = %3011, %2976
  %2981 = phi i32 [ %3012, %3011 ], [ 0, %2976 ]
  %2982 = getelementptr %struct.mxl5005s_state, ptr %2966, i32 0, i32 21, i32 %2972, i32 4, i32 %2981
  store i16 0, ptr %2982, align 2
  %2983 = getelementptr %struct.mxl5005s_state, ptr %2966, i32 0, i32 21, i32 %2972, i32 3, i32 %2981
  %2984 = load i16, ptr %2983, align 2
  %2985 = load ptr, ptr %2, align 4
  %2986 = getelementptr inbounds %struct.mxl5005s_state, ptr %2985, i32 0, i32 24
  %2987 = load i16, ptr %2986, align 4
  %2988 = zext i16 %2987 to i32
  %2989 = icmp eq i16 %2987, 0
  br i1 %2989, label %3011, label %2990

2990:                                             ; preds = %2980
  %2991 = getelementptr %struct.mxl5005s_state, ptr %2966, i32 0, i32 21, i32 %2972, i32 2, i32 %2981
  %2992 = load i16, ptr %2991, align 2
  %2993 = and i16 %2992, 255
  br label %2994

2994:                                             ; preds = %3008, %2990
  %2995 = phi i32 [ 0, %2990 ], [ %3009, %3008 ]
  %2996 = getelementptr %struct.mxl5005s_state, ptr %2985, i32 0, i32 25, i32 %2995
  %2997 = load i16, ptr %2996, align 2
  %2998 = icmp eq i16 %2997, %2993
  br i1 %2998, label %2999, label %3008

2999:                                             ; preds = %2994
  %3000 = and i16 %2984, 255
  %3001 = zext i16 %3000 to i32
  %3002 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3001
  %3003 = load i8, ptr %3002, align 1
  %3004 = zext i8 %3003 to i16
  %3005 = getelementptr %struct.mxl5005s_state, ptr %2985, i32 0, i32 25, i32 %2995, i32 1
  %3006 = load i16, ptr %3005, align 2
  %3007 = and i16 %3006, %3004
  store i16 %3007, ptr %3005, align 2
  br label %3011

3008:                                             ; preds = %2994
  %3009 = add nuw nsw i32 %2995, 1
  %3010 = icmp eq i32 %3009, %2988
  br i1 %3010, label %3011, label %2994

3011:                                             ; preds = %3008, %2999, %2980
  %3012 = add nuw nsw i32 %2981, 1
  %3013 = load i16, ptr %2977, align 2
  %3014 = zext i16 %3013 to i32
  %3015 = icmp ult i32 %3012, %3014
  br i1 %3015, label %2980, label %3016

3016:                                             ; preds = %3011
  %3017 = load i16, ptr %2967, align 2
  br label %3018

3018:                                             ; preds = %3016, %2976, %2970
  %3019 = phi i16 [ %3017, %3016 ], [ %2971, %2976 ], [ %2971, %2970 ]
  %3020 = add nuw nsw i32 %2972, 1
  %3021 = zext i16 %3019 to i32
  %3022 = icmp ult i32 %3020, %3021
  br i1 %3022, label %2970, label %3027

3023:                                             ; preds = %2901, %2898
  %3024 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 36, i32 noundef 1, i16 noundef zeroext 1) #12
  %3025 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 36, i32 noundef 1, i16 noundef zeroext 2) #12
  %3026 = add i16 %3025, %3024
  br label %3027

3027:                                             ; preds = %3023, %3018, %2965
  %3028 = phi i16 [ %3026, %3023 ], [ 0, %2965 ], [ 0, %3018 ]
  %3029 = load i32, ptr %2632, align 4
  %3030 = freeze i32 %3029
  %3031 = udiv i32 %3030, 1000000
  %3032 = mul i32 %3031, 1000000
  %3033 = sub i32 %3030, %3032
  %3034 = icmp ne i32 %3033, 0
  %3035 = zext i1 %3034 to i32
  %3036 = add nuw nsw i32 %3031, %3035
  %3037 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 39, i32 noundef %3036, i16 noundef zeroext 1) #12
  %3038 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 39, i32 noundef %3036, i16 noundef zeroext 2) #12
  %3039 = add i16 %3028, %2777
  %3040 = add i16 %3039, %3037
  %3041 = add i16 %3040, %3038
  %3042 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 12
  %3043 = load i8, ptr %3042, align 1
  %3044 = icmp eq i8 %3043, 0
  br i1 %3044, label %3196, label %3045

3045:                                             ; preds = %3027
  %3046 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %3047 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %3048 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %3049 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %3050 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 1) #12
  %3051 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 2) #12
  %3052 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %3053 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %3054 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 2, i16 noundef zeroext 1) #12
  %3055 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 2, i16 noundef zeroext 2) #12
  %3056 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 3, i16 noundef zeroext 1) #12
  %3057 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 3, i16 noundef zeroext 2) #12
  %3058 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 1, i16 noundef zeroext 1) #12
  %3059 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 1, i16 noundef zeroext 2) #12
  %3060 = load ptr, ptr %2, align 4
  %3061 = getelementptr inbounds %struct.mxl5005s_state, ptr %3060, i32 0, i32 18
  %3062 = load i16, ptr %3061, align 4
  %3063 = icmp eq i16 %3062, 0
  br i1 %3063, label %3119, label %3064

3064:                                             ; preds = %3112, %3045
  %3065 = phi i16 [ %3113, %3112 ], [ %3062, %3045 ]
  %3066 = phi i32 [ %3114, %3112 ], [ 0, %3045 ]
  %3067 = getelementptr %struct.mxl5005s_state, ptr %3060, i32 0, i32 19, i32 %3066
  %3068 = load i16, ptr %3067, align 2
  %3069 = icmp eq i16 %3068, 34
  br i1 %3069, label %3070, label %3112

3070:                                             ; preds = %3064
  %3071 = getelementptr %struct.mxl5005s_state, ptr %3060, i32 0, i32 19, i32 %3066, i32 1
  %3072 = load i16, ptr %3071, align 2
  %3073 = icmp eq i16 %3072, 0
  br i1 %3073, label %3112, label %3074

3074:                                             ; preds = %3105, %3070
  %3075 = phi i32 [ %3106, %3105 ], [ 0, %3070 ]
  %3076 = getelementptr %struct.mxl5005s_state, ptr %3060, i32 0, i32 19, i32 %3066, i32 4, i32 %3075
  store i16 0, ptr %3076, align 2
  %3077 = getelementptr %struct.mxl5005s_state, ptr %3060, i32 0, i32 19, i32 %3066, i32 3, i32 %3075
  %3078 = load i16, ptr %3077, align 2
  %3079 = load ptr, ptr %2, align 4
  %3080 = getelementptr inbounds %struct.mxl5005s_state, ptr %3079, i32 0, i32 24
  %3081 = load i16, ptr %3080, align 4
  %3082 = zext i16 %3081 to i32
  %3083 = icmp eq i16 %3081, 0
  br i1 %3083, label %3105, label %3084

3084:                                             ; preds = %3074
  %3085 = getelementptr %struct.mxl5005s_state, ptr %3060, i32 0, i32 19, i32 %3066, i32 2, i32 %3075
  %3086 = load i16, ptr %3085, align 2
  %3087 = and i16 %3086, 255
  br label %3088

3088:                                             ; preds = %3102, %3084
  %3089 = phi i32 [ 0, %3084 ], [ %3103, %3102 ]
  %3090 = getelementptr %struct.mxl5005s_state, ptr %3079, i32 0, i32 25, i32 %3089
  %3091 = load i16, ptr %3090, align 2
  %3092 = icmp eq i16 %3091, %3087
  br i1 %3092, label %3093, label %3102

3093:                                             ; preds = %3088
  %3094 = and i16 %3078, 255
  %3095 = zext i16 %3094 to i32
  %3096 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3095
  %3097 = load i8, ptr %3096, align 1
  %3098 = zext i8 %3097 to i16
  %3099 = getelementptr %struct.mxl5005s_state, ptr %3079, i32 0, i32 25, i32 %3089, i32 1
  %3100 = load i16, ptr %3099, align 2
  %3101 = and i16 %3100, %3098
  store i16 %3101, ptr %3099, align 2
  br label %3105

3102:                                             ; preds = %3088
  %3103 = add nuw nsw i32 %3089, 1
  %3104 = icmp eq i32 %3103, %3082
  br i1 %3104, label %3105, label %3088

3105:                                             ; preds = %3102, %3093, %3074
  %3106 = add nuw nsw i32 %3075, 1
  %3107 = load i16, ptr %3071, align 2
  %3108 = zext i16 %3107 to i32
  %3109 = icmp ult i32 %3106, %3108
  br i1 %3109, label %3074, label %3110

3110:                                             ; preds = %3105
  %3111 = load i16, ptr %3061, align 4
  br label %3112

3112:                                             ; preds = %3110, %3070, %3064
  %3113 = phi i16 [ %3111, %3110 ], [ %3065, %3070 ], [ %3065, %3064 ]
  %3114 = add nuw nsw i32 %3066, 1
  %3115 = zext i16 %3113 to i32
  %3116 = icmp ult i32 %3114, %3115
  br i1 %3116, label %3064, label %3117

3117:                                             ; preds = %3112
  %3118 = load ptr, ptr %2, align 4
  br label %3119

3119:                                             ; preds = %3117, %3045
  %3120 = phi ptr [ %3118, %3117 ], [ %3060, %3045 ]
  %3121 = getelementptr inbounds %struct.mxl5005s_state, ptr %3120, i32 0, i32 20
  %3122 = load i16, ptr %3121, align 2
  %3123 = icmp eq i16 %3122, 0
  br i1 %3123, label %3177, label %3124

3124:                                             ; preds = %3172, %3119
  %3125 = phi i16 [ %3173, %3172 ], [ %3122, %3119 ]
  %3126 = phi i32 [ %3174, %3172 ], [ 0, %3119 ]
  %3127 = getelementptr %struct.mxl5005s_state, ptr %3120, i32 0, i32 21, i32 %3126
  %3128 = load i16, ptr %3127, align 2
  %3129 = icmp eq i16 %3128, 34
  br i1 %3129, label %3130, label %3172

3130:                                             ; preds = %3124
  %3131 = getelementptr %struct.mxl5005s_state, ptr %3120, i32 0, i32 21, i32 %3126, i32 1
  %3132 = load i16, ptr %3131, align 2
  %3133 = icmp eq i16 %3132, 0
  br i1 %3133, label %3172, label %3134

3134:                                             ; preds = %3165, %3130
  %3135 = phi i32 [ %3166, %3165 ], [ 0, %3130 ]
  %3136 = getelementptr %struct.mxl5005s_state, ptr %3120, i32 0, i32 21, i32 %3126, i32 4, i32 %3135
  store i16 0, ptr %3136, align 2
  %3137 = getelementptr %struct.mxl5005s_state, ptr %3120, i32 0, i32 21, i32 %3126, i32 3, i32 %3135
  %3138 = load i16, ptr %3137, align 2
  %3139 = load ptr, ptr %2, align 4
  %3140 = getelementptr inbounds %struct.mxl5005s_state, ptr %3139, i32 0, i32 24
  %3141 = load i16, ptr %3140, align 4
  %3142 = zext i16 %3141 to i32
  %3143 = icmp eq i16 %3141, 0
  br i1 %3143, label %3165, label %3144

3144:                                             ; preds = %3134
  %3145 = getelementptr %struct.mxl5005s_state, ptr %3120, i32 0, i32 21, i32 %3126, i32 2, i32 %3135
  %3146 = load i16, ptr %3145, align 2
  %3147 = and i16 %3146, 255
  br label %3148

3148:                                             ; preds = %3162, %3144
  %3149 = phi i32 [ 0, %3144 ], [ %3163, %3162 ]
  %3150 = getelementptr %struct.mxl5005s_state, ptr %3139, i32 0, i32 25, i32 %3149
  %3151 = load i16, ptr %3150, align 2
  %3152 = icmp eq i16 %3151, %3147
  br i1 %3152, label %3153, label %3162

3153:                                             ; preds = %3148
  %3154 = and i16 %3138, 255
  %3155 = zext i16 %3154 to i32
  %3156 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3155
  %3157 = load i8, ptr %3156, align 1
  %3158 = zext i8 %3157 to i16
  %3159 = getelementptr %struct.mxl5005s_state, ptr %3139, i32 0, i32 25, i32 %3149, i32 1
  %3160 = load i16, ptr %3159, align 2
  %3161 = and i16 %3160, %3158
  store i16 %3161, ptr %3159, align 2
  br label %3165

3162:                                             ; preds = %3148
  %3163 = add nuw nsw i32 %3149, 1
  %3164 = icmp eq i32 %3163, %3142
  br i1 %3164, label %3165, label %3148

3165:                                             ; preds = %3162, %3153, %3134
  %3166 = add nuw nsw i32 %3135, 1
  %3167 = load i16, ptr %3131, align 2
  %3168 = zext i16 %3167 to i32
  %3169 = icmp ult i32 %3166, %3168
  br i1 %3169, label %3134, label %3170

3170:                                             ; preds = %3165
  %3171 = load i16, ptr %3121, align 2
  br label %3172

3172:                                             ; preds = %3170, %3130, %3124
  %3173 = phi i16 [ %3171, %3170 ], [ %3125, %3130 ], [ %3125, %3124 ]
  %3174 = add nuw nsw i32 %3126, 1
  %3175 = zext i16 %3173 to i32
  %3176 = icmp ult i32 %3174, %3175
  br i1 %3176, label %3124, label %3177

3177:                                             ; preds = %3172, %3119
  %3178 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 35, i32 noundef 12, i16 noundef zeroext 1) #12
  %3179 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 35, i32 noundef 12, i16 noundef zeroext 2) #12
  %3180 = add i16 %3046, %3041
  %3181 = add i16 %3180, %3047
  %3182 = add i16 %3181, %3048
  %3183 = add i16 %3182, %3049
  %3184 = add i16 %3183, %3050
  %3185 = add i16 %3184, %3051
  %3186 = add i16 %3185, %3052
  %3187 = add i16 %3186, %3053
  %3188 = add i16 %3187, %3054
  %3189 = add i16 %3188, %3055
  %3190 = add i16 %3189, %3056
  %3191 = add i16 %3190, %3057
  %3192 = add i16 %3191, %3058
  %3193 = add i16 %3192, %3059
  %3194 = add i16 %3193, %3178
  %3195 = add i16 %3194, %3179
  br label %3196

3196:                                             ; preds = %3177, %3027
  %3197 = phi i16 [ %3195, %3177 ], [ %3041, %3027 ]
  %3198 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 13
  %3199 = load i8, ptr %3198, align 4
  %3200 = icmp eq i8 %3199, 1
  br i1 %3200, label %3201, label %3367

3201:                                             ; preds = %3196
  store i8 1, ptr %464, align 4
  %3202 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %3203 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %3204 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %3205 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %3206 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 1) #12
  %3207 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 2) #12
  %3208 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %3209 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %3210 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 1) #12
  %3211 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 2) #12
  %3212 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 1) #12
  %3213 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 2) #12
  %3214 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 1, i16 noundef zeroext 1) #12
  %3215 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 1, i16 noundef zeroext 2) #12
  %3216 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 34, i32 noundef 2, i16 noundef zeroext 1) #12
  %3217 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 34, i32 noundef 2, i16 noundef zeroext 2) #12
  %3218 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 35, i32 noundef 13, i16 noundef zeroext 1) #12
  %3219 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 35, i32 noundef 13, i16 noundef zeroext 2) #12
  %3220 = add i16 %3202, %3197
  %3221 = add i16 %3220, %3203
  %3222 = add i16 %3221, %3204
  %3223 = add i16 %3222, %3205
  %3224 = add i16 %3223, %3206
  %3225 = add i16 %3224, %3207
  %3226 = add i16 %3225, %3208
  %3227 = add i16 %3226, %3209
  %3228 = add i16 %3227, %3210
  %3229 = add i16 %3228, %3211
  %3230 = add i16 %3229, %3212
  %3231 = add i16 %3230, %3213
  %3232 = add i16 %3231, %3214
  %3233 = add i16 %3232, %3215
  %3234 = add i16 %3233, %3216
  %3235 = add i16 %3234, %3217
  %3236 = add i16 %3235, %3218
  %3237 = add i16 %3236, %3219
  %3238 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 3
  %3239 = load i32, ptr %3238, align 4
  %3240 = icmp ult i32 %3239, 6280001
  br i1 %3240, label %3241, label %3359

3241:                                             ; preds = %3201
  %3242 = load ptr, ptr %2, align 4
  %3243 = getelementptr inbounds %struct.mxl5005s_state, ptr %3242, i32 0, i32 18
  %3244 = load i16, ptr %3243, align 4
  %3245 = icmp eq i16 %3244, 0
  br i1 %3245, label %3301, label %3246

3246:                                             ; preds = %3294, %3241
  %3247 = phi i16 [ %3295, %3294 ], [ %3244, %3241 ]
  %3248 = phi i32 [ %3296, %3294 ], [ 0, %3241 ]
  %3249 = getelementptr %struct.mxl5005s_state, ptr %3242, i32 0, i32 19, i32 %3248
  %3250 = load i16, ptr %3249, align 2
  %3251 = icmp eq i16 %3250, 6
  br i1 %3251, label %3252, label %3294

3252:                                             ; preds = %3246
  %3253 = getelementptr %struct.mxl5005s_state, ptr %3242, i32 0, i32 19, i32 %3248, i32 1
  %3254 = load i16, ptr %3253, align 2
  %3255 = icmp eq i16 %3254, 0
  br i1 %3255, label %3294, label %3256

3256:                                             ; preds = %3287, %3252
  %3257 = phi i32 [ %3288, %3287 ], [ 0, %3252 ]
  %3258 = getelementptr %struct.mxl5005s_state, ptr %3242, i32 0, i32 19, i32 %3248, i32 4, i32 %3257
  store i16 0, ptr %3258, align 2
  %3259 = getelementptr %struct.mxl5005s_state, ptr %3242, i32 0, i32 19, i32 %3248, i32 3, i32 %3257
  %3260 = load i16, ptr %3259, align 2
  %3261 = load ptr, ptr %2, align 4
  %3262 = getelementptr inbounds %struct.mxl5005s_state, ptr %3261, i32 0, i32 24
  %3263 = load i16, ptr %3262, align 4
  %3264 = zext i16 %3263 to i32
  %3265 = icmp eq i16 %3263, 0
  br i1 %3265, label %3287, label %3266

3266:                                             ; preds = %3256
  %3267 = getelementptr %struct.mxl5005s_state, ptr %3242, i32 0, i32 19, i32 %3248, i32 2, i32 %3257
  %3268 = load i16, ptr %3267, align 2
  %3269 = and i16 %3268, 255
  br label %3270

3270:                                             ; preds = %3284, %3266
  %3271 = phi i32 [ 0, %3266 ], [ %3285, %3284 ]
  %3272 = getelementptr %struct.mxl5005s_state, ptr %3261, i32 0, i32 25, i32 %3271
  %3273 = load i16, ptr %3272, align 2
  %3274 = icmp eq i16 %3273, %3269
  br i1 %3274, label %3275, label %3284

3275:                                             ; preds = %3270
  %3276 = and i16 %3260, 255
  %3277 = zext i16 %3276 to i32
  %3278 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3277
  %3279 = load i8, ptr %3278, align 1
  %3280 = zext i8 %3279 to i16
  %3281 = getelementptr %struct.mxl5005s_state, ptr %3261, i32 0, i32 25, i32 %3271, i32 1
  %3282 = load i16, ptr %3281, align 2
  %3283 = and i16 %3282, %3280
  store i16 %3283, ptr %3281, align 2
  br label %3287

3284:                                             ; preds = %3270
  %3285 = add nuw nsw i32 %3271, 1
  %3286 = icmp eq i32 %3285, %3264
  br i1 %3286, label %3287, label %3270

3287:                                             ; preds = %3284, %3275, %3256
  %3288 = add nuw nsw i32 %3257, 1
  %3289 = load i16, ptr %3253, align 2
  %3290 = zext i16 %3289 to i32
  %3291 = icmp ult i32 %3288, %3290
  br i1 %3291, label %3256, label %3292

3292:                                             ; preds = %3287
  %3293 = load i16, ptr %3243, align 4
  br label %3294

3294:                                             ; preds = %3292, %3252, %3246
  %3295 = phi i16 [ %3293, %3292 ], [ %3247, %3252 ], [ %3247, %3246 ]
  %3296 = add nuw nsw i32 %3248, 1
  %3297 = zext i16 %3295 to i32
  %3298 = icmp ult i32 %3296, %3297
  br i1 %3298, label %3246, label %3299

3299:                                             ; preds = %3294
  %3300 = load ptr, ptr %2, align 4
  br label %3301

3301:                                             ; preds = %3299, %3241
  %3302 = phi ptr [ %3300, %3299 ], [ %3242, %3241 ]
  %3303 = getelementptr inbounds %struct.mxl5005s_state, ptr %3302, i32 0, i32 20
  %3304 = load i16, ptr %3303, align 2
  %3305 = icmp eq i16 %3304, 0
  br i1 %3305, label %3364, label %3306

3306:                                             ; preds = %3354, %3301
  %3307 = phi i16 [ %3355, %3354 ], [ %3304, %3301 ]
  %3308 = phi i32 [ %3356, %3354 ], [ 0, %3301 ]
  %3309 = getelementptr %struct.mxl5005s_state, ptr %3302, i32 0, i32 21, i32 %3308
  %3310 = load i16, ptr %3309, align 2
  %3311 = icmp eq i16 %3310, 6
  br i1 %3311, label %3312, label %3354

3312:                                             ; preds = %3306
  %3313 = getelementptr %struct.mxl5005s_state, ptr %3302, i32 0, i32 21, i32 %3308, i32 1
  %3314 = load i16, ptr %3313, align 2
  %3315 = icmp eq i16 %3314, 0
  br i1 %3315, label %3354, label %3316

3316:                                             ; preds = %3347, %3312
  %3317 = phi i32 [ %3348, %3347 ], [ 0, %3312 ]
  %3318 = getelementptr %struct.mxl5005s_state, ptr %3302, i32 0, i32 21, i32 %3308, i32 4, i32 %3317
  store i16 0, ptr %3318, align 2
  %3319 = getelementptr %struct.mxl5005s_state, ptr %3302, i32 0, i32 21, i32 %3308, i32 3, i32 %3317
  %3320 = load i16, ptr %3319, align 2
  %3321 = load ptr, ptr %2, align 4
  %3322 = getelementptr inbounds %struct.mxl5005s_state, ptr %3321, i32 0, i32 24
  %3323 = load i16, ptr %3322, align 4
  %3324 = zext i16 %3323 to i32
  %3325 = icmp eq i16 %3323, 0
  br i1 %3325, label %3347, label %3326

3326:                                             ; preds = %3316
  %3327 = getelementptr %struct.mxl5005s_state, ptr %3302, i32 0, i32 21, i32 %3308, i32 2, i32 %3317
  %3328 = load i16, ptr %3327, align 2
  %3329 = and i16 %3328, 255
  br label %3330

3330:                                             ; preds = %3344, %3326
  %3331 = phi i32 [ 0, %3326 ], [ %3345, %3344 ]
  %3332 = getelementptr %struct.mxl5005s_state, ptr %3321, i32 0, i32 25, i32 %3331
  %3333 = load i16, ptr %3332, align 2
  %3334 = icmp eq i16 %3333, %3329
  br i1 %3334, label %3335, label %3344

3335:                                             ; preds = %3330
  %3336 = and i16 %3320, 255
  %3337 = zext i16 %3336 to i32
  %3338 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3337
  %3339 = load i8, ptr %3338, align 1
  %3340 = zext i8 %3339 to i16
  %3341 = getelementptr %struct.mxl5005s_state, ptr %3321, i32 0, i32 25, i32 %3331, i32 1
  %3342 = load i16, ptr %3341, align 2
  %3343 = and i16 %3342, %3340
  store i16 %3343, ptr %3341, align 2
  br label %3347

3344:                                             ; preds = %3330
  %3345 = add nuw nsw i32 %3331, 1
  %3346 = icmp eq i32 %3345, %3324
  br i1 %3346, label %3347, label %3330

3347:                                             ; preds = %3344, %3335, %3316
  %3348 = add nuw nsw i32 %3317, 1
  %3349 = load i16, ptr %3313, align 2
  %3350 = zext i16 %3349 to i32
  %3351 = icmp ult i32 %3348, %3350
  br i1 %3351, label %3316, label %3352

3352:                                             ; preds = %3347
  %3353 = load i16, ptr %3303, align 2
  br label %3354

3354:                                             ; preds = %3352, %3312, %3306
  %3355 = phi i16 [ %3353, %3352 ], [ %3307, %3312 ], [ %3307, %3306 ]
  %3356 = add nuw nsw i32 %3308, 1
  %3357 = zext i16 %3355 to i32
  %3358 = icmp ult i32 %3356, %3357
  br i1 %3358, label %3306, label %3364

3359:                                             ; preds = %3201
  %3360 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 1) #12
  %3361 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 2) #12
  %3362 = add i16 %3360, %3237
  %3363 = add i16 %3362, %3361
  br label %3364

3364:                                             ; preds = %3359, %3354, %3301
  %3365 = phi i16 [ %3237, %3301 ], [ %3363, %3359 ], [ %3237, %3354 ]
  %3366 = load i8, ptr %3198, align 4
  br label %3367

3367:                                             ; preds = %3364, %3196
  %3368 = phi i8 [ %3366, %3364 ], [ %3199, %3196 ]
  %3369 = phi i16 [ %3365, %3364 ], [ %3197, %3196 ]
  %3370 = icmp eq i8 %3368, 2
  br i1 %3370, label %3371, label %3542

3371:                                             ; preds = %3367
  store i8 1, ptr %464, align 4
  %3372 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %3373 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %3374 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %3375 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %3376 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 1) #12
  %3377 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 2) #12
  %3378 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %3379 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %3380 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 2, i16 noundef zeroext 1) #12
  %3381 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 2, i16 noundef zeroext 2) #12
  %3382 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 4, i16 noundef zeroext 1) #12
  %3383 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 4, i16 noundef zeroext 2) #12
  %3384 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 1, i16 noundef zeroext 1) #12
  %3385 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 1, i16 noundef zeroext 2) #12
  %3386 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 34, i32 noundef 2, i16 noundef zeroext 1) #12
  %3387 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 34, i32 noundef 2, i16 noundef zeroext 2) #12
  %3388 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 35, i32 noundef 13, i16 noundef zeroext 1) #12
  %3389 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 35, i32 noundef 13, i16 noundef zeroext 2) #12
  %3390 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 38, i32 noundef 1, i16 noundef zeroext 1) #12
  %3391 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 38, i32 noundef 1, i16 noundef zeroext 2) #12
  %3392 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 5, i16 noundef zeroext 1) #12
  %3393 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 5, i16 noundef zeroext 2) #12
  %3394 = add i16 %3372, %3369
  %3395 = add i16 %3394, %3373
  %3396 = add i16 %3395, %3374
  %3397 = add i16 %3396, %3375
  %3398 = add i16 %3397, %3376
  %3399 = add i16 %3398, %3377
  %3400 = add i16 %3399, %3378
  %3401 = add i16 %3400, %3379
  %3402 = add i16 %3401, %3380
  %3403 = add i16 %3402, %3381
  %3404 = add i16 %3403, %3382
  %3405 = add i16 %3404, %3383
  %3406 = add i16 %3405, %3384
  %3407 = add i16 %3406, %3385
  %3408 = add i16 %3407, %3386
  %3409 = add i16 %3408, %3387
  %3410 = add i16 %3409, %3388
  %3411 = add i16 %3410, %3389
  %3412 = add i16 %3411, %3390
  %3413 = add i16 %3412, %3391
  %3414 = add i16 %3413, %3392
  %3415 = add i16 %3414, %3393
  %3416 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 3
  %3417 = load i32, ptr %3416, align 4
  %3418 = icmp ult i32 %3417, 6280001
  br i1 %3418, label %3419, label %3537

3419:                                             ; preds = %3371
  %3420 = load ptr, ptr %2, align 4
  %3421 = getelementptr inbounds %struct.mxl5005s_state, ptr %3420, i32 0, i32 18
  %3422 = load i16, ptr %3421, align 4
  %3423 = icmp eq i16 %3422, 0
  br i1 %3423, label %3479, label %3424

3424:                                             ; preds = %3472, %3419
  %3425 = phi i16 [ %3473, %3472 ], [ %3422, %3419 ]
  %3426 = phi i32 [ %3474, %3472 ], [ 0, %3419 ]
  %3427 = getelementptr %struct.mxl5005s_state, ptr %3420, i32 0, i32 19, i32 %3426
  %3428 = load i16, ptr %3427, align 2
  %3429 = icmp eq i16 %3428, 6
  br i1 %3429, label %3430, label %3472

3430:                                             ; preds = %3424
  %3431 = getelementptr %struct.mxl5005s_state, ptr %3420, i32 0, i32 19, i32 %3426, i32 1
  %3432 = load i16, ptr %3431, align 2
  %3433 = icmp eq i16 %3432, 0
  br i1 %3433, label %3472, label %3434

3434:                                             ; preds = %3465, %3430
  %3435 = phi i32 [ %3466, %3465 ], [ 0, %3430 ]
  %3436 = getelementptr %struct.mxl5005s_state, ptr %3420, i32 0, i32 19, i32 %3426, i32 4, i32 %3435
  store i16 0, ptr %3436, align 2
  %3437 = getelementptr %struct.mxl5005s_state, ptr %3420, i32 0, i32 19, i32 %3426, i32 3, i32 %3435
  %3438 = load i16, ptr %3437, align 2
  %3439 = load ptr, ptr %2, align 4
  %3440 = getelementptr inbounds %struct.mxl5005s_state, ptr %3439, i32 0, i32 24
  %3441 = load i16, ptr %3440, align 4
  %3442 = zext i16 %3441 to i32
  %3443 = icmp eq i16 %3441, 0
  br i1 %3443, label %3465, label %3444

3444:                                             ; preds = %3434
  %3445 = getelementptr %struct.mxl5005s_state, ptr %3420, i32 0, i32 19, i32 %3426, i32 2, i32 %3435
  %3446 = load i16, ptr %3445, align 2
  %3447 = and i16 %3446, 255
  br label %3448

3448:                                             ; preds = %3462, %3444
  %3449 = phi i32 [ 0, %3444 ], [ %3463, %3462 ]
  %3450 = getelementptr %struct.mxl5005s_state, ptr %3439, i32 0, i32 25, i32 %3449
  %3451 = load i16, ptr %3450, align 2
  %3452 = icmp eq i16 %3451, %3447
  br i1 %3452, label %3453, label %3462

3453:                                             ; preds = %3448
  %3454 = and i16 %3438, 255
  %3455 = zext i16 %3454 to i32
  %3456 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3455
  %3457 = load i8, ptr %3456, align 1
  %3458 = zext i8 %3457 to i16
  %3459 = getelementptr %struct.mxl5005s_state, ptr %3439, i32 0, i32 25, i32 %3449, i32 1
  %3460 = load i16, ptr %3459, align 2
  %3461 = and i16 %3460, %3458
  store i16 %3461, ptr %3459, align 2
  br label %3465

3462:                                             ; preds = %3448
  %3463 = add nuw nsw i32 %3449, 1
  %3464 = icmp eq i32 %3463, %3442
  br i1 %3464, label %3465, label %3448

3465:                                             ; preds = %3462, %3453, %3434
  %3466 = add nuw nsw i32 %3435, 1
  %3467 = load i16, ptr %3431, align 2
  %3468 = zext i16 %3467 to i32
  %3469 = icmp ult i32 %3466, %3468
  br i1 %3469, label %3434, label %3470

3470:                                             ; preds = %3465
  %3471 = load i16, ptr %3421, align 4
  br label %3472

3472:                                             ; preds = %3470, %3430, %3424
  %3473 = phi i16 [ %3471, %3470 ], [ %3425, %3430 ], [ %3425, %3424 ]
  %3474 = add nuw nsw i32 %3426, 1
  %3475 = zext i16 %3473 to i32
  %3476 = icmp ult i32 %3474, %3475
  br i1 %3476, label %3424, label %3477

3477:                                             ; preds = %3472
  %3478 = load ptr, ptr %2, align 4
  br label %3479

3479:                                             ; preds = %3477, %3419
  %3480 = phi ptr [ %3478, %3477 ], [ %3420, %3419 ]
  %3481 = getelementptr inbounds %struct.mxl5005s_state, ptr %3480, i32 0, i32 20
  %3482 = load i16, ptr %3481, align 2
  %3483 = icmp eq i16 %3482, 0
  br i1 %3483, label %3542, label %3484

3484:                                             ; preds = %3532, %3479
  %3485 = phi i16 [ %3533, %3532 ], [ %3482, %3479 ]
  %3486 = phi i32 [ %3534, %3532 ], [ 0, %3479 ]
  %3487 = getelementptr %struct.mxl5005s_state, ptr %3480, i32 0, i32 21, i32 %3486
  %3488 = load i16, ptr %3487, align 2
  %3489 = icmp eq i16 %3488, 6
  br i1 %3489, label %3490, label %3532

3490:                                             ; preds = %3484
  %3491 = getelementptr %struct.mxl5005s_state, ptr %3480, i32 0, i32 21, i32 %3486, i32 1
  %3492 = load i16, ptr %3491, align 2
  %3493 = icmp eq i16 %3492, 0
  br i1 %3493, label %3532, label %3494

3494:                                             ; preds = %3525, %3490
  %3495 = phi i32 [ %3526, %3525 ], [ 0, %3490 ]
  %3496 = getelementptr %struct.mxl5005s_state, ptr %3480, i32 0, i32 21, i32 %3486, i32 4, i32 %3495
  store i16 0, ptr %3496, align 2
  %3497 = getelementptr %struct.mxl5005s_state, ptr %3480, i32 0, i32 21, i32 %3486, i32 3, i32 %3495
  %3498 = load i16, ptr %3497, align 2
  %3499 = load ptr, ptr %2, align 4
  %3500 = getelementptr inbounds %struct.mxl5005s_state, ptr %3499, i32 0, i32 24
  %3501 = load i16, ptr %3500, align 4
  %3502 = zext i16 %3501 to i32
  %3503 = icmp eq i16 %3501, 0
  br i1 %3503, label %3525, label %3504

3504:                                             ; preds = %3494
  %3505 = getelementptr %struct.mxl5005s_state, ptr %3480, i32 0, i32 21, i32 %3486, i32 2, i32 %3495
  %3506 = load i16, ptr %3505, align 2
  %3507 = and i16 %3506, 255
  br label %3508

3508:                                             ; preds = %3522, %3504
  %3509 = phi i32 [ 0, %3504 ], [ %3523, %3522 ]
  %3510 = getelementptr %struct.mxl5005s_state, ptr %3499, i32 0, i32 25, i32 %3509
  %3511 = load i16, ptr %3510, align 2
  %3512 = icmp eq i16 %3511, %3507
  br i1 %3512, label %3513, label %3522

3513:                                             ; preds = %3508
  %3514 = and i16 %3498, 255
  %3515 = zext i16 %3514 to i32
  %3516 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3515
  %3517 = load i8, ptr %3516, align 1
  %3518 = zext i8 %3517 to i16
  %3519 = getelementptr %struct.mxl5005s_state, ptr %3499, i32 0, i32 25, i32 %3509, i32 1
  %3520 = load i16, ptr %3519, align 2
  %3521 = and i16 %3520, %3518
  store i16 %3521, ptr %3519, align 2
  br label %3525

3522:                                             ; preds = %3508
  %3523 = add nuw nsw i32 %3509, 1
  %3524 = icmp eq i32 %3523, %3502
  br i1 %3524, label %3525, label %3508

3525:                                             ; preds = %3522, %3513, %3494
  %3526 = add nuw nsw i32 %3495, 1
  %3527 = load i16, ptr %3491, align 2
  %3528 = zext i16 %3527 to i32
  %3529 = icmp ult i32 %3526, %3528
  br i1 %3529, label %3494, label %3530

3530:                                             ; preds = %3525
  %3531 = load i16, ptr %3481, align 2
  br label %3532

3532:                                             ; preds = %3530, %3490, %3484
  %3533 = phi i16 [ %3531, %3530 ], [ %3485, %3490 ], [ %3485, %3484 ]
  %3534 = add nuw nsw i32 %3486, 1
  %3535 = zext i16 %3533 to i32
  %3536 = icmp ult i32 %3534, %3535
  br i1 %3536, label %3484, label %3542

3537:                                             ; preds = %3371
  %3538 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 1) #12
  %3539 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 2) #12
  %3540 = add i16 %3538, %3415
  %3541 = add i16 %3540, %3539
  br label %3542

3542:                                             ; preds = %3537, %3532, %3479, %3367
  %3543 = phi i16 [ %3541, %3537 ], [ %3369, %3367 ], [ %3415, %3479 ], [ %3415, %3532 ]
  %3544 = load i8, ptr %3198, align 4
  %3545 = icmp eq i8 %3544, 3
  br i1 %3545, label %3546, label %3826

3546:                                             ; preds = %3542
  store i8 1, ptr %3, align 4
  %3547 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %3548 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %3549 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %3550 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %3551 = load ptr, ptr %2, align 4
  %3552 = getelementptr inbounds %struct.mxl5005s_state, ptr %3551, i32 0, i32 18
  %3553 = load i16, ptr %3552, align 4
  %3554 = icmp eq i16 %3553, 0
  br i1 %3554, label %3610, label %3555

3555:                                             ; preds = %3603, %3546
  %3556 = phi i16 [ %3604, %3603 ], [ %3553, %3546 ]
  %3557 = phi i32 [ %3605, %3603 ], [ 0, %3546 ]
  %3558 = getelementptr %struct.mxl5005s_state, ptr %3551, i32 0, i32 19, i32 %3557
  %3559 = load i16, ptr %3558, align 2
  %3560 = icmp eq i16 %3559, 29
  br i1 %3560, label %3561, label %3603

3561:                                             ; preds = %3555
  %3562 = getelementptr %struct.mxl5005s_state, ptr %3551, i32 0, i32 19, i32 %3557, i32 1
  %3563 = load i16, ptr %3562, align 2
  %3564 = icmp eq i16 %3563, 0
  br i1 %3564, label %3603, label %3565

3565:                                             ; preds = %3596, %3561
  %3566 = phi i32 [ %3597, %3596 ], [ 0, %3561 ]
  %3567 = getelementptr %struct.mxl5005s_state, ptr %3551, i32 0, i32 19, i32 %3557, i32 4, i32 %3566
  store i16 0, ptr %3567, align 2
  %3568 = getelementptr %struct.mxl5005s_state, ptr %3551, i32 0, i32 19, i32 %3557, i32 3, i32 %3566
  %3569 = load i16, ptr %3568, align 2
  %3570 = load ptr, ptr %2, align 4
  %3571 = getelementptr inbounds %struct.mxl5005s_state, ptr %3570, i32 0, i32 24
  %3572 = load i16, ptr %3571, align 4
  %3573 = zext i16 %3572 to i32
  %3574 = icmp eq i16 %3572, 0
  br i1 %3574, label %3596, label %3575

3575:                                             ; preds = %3565
  %3576 = getelementptr %struct.mxl5005s_state, ptr %3551, i32 0, i32 19, i32 %3557, i32 2, i32 %3566
  %3577 = load i16, ptr %3576, align 2
  %3578 = and i16 %3577, 255
  br label %3579

3579:                                             ; preds = %3593, %3575
  %3580 = phi i32 [ 0, %3575 ], [ %3594, %3593 ]
  %3581 = getelementptr %struct.mxl5005s_state, ptr %3570, i32 0, i32 25, i32 %3580
  %3582 = load i16, ptr %3581, align 2
  %3583 = icmp eq i16 %3582, %3578
  br i1 %3583, label %3584, label %3593

3584:                                             ; preds = %3579
  %3585 = and i16 %3569, 255
  %3586 = zext i16 %3585 to i32
  %3587 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3586
  %3588 = load i8, ptr %3587, align 1
  %3589 = zext i8 %3588 to i16
  %3590 = getelementptr %struct.mxl5005s_state, ptr %3570, i32 0, i32 25, i32 %3580, i32 1
  %3591 = load i16, ptr %3590, align 2
  %3592 = and i16 %3591, %3589
  store i16 %3592, ptr %3590, align 2
  br label %3596

3593:                                             ; preds = %3579
  %3594 = add nuw nsw i32 %3580, 1
  %3595 = icmp eq i32 %3594, %3573
  br i1 %3595, label %3596, label %3579

3596:                                             ; preds = %3593, %3584, %3565
  %3597 = add nuw nsw i32 %3566, 1
  %3598 = load i16, ptr %3562, align 2
  %3599 = zext i16 %3598 to i32
  %3600 = icmp ult i32 %3597, %3599
  br i1 %3600, label %3565, label %3601

3601:                                             ; preds = %3596
  %3602 = load i16, ptr %3552, align 4
  br label %3603

3603:                                             ; preds = %3601, %3561, %3555
  %3604 = phi i16 [ %3602, %3601 ], [ %3556, %3561 ], [ %3556, %3555 ]
  %3605 = add nuw nsw i32 %3557, 1
  %3606 = zext i16 %3604 to i32
  %3607 = icmp ult i32 %3605, %3606
  br i1 %3607, label %3555, label %3608

3608:                                             ; preds = %3603
  %3609 = load ptr, ptr %2, align 4
  br label %3610

3610:                                             ; preds = %3608, %3546
  %3611 = phi ptr [ %3609, %3608 ], [ %3551, %3546 ]
  %3612 = getelementptr inbounds %struct.mxl5005s_state, ptr %3611, i32 0, i32 20
  %3613 = load i16, ptr %3612, align 2
  %3614 = icmp eq i16 %3613, 0
  br i1 %3614, label %3668, label %3615

3615:                                             ; preds = %3663, %3610
  %3616 = phi i16 [ %3664, %3663 ], [ %3613, %3610 ]
  %3617 = phi i32 [ %3665, %3663 ], [ 0, %3610 ]
  %3618 = getelementptr %struct.mxl5005s_state, ptr %3611, i32 0, i32 21, i32 %3617
  %3619 = load i16, ptr %3618, align 2
  %3620 = icmp eq i16 %3619, 29
  br i1 %3620, label %3621, label %3663

3621:                                             ; preds = %3615
  %3622 = getelementptr %struct.mxl5005s_state, ptr %3611, i32 0, i32 21, i32 %3617, i32 1
  %3623 = load i16, ptr %3622, align 2
  %3624 = icmp eq i16 %3623, 0
  br i1 %3624, label %3663, label %3625

3625:                                             ; preds = %3656, %3621
  %3626 = phi i32 [ %3657, %3656 ], [ 0, %3621 ]
  %3627 = getelementptr %struct.mxl5005s_state, ptr %3611, i32 0, i32 21, i32 %3617, i32 4, i32 %3626
  store i16 0, ptr %3627, align 2
  %3628 = getelementptr %struct.mxl5005s_state, ptr %3611, i32 0, i32 21, i32 %3617, i32 3, i32 %3626
  %3629 = load i16, ptr %3628, align 2
  %3630 = load ptr, ptr %2, align 4
  %3631 = getelementptr inbounds %struct.mxl5005s_state, ptr %3630, i32 0, i32 24
  %3632 = load i16, ptr %3631, align 4
  %3633 = zext i16 %3632 to i32
  %3634 = icmp eq i16 %3632, 0
  br i1 %3634, label %3656, label %3635

3635:                                             ; preds = %3625
  %3636 = getelementptr %struct.mxl5005s_state, ptr %3611, i32 0, i32 21, i32 %3617, i32 2, i32 %3626
  %3637 = load i16, ptr %3636, align 2
  %3638 = and i16 %3637, 255
  br label %3639

3639:                                             ; preds = %3653, %3635
  %3640 = phi i32 [ 0, %3635 ], [ %3654, %3653 ]
  %3641 = getelementptr %struct.mxl5005s_state, ptr %3630, i32 0, i32 25, i32 %3640
  %3642 = load i16, ptr %3641, align 2
  %3643 = icmp eq i16 %3642, %3638
  br i1 %3643, label %3644, label %3653

3644:                                             ; preds = %3639
  %3645 = and i16 %3629, 255
  %3646 = zext i16 %3645 to i32
  %3647 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3646
  %3648 = load i8, ptr %3647, align 1
  %3649 = zext i8 %3648 to i16
  %3650 = getelementptr %struct.mxl5005s_state, ptr %3630, i32 0, i32 25, i32 %3640, i32 1
  %3651 = load i16, ptr %3650, align 2
  %3652 = and i16 %3651, %3649
  store i16 %3652, ptr %3650, align 2
  br label %3656

3653:                                             ; preds = %3639
  %3654 = add nuw nsw i32 %3640, 1
  %3655 = icmp eq i32 %3654, %3633
  br i1 %3655, label %3656, label %3639

3656:                                             ; preds = %3653, %3644, %3625
  %3657 = add nuw nsw i32 %3626, 1
  %3658 = load i16, ptr %3622, align 2
  %3659 = zext i16 %3658 to i32
  %3660 = icmp ult i32 %3657, %3659
  br i1 %3660, label %3625, label %3661

3661:                                             ; preds = %3656
  %3662 = load i16, ptr %3612, align 2
  br label %3663

3663:                                             ; preds = %3661, %3621, %3615
  %3664 = phi i16 [ %3662, %3661 ], [ %3616, %3621 ], [ %3616, %3615 ]
  %3665 = add nuw nsw i32 %3617, 1
  %3666 = zext i16 %3664 to i32
  %3667 = icmp ult i32 %3665, %3666
  br i1 %3667, label %3615, label %3668

3668:                                             ; preds = %3663, %3610
  %3669 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %3670 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %3671 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 1) #12
  %3672 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 2) #12
  %3673 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 1) #12
  %3674 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 2) #12
  %3675 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 2, i16 noundef zeroext 1) #12
  %3676 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 2, i16 noundef zeroext 2) #12
  %3677 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 3, i16 noundef zeroext 1) #12
  %3678 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 3, i16 noundef zeroext 2) #12
  %3679 = getelementptr inbounds %struct.mxl5005s_state, ptr %3, i32 0, i32 3
  %3680 = load i32, ptr %3679, align 4
  %3681 = icmp ult i32 %3680, 6280001
  br i1 %3681, label %3682, label %3800

3682:                                             ; preds = %3668
  %3683 = load ptr, ptr %2, align 4
  %3684 = getelementptr inbounds %struct.mxl5005s_state, ptr %3683, i32 0, i32 18
  %3685 = load i16, ptr %3684, align 4
  %3686 = icmp eq i16 %3685, 0
  br i1 %3686, label %3742, label %3687

3687:                                             ; preds = %3735, %3682
  %3688 = phi i16 [ %3736, %3735 ], [ %3685, %3682 ]
  %3689 = phi i32 [ %3737, %3735 ], [ 0, %3682 ]
  %3690 = getelementptr %struct.mxl5005s_state, ptr %3683, i32 0, i32 19, i32 %3689
  %3691 = load i16, ptr %3690, align 2
  %3692 = icmp eq i16 %3691, 6
  br i1 %3692, label %3693, label %3735

3693:                                             ; preds = %3687
  %3694 = getelementptr %struct.mxl5005s_state, ptr %3683, i32 0, i32 19, i32 %3689, i32 1
  %3695 = load i16, ptr %3694, align 2
  %3696 = icmp eq i16 %3695, 0
  br i1 %3696, label %3735, label %3697

3697:                                             ; preds = %3728, %3693
  %3698 = phi i32 [ %3729, %3728 ], [ 0, %3693 ]
  %3699 = getelementptr %struct.mxl5005s_state, ptr %3683, i32 0, i32 19, i32 %3689, i32 4, i32 %3698
  store i16 0, ptr %3699, align 2
  %3700 = getelementptr %struct.mxl5005s_state, ptr %3683, i32 0, i32 19, i32 %3689, i32 3, i32 %3698
  %3701 = load i16, ptr %3700, align 2
  %3702 = load ptr, ptr %2, align 4
  %3703 = getelementptr inbounds %struct.mxl5005s_state, ptr %3702, i32 0, i32 24
  %3704 = load i16, ptr %3703, align 4
  %3705 = zext i16 %3704 to i32
  %3706 = icmp eq i16 %3704, 0
  br i1 %3706, label %3728, label %3707

3707:                                             ; preds = %3697
  %3708 = getelementptr %struct.mxl5005s_state, ptr %3683, i32 0, i32 19, i32 %3689, i32 2, i32 %3698
  %3709 = load i16, ptr %3708, align 2
  %3710 = and i16 %3709, 255
  br label %3711

3711:                                             ; preds = %3725, %3707
  %3712 = phi i32 [ 0, %3707 ], [ %3726, %3725 ]
  %3713 = getelementptr %struct.mxl5005s_state, ptr %3702, i32 0, i32 25, i32 %3712
  %3714 = load i16, ptr %3713, align 2
  %3715 = icmp eq i16 %3714, %3710
  br i1 %3715, label %3716, label %3725

3716:                                             ; preds = %3711
  %3717 = and i16 %3701, 255
  %3718 = zext i16 %3717 to i32
  %3719 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3718
  %3720 = load i8, ptr %3719, align 1
  %3721 = zext i8 %3720 to i16
  %3722 = getelementptr %struct.mxl5005s_state, ptr %3702, i32 0, i32 25, i32 %3712, i32 1
  %3723 = load i16, ptr %3722, align 2
  %3724 = and i16 %3723, %3721
  store i16 %3724, ptr %3722, align 2
  br label %3728

3725:                                             ; preds = %3711
  %3726 = add nuw nsw i32 %3712, 1
  %3727 = icmp eq i32 %3726, %3705
  br i1 %3727, label %3728, label %3711

3728:                                             ; preds = %3725, %3716, %3697
  %3729 = add nuw nsw i32 %3698, 1
  %3730 = load i16, ptr %3694, align 2
  %3731 = zext i16 %3730 to i32
  %3732 = icmp ult i32 %3729, %3731
  br i1 %3732, label %3697, label %3733

3733:                                             ; preds = %3728
  %3734 = load i16, ptr %3684, align 4
  br label %3735

3735:                                             ; preds = %3733, %3693, %3687
  %3736 = phi i16 [ %3734, %3733 ], [ %3688, %3693 ], [ %3688, %3687 ]
  %3737 = add nuw nsw i32 %3689, 1
  %3738 = zext i16 %3736 to i32
  %3739 = icmp ult i32 %3737, %3738
  br i1 %3739, label %3687, label %3740

3740:                                             ; preds = %3735
  %3741 = load ptr, ptr %2, align 4
  br label %3742

3742:                                             ; preds = %3740, %3682
  %3743 = phi ptr [ %3741, %3740 ], [ %3683, %3682 ]
  %3744 = getelementptr inbounds %struct.mxl5005s_state, ptr %3743, i32 0, i32 20
  %3745 = load i16, ptr %3744, align 2
  %3746 = icmp eq i16 %3745, 0
  br i1 %3746, label %3804, label %3747

3747:                                             ; preds = %3795, %3742
  %3748 = phi i16 [ %3796, %3795 ], [ %3745, %3742 ]
  %3749 = phi i32 [ %3797, %3795 ], [ 0, %3742 ]
  %3750 = getelementptr %struct.mxl5005s_state, ptr %3743, i32 0, i32 21, i32 %3749
  %3751 = load i16, ptr %3750, align 2
  %3752 = icmp eq i16 %3751, 6
  br i1 %3752, label %3753, label %3795

3753:                                             ; preds = %3747
  %3754 = getelementptr %struct.mxl5005s_state, ptr %3743, i32 0, i32 21, i32 %3749, i32 1
  %3755 = load i16, ptr %3754, align 2
  %3756 = icmp eq i16 %3755, 0
  br i1 %3756, label %3795, label %3757

3757:                                             ; preds = %3788, %3753
  %3758 = phi i32 [ %3789, %3788 ], [ 0, %3753 ]
  %3759 = getelementptr %struct.mxl5005s_state, ptr %3743, i32 0, i32 21, i32 %3749, i32 4, i32 %3758
  store i16 0, ptr %3759, align 2
  %3760 = getelementptr %struct.mxl5005s_state, ptr %3743, i32 0, i32 21, i32 %3749, i32 3, i32 %3758
  %3761 = load i16, ptr %3760, align 2
  %3762 = load ptr, ptr %2, align 4
  %3763 = getelementptr inbounds %struct.mxl5005s_state, ptr %3762, i32 0, i32 24
  %3764 = load i16, ptr %3763, align 4
  %3765 = zext i16 %3764 to i32
  %3766 = icmp eq i16 %3764, 0
  br i1 %3766, label %3788, label %3767

3767:                                             ; preds = %3757
  %3768 = getelementptr %struct.mxl5005s_state, ptr %3743, i32 0, i32 21, i32 %3749, i32 2, i32 %3758
  %3769 = load i16, ptr %3768, align 2
  %3770 = and i16 %3769, 255
  br label %3771

3771:                                             ; preds = %3785, %3767
  %3772 = phi i32 [ 0, %3767 ], [ %3786, %3785 ]
  %3773 = getelementptr %struct.mxl5005s_state, ptr %3762, i32 0, i32 25, i32 %3772
  %3774 = load i16, ptr %3773, align 2
  %3775 = icmp eq i16 %3774, %3770
  br i1 %3775, label %3776, label %3785

3776:                                             ; preds = %3771
  %3777 = and i16 %3761, 255
  %3778 = zext i16 %3777 to i32
  %3779 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3778
  %3780 = load i8, ptr %3779, align 1
  %3781 = zext i8 %3780 to i16
  %3782 = getelementptr %struct.mxl5005s_state, ptr %3762, i32 0, i32 25, i32 %3772, i32 1
  %3783 = load i16, ptr %3782, align 2
  %3784 = and i16 %3783, %3781
  store i16 %3784, ptr %3782, align 2
  br label %3788

3785:                                             ; preds = %3771
  %3786 = add nuw nsw i32 %3772, 1
  %3787 = icmp eq i32 %3786, %3765
  br i1 %3787, label %3788, label %3771

3788:                                             ; preds = %3785, %3776, %3757
  %3789 = add nuw nsw i32 %3758, 1
  %3790 = load i16, ptr %3754, align 2
  %3791 = zext i16 %3790 to i32
  %3792 = icmp ult i32 %3789, %3791
  br i1 %3792, label %3757, label %3793

3793:                                             ; preds = %3788
  %3794 = load i16, ptr %3744, align 2
  br label %3795

3795:                                             ; preds = %3793, %3753, %3747
  %3796 = phi i16 [ %3794, %3793 ], [ %3748, %3753 ], [ %3748, %3747 ]
  %3797 = add nuw nsw i32 %3749, 1
  %3798 = zext i16 %3796 to i32
  %3799 = icmp ult i32 %3797, %3798
  br i1 %3799, label %3747, label %3804

3800:                                             ; preds = %3668
  %3801 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 1) #12
  %3802 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 2) #12
  %3803 = add i16 %3802, %3801
  br label %3804

3804:                                             ; preds = %3800, %3795, %3742
  %3805 = phi i16 [ %3803, %3800 ], [ 0, %3742 ], [ 0, %3795 ]
  %3806 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 2, i16 noundef zeroext 1) #12
  %3807 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 2, i16 noundef zeroext 2) #12
  %3808 = add i16 %3547, %3543
  %3809 = add i16 %3808, %3548
  %3810 = add i16 %3809, %3549
  %3811 = add i16 %3810, %3550
  %3812 = add i16 %3811, %3669
  %3813 = add i16 %3812, %3670
  %3814 = add i16 %3813, %3671
  %3815 = add i16 %3814, %3672
  %3816 = add i16 %3815, %3673
  %3817 = add i16 %3816, %3674
  %3818 = add i16 %3817, %3675
  %3819 = add i16 %3818, %3676
  %3820 = add i16 %3819, %3677
  %3821 = add i16 %3820, %3678
  %3822 = add i16 %3821, %3805
  %3823 = add i16 %3822, %3806
  %3824 = add i16 %3823, %3807
  %3825 = load i8, ptr %3198, align 4
  br label %3826

3826:                                             ; preds = %3804, %3542
  %3827 = phi i8 [ %3825, %3804 ], [ %3544, %3542 ]
  %3828 = phi i16 [ %3824, %3804 ], [ %3543, %3542 ]
  %3829 = icmp eq i8 %3827, 4
  br i1 %3829, label %3830, label %3974

3830:                                             ; preds = %3826
  store i8 1, ptr %464, align 4
  %3831 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %3832 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %3833 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %3834 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %3835 = load ptr, ptr %2, align 4
  %3836 = getelementptr inbounds %struct.mxl5005s_state, ptr %3835, i32 0, i32 18
  %3837 = load i16, ptr %3836, align 4
  %3838 = icmp eq i16 %3837, 0
  br i1 %3838, label %3894, label %3839

3839:                                             ; preds = %3887, %3830
  %3840 = phi i16 [ %3888, %3887 ], [ %3837, %3830 ]
  %3841 = phi i32 [ %3889, %3887 ], [ 0, %3830 ]
  %3842 = getelementptr %struct.mxl5005s_state, ptr %3835, i32 0, i32 19, i32 %3841
  %3843 = load i16, ptr %3842, align 2
  %3844 = icmp eq i16 %3843, 29
  br i1 %3844, label %3845, label %3887

3845:                                             ; preds = %3839
  %3846 = getelementptr %struct.mxl5005s_state, ptr %3835, i32 0, i32 19, i32 %3841, i32 1
  %3847 = load i16, ptr %3846, align 2
  %3848 = icmp eq i16 %3847, 0
  br i1 %3848, label %3887, label %3849

3849:                                             ; preds = %3880, %3845
  %3850 = phi i32 [ %3881, %3880 ], [ 0, %3845 ]
  %3851 = getelementptr %struct.mxl5005s_state, ptr %3835, i32 0, i32 19, i32 %3841, i32 4, i32 %3850
  store i16 0, ptr %3851, align 2
  %3852 = getelementptr %struct.mxl5005s_state, ptr %3835, i32 0, i32 19, i32 %3841, i32 3, i32 %3850
  %3853 = load i16, ptr %3852, align 2
  %3854 = load ptr, ptr %2, align 4
  %3855 = getelementptr inbounds %struct.mxl5005s_state, ptr %3854, i32 0, i32 24
  %3856 = load i16, ptr %3855, align 4
  %3857 = zext i16 %3856 to i32
  %3858 = icmp eq i16 %3856, 0
  br i1 %3858, label %3880, label %3859

3859:                                             ; preds = %3849
  %3860 = getelementptr %struct.mxl5005s_state, ptr %3835, i32 0, i32 19, i32 %3841, i32 2, i32 %3850
  %3861 = load i16, ptr %3860, align 2
  %3862 = and i16 %3861, 255
  br label %3863

3863:                                             ; preds = %3877, %3859
  %3864 = phi i32 [ 0, %3859 ], [ %3878, %3877 ]
  %3865 = getelementptr %struct.mxl5005s_state, ptr %3854, i32 0, i32 25, i32 %3864
  %3866 = load i16, ptr %3865, align 2
  %3867 = icmp eq i16 %3866, %3862
  br i1 %3867, label %3868, label %3877

3868:                                             ; preds = %3863
  %3869 = and i16 %3853, 255
  %3870 = zext i16 %3869 to i32
  %3871 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3870
  %3872 = load i8, ptr %3871, align 1
  %3873 = zext i8 %3872 to i16
  %3874 = getelementptr %struct.mxl5005s_state, ptr %3854, i32 0, i32 25, i32 %3864, i32 1
  %3875 = load i16, ptr %3874, align 2
  %3876 = and i16 %3875, %3873
  store i16 %3876, ptr %3874, align 2
  br label %3880

3877:                                             ; preds = %3863
  %3878 = add nuw nsw i32 %3864, 1
  %3879 = icmp eq i32 %3878, %3857
  br i1 %3879, label %3880, label %3863

3880:                                             ; preds = %3877, %3868, %3849
  %3881 = add nuw nsw i32 %3850, 1
  %3882 = load i16, ptr %3846, align 2
  %3883 = zext i16 %3882 to i32
  %3884 = icmp ult i32 %3881, %3883
  br i1 %3884, label %3849, label %3885

3885:                                             ; preds = %3880
  %3886 = load i16, ptr %3836, align 4
  br label %3887

3887:                                             ; preds = %3885, %3845, %3839
  %3888 = phi i16 [ %3886, %3885 ], [ %3840, %3845 ], [ %3840, %3839 ]
  %3889 = add nuw nsw i32 %3841, 1
  %3890 = zext i16 %3888 to i32
  %3891 = icmp ult i32 %3889, %3890
  br i1 %3891, label %3839, label %3892

3892:                                             ; preds = %3887
  %3893 = load ptr, ptr %2, align 4
  br label %3894

3894:                                             ; preds = %3892, %3830
  %3895 = phi ptr [ %3893, %3892 ], [ %3835, %3830 ]
  %3896 = getelementptr inbounds %struct.mxl5005s_state, ptr %3895, i32 0, i32 20
  %3897 = load i16, ptr %3896, align 2
  %3898 = icmp eq i16 %3897, 0
  br i1 %3898, label %3952, label %3899

3899:                                             ; preds = %3947, %3894
  %3900 = phi i16 [ %3948, %3947 ], [ %3897, %3894 ]
  %3901 = phi i32 [ %3949, %3947 ], [ 0, %3894 ]
  %3902 = getelementptr %struct.mxl5005s_state, ptr %3895, i32 0, i32 21, i32 %3901
  %3903 = load i16, ptr %3902, align 2
  %3904 = icmp eq i16 %3903, 29
  br i1 %3904, label %3905, label %3947

3905:                                             ; preds = %3899
  %3906 = getelementptr %struct.mxl5005s_state, ptr %3895, i32 0, i32 21, i32 %3901, i32 1
  %3907 = load i16, ptr %3906, align 2
  %3908 = icmp eq i16 %3907, 0
  br i1 %3908, label %3947, label %3909

3909:                                             ; preds = %3940, %3905
  %3910 = phi i32 [ %3941, %3940 ], [ 0, %3905 ]
  %3911 = getelementptr %struct.mxl5005s_state, ptr %3895, i32 0, i32 21, i32 %3901, i32 4, i32 %3910
  store i16 0, ptr %3911, align 2
  %3912 = getelementptr %struct.mxl5005s_state, ptr %3895, i32 0, i32 21, i32 %3901, i32 3, i32 %3910
  %3913 = load i16, ptr %3912, align 2
  %3914 = load ptr, ptr %2, align 4
  %3915 = getelementptr inbounds %struct.mxl5005s_state, ptr %3914, i32 0, i32 24
  %3916 = load i16, ptr %3915, align 4
  %3917 = zext i16 %3916 to i32
  %3918 = icmp eq i16 %3916, 0
  br i1 %3918, label %3940, label %3919

3919:                                             ; preds = %3909
  %3920 = getelementptr %struct.mxl5005s_state, ptr %3895, i32 0, i32 21, i32 %3901, i32 2, i32 %3910
  %3921 = load i16, ptr %3920, align 2
  %3922 = and i16 %3921, 255
  br label %3923

3923:                                             ; preds = %3937, %3919
  %3924 = phi i32 [ 0, %3919 ], [ %3938, %3937 ]
  %3925 = getelementptr %struct.mxl5005s_state, ptr %3914, i32 0, i32 25, i32 %3924
  %3926 = load i16, ptr %3925, align 2
  %3927 = icmp eq i16 %3926, %3922
  br i1 %3927, label %3928, label %3937

3928:                                             ; preds = %3923
  %3929 = and i16 %3913, 255
  %3930 = zext i16 %3929 to i32
  %3931 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3930
  %3932 = load i8, ptr %3931, align 1
  %3933 = zext i8 %3932 to i16
  %3934 = getelementptr %struct.mxl5005s_state, ptr %3914, i32 0, i32 25, i32 %3924, i32 1
  %3935 = load i16, ptr %3934, align 2
  %3936 = and i16 %3935, %3933
  store i16 %3936, ptr %3934, align 2
  br label %3940

3937:                                             ; preds = %3923
  %3938 = add nuw nsw i32 %3924, 1
  %3939 = icmp eq i32 %3938, %3917
  br i1 %3939, label %3940, label %3923

3940:                                             ; preds = %3937, %3928, %3909
  %3941 = add nuw nsw i32 %3910, 1
  %3942 = load i16, ptr %3906, align 2
  %3943 = zext i16 %3942 to i32
  %3944 = icmp ult i32 %3941, %3943
  br i1 %3944, label %3909, label %3945

3945:                                             ; preds = %3940
  %3946 = load i16, ptr %3896, align 2
  br label %3947

3947:                                             ; preds = %3945, %3905, %3899
  %3948 = phi i16 [ %3946, %3945 ], [ %3900, %3905 ], [ %3900, %3899 ]
  %3949 = add nuw nsw i32 %3901, 1
  %3950 = zext i16 %3948 to i32
  %3951 = icmp ult i32 %3949, %3950
  br i1 %3951, label %3899, label %3952

3952:                                             ; preds = %3947, %3894
  %3953 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %3954 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %3955 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 1, i16 noundef zeroext 1) #12
  %3956 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 1, i16 noundef zeroext 2) #12
  %3957 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 11, i32 noundef 15, i16 noundef zeroext 1) #12
  %3958 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 11, i32 noundef 15, i16 noundef zeroext 2) #12
  %3959 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 1) #12
  %3960 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 2) #12
  %3961 = add i16 %3831, %3828
  %3962 = add i16 %3961, %3832
  %3963 = add i16 %3962, %3833
  %3964 = add i16 %3963, %3834
  %3965 = add i16 %3964, %3953
  %3966 = add i16 %3965, %3954
  %3967 = add i16 %3966, %3955
  %3968 = add i16 %3967, %3956
  %3969 = add i16 %3968, %3957
  %3970 = add i16 %3969, %3958
  %3971 = add i16 %3970, %3959
  %3972 = add i16 %3971, %3960
  %3973 = load i8, ptr %3198, align 4
  br label %3974

3974:                                             ; preds = %3952, %3826
  %3975 = phi i8 [ %3973, %3952 ], [ %3827, %3826 ]
  %3976 = phi i16 [ %3972, %3952 ], [ %3828, %3826 ]
  %3977 = icmp eq i8 %3975, 5
  br i1 %3977, label %3978, label %4015

3978:                                             ; preds = %3974
  %3979 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %3980 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %3981 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %3982 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %3983 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 1) #12
  %3984 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 2) #12
  %3985 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %3986 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %3987 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 1) #12
  %3988 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 2) #12
  %3989 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 1) #12
  %3990 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 2) #12
  %3991 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 2, i16 noundef zeroext 1) #12
  %3992 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 2, i16 noundef zeroext 2) #12
  %3993 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 3, i16 noundef zeroext 1) #12
  %3994 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 3, i16 noundef zeroext 2) #12
  %3995 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 1) #12
  %3996 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 6, i32 noundef 1, i16 noundef zeroext 2) #12
  %3997 = add i16 %3979, %3976
  %3998 = add i16 %3997, %3980
  %3999 = add i16 %3998, %3981
  %4000 = add i16 %3999, %3982
  %4001 = add i16 %4000, %3983
  %4002 = add i16 %4001, %3984
  %4003 = add i16 %4002, %3985
  %4004 = add i16 %4003, %3986
  %4005 = add i16 %4004, %3987
  %4006 = add i16 %4005, %3988
  %4007 = add i16 %4006, %3989
  %4008 = add i16 %4007, %3990
  %4009 = add i16 %4008, %3991
  %4010 = add i16 %4009, %3992
  %4011 = add i16 %4010, %3993
  %4012 = add i16 %4011, %3994
  %4013 = add i16 %4012, %3995
  %4014 = add i16 %4013, %3996
  br label %4015

4015:                                             ; preds = %3978, %3974
  %4016 = phi i16 [ %4014, %3978 ], [ %3976, %3974 ]
  %4017 = load i8, ptr %3042, align 1
  %4018 = icmp eq i8 %4017, 0
  br i1 %4018, label %4019, label %4150

4019:                                             ; preds = %4015
  %4020 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %4021 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %4022 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %4023 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %4024 = load ptr, ptr %2, align 4
  %4025 = getelementptr inbounds %struct.mxl5005s_state, ptr %4024, i32 0, i32 18
  %4026 = load i16, ptr %4025, align 4
  %4027 = icmp eq i16 %4026, 0
  br i1 %4027, label %4083, label %4028

4028:                                             ; preds = %4076, %4019
  %4029 = phi i16 [ %4077, %4076 ], [ %4026, %4019 ]
  %4030 = phi i32 [ %4078, %4076 ], [ 0, %4019 ]
  %4031 = getelementptr %struct.mxl5005s_state, ptr %4024, i32 0, i32 19, i32 %4030
  %4032 = load i16, ptr %4031, align 2
  %4033 = icmp eq i16 %4032, 29
  br i1 %4033, label %4034, label %4076

4034:                                             ; preds = %4028
  %4035 = getelementptr %struct.mxl5005s_state, ptr %4024, i32 0, i32 19, i32 %4030, i32 1
  %4036 = load i16, ptr %4035, align 2
  %4037 = icmp eq i16 %4036, 0
  br i1 %4037, label %4076, label %4038

4038:                                             ; preds = %4069, %4034
  %4039 = phi i32 [ %4070, %4069 ], [ 0, %4034 ]
  %4040 = getelementptr %struct.mxl5005s_state, ptr %4024, i32 0, i32 19, i32 %4030, i32 4, i32 %4039
  store i16 0, ptr %4040, align 2
  %4041 = getelementptr %struct.mxl5005s_state, ptr %4024, i32 0, i32 19, i32 %4030, i32 3, i32 %4039
  %4042 = load i16, ptr %4041, align 2
  %4043 = load ptr, ptr %2, align 4
  %4044 = getelementptr inbounds %struct.mxl5005s_state, ptr %4043, i32 0, i32 24
  %4045 = load i16, ptr %4044, align 4
  %4046 = zext i16 %4045 to i32
  %4047 = icmp eq i16 %4045, 0
  br i1 %4047, label %4069, label %4048

4048:                                             ; preds = %4038
  %4049 = getelementptr %struct.mxl5005s_state, ptr %4024, i32 0, i32 19, i32 %4030, i32 2, i32 %4039
  %4050 = load i16, ptr %4049, align 2
  %4051 = and i16 %4050, 255
  br label %4052

4052:                                             ; preds = %4066, %4048
  %4053 = phi i32 [ 0, %4048 ], [ %4067, %4066 ]
  %4054 = getelementptr %struct.mxl5005s_state, ptr %4043, i32 0, i32 25, i32 %4053
  %4055 = load i16, ptr %4054, align 2
  %4056 = icmp eq i16 %4055, %4051
  br i1 %4056, label %4057, label %4066

4057:                                             ; preds = %4052
  %4058 = and i16 %4042, 255
  %4059 = zext i16 %4058 to i32
  %4060 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4059
  %4061 = load i8, ptr %4060, align 1
  %4062 = zext i8 %4061 to i16
  %4063 = getelementptr %struct.mxl5005s_state, ptr %4043, i32 0, i32 25, i32 %4053, i32 1
  %4064 = load i16, ptr %4063, align 2
  %4065 = and i16 %4064, %4062
  store i16 %4065, ptr %4063, align 2
  br label %4069

4066:                                             ; preds = %4052
  %4067 = add nuw nsw i32 %4053, 1
  %4068 = icmp eq i32 %4067, %4046
  br i1 %4068, label %4069, label %4052

4069:                                             ; preds = %4066, %4057, %4038
  %4070 = add nuw nsw i32 %4039, 1
  %4071 = load i16, ptr %4035, align 2
  %4072 = zext i16 %4071 to i32
  %4073 = icmp ult i32 %4070, %4072
  br i1 %4073, label %4038, label %4074

4074:                                             ; preds = %4069
  %4075 = load i16, ptr %4025, align 4
  br label %4076

4076:                                             ; preds = %4074, %4034, %4028
  %4077 = phi i16 [ %4075, %4074 ], [ %4029, %4034 ], [ %4029, %4028 ]
  %4078 = add nuw nsw i32 %4030, 1
  %4079 = zext i16 %4077 to i32
  %4080 = icmp ult i32 %4078, %4079
  br i1 %4080, label %4028, label %4081

4081:                                             ; preds = %4076
  %4082 = load ptr, ptr %2, align 4
  br label %4083

4083:                                             ; preds = %4081, %4019
  %4084 = phi ptr [ %4082, %4081 ], [ %4024, %4019 ]
  %4085 = getelementptr inbounds %struct.mxl5005s_state, ptr %4084, i32 0, i32 20
  %4086 = load i16, ptr %4085, align 2
  %4087 = icmp eq i16 %4086, 0
  br i1 %4087, label %4141, label %4088

4088:                                             ; preds = %4136, %4083
  %4089 = phi i16 [ %4137, %4136 ], [ %4086, %4083 ]
  %4090 = phi i32 [ %4138, %4136 ], [ 0, %4083 ]
  %4091 = getelementptr %struct.mxl5005s_state, ptr %4084, i32 0, i32 21, i32 %4090
  %4092 = load i16, ptr %4091, align 2
  %4093 = icmp eq i16 %4092, 29
  br i1 %4093, label %4094, label %4136

4094:                                             ; preds = %4088
  %4095 = getelementptr %struct.mxl5005s_state, ptr %4084, i32 0, i32 21, i32 %4090, i32 1
  %4096 = load i16, ptr %4095, align 2
  %4097 = icmp eq i16 %4096, 0
  br i1 %4097, label %4136, label %4098

4098:                                             ; preds = %4129, %4094
  %4099 = phi i32 [ %4130, %4129 ], [ 0, %4094 ]
  %4100 = getelementptr %struct.mxl5005s_state, ptr %4084, i32 0, i32 21, i32 %4090, i32 4, i32 %4099
  store i16 0, ptr %4100, align 2
  %4101 = getelementptr %struct.mxl5005s_state, ptr %4084, i32 0, i32 21, i32 %4090, i32 3, i32 %4099
  %4102 = load i16, ptr %4101, align 2
  %4103 = load ptr, ptr %2, align 4
  %4104 = getelementptr inbounds %struct.mxl5005s_state, ptr %4103, i32 0, i32 24
  %4105 = load i16, ptr %4104, align 4
  %4106 = zext i16 %4105 to i32
  %4107 = icmp eq i16 %4105, 0
  br i1 %4107, label %4129, label %4108

4108:                                             ; preds = %4098
  %4109 = getelementptr %struct.mxl5005s_state, ptr %4084, i32 0, i32 21, i32 %4090, i32 2, i32 %4099
  %4110 = load i16, ptr %4109, align 2
  %4111 = and i16 %4110, 255
  br label %4112

4112:                                             ; preds = %4126, %4108
  %4113 = phi i32 [ 0, %4108 ], [ %4127, %4126 ]
  %4114 = getelementptr %struct.mxl5005s_state, ptr %4103, i32 0, i32 25, i32 %4113
  %4115 = load i16, ptr %4114, align 2
  %4116 = icmp eq i16 %4115, %4111
  br i1 %4116, label %4117, label %4126

4117:                                             ; preds = %4112
  %4118 = and i16 %4102, 255
  %4119 = zext i16 %4118 to i32
  %4120 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4119
  %4121 = load i8, ptr %4120, align 1
  %4122 = zext i8 %4121 to i16
  %4123 = getelementptr %struct.mxl5005s_state, ptr %4103, i32 0, i32 25, i32 %4113, i32 1
  %4124 = load i16, ptr %4123, align 2
  %4125 = and i16 %4124, %4122
  store i16 %4125, ptr %4123, align 2
  br label %4129

4126:                                             ; preds = %4112
  %4127 = add nuw nsw i32 %4113, 1
  %4128 = icmp eq i32 %4127, %4106
  br i1 %4128, label %4129, label %4112

4129:                                             ; preds = %4126, %4117, %4098
  %4130 = add nuw nsw i32 %4099, 1
  %4131 = load i16, ptr %4095, align 2
  %4132 = zext i16 %4131 to i32
  %4133 = icmp ult i32 %4130, %4132
  br i1 %4133, label %4098, label %4134

4134:                                             ; preds = %4129
  %4135 = load i16, ptr %4085, align 2
  br label %4136

4136:                                             ; preds = %4134, %4094, %4088
  %4137 = phi i16 [ %4135, %4134 ], [ %4089, %4094 ], [ %4089, %4088 ]
  %4138 = add nuw nsw i32 %4090, 1
  %4139 = zext i16 %4137 to i32
  %4140 = icmp ult i32 %4138, %4139
  br i1 %4140, label %4088, label %4141

4141:                                             ; preds = %4136, %4083
  %4142 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %4143 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %4144 = add i16 %4020, %4016
  %4145 = add i16 %4144, %4021
  %4146 = add i16 %4145, %4022
  %4147 = add i16 %4146, %4023
  %4148 = add i16 %4147, %4142
  %4149 = add i16 %4148, %4143
  br label %4150

4150:                                             ; preds = %4141, %4015
  %4151 = phi i16 [ %4149, %4141 ], [ %4016, %4015 ]
  ret i16 %4151
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i16 @MXL_ControlWrite(ptr nocapture noundef readonly %0, i16 noundef zeroext %1, i32 noundef %2) unnamed_addr #9 {
  %4 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext %1, i32 noundef %2, i16 noundef zeroext 1)
  %5 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext %1, i32 noundef %2, i16 noundef zeroext 2)
  %6 = add i16 %5, %4
  ret i16 %6
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i16 @MXL_ControlWrite_Group(ptr nocapture noundef readonly %0, i16 noundef zeroext %1, i32 noundef %2, i16 noundef zeroext %3) unnamed_addr #9 {
  %5 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %6 = load ptr, ptr %5, align 4
  switch i16 %3, label %155 [
    i16 1, label %7
    i16 2, label %81
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 18
  %9 = load i16, ptr %8, align 4
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %155, label %11

11:                                               ; preds = %76, %7
  %12 = phi i16 [ %77, %76 ], [ %9, %7 ]
  %13 = phi i32 [ %78, %76 ], [ 0, %7 ]
  %14 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 19, i32 %13
  %15 = load i16, ptr %14, align 2
  %16 = icmp eq i16 %15, %1
  br i1 %16, label %17, label %76

17:                                               ; preds = %11
  %18 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 19, i32 %13, i32 1
  %19 = load i16, ptr %18, align 2
  %20 = zext i16 %19 to i32
  %21 = lshr i32 %2, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %155

23:                                               ; preds = %17
  %24 = icmp eq i16 %19, 0
  br i1 %24, label %76, label %25

25:                                               ; preds = %69, %23
  %26 = phi i32 [ %70, %69 ], [ 0, %23 ]
  %27 = lshr i32 %2, %26
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = zext i8 %29 to i16
  %31 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 19, i32 %13, i32 4, i32 %26
  store i16 %30, ptr %31, align 2
  %32 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 19, i32 %13, i32 3, i32 %26
  %33 = load i16, ptr %32, align 2
  %34 = load ptr, ptr %5, align 4
  %35 = getelementptr inbounds %struct.mxl5005s_state, ptr %34, i32 0, i32 24
  %36 = load i16, ptr %35, align 4
  %37 = zext i16 %36 to i32
  %38 = icmp eq i16 %36, 0
  br i1 %38, label %69, label %39

39:                                               ; preds = %25
  %40 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 19, i32 %13, i32 2, i32 %26
  %41 = load i16, ptr %40, align 2
  %42 = and i16 %41, 255
  br label %43

43:                                               ; preds = %66, %39
  %44 = phi i32 [ 0, %39 ], [ %67, %66 ]
  %45 = getelementptr %struct.mxl5005s_state, ptr %34, i32 0, i32 25, i32 %44
  %46 = load i16, ptr %45, align 2
  %47 = icmp eq i16 %46, %42
  br i1 %47, label %48, label %66

48:                                               ; preds = %43
  %49 = icmp eq i8 %29, 0
  %50 = and i16 %33, 255
  %51 = zext i16 %50 to i32
  br i1 %49, label %59, label %52

52:                                               ; preds = %48
  %53 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.OR_MAP, i32 0, i32 %51
  %54 = load i8, ptr %53, align 1
  %55 = zext i8 %54 to i16
  %56 = getelementptr %struct.mxl5005s_state, ptr %34, i32 0, i32 25, i32 %44, i32 1
  %57 = load i16, ptr %56, align 2
  %58 = or i16 %57, %55
  store i16 %58, ptr %56, align 2
  br label %69

59:                                               ; preds = %48
  %60 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %51
  %61 = load i8, ptr %60, align 1
  %62 = zext i8 %61 to i16
  %63 = getelementptr %struct.mxl5005s_state, ptr %34, i32 0, i32 25, i32 %44, i32 1
  %64 = load i16, ptr %63, align 2
  %65 = and i16 %64, %62
  store i16 %65, ptr %63, align 2
  br label %69

66:                                               ; preds = %43
  %67 = add nuw nsw i32 %44, 1
  %68 = icmp eq i32 %67, %37
  br i1 %68, label %69, label %43

69:                                               ; preds = %66, %59, %52, %25
  %70 = add nuw nsw i32 %26, 1
  %71 = load i16, ptr %18, align 2
  %72 = zext i16 %71 to i32
  %73 = icmp ult i32 %70, %72
  br i1 %73, label %25, label %74

74:                                               ; preds = %69
  %75 = load i16, ptr %8, align 4
  br label %76

76:                                               ; preds = %74, %23, %11
  %77 = phi i16 [ %75, %74 ], [ %12, %23 ], [ %12, %11 ]
  %78 = add nuw nsw i32 %13, 1
  %79 = zext i16 %77 to i32
  %80 = icmp ult i32 %78, %79
  br i1 %80, label %11, label %155

81:                                               ; preds = %4
  %82 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 20
  %83 = load i16, ptr %82, align 2
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %155, label %85

85:                                               ; preds = %150, %81
  %86 = phi i16 [ %151, %150 ], [ %83, %81 ]
  %87 = phi i32 [ %152, %150 ], [ 0, %81 ]
  %88 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 21, i32 %87
  %89 = load i16, ptr %88, align 2
  %90 = icmp eq i16 %89, %1
  br i1 %90, label %91, label %150

91:                                               ; preds = %85
  %92 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 21, i32 %87, i32 1
  %93 = load i16, ptr %92, align 2
  %94 = zext i16 %93 to i32
  %95 = lshr i32 %2, %94
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %155

97:                                               ; preds = %91
  %98 = icmp eq i16 %93, 0
  br i1 %98, label %150, label %99

99:                                               ; preds = %143, %97
  %100 = phi i32 [ %144, %143 ], [ 0, %97 ]
  %101 = lshr i32 %2, %100
  %102 = trunc i32 %101 to i8
  %103 = and i8 %102, 1
  %104 = zext i8 %103 to i16
  %105 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 21, i32 %87, i32 4, i32 %100
  store i16 %104, ptr %105, align 2
  %106 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 21, i32 %87, i32 3, i32 %100
  %107 = load i16, ptr %106, align 2
  %108 = load ptr, ptr %5, align 4
  %109 = getelementptr inbounds %struct.mxl5005s_state, ptr %108, i32 0, i32 24
  %110 = load i16, ptr %109, align 4
  %111 = zext i16 %110 to i32
  %112 = icmp eq i16 %110, 0
  br i1 %112, label %143, label %113

113:                                              ; preds = %99
  %114 = getelementptr %struct.mxl5005s_state, ptr %6, i32 0, i32 21, i32 %87, i32 2, i32 %100
  %115 = load i16, ptr %114, align 2
  %116 = and i16 %115, 255
  br label %117

117:                                              ; preds = %140, %113
  %118 = phi i32 [ 0, %113 ], [ %141, %140 ]
  %119 = getelementptr %struct.mxl5005s_state, ptr %108, i32 0, i32 25, i32 %118
  %120 = load i16, ptr %119, align 2
  %121 = icmp eq i16 %120, %116
  br i1 %121, label %122, label %140

122:                                              ; preds = %117
  %123 = icmp eq i8 %103, 0
  %124 = and i16 %107, 255
  %125 = zext i16 %124 to i32
  br i1 %123, label %133, label %126

126:                                              ; preds = %122
  %127 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.OR_MAP, i32 0, i32 %125
  %128 = load i8, ptr %127, align 1
  %129 = zext i8 %128 to i16
  %130 = getelementptr %struct.mxl5005s_state, ptr %108, i32 0, i32 25, i32 %118, i32 1
  %131 = load i16, ptr %130, align 2
  %132 = or i16 %131, %129
  store i16 %132, ptr %130, align 2
  br label %143

133:                                              ; preds = %122
  %134 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %125
  %135 = load i8, ptr %134, align 1
  %136 = zext i8 %135 to i16
  %137 = getelementptr %struct.mxl5005s_state, ptr %108, i32 0, i32 25, i32 %118, i32 1
  %138 = load i16, ptr %137, align 2
  %139 = and i16 %138, %136
  store i16 %139, ptr %137, align 2
  br label %143

140:                                              ; preds = %117
  %141 = add nuw nsw i32 %118, 1
  %142 = icmp eq i32 %141, %111
  br i1 %142, label %143, label %117

143:                                              ; preds = %140, %133, %126, %99
  %144 = add nuw nsw i32 %100, 1
  %145 = load i16, ptr %92, align 2
  %146 = zext i16 %145 to i32
  %147 = icmp ult i32 %144, %146
  br i1 %147, label %99, label %148

148:                                              ; preds = %143
  %149 = load i16, ptr %82, align 2
  br label %150

150:                                              ; preds = %148, %97, %85
  %151 = phi i16 [ %149, %148 ], [ %86, %97 ], [ %86, %85 ]
  %152 = add nuw nsw i32 %87, 1
  %153 = zext i16 %151 to i32
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %85, label %155

155:                                              ; preds = %150, %91, %81, %76, %17, %7, %4
  %156 = phi i16 [ 0, %4 ], [ 0, %81 ], [ 0, %7 ], [ -1, %17 ], [ 0, %76 ], [ -1, %91 ], [ 0, %150 ]
  ret i16 %156
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @MXL_TuneRF(ptr noundef readonly %0, i32 noundef %1) unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 5
  store i32 %1, ptr %5, align 4
  %6 = load ptr, ptr %3, align 4
  %7 = load i8, ptr %6, align 4
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 5
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 15
  store i32 %11, ptr %12, align 4
  %13 = add i32 %11, -750000
  br label %32

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 1
  %16 = load i8, ptr %15, align 1
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 5
  %19 = load i32, ptr %18, align 4
  br i1 %17, label %20, label %24

20:                                               ; preds = %14
  %21 = add i32 %19, -400000
  %22 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 15
  store i32 %21, ptr %22, align 4
  %23 = add i32 %19, -1750000
  br label %32

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 2
  %26 = load i32, ptr %25, align 4
  %27 = lshr i32 %26, 1
  %28 = sub i32 %19, %27
  %29 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = add i32 %19, 500000
  %31 = sub i32 %30, %26
  br label %32

32:                                               ; preds = %24, %20, %9
  %33 = phi i32 [ %23, %20 ], [ %31, %24 ], [ %13, %9 ]
  %34 = getelementptr inbounds %struct.mxl5005s_state, ptr %6, i32 0, i32 17
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = add i32 %36, -22000001
  %38 = icmp ult i32 %37, 10000000
  %39 = select i1 %38, i32 1, i32 2
  %40 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 15
  %41 = load i32, ptr %40, align 4
  %42 = icmp ult i32 %41, 40000000
  br i1 %42, label %20518, label %43

43:                                               ; preds = %32
  %44 = icmp ult i32 %41, 75000001
  br i1 %44, label %45, label %57

45:                                               ; preds = %43
  %46 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 2, i16 noundef zeroext 1) #12
  %47 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 2, i16 noundef zeroext 2) #12
  %48 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 1) #12
  %49 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 2) #12
  %50 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 423, i16 noundef zeroext 1) #12
  %51 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 423, i16 noundef zeroext 2) #12
  %52 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 1) #12
  %53 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 2) #12
  %54 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 1, i16 noundef zeroext 1) #12
  %55 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 1, i16 noundef zeroext 2) #12
  %56 = load i32, ptr %40, align 4
  br label %57

57:                                               ; preds = %45, %43
  %58 = phi i32 [ %56, %45 ], [ %41, %43 ]
  %59 = add i32 %58, -75000001
  %60 = icmp ult i32 %59, 25000000
  br i1 %60, label %61, label %73

61:                                               ; preds = %57
  %62 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 1) #12
  %63 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 2) #12
  %64 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 1) #12
  %65 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 2) #12
  %66 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 222, i16 noundef zeroext 1) #12
  %67 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 222, i16 noundef zeroext 2) #12
  %68 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 1) #12
  %69 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 2) #12
  %70 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 1, i16 noundef zeroext 1) #12
  %71 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 1, i16 noundef zeroext 2) #12
  %72 = load i32, ptr %40, align 4
  br label %73

73:                                               ; preds = %61, %57
  %74 = phi i32 [ %72, %61 ], [ %58, %57 ]
  %75 = add i32 %74, -100000001
  %76 = icmp ult i32 %75, 50000000
  br i1 %76, label %77, label %89

77:                                               ; preds = %73
  %78 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 1) #12
  %79 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 2) #12
  %80 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 1) #12
  %81 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 2) #12
  %82 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 147, i16 noundef zeroext 1) #12
  %83 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 147, i16 noundef zeroext 2) #12
  %84 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 1) #12
  %85 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 2) #12
  %86 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 2, i16 noundef zeroext 1) #12
  %87 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 2, i16 noundef zeroext 2) #12
  %88 = load i32, ptr %40, align 4
  br label %89

89:                                               ; preds = %77, %73
  %90 = phi i32 [ %88, %77 ], [ %74, %73 ]
  %91 = add i32 %90, -150000001
  %92 = icmp ult i32 %91, 50000000
  br i1 %92, label %93, label %105

93:                                               ; preds = %89
  %94 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 1) #12
  %95 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 2) #12
  %96 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 1) #12
  %97 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 2) #12
  %98 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 9, i16 noundef zeroext 1) #12
  %99 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 53, i32 noundef 9, i16 noundef zeroext 2) #12
  %100 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 1) #12
  %101 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 2) #12
  %102 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 2, i16 noundef zeroext 1) #12
  %103 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 2, i16 noundef zeroext 2) #12
  %104 = load i32, ptr %40, align 4
  br label %105

105:                                              ; preds = %93, %89
  %106 = phi i32 [ %104, %93 ], [ %90, %89 ]
  %107 = add i32 %106, -200000001
  %108 = icmp ult i32 %107, 100000000
  br i1 %108, label %109, label %237

109:                                              ; preds = %105
  %110 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 1) #12
  %111 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 2) #12
  %112 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 1) #12
  %113 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 3, i16 noundef zeroext 2) #12
  %114 = load ptr, ptr %3, align 4
  %115 = getelementptr inbounds %struct.mxl5005s_state, ptr %114, i32 0, i32 18
  %116 = load i16, ptr %115, align 4
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %173, label %118

118:                                              ; preds = %166, %109
  %119 = phi i16 [ %167, %166 ], [ %116, %109 ]
  %120 = phi i32 [ %168, %166 ], [ 0, %109 ]
  %121 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 19, i32 %120
  %122 = load i16, ptr %121, align 2
  %123 = icmp eq i16 %122, 53
  br i1 %123, label %124, label %166

124:                                              ; preds = %118
  %125 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 19, i32 %120, i32 1
  %126 = load i16, ptr %125, align 2
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %166, label %128

128:                                              ; preds = %159, %124
  %129 = phi i32 [ %160, %159 ], [ 0, %124 ]
  %130 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 19, i32 %120, i32 4, i32 %129
  store i16 0, ptr %130, align 2
  %131 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 19, i32 %120, i32 3, i32 %129
  %132 = load i16, ptr %131, align 2
  %133 = load ptr, ptr %3, align 4
  %134 = getelementptr inbounds %struct.mxl5005s_state, ptr %133, i32 0, i32 24
  %135 = load i16, ptr %134, align 4
  %136 = zext i16 %135 to i32
  %137 = icmp eq i16 %135, 0
  br i1 %137, label %159, label %138

138:                                              ; preds = %128
  %139 = getelementptr %struct.mxl5005s_state, ptr %114, i32 0, i32 19, i32 %120, i32 2, i32 %129
  %140 = load i16, ptr %139, align 2
  %141 = and i16 %140, 255
  br label %142

142:                                              ; preds = %156, %138
  %143 = phi i32 [ 0, %138 ], [ %157, %156 ]
  %144 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 25, i32 %143
  %145 = load i16, ptr %144, align 2
  %146 = icmp eq i16 %145, %141
  br i1 %146, label %147, label %156

147:                                              ; preds = %142
  %148 = and i16 %132, 255
  %149 = zext i16 %148 to i32
  %150 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %149
  %151 = load i8, ptr %150, align 1
  %152 = zext i8 %151 to i16
  %153 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 25, i32 %143, i32 1
  %154 = load i16, ptr %153, align 2
  %155 = and i16 %154, %152
  store i16 %155, ptr %153, align 2
  br label %159

156:                                              ; preds = %142
  %157 = add nuw nsw i32 %143, 1
  %158 = icmp eq i32 %157, %136
  br i1 %158, label %159, label %142

159:                                              ; preds = %156, %147, %128
  %160 = add nuw nsw i32 %129, 1
  %161 = load i16, ptr %125, align 2
  %162 = zext i16 %161 to i32
  %163 = icmp ult i32 %160, %162
  br i1 %163, label %128, label %164

164:                                              ; preds = %159
  %165 = load i16, ptr %115, align 4
  br label %166

166:                                              ; preds = %164, %124, %118
  %167 = phi i16 [ %165, %164 ], [ %119, %124 ], [ %119, %118 ]
  %168 = add nuw nsw i32 %120, 1
  %169 = zext i16 %167 to i32
  %170 = icmp ult i32 %168, %169
  br i1 %170, label %118, label %171

171:                                              ; preds = %166
  %172 = load ptr, ptr %3, align 4
  br label %173

173:                                              ; preds = %171, %109
  %174 = phi ptr [ %172, %171 ], [ %114, %109 ]
  %175 = getelementptr inbounds %struct.mxl5005s_state, ptr %174, i32 0, i32 20
  %176 = load i16, ptr %175, align 2
  %177 = icmp eq i16 %176, 0
  br i1 %177, label %231, label %178

178:                                              ; preds = %226, %173
  %179 = phi i16 [ %227, %226 ], [ %176, %173 ]
  %180 = phi i32 [ %228, %226 ], [ 0, %173 ]
  %181 = getelementptr %struct.mxl5005s_state, ptr %174, i32 0, i32 21, i32 %180
  %182 = load i16, ptr %181, align 2
  %183 = icmp eq i16 %182, 53
  br i1 %183, label %184, label %226

184:                                              ; preds = %178
  %185 = getelementptr %struct.mxl5005s_state, ptr %174, i32 0, i32 21, i32 %180, i32 1
  %186 = load i16, ptr %185, align 2
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %226, label %188

188:                                              ; preds = %219, %184
  %189 = phi i32 [ %220, %219 ], [ 0, %184 ]
  %190 = getelementptr %struct.mxl5005s_state, ptr %174, i32 0, i32 21, i32 %180, i32 4, i32 %189
  store i16 0, ptr %190, align 2
  %191 = getelementptr %struct.mxl5005s_state, ptr %174, i32 0, i32 21, i32 %180, i32 3, i32 %189
  %192 = load i16, ptr %191, align 2
  %193 = load ptr, ptr %3, align 4
  %194 = getelementptr inbounds %struct.mxl5005s_state, ptr %193, i32 0, i32 24
  %195 = load i16, ptr %194, align 4
  %196 = zext i16 %195 to i32
  %197 = icmp eq i16 %195, 0
  br i1 %197, label %219, label %198

198:                                              ; preds = %188
  %199 = getelementptr %struct.mxl5005s_state, ptr %174, i32 0, i32 21, i32 %180, i32 2, i32 %189
  %200 = load i16, ptr %199, align 2
  %201 = and i16 %200, 255
  br label %202

202:                                              ; preds = %216, %198
  %203 = phi i32 [ 0, %198 ], [ %217, %216 ]
  %204 = getelementptr %struct.mxl5005s_state, ptr %193, i32 0, i32 25, i32 %203
  %205 = load i16, ptr %204, align 2
  %206 = icmp eq i16 %205, %201
  br i1 %206, label %207, label %216

207:                                              ; preds = %202
  %208 = and i16 %192, 255
  %209 = zext i16 %208 to i32
  %210 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %209
  %211 = load i8, ptr %210, align 1
  %212 = zext i8 %211 to i16
  %213 = getelementptr %struct.mxl5005s_state, ptr %193, i32 0, i32 25, i32 %203, i32 1
  %214 = load i16, ptr %213, align 2
  %215 = and i16 %214, %212
  store i16 %215, ptr %213, align 2
  br label %219

216:                                              ; preds = %202
  %217 = add nuw nsw i32 %203, 1
  %218 = icmp eq i32 %217, %196
  br i1 %218, label %219, label %202

219:                                              ; preds = %216, %207, %188
  %220 = add nuw nsw i32 %189, 1
  %221 = load i16, ptr %185, align 2
  %222 = zext i16 %221 to i32
  %223 = icmp ult i32 %220, %222
  br i1 %223, label %188, label %224

224:                                              ; preds = %219
  %225 = load i16, ptr %175, align 2
  br label %226

226:                                              ; preds = %224, %184, %178
  %227 = phi i16 [ %225, %224 ], [ %179, %184 ], [ %179, %178 ]
  %228 = add nuw nsw i32 %180, 1
  %229 = zext i16 %227 to i32
  %230 = icmp ult i32 %228, %229
  br i1 %230, label %178, label %231

231:                                              ; preds = %226, %173
  %232 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 1) #12
  %233 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 54, i32 noundef 1, i16 noundef zeroext 2) #12
  %234 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 3, i16 noundef zeroext 1) #12
  %235 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 3, i16 noundef zeroext 2) #12
  %236 = load i32, ptr %40, align 4
  br label %237

237:                                              ; preds = %231, %105
  %238 = phi i32 [ %236, %231 ], [ %106, %105 ]
  %239 = add i32 %238, -300000001
  %240 = icmp ult i32 %239, 350000000
  br i1 %240, label %241, label %487

241:                                              ; preds = %237
  %242 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 1) #12
  %243 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 2) #12
  %244 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 1, i16 noundef zeroext 1) #12
  %245 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 1, i16 noundef zeroext 2) #12
  %246 = load ptr, ptr %3, align 4
  %247 = getelementptr inbounds %struct.mxl5005s_state, ptr %246, i32 0, i32 18
  %248 = load i16, ptr %247, align 4
  %249 = icmp eq i16 %248, 0
  br i1 %249, label %305, label %250

250:                                              ; preds = %298, %241
  %251 = phi i16 [ %299, %298 ], [ %248, %241 ]
  %252 = phi i32 [ %300, %298 ], [ 0, %241 ]
  %253 = getelementptr %struct.mxl5005s_state, ptr %246, i32 0, i32 19, i32 %252
  %254 = load i16, ptr %253, align 2
  %255 = icmp eq i16 %254, 53
  br i1 %255, label %256, label %298

256:                                              ; preds = %250
  %257 = getelementptr %struct.mxl5005s_state, ptr %246, i32 0, i32 19, i32 %252, i32 1
  %258 = load i16, ptr %257, align 2
  %259 = icmp eq i16 %258, 0
  br i1 %259, label %298, label %260

260:                                              ; preds = %291, %256
  %261 = phi i32 [ %292, %291 ], [ 0, %256 ]
  %262 = getelementptr %struct.mxl5005s_state, ptr %246, i32 0, i32 19, i32 %252, i32 4, i32 %261
  store i16 0, ptr %262, align 2
  %263 = getelementptr %struct.mxl5005s_state, ptr %246, i32 0, i32 19, i32 %252, i32 3, i32 %261
  %264 = load i16, ptr %263, align 2
  %265 = load ptr, ptr %3, align 4
  %266 = getelementptr inbounds %struct.mxl5005s_state, ptr %265, i32 0, i32 24
  %267 = load i16, ptr %266, align 4
  %268 = zext i16 %267 to i32
  %269 = icmp eq i16 %267, 0
  br i1 %269, label %291, label %270

270:                                              ; preds = %260
  %271 = getelementptr %struct.mxl5005s_state, ptr %246, i32 0, i32 19, i32 %252, i32 2, i32 %261
  %272 = load i16, ptr %271, align 2
  %273 = and i16 %272, 255
  br label %274

274:                                              ; preds = %288, %270
  %275 = phi i32 [ 0, %270 ], [ %289, %288 ]
  %276 = getelementptr %struct.mxl5005s_state, ptr %265, i32 0, i32 25, i32 %275
  %277 = load i16, ptr %276, align 2
  %278 = icmp eq i16 %277, %273
  br i1 %278, label %279, label %288

279:                                              ; preds = %274
  %280 = and i16 %264, 255
  %281 = zext i16 %280 to i32
  %282 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %281
  %283 = load i8, ptr %282, align 1
  %284 = zext i8 %283 to i16
  %285 = getelementptr %struct.mxl5005s_state, ptr %265, i32 0, i32 25, i32 %275, i32 1
  %286 = load i16, ptr %285, align 2
  %287 = and i16 %286, %284
  store i16 %287, ptr %285, align 2
  br label %291

288:                                              ; preds = %274
  %289 = add nuw nsw i32 %275, 1
  %290 = icmp eq i32 %289, %268
  br i1 %290, label %291, label %274

291:                                              ; preds = %288, %279, %260
  %292 = add nuw nsw i32 %261, 1
  %293 = load i16, ptr %257, align 2
  %294 = zext i16 %293 to i32
  %295 = icmp ult i32 %292, %294
  br i1 %295, label %260, label %296

296:                                              ; preds = %291
  %297 = load i16, ptr %247, align 4
  br label %298

298:                                              ; preds = %296, %256, %250
  %299 = phi i16 [ %297, %296 ], [ %251, %256 ], [ %251, %250 ]
  %300 = add nuw nsw i32 %252, 1
  %301 = zext i16 %299 to i32
  %302 = icmp ult i32 %300, %301
  br i1 %302, label %250, label %303

303:                                              ; preds = %298
  %304 = load ptr, ptr %3, align 4
  br label %305

305:                                              ; preds = %303, %241
  %306 = phi ptr [ %304, %303 ], [ %246, %241 ]
  %307 = getelementptr inbounds %struct.mxl5005s_state, ptr %306, i32 0, i32 20
  %308 = load i16, ptr %307, align 2
  %309 = icmp eq i16 %308, 0
  br i1 %309, label %365, label %310

310:                                              ; preds = %358, %305
  %311 = phi i16 [ %359, %358 ], [ %308, %305 ]
  %312 = phi i32 [ %360, %358 ], [ 0, %305 ]
  %313 = getelementptr %struct.mxl5005s_state, ptr %306, i32 0, i32 21, i32 %312
  %314 = load i16, ptr %313, align 2
  %315 = icmp eq i16 %314, 53
  br i1 %315, label %316, label %358

316:                                              ; preds = %310
  %317 = getelementptr %struct.mxl5005s_state, ptr %306, i32 0, i32 21, i32 %312, i32 1
  %318 = load i16, ptr %317, align 2
  %319 = icmp eq i16 %318, 0
  br i1 %319, label %358, label %320

320:                                              ; preds = %351, %316
  %321 = phi i32 [ %352, %351 ], [ 0, %316 ]
  %322 = getelementptr %struct.mxl5005s_state, ptr %306, i32 0, i32 21, i32 %312, i32 4, i32 %321
  store i16 0, ptr %322, align 2
  %323 = getelementptr %struct.mxl5005s_state, ptr %306, i32 0, i32 21, i32 %312, i32 3, i32 %321
  %324 = load i16, ptr %323, align 2
  %325 = load ptr, ptr %3, align 4
  %326 = getelementptr inbounds %struct.mxl5005s_state, ptr %325, i32 0, i32 24
  %327 = load i16, ptr %326, align 4
  %328 = zext i16 %327 to i32
  %329 = icmp eq i16 %327, 0
  br i1 %329, label %351, label %330

330:                                              ; preds = %320
  %331 = getelementptr %struct.mxl5005s_state, ptr %306, i32 0, i32 21, i32 %312, i32 2, i32 %321
  %332 = load i16, ptr %331, align 2
  %333 = and i16 %332, 255
  br label %334

334:                                              ; preds = %348, %330
  %335 = phi i32 [ 0, %330 ], [ %349, %348 ]
  %336 = getelementptr %struct.mxl5005s_state, ptr %325, i32 0, i32 25, i32 %335
  %337 = load i16, ptr %336, align 2
  %338 = icmp eq i16 %337, %333
  br i1 %338, label %339, label %348

339:                                              ; preds = %334
  %340 = and i16 %324, 255
  %341 = zext i16 %340 to i32
  %342 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %341
  %343 = load i8, ptr %342, align 1
  %344 = zext i8 %343 to i16
  %345 = getelementptr %struct.mxl5005s_state, ptr %325, i32 0, i32 25, i32 %335, i32 1
  %346 = load i16, ptr %345, align 2
  %347 = and i16 %346, %344
  store i16 %347, ptr %345, align 2
  br label %351

348:                                              ; preds = %334
  %349 = add nuw nsw i32 %335, 1
  %350 = icmp eq i32 %349, %328
  br i1 %350, label %351, label %334

351:                                              ; preds = %348, %339, %320
  %352 = add nuw nsw i32 %321, 1
  %353 = load i16, ptr %317, align 2
  %354 = zext i16 %353 to i32
  %355 = icmp ult i32 %352, %354
  br i1 %355, label %320, label %356

356:                                              ; preds = %351
  %357 = load i16, ptr %307, align 2
  br label %358

358:                                              ; preds = %356, %316, %310
  %359 = phi i16 [ %357, %356 ], [ %311, %316 ], [ %311, %310 ]
  %360 = add nuw nsw i32 %312, 1
  %361 = zext i16 %359 to i32
  %362 = icmp ult i32 %360, %361
  br i1 %362, label %310, label %363

363:                                              ; preds = %358
  %364 = load ptr, ptr %3, align 4
  br label %365

365:                                              ; preds = %363, %305
  %366 = phi ptr [ %364, %363 ], [ %306, %305 ]
  %367 = getelementptr inbounds %struct.mxl5005s_state, ptr %366, i32 0, i32 18
  %368 = load i16, ptr %367, align 4
  %369 = icmp eq i16 %368, 0
  br i1 %369, label %425, label %370

370:                                              ; preds = %418, %365
  %371 = phi i16 [ %419, %418 ], [ %368, %365 ]
  %372 = phi i32 [ %420, %418 ], [ 0, %365 ]
  %373 = getelementptr %struct.mxl5005s_state, ptr %366, i32 0, i32 19, i32 %372
  %374 = load i16, ptr %373, align 2
  %375 = icmp eq i16 %374, 54
  br i1 %375, label %376, label %418

376:                                              ; preds = %370
  %377 = getelementptr %struct.mxl5005s_state, ptr %366, i32 0, i32 19, i32 %372, i32 1
  %378 = load i16, ptr %377, align 2
  %379 = icmp eq i16 %378, 0
  br i1 %379, label %418, label %380

380:                                              ; preds = %411, %376
  %381 = phi i32 [ %412, %411 ], [ 0, %376 ]
  %382 = getelementptr %struct.mxl5005s_state, ptr %366, i32 0, i32 19, i32 %372, i32 4, i32 %381
  store i16 0, ptr %382, align 2
  %383 = getelementptr %struct.mxl5005s_state, ptr %366, i32 0, i32 19, i32 %372, i32 3, i32 %381
  %384 = load i16, ptr %383, align 2
  %385 = load ptr, ptr %3, align 4
  %386 = getelementptr inbounds %struct.mxl5005s_state, ptr %385, i32 0, i32 24
  %387 = load i16, ptr %386, align 4
  %388 = zext i16 %387 to i32
  %389 = icmp eq i16 %387, 0
  br i1 %389, label %411, label %390

390:                                              ; preds = %380
  %391 = getelementptr %struct.mxl5005s_state, ptr %366, i32 0, i32 19, i32 %372, i32 2, i32 %381
  %392 = load i16, ptr %391, align 2
  %393 = and i16 %392, 255
  br label %394

394:                                              ; preds = %408, %390
  %395 = phi i32 [ 0, %390 ], [ %409, %408 ]
  %396 = getelementptr %struct.mxl5005s_state, ptr %385, i32 0, i32 25, i32 %395
  %397 = load i16, ptr %396, align 2
  %398 = icmp eq i16 %397, %393
  br i1 %398, label %399, label %408

399:                                              ; preds = %394
  %400 = and i16 %384, 255
  %401 = zext i16 %400 to i32
  %402 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %401
  %403 = load i8, ptr %402, align 1
  %404 = zext i8 %403 to i16
  %405 = getelementptr %struct.mxl5005s_state, ptr %385, i32 0, i32 25, i32 %395, i32 1
  %406 = load i16, ptr %405, align 2
  %407 = and i16 %406, %404
  store i16 %407, ptr %405, align 2
  br label %411

408:                                              ; preds = %394
  %409 = add nuw nsw i32 %395, 1
  %410 = icmp eq i32 %409, %388
  br i1 %410, label %411, label %394

411:                                              ; preds = %408, %399, %380
  %412 = add nuw nsw i32 %381, 1
  %413 = load i16, ptr %377, align 2
  %414 = zext i16 %413 to i32
  %415 = icmp ult i32 %412, %414
  br i1 %415, label %380, label %416

416:                                              ; preds = %411
  %417 = load i16, ptr %367, align 4
  br label %418

418:                                              ; preds = %416, %376, %370
  %419 = phi i16 [ %417, %416 ], [ %371, %376 ], [ %371, %370 ]
  %420 = add nuw nsw i32 %372, 1
  %421 = zext i16 %419 to i32
  %422 = icmp ult i32 %420, %421
  br i1 %422, label %370, label %423

423:                                              ; preds = %418
  %424 = load ptr, ptr %3, align 4
  br label %425

425:                                              ; preds = %423, %365
  %426 = phi ptr [ %424, %423 ], [ %366, %365 ]
  %427 = getelementptr inbounds %struct.mxl5005s_state, ptr %426, i32 0, i32 20
  %428 = load i16, ptr %427, align 2
  %429 = icmp eq i16 %428, 0
  br i1 %429, label %483, label %430

430:                                              ; preds = %478, %425
  %431 = phi i16 [ %479, %478 ], [ %428, %425 ]
  %432 = phi i32 [ %480, %478 ], [ 0, %425 ]
  %433 = getelementptr %struct.mxl5005s_state, ptr %426, i32 0, i32 21, i32 %432
  %434 = load i16, ptr %433, align 2
  %435 = icmp eq i16 %434, 54
  br i1 %435, label %436, label %478

436:                                              ; preds = %430
  %437 = getelementptr %struct.mxl5005s_state, ptr %426, i32 0, i32 21, i32 %432, i32 1
  %438 = load i16, ptr %437, align 2
  %439 = icmp eq i16 %438, 0
  br i1 %439, label %478, label %440

440:                                              ; preds = %471, %436
  %441 = phi i32 [ %472, %471 ], [ 0, %436 ]
  %442 = getelementptr %struct.mxl5005s_state, ptr %426, i32 0, i32 21, i32 %432, i32 4, i32 %441
  store i16 0, ptr %442, align 2
  %443 = getelementptr %struct.mxl5005s_state, ptr %426, i32 0, i32 21, i32 %432, i32 3, i32 %441
  %444 = load i16, ptr %443, align 2
  %445 = load ptr, ptr %3, align 4
  %446 = getelementptr inbounds %struct.mxl5005s_state, ptr %445, i32 0, i32 24
  %447 = load i16, ptr %446, align 4
  %448 = zext i16 %447 to i32
  %449 = icmp eq i16 %447, 0
  br i1 %449, label %471, label %450

450:                                              ; preds = %440
  %451 = getelementptr %struct.mxl5005s_state, ptr %426, i32 0, i32 21, i32 %432, i32 2, i32 %441
  %452 = load i16, ptr %451, align 2
  %453 = and i16 %452, 255
  br label %454

454:                                              ; preds = %468, %450
  %455 = phi i32 [ 0, %450 ], [ %469, %468 ]
  %456 = getelementptr %struct.mxl5005s_state, ptr %445, i32 0, i32 25, i32 %455
  %457 = load i16, ptr %456, align 2
  %458 = icmp eq i16 %457, %453
  br i1 %458, label %459, label %468

459:                                              ; preds = %454
  %460 = and i16 %444, 255
  %461 = zext i16 %460 to i32
  %462 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %461
  %463 = load i8, ptr %462, align 1
  %464 = zext i8 %463 to i16
  %465 = getelementptr %struct.mxl5005s_state, ptr %445, i32 0, i32 25, i32 %455, i32 1
  %466 = load i16, ptr %465, align 2
  %467 = and i16 %466, %464
  store i16 %467, ptr %465, align 2
  br label %471

468:                                              ; preds = %454
  %469 = add nuw nsw i32 %455, 1
  %470 = icmp eq i32 %469, %448
  br i1 %470, label %471, label %454

471:                                              ; preds = %468, %459, %440
  %472 = add nuw nsw i32 %441, 1
  %473 = load i16, ptr %437, align 2
  %474 = zext i16 %473 to i32
  %475 = icmp ult i32 %472, %474
  br i1 %475, label %440, label %476

476:                                              ; preds = %471
  %477 = load i16, ptr %427, align 2
  br label %478

478:                                              ; preds = %476, %436, %430
  %479 = phi i16 [ %477, %476 ], [ %431, %436 ], [ %431, %430 ]
  %480 = add nuw nsw i32 %432, 1
  %481 = zext i16 %479 to i32
  %482 = icmp ult i32 %480, %481
  br i1 %482, label %430, label %483

483:                                              ; preds = %478, %425
  %484 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 3, i16 noundef zeroext 1) #12
  %485 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 3, i16 noundef zeroext 2) #12
  %486 = load i32, ptr %40, align 4
  br label %487

487:                                              ; preds = %483, %237
  %488 = phi i32 [ %486, %483 ], [ %238, %237 ]
  %489 = add i32 %488, -650000001
  %490 = icmp ult i32 %489, 250000000
  br i1 %490, label %491, label %737

491:                                              ; preds = %487
  %492 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 1) #12
  %493 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 51, i32 noundef 3, i16 noundef zeroext 2) #12
  %494 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 2, i16 noundef zeroext 1) #12
  %495 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 52, i32 noundef 2, i16 noundef zeroext 2) #12
  %496 = load ptr, ptr %3, align 4
  %497 = getelementptr inbounds %struct.mxl5005s_state, ptr %496, i32 0, i32 18
  %498 = load i16, ptr %497, align 4
  %499 = icmp eq i16 %498, 0
  br i1 %499, label %555, label %500

500:                                              ; preds = %548, %491
  %501 = phi i16 [ %549, %548 ], [ %498, %491 ]
  %502 = phi i32 [ %550, %548 ], [ 0, %491 ]
  %503 = getelementptr %struct.mxl5005s_state, ptr %496, i32 0, i32 19, i32 %502
  %504 = load i16, ptr %503, align 2
  %505 = icmp eq i16 %504, 53
  br i1 %505, label %506, label %548

506:                                              ; preds = %500
  %507 = getelementptr %struct.mxl5005s_state, ptr %496, i32 0, i32 19, i32 %502, i32 1
  %508 = load i16, ptr %507, align 2
  %509 = icmp eq i16 %508, 0
  br i1 %509, label %548, label %510

510:                                              ; preds = %541, %506
  %511 = phi i32 [ %542, %541 ], [ 0, %506 ]
  %512 = getelementptr %struct.mxl5005s_state, ptr %496, i32 0, i32 19, i32 %502, i32 4, i32 %511
  store i16 0, ptr %512, align 2
  %513 = getelementptr %struct.mxl5005s_state, ptr %496, i32 0, i32 19, i32 %502, i32 3, i32 %511
  %514 = load i16, ptr %513, align 2
  %515 = load ptr, ptr %3, align 4
  %516 = getelementptr inbounds %struct.mxl5005s_state, ptr %515, i32 0, i32 24
  %517 = load i16, ptr %516, align 4
  %518 = zext i16 %517 to i32
  %519 = icmp eq i16 %517, 0
  br i1 %519, label %541, label %520

520:                                              ; preds = %510
  %521 = getelementptr %struct.mxl5005s_state, ptr %496, i32 0, i32 19, i32 %502, i32 2, i32 %511
  %522 = load i16, ptr %521, align 2
  %523 = and i16 %522, 255
  br label %524

524:                                              ; preds = %538, %520
  %525 = phi i32 [ 0, %520 ], [ %539, %538 ]
  %526 = getelementptr %struct.mxl5005s_state, ptr %515, i32 0, i32 25, i32 %525
  %527 = load i16, ptr %526, align 2
  %528 = icmp eq i16 %527, %523
  br i1 %528, label %529, label %538

529:                                              ; preds = %524
  %530 = and i16 %514, 255
  %531 = zext i16 %530 to i32
  %532 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %531
  %533 = load i8, ptr %532, align 1
  %534 = zext i8 %533 to i16
  %535 = getelementptr %struct.mxl5005s_state, ptr %515, i32 0, i32 25, i32 %525, i32 1
  %536 = load i16, ptr %535, align 2
  %537 = and i16 %536, %534
  store i16 %537, ptr %535, align 2
  br label %541

538:                                              ; preds = %524
  %539 = add nuw nsw i32 %525, 1
  %540 = icmp eq i32 %539, %518
  br i1 %540, label %541, label %524

541:                                              ; preds = %538, %529, %510
  %542 = add nuw nsw i32 %511, 1
  %543 = load i16, ptr %507, align 2
  %544 = zext i16 %543 to i32
  %545 = icmp ult i32 %542, %544
  br i1 %545, label %510, label %546

546:                                              ; preds = %541
  %547 = load i16, ptr %497, align 4
  br label %548

548:                                              ; preds = %546, %506, %500
  %549 = phi i16 [ %547, %546 ], [ %501, %506 ], [ %501, %500 ]
  %550 = add nuw nsw i32 %502, 1
  %551 = zext i16 %549 to i32
  %552 = icmp ult i32 %550, %551
  br i1 %552, label %500, label %553

553:                                              ; preds = %548
  %554 = load ptr, ptr %3, align 4
  br label %555

555:                                              ; preds = %553, %491
  %556 = phi ptr [ %554, %553 ], [ %496, %491 ]
  %557 = getelementptr inbounds %struct.mxl5005s_state, ptr %556, i32 0, i32 20
  %558 = load i16, ptr %557, align 2
  %559 = icmp eq i16 %558, 0
  br i1 %559, label %615, label %560

560:                                              ; preds = %608, %555
  %561 = phi i16 [ %609, %608 ], [ %558, %555 ]
  %562 = phi i32 [ %610, %608 ], [ 0, %555 ]
  %563 = getelementptr %struct.mxl5005s_state, ptr %556, i32 0, i32 21, i32 %562
  %564 = load i16, ptr %563, align 2
  %565 = icmp eq i16 %564, 53
  br i1 %565, label %566, label %608

566:                                              ; preds = %560
  %567 = getelementptr %struct.mxl5005s_state, ptr %556, i32 0, i32 21, i32 %562, i32 1
  %568 = load i16, ptr %567, align 2
  %569 = icmp eq i16 %568, 0
  br i1 %569, label %608, label %570

570:                                              ; preds = %601, %566
  %571 = phi i32 [ %602, %601 ], [ 0, %566 ]
  %572 = getelementptr %struct.mxl5005s_state, ptr %556, i32 0, i32 21, i32 %562, i32 4, i32 %571
  store i16 0, ptr %572, align 2
  %573 = getelementptr %struct.mxl5005s_state, ptr %556, i32 0, i32 21, i32 %562, i32 3, i32 %571
  %574 = load i16, ptr %573, align 2
  %575 = load ptr, ptr %3, align 4
  %576 = getelementptr inbounds %struct.mxl5005s_state, ptr %575, i32 0, i32 24
  %577 = load i16, ptr %576, align 4
  %578 = zext i16 %577 to i32
  %579 = icmp eq i16 %577, 0
  br i1 %579, label %601, label %580

580:                                              ; preds = %570
  %581 = getelementptr %struct.mxl5005s_state, ptr %556, i32 0, i32 21, i32 %562, i32 2, i32 %571
  %582 = load i16, ptr %581, align 2
  %583 = and i16 %582, 255
  br label %584

584:                                              ; preds = %598, %580
  %585 = phi i32 [ 0, %580 ], [ %599, %598 ]
  %586 = getelementptr %struct.mxl5005s_state, ptr %575, i32 0, i32 25, i32 %585
  %587 = load i16, ptr %586, align 2
  %588 = icmp eq i16 %587, %583
  br i1 %588, label %589, label %598

589:                                              ; preds = %584
  %590 = and i16 %574, 255
  %591 = zext i16 %590 to i32
  %592 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %591
  %593 = load i8, ptr %592, align 1
  %594 = zext i8 %593 to i16
  %595 = getelementptr %struct.mxl5005s_state, ptr %575, i32 0, i32 25, i32 %585, i32 1
  %596 = load i16, ptr %595, align 2
  %597 = and i16 %596, %594
  store i16 %597, ptr %595, align 2
  br label %601

598:                                              ; preds = %584
  %599 = add nuw nsw i32 %585, 1
  %600 = icmp eq i32 %599, %578
  br i1 %600, label %601, label %584

601:                                              ; preds = %598, %589, %570
  %602 = add nuw nsw i32 %571, 1
  %603 = load i16, ptr %567, align 2
  %604 = zext i16 %603 to i32
  %605 = icmp ult i32 %602, %604
  br i1 %605, label %570, label %606

606:                                              ; preds = %601
  %607 = load i16, ptr %557, align 2
  br label %608

608:                                              ; preds = %606, %566, %560
  %609 = phi i16 [ %607, %606 ], [ %561, %566 ], [ %561, %560 ]
  %610 = add nuw nsw i32 %562, 1
  %611 = zext i16 %609 to i32
  %612 = icmp ult i32 %610, %611
  br i1 %612, label %560, label %613

613:                                              ; preds = %608
  %614 = load ptr, ptr %3, align 4
  br label %615

615:                                              ; preds = %613, %555
  %616 = phi ptr [ %614, %613 ], [ %556, %555 ]
  %617 = getelementptr inbounds %struct.mxl5005s_state, ptr %616, i32 0, i32 18
  %618 = load i16, ptr %617, align 4
  %619 = icmp eq i16 %618, 0
  br i1 %619, label %675, label %620

620:                                              ; preds = %668, %615
  %621 = phi i16 [ %669, %668 ], [ %618, %615 ]
  %622 = phi i32 [ %670, %668 ], [ 0, %615 ]
  %623 = getelementptr %struct.mxl5005s_state, ptr %616, i32 0, i32 19, i32 %622
  %624 = load i16, ptr %623, align 2
  %625 = icmp eq i16 %624, 54
  br i1 %625, label %626, label %668

626:                                              ; preds = %620
  %627 = getelementptr %struct.mxl5005s_state, ptr %616, i32 0, i32 19, i32 %622, i32 1
  %628 = load i16, ptr %627, align 2
  %629 = icmp eq i16 %628, 0
  br i1 %629, label %668, label %630

630:                                              ; preds = %661, %626
  %631 = phi i32 [ %662, %661 ], [ 0, %626 ]
  %632 = getelementptr %struct.mxl5005s_state, ptr %616, i32 0, i32 19, i32 %622, i32 4, i32 %631
  store i16 0, ptr %632, align 2
  %633 = getelementptr %struct.mxl5005s_state, ptr %616, i32 0, i32 19, i32 %622, i32 3, i32 %631
  %634 = load i16, ptr %633, align 2
  %635 = load ptr, ptr %3, align 4
  %636 = getelementptr inbounds %struct.mxl5005s_state, ptr %635, i32 0, i32 24
  %637 = load i16, ptr %636, align 4
  %638 = zext i16 %637 to i32
  %639 = icmp eq i16 %637, 0
  br i1 %639, label %661, label %640

640:                                              ; preds = %630
  %641 = getelementptr %struct.mxl5005s_state, ptr %616, i32 0, i32 19, i32 %622, i32 2, i32 %631
  %642 = load i16, ptr %641, align 2
  %643 = and i16 %642, 255
  br label %644

644:                                              ; preds = %658, %640
  %645 = phi i32 [ 0, %640 ], [ %659, %658 ]
  %646 = getelementptr %struct.mxl5005s_state, ptr %635, i32 0, i32 25, i32 %645
  %647 = load i16, ptr %646, align 2
  %648 = icmp eq i16 %647, %643
  br i1 %648, label %649, label %658

649:                                              ; preds = %644
  %650 = and i16 %634, 255
  %651 = zext i16 %650 to i32
  %652 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %651
  %653 = load i8, ptr %652, align 1
  %654 = zext i8 %653 to i16
  %655 = getelementptr %struct.mxl5005s_state, ptr %635, i32 0, i32 25, i32 %645, i32 1
  %656 = load i16, ptr %655, align 2
  %657 = and i16 %656, %654
  store i16 %657, ptr %655, align 2
  br label %661

658:                                              ; preds = %644
  %659 = add nuw nsw i32 %645, 1
  %660 = icmp eq i32 %659, %638
  br i1 %660, label %661, label %644

661:                                              ; preds = %658, %649, %630
  %662 = add nuw nsw i32 %631, 1
  %663 = load i16, ptr %627, align 2
  %664 = zext i16 %663 to i32
  %665 = icmp ult i32 %662, %664
  br i1 %665, label %630, label %666

666:                                              ; preds = %661
  %667 = load i16, ptr %617, align 4
  br label %668

668:                                              ; preds = %666, %626, %620
  %669 = phi i16 [ %667, %666 ], [ %621, %626 ], [ %621, %620 ]
  %670 = add nuw nsw i32 %622, 1
  %671 = zext i16 %669 to i32
  %672 = icmp ult i32 %670, %671
  br i1 %672, label %620, label %673

673:                                              ; preds = %668
  %674 = load ptr, ptr %3, align 4
  br label %675

675:                                              ; preds = %673, %615
  %676 = phi ptr [ %674, %673 ], [ %616, %615 ]
  %677 = getelementptr inbounds %struct.mxl5005s_state, ptr %676, i32 0, i32 20
  %678 = load i16, ptr %677, align 2
  %679 = icmp eq i16 %678, 0
  br i1 %679, label %733, label %680

680:                                              ; preds = %728, %675
  %681 = phi i16 [ %729, %728 ], [ %678, %675 ]
  %682 = phi i32 [ %730, %728 ], [ 0, %675 ]
  %683 = getelementptr %struct.mxl5005s_state, ptr %676, i32 0, i32 21, i32 %682
  %684 = load i16, ptr %683, align 2
  %685 = icmp eq i16 %684, 54
  br i1 %685, label %686, label %728

686:                                              ; preds = %680
  %687 = getelementptr %struct.mxl5005s_state, ptr %676, i32 0, i32 21, i32 %682, i32 1
  %688 = load i16, ptr %687, align 2
  %689 = icmp eq i16 %688, 0
  br i1 %689, label %728, label %690

690:                                              ; preds = %721, %686
  %691 = phi i32 [ %722, %721 ], [ 0, %686 ]
  %692 = getelementptr %struct.mxl5005s_state, ptr %676, i32 0, i32 21, i32 %682, i32 4, i32 %691
  store i16 0, ptr %692, align 2
  %693 = getelementptr %struct.mxl5005s_state, ptr %676, i32 0, i32 21, i32 %682, i32 3, i32 %691
  %694 = load i16, ptr %693, align 2
  %695 = load ptr, ptr %3, align 4
  %696 = getelementptr inbounds %struct.mxl5005s_state, ptr %695, i32 0, i32 24
  %697 = load i16, ptr %696, align 4
  %698 = zext i16 %697 to i32
  %699 = icmp eq i16 %697, 0
  br i1 %699, label %721, label %700

700:                                              ; preds = %690
  %701 = getelementptr %struct.mxl5005s_state, ptr %676, i32 0, i32 21, i32 %682, i32 2, i32 %691
  %702 = load i16, ptr %701, align 2
  %703 = and i16 %702, 255
  br label %704

704:                                              ; preds = %718, %700
  %705 = phi i32 [ 0, %700 ], [ %719, %718 ]
  %706 = getelementptr %struct.mxl5005s_state, ptr %695, i32 0, i32 25, i32 %705
  %707 = load i16, ptr %706, align 2
  %708 = icmp eq i16 %707, %703
  br i1 %708, label %709, label %718

709:                                              ; preds = %704
  %710 = and i16 %694, 255
  %711 = zext i16 %710 to i32
  %712 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %711
  %713 = load i8, ptr %712, align 1
  %714 = zext i8 %713 to i16
  %715 = getelementptr %struct.mxl5005s_state, ptr %695, i32 0, i32 25, i32 %705, i32 1
  %716 = load i16, ptr %715, align 2
  %717 = and i16 %716, %714
  store i16 %717, ptr %715, align 2
  br label %721

718:                                              ; preds = %704
  %719 = add nuw nsw i32 %705, 1
  %720 = icmp eq i32 %719, %698
  br i1 %720, label %721, label %704

721:                                              ; preds = %718, %709, %690
  %722 = add nuw nsw i32 %691, 1
  %723 = load i16, ptr %687, align 2
  %724 = zext i16 %723 to i32
  %725 = icmp ult i32 %722, %724
  br i1 %725, label %690, label %726

726:                                              ; preds = %721
  %727 = load i16, ptr %677, align 2
  br label %728

728:                                              ; preds = %726, %686, %680
  %729 = phi i16 [ %727, %726 ], [ %681, %686 ], [ %681, %680 ]
  %730 = add nuw nsw i32 %682, 1
  %731 = zext i16 %729 to i32
  %732 = icmp ult i32 %730, %731
  br i1 %732, label %680, label %733

733:                                              ; preds = %728, %675
  %734 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 3, i16 noundef zeroext 1) #12
  %735 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 55, i32 noundef 3, i16 noundef zeroext 2) #12
  %736 = load i32, ptr %40, align 4
  br label %737

737:                                              ; preds = %733, %487
  %738 = phi i32 [ %736, %733 ], [ %488, %487 ]
  %739 = icmp ugt i32 %738, 900000000
  br i1 %739, label %20518, label %740

740:                                              ; preds = %737
  %741 = add nsw i32 %738, -40000000
  %742 = icmp ult i32 %741, 35000001
  br i1 %742, label %743, label %863

743:                                              ; preds = %740
  %744 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %745 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %746 = load ptr, ptr %3, align 4
  %747 = getelementptr inbounds %struct.mxl5005s_state, ptr %746, i32 0, i32 18
  %748 = load i16, ptr %747, align 4
  %749 = icmp eq i16 %748, 0
  br i1 %749, label %805, label %750

750:                                              ; preds = %798, %743
  %751 = phi i16 [ %799, %798 ], [ %748, %743 ]
  %752 = phi i32 [ %800, %798 ], [ 0, %743 ]
  %753 = getelementptr %struct.mxl5005s_state, ptr %746, i32 0, i32 19, i32 %752
  %754 = load i16, ptr %753, align 2
  %755 = icmp eq i16 %754, 57
  br i1 %755, label %756, label %798

756:                                              ; preds = %750
  %757 = getelementptr %struct.mxl5005s_state, ptr %746, i32 0, i32 19, i32 %752, i32 1
  %758 = load i16, ptr %757, align 2
  %759 = icmp eq i16 %758, 0
  br i1 %759, label %798, label %760

760:                                              ; preds = %791, %756
  %761 = phi i32 [ %792, %791 ], [ 0, %756 ]
  %762 = getelementptr %struct.mxl5005s_state, ptr %746, i32 0, i32 19, i32 %752, i32 4, i32 %761
  store i16 0, ptr %762, align 2
  %763 = getelementptr %struct.mxl5005s_state, ptr %746, i32 0, i32 19, i32 %752, i32 3, i32 %761
  %764 = load i16, ptr %763, align 2
  %765 = load ptr, ptr %3, align 4
  %766 = getelementptr inbounds %struct.mxl5005s_state, ptr %765, i32 0, i32 24
  %767 = load i16, ptr %766, align 4
  %768 = zext i16 %767 to i32
  %769 = icmp eq i16 %767, 0
  br i1 %769, label %791, label %770

770:                                              ; preds = %760
  %771 = getelementptr %struct.mxl5005s_state, ptr %746, i32 0, i32 19, i32 %752, i32 2, i32 %761
  %772 = load i16, ptr %771, align 2
  %773 = and i16 %772, 255
  br label %774

774:                                              ; preds = %788, %770
  %775 = phi i32 [ 0, %770 ], [ %789, %788 ]
  %776 = getelementptr %struct.mxl5005s_state, ptr %765, i32 0, i32 25, i32 %775
  %777 = load i16, ptr %776, align 2
  %778 = icmp eq i16 %777, %773
  br i1 %778, label %779, label %788

779:                                              ; preds = %774
  %780 = and i16 %764, 255
  %781 = zext i16 %780 to i32
  %782 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %781
  %783 = load i8, ptr %782, align 1
  %784 = zext i8 %783 to i16
  %785 = getelementptr %struct.mxl5005s_state, ptr %765, i32 0, i32 25, i32 %775, i32 1
  %786 = load i16, ptr %785, align 2
  %787 = and i16 %786, %784
  store i16 %787, ptr %785, align 2
  br label %791

788:                                              ; preds = %774
  %789 = add nuw nsw i32 %775, 1
  %790 = icmp eq i32 %789, %768
  br i1 %790, label %791, label %774

791:                                              ; preds = %788, %779, %760
  %792 = add nuw nsw i32 %761, 1
  %793 = load i16, ptr %757, align 2
  %794 = zext i16 %793 to i32
  %795 = icmp ult i32 %792, %794
  br i1 %795, label %760, label %796

796:                                              ; preds = %791
  %797 = load i16, ptr %747, align 4
  br label %798

798:                                              ; preds = %796, %756, %750
  %799 = phi i16 [ %797, %796 ], [ %751, %756 ], [ %751, %750 ]
  %800 = add nuw nsw i32 %752, 1
  %801 = zext i16 %799 to i32
  %802 = icmp ult i32 %800, %801
  br i1 %802, label %750, label %803

803:                                              ; preds = %798
  %804 = load ptr, ptr %3, align 4
  br label %805

805:                                              ; preds = %803, %743
  %806 = phi ptr [ %804, %803 ], [ %746, %743 ]
  %807 = getelementptr inbounds %struct.mxl5005s_state, ptr %806, i32 0, i32 20
  %808 = load i16, ptr %807, align 2
  %809 = icmp eq i16 %808, 0
  br i1 %809, label %863, label %810

810:                                              ; preds = %858, %805
  %811 = phi i16 [ %859, %858 ], [ %808, %805 ]
  %812 = phi i32 [ %860, %858 ], [ 0, %805 ]
  %813 = getelementptr %struct.mxl5005s_state, ptr %806, i32 0, i32 21, i32 %812
  %814 = load i16, ptr %813, align 2
  %815 = icmp eq i16 %814, 57
  br i1 %815, label %816, label %858

816:                                              ; preds = %810
  %817 = getelementptr %struct.mxl5005s_state, ptr %806, i32 0, i32 21, i32 %812, i32 1
  %818 = load i16, ptr %817, align 2
  %819 = icmp eq i16 %818, 0
  br i1 %819, label %858, label %820

820:                                              ; preds = %851, %816
  %821 = phi i32 [ %852, %851 ], [ 0, %816 ]
  %822 = getelementptr %struct.mxl5005s_state, ptr %806, i32 0, i32 21, i32 %812, i32 4, i32 %821
  store i16 0, ptr %822, align 2
  %823 = getelementptr %struct.mxl5005s_state, ptr %806, i32 0, i32 21, i32 %812, i32 3, i32 %821
  %824 = load i16, ptr %823, align 2
  %825 = load ptr, ptr %3, align 4
  %826 = getelementptr inbounds %struct.mxl5005s_state, ptr %825, i32 0, i32 24
  %827 = load i16, ptr %826, align 4
  %828 = zext i16 %827 to i32
  %829 = icmp eq i16 %827, 0
  br i1 %829, label %851, label %830

830:                                              ; preds = %820
  %831 = getelementptr %struct.mxl5005s_state, ptr %806, i32 0, i32 21, i32 %812, i32 2, i32 %821
  %832 = load i16, ptr %831, align 2
  %833 = and i16 %832, 255
  br label %834

834:                                              ; preds = %848, %830
  %835 = phi i32 [ 0, %830 ], [ %849, %848 ]
  %836 = getelementptr %struct.mxl5005s_state, ptr %825, i32 0, i32 25, i32 %835
  %837 = load i16, ptr %836, align 2
  %838 = icmp eq i16 %837, %833
  br i1 %838, label %839, label %848

839:                                              ; preds = %834
  %840 = and i16 %824, 255
  %841 = zext i16 %840 to i32
  %842 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %841
  %843 = load i8, ptr %842, align 1
  %844 = zext i8 %843 to i16
  %845 = getelementptr %struct.mxl5005s_state, ptr %825, i32 0, i32 25, i32 %835, i32 1
  %846 = load i16, ptr %845, align 2
  %847 = and i16 %846, %844
  store i16 %847, ptr %845, align 2
  br label %851

848:                                              ; preds = %834
  %849 = add nuw nsw i32 %835, 1
  %850 = icmp eq i32 %849, %828
  br i1 %850, label %851, label %834

851:                                              ; preds = %848, %839, %820
  %852 = add nuw nsw i32 %821, 1
  %853 = load i16, ptr %817, align 2
  %854 = zext i16 %853 to i32
  %855 = icmp ult i32 %852, %854
  br i1 %855, label %820, label %856

856:                                              ; preds = %851
  %857 = load i16, ptr %807, align 2
  br label %858

858:                                              ; preds = %856, %816, %810
  %859 = phi i16 [ %857, %856 ], [ %811, %816 ], [ %811, %810 ]
  %860 = add nuw nsw i32 %812, 1
  %861 = zext i16 %859 to i32
  %862 = icmp ult i32 %860, %861
  br i1 %862, label %810, label %863

863:                                              ; preds = %858, %805, %740
  %864 = load i32, ptr %40, align 4
  %865 = add i32 %864, -75000001
  %866 = icmp ult i32 %865, 25000000
  br i1 %866, label %867, label %987

867:                                              ; preds = %863
  %868 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %869 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %870 = load ptr, ptr %3, align 4
  %871 = getelementptr inbounds %struct.mxl5005s_state, ptr %870, i32 0, i32 18
  %872 = load i16, ptr %871, align 4
  %873 = icmp eq i16 %872, 0
  br i1 %873, label %929, label %874

874:                                              ; preds = %922, %867
  %875 = phi i16 [ %923, %922 ], [ %872, %867 ]
  %876 = phi i32 [ %924, %922 ], [ 0, %867 ]
  %877 = getelementptr %struct.mxl5005s_state, ptr %870, i32 0, i32 19, i32 %876
  %878 = load i16, ptr %877, align 2
  %879 = icmp eq i16 %878, 57
  br i1 %879, label %880, label %922

880:                                              ; preds = %874
  %881 = getelementptr %struct.mxl5005s_state, ptr %870, i32 0, i32 19, i32 %876, i32 1
  %882 = load i16, ptr %881, align 2
  %883 = icmp eq i16 %882, 0
  br i1 %883, label %922, label %884

884:                                              ; preds = %915, %880
  %885 = phi i32 [ %916, %915 ], [ 0, %880 ]
  %886 = getelementptr %struct.mxl5005s_state, ptr %870, i32 0, i32 19, i32 %876, i32 4, i32 %885
  store i16 0, ptr %886, align 2
  %887 = getelementptr %struct.mxl5005s_state, ptr %870, i32 0, i32 19, i32 %876, i32 3, i32 %885
  %888 = load i16, ptr %887, align 2
  %889 = load ptr, ptr %3, align 4
  %890 = getelementptr inbounds %struct.mxl5005s_state, ptr %889, i32 0, i32 24
  %891 = load i16, ptr %890, align 4
  %892 = zext i16 %891 to i32
  %893 = icmp eq i16 %891, 0
  br i1 %893, label %915, label %894

894:                                              ; preds = %884
  %895 = getelementptr %struct.mxl5005s_state, ptr %870, i32 0, i32 19, i32 %876, i32 2, i32 %885
  %896 = load i16, ptr %895, align 2
  %897 = and i16 %896, 255
  br label %898

898:                                              ; preds = %912, %894
  %899 = phi i32 [ 0, %894 ], [ %913, %912 ]
  %900 = getelementptr %struct.mxl5005s_state, ptr %889, i32 0, i32 25, i32 %899
  %901 = load i16, ptr %900, align 2
  %902 = icmp eq i16 %901, %897
  br i1 %902, label %903, label %912

903:                                              ; preds = %898
  %904 = and i16 %888, 255
  %905 = zext i16 %904 to i32
  %906 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %905
  %907 = load i8, ptr %906, align 1
  %908 = zext i8 %907 to i16
  %909 = getelementptr %struct.mxl5005s_state, ptr %889, i32 0, i32 25, i32 %899, i32 1
  %910 = load i16, ptr %909, align 2
  %911 = and i16 %910, %908
  store i16 %911, ptr %909, align 2
  br label %915

912:                                              ; preds = %898
  %913 = add nuw nsw i32 %899, 1
  %914 = icmp eq i32 %913, %892
  br i1 %914, label %915, label %898

915:                                              ; preds = %912, %903, %884
  %916 = add nuw nsw i32 %885, 1
  %917 = load i16, ptr %881, align 2
  %918 = zext i16 %917 to i32
  %919 = icmp ult i32 %916, %918
  br i1 %919, label %884, label %920

920:                                              ; preds = %915
  %921 = load i16, ptr %871, align 4
  br label %922

922:                                              ; preds = %920, %880, %874
  %923 = phi i16 [ %921, %920 ], [ %875, %880 ], [ %875, %874 ]
  %924 = add nuw nsw i32 %876, 1
  %925 = zext i16 %923 to i32
  %926 = icmp ult i32 %924, %925
  br i1 %926, label %874, label %927

927:                                              ; preds = %922
  %928 = load ptr, ptr %3, align 4
  br label %929

929:                                              ; preds = %927, %867
  %930 = phi ptr [ %928, %927 ], [ %870, %867 ]
  %931 = getelementptr inbounds %struct.mxl5005s_state, ptr %930, i32 0, i32 20
  %932 = load i16, ptr %931, align 2
  %933 = icmp eq i16 %932, 0
  br i1 %933, label %987, label %934

934:                                              ; preds = %982, %929
  %935 = phi i16 [ %983, %982 ], [ %932, %929 ]
  %936 = phi i32 [ %984, %982 ], [ 0, %929 ]
  %937 = getelementptr %struct.mxl5005s_state, ptr %930, i32 0, i32 21, i32 %936
  %938 = load i16, ptr %937, align 2
  %939 = icmp eq i16 %938, 57
  br i1 %939, label %940, label %982

940:                                              ; preds = %934
  %941 = getelementptr %struct.mxl5005s_state, ptr %930, i32 0, i32 21, i32 %936, i32 1
  %942 = load i16, ptr %941, align 2
  %943 = icmp eq i16 %942, 0
  br i1 %943, label %982, label %944

944:                                              ; preds = %975, %940
  %945 = phi i32 [ %976, %975 ], [ 0, %940 ]
  %946 = getelementptr %struct.mxl5005s_state, ptr %930, i32 0, i32 21, i32 %936, i32 4, i32 %945
  store i16 0, ptr %946, align 2
  %947 = getelementptr %struct.mxl5005s_state, ptr %930, i32 0, i32 21, i32 %936, i32 3, i32 %945
  %948 = load i16, ptr %947, align 2
  %949 = load ptr, ptr %3, align 4
  %950 = getelementptr inbounds %struct.mxl5005s_state, ptr %949, i32 0, i32 24
  %951 = load i16, ptr %950, align 4
  %952 = zext i16 %951 to i32
  %953 = icmp eq i16 %951, 0
  br i1 %953, label %975, label %954

954:                                              ; preds = %944
  %955 = getelementptr %struct.mxl5005s_state, ptr %930, i32 0, i32 21, i32 %936, i32 2, i32 %945
  %956 = load i16, ptr %955, align 2
  %957 = and i16 %956, 255
  br label %958

958:                                              ; preds = %972, %954
  %959 = phi i32 [ 0, %954 ], [ %973, %972 ]
  %960 = getelementptr %struct.mxl5005s_state, ptr %949, i32 0, i32 25, i32 %959
  %961 = load i16, ptr %960, align 2
  %962 = icmp eq i16 %961, %957
  br i1 %962, label %963, label %972

963:                                              ; preds = %958
  %964 = and i16 %948, 255
  %965 = zext i16 %964 to i32
  %966 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %965
  %967 = load i8, ptr %966, align 1
  %968 = zext i8 %967 to i16
  %969 = getelementptr %struct.mxl5005s_state, ptr %949, i32 0, i32 25, i32 %959, i32 1
  %970 = load i16, ptr %969, align 2
  %971 = and i16 %970, %968
  store i16 %971, ptr %969, align 2
  br label %975

972:                                              ; preds = %958
  %973 = add nuw nsw i32 %959, 1
  %974 = icmp eq i32 %973, %952
  br i1 %974, label %975, label %958

975:                                              ; preds = %972, %963, %944
  %976 = add nuw nsw i32 %945, 1
  %977 = load i16, ptr %941, align 2
  %978 = zext i16 %977 to i32
  %979 = icmp ult i32 %976, %978
  br i1 %979, label %944, label %980

980:                                              ; preds = %975
  %981 = load i16, ptr %931, align 2
  br label %982

982:                                              ; preds = %980, %940, %934
  %983 = phi i16 [ %981, %980 ], [ %935, %940 ], [ %935, %934 ]
  %984 = add nuw nsw i32 %936, 1
  %985 = zext i16 %983 to i32
  %986 = icmp ult i32 %984, %985
  br i1 %986, label %934, label %987

987:                                              ; preds = %982, %929, %863
  %988 = load i32, ptr %40, align 4
  %989 = add i32 %988, -100000001
  %990 = icmp ult i32 %989, 50000000
  br i1 %990, label %991, label %1111

991:                                              ; preds = %987
  %992 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %993 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %994 = load ptr, ptr %3, align 4
  %995 = getelementptr inbounds %struct.mxl5005s_state, ptr %994, i32 0, i32 18
  %996 = load i16, ptr %995, align 4
  %997 = icmp eq i16 %996, 0
  br i1 %997, label %1053, label %998

998:                                              ; preds = %1046, %991
  %999 = phi i16 [ %1047, %1046 ], [ %996, %991 ]
  %1000 = phi i32 [ %1048, %1046 ], [ 0, %991 ]
  %1001 = getelementptr %struct.mxl5005s_state, ptr %994, i32 0, i32 19, i32 %1000
  %1002 = load i16, ptr %1001, align 2
  %1003 = icmp eq i16 %1002, 57
  br i1 %1003, label %1004, label %1046

1004:                                             ; preds = %998
  %1005 = getelementptr %struct.mxl5005s_state, ptr %994, i32 0, i32 19, i32 %1000, i32 1
  %1006 = load i16, ptr %1005, align 2
  %1007 = icmp eq i16 %1006, 0
  br i1 %1007, label %1046, label %1008

1008:                                             ; preds = %1039, %1004
  %1009 = phi i32 [ %1040, %1039 ], [ 0, %1004 ]
  %1010 = getelementptr %struct.mxl5005s_state, ptr %994, i32 0, i32 19, i32 %1000, i32 4, i32 %1009
  store i16 0, ptr %1010, align 2
  %1011 = getelementptr %struct.mxl5005s_state, ptr %994, i32 0, i32 19, i32 %1000, i32 3, i32 %1009
  %1012 = load i16, ptr %1011, align 2
  %1013 = load ptr, ptr %3, align 4
  %1014 = getelementptr inbounds %struct.mxl5005s_state, ptr %1013, i32 0, i32 24
  %1015 = load i16, ptr %1014, align 4
  %1016 = zext i16 %1015 to i32
  %1017 = icmp eq i16 %1015, 0
  br i1 %1017, label %1039, label %1018

1018:                                             ; preds = %1008
  %1019 = getelementptr %struct.mxl5005s_state, ptr %994, i32 0, i32 19, i32 %1000, i32 2, i32 %1009
  %1020 = load i16, ptr %1019, align 2
  %1021 = and i16 %1020, 255
  br label %1022

1022:                                             ; preds = %1036, %1018
  %1023 = phi i32 [ 0, %1018 ], [ %1037, %1036 ]
  %1024 = getelementptr %struct.mxl5005s_state, ptr %1013, i32 0, i32 25, i32 %1023
  %1025 = load i16, ptr %1024, align 2
  %1026 = icmp eq i16 %1025, %1021
  br i1 %1026, label %1027, label %1036

1027:                                             ; preds = %1022
  %1028 = and i16 %1012, 255
  %1029 = zext i16 %1028 to i32
  %1030 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1029
  %1031 = load i8, ptr %1030, align 1
  %1032 = zext i8 %1031 to i16
  %1033 = getelementptr %struct.mxl5005s_state, ptr %1013, i32 0, i32 25, i32 %1023, i32 1
  %1034 = load i16, ptr %1033, align 2
  %1035 = and i16 %1034, %1032
  store i16 %1035, ptr %1033, align 2
  br label %1039

1036:                                             ; preds = %1022
  %1037 = add nuw nsw i32 %1023, 1
  %1038 = icmp eq i32 %1037, %1016
  br i1 %1038, label %1039, label %1022

1039:                                             ; preds = %1036, %1027, %1008
  %1040 = add nuw nsw i32 %1009, 1
  %1041 = load i16, ptr %1005, align 2
  %1042 = zext i16 %1041 to i32
  %1043 = icmp ult i32 %1040, %1042
  br i1 %1043, label %1008, label %1044

1044:                                             ; preds = %1039
  %1045 = load i16, ptr %995, align 4
  br label %1046

1046:                                             ; preds = %1044, %1004, %998
  %1047 = phi i16 [ %1045, %1044 ], [ %999, %1004 ], [ %999, %998 ]
  %1048 = add nuw nsw i32 %1000, 1
  %1049 = zext i16 %1047 to i32
  %1050 = icmp ult i32 %1048, %1049
  br i1 %1050, label %998, label %1051

1051:                                             ; preds = %1046
  %1052 = load ptr, ptr %3, align 4
  br label %1053

1053:                                             ; preds = %1051, %991
  %1054 = phi ptr [ %1052, %1051 ], [ %994, %991 ]
  %1055 = getelementptr inbounds %struct.mxl5005s_state, ptr %1054, i32 0, i32 20
  %1056 = load i16, ptr %1055, align 2
  %1057 = icmp eq i16 %1056, 0
  br i1 %1057, label %1111, label %1058

1058:                                             ; preds = %1106, %1053
  %1059 = phi i16 [ %1107, %1106 ], [ %1056, %1053 ]
  %1060 = phi i32 [ %1108, %1106 ], [ 0, %1053 ]
  %1061 = getelementptr %struct.mxl5005s_state, ptr %1054, i32 0, i32 21, i32 %1060
  %1062 = load i16, ptr %1061, align 2
  %1063 = icmp eq i16 %1062, 57
  br i1 %1063, label %1064, label %1106

1064:                                             ; preds = %1058
  %1065 = getelementptr %struct.mxl5005s_state, ptr %1054, i32 0, i32 21, i32 %1060, i32 1
  %1066 = load i16, ptr %1065, align 2
  %1067 = icmp eq i16 %1066, 0
  br i1 %1067, label %1106, label %1068

1068:                                             ; preds = %1099, %1064
  %1069 = phi i32 [ %1100, %1099 ], [ 0, %1064 ]
  %1070 = getelementptr %struct.mxl5005s_state, ptr %1054, i32 0, i32 21, i32 %1060, i32 4, i32 %1069
  store i16 0, ptr %1070, align 2
  %1071 = getelementptr %struct.mxl5005s_state, ptr %1054, i32 0, i32 21, i32 %1060, i32 3, i32 %1069
  %1072 = load i16, ptr %1071, align 2
  %1073 = load ptr, ptr %3, align 4
  %1074 = getelementptr inbounds %struct.mxl5005s_state, ptr %1073, i32 0, i32 24
  %1075 = load i16, ptr %1074, align 4
  %1076 = zext i16 %1075 to i32
  %1077 = icmp eq i16 %1075, 0
  br i1 %1077, label %1099, label %1078

1078:                                             ; preds = %1068
  %1079 = getelementptr %struct.mxl5005s_state, ptr %1054, i32 0, i32 21, i32 %1060, i32 2, i32 %1069
  %1080 = load i16, ptr %1079, align 2
  %1081 = and i16 %1080, 255
  br label %1082

1082:                                             ; preds = %1096, %1078
  %1083 = phi i32 [ 0, %1078 ], [ %1097, %1096 ]
  %1084 = getelementptr %struct.mxl5005s_state, ptr %1073, i32 0, i32 25, i32 %1083
  %1085 = load i16, ptr %1084, align 2
  %1086 = icmp eq i16 %1085, %1081
  br i1 %1086, label %1087, label %1096

1087:                                             ; preds = %1082
  %1088 = and i16 %1072, 255
  %1089 = zext i16 %1088 to i32
  %1090 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1089
  %1091 = load i8, ptr %1090, align 1
  %1092 = zext i8 %1091 to i16
  %1093 = getelementptr %struct.mxl5005s_state, ptr %1073, i32 0, i32 25, i32 %1083, i32 1
  %1094 = load i16, ptr %1093, align 2
  %1095 = and i16 %1094, %1092
  store i16 %1095, ptr %1093, align 2
  br label %1099

1096:                                             ; preds = %1082
  %1097 = add nuw nsw i32 %1083, 1
  %1098 = icmp eq i32 %1097, %1076
  br i1 %1098, label %1099, label %1082

1099:                                             ; preds = %1096, %1087, %1068
  %1100 = add nuw nsw i32 %1069, 1
  %1101 = load i16, ptr %1065, align 2
  %1102 = zext i16 %1101 to i32
  %1103 = icmp ult i32 %1100, %1102
  br i1 %1103, label %1068, label %1104

1104:                                             ; preds = %1099
  %1105 = load i16, ptr %1055, align 2
  br label %1106

1106:                                             ; preds = %1104, %1064, %1058
  %1107 = phi i16 [ %1105, %1104 ], [ %1059, %1064 ], [ %1059, %1058 ]
  %1108 = add nuw nsw i32 %1060, 1
  %1109 = zext i16 %1107 to i32
  %1110 = icmp ult i32 %1108, %1109
  br i1 %1110, label %1058, label %1111

1111:                                             ; preds = %1106, %1053, %987
  %1112 = load i32, ptr %40, align 4
  %1113 = add i32 %1112, -150000001
  %1114 = icmp ult i32 %1113, 50000000
  br i1 %1114, label %1115, label %1235

1115:                                             ; preds = %1111
  %1116 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1117 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1118 = load ptr, ptr %3, align 4
  %1119 = getelementptr inbounds %struct.mxl5005s_state, ptr %1118, i32 0, i32 18
  %1120 = load i16, ptr %1119, align 4
  %1121 = icmp eq i16 %1120, 0
  br i1 %1121, label %1177, label %1122

1122:                                             ; preds = %1170, %1115
  %1123 = phi i16 [ %1171, %1170 ], [ %1120, %1115 ]
  %1124 = phi i32 [ %1172, %1170 ], [ 0, %1115 ]
  %1125 = getelementptr %struct.mxl5005s_state, ptr %1118, i32 0, i32 19, i32 %1124
  %1126 = load i16, ptr %1125, align 2
  %1127 = icmp eq i16 %1126, 57
  br i1 %1127, label %1128, label %1170

1128:                                             ; preds = %1122
  %1129 = getelementptr %struct.mxl5005s_state, ptr %1118, i32 0, i32 19, i32 %1124, i32 1
  %1130 = load i16, ptr %1129, align 2
  %1131 = icmp eq i16 %1130, 0
  br i1 %1131, label %1170, label %1132

1132:                                             ; preds = %1163, %1128
  %1133 = phi i32 [ %1164, %1163 ], [ 0, %1128 ]
  %1134 = getelementptr %struct.mxl5005s_state, ptr %1118, i32 0, i32 19, i32 %1124, i32 4, i32 %1133
  store i16 0, ptr %1134, align 2
  %1135 = getelementptr %struct.mxl5005s_state, ptr %1118, i32 0, i32 19, i32 %1124, i32 3, i32 %1133
  %1136 = load i16, ptr %1135, align 2
  %1137 = load ptr, ptr %3, align 4
  %1138 = getelementptr inbounds %struct.mxl5005s_state, ptr %1137, i32 0, i32 24
  %1139 = load i16, ptr %1138, align 4
  %1140 = zext i16 %1139 to i32
  %1141 = icmp eq i16 %1139, 0
  br i1 %1141, label %1163, label %1142

1142:                                             ; preds = %1132
  %1143 = getelementptr %struct.mxl5005s_state, ptr %1118, i32 0, i32 19, i32 %1124, i32 2, i32 %1133
  %1144 = load i16, ptr %1143, align 2
  %1145 = and i16 %1144, 255
  br label %1146

1146:                                             ; preds = %1160, %1142
  %1147 = phi i32 [ 0, %1142 ], [ %1161, %1160 ]
  %1148 = getelementptr %struct.mxl5005s_state, ptr %1137, i32 0, i32 25, i32 %1147
  %1149 = load i16, ptr %1148, align 2
  %1150 = icmp eq i16 %1149, %1145
  br i1 %1150, label %1151, label %1160

1151:                                             ; preds = %1146
  %1152 = and i16 %1136, 255
  %1153 = zext i16 %1152 to i32
  %1154 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1153
  %1155 = load i8, ptr %1154, align 1
  %1156 = zext i8 %1155 to i16
  %1157 = getelementptr %struct.mxl5005s_state, ptr %1137, i32 0, i32 25, i32 %1147, i32 1
  %1158 = load i16, ptr %1157, align 2
  %1159 = and i16 %1158, %1156
  store i16 %1159, ptr %1157, align 2
  br label %1163

1160:                                             ; preds = %1146
  %1161 = add nuw nsw i32 %1147, 1
  %1162 = icmp eq i32 %1161, %1140
  br i1 %1162, label %1163, label %1146

1163:                                             ; preds = %1160, %1151, %1132
  %1164 = add nuw nsw i32 %1133, 1
  %1165 = load i16, ptr %1129, align 2
  %1166 = zext i16 %1165 to i32
  %1167 = icmp ult i32 %1164, %1166
  br i1 %1167, label %1132, label %1168

1168:                                             ; preds = %1163
  %1169 = load i16, ptr %1119, align 4
  br label %1170

1170:                                             ; preds = %1168, %1128, %1122
  %1171 = phi i16 [ %1169, %1168 ], [ %1123, %1128 ], [ %1123, %1122 ]
  %1172 = add nuw nsw i32 %1124, 1
  %1173 = zext i16 %1171 to i32
  %1174 = icmp ult i32 %1172, %1173
  br i1 %1174, label %1122, label %1175

1175:                                             ; preds = %1170
  %1176 = load ptr, ptr %3, align 4
  br label %1177

1177:                                             ; preds = %1175, %1115
  %1178 = phi ptr [ %1176, %1175 ], [ %1118, %1115 ]
  %1179 = getelementptr inbounds %struct.mxl5005s_state, ptr %1178, i32 0, i32 20
  %1180 = load i16, ptr %1179, align 2
  %1181 = icmp eq i16 %1180, 0
  br i1 %1181, label %1235, label %1182

1182:                                             ; preds = %1230, %1177
  %1183 = phi i16 [ %1231, %1230 ], [ %1180, %1177 ]
  %1184 = phi i32 [ %1232, %1230 ], [ 0, %1177 ]
  %1185 = getelementptr %struct.mxl5005s_state, ptr %1178, i32 0, i32 21, i32 %1184
  %1186 = load i16, ptr %1185, align 2
  %1187 = icmp eq i16 %1186, 57
  br i1 %1187, label %1188, label %1230

1188:                                             ; preds = %1182
  %1189 = getelementptr %struct.mxl5005s_state, ptr %1178, i32 0, i32 21, i32 %1184, i32 1
  %1190 = load i16, ptr %1189, align 2
  %1191 = icmp eq i16 %1190, 0
  br i1 %1191, label %1230, label %1192

1192:                                             ; preds = %1223, %1188
  %1193 = phi i32 [ %1224, %1223 ], [ 0, %1188 ]
  %1194 = getelementptr %struct.mxl5005s_state, ptr %1178, i32 0, i32 21, i32 %1184, i32 4, i32 %1193
  store i16 0, ptr %1194, align 2
  %1195 = getelementptr %struct.mxl5005s_state, ptr %1178, i32 0, i32 21, i32 %1184, i32 3, i32 %1193
  %1196 = load i16, ptr %1195, align 2
  %1197 = load ptr, ptr %3, align 4
  %1198 = getelementptr inbounds %struct.mxl5005s_state, ptr %1197, i32 0, i32 24
  %1199 = load i16, ptr %1198, align 4
  %1200 = zext i16 %1199 to i32
  %1201 = icmp eq i16 %1199, 0
  br i1 %1201, label %1223, label %1202

1202:                                             ; preds = %1192
  %1203 = getelementptr %struct.mxl5005s_state, ptr %1178, i32 0, i32 21, i32 %1184, i32 2, i32 %1193
  %1204 = load i16, ptr %1203, align 2
  %1205 = and i16 %1204, 255
  br label %1206

1206:                                             ; preds = %1220, %1202
  %1207 = phi i32 [ 0, %1202 ], [ %1221, %1220 ]
  %1208 = getelementptr %struct.mxl5005s_state, ptr %1197, i32 0, i32 25, i32 %1207
  %1209 = load i16, ptr %1208, align 2
  %1210 = icmp eq i16 %1209, %1205
  br i1 %1210, label %1211, label %1220

1211:                                             ; preds = %1206
  %1212 = and i16 %1196, 255
  %1213 = zext i16 %1212 to i32
  %1214 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1213
  %1215 = load i8, ptr %1214, align 1
  %1216 = zext i8 %1215 to i16
  %1217 = getelementptr %struct.mxl5005s_state, ptr %1197, i32 0, i32 25, i32 %1207, i32 1
  %1218 = load i16, ptr %1217, align 2
  %1219 = and i16 %1218, %1216
  store i16 %1219, ptr %1217, align 2
  br label %1223

1220:                                             ; preds = %1206
  %1221 = add nuw nsw i32 %1207, 1
  %1222 = icmp eq i32 %1221, %1200
  br i1 %1222, label %1223, label %1206

1223:                                             ; preds = %1220, %1211, %1192
  %1224 = add nuw nsw i32 %1193, 1
  %1225 = load i16, ptr %1189, align 2
  %1226 = zext i16 %1225 to i32
  %1227 = icmp ult i32 %1224, %1226
  br i1 %1227, label %1192, label %1228

1228:                                             ; preds = %1223
  %1229 = load i16, ptr %1179, align 2
  br label %1230

1230:                                             ; preds = %1228, %1188, %1182
  %1231 = phi i16 [ %1229, %1228 ], [ %1183, %1188 ], [ %1183, %1182 ]
  %1232 = add nuw nsw i32 %1184, 1
  %1233 = zext i16 %1231 to i32
  %1234 = icmp ult i32 %1232, %1233
  br i1 %1234, label %1182, label %1235

1235:                                             ; preds = %1230, %1177, %1111
  %1236 = load i32, ptr %40, align 4
  %1237 = add i32 %1236, -200000001
  %1238 = icmp ult i32 %1237, 100000000
  br i1 %1238, label %1239, label %1359

1239:                                             ; preds = %1235
  %1240 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1241 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1242 = load ptr, ptr %3, align 4
  %1243 = getelementptr inbounds %struct.mxl5005s_state, ptr %1242, i32 0, i32 18
  %1244 = load i16, ptr %1243, align 4
  %1245 = icmp eq i16 %1244, 0
  br i1 %1245, label %1301, label %1246

1246:                                             ; preds = %1294, %1239
  %1247 = phi i16 [ %1295, %1294 ], [ %1244, %1239 ]
  %1248 = phi i32 [ %1296, %1294 ], [ 0, %1239 ]
  %1249 = getelementptr %struct.mxl5005s_state, ptr %1242, i32 0, i32 19, i32 %1248
  %1250 = load i16, ptr %1249, align 2
  %1251 = icmp eq i16 %1250, 57
  br i1 %1251, label %1252, label %1294

1252:                                             ; preds = %1246
  %1253 = getelementptr %struct.mxl5005s_state, ptr %1242, i32 0, i32 19, i32 %1248, i32 1
  %1254 = load i16, ptr %1253, align 2
  %1255 = icmp eq i16 %1254, 0
  br i1 %1255, label %1294, label %1256

1256:                                             ; preds = %1287, %1252
  %1257 = phi i32 [ %1288, %1287 ], [ 0, %1252 ]
  %1258 = getelementptr %struct.mxl5005s_state, ptr %1242, i32 0, i32 19, i32 %1248, i32 4, i32 %1257
  store i16 0, ptr %1258, align 2
  %1259 = getelementptr %struct.mxl5005s_state, ptr %1242, i32 0, i32 19, i32 %1248, i32 3, i32 %1257
  %1260 = load i16, ptr %1259, align 2
  %1261 = load ptr, ptr %3, align 4
  %1262 = getelementptr inbounds %struct.mxl5005s_state, ptr %1261, i32 0, i32 24
  %1263 = load i16, ptr %1262, align 4
  %1264 = zext i16 %1263 to i32
  %1265 = icmp eq i16 %1263, 0
  br i1 %1265, label %1287, label %1266

1266:                                             ; preds = %1256
  %1267 = getelementptr %struct.mxl5005s_state, ptr %1242, i32 0, i32 19, i32 %1248, i32 2, i32 %1257
  %1268 = load i16, ptr %1267, align 2
  %1269 = and i16 %1268, 255
  br label %1270

1270:                                             ; preds = %1284, %1266
  %1271 = phi i32 [ 0, %1266 ], [ %1285, %1284 ]
  %1272 = getelementptr %struct.mxl5005s_state, ptr %1261, i32 0, i32 25, i32 %1271
  %1273 = load i16, ptr %1272, align 2
  %1274 = icmp eq i16 %1273, %1269
  br i1 %1274, label %1275, label %1284

1275:                                             ; preds = %1270
  %1276 = and i16 %1260, 255
  %1277 = zext i16 %1276 to i32
  %1278 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1277
  %1279 = load i8, ptr %1278, align 1
  %1280 = zext i8 %1279 to i16
  %1281 = getelementptr %struct.mxl5005s_state, ptr %1261, i32 0, i32 25, i32 %1271, i32 1
  %1282 = load i16, ptr %1281, align 2
  %1283 = and i16 %1282, %1280
  store i16 %1283, ptr %1281, align 2
  br label %1287

1284:                                             ; preds = %1270
  %1285 = add nuw nsw i32 %1271, 1
  %1286 = icmp eq i32 %1285, %1264
  br i1 %1286, label %1287, label %1270

1287:                                             ; preds = %1284, %1275, %1256
  %1288 = add nuw nsw i32 %1257, 1
  %1289 = load i16, ptr %1253, align 2
  %1290 = zext i16 %1289 to i32
  %1291 = icmp ult i32 %1288, %1290
  br i1 %1291, label %1256, label %1292

1292:                                             ; preds = %1287
  %1293 = load i16, ptr %1243, align 4
  br label %1294

1294:                                             ; preds = %1292, %1252, %1246
  %1295 = phi i16 [ %1293, %1292 ], [ %1247, %1252 ], [ %1247, %1246 ]
  %1296 = add nuw nsw i32 %1248, 1
  %1297 = zext i16 %1295 to i32
  %1298 = icmp ult i32 %1296, %1297
  br i1 %1298, label %1246, label %1299

1299:                                             ; preds = %1294
  %1300 = load ptr, ptr %3, align 4
  br label %1301

1301:                                             ; preds = %1299, %1239
  %1302 = phi ptr [ %1300, %1299 ], [ %1242, %1239 ]
  %1303 = getelementptr inbounds %struct.mxl5005s_state, ptr %1302, i32 0, i32 20
  %1304 = load i16, ptr %1303, align 2
  %1305 = icmp eq i16 %1304, 0
  br i1 %1305, label %1359, label %1306

1306:                                             ; preds = %1354, %1301
  %1307 = phi i16 [ %1355, %1354 ], [ %1304, %1301 ]
  %1308 = phi i32 [ %1356, %1354 ], [ 0, %1301 ]
  %1309 = getelementptr %struct.mxl5005s_state, ptr %1302, i32 0, i32 21, i32 %1308
  %1310 = load i16, ptr %1309, align 2
  %1311 = icmp eq i16 %1310, 57
  br i1 %1311, label %1312, label %1354

1312:                                             ; preds = %1306
  %1313 = getelementptr %struct.mxl5005s_state, ptr %1302, i32 0, i32 21, i32 %1308, i32 1
  %1314 = load i16, ptr %1313, align 2
  %1315 = icmp eq i16 %1314, 0
  br i1 %1315, label %1354, label %1316

1316:                                             ; preds = %1347, %1312
  %1317 = phi i32 [ %1348, %1347 ], [ 0, %1312 ]
  %1318 = getelementptr %struct.mxl5005s_state, ptr %1302, i32 0, i32 21, i32 %1308, i32 4, i32 %1317
  store i16 0, ptr %1318, align 2
  %1319 = getelementptr %struct.mxl5005s_state, ptr %1302, i32 0, i32 21, i32 %1308, i32 3, i32 %1317
  %1320 = load i16, ptr %1319, align 2
  %1321 = load ptr, ptr %3, align 4
  %1322 = getelementptr inbounds %struct.mxl5005s_state, ptr %1321, i32 0, i32 24
  %1323 = load i16, ptr %1322, align 4
  %1324 = zext i16 %1323 to i32
  %1325 = icmp eq i16 %1323, 0
  br i1 %1325, label %1347, label %1326

1326:                                             ; preds = %1316
  %1327 = getelementptr %struct.mxl5005s_state, ptr %1302, i32 0, i32 21, i32 %1308, i32 2, i32 %1317
  %1328 = load i16, ptr %1327, align 2
  %1329 = and i16 %1328, 255
  br label %1330

1330:                                             ; preds = %1344, %1326
  %1331 = phi i32 [ 0, %1326 ], [ %1345, %1344 ]
  %1332 = getelementptr %struct.mxl5005s_state, ptr %1321, i32 0, i32 25, i32 %1331
  %1333 = load i16, ptr %1332, align 2
  %1334 = icmp eq i16 %1333, %1329
  br i1 %1334, label %1335, label %1344

1335:                                             ; preds = %1330
  %1336 = and i16 %1320, 255
  %1337 = zext i16 %1336 to i32
  %1338 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1337
  %1339 = load i8, ptr %1338, align 1
  %1340 = zext i8 %1339 to i16
  %1341 = getelementptr %struct.mxl5005s_state, ptr %1321, i32 0, i32 25, i32 %1331, i32 1
  %1342 = load i16, ptr %1341, align 2
  %1343 = and i16 %1342, %1340
  store i16 %1343, ptr %1341, align 2
  br label %1347

1344:                                             ; preds = %1330
  %1345 = add nuw nsw i32 %1331, 1
  %1346 = icmp eq i32 %1345, %1324
  br i1 %1346, label %1347, label %1330

1347:                                             ; preds = %1344, %1335, %1316
  %1348 = add nuw nsw i32 %1317, 1
  %1349 = load i16, ptr %1313, align 2
  %1350 = zext i16 %1349 to i32
  %1351 = icmp ult i32 %1348, %1350
  br i1 %1351, label %1316, label %1352

1352:                                             ; preds = %1347
  %1353 = load i16, ptr %1303, align 2
  br label %1354

1354:                                             ; preds = %1352, %1312, %1306
  %1355 = phi i16 [ %1353, %1352 ], [ %1307, %1312 ], [ %1307, %1306 ]
  %1356 = add nuw nsw i32 %1308, 1
  %1357 = zext i16 %1355 to i32
  %1358 = icmp ult i32 %1356, %1357
  br i1 %1358, label %1306, label %1359

1359:                                             ; preds = %1354, %1301, %1235
  %1360 = load i32, ptr %40, align 4
  %1361 = add i32 %1360, -300000001
  %1362 = icmp ult i32 %1361, 100000000
  br i1 %1362, label %1363, label %1483

1363:                                             ; preds = %1359
  %1364 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1365 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1366 = load ptr, ptr %3, align 4
  %1367 = getelementptr inbounds %struct.mxl5005s_state, ptr %1366, i32 0, i32 18
  %1368 = load i16, ptr %1367, align 4
  %1369 = icmp eq i16 %1368, 0
  br i1 %1369, label %1425, label %1370

1370:                                             ; preds = %1418, %1363
  %1371 = phi i16 [ %1419, %1418 ], [ %1368, %1363 ]
  %1372 = phi i32 [ %1420, %1418 ], [ 0, %1363 ]
  %1373 = getelementptr %struct.mxl5005s_state, ptr %1366, i32 0, i32 19, i32 %1372
  %1374 = load i16, ptr %1373, align 2
  %1375 = icmp eq i16 %1374, 57
  br i1 %1375, label %1376, label %1418

1376:                                             ; preds = %1370
  %1377 = getelementptr %struct.mxl5005s_state, ptr %1366, i32 0, i32 19, i32 %1372, i32 1
  %1378 = load i16, ptr %1377, align 2
  %1379 = icmp eq i16 %1378, 0
  br i1 %1379, label %1418, label %1380

1380:                                             ; preds = %1411, %1376
  %1381 = phi i32 [ %1412, %1411 ], [ 0, %1376 ]
  %1382 = getelementptr %struct.mxl5005s_state, ptr %1366, i32 0, i32 19, i32 %1372, i32 4, i32 %1381
  store i16 0, ptr %1382, align 2
  %1383 = getelementptr %struct.mxl5005s_state, ptr %1366, i32 0, i32 19, i32 %1372, i32 3, i32 %1381
  %1384 = load i16, ptr %1383, align 2
  %1385 = load ptr, ptr %3, align 4
  %1386 = getelementptr inbounds %struct.mxl5005s_state, ptr %1385, i32 0, i32 24
  %1387 = load i16, ptr %1386, align 4
  %1388 = zext i16 %1387 to i32
  %1389 = icmp eq i16 %1387, 0
  br i1 %1389, label %1411, label %1390

1390:                                             ; preds = %1380
  %1391 = getelementptr %struct.mxl5005s_state, ptr %1366, i32 0, i32 19, i32 %1372, i32 2, i32 %1381
  %1392 = load i16, ptr %1391, align 2
  %1393 = and i16 %1392, 255
  br label %1394

1394:                                             ; preds = %1408, %1390
  %1395 = phi i32 [ 0, %1390 ], [ %1409, %1408 ]
  %1396 = getelementptr %struct.mxl5005s_state, ptr %1385, i32 0, i32 25, i32 %1395
  %1397 = load i16, ptr %1396, align 2
  %1398 = icmp eq i16 %1397, %1393
  br i1 %1398, label %1399, label %1408

1399:                                             ; preds = %1394
  %1400 = and i16 %1384, 255
  %1401 = zext i16 %1400 to i32
  %1402 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1401
  %1403 = load i8, ptr %1402, align 1
  %1404 = zext i8 %1403 to i16
  %1405 = getelementptr %struct.mxl5005s_state, ptr %1385, i32 0, i32 25, i32 %1395, i32 1
  %1406 = load i16, ptr %1405, align 2
  %1407 = and i16 %1406, %1404
  store i16 %1407, ptr %1405, align 2
  br label %1411

1408:                                             ; preds = %1394
  %1409 = add nuw nsw i32 %1395, 1
  %1410 = icmp eq i32 %1409, %1388
  br i1 %1410, label %1411, label %1394

1411:                                             ; preds = %1408, %1399, %1380
  %1412 = add nuw nsw i32 %1381, 1
  %1413 = load i16, ptr %1377, align 2
  %1414 = zext i16 %1413 to i32
  %1415 = icmp ult i32 %1412, %1414
  br i1 %1415, label %1380, label %1416

1416:                                             ; preds = %1411
  %1417 = load i16, ptr %1367, align 4
  br label %1418

1418:                                             ; preds = %1416, %1376, %1370
  %1419 = phi i16 [ %1417, %1416 ], [ %1371, %1376 ], [ %1371, %1370 ]
  %1420 = add nuw nsw i32 %1372, 1
  %1421 = zext i16 %1419 to i32
  %1422 = icmp ult i32 %1420, %1421
  br i1 %1422, label %1370, label %1423

1423:                                             ; preds = %1418
  %1424 = load ptr, ptr %3, align 4
  br label %1425

1425:                                             ; preds = %1423, %1363
  %1426 = phi ptr [ %1424, %1423 ], [ %1366, %1363 ]
  %1427 = getelementptr inbounds %struct.mxl5005s_state, ptr %1426, i32 0, i32 20
  %1428 = load i16, ptr %1427, align 2
  %1429 = icmp eq i16 %1428, 0
  br i1 %1429, label %1483, label %1430

1430:                                             ; preds = %1478, %1425
  %1431 = phi i16 [ %1479, %1478 ], [ %1428, %1425 ]
  %1432 = phi i32 [ %1480, %1478 ], [ 0, %1425 ]
  %1433 = getelementptr %struct.mxl5005s_state, ptr %1426, i32 0, i32 21, i32 %1432
  %1434 = load i16, ptr %1433, align 2
  %1435 = icmp eq i16 %1434, 57
  br i1 %1435, label %1436, label %1478

1436:                                             ; preds = %1430
  %1437 = getelementptr %struct.mxl5005s_state, ptr %1426, i32 0, i32 21, i32 %1432, i32 1
  %1438 = load i16, ptr %1437, align 2
  %1439 = icmp eq i16 %1438, 0
  br i1 %1439, label %1478, label %1440

1440:                                             ; preds = %1471, %1436
  %1441 = phi i32 [ %1472, %1471 ], [ 0, %1436 ]
  %1442 = getelementptr %struct.mxl5005s_state, ptr %1426, i32 0, i32 21, i32 %1432, i32 4, i32 %1441
  store i16 0, ptr %1442, align 2
  %1443 = getelementptr %struct.mxl5005s_state, ptr %1426, i32 0, i32 21, i32 %1432, i32 3, i32 %1441
  %1444 = load i16, ptr %1443, align 2
  %1445 = load ptr, ptr %3, align 4
  %1446 = getelementptr inbounds %struct.mxl5005s_state, ptr %1445, i32 0, i32 24
  %1447 = load i16, ptr %1446, align 4
  %1448 = zext i16 %1447 to i32
  %1449 = icmp eq i16 %1447, 0
  br i1 %1449, label %1471, label %1450

1450:                                             ; preds = %1440
  %1451 = getelementptr %struct.mxl5005s_state, ptr %1426, i32 0, i32 21, i32 %1432, i32 2, i32 %1441
  %1452 = load i16, ptr %1451, align 2
  %1453 = and i16 %1452, 255
  br label %1454

1454:                                             ; preds = %1468, %1450
  %1455 = phi i32 [ 0, %1450 ], [ %1469, %1468 ]
  %1456 = getelementptr %struct.mxl5005s_state, ptr %1445, i32 0, i32 25, i32 %1455
  %1457 = load i16, ptr %1456, align 2
  %1458 = icmp eq i16 %1457, %1453
  br i1 %1458, label %1459, label %1468

1459:                                             ; preds = %1454
  %1460 = and i16 %1444, 255
  %1461 = zext i16 %1460 to i32
  %1462 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1461
  %1463 = load i8, ptr %1462, align 1
  %1464 = zext i8 %1463 to i16
  %1465 = getelementptr %struct.mxl5005s_state, ptr %1445, i32 0, i32 25, i32 %1455, i32 1
  %1466 = load i16, ptr %1465, align 2
  %1467 = and i16 %1466, %1464
  store i16 %1467, ptr %1465, align 2
  br label %1471

1468:                                             ; preds = %1454
  %1469 = add nuw nsw i32 %1455, 1
  %1470 = icmp eq i32 %1469, %1448
  br i1 %1470, label %1471, label %1454

1471:                                             ; preds = %1468, %1459, %1440
  %1472 = add nuw nsw i32 %1441, 1
  %1473 = load i16, ptr %1437, align 2
  %1474 = zext i16 %1473 to i32
  %1475 = icmp ult i32 %1472, %1474
  br i1 %1475, label %1440, label %1476

1476:                                             ; preds = %1471
  %1477 = load i16, ptr %1427, align 2
  br label %1478

1478:                                             ; preds = %1476, %1436, %1430
  %1479 = phi i16 [ %1477, %1476 ], [ %1431, %1436 ], [ %1431, %1430 ]
  %1480 = add nuw nsw i32 %1432, 1
  %1481 = zext i16 %1479 to i32
  %1482 = icmp ult i32 %1480, %1481
  br i1 %1482, label %1430, label %1483

1483:                                             ; preds = %1478, %1425, %1359
  %1484 = load i32, ptr %40, align 4
  %1485 = add i32 %1484, -400000001
  %1486 = icmp ult i32 %1485, 50000000
  br i1 %1486, label %1487, label %1607

1487:                                             ; preds = %1483
  %1488 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1489 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1490 = load ptr, ptr %3, align 4
  %1491 = getelementptr inbounds %struct.mxl5005s_state, ptr %1490, i32 0, i32 18
  %1492 = load i16, ptr %1491, align 4
  %1493 = icmp eq i16 %1492, 0
  br i1 %1493, label %1549, label %1494

1494:                                             ; preds = %1542, %1487
  %1495 = phi i16 [ %1543, %1542 ], [ %1492, %1487 ]
  %1496 = phi i32 [ %1544, %1542 ], [ 0, %1487 ]
  %1497 = getelementptr %struct.mxl5005s_state, ptr %1490, i32 0, i32 19, i32 %1496
  %1498 = load i16, ptr %1497, align 2
  %1499 = icmp eq i16 %1498, 57
  br i1 %1499, label %1500, label %1542

1500:                                             ; preds = %1494
  %1501 = getelementptr %struct.mxl5005s_state, ptr %1490, i32 0, i32 19, i32 %1496, i32 1
  %1502 = load i16, ptr %1501, align 2
  %1503 = icmp eq i16 %1502, 0
  br i1 %1503, label %1542, label %1504

1504:                                             ; preds = %1535, %1500
  %1505 = phi i32 [ %1536, %1535 ], [ 0, %1500 ]
  %1506 = getelementptr %struct.mxl5005s_state, ptr %1490, i32 0, i32 19, i32 %1496, i32 4, i32 %1505
  store i16 0, ptr %1506, align 2
  %1507 = getelementptr %struct.mxl5005s_state, ptr %1490, i32 0, i32 19, i32 %1496, i32 3, i32 %1505
  %1508 = load i16, ptr %1507, align 2
  %1509 = load ptr, ptr %3, align 4
  %1510 = getelementptr inbounds %struct.mxl5005s_state, ptr %1509, i32 0, i32 24
  %1511 = load i16, ptr %1510, align 4
  %1512 = zext i16 %1511 to i32
  %1513 = icmp eq i16 %1511, 0
  br i1 %1513, label %1535, label %1514

1514:                                             ; preds = %1504
  %1515 = getelementptr %struct.mxl5005s_state, ptr %1490, i32 0, i32 19, i32 %1496, i32 2, i32 %1505
  %1516 = load i16, ptr %1515, align 2
  %1517 = and i16 %1516, 255
  br label %1518

1518:                                             ; preds = %1532, %1514
  %1519 = phi i32 [ 0, %1514 ], [ %1533, %1532 ]
  %1520 = getelementptr %struct.mxl5005s_state, ptr %1509, i32 0, i32 25, i32 %1519
  %1521 = load i16, ptr %1520, align 2
  %1522 = icmp eq i16 %1521, %1517
  br i1 %1522, label %1523, label %1532

1523:                                             ; preds = %1518
  %1524 = and i16 %1508, 255
  %1525 = zext i16 %1524 to i32
  %1526 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1525
  %1527 = load i8, ptr %1526, align 1
  %1528 = zext i8 %1527 to i16
  %1529 = getelementptr %struct.mxl5005s_state, ptr %1509, i32 0, i32 25, i32 %1519, i32 1
  %1530 = load i16, ptr %1529, align 2
  %1531 = and i16 %1530, %1528
  store i16 %1531, ptr %1529, align 2
  br label %1535

1532:                                             ; preds = %1518
  %1533 = add nuw nsw i32 %1519, 1
  %1534 = icmp eq i32 %1533, %1512
  br i1 %1534, label %1535, label %1518

1535:                                             ; preds = %1532, %1523, %1504
  %1536 = add nuw nsw i32 %1505, 1
  %1537 = load i16, ptr %1501, align 2
  %1538 = zext i16 %1537 to i32
  %1539 = icmp ult i32 %1536, %1538
  br i1 %1539, label %1504, label %1540

1540:                                             ; preds = %1535
  %1541 = load i16, ptr %1491, align 4
  br label %1542

1542:                                             ; preds = %1540, %1500, %1494
  %1543 = phi i16 [ %1541, %1540 ], [ %1495, %1500 ], [ %1495, %1494 ]
  %1544 = add nuw nsw i32 %1496, 1
  %1545 = zext i16 %1543 to i32
  %1546 = icmp ult i32 %1544, %1545
  br i1 %1546, label %1494, label %1547

1547:                                             ; preds = %1542
  %1548 = load ptr, ptr %3, align 4
  br label %1549

1549:                                             ; preds = %1547, %1487
  %1550 = phi ptr [ %1548, %1547 ], [ %1490, %1487 ]
  %1551 = getelementptr inbounds %struct.mxl5005s_state, ptr %1550, i32 0, i32 20
  %1552 = load i16, ptr %1551, align 2
  %1553 = icmp eq i16 %1552, 0
  br i1 %1553, label %1607, label %1554

1554:                                             ; preds = %1602, %1549
  %1555 = phi i16 [ %1603, %1602 ], [ %1552, %1549 ]
  %1556 = phi i32 [ %1604, %1602 ], [ 0, %1549 ]
  %1557 = getelementptr %struct.mxl5005s_state, ptr %1550, i32 0, i32 21, i32 %1556
  %1558 = load i16, ptr %1557, align 2
  %1559 = icmp eq i16 %1558, 57
  br i1 %1559, label %1560, label %1602

1560:                                             ; preds = %1554
  %1561 = getelementptr %struct.mxl5005s_state, ptr %1550, i32 0, i32 21, i32 %1556, i32 1
  %1562 = load i16, ptr %1561, align 2
  %1563 = icmp eq i16 %1562, 0
  br i1 %1563, label %1602, label %1564

1564:                                             ; preds = %1595, %1560
  %1565 = phi i32 [ %1596, %1595 ], [ 0, %1560 ]
  %1566 = getelementptr %struct.mxl5005s_state, ptr %1550, i32 0, i32 21, i32 %1556, i32 4, i32 %1565
  store i16 0, ptr %1566, align 2
  %1567 = getelementptr %struct.mxl5005s_state, ptr %1550, i32 0, i32 21, i32 %1556, i32 3, i32 %1565
  %1568 = load i16, ptr %1567, align 2
  %1569 = load ptr, ptr %3, align 4
  %1570 = getelementptr inbounds %struct.mxl5005s_state, ptr %1569, i32 0, i32 24
  %1571 = load i16, ptr %1570, align 4
  %1572 = zext i16 %1571 to i32
  %1573 = icmp eq i16 %1571, 0
  br i1 %1573, label %1595, label %1574

1574:                                             ; preds = %1564
  %1575 = getelementptr %struct.mxl5005s_state, ptr %1550, i32 0, i32 21, i32 %1556, i32 2, i32 %1565
  %1576 = load i16, ptr %1575, align 2
  %1577 = and i16 %1576, 255
  br label %1578

1578:                                             ; preds = %1592, %1574
  %1579 = phi i32 [ 0, %1574 ], [ %1593, %1592 ]
  %1580 = getelementptr %struct.mxl5005s_state, ptr %1569, i32 0, i32 25, i32 %1579
  %1581 = load i16, ptr %1580, align 2
  %1582 = icmp eq i16 %1581, %1577
  br i1 %1582, label %1583, label %1592

1583:                                             ; preds = %1578
  %1584 = and i16 %1568, 255
  %1585 = zext i16 %1584 to i32
  %1586 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1585
  %1587 = load i8, ptr %1586, align 1
  %1588 = zext i8 %1587 to i16
  %1589 = getelementptr %struct.mxl5005s_state, ptr %1569, i32 0, i32 25, i32 %1579, i32 1
  %1590 = load i16, ptr %1589, align 2
  %1591 = and i16 %1590, %1588
  store i16 %1591, ptr %1589, align 2
  br label %1595

1592:                                             ; preds = %1578
  %1593 = add nuw nsw i32 %1579, 1
  %1594 = icmp eq i32 %1593, %1572
  br i1 %1594, label %1595, label %1578

1595:                                             ; preds = %1592, %1583, %1564
  %1596 = add nuw nsw i32 %1565, 1
  %1597 = load i16, ptr %1561, align 2
  %1598 = zext i16 %1597 to i32
  %1599 = icmp ult i32 %1596, %1598
  br i1 %1599, label %1564, label %1600

1600:                                             ; preds = %1595
  %1601 = load i16, ptr %1551, align 2
  br label %1602

1602:                                             ; preds = %1600, %1560, %1554
  %1603 = phi i16 [ %1601, %1600 ], [ %1555, %1560 ], [ %1555, %1554 ]
  %1604 = add nuw nsw i32 %1556, 1
  %1605 = zext i16 %1603 to i32
  %1606 = icmp ult i32 %1604, %1605
  br i1 %1606, label %1554, label %1607

1607:                                             ; preds = %1602, %1549, %1483
  %1608 = load i32, ptr %40, align 4
  %1609 = add i32 %1608, -450000001
  %1610 = icmp ult i32 %1609, 50000000
  br i1 %1610, label %1611, label %1731

1611:                                             ; preds = %1607
  %1612 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1613 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1614 = load ptr, ptr %3, align 4
  %1615 = getelementptr inbounds %struct.mxl5005s_state, ptr %1614, i32 0, i32 18
  %1616 = load i16, ptr %1615, align 4
  %1617 = icmp eq i16 %1616, 0
  br i1 %1617, label %1673, label %1618

1618:                                             ; preds = %1666, %1611
  %1619 = phi i16 [ %1667, %1666 ], [ %1616, %1611 ]
  %1620 = phi i32 [ %1668, %1666 ], [ 0, %1611 ]
  %1621 = getelementptr %struct.mxl5005s_state, ptr %1614, i32 0, i32 19, i32 %1620
  %1622 = load i16, ptr %1621, align 2
  %1623 = icmp eq i16 %1622, 57
  br i1 %1623, label %1624, label %1666

1624:                                             ; preds = %1618
  %1625 = getelementptr %struct.mxl5005s_state, ptr %1614, i32 0, i32 19, i32 %1620, i32 1
  %1626 = load i16, ptr %1625, align 2
  %1627 = icmp eq i16 %1626, 0
  br i1 %1627, label %1666, label %1628

1628:                                             ; preds = %1659, %1624
  %1629 = phi i32 [ %1660, %1659 ], [ 0, %1624 ]
  %1630 = getelementptr %struct.mxl5005s_state, ptr %1614, i32 0, i32 19, i32 %1620, i32 4, i32 %1629
  store i16 0, ptr %1630, align 2
  %1631 = getelementptr %struct.mxl5005s_state, ptr %1614, i32 0, i32 19, i32 %1620, i32 3, i32 %1629
  %1632 = load i16, ptr %1631, align 2
  %1633 = load ptr, ptr %3, align 4
  %1634 = getelementptr inbounds %struct.mxl5005s_state, ptr %1633, i32 0, i32 24
  %1635 = load i16, ptr %1634, align 4
  %1636 = zext i16 %1635 to i32
  %1637 = icmp eq i16 %1635, 0
  br i1 %1637, label %1659, label %1638

1638:                                             ; preds = %1628
  %1639 = getelementptr %struct.mxl5005s_state, ptr %1614, i32 0, i32 19, i32 %1620, i32 2, i32 %1629
  %1640 = load i16, ptr %1639, align 2
  %1641 = and i16 %1640, 255
  br label %1642

1642:                                             ; preds = %1656, %1638
  %1643 = phi i32 [ 0, %1638 ], [ %1657, %1656 ]
  %1644 = getelementptr %struct.mxl5005s_state, ptr %1633, i32 0, i32 25, i32 %1643
  %1645 = load i16, ptr %1644, align 2
  %1646 = icmp eq i16 %1645, %1641
  br i1 %1646, label %1647, label %1656

1647:                                             ; preds = %1642
  %1648 = and i16 %1632, 255
  %1649 = zext i16 %1648 to i32
  %1650 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1649
  %1651 = load i8, ptr %1650, align 1
  %1652 = zext i8 %1651 to i16
  %1653 = getelementptr %struct.mxl5005s_state, ptr %1633, i32 0, i32 25, i32 %1643, i32 1
  %1654 = load i16, ptr %1653, align 2
  %1655 = and i16 %1654, %1652
  store i16 %1655, ptr %1653, align 2
  br label %1659

1656:                                             ; preds = %1642
  %1657 = add nuw nsw i32 %1643, 1
  %1658 = icmp eq i32 %1657, %1636
  br i1 %1658, label %1659, label %1642

1659:                                             ; preds = %1656, %1647, %1628
  %1660 = add nuw nsw i32 %1629, 1
  %1661 = load i16, ptr %1625, align 2
  %1662 = zext i16 %1661 to i32
  %1663 = icmp ult i32 %1660, %1662
  br i1 %1663, label %1628, label %1664

1664:                                             ; preds = %1659
  %1665 = load i16, ptr %1615, align 4
  br label %1666

1666:                                             ; preds = %1664, %1624, %1618
  %1667 = phi i16 [ %1665, %1664 ], [ %1619, %1624 ], [ %1619, %1618 ]
  %1668 = add nuw nsw i32 %1620, 1
  %1669 = zext i16 %1667 to i32
  %1670 = icmp ult i32 %1668, %1669
  br i1 %1670, label %1618, label %1671

1671:                                             ; preds = %1666
  %1672 = load ptr, ptr %3, align 4
  br label %1673

1673:                                             ; preds = %1671, %1611
  %1674 = phi ptr [ %1672, %1671 ], [ %1614, %1611 ]
  %1675 = getelementptr inbounds %struct.mxl5005s_state, ptr %1674, i32 0, i32 20
  %1676 = load i16, ptr %1675, align 2
  %1677 = icmp eq i16 %1676, 0
  br i1 %1677, label %1731, label %1678

1678:                                             ; preds = %1726, %1673
  %1679 = phi i16 [ %1727, %1726 ], [ %1676, %1673 ]
  %1680 = phi i32 [ %1728, %1726 ], [ 0, %1673 ]
  %1681 = getelementptr %struct.mxl5005s_state, ptr %1674, i32 0, i32 21, i32 %1680
  %1682 = load i16, ptr %1681, align 2
  %1683 = icmp eq i16 %1682, 57
  br i1 %1683, label %1684, label %1726

1684:                                             ; preds = %1678
  %1685 = getelementptr %struct.mxl5005s_state, ptr %1674, i32 0, i32 21, i32 %1680, i32 1
  %1686 = load i16, ptr %1685, align 2
  %1687 = icmp eq i16 %1686, 0
  br i1 %1687, label %1726, label %1688

1688:                                             ; preds = %1719, %1684
  %1689 = phi i32 [ %1720, %1719 ], [ 0, %1684 ]
  %1690 = getelementptr %struct.mxl5005s_state, ptr %1674, i32 0, i32 21, i32 %1680, i32 4, i32 %1689
  store i16 0, ptr %1690, align 2
  %1691 = getelementptr %struct.mxl5005s_state, ptr %1674, i32 0, i32 21, i32 %1680, i32 3, i32 %1689
  %1692 = load i16, ptr %1691, align 2
  %1693 = load ptr, ptr %3, align 4
  %1694 = getelementptr inbounds %struct.mxl5005s_state, ptr %1693, i32 0, i32 24
  %1695 = load i16, ptr %1694, align 4
  %1696 = zext i16 %1695 to i32
  %1697 = icmp eq i16 %1695, 0
  br i1 %1697, label %1719, label %1698

1698:                                             ; preds = %1688
  %1699 = getelementptr %struct.mxl5005s_state, ptr %1674, i32 0, i32 21, i32 %1680, i32 2, i32 %1689
  %1700 = load i16, ptr %1699, align 2
  %1701 = and i16 %1700, 255
  br label %1702

1702:                                             ; preds = %1716, %1698
  %1703 = phi i32 [ 0, %1698 ], [ %1717, %1716 ]
  %1704 = getelementptr %struct.mxl5005s_state, ptr %1693, i32 0, i32 25, i32 %1703
  %1705 = load i16, ptr %1704, align 2
  %1706 = icmp eq i16 %1705, %1701
  br i1 %1706, label %1707, label %1716

1707:                                             ; preds = %1702
  %1708 = and i16 %1692, 255
  %1709 = zext i16 %1708 to i32
  %1710 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1709
  %1711 = load i8, ptr %1710, align 1
  %1712 = zext i8 %1711 to i16
  %1713 = getelementptr %struct.mxl5005s_state, ptr %1693, i32 0, i32 25, i32 %1703, i32 1
  %1714 = load i16, ptr %1713, align 2
  %1715 = and i16 %1714, %1712
  store i16 %1715, ptr %1713, align 2
  br label %1719

1716:                                             ; preds = %1702
  %1717 = add nuw nsw i32 %1703, 1
  %1718 = icmp eq i32 %1717, %1696
  br i1 %1718, label %1719, label %1702

1719:                                             ; preds = %1716, %1707, %1688
  %1720 = add nuw nsw i32 %1689, 1
  %1721 = load i16, ptr %1685, align 2
  %1722 = zext i16 %1721 to i32
  %1723 = icmp ult i32 %1720, %1722
  br i1 %1723, label %1688, label %1724

1724:                                             ; preds = %1719
  %1725 = load i16, ptr %1675, align 2
  br label %1726

1726:                                             ; preds = %1724, %1684, %1678
  %1727 = phi i16 [ %1725, %1724 ], [ %1679, %1684 ], [ %1679, %1678 ]
  %1728 = add nuw nsw i32 %1680, 1
  %1729 = zext i16 %1727 to i32
  %1730 = icmp ult i32 %1728, %1729
  br i1 %1730, label %1678, label %1731

1731:                                             ; preds = %1726, %1673, %1607
  %1732 = load i32, ptr %40, align 4
  %1733 = add i32 %1732, -500000001
  %1734 = icmp ult i32 %1733, 50000000
  br i1 %1734, label %1735, label %1855

1735:                                             ; preds = %1731
  %1736 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1737 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1738 = load ptr, ptr %3, align 4
  %1739 = getelementptr inbounds %struct.mxl5005s_state, ptr %1738, i32 0, i32 18
  %1740 = load i16, ptr %1739, align 4
  %1741 = icmp eq i16 %1740, 0
  br i1 %1741, label %1797, label %1742

1742:                                             ; preds = %1790, %1735
  %1743 = phi i16 [ %1791, %1790 ], [ %1740, %1735 ]
  %1744 = phi i32 [ %1792, %1790 ], [ 0, %1735 ]
  %1745 = getelementptr %struct.mxl5005s_state, ptr %1738, i32 0, i32 19, i32 %1744
  %1746 = load i16, ptr %1745, align 2
  %1747 = icmp eq i16 %1746, 57
  br i1 %1747, label %1748, label %1790

1748:                                             ; preds = %1742
  %1749 = getelementptr %struct.mxl5005s_state, ptr %1738, i32 0, i32 19, i32 %1744, i32 1
  %1750 = load i16, ptr %1749, align 2
  %1751 = icmp eq i16 %1750, 0
  br i1 %1751, label %1790, label %1752

1752:                                             ; preds = %1783, %1748
  %1753 = phi i32 [ %1784, %1783 ], [ 0, %1748 ]
  %1754 = getelementptr %struct.mxl5005s_state, ptr %1738, i32 0, i32 19, i32 %1744, i32 4, i32 %1753
  store i16 0, ptr %1754, align 2
  %1755 = getelementptr %struct.mxl5005s_state, ptr %1738, i32 0, i32 19, i32 %1744, i32 3, i32 %1753
  %1756 = load i16, ptr %1755, align 2
  %1757 = load ptr, ptr %3, align 4
  %1758 = getelementptr inbounds %struct.mxl5005s_state, ptr %1757, i32 0, i32 24
  %1759 = load i16, ptr %1758, align 4
  %1760 = zext i16 %1759 to i32
  %1761 = icmp eq i16 %1759, 0
  br i1 %1761, label %1783, label %1762

1762:                                             ; preds = %1752
  %1763 = getelementptr %struct.mxl5005s_state, ptr %1738, i32 0, i32 19, i32 %1744, i32 2, i32 %1753
  %1764 = load i16, ptr %1763, align 2
  %1765 = and i16 %1764, 255
  br label %1766

1766:                                             ; preds = %1780, %1762
  %1767 = phi i32 [ 0, %1762 ], [ %1781, %1780 ]
  %1768 = getelementptr %struct.mxl5005s_state, ptr %1757, i32 0, i32 25, i32 %1767
  %1769 = load i16, ptr %1768, align 2
  %1770 = icmp eq i16 %1769, %1765
  br i1 %1770, label %1771, label %1780

1771:                                             ; preds = %1766
  %1772 = and i16 %1756, 255
  %1773 = zext i16 %1772 to i32
  %1774 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1773
  %1775 = load i8, ptr %1774, align 1
  %1776 = zext i8 %1775 to i16
  %1777 = getelementptr %struct.mxl5005s_state, ptr %1757, i32 0, i32 25, i32 %1767, i32 1
  %1778 = load i16, ptr %1777, align 2
  %1779 = and i16 %1778, %1776
  store i16 %1779, ptr %1777, align 2
  br label %1783

1780:                                             ; preds = %1766
  %1781 = add nuw nsw i32 %1767, 1
  %1782 = icmp eq i32 %1781, %1760
  br i1 %1782, label %1783, label %1766

1783:                                             ; preds = %1780, %1771, %1752
  %1784 = add nuw nsw i32 %1753, 1
  %1785 = load i16, ptr %1749, align 2
  %1786 = zext i16 %1785 to i32
  %1787 = icmp ult i32 %1784, %1786
  br i1 %1787, label %1752, label %1788

1788:                                             ; preds = %1783
  %1789 = load i16, ptr %1739, align 4
  br label %1790

1790:                                             ; preds = %1788, %1748, %1742
  %1791 = phi i16 [ %1789, %1788 ], [ %1743, %1748 ], [ %1743, %1742 ]
  %1792 = add nuw nsw i32 %1744, 1
  %1793 = zext i16 %1791 to i32
  %1794 = icmp ult i32 %1792, %1793
  br i1 %1794, label %1742, label %1795

1795:                                             ; preds = %1790
  %1796 = load ptr, ptr %3, align 4
  br label %1797

1797:                                             ; preds = %1795, %1735
  %1798 = phi ptr [ %1796, %1795 ], [ %1738, %1735 ]
  %1799 = getelementptr inbounds %struct.mxl5005s_state, ptr %1798, i32 0, i32 20
  %1800 = load i16, ptr %1799, align 2
  %1801 = icmp eq i16 %1800, 0
  br i1 %1801, label %1855, label %1802

1802:                                             ; preds = %1850, %1797
  %1803 = phi i16 [ %1851, %1850 ], [ %1800, %1797 ]
  %1804 = phi i32 [ %1852, %1850 ], [ 0, %1797 ]
  %1805 = getelementptr %struct.mxl5005s_state, ptr %1798, i32 0, i32 21, i32 %1804
  %1806 = load i16, ptr %1805, align 2
  %1807 = icmp eq i16 %1806, 57
  br i1 %1807, label %1808, label %1850

1808:                                             ; preds = %1802
  %1809 = getelementptr %struct.mxl5005s_state, ptr %1798, i32 0, i32 21, i32 %1804, i32 1
  %1810 = load i16, ptr %1809, align 2
  %1811 = icmp eq i16 %1810, 0
  br i1 %1811, label %1850, label %1812

1812:                                             ; preds = %1843, %1808
  %1813 = phi i32 [ %1844, %1843 ], [ 0, %1808 ]
  %1814 = getelementptr %struct.mxl5005s_state, ptr %1798, i32 0, i32 21, i32 %1804, i32 4, i32 %1813
  store i16 0, ptr %1814, align 2
  %1815 = getelementptr %struct.mxl5005s_state, ptr %1798, i32 0, i32 21, i32 %1804, i32 3, i32 %1813
  %1816 = load i16, ptr %1815, align 2
  %1817 = load ptr, ptr %3, align 4
  %1818 = getelementptr inbounds %struct.mxl5005s_state, ptr %1817, i32 0, i32 24
  %1819 = load i16, ptr %1818, align 4
  %1820 = zext i16 %1819 to i32
  %1821 = icmp eq i16 %1819, 0
  br i1 %1821, label %1843, label %1822

1822:                                             ; preds = %1812
  %1823 = getelementptr %struct.mxl5005s_state, ptr %1798, i32 0, i32 21, i32 %1804, i32 2, i32 %1813
  %1824 = load i16, ptr %1823, align 2
  %1825 = and i16 %1824, 255
  br label %1826

1826:                                             ; preds = %1840, %1822
  %1827 = phi i32 [ 0, %1822 ], [ %1841, %1840 ]
  %1828 = getelementptr %struct.mxl5005s_state, ptr %1817, i32 0, i32 25, i32 %1827
  %1829 = load i16, ptr %1828, align 2
  %1830 = icmp eq i16 %1829, %1825
  br i1 %1830, label %1831, label %1840

1831:                                             ; preds = %1826
  %1832 = and i16 %1816, 255
  %1833 = zext i16 %1832 to i32
  %1834 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1833
  %1835 = load i8, ptr %1834, align 1
  %1836 = zext i8 %1835 to i16
  %1837 = getelementptr %struct.mxl5005s_state, ptr %1817, i32 0, i32 25, i32 %1827, i32 1
  %1838 = load i16, ptr %1837, align 2
  %1839 = and i16 %1838, %1836
  store i16 %1839, ptr %1837, align 2
  br label %1843

1840:                                             ; preds = %1826
  %1841 = add nuw nsw i32 %1827, 1
  %1842 = icmp eq i32 %1841, %1820
  br i1 %1842, label %1843, label %1826

1843:                                             ; preds = %1840, %1831, %1812
  %1844 = add nuw nsw i32 %1813, 1
  %1845 = load i16, ptr %1809, align 2
  %1846 = zext i16 %1845 to i32
  %1847 = icmp ult i32 %1844, %1846
  br i1 %1847, label %1812, label %1848

1848:                                             ; preds = %1843
  %1849 = load i16, ptr %1799, align 2
  br label %1850

1850:                                             ; preds = %1848, %1808, %1802
  %1851 = phi i16 [ %1849, %1848 ], [ %1803, %1808 ], [ %1803, %1802 ]
  %1852 = add nuw nsw i32 %1804, 1
  %1853 = zext i16 %1851 to i32
  %1854 = icmp ult i32 %1852, %1853
  br i1 %1854, label %1802, label %1855

1855:                                             ; preds = %1850, %1797, %1731
  %1856 = load i32, ptr %40, align 4
  %1857 = add i32 %1856, -550000001
  %1858 = icmp ult i32 %1857, 50000000
  br i1 %1858, label %1859, label %1979

1859:                                             ; preds = %1855
  %1860 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1861 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1862 = load ptr, ptr %3, align 4
  %1863 = getelementptr inbounds %struct.mxl5005s_state, ptr %1862, i32 0, i32 18
  %1864 = load i16, ptr %1863, align 4
  %1865 = icmp eq i16 %1864, 0
  br i1 %1865, label %1921, label %1866

1866:                                             ; preds = %1914, %1859
  %1867 = phi i16 [ %1915, %1914 ], [ %1864, %1859 ]
  %1868 = phi i32 [ %1916, %1914 ], [ 0, %1859 ]
  %1869 = getelementptr %struct.mxl5005s_state, ptr %1862, i32 0, i32 19, i32 %1868
  %1870 = load i16, ptr %1869, align 2
  %1871 = icmp eq i16 %1870, 57
  br i1 %1871, label %1872, label %1914

1872:                                             ; preds = %1866
  %1873 = getelementptr %struct.mxl5005s_state, ptr %1862, i32 0, i32 19, i32 %1868, i32 1
  %1874 = load i16, ptr %1873, align 2
  %1875 = icmp eq i16 %1874, 0
  br i1 %1875, label %1914, label %1876

1876:                                             ; preds = %1907, %1872
  %1877 = phi i32 [ %1908, %1907 ], [ 0, %1872 ]
  %1878 = getelementptr %struct.mxl5005s_state, ptr %1862, i32 0, i32 19, i32 %1868, i32 4, i32 %1877
  store i16 0, ptr %1878, align 2
  %1879 = getelementptr %struct.mxl5005s_state, ptr %1862, i32 0, i32 19, i32 %1868, i32 3, i32 %1877
  %1880 = load i16, ptr %1879, align 2
  %1881 = load ptr, ptr %3, align 4
  %1882 = getelementptr inbounds %struct.mxl5005s_state, ptr %1881, i32 0, i32 24
  %1883 = load i16, ptr %1882, align 4
  %1884 = zext i16 %1883 to i32
  %1885 = icmp eq i16 %1883, 0
  br i1 %1885, label %1907, label %1886

1886:                                             ; preds = %1876
  %1887 = getelementptr %struct.mxl5005s_state, ptr %1862, i32 0, i32 19, i32 %1868, i32 2, i32 %1877
  %1888 = load i16, ptr %1887, align 2
  %1889 = and i16 %1888, 255
  br label %1890

1890:                                             ; preds = %1904, %1886
  %1891 = phi i32 [ 0, %1886 ], [ %1905, %1904 ]
  %1892 = getelementptr %struct.mxl5005s_state, ptr %1881, i32 0, i32 25, i32 %1891
  %1893 = load i16, ptr %1892, align 2
  %1894 = icmp eq i16 %1893, %1889
  br i1 %1894, label %1895, label %1904

1895:                                             ; preds = %1890
  %1896 = and i16 %1880, 255
  %1897 = zext i16 %1896 to i32
  %1898 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1897
  %1899 = load i8, ptr %1898, align 1
  %1900 = zext i8 %1899 to i16
  %1901 = getelementptr %struct.mxl5005s_state, ptr %1881, i32 0, i32 25, i32 %1891, i32 1
  %1902 = load i16, ptr %1901, align 2
  %1903 = and i16 %1902, %1900
  store i16 %1903, ptr %1901, align 2
  br label %1907

1904:                                             ; preds = %1890
  %1905 = add nuw nsw i32 %1891, 1
  %1906 = icmp eq i32 %1905, %1884
  br i1 %1906, label %1907, label %1890

1907:                                             ; preds = %1904, %1895, %1876
  %1908 = add nuw nsw i32 %1877, 1
  %1909 = load i16, ptr %1873, align 2
  %1910 = zext i16 %1909 to i32
  %1911 = icmp ult i32 %1908, %1910
  br i1 %1911, label %1876, label %1912

1912:                                             ; preds = %1907
  %1913 = load i16, ptr %1863, align 4
  br label %1914

1914:                                             ; preds = %1912, %1872, %1866
  %1915 = phi i16 [ %1913, %1912 ], [ %1867, %1872 ], [ %1867, %1866 ]
  %1916 = add nuw nsw i32 %1868, 1
  %1917 = zext i16 %1915 to i32
  %1918 = icmp ult i32 %1916, %1917
  br i1 %1918, label %1866, label %1919

1919:                                             ; preds = %1914
  %1920 = load ptr, ptr %3, align 4
  br label %1921

1921:                                             ; preds = %1919, %1859
  %1922 = phi ptr [ %1920, %1919 ], [ %1862, %1859 ]
  %1923 = getelementptr inbounds %struct.mxl5005s_state, ptr %1922, i32 0, i32 20
  %1924 = load i16, ptr %1923, align 2
  %1925 = icmp eq i16 %1924, 0
  br i1 %1925, label %1979, label %1926

1926:                                             ; preds = %1974, %1921
  %1927 = phi i16 [ %1975, %1974 ], [ %1924, %1921 ]
  %1928 = phi i32 [ %1976, %1974 ], [ 0, %1921 ]
  %1929 = getelementptr %struct.mxl5005s_state, ptr %1922, i32 0, i32 21, i32 %1928
  %1930 = load i16, ptr %1929, align 2
  %1931 = icmp eq i16 %1930, 57
  br i1 %1931, label %1932, label %1974

1932:                                             ; preds = %1926
  %1933 = getelementptr %struct.mxl5005s_state, ptr %1922, i32 0, i32 21, i32 %1928, i32 1
  %1934 = load i16, ptr %1933, align 2
  %1935 = icmp eq i16 %1934, 0
  br i1 %1935, label %1974, label %1936

1936:                                             ; preds = %1967, %1932
  %1937 = phi i32 [ %1968, %1967 ], [ 0, %1932 ]
  %1938 = getelementptr %struct.mxl5005s_state, ptr %1922, i32 0, i32 21, i32 %1928, i32 4, i32 %1937
  store i16 0, ptr %1938, align 2
  %1939 = getelementptr %struct.mxl5005s_state, ptr %1922, i32 0, i32 21, i32 %1928, i32 3, i32 %1937
  %1940 = load i16, ptr %1939, align 2
  %1941 = load ptr, ptr %3, align 4
  %1942 = getelementptr inbounds %struct.mxl5005s_state, ptr %1941, i32 0, i32 24
  %1943 = load i16, ptr %1942, align 4
  %1944 = zext i16 %1943 to i32
  %1945 = icmp eq i16 %1943, 0
  br i1 %1945, label %1967, label %1946

1946:                                             ; preds = %1936
  %1947 = getelementptr %struct.mxl5005s_state, ptr %1922, i32 0, i32 21, i32 %1928, i32 2, i32 %1937
  %1948 = load i16, ptr %1947, align 2
  %1949 = and i16 %1948, 255
  br label %1950

1950:                                             ; preds = %1964, %1946
  %1951 = phi i32 [ 0, %1946 ], [ %1965, %1964 ]
  %1952 = getelementptr %struct.mxl5005s_state, ptr %1941, i32 0, i32 25, i32 %1951
  %1953 = load i16, ptr %1952, align 2
  %1954 = icmp eq i16 %1953, %1949
  br i1 %1954, label %1955, label %1964

1955:                                             ; preds = %1950
  %1956 = and i16 %1940, 255
  %1957 = zext i16 %1956 to i32
  %1958 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %1957
  %1959 = load i8, ptr %1958, align 1
  %1960 = zext i8 %1959 to i16
  %1961 = getelementptr %struct.mxl5005s_state, ptr %1941, i32 0, i32 25, i32 %1951, i32 1
  %1962 = load i16, ptr %1961, align 2
  %1963 = and i16 %1962, %1960
  store i16 %1963, ptr %1961, align 2
  br label %1967

1964:                                             ; preds = %1950
  %1965 = add nuw nsw i32 %1951, 1
  %1966 = icmp eq i32 %1965, %1944
  br i1 %1966, label %1967, label %1950

1967:                                             ; preds = %1964, %1955, %1936
  %1968 = add nuw nsw i32 %1937, 1
  %1969 = load i16, ptr %1933, align 2
  %1970 = zext i16 %1969 to i32
  %1971 = icmp ult i32 %1968, %1970
  br i1 %1971, label %1936, label %1972

1972:                                             ; preds = %1967
  %1973 = load i16, ptr %1923, align 2
  br label %1974

1974:                                             ; preds = %1972, %1932, %1926
  %1975 = phi i16 [ %1973, %1972 ], [ %1927, %1932 ], [ %1927, %1926 ]
  %1976 = add nuw nsw i32 %1928, 1
  %1977 = zext i16 %1975 to i32
  %1978 = icmp ult i32 %1976, %1977
  br i1 %1978, label %1926, label %1979

1979:                                             ; preds = %1974, %1921, %1855
  %1980 = load i32, ptr %40, align 4
  %1981 = add i32 %1980, -600000001
  %1982 = icmp ult i32 %1981, 50000000
  br i1 %1982, label %1983, label %2103

1983:                                             ; preds = %1979
  %1984 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %1985 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %1986 = load ptr, ptr %3, align 4
  %1987 = getelementptr inbounds %struct.mxl5005s_state, ptr %1986, i32 0, i32 18
  %1988 = load i16, ptr %1987, align 4
  %1989 = icmp eq i16 %1988, 0
  br i1 %1989, label %2045, label %1990

1990:                                             ; preds = %2038, %1983
  %1991 = phi i16 [ %2039, %2038 ], [ %1988, %1983 ]
  %1992 = phi i32 [ %2040, %2038 ], [ 0, %1983 ]
  %1993 = getelementptr %struct.mxl5005s_state, ptr %1986, i32 0, i32 19, i32 %1992
  %1994 = load i16, ptr %1993, align 2
  %1995 = icmp eq i16 %1994, 57
  br i1 %1995, label %1996, label %2038

1996:                                             ; preds = %1990
  %1997 = getelementptr %struct.mxl5005s_state, ptr %1986, i32 0, i32 19, i32 %1992, i32 1
  %1998 = load i16, ptr %1997, align 2
  %1999 = icmp eq i16 %1998, 0
  br i1 %1999, label %2038, label %2000

2000:                                             ; preds = %2031, %1996
  %2001 = phi i32 [ %2032, %2031 ], [ 0, %1996 ]
  %2002 = getelementptr %struct.mxl5005s_state, ptr %1986, i32 0, i32 19, i32 %1992, i32 4, i32 %2001
  store i16 0, ptr %2002, align 2
  %2003 = getelementptr %struct.mxl5005s_state, ptr %1986, i32 0, i32 19, i32 %1992, i32 3, i32 %2001
  %2004 = load i16, ptr %2003, align 2
  %2005 = load ptr, ptr %3, align 4
  %2006 = getelementptr inbounds %struct.mxl5005s_state, ptr %2005, i32 0, i32 24
  %2007 = load i16, ptr %2006, align 4
  %2008 = zext i16 %2007 to i32
  %2009 = icmp eq i16 %2007, 0
  br i1 %2009, label %2031, label %2010

2010:                                             ; preds = %2000
  %2011 = getelementptr %struct.mxl5005s_state, ptr %1986, i32 0, i32 19, i32 %1992, i32 2, i32 %2001
  %2012 = load i16, ptr %2011, align 2
  %2013 = and i16 %2012, 255
  br label %2014

2014:                                             ; preds = %2028, %2010
  %2015 = phi i32 [ 0, %2010 ], [ %2029, %2028 ]
  %2016 = getelementptr %struct.mxl5005s_state, ptr %2005, i32 0, i32 25, i32 %2015
  %2017 = load i16, ptr %2016, align 2
  %2018 = icmp eq i16 %2017, %2013
  br i1 %2018, label %2019, label %2028

2019:                                             ; preds = %2014
  %2020 = and i16 %2004, 255
  %2021 = zext i16 %2020 to i32
  %2022 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2021
  %2023 = load i8, ptr %2022, align 1
  %2024 = zext i8 %2023 to i16
  %2025 = getelementptr %struct.mxl5005s_state, ptr %2005, i32 0, i32 25, i32 %2015, i32 1
  %2026 = load i16, ptr %2025, align 2
  %2027 = and i16 %2026, %2024
  store i16 %2027, ptr %2025, align 2
  br label %2031

2028:                                             ; preds = %2014
  %2029 = add nuw nsw i32 %2015, 1
  %2030 = icmp eq i32 %2029, %2008
  br i1 %2030, label %2031, label %2014

2031:                                             ; preds = %2028, %2019, %2000
  %2032 = add nuw nsw i32 %2001, 1
  %2033 = load i16, ptr %1997, align 2
  %2034 = zext i16 %2033 to i32
  %2035 = icmp ult i32 %2032, %2034
  br i1 %2035, label %2000, label %2036

2036:                                             ; preds = %2031
  %2037 = load i16, ptr %1987, align 4
  br label %2038

2038:                                             ; preds = %2036, %1996, %1990
  %2039 = phi i16 [ %2037, %2036 ], [ %1991, %1996 ], [ %1991, %1990 ]
  %2040 = add nuw nsw i32 %1992, 1
  %2041 = zext i16 %2039 to i32
  %2042 = icmp ult i32 %2040, %2041
  br i1 %2042, label %1990, label %2043

2043:                                             ; preds = %2038
  %2044 = load ptr, ptr %3, align 4
  br label %2045

2045:                                             ; preds = %2043, %1983
  %2046 = phi ptr [ %2044, %2043 ], [ %1986, %1983 ]
  %2047 = getelementptr inbounds %struct.mxl5005s_state, ptr %2046, i32 0, i32 20
  %2048 = load i16, ptr %2047, align 2
  %2049 = icmp eq i16 %2048, 0
  br i1 %2049, label %2103, label %2050

2050:                                             ; preds = %2098, %2045
  %2051 = phi i16 [ %2099, %2098 ], [ %2048, %2045 ]
  %2052 = phi i32 [ %2100, %2098 ], [ 0, %2045 ]
  %2053 = getelementptr %struct.mxl5005s_state, ptr %2046, i32 0, i32 21, i32 %2052
  %2054 = load i16, ptr %2053, align 2
  %2055 = icmp eq i16 %2054, 57
  br i1 %2055, label %2056, label %2098

2056:                                             ; preds = %2050
  %2057 = getelementptr %struct.mxl5005s_state, ptr %2046, i32 0, i32 21, i32 %2052, i32 1
  %2058 = load i16, ptr %2057, align 2
  %2059 = icmp eq i16 %2058, 0
  br i1 %2059, label %2098, label %2060

2060:                                             ; preds = %2091, %2056
  %2061 = phi i32 [ %2092, %2091 ], [ 0, %2056 ]
  %2062 = getelementptr %struct.mxl5005s_state, ptr %2046, i32 0, i32 21, i32 %2052, i32 4, i32 %2061
  store i16 0, ptr %2062, align 2
  %2063 = getelementptr %struct.mxl5005s_state, ptr %2046, i32 0, i32 21, i32 %2052, i32 3, i32 %2061
  %2064 = load i16, ptr %2063, align 2
  %2065 = load ptr, ptr %3, align 4
  %2066 = getelementptr inbounds %struct.mxl5005s_state, ptr %2065, i32 0, i32 24
  %2067 = load i16, ptr %2066, align 4
  %2068 = zext i16 %2067 to i32
  %2069 = icmp eq i16 %2067, 0
  br i1 %2069, label %2091, label %2070

2070:                                             ; preds = %2060
  %2071 = getelementptr %struct.mxl5005s_state, ptr %2046, i32 0, i32 21, i32 %2052, i32 2, i32 %2061
  %2072 = load i16, ptr %2071, align 2
  %2073 = and i16 %2072, 255
  br label %2074

2074:                                             ; preds = %2088, %2070
  %2075 = phi i32 [ 0, %2070 ], [ %2089, %2088 ]
  %2076 = getelementptr %struct.mxl5005s_state, ptr %2065, i32 0, i32 25, i32 %2075
  %2077 = load i16, ptr %2076, align 2
  %2078 = icmp eq i16 %2077, %2073
  br i1 %2078, label %2079, label %2088

2079:                                             ; preds = %2074
  %2080 = and i16 %2064, 255
  %2081 = zext i16 %2080 to i32
  %2082 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2081
  %2083 = load i8, ptr %2082, align 1
  %2084 = zext i8 %2083 to i16
  %2085 = getelementptr %struct.mxl5005s_state, ptr %2065, i32 0, i32 25, i32 %2075, i32 1
  %2086 = load i16, ptr %2085, align 2
  %2087 = and i16 %2086, %2084
  store i16 %2087, ptr %2085, align 2
  br label %2091

2088:                                             ; preds = %2074
  %2089 = add nuw nsw i32 %2075, 1
  %2090 = icmp eq i32 %2089, %2068
  br i1 %2090, label %2091, label %2074

2091:                                             ; preds = %2088, %2079, %2060
  %2092 = add nuw nsw i32 %2061, 1
  %2093 = load i16, ptr %2057, align 2
  %2094 = zext i16 %2093 to i32
  %2095 = icmp ult i32 %2092, %2094
  br i1 %2095, label %2060, label %2096

2096:                                             ; preds = %2091
  %2097 = load i16, ptr %2047, align 2
  br label %2098

2098:                                             ; preds = %2096, %2056, %2050
  %2099 = phi i16 [ %2097, %2096 ], [ %2051, %2056 ], [ %2051, %2050 ]
  %2100 = add nuw nsw i32 %2052, 1
  %2101 = zext i16 %2099 to i32
  %2102 = icmp ult i32 %2100, %2101
  br i1 %2102, label %2050, label %2103

2103:                                             ; preds = %2098, %2045, %1979
  %2104 = load i32, ptr %40, align 4
  %2105 = add i32 %2104, -650000001
  %2106 = icmp ult i32 %2105, 50000000
  br i1 %2106, label %2107, label %2227

2107:                                             ; preds = %2103
  %2108 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %2109 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %2110 = load ptr, ptr %3, align 4
  %2111 = getelementptr inbounds %struct.mxl5005s_state, ptr %2110, i32 0, i32 18
  %2112 = load i16, ptr %2111, align 4
  %2113 = icmp eq i16 %2112, 0
  br i1 %2113, label %2169, label %2114

2114:                                             ; preds = %2162, %2107
  %2115 = phi i16 [ %2163, %2162 ], [ %2112, %2107 ]
  %2116 = phi i32 [ %2164, %2162 ], [ 0, %2107 ]
  %2117 = getelementptr %struct.mxl5005s_state, ptr %2110, i32 0, i32 19, i32 %2116
  %2118 = load i16, ptr %2117, align 2
  %2119 = icmp eq i16 %2118, 57
  br i1 %2119, label %2120, label %2162

2120:                                             ; preds = %2114
  %2121 = getelementptr %struct.mxl5005s_state, ptr %2110, i32 0, i32 19, i32 %2116, i32 1
  %2122 = load i16, ptr %2121, align 2
  %2123 = icmp eq i16 %2122, 0
  br i1 %2123, label %2162, label %2124

2124:                                             ; preds = %2155, %2120
  %2125 = phi i32 [ %2156, %2155 ], [ 0, %2120 ]
  %2126 = getelementptr %struct.mxl5005s_state, ptr %2110, i32 0, i32 19, i32 %2116, i32 4, i32 %2125
  store i16 0, ptr %2126, align 2
  %2127 = getelementptr %struct.mxl5005s_state, ptr %2110, i32 0, i32 19, i32 %2116, i32 3, i32 %2125
  %2128 = load i16, ptr %2127, align 2
  %2129 = load ptr, ptr %3, align 4
  %2130 = getelementptr inbounds %struct.mxl5005s_state, ptr %2129, i32 0, i32 24
  %2131 = load i16, ptr %2130, align 4
  %2132 = zext i16 %2131 to i32
  %2133 = icmp eq i16 %2131, 0
  br i1 %2133, label %2155, label %2134

2134:                                             ; preds = %2124
  %2135 = getelementptr %struct.mxl5005s_state, ptr %2110, i32 0, i32 19, i32 %2116, i32 2, i32 %2125
  %2136 = load i16, ptr %2135, align 2
  %2137 = and i16 %2136, 255
  br label %2138

2138:                                             ; preds = %2152, %2134
  %2139 = phi i32 [ 0, %2134 ], [ %2153, %2152 ]
  %2140 = getelementptr %struct.mxl5005s_state, ptr %2129, i32 0, i32 25, i32 %2139
  %2141 = load i16, ptr %2140, align 2
  %2142 = icmp eq i16 %2141, %2137
  br i1 %2142, label %2143, label %2152

2143:                                             ; preds = %2138
  %2144 = and i16 %2128, 255
  %2145 = zext i16 %2144 to i32
  %2146 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2145
  %2147 = load i8, ptr %2146, align 1
  %2148 = zext i8 %2147 to i16
  %2149 = getelementptr %struct.mxl5005s_state, ptr %2129, i32 0, i32 25, i32 %2139, i32 1
  %2150 = load i16, ptr %2149, align 2
  %2151 = and i16 %2150, %2148
  store i16 %2151, ptr %2149, align 2
  br label %2155

2152:                                             ; preds = %2138
  %2153 = add nuw nsw i32 %2139, 1
  %2154 = icmp eq i32 %2153, %2132
  br i1 %2154, label %2155, label %2138

2155:                                             ; preds = %2152, %2143, %2124
  %2156 = add nuw nsw i32 %2125, 1
  %2157 = load i16, ptr %2121, align 2
  %2158 = zext i16 %2157 to i32
  %2159 = icmp ult i32 %2156, %2158
  br i1 %2159, label %2124, label %2160

2160:                                             ; preds = %2155
  %2161 = load i16, ptr %2111, align 4
  br label %2162

2162:                                             ; preds = %2160, %2120, %2114
  %2163 = phi i16 [ %2161, %2160 ], [ %2115, %2120 ], [ %2115, %2114 ]
  %2164 = add nuw nsw i32 %2116, 1
  %2165 = zext i16 %2163 to i32
  %2166 = icmp ult i32 %2164, %2165
  br i1 %2166, label %2114, label %2167

2167:                                             ; preds = %2162
  %2168 = load ptr, ptr %3, align 4
  br label %2169

2169:                                             ; preds = %2167, %2107
  %2170 = phi ptr [ %2168, %2167 ], [ %2110, %2107 ]
  %2171 = getelementptr inbounds %struct.mxl5005s_state, ptr %2170, i32 0, i32 20
  %2172 = load i16, ptr %2171, align 2
  %2173 = icmp eq i16 %2172, 0
  br i1 %2173, label %2227, label %2174

2174:                                             ; preds = %2222, %2169
  %2175 = phi i16 [ %2223, %2222 ], [ %2172, %2169 ]
  %2176 = phi i32 [ %2224, %2222 ], [ 0, %2169 ]
  %2177 = getelementptr %struct.mxl5005s_state, ptr %2170, i32 0, i32 21, i32 %2176
  %2178 = load i16, ptr %2177, align 2
  %2179 = icmp eq i16 %2178, 57
  br i1 %2179, label %2180, label %2222

2180:                                             ; preds = %2174
  %2181 = getelementptr %struct.mxl5005s_state, ptr %2170, i32 0, i32 21, i32 %2176, i32 1
  %2182 = load i16, ptr %2181, align 2
  %2183 = icmp eq i16 %2182, 0
  br i1 %2183, label %2222, label %2184

2184:                                             ; preds = %2215, %2180
  %2185 = phi i32 [ %2216, %2215 ], [ 0, %2180 ]
  %2186 = getelementptr %struct.mxl5005s_state, ptr %2170, i32 0, i32 21, i32 %2176, i32 4, i32 %2185
  store i16 0, ptr %2186, align 2
  %2187 = getelementptr %struct.mxl5005s_state, ptr %2170, i32 0, i32 21, i32 %2176, i32 3, i32 %2185
  %2188 = load i16, ptr %2187, align 2
  %2189 = load ptr, ptr %3, align 4
  %2190 = getelementptr inbounds %struct.mxl5005s_state, ptr %2189, i32 0, i32 24
  %2191 = load i16, ptr %2190, align 4
  %2192 = zext i16 %2191 to i32
  %2193 = icmp eq i16 %2191, 0
  br i1 %2193, label %2215, label %2194

2194:                                             ; preds = %2184
  %2195 = getelementptr %struct.mxl5005s_state, ptr %2170, i32 0, i32 21, i32 %2176, i32 2, i32 %2185
  %2196 = load i16, ptr %2195, align 2
  %2197 = and i16 %2196, 255
  br label %2198

2198:                                             ; preds = %2212, %2194
  %2199 = phi i32 [ 0, %2194 ], [ %2213, %2212 ]
  %2200 = getelementptr %struct.mxl5005s_state, ptr %2189, i32 0, i32 25, i32 %2199
  %2201 = load i16, ptr %2200, align 2
  %2202 = icmp eq i16 %2201, %2197
  br i1 %2202, label %2203, label %2212

2203:                                             ; preds = %2198
  %2204 = and i16 %2188, 255
  %2205 = zext i16 %2204 to i32
  %2206 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2205
  %2207 = load i8, ptr %2206, align 1
  %2208 = zext i8 %2207 to i16
  %2209 = getelementptr %struct.mxl5005s_state, ptr %2189, i32 0, i32 25, i32 %2199, i32 1
  %2210 = load i16, ptr %2209, align 2
  %2211 = and i16 %2210, %2208
  store i16 %2211, ptr %2209, align 2
  br label %2215

2212:                                             ; preds = %2198
  %2213 = add nuw nsw i32 %2199, 1
  %2214 = icmp eq i32 %2213, %2192
  br i1 %2214, label %2215, label %2198

2215:                                             ; preds = %2212, %2203, %2184
  %2216 = add nuw nsw i32 %2185, 1
  %2217 = load i16, ptr %2181, align 2
  %2218 = zext i16 %2217 to i32
  %2219 = icmp ult i32 %2216, %2218
  br i1 %2219, label %2184, label %2220

2220:                                             ; preds = %2215
  %2221 = load i16, ptr %2171, align 2
  br label %2222

2222:                                             ; preds = %2220, %2180, %2174
  %2223 = phi i16 [ %2221, %2220 ], [ %2175, %2180 ], [ %2175, %2174 ]
  %2224 = add nuw nsw i32 %2176, 1
  %2225 = zext i16 %2223 to i32
  %2226 = icmp ult i32 %2224, %2225
  br i1 %2226, label %2174, label %2227

2227:                                             ; preds = %2222, %2169, %2103
  %2228 = load i32, ptr %40, align 4
  %2229 = add i32 %2228, -700000001
  %2230 = icmp ult i32 %2229, 50000000
  br i1 %2230, label %2231, label %2351

2231:                                             ; preds = %2227
  %2232 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %2233 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %2234 = load ptr, ptr %3, align 4
  %2235 = getelementptr inbounds %struct.mxl5005s_state, ptr %2234, i32 0, i32 18
  %2236 = load i16, ptr %2235, align 4
  %2237 = icmp eq i16 %2236, 0
  br i1 %2237, label %2293, label %2238

2238:                                             ; preds = %2286, %2231
  %2239 = phi i16 [ %2287, %2286 ], [ %2236, %2231 ]
  %2240 = phi i32 [ %2288, %2286 ], [ 0, %2231 ]
  %2241 = getelementptr %struct.mxl5005s_state, ptr %2234, i32 0, i32 19, i32 %2240
  %2242 = load i16, ptr %2241, align 2
  %2243 = icmp eq i16 %2242, 57
  br i1 %2243, label %2244, label %2286

2244:                                             ; preds = %2238
  %2245 = getelementptr %struct.mxl5005s_state, ptr %2234, i32 0, i32 19, i32 %2240, i32 1
  %2246 = load i16, ptr %2245, align 2
  %2247 = icmp eq i16 %2246, 0
  br i1 %2247, label %2286, label %2248

2248:                                             ; preds = %2279, %2244
  %2249 = phi i32 [ %2280, %2279 ], [ 0, %2244 ]
  %2250 = getelementptr %struct.mxl5005s_state, ptr %2234, i32 0, i32 19, i32 %2240, i32 4, i32 %2249
  store i16 0, ptr %2250, align 2
  %2251 = getelementptr %struct.mxl5005s_state, ptr %2234, i32 0, i32 19, i32 %2240, i32 3, i32 %2249
  %2252 = load i16, ptr %2251, align 2
  %2253 = load ptr, ptr %3, align 4
  %2254 = getelementptr inbounds %struct.mxl5005s_state, ptr %2253, i32 0, i32 24
  %2255 = load i16, ptr %2254, align 4
  %2256 = zext i16 %2255 to i32
  %2257 = icmp eq i16 %2255, 0
  br i1 %2257, label %2279, label %2258

2258:                                             ; preds = %2248
  %2259 = getelementptr %struct.mxl5005s_state, ptr %2234, i32 0, i32 19, i32 %2240, i32 2, i32 %2249
  %2260 = load i16, ptr %2259, align 2
  %2261 = and i16 %2260, 255
  br label %2262

2262:                                             ; preds = %2276, %2258
  %2263 = phi i32 [ 0, %2258 ], [ %2277, %2276 ]
  %2264 = getelementptr %struct.mxl5005s_state, ptr %2253, i32 0, i32 25, i32 %2263
  %2265 = load i16, ptr %2264, align 2
  %2266 = icmp eq i16 %2265, %2261
  br i1 %2266, label %2267, label %2276

2267:                                             ; preds = %2262
  %2268 = and i16 %2252, 255
  %2269 = zext i16 %2268 to i32
  %2270 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2269
  %2271 = load i8, ptr %2270, align 1
  %2272 = zext i8 %2271 to i16
  %2273 = getelementptr %struct.mxl5005s_state, ptr %2253, i32 0, i32 25, i32 %2263, i32 1
  %2274 = load i16, ptr %2273, align 2
  %2275 = and i16 %2274, %2272
  store i16 %2275, ptr %2273, align 2
  br label %2279

2276:                                             ; preds = %2262
  %2277 = add nuw nsw i32 %2263, 1
  %2278 = icmp eq i32 %2277, %2256
  br i1 %2278, label %2279, label %2262

2279:                                             ; preds = %2276, %2267, %2248
  %2280 = add nuw nsw i32 %2249, 1
  %2281 = load i16, ptr %2245, align 2
  %2282 = zext i16 %2281 to i32
  %2283 = icmp ult i32 %2280, %2282
  br i1 %2283, label %2248, label %2284

2284:                                             ; preds = %2279
  %2285 = load i16, ptr %2235, align 4
  br label %2286

2286:                                             ; preds = %2284, %2244, %2238
  %2287 = phi i16 [ %2285, %2284 ], [ %2239, %2244 ], [ %2239, %2238 ]
  %2288 = add nuw nsw i32 %2240, 1
  %2289 = zext i16 %2287 to i32
  %2290 = icmp ult i32 %2288, %2289
  br i1 %2290, label %2238, label %2291

2291:                                             ; preds = %2286
  %2292 = load ptr, ptr %3, align 4
  br label %2293

2293:                                             ; preds = %2291, %2231
  %2294 = phi ptr [ %2292, %2291 ], [ %2234, %2231 ]
  %2295 = getelementptr inbounds %struct.mxl5005s_state, ptr %2294, i32 0, i32 20
  %2296 = load i16, ptr %2295, align 2
  %2297 = icmp eq i16 %2296, 0
  br i1 %2297, label %2351, label %2298

2298:                                             ; preds = %2346, %2293
  %2299 = phi i16 [ %2347, %2346 ], [ %2296, %2293 ]
  %2300 = phi i32 [ %2348, %2346 ], [ 0, %2293 ]
  %2301 = getelementptr %struct.mxl5005s_state, ptr %2294, i32 0, i32 21, i32 %2300
  %2302 = load i16, ptr %2301, align 2
  %2303 = icmp eq i16 %2302, 57
  br i1 %2303, label %2304, label %2346

2304:                                             ; preds = %2298
  %2305 = getelementptr %struct.mxl5005s_state, ptr %2294, i32 0, i32 21, i32 %2300, i32 1
  %2306 = load i16, ptr %2305, align 2
  %2307 = icmp eq i16 %2306, 0
  br i1 %2307, label %2346, label %2308

2308:                                             ; preds = %2339, %2304
  %2309 = phi i32 [ %2340, %2339 ], [ 0, %2304 ]
  %2310 = getelementptr %struct.mxl5005s_state, ptr %2294, i32 0, i32 21, i32 %2300, i32 4, i32 %2309
  store i16 0, ptr %2310, align 2
  %2311 = getelementptr %struct.mxl5005s_state, ptr %2294, i32 0, i32 21, i32 %2300, i32 3, i32 %2309
  %2312 = load i16, ptr %2311, align 2
  %2313 = load ptr, ptr %3, align 4
  %2314 = getelementptr inbounds %struct.mxl5005s_state, ptr %2313, i32 0, i32 24
  %2315 = load i16, ptr %2314, align 4
  %2316 = zext i16 %2315 to i32
  %2317 = icmp eq i16 %2315, 0
  br i1 %2317, label %2339, label %2318

2318:                                             ; preds = %2308
  %2319 = getelementptr %struct.mxl5005s_state, ptr %2294, i32 0, i32 21, i32 %2300, i32 2, i32 %2309
  %2320 = load i16, ptr %2319, align 2
  %2321 = and i16 %2320, 255
  br label %2322

2322:                                             ; preds = %2336, %2318
  %2323 = phi i32 [ 0, %2318 ], [ %2337, %2336 ]
  %2324 = getelementptr %struct.mxl5005s_state, ptr %2313, i32 0, i32 25, i32 %2323
  %2325 = load i16, ptr %2324, align 2
  %2326 = icmp eq i16 %2325, %2321
  br i1 %2326, label %2327, label %2336

2327:                                             ; preds = %2322
  %2328 = and i16 %2312, 255
  %2329 = zext i16 %2328 to i32
  %2330 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2329
  %2331 = load i8, ptr %2330, align 1
  %2332 = zext i8 %2331 to i16
  %2333 = getelementptr %struct.mxl5005s_state, ptr %2313, i32 0, i32 25, i32 %2323, i32 1
  %2334 = load i16, ptr %2333, align 2
  %2335 = and i16 %2334, %2332
  store i16 %2335, ptr %2333, align 2
  br label %2339

2336:                                             ; preds = %2322
  %2337 = add nuw nsw i32 %2323, 1
  %2338 = icmp eq i32 %2337, %2316
  br i1 %2338, label %2339, label %2322

2339:                                             ; preds = %2336, %2327, %2308
  %2340 = add nuw nsw i32 %2309, 1
  %2341 = load i16, ptr %2305, align 2
  %2342 = zext i16 %2341 to i32
  %2343 = icmp ult i32 %2340, %2342
  br i1 %2343, label %2308, label %2344

2344:                                             ; preds = %2339
  %2345 = load i16, ptr %2295, align 2
  br label %2346

2346:                                             ; preds = %2344, %2304, %2298
  %2347 = phi i16 [ %2345, %2344 ], [ %2299, %2304 ], [ %2299, %2298 ]
  %2348 = add nuw nsw i32 %2300, 1
  %2349 = zext i16 %2347 to i32
  %2350 = icmp ult i32 %2348, %2349
  br i1 %2350, label %2298, label %2351

2351:                                             ; preds = %2346, %2293, %2227
  %2352 = load i32, ptr %40, align 4
  %2353 = add i32 %2352, -750000001
  %2354 = icmp ult i32 %2353, 50000000
  br i1 %2354, label %2355, label %2475

2355:                                             ; preds = %2351
  %2356 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 1) #12
  %2357 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 1, i16 noundef zeroext 2) #12
  %2358 = load ptr, ptr %3, align 4
  %2359 = getelementptr inbounds %struct.mxl5005s_state, ptr %2358, i32 0, i32 18
  %2360 = load i16, ptr %2359, align 4
  %2361 = icmp eq i16 %2360, 0
  br i1 %2361, label %2417, label %2362

2362:                                             ; preds = %2410, %2355
  %2363 = phi i16 [ %2411, %2410 ], [ %2360, %2355 ]
  %2364 = phi i32 [ %2412, %2410 ], [ 0, %2355 ]
  %2365 = getelementptr %struct.mxl5005s_state, ptr %2358, i32 0, i32 19, i32 %2364
  %2366 = load i16, ptr %2365, align 2
  %2367 = icmp eq i16 %2366, 57
  br i1 %2367, label %2368, label %2410

2368:                                             ; preds = %2362
  %2369 = getelementptr %struct.mxl5005s_state, ptr %2358, i32 0, i32 19, i32 %2364, i32 1
  %2370 = load i16, ptr %2369, align 2
  %2371 = icmp eq i16 %2370, 0
  br i1 %2371, label %2410, label %2372

2372:                                             ; preds = %2403, %2368
  %2373 = phi i32 [ %2404, %2403 ], [ 0, %2368 ]
  %2374 = getelementptr %struct.mxl5005s_state, ptr %2358, i32 0, i32 19, i32 %2364, i32 4, i32 %2373
  store i16 0, ptr %2374, align 2
  %2375 = getelementptr %struct.mxl5005s_state, ptr %2358, i32 0, i32 19, i32 %2364, i32 3, i32 %2373
  %2376 = load i16, ptr %2375, align 2
  %2377 = load ptr, ptr %3, align 4
  %2378 = getelementptr inbounds %struct.mxl5005s_state, ptr %2377, i32 0, i32 24
  %2379 = load i16, ptr %2378, align 4
  %2380 = zext i16 %2379 to i32
  %2381 = icmp eq i16 %2379, 0
  br i1 %2381, label %2403, label %2382

2382:                                             ; preds = %2372
  %2383 = getelementptr %struct.mxl5005s_state, ptr %2358, i32 0, i32 19, i32 %2364, i32 2, i32 %2373
  %2384 = load i16, ptr %2383, align 2
  %2385 = and i16 %2384, 255
  br label %2386

2386:                                             ; preds = %2400, %2382
  %2387 = phi i32 [ 0, %2382 ], [ %2401, %2400 ]
  %2388 = getelementptr %struct.mxl5005s_state, ptr %2377, i32 0, i32 25, i32 %2387
  %2389 = load i16, ptr %2388, align 2
  %2390 = icmp eq i16 %2389, %2385
  br i1 %2390, label %2391, label %2400

2391:                                             ; preds = %2386
  %2392 = and i16 %2376, 255
  %2393 = zext i16 %2392 to i32
  %2394 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2393
  %2395 = load i8, ptr %2394, align 1
  %2396 = zext i8 %2395 to i16
  %2397 = getelementptr %struct.mxl5005s_state, ptr %2377, i32 0, i32 25, i32 %2387, i32 1
  %2398 = load i16, ptr %2397, align 2
  %2399 = and i16 %2398, %2396
  store i16 %2399, ptr %2397, align 2
  br label %2403

2400:                                             ; preds = %2386
  %2401 = add nuw nsw i32 %2387, 1
  %2402 = icmp eq i32 %2401, %2380
  br i1 %2402, label %2403, label %2386

2403:                                             ; preds = %2400, %2391, %2372
  %2404 = add nuw nsw i32 %2373, 1
  %2405 = load i16, ptr %2369, align 2
  %2406 = zext i16 %2405 to i32
  %2407 = icmp ult i32 %2404, %2406
  br i1 %2407, label %2372, label %2408

2408:                                             ; preds = %2403
  %2409 = load i16, ptr %2359, align 4
  br label %2410

2410:                                             ; preds = %2408, %2368, %2362
  %2411 = phi i16 [ %2409, %2408 ], [ %2363, %2368 ], [ %2363, %2362 ]
  %2412 = add nuw nsw i32 %2364, 1
  %2413 = zext i16 %2411 to i32
  %2414 = icmp ult i32 %2412, %2413
  br i1 %2414, label %2362, label %2415

2415:                                             ; preds = %2410
  %2416 = load ptr, ptr %3, align 4
  br label %2417

2417:                                             ; preds = %2415, %2355
  %2418 = phi ptr [ %2416, %2415 ], [ %2358, %2355 ]
  %2419 = getelementptr inbounds %struct.mxl5005s_state, ptr %2418, i32 0, i32 20
  %2420 = load i16, ptr %2419, align 2
  %2421 = icmp eq i16 %2420, 0
  br i1 %2421, label %2475, label %2422

2422:                                             ; preds = %2470, %2417
  %2423 = phi i16 [ %2471, %2470 ], [ %2420, %2417 ]
  %2424 = phi i32 [ %2472, %2470 ], [ 0, %2417 ]
  %2425 = getelementptr %struct.mxl5005s_state, ptr %2418, i32 0, i32 21, i32 %2424
  %2426 = load i16, ptr %2425, align 2
  %2427 = icmp eq i16 %2426, 57
  br i1 %2427, label %2428, label %2470

2428:                                             ; preds = %2422
  %2429 = getelementptr %struct.mxl5005s_state, ptr %2418, i32 0, i32 21, i32 %2424, i32 1
  %2430 = load i16, ptr %2429, align 2
  %2431 = icmp eq i16 %2430, 0
  br i1 %2431, label %2470, label %2432

2432:                                             ; preds = %2463, %2428
  %2433 = phi i32 [ %2464, %2463 ], [ 0, %2428 ]
  %2434 = getelementptr %struct.mxl5005s_state, ptr %2418, i32 0, i32 21, i32 %2424, i32 4, i32 %2433
  store i16 0, ptr %2434, align 2
  %2435 = getelementptr %struct.mxl5005s_state, ptr %2418, i32 0, i32 21, i32 %2424, i32 3, i32 %2433
  %2436 = load i16, ptr %2435, align 2
  %2437 = load ptr, ptr %3, align 4
  %2438 = getelementptr inbounds %struct.mxl5005s_state, ptr %2437, i32 0, i32 24
  %2439 = load i16, ptr %2438, align 4
  %2440 = zext i16 %2439 to i32
  %2441 = icmp eq i16 %2439, 0
  br i1 %2441, label %2463, label %2442

2442:                                             ; preds = %2432
  %2443 = getelementptr %struct.mxl5005s_state, ptr %2418, i32 0, i32 21, i32 %2424, i32 2, i32 %2433
  %2444 = load i16, ptr %2443, align 2
  %2445 = and i16 %2444, 255
  br label %2446

2446:                                             ; preds = %2460, %2442
  %2447 = phi i32 [ 0, %2442 ], [ %2461, %2460 ]
  %2448 = getelementptr %struct.mxl5005s_state, ptr %2437, i32 0, i32 25, i32 %2447
  %2449 = load i16, ptr %2448, align 2
  %2450 = icmp eq i16 %2449, %2445
  br i1 %2450, label %2451, label %2460

2451:                                             ; preds = %2446
  %2452 = and i16 %2436, 255
  %2453 = zext i16 %2452 to i32
  %2454 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2453
  %2455 = load i8, ptr %2454, align 1
  %2456 = zext i8 %2455 to i16
  %2457 = getelementptr %struct.mxl5005s_state, ptr %2437, i32 0, i32 25, i32 %2447, i32 1
  %2458 = load i16, ptr %2457, align 2
  %2459 = and i16 %2458, %2456
  store i16 %2459, ptr %2457, align 2
  br label %2463

2460:                                             ; preds = %2446
  %2461 = add nuw nsw i32 %2447, 1
  %2462 = icmp eq i32 %2461, %2440
  br i1 %2462, label %2463, label %2446

2463:                                             ; preds = %2460, %2451, %2432
  %2464 = add nuw nsw i32 %2433, 1
  %2465 = load i16, ptr %2429, align 2
  %2466 = zext i16 %2465 to i32
  %2467 = icmp ult i32 %2464, %2466
  br i1 %2467, label %2432, label %2468

2468:                                             ; preds = %2463
  %2469 = load i16, ptr %2419, align 2
  br label %2470

2470:                                             ; preds = %2468, %2428, %2422
  %2471 = phi i16 [ %2469, %2468 ], [ %2423, %2428 ], [ %2423, %2422 ]
  %2472 = add nuw nsw i32 %2424, 1
  %2473 = zext i16 %2471 to i32
  %2474 = icmp ult i32 %2472, %2473
  br i1 %2474, label %2422, label %2475

2475:                                             ; preds = %2470, %2417, %2351
  %2476 = load i32, ptr %40, align 4
  %2477 = add i32 %2476, -800000001
  %2478 = icmp ult i32 %2477, 50000000
  br i1 %2478, label %2479, label %2485

2479:                                             ; preds = %2475
  %2480 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 10, i16 noundef zeroext 1) #12
  %2481 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 10, i16 noundef zeroext 2) #12
  %2482 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 57, i32 noundef 1, i16 noundef zeroext 1) #12
  %2483 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 57, i32 noundef 1, i16 noundef zeroext 2) #12
  %2484 = load i32, ptr %40, align 4
  br label %2485

2485:                                             ; preds = %2479, %2475
  %2486 = phi i32 [ %2484, %2479 ], [ %2476, %2475 ]
  %2487 = add i32 %2486, -850000001
  %2488 = icmp ult i32 %2487, 50000000
  br i1 %2488, label %2489, label %2495

2489:                                             ; preds = %2485
  %2490 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 10, i16 noundef zeroext 1) #12
  %2491 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 56, i32 noundef 10, i16 noundef zeroext 2) #12
  %2492 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 57, i32 noundef 1, i16 noundef zeroext 1) #12
  %2493 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 57, i32 noundef 1, i16 noundef zeroext 2) #12
  %2494 = load i32, ptr %40, align 4
  br label %2495

2495:                                             ; preds = %2489, %2485
  %2496 = phi i32 [ %2494, %2489 ], [ %2486, %2485 ]
  %2497 = add i32 %2496, -40000000
  %2498 = icmp ult i32 %2497, 2500001
  br i1 %2498, label %2499, label %2865

2499:                                             ; preds = %2495
  %2500 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 1) #12
  %2501 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 2) #12
  %2502 = load ptr, ptr %3, align 4
  %2503 = getelementptr inbounds %struct.mxl5005s_state, ptr %2502, i32 0, i32 18
  %2504 = load i16, ptr %2503, align 4
  %2505 = icmp eq i16 %2504, 0
  br i1 %2505, label %2561, label %2506

2506:                                             ; preds = %2554, %2499
  %2507 = phi i16 [ %2555, %2554 ], [ %2504, %2499 ]
  %2508 = phi i32 [ %2556, %2554 ], [ 0, %2499 ]
  %2509 = getelementptr %struct.mxl5005s_state, ptr %2502, i32 0, i32 19, i32 %2508
  %2510 = load i16, ptr %2509, align 2
  %2511 = icmp eq i16 %2510, 59
  br i1 %2511, label %2512, label %2554

2512:                                             ; preds = %2506
  %2513 = getelementptr %struct.mxl5005s_state, ptr %2502, i32 0, i32 19, i32 %2508, i32 1
  %2514 = load i16, ptr %2513, align 2
  %2515 = icmp eq i16 %2514, 0
  br i1 %2515, label %2554, label %2516

2516:                                             ; preds = %2547, %2512
  %2517 = phi i32 [ %2548, %2547 ], [ 0, %2512 ]
  %2518 = getelementptr %struct.mxl5005s_state, ptr %2502, i32 0, i32 19, i32 %2508, i32 4, i32 %2517
  store i16 0, ptr %2518, align 2
  %2519 = getelementptr %struct.mxl5005s_state, ptr %2502, i32 0, i32 19, i32 %2508, i32 3, i32 %2517
  %2520 = load i16, ptr %2519, align 2
  %2521 = load ptr, ptr %3, align 4
  %2522 = getelementptr inbounds %struct.mxl5005s_state, ptr %2521, i32 0, i32 24
  %2523 = load i16, ptr %2522, align 4
  %2524 = zext i16 %2523 to i32
  %2525 = icmp eq i16 %2523, 0
  br i1 %2525, label %2547, label %2526

2526:                                             ; preds = %2516
  %2527 = getelementptr %struct.mxl5005s_state, ptr %2502, i32 0, i32 19, i32 %2508, i32 2, i32 %2517
  %2528 = load i16, ptr %2527, align 2
  %2529 = and i16 %2528, 255
  br label %2530

2530:                                             ; preds = %2544, %2526
  %2531 = phi i32 [ 0, %2526 ], [ %2545, %2544 ]
  %2532 = getelementptr %struct.mxl5005s_state, ptr %2521, i32 0, i32 25, i32 %2531
  %2533 = load i16, ptr %2532, align 2
  %2534 = icmp eq i16 %2533, %2529
  br i1 %2534, label %2535, label %2544

2535:                                             ; preds = %2530
  %2536 = and i16 %2520, 255
  %2537 = zext i16 %2536 to i32
  %2538 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2537
  %2539 = load i8, ptr %2538, align 1
  %2540 = zext i8 %2539 to i16
  %2541 = getelementptr %struct.mxl5005s_state, ptr %2521, i32 0, i32 25, i32 %2531, i32 1
  %2542 = load i16, ptr %2541, align 2
  %2543 = and i16 %2542, %2540
  store i16 %2543, ptr %2541, align 2
  br label %2547

2544:                                             ; preds = %2530
  %2545 = add nuw nsw i32 %2531, 1
  %2546 = icmp eq i32 %2545, %2524
  br i1 %2546, label %2547, label %2530

2547:                                             ; preds = %2544, %2535, %2516
  %2548 = add nuw nsw i32 %2517, 1
  %2549 = load i16, ptr %2513, align 2
  %2550 = zext i16 %2549 to i32
  %2551 = icmp ult i32 %2548, %2550
  br i1 %2551, label %2516, label %2552

2552:                                             ; preds = %2547
  %2553 = load i16, ptr %2503, align 4
  br label %2554

2554:                                             ; preds = %2552, %2512, %2506
  %2555 = phi i16 [ %2553, %2552 ], [ %2507, %2512 ], [ %2507, %2506 ]
  %2556 = add nuw nsw i32 %2508, 1
  %2557 = zext i16 %2555 to i32
  %2558 = icmp ult i32 %2556, %2557
  br i1 %2558, label %2506, label %2559

2559:                                             ; preds = %2554
  %2560 = load ptr, ptr %3, align 4
  br label %2561

2561:                                             ; preds = %2559, %2499
  %2562 = phi ptr [ %2560, %2559 ], [ %2502, %2499 ]
  %2563 = getelementptr inbounds %struct.mxl5005s_state, ptr %2562, i32 0, i32 20
  %2564 = load i16, ptr %2563, align 2
  %2565 = icmp eq i16 %2564, 0
  br i1 %2565, label %2621, label %2566

2566:                                             ; preds = %2614, %2561
  %2567 = phi i16 [ %2615, %2614 ], [ %2564, %2561 ]
  %2568 = phi i32 [ %2616, %2614 ], [ 0, %2561 ]
  %2569 = getelementptr %struct.mxl5005s_state, ptr %2562, i32 0, i32 21, i32 %2568
  %2570 = load i16, ptr %2569, align 2
  %2571 = icmp eq i16 %2570, 59
  br i1 %2571, label %2572, label %2614

2572:                                             ; preds = %2566
  %2573 = getelementptr %struct.mxl5005s_state, ptr %2562, i32 0, i32 21, i32 %2568, i32 1
  %2574 = load i16, ptr %2573, align 2
  %2575 = icmp eq i16 %2574, 0
  br i1 %2575, label %2614, label %2576

2576:                                             ; preds = %2607, %2572
  %2577 = phi i32 [ %2608, %2607 ], [ 0, %2572 ]
  %2578 = getelementptr %struct.mxl5005s_state, ptr %2562, i32 0, i32 21, i32 %2568, i32 4, i32 %2577
  store i16 0, ptr %2578, align 2
  %2579 = getelementptr %struct.mxl5005s_state, ptr %2562, i32 0, i32 21, i32 %2568, i32 3, i32 %2577
  %2580 = load i16, ptr %2579, align 2
  %2581 = load ptr, ptr %3, align 4
  %2582 = getelementptr inbounds %struct.mxl5005s_state, ptr %2581, i32 0, i32 24
  %2583 = load i16, ptr %2582, align 4
  %2584 = zext i16 %2583 to i32
  %2585 = icmp eq i16 %2583, 0
  br i1 %2585, label %2607, label %2586

2586:                                             ; preds = %2576
  %2587 = getelementptr %struct.mxl5005s_state, ptr %2562, i32 0, i32 21, i32 %2568, i32 2, i32 %2577
  %2588 = load i16, ptr %2587, align 2
  %2589 = and i16 %2588, 255
  br label %2590

2590:                                             ; preds = %2604, %2586
  %2591 = phi i32 [ 0, %2586 ], [ %2605, %2604 ]
  %2592 = getelementptr %struct.mxl5005s_state, ptr %2581, i32 0, i32 25, i32 %2591
  %2593 = load i16, ptr %2592, align 2
  %2594 = icmp eq i16 %2593, %2589
  br i1 %2594, label %2595, label %2604

2595:                                             ; preds = %2590
  %2596 = and i16 %2580, 255
  %2597 = zext i16 %2596 to i32
  %2598 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2597
  %2599 = load i8, ptr %2598, align 1
  %2600 = zext i8 %2599 to i16
  %2601 = getelementptr %struct.mxl5005s_state, ptr %2581, i32 0, i32 25, i32 %2591, i32 1
  %2602 = load i16, ptr %2601, align 2
  %2603 = and i16 %2602, %2600
  store i16 %2603, ptr %2601, align 2
  br label %2607

2604:                                             ; preds = %2590
  %2605 = add nuw nsw i32 %2591, 1
  %2606 = icmp eq i32 %2605, %2584
  br i1 %2606, label %2607, label %2590

2607:                                             ; preds = %2604, %2595, %2576
  %2608 = add nuw nsw i32 %2577, 1
  %2609 = load i16, ptr %2573, align 2
  %2610 = zext i16 %2609 to i32
  %2611 = icmp ult i32 %2608, %2610
  br i1 %2611, label %2576, label %2612

2612:                                             ; preds = %2607
  %2613 = load i16, ptr %2563, align 2
  br label %2614

2614:                                             ; preds = %2612, %2572, %2566
  %2615 = phi i16 [ %2613, %2612 ], [ %2567, %2572 ], [ %2567, %2566 ]
  %2616 = add nuw nsw i32 %2568, 1
  %2617 = zext i16 %2615 to i32
  %2618 = icmp ult i32 %2616, %2617
  br i1 %2618, label %2566, label %2619

2619:                                             ; preds = %2614
  %2620 = load ptr, ptr %3, align 4
  br label %2621

2621:                                             ; preds = %2619, %2561
  %2622 = phi ptr [ %2620, %2619 ], [ %2562, %2561 ]
  %2623 = getelementptr inbounds %struct.mxl5005s_state, ptr %2622, i32 0, i32 18
  %2624 = load i16, ptr %2623, align 4
  %2625 = icmp eq i16 %2624, 0
  br i1 %2625, label %2681, label %2626

2626:                                             ; preds = %2674, %2621
  %2627 = phi i16 [ %2675, %2674 ], [ %2624, %2621 ]
  %2628 = phi i32 [ %2676, %2674 ], [ 0, %2621 ]
  %2629 = getelementptr %struct.mxl5005s_state, ptr %2622, i32 0, i32 19, i32 %2628
  %2630 = load i16, ptr %2629, align 2
  %2631 = icmp eq i16 %2630, 60
  br i1 %2631, label %2632, label %2674

2632:                                             ; preds = %2626
  %2633 = getelementptr %struct.mxl5005s_state, ptr %2622, i32 0, i32 19, i32 %2628, i32 1
  %2634 = load i16, ptr %2633, align 2
  %2635 = icmp eq i16 %2634, 0
  br i1 %2635, label %2674, label %2636

2636:                                             ; preds = %2667, %2632
  %2637 = phi i32 [ %2668, %2667 ], [ 0, %2632 ]
  %2638 = getelementptr %struct.mxl5005s_state, ptr %2622, i32 0, i32 19, i32 %2628, i32 4, i32 %2637
  store i16 0, ptr %2638, align 2
  %2639 = getelementptr %struct.mxl5005s_state, ptr %2622, i32 0, i32 19, i32 %2628, i32 3, i32 %2637
  %2640 = load i16, ptr %2639, align 2
  %2641 = load ptr, ptr %3, align 4
  %2642 = getelementptr inbounds %struct.mxl5005s_state, ptr %2641, i32 0, i32 24
  %2643 = load i16, ptr %2642, align 4
  %2644 = zext i16 %2643 to i32
  %2645 = icmp eq i16 %2643, 0
  br i1 %2645, label %2667, label %2646

2646:                                             ; preds = %2636
  %2647 = getelementptr %struct.mxl5005s_state, ptr %2622, i32 0, i32 19, i32 %2628, i32 2, i32 %2637
  %2648 = load i16, ptr %2647, align 2
  %2649 = and i16 %2648, 255
  br label %2650

2650:                                             ; preds = %2664, %2646
  %2651 = phi i32 [ 0, %2646 ], [ %2665, %2664 ]
  %2652 = getelementptr %struct.mxl5005s_state, ptr %2641, i32 0, i32 25, i32 %2651
  %2653 = load i16, ptr %2652, align 2
  %2654 = icmp eq i16 %2653, %2649
  br i1 %2654, label %2655, label %2664

2655:                                             ; preds = %2650
  %2656 = and i16 %2640, 255
  %2657 = zext i16 %2656 to i32
  %2658 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2657
  %2659 = load i8, ptr %2658, align 1
  %2660 = zext i8 %2659 to i16
  %2661 = getelementptr %struct.mxl5005s_state, ptr %2641, i32 0, i32 25, i32 %2651, i32 1
  %2662 = load i16, ptr %2661, align 2
  %2663 = and i16 %2662, %2660
  store i16 %2663, ptr %2661, align 2
  br label %2667

2664:                                             ; preds = %2650
  %2665 = add nuw nsw i32 %2651, 1
  %2666 = icmp eq i32 %2665, %2644
  br i1 %2666, label %2667, label %2650

2667:                                             ; preds = %2664, %2655, %2636
  %2668 = add nuw nsw i32 %2637, 1
  %2669 = load i16, ptr %2633, align 2
  %2670 = zext i16 %2669 to i32
  %2671 = icmp ult i32 %2668, %2670
  br i1 %2671, label %2636, label %2672

2672:                                             ; preds = %2667
  %2673 = load i16, ptr %2623, align 4
  br label %2674

2674:                                             ; preds = %2672, %2632, %2626
  %2675 = phi i16 [ %2673, %2672 ], [ %2627, %2632 ], [ %2627, %2626 ]
  %2676 = add nuw nsw i32 %2628, 1
  %2677 = zext i16 %2675 to i32
  %2678 = icmp ult i32 %2676, %2677
  br i1 %2678, label %2626, label %2679

2679:                                             ; preds = %2674
  %2680 = load ptr, ptr %3, align 4
  br label %2681

2681:                                             ; preds = %2679, %2621
  %2682 = phi ptr [ %2680, %2679 ], [ %2622, %2621 ]
  %2683 = getelementptr inbounds %struct.mxl5005s_state, ptr %2682, i32 0, i32 20
  %2684 = load i16, ptr %2683, align 2
  %2685 = icmp eq i16 %2684, 0
  br i1 %2685, label %2741, label %2686

2686:                                             ; preds = %2734, %2681
  %2687 = phi i16 [ %2735, %2734 ], [ %2684, %2681 ]
  %2688 = phi i32 [ %2736, %2734 ], [ 0, %2681 ]
  %2689 = getelementptr %struct.mxl5005s_state, ptr %2682, i32 0, i32 21, i32 %2688
  %2690 = load i16, ptr %2689, align 2
  %2691 = icmp eq i16 %2690, 60
  br i1 %2691, label %2692, label %2734

2692:                                             ; preds = %2686
  %2693 = getelementptr %struct.mxl5005s_state, ptr %2682, i32 0, i32 21, i32 %2688, i32 1
  %2694 = load i16, ptr %2693, align 2
  %2695 = icmp eq i16 %2694, 0
  br i1 %2695, label %2734, label %2696

2696:                                             ; preds = %2727, %2692
  %2697 = phi i32 [ %2728, %2727 ], [ 0, %2692 ]
  %2698 = getelementptr %struct.mxl5005s_state, ptr %2682, i32 0, i32 21, i32 %2688, i32 4, i32 %2697
  store i16 0, ptr %2698, align 2
  %2699 = getelementptr %struct.mxl5005s_state, ptr %2682, i32 0, i32 21, i32 %2688, i32 3, i32 %2697
  %2700 = load i16, ptr %2699, align 2
  %2701 = load ptr, ptr %3, align 4
  %2702 = getelementptr inbounds %struct.mxl5005s_state, ptr %2701, i32 0, i32 24
  %2703 = load i16, ptr %2702, align 4
  %2704 = zext i16 %2703 to i32
  %2705 = icmp eq i16 %2703, 0
  br i1 %2705, label %2727, label %2706

2706:                                             ; preds = %2696
  %2707 = getelementptr %struct.mxl5005s_state, ptr %2682, i32 0, i32 21, i32 %2688, i32 2, i32 %2697
  %2708 = load i16, ptr %2707, align 2
  %2709 = and i16 %2708, 255
  br label %2710

2710:                                             ; preds = %2724, %2706
  %2711 = phi i32 [ 0, %2706 ], [ %2725, %2724 ]
  %2712 = getelementptr %struct.mxl5005s_state, ptr %2701, i32 0, i32 25, i32 %2711
  %2713 = load i16, ptr %2712, align 2
  %2714 = icmp eq i16 %2713, %2709
  br i1 %2714, label %2715, label %2724

2715:                                             ; preds = %2710
  %2716 = and i16 %2700, 255
  %2717 = zext i16 %2716 to i32
  %2718 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2717
  %2719 = load i8, ptr %2718, align 1
  %2720 = zext i8 %2719 to i16
  %2721 = getelementptr %struct.mxl5005s_state, ptr %2701, i32 0, i32 25, i32 %2711, i32 1
  %2722 = load i16, ptr %2721, align 2
  %2723 = and i16 %2722, %2720
  store i16 %2723, ptr %2721, align 2
  br label %2727

2724:                                             ; preds = %2710
  %2725 = add nuw nsw i32 %2711, 1
  %2726 = icmp eq i32 %2725, %2704
  br i1 %2726, label %2727, label %2710

2727:                                             ; preds = %2724, %2715, %2696
  %2728 = add nuw nsw i32 %2697, 1
  %2729 = load i16, ptr %2693, align 2
  %2730 = zext i16 %2729 to i32
  %2731 = icmp ult i32 %2728, %2730
  br i1 %2731, label %2696, label %2732

2732:                                             ; preds = %2727
  %2733 = load i16, ptr %2683, align 2
  br label %2734

2734:                                             ; preds = %2732, %2692, %2686
  %2735 = phi i16 [ %2733, %2732 ], [ %2687, %2692 ], [ %2687, %2686 ]
  %2736 = add nuw nsw i32 %2688, 1
  %2737 = zext i16 %2735 to i32
  %2738 = icmp ult i32 %2736, %2737
  br i1 %2738, label %2686, label %2739

2739:                                             ; preds = %2734
  %2740 = load ptr, ptr %3, align 4
  br label %2741

2741:                                             ; preds = %2739, %2681
  %2742 = phi ptr [ %2740, %2739 ], [ %2682, %2681 ]
  %2743 = getelementptr inbounds %struct.mxl5005s_state, ptr %2742, i32 0, i32 18
  %2744 = load i16, ptr %2743, align 4
  %2745 = icmp eq i16 %2744, 0
  br i1 %2745, label %2801, label %2746

2746:                                             ; preds = %2794, %2741
  %2747 = phi i16 [ %2795, %2794 ], [ %2744, %2741 ]
  %2748 = phi i32 [ %2796, %2794 ], [ 0, %2741 ]
  %2749 = getelementptr %struct.mxl5005s_state, ptr %2742, i32 0, i32 19, i32 %2748
  %2750 = load i16, ptr %2749, align 2
  %2751 = icmp eq i16 %2750, 61
  br i1 %2751, label %2752, label %2794

2752:                                             ; preds = %2746
  %2753 = getelementptr %struct.mxl5005s_state, ptr %2742, i32 0, i32 19, i32 %2748, i32 1
  %2754 = load i16, ptr %2753, align 2
  %2755 = icmp eq i16 %2754, 0
  br i1 %2755, label %2794, label %2756

2756:                                             ; preds = %2787, %2752
  %2757 = phi i32 [ %2788, %2787 ], [ 0, %2752 ]
  %2758 = getelementptr %struct.mxl5005s_state, ptr %2742, i32 0, i32 19, i32 %2748, i32 4, i32 %2757
  store i16 0, ptr %2758, align 2
  %2759 = getelementptr %struct.mxl5005s_state, ptr %2742, i32 0, i32 19, i32 %2748, i32 3, i32 %2757
  %2760 = load i16, ptr %2759, align 2
  %2761 = load ptr, ptr %3, align 4
  %2762 = getelementptr inbounds %struct.mxl5005s_state, ptr %2761, i32 0, i32 24
  %2763 = load i16, ptr %2762, align 4
  %2764 = zext i16 %2763 to i32
  %2765 = icmp eq i16 %2763, 0
  br i1 %2765, label %2787, label %2766

2766:                                             ; preds = %2756
  %2767 = getelementptr %struct.mxl5005s_state, ptr %2742, i32 0, i32 19, i32 %2748, i32 2, i32 %2757
  %2768 = load i16, ptr %2767, align 2
  %2769 = and i16 %2768, 255
  br label %2770

2770:                                             ; preds = %2784, %2766
  %2771 = phi i32 [ 0, %2766 ], [ %2785, %2784 ]
  %2772 = getelementptr %struct.mxl5005s_state, ptr %2761, i32 0, i32 25, i32 %2771
  %2773 = load i16, ptr %2772, align 2
  %2774 = icmp eq i16 %2773, %2769
  br i1 %2774, label %2775, label %2784

2775:                                             ; preds = %2770
  %2776 = and i16 %2760, 255
  %2777 = zext i16 %2776 to i32
  %2778 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2777
  %2779 = load i8, ptr %2778, align 1
  %2780 = zext i8 %2779 to i16
  %2781 = getelementptr %struct.mxl5005s_state, ptr %2761, i32 0, i32 25, i32 %2771, i32 1
  %2782 = load i16, ptr %2781, align 2
  %2783 = and i16 %2782, %2780
  store i16 %2783, ptr %2781, align 2
  br label %2787

2784:                                             ; preds = %2770
  %2785 = add nuw nsw i32 %2771, 1
  %2786 = icmp eq i32 %2785, %2764
  br i1 %2786, label %2787, label %2770

2787:                                             ; preds = %2784, %2775, %2756
  %2788 = add nuw nsw i32 %2757, 1
  %2789 = load i16, ptr %2753, align 2
  %2790 = zext i16 %2789 to i32
  %2791 = icmp ult i32 %2788, %2790
  br i1 %2791, label %2756, label %2792

2792:                                             ; preds = %2787
  %2793 = load i16, ptr %2743, align 4
  br label %2794

2794:                                             ; preds = %2792, %2752, %2746
  %2795 = phi i16 [ %2793, %2792 ], [ %2747, %2752 ], [ %2747, %2746 ]
  %2796 = add nuw nsw i32 %2748, 1
  %2797 = zext i16 %2795 to i32
  %2798 = icmp ult i32 %2796, %2797
  br i1 %2798, label %2746, label %2799

2799:                                             ; preds = %2794
  %2800 = load ptr, ptr %3, align 4
  br label %2801

2801:                                             ; preds = %2799, %2741
  %2802 = phi ptr [ %2800, %2799 ], [ %2742, %2741 ]
  %2803 = getelementptr inbounds %struct.mxl5005s_state, ptr %2802, i32 0, i32 20
  %2804 = load i16, ptr %2803, align 2
  %2805 = icmp eq i16 %2804, 0
  br i1 %2805, label %2859, label %2806

2806:                                             ; preds = %2854, %2801
  %2807 = phi i16 [ %2855, %2854 ], [ %2804, %2801 ]
  %2808 = phi i32 [ %2856, %2854 ], [ 0, %2801 ]
  %2809 = getelementptr %struct.mxl5005s_state, ptr %2802, i32 0, i32 21, i32 %2808
  %2810 = load i16, ptr %2809, align 2
  %2811 = icmp eq i16 %2810, 61
  br i1 %2811, label %2812, label %2854

2812:                                             ; preds = %2806
  %2813 = getelementptr %struct.mxl5005s_state, ptr %2802, i32 0, i32 21, i32 %2808, i32 1
  %2814 = load i16, ptr %2813, align 2
  %2815 = icmp eq i16 %2814, 0
  br i1 %2815, label %2854, label %2816

2816:                                             ; preds = %2847, %2812
  %2817 = phi i32 [ %2848, %2847 ], [ 0, %2812 ]
  %2818 = getelementptr %struct.mxl5005s_state, ptr %2802, i32 0, i32 21, i32 %2808, i32 4, i32 %2817
  store i16 0, ptr %2818, align 2
  %2819 = getelementptr %struct.mxl5005s_state, ptr %2802, i32 0, i32 21, i32 %2808, i32 3, i32 %2817
  %2820 = load i16, ptr %2819, align 2
  %2821 = load ptr, ptr %3, align 4
  %2822 = getelementptr inbounds %struct.mxl5005s_state, ptr %2821, i32 0, i32 24
  %2823 = load i16, ptr %2822, align 4
  %2824 = zext i16 %2823 to i32
  %2825 = icmp eq i16 %2823, 0
  br i1 %2825, label %2847, label %2826

2826:                                             ; preds = %2816
  %2827 = getelementptr %struct.mxl5005s_state, ptr %2802, i32 0, i32 21, i32 %2808, i32 2, i32 %2817
  %2828 = load i16, ptr %2827, align 2
  %2829 = and i16 %2828, 255
  br label %2830

2830:                                             ; preds = %2844, %2826
  %2831 = phi i32 [ 0, %2826 ], [ %2845, %2844 ]
  %2832 = getelementptr %struct.mxl5005s_state, ptr %2821, i32 0, i32 25, i32 %2831
  %2833 = load i16, ptr %2832, align 2
  %2834 = icmp eq i16 %2833, %2829
  br i1 %2834, label %2835, label %2844

2835:                                             ; preds = %2830
  %2836 = and i16 %2820, 255
  %2837 = zext i16 %2836 to i32
  %2838 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2837
  %2839 = load i8, ptr %2838, align 1
  %2840 = zext i8 %2839 to i16
  %2841 = getelementptr %struct.mxl5005s_state, ptr %2821, i32 0, i32 25, i32 %2831, i32 1
  %2842 = load i16, ptr %2841, align 2
  %2843 = and i16 %2842, %2840
  store i16 %2843, ptr %2841, align 2
  br label %2847

2844:                                             ; preds = %2830
  %2845 = add nuw nsw i32 %2831, 1
  %2846 = icmp eq i32 %2845, %2824
  br i1 %2846, label %2847, label %2830

2847:                                             ; preds = %2844, %2835, %2816
  %2848 = add nuw nsw i32 %2817, 1
  %2849 = load i16, ptr %2813, align 2
  %2850 = zext i16 %2849 to i32
  %2851 = icmp ult i32 %2848, %2850
  br i1 %2851, label %2816, label %2852

2852:                                             ; preds = %2847
  %2853 = load i16, ptr %2803, align 2
  br label %2854

2854:                                             ; preds = %2852, %2812, %2806
  %2855 = phi i16 [ %2853, %2852 ], [ %2807, %2812 ], [ %2807, %2806 ]
  %2856 = add nuw nsw i32 %2808, 1
  %2857 = zext i16 %2855 to i32
  %2858 = icmp ult i32 %2856, %2857
  br i1 %2858, label %2806, label %2859

2859:                                             ; preds = %2854, %2801
  %2860 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %2861 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %2862 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 1) #12
  %2863 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 2) #12
  %2864 = load i32, ptr %40, align 4
  br label %2865

2865:                                             ; preds = %2859, %2495
  %2866 = phi i32 [ %2864, %2859 ], [ %2496, %2495 ]
  %2867 = phi i32 [ 64, %2859 ], [ 0, %2495 ]
  %2868 = phi i32 [ 42500000, %2859 ], [ 0, %2495 ]
  %2869 = phi i32 [ -28000000, %2859 ], [ 0, %2495 ]
  %2870 = add i32 %2866, -42500001
  %2871 = icmp ult i32 %2870, 13500000
  br i1 %2871, label %2872, label %3118

2872:                                             ; preds = %2865
  %2873 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 1) #12
  %2874 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 2) #12
  %2875 = load ptr, ptr %3, align 4
  %2876 = getelementptr inbounds %struct.mxl5005s_state, ptr %2875, i32 0, i32 18
  %2877 = load i16, ptr %2876, align 4
  %2878 = icmp eq i16 %2877, 0
  br i1 %2878, label %2934, label %2879

2879:                                             ; preds = %2927, %2872
  %2880 = phi i16 [ %2928, %2927 ], [ %2877, %2872 ]
  %2881 = phi i32 [ %2929, %2927 ], [ 0, %2872 ]
  %2882 = getelementptr %struct.mxl5005s_state, ptr %2875, i32 0, i32 19, i32 %2881
  %2883 = load i16, ptr %2882, align 2
  %2884 = icmp eq i16 %2883, 59
  br i1 %2884, label %2885, label %2927

2885:                                             ; preds = %2879
  %2886 = getelementptr %struct.mxl5005s_state, ptr %2875, i32 0, i32 19, i32 %2881, i32 1
  %2887 = load i16, ptr %2886, align 2
  %2888 = icmp eq i16 %2887, 0
  br i1 %2888, label %2927, label %2889

2889:                                             ; preds = %2920, %2885
  %2890 = phi i32 [ %2921, %2920 ], [ 0, %2885 ]
  %2891 = getelementptr %struct.mxl5005s_state, ptr %2875, i32 0, i32 19, i32 %2881, i32 4, i32 %2890
  store i16 0, ptr %2891, align 2
  %2892 = getelementptr %struct.mxl5005s_state, ptr %2875, i32 0, i32 19, i32 %2881, i32 3, i32 %2890
  %2893 = load i16, ptr %2892, align 2
  %2894 = load ptr, ptr %3, align 4
  %2895 = getelementptr inbounds %struct.mxl5005s_state, ptr %2894, i32 0, i32 24
  %2896 = load i16, ptr %2895, align 4
  %2897 = zext i16 %2896 to i32
  %2898 = icmp eq i16 %2896, 0
  br i1 %2898, label %2920, label %2899

2899:                                             ; preds = %2889
  %2900 = getelementptr %struct.mxl5005s_state, ptr %2875, i32 0, i32 19, i32 %2881, i32 2, i32 %2890
  %2901 = load i16, ptr %2900, align 2
  %2902 = and i16 %2901, 255
  br label %2903

2903:                                             ; preds = %2917, %2899
  %2904 = phi i32 [ 0, %2899 ], [ %2918, %2917 ]
  %2905 = getelementptr %struct.mxl5005s_state, ptr %2894, i32 0, i32 25, i32 %2904
  %2906 = load i16, ptr %2905, align 2
  %2907 = icmp eq i16 %2906, %2902
  br i1 %2907, label %2908, label %2917

2908:                                             ; preds = %2903
  %2909 = and i16 %2893, 255
  %2910 = zext i16 %2909 to i32
  %2911 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2910
  %2912 = load i8, ptr %2911, align 1
  %2913 = zext i8 %2912 to i16
  %2914 = getelementptr %struct.mxl5005s_state, ptr %2894, i32 0, i32 25, i32 %2904, i32 1
  %2915 = load i16, ptr %2914, align 2
  %2916 = and i16 %2915, %2913
  store i16 %2916, ptr %2914, align 2
  br label %2920

2917:                                             ; preds = %2903
  %2918 = add nuw nsw i32 %2904, 1
  %2919 = icmp eq i32 %2918, %2897
  br i1 %2919, label %2920, label %2903

2920:                                             ; preds = %2917, %2908, %2889
  %2921 = add nuw nsw i32 %2890, 1
  %2922 = load i16, ptr %2886, align 2
  %2923 = zext i16 %2922 to i32
  %2924 = icmp ult i32 %2921, %2923
  br i1 %2924, label %2889, label %2925

2925:                                             ; preds = %2920
  %2926 = load i16, ptr %2876, align 4
  br label %2927

2927:                                             ; preds = %2925, %2885, %2879
  %2928 = phi i16 [ %2926, %2925 ], [ %2880, %2885 ], [ %2880, %2879 ]
  %2929 = add nuw nsw i32 %2881, 1
  %2930 = zext i16 %2928 to i32
  %2931 = icmp ult i32 %2929, %2930
  br i1 %2931, label %2879, label %2932

2932:                                             ; preds = %2927
  %2933 = load ptr, ptr %3, align 4
  br label %2934

2934:                                             ; preds = %2932, %2872
  %2935 = phi ptr [ %2933, %2932 ], [ %2875, %2872 ]
  %2936 = getelementptr inbounds %struct.mxl5005s_state, ptr %2935, i32 0, i32 20
  %2937 = load i16, ptr %2936, align 2
  %2938 = icmp eq i16 %2937, 0
  br i1 %2938, label %2992, label %2939

2939:                                             ; preds = %2987, %2934
  %2940 = phi i16 [ %2988, %2987 ], [ %2937, %2934 ]
  %2941 = phi i32 [ %2989, %2987 ], [ 0, %2934 ]
  %2942 = getelementptr %struct.mxl5005s_state, ptr %2935, i32 0, i32 21, i32 %2941
  %2943 = load i16, ptr %2942, align 2
  %2944 = icmp eq i16 %2943, 59
  br i1 %2944, label %2945, label %2987

2945:                                             ; preds = %2939
  %2946 = getelementptr %struct.mxl5005s_state, ptr %2935, i32 0, i32 21, i32 %2941, i32 1
  %2947 = load i16, ptr %2946, align 2
  %2948 = icmp eq i16 %2947, 0
  br i1 %2948, label %2987, label %2949

2949:                                             ; preds = %2980, %2945
  %2950 = phi i32 [ %2981, %2980 ], [ 0, %2945 ]
  %2951 = getelementptr %struct.mxl5005s_state, ptr %2935, i32 0, i32 21, i32 %2941, i32 4, i32 %2950
  store i16 0, ptr %2951, align 2
  %2952 = getelementptr %struct.mxl5005s_state, ptr %2935, i32 0, i32 21, i32 %2941, i32 3, i32 %2950
  %2953 = load i16, ptr %2952, align 2
  %2954 = load ptr, ptr %3, align 4
  %2955 = getelementptr inbounds %struct.mxl5005s_state, ptr %2954, i32 0, i32 24
  %2956 = load i16, ptr %2955, align 4
  %2957 = zext i16 %2956 to i32
  %2958 = icmp eq i16 %2956, 0
  br i1 %2958, label %2980, label %2959

2959:                                             ; preds = %2949
  %2960 = getelementptr %struct.mxl5005s_state, ptr %2935, i32 0, i32 21, i32 %2941, i32 2, i32 %2950
  %2961 = load i16, ptr %2960, align 2
  %2962 = and i16 %2961, 255
  br label %2963

2963:                                             ; preds = %2977, %2959
  %2964 = phi i32 [ 0, %2959 ], [ %2978, %2977 ]
  %2965 = getelementptr %struct.mxl5005s_state, ptr %2954, i32 0, i32 25, i32 %2964
  %2966 = load i16, ptr %2965, align 2
  %2967 = icmp eq i16 %2966, %2962
  br i1 %2967, label %2968, label %2977

2968:                                             ; preds = %2963
  %2969 = and i16 %2953, 255
  %2970 = zext i16 %2969 to i32
  %2971 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %2970
  %2972 = load i8, ptr %2971, align 1
  %2973 = zext i8 %2972 to i16
  %2974 = getelementptr %struct.mxl5005s_state, ptr %2954, i32 0, i32 25, i32 %2964, i32 1
  %2975 = load i16, ptr %2974, align 2
  %2976 = and i16 %2975, %2973
  store i16 %2976, ptr %2974, align 2
  br label %2980

2977:                                             ; preds = %2963
  %2978 = add nuw nsw i32 %2964, 1
  %2979 = icmp eq i32 %2978, %2957
  br i1 %2979, label %2980, label %2963

2980:                                             ; preds = %2977, %2968, %2949
  %2981 = add nuw nsw i32 %2950, 1
  %2982 = load i16, ptr %2946, align 2
  %2983 = zext i16 %2982 to i32
  %2984 = icmp ult i32 %2981, %2983
  br i1 %2984, label %2949, label %2985

2985:                                             ; preds = %2980
  %2986 = load i16, ptr %2936, align 2
  br label %2987

2987:                                             ; preds = %2985, %2945, %2939
  %2988 = phi i16 [ %2986, %2985 ], [ %2940, %2945 ], [ %2940, %2939 ]
  %2989 = add nuw nsw i32 %2941, 1
  %2990 = zext i16 %2988 to i32
  %2991 = icmp ult i32 %2989, %2990
  br i1 %2991, label %2939, label %2992

2992:                                             ; preds = %2987, %2934
  %2993 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 1) #12
  %2994 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 2) #12
  %2995 = load ptr, ptr %3, align 4
  %2996 = getelementptr inbounds %struct.mxl5005s_state, ptr %2995, i32 0, i32 18
  %2997 = load i16, ptr %2996, align 4
  %2998 = icmp eq i16 %2997, 0
  br i1 %2998, label %3054, label %2999

2999:                                             ; preds = %3047, %2992
  %3000 = phi i16 [ %3048, %3047 ], [ %2997, %2992 ]
  %3001 = phi i32 [ %3049, %3047 ], [ 0, %2992 ]
  %3002 = getelementptr %struct.mxl5005s_state, ptr %2995, i32 0, i32 19, i32 %3001
  %3003 = load i16, ptr %3002, align 2
  %3004 = icmp eq i16 %3003, 61
  br i1 %3004, label %3005, label %3047

3005:                                             ; preds = %2999
  %3006 = getelementptr %struct.mxl5005s_state, ptr %2995, i32 0, i32 19, i32 %3001, i32 1
  %3007 = load i16, ptr %3006, align 2
  %3008 = icmp eq i16 %3007, 0
  br i1 %3008, label %3047, label %3009

3009:                                             ; preds = %3040, %3005
  %3010 = phi i32 [ %3041, %3040 ], [ 0, %3005 ]
  %3011 = getelementptr %struct.mxl5005s_state, ptr %2995, i32 0, i32 19, i32 %3001, i32 4, i32 %3010
  store i16 0, ptr %3011, align 2
  %3012 = getelementptr %struct.mxl5005s_state, ptr %2995, i32 0, i32 19, i32 %3001, i32 3, i32 %3010
  %3013 = load i16, ptr %3012, align 2
  %3014 = load ptr, ptr %3, align 4
  %3015 = getelementptr inbounds %struct.mxl5005s_state, ptr %3014, i32 0, i32 24
  %3016 = load i16, ptr %3015, align 4
  %3017 = zext i16 %3016 to i32
  %3018 = icmp eq i16 %3016, 0
  br i1 %3018, label %3040, label %3019

3019:                                             ; preds = %3009
  %3020 = getelementptr %struct.mxl5005s_state, ptr %2995, i32 0, i32 19, i32 %3001, i32 2, i32 %3010
  %3021 = load i16, ptr %3020, align 2
  %3022 = and i16 %3021, 255
  br label %3023

3023:                                             ; preds = %3037, %3019
  %3024 = phi i32 [ 0, %3019 ], [ %3038, %3037 ]
  %3025 = getelementptr %struct.mxl5005s_state, ptr %3014, i32 0, i32 25, i32 %3024
  %3026 = load i16, ptr %3025, align 2
  %3027 = icmp eq i16 %3026, %3022
  br i1 %3027, label %3028, label %3037

3028:                                             ; preds = %3023
  %3029 = and i16 %3013, 255
  %3030 = zext i16 %3029 to i32
  %3031 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3030
  %3032 = load i8, ptr %3031, align 1
  %3033 = zext i8 %3032 to i16
  %3034 = getelementptr %struct.mxl5005s_state, ptr %3014, i32 0, i32 25, i32 %3024, i32 1
  %3035 = load i16, ptr %3034, align 2
  %3036 = and i16 %3035, %3033
  store i16 %3036, ptr %3034, align 2
  br label %3040

3037:                                             ; preds = %3023
  %3038 = add nuw nsw i32 %3024, 1
  %3039 = icmp eq i32 %3038, %3017
  br i1 %3039, label %3040, label %3023

3040:                                             ; preds = %3037, %3028, %3009
  %3041 = add nuw nsw i32 %3010, 1
  %3042 = load i16, ptr %3006, align 2
  %3043 = zext i16 %3042 to i32
  %3044 = icmp ult i32 %3041, %3043
  br i1 %3044, label %3009, label %3045

3045:                                             ; preds = %3040
  %3046 = load i16, ptr %2996, align 4
  br label %3047

3047:                                             ; preds = %3045, %3005, %2999
  %3048 = phi i16 [ %3046, %3045 ], [ %3000, %3005 ], [ %3000, %2999 ]
  %3049 = add nuw nsw i32 %3001, 1
  %3050 = zext i16 %3048 to i32
  %3051 = icmp ult i32 %3049, %3050
  br i1 %3051, label %2999, label %3052

3052:                                             ; preds = %3047
  %3053 = load ptr, ptr %3, align 4
  br label %3054

3054:                                             ; preds = %3052, %2992
  %3055 = phi ptr [ %3053, %3052 ], [ %2995, %2992 ]
  %3056 = getelementptr inbounds %struct.mxl5005s_state, ptr %3055, i32 0, i32 20
  %3057 = load i16, ptr %3056, align 2
  %3058 = icmp eq i16 %3057, 0
  br i1 %3058, label %3112, label %3059

3059:                                             ; preds = %3107, %3054
  %3060 = phi i16 [ %3108, %3107 ], [ %3057, %3054 ]
  %3061 = phi i32 [ %3109, %3107 ], [ 0, %3054 ]
  %3062 = getelementptr %struct.mxl5005s_state, ptr %3055, i32 0, i32 21, i32 %3061
  %3063 = load i16, ptr %3062, align 2
  %3064 = icmp eq i16 %3063, 61
  br i1 %3064, label %3065, label %3107

3065:                                             ; preds = %3059
  %3066 = getelementptr %struct.mxl5005s_state, ptr %3055, i32 0, i32 21, i32 %3061, i32 1
  %3067 = load i16, ptr %3066, align 2
  %3068 = icmp eq i16 %3067, 0
  br i1 %3068, label %3107, label %3069

3069:                                             ; preds = %3100, %3065
  %3070 = phi i32 [ %3101, %3100 ], [ 0, %3065 ]
  %3071 = getelementptr %struct.mxl5005s_state, ptr %3055, i32 0, i32 21, i32 %3061, i32 4, i32 %3070
  store i16 0, ptr %3071, align 2
  %3072 = getelementptr %struct.mxl5005s_state, ptr %3055, i32 0, i32 21, i32 %3061, i32 3, i32 %3070
  %3073 = load i16, ptr %3072, align 2
  %3074 = load ptr, ptr %3, align 4
  %3075 = getelementptr inbounds %struct.mxl5005s_state, ptr %3074, i32 0, i32 24
  %3076 = load i16, ptr %3075, align 4
  %3077 = zext i16 %3076 to i32
  %3078 = icmp eq i16 %3076, 0
  br i1 %3078, label %3100, label %3079

3079:                                             ; preds = %3069
  %3080 = getelementptr %struct.mxl5005s_state, ptr %3055, i32 0, i32 21, i32 %3061, i32 2, i32 %3070
  %3081 = load i16, ptr %3080, align 2
  %3082 = and i16 %3081, 255
  br label %3083

3083:                                             ; preds = %3097, %3079
  %3084 = phi i32 [ 0, %3079 ], [ %3098, %3097 ]
  %3085 = getelementptr %struct.mxl5005s_state, ptr %3074, i32 0, i32 25, i32 %3084
  %3086 = load i16, ptr %3085, align 2
  %3087 = icmp eq i16 %3086, %3082
  br i1 %3087, label %3088, label %3097

3088:                                             ; preds = %3083
  %3089 = and i16 %3073, 255
  %3090 = zext i16 %3089 to i32
  %3091 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3090
  %3092 = load i8, ptr %3091, align 1
  %3093 = zext i8 %3092 to i16
  %3094 = getelementptr %struct.mxl5005s_state, ptr %3074, i32 0, i32 25, i32 %3084, i32 1
  %3095 = load i16, ptr %3094, align 2
  %3096 = and i16 %3095, %3093
  store i16 %3096, ptr %3094, align 2
  br label %3100

3097:                                             ; preds = %3083
  %3098 = add nuw nsw i32 %3084, 1
  %3099 = icmp eq i32 %3098, %3077
  br i1 %3099, label %3100, label %3083

3100:                                             ; preds = %3097, %3088, %3069
  %3101 = add nuw nsw i32 %3070, 1
  %3102 = load i16, ptr %3066, align 2
  %3103 = zext i16 %3102 to i32
  %3104 = icmp ult i32 %3101, %3103
  br i1 %3104, label %3069, label %3105

3105:                                             ; preds = %3100
  %3106 = load i16, ptr %3056, align 2
  br label %3107

3107:                                             ; preds = %3105, %3065, %3059
  %3108 = phi i16 [ %3106, %3105 ], [ %3060, %3065 ], [ %3060, %3059 ]
  %3109 = add nuw nsw i32 %3061, 1
  %3110 = zext i16 %3108 to i32
  %3111 = icmp ult i32 %3109, %3110
  br i1 %3111, label %3059, label %3112

3112:                                             ; preds = %3107, %3054
  %3113 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %3114 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %3115 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 1) #12
  %3116 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 2) #12
  %3117 = load i32, ptr %40, align 4
  br label %3118

3118:                                             ; preds = %3112, %2865
  %3119 = phi i32 [ %3117, %3112 ], [ %2866, %2865 ]
  %3120 = phi i32 [ 64, %3112 ], [ %2867, %2865 ]
  %3121 = phi i32 [ 56000000, %3112 ], [ %2868, %2865 ]
  %3122 = phi i32 [ -42500000, %3112 ], [ %2869, %2865 ]
  %3123 = add i32 %3119, -56000001
  %3124 = icmp ult i32 %3123, 29000000
  br i1 %3124, label %3125, label %3489

3125:                                             ; preds = %3118
  %3126 = load ptr, ptr %3, align 4
  %3127 = getelementptr inbounds %struct.mxl5005s_state, ptr %3126, i32 0, i32 18
  %3128 = load i16, ptr %3127, align 4
  %3129 = icmp eq i16 %3128, 0
  br i1 %3129, label %3185, label %3130

3130:                                             ; preds = %3178, %3125
  %3131 = phi i16 [ %3179, %3178 ], [ %3128, %3125 ]
  %3132 = phi i32 [ %3180, %3178 ], [ 0, %3125 ]
  %3133 = getelementptr %struct.mxl5005s_state, ptr %3126, i32 0, i32 19, i32 %3132
  %3134 = load i16, ptr %3133, align 2
  %3135 = icmp eq i16 %3134, 58
  br i1 %3135, label %3136, label %3178

3136:                                             ; preds = %3130
  %3137 = getelementptr %struct.mxl5005s_state, ptr %3126, i32 0, i32 19, i32 %3132, i32 1
  %3138 = load i16, ptr %3137, align 2
  %3139 = icmp eq i16 %3138, 0
  br i1 %3139, label %3178, label %3140

3140:                                             ; preds = %3171, %3136
  %3141 = phi i32 [ %3172, %3171 ], [ 0, %3136 ]
  %3142 = getelementptr %struct.mxl5005s_state, ptr %3126, i32 0, i32 19, i32 %3132, i32 4, i32 %3141
  store i16 0, ptr %3142, align 2
  %3143 = getelementptr %struct.mxl5005s_state, ptr %3126, i32 0, i32 19, i32 %3132, i32 3, i32 %3141
  %3144 = load i16, ptr %3143, align 2
  %3145 = load ptr, ptr %3, align 4
  %3146 = getelementptr inbounds %struct.mxl5005s_state, ptr %3145, i32 0, i32 24
  %3147 = load i16, ptr %3146, align 4
  %3148 = zext i16 %3147 to i32
  %3149 = icmp eq i16 %3147, 0
  br i1 %3149, label %3171, label %3150

3150:                                             ; preds = %3140
  %3151 = getelementptr %struct.mxl5005s_state, ptr %3126, i32 0, i32 19, i32 %3132, i32 2, i32 %3141
  %3152 = load i16, ptr %3151, align 2
  %3153 = and i16 %3152, 255
  br label %3154

3154:                                             ; preds = %3168, %3150
  %3155 = phi i32 [ 0, %3150 ], [ %3169, %3168 ]
  %3156 = getelementptr %struct.mxl5005s_state, ptr %3145, i32 0, i32 25, i32 %3155
  %3157 = load i16, ptr %3156, align 2
  %3158 = icmp eq i16 %3157, %3153
  br i1 %3158, label %3159, label %3168

3159:                                             ; preds = %3154
  %3160 = and i16 %3144, 255
  %3161 = zext i16 %3160 to i32
  %3162 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3161
  %3163 = load i8, ptr %3162, align 1
  %3164 = zext i8 %3163 to i16
  %3165 = getelementptr %struct.mxl5005s_state, ptr %3145, i32 0, i32 25, i32 %3155, i32 1
  %3166 = load i16, ptr %3165, align 2
  %3167 = and i16 %3166, %3164
  store i16 %3167, ptr %3165, align 2
  br label %3171

3168:                                             ; preds = %3154
  %3169 = add nuw nsw i32 %3155, 1
  %3170 = icmp eq i32 %3169, %3148
  br i1 %3170, label %3171, label %3154

3171:                                             ; preds = %3168, %3159, %3140
  %3172 = add nuw nsw i32 %3141, 1
  %3173 = load i16, ptr %3137, align 2
  %3174 = zext i16 %3173 to i32
  %3175 = icmp ult i32 %3172, %3174
  br i1 %3175, label %3140, label %3176

3176:                                             ; preds = %3171
  %3177 = load i16, ptr %3127, align 4
  br label %3178

3178:                                             ; preds = %3176, %3136, %3130
  %3179 = phi i16 [ %3177, %3176 ], [ %3131, %3136 ], [ %3131, %3130 ]
  %3180 = add nuw nsw i32 %3132, 1
  %3181 = zext i16 %3179 to i32
  %3182 = icmp ult i32 %3180, %3181
  br i1 %3182, label %3130, label %3183

3183:                                             ; preds = %3178
  %3184 = load ptr, ptr %3, align 4
  br label %3185

3185:                                             ; preds = %3183, %3125
  %3186 = phi ptr [ %3184, %3183 ], [ %3126, %3125 ]
  %3187 = getelementptr inbounds %struct.mxl5005s_state, ptr %3186, i32 0, i32 20
  %3188 = load i16, ptr %3187, align 2
  %3189 = icmp eq i16 %3188, 0
  br i1 %3189, label %3243, label %3190

3190:                                             ; preds = %3238, %3185
  %3191 = phi i16 [ %3239, %3238 ], [ %3188, %3185 ]
  %3192 = phi i32 [ %3240, %3238 ], [ 0, %3185 ]
  %3193 = getelementptr %struct.mxl5005s_state, ptr %3186, i32 0, i32 21, i32 %3192
  %3194 = load i16, ptr %3193, align 2
  %3195 = icmp eq i16 %3194, 58
  br i1 %3195, label %3196, label %3238

3196:                                             ; preds = %3190
  %3197 = getelementptr %struct.mxl5005s_state, ptr %3186, i32 0, i32 21, i32 %3192, i32 1
  %3198 = load i16, ptr %3197, align 2
  %3199 = icmp eq i16 %3198, 0
  br i1 %3199, label %3238, label %3200

3200:                                             ; preds = %3231, %3196
  %3201 = phi i32 [ %3232, %3231 ], [ 0, %3196 ]
  %3202 = getelementptr %struct.mxl5005s_state, ptr %3186, i32 0, i32 21, i32 %3192, i32 4, i32 %3201
  store i16 0, ptr %3202, align 2
  %3203 = getelementptr %struct.mxl5005s_state, ptr %3186, i32 0, i32 21, i32 %3192, i32 3, i32 %3201
  %3204 = load i16, ptr %3203, align 2
  %3205 = load ptr, ptr %3, align 4
  %3206 = getelementptr inbounds %struct.mxl5005s_state, ptr %3205, i32 0, i32 24
  %3207 = load i16, ptr %3206, align 4
  %3208 = zext i16 %3207 to i32
  %3209 = icmp eq i16 %3207, 0
  br i1 %3209, label %3231, label %3210

3210:                                             ; preds = %3200
  %3211 = getelementptr %struct.mxl5005s_state, ptr %3186, i32 0, i32 21, i32 %3192, i32 2, i32 %3201
  %3212 = load i16, ptr %3211, align 2
  %3213 = and i16 %3212, 255
  br label %3214

3214:                                             ; preds = %3228, %3210
  %3215 = phi i32 [ 0, %3210 ], [ %3229, %3228 ]
  %3216 = getelementptr %struct.mxl5005s_state, ptr %3205, i32 0, i32 25, i32 %3215
  %3217 = load i16, ptr %3216, align 2
  %3218 = icmp eq i16 %3217, %3213
  br i1 %3218, label %3219, label %3228

3219:                                             ; preds = %3214
  %3220 = and i16 %3204, 255
  %3221 = zext i16 %3220 to i32
  %3222 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3221
  %3223 = load i8, ptr %3222, align 1
  %3224 = zext i8 %3223 to i16
  %3225 = getelementptr %struct.mxl5005s_state, ptr %3205, i32 0, i32 25, i32 %3215, i32 1
  %3226 = load i16, ptr %3225, align 2
  %3227 = and i16 %3226, %3224
  store i16 %3227, ptr %3225, align 2
  br label %3231

3228:                                             ; preds = %3214
  %3229 = add nuw nsw i32 %3215, 1
  %3230 = icmp eq i32 %3229, %3208
  br i1 %3230, label %3231, label %3214

3231:                                             ; preds = %3228, %3219, %3200
  %3232 = add nuw nsw i32 %3201, 1
  %3233 = load i16, ptr %3197, align 2
  %3234 = zext i16 %3233 to i32
  %3235 = icmp ult i32 %3232, %3234
  br i1 %3235, label %3200, label %3236

3236:                                             ; preds = %3231
  %3237 = load i16, ptr %3187, align 2
  br label %3238

3238:                                             ; preds = %3236, %3196, %3190
  %3239 = phi i16 [ %3237, %3236 ], [ %3191, %3196 ], [ %3191, %3190 ]
  %3240 = add nuw nsw i32 %3192, 1
  %3241 = zext i16 %3239 to i32
  %3242 = icmp ult i32 %3240, %3241
  br i1 %3242, label %3190, label %3243

3243:                                             ; preds = %3238, %3185
  %3244 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 1) #12
  %3245 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 2) #12
  %3246 = load ptr, ptr %3, align 4
  %3247 = getelementptr inbounds %struct.mxl5005s_state, ptr %3246, i32 0, i32 18
  %3248 = load i16, ptr %3247, align 4
  %3249 = icmp eq i16 %3248, 0
  br i1 %3249, label %3305, label %3250

3250:                                             ; preds = %3298, %3243
  %3251 = phi i16 [ %3299, %3298 ], [ %3248, %3243 ]
  %3252 = phi i32 [ %3300, %3298 ], [ 0, %3243 ]
  %3253 = getelementptr %struct.mxl5005s_state, ptr %3246, i32 0, i32 19, i32 %3252
  %3254 = load i16, ptr %3253, align 2
  %3255 = icmp eq i16 %3254, 60
  br i1 %3255, label %3256, label %3298

3256:                                             ; preds = %3250
  %3257 = getelementptr %struct.mxl5005s_state, ptr %3246, i32 0, i32 19, i32 %3252, i32 1
  %3258 = load i16, ptr %3257, align 2
  %3259 = icmp eq i16 %3258, 0
  br i1 %3259, label %3298, label %3260

3260:                                             ; preds = %3291, %3256
  %3261 = phi i32 [ %3292, %3291 ], [ 0, %3256 ]
  %3262 = getelementptr %struct.mxl5005s_state, ptr %3246, i32 0, i32 19, i32 %3252, i32 4, i32 %3261
  store i16 0, ptr %3262, align 2
  %3263 = getelementptr %struct.mxl5005s_state, ptr %3246, i32 0, i32 19, i32 %3252, i32 3, i32 %3261
  %3264 = load i16, ptr %3263, align 2
  %3265 = load ptr, ptr %3, align 4
  %3266 = getelementptr inbounds %struct.mxl5005s_state, ptr %3265, i32 0, i32 24
  %3267 = load i16, ptr %3266, align 4
  %3268 = zext i16 %3267 to i32
  %3269 = icmp eq i16 %3267, 0
  br i1 %3269, label %3291, label %3270

3270:                                             ; preds = %3260
  %3271 = getelementptr %struct.mxl5005s_state, ptr %3246, i32 0, i32 19, i32 %3252, i32 2, i32 %3261
  %3272 = load i16, ptr %3271, align 2
  %3273 = and i16 %3272, 255
  br label %3274

3274:                                             ; preds = %3288, %3270
  %3275 = phi i32 [ 0, %3270 ], [ %3289, %3288 ]
  %3276 = getelementptr %struct.mxl5005s_state, ptr %3265, i32 0, i32 25, i32 %3275
  %3277 = load i16, ptr %3276, align 2
  %3278 = icmp eq i16 %3277, %3273
  br i1 %3278, label %3279, label %3288

3279:                                             ; preds = %3274
  %3280 = and i16 %3264, 255
  %3281 = zext i16 %3280 to i32
  %3282 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3281
  %3283 = load i8, ptr %3282, align 1
  %3284 = zext i8 %3283 to i16
  %3285 = getelementptr %struct.mxl5005s_state, ptr %3265, i32 0, i32 25, i32 %3275, i32 1
  %3286 = load i16, ptr %3285, align 2
  %3287 = and i16 %3286, %3284
  store i16 %3287, ptr %3285, align 2
  br label %3291

3288:                                             ; preds = %3274
  %3289 = add nuw nsw i32 %3275, 1
  %3290 = icmp eq i32 %3289, %3268
  br i1 %3290, label %3291, label %3274

3291:                                             ; preds = %3288, %3279, %3260
  %3292 = add nuw nsw i32 %3261, 1
  %3293 = load i16, ptr %3257, align 2
  %3294 = zext i16 %3293 to i32
  %3295 = icmp ult i32 %3292, %3294
  br i1 %3295, label %3260, label %3296

3296:                                             ; preds = %3291
  %3297 = load i16, ptr %3247, align 4
  br label %3298

3298:                                             ; preds = %3296, %3256, %3250
  %3299 = phi i16 [ %3297, %3296 ], [ %3251, %3256 ], [ %3251, %3250 ]
  %3300 = add nuw nsw i32 %3252, 1
  %3301 = zext i16 %3299 to i32
  %3302 = icmp ult i32 %3300, %3301
  br i1 %3302, label %3250, label %3303

3303:                                             ; preds = %3298
  %3304 = load ptr, ptr %3, align 4
  br label %3305

3305:                                             ; preds = %3303, %3243
  %3306 = phi ptr [ %3304, %3303 ], [ %3246, %3243 ]
  %3307 = getelementptr inbounds %struct.mxl5005s_state, ptr %3306, i32 0, i32 20
  %3308 = load i16, ptr %3307, align 2
  %3309 = icmp eq i16 %3308, 0
  br i1 %3309, label %3365, label %3310

3310:                                             ; preds = %3358, %3305
  %3311 = phi i16 [ %3359, %3358 ], [ %3308, %3305 ]
  %3312 = phi i32 [ %3360, %3358 ], [ 0, %3305 ]
  %3313 = getelementptr %struct.mxl5005s_state, ptr %3306, i32 0, i32 21, i32 %3312
  %3314 = load i16, ptr %3313, align 2
  %3315 = icmp eq i16 %3314, 60
  br i1 %3315, label %3316, label %3358

3316:                                             ; preds = %3310
  %3317 = getelementptr %struct.mxl5005s_state, ptr %3306, i32 0, i32 21, i32 %3312, i32 1
  %3318 = load i16, ptr %3317, align 2
  %3319 = icmp eq i16 %3318, 0
  br i1 %3319, label %3358, label %3320

3320:                                             ; preds = %3351, %3316
  %3321 = phi i32 [ %3352, %3351 ], [ 0, %3316 ]
  %3322 = getelementptr %struct.mxl5005s_state, ptr %3306, i32 0, i32 21, i32 %3312, i32 4, i32 %3321
  store i16 0, ptr %3322, align 2
  %3323 = getelementptr %struct.mxl5005s_state, ptr %3306, i32 0, i32 21, i32 %3312, i32 3, i32 %3321
  %3324 = load i16, ptr %3323, align 2
  %3325 = load ptr, ptr %3, align 4
  %3326 = getelementptr inbounds %struct.mxl5005s_state, ptr %3325, i32 0, i32 24
  %3327 = load i16, ptr %3326, align 4
  %3328 = zext i16 %3327 to i32
  %3329 = icmp eq i16 %3327, 0
  br i1 %3329, label %3351, label %3330

3330:                                             ; preds = %3320
  %3331 = getelementptr %struct.mxl5005s_state, ptr %3306, i32 0, i32 21, i32 %3312, i32 2, i32 %3321
  %3332 = load i16, ptr %3331, align 2
  %3333 = and i16 %3332, 255
  br label %3334

3334:                                             ; preds = %3348, %3330
  %3335 = phi i32 [ 0, %3330 ], [ %3349, %3348 ]
  %3336 = getelementptr %struct.mxl5005s_state, ptr %3325, i32 0, i32 25, i32 %3335
  %3337 = load i16, ptr %3336, align 2
  %3338 = icmp eq i16 %3337, %3333
  br i1 %3338, label %3339, label %3348

3339:                                             ; preds = %3334
  %3340 = and i16 %3324, 255
  %3341 = zext i16 %3340 to i32
  %3342 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3341
  %3343 = load i8, ptr %3342, align 1
  %3344 = zext i8 %3343 to i16
  %3345 = getelementptr %struct.mxl5005s_state, ptr %3325, i32 0, i32 25, i32 %3335, i32 1
  %3346 = load i16, ptr %3345, align 2
  %3347 = and i16 %3346, %3344
  store i16 %3347, ptr %3345, align 2
  br label %3351

3348:                                             ; preds = %3334
  %3349 = add nuw nsw i32 %3335, 1
  %3350 = icmp eq i32 %3349, %3328
  br i1 %3350, label %3351, label %3334

3351:                                             ; preds = %3348, %3339, %3320
  %3352 = add nuw nsw i32 %3321, 1
  %3353 = load i16, ptr %3317, align 2
  %3354 = zext i16 %3353 to i32
  %3355 = icmp ult i32 %3352, %3354
  br i1 %3355, label %3320, label %3356

3356:                                             ; preds = %3351
  %3357 = load i16, ptr %3307, align 2
  br label %3358

3358:                                             ; preds = %3356, %3316, %3310
  %3359 = phi i16 [ %3357, %3356 ], [ %3311, %3316 ], [ %3311, %3310 ]
  %3360 = add nuw nsw i32 %3312, 1
  %3361 = zext i16 %3359 to i32
  %3362 = icmp ult i32 %3360, %3361
  br i1 %3362, label %3310, label %3363

3363:                                             ; preds = %3358
  %3364 = load ptr, ptr %3, align 4
  br label %3365

3365:                                             ; preds = %3363, %3305
  %3366 = phi ptr [ %3364, %3363 ], [ %3306, %3305 ]
  %3367 = getelementptr inbounds %struct.mxl5005s_state, ptr %3366, i32 0, i32 18
  %3368 = load i16, ptr %3367, align 4
  %3369 = icmp eq i16 %3368, 0
  br i1 %3369, label %3425, label %3370

3370:                                             ; preds = %3418, %3365
  %3371 = phi i16 [ %3419, %3418 ], [ %3368, %3365 ]
  %3372 = phi i32 [ %3420, %3418 ], [ 0, %3365 ]
  %3373 = getelementptr %struct.mxl5005s_state, ptr %3366, i32 0, i32 19, i32 %3372
  %3374 = load i16, ptr %3373, align 2
  %3375 = icmp eq i16 %3374, 61
  br i1 %3375, label %3376, label %3418

3376:                                             ; preds = %3370
  %3377 = getelementptr %struct.mxl5005s_state, ptr %3366, i32 0, i32 19, i32 %3372, i32 1
  %3378 = load i16, ptr %3377, align 2
  %3379 = icmp eq i16 %3378, 0
  br i1 %3379, label %3418, label %3380

3380:                                             ; preds = %3411, %3376
  %3381 = phi i32 [ %3412, %3411 ], [ 0, %3376 ]
  %3382 = getelementptr %struct.mxl5005s_state, ptr %3366, i32 0, i32 19, i32 %3372, i32 4, i32 %3381
  store i16 0, ptr %3382, align 2
  %3383 = getelementptr %struct.mxl5005s_state, ptr %3366, i32 0, i32 19, i32 %3372, i32 3, i32 %3381
  %3384 = load i16, ptr %3383, align 2
  %3385 = load ptr, ptr %3, align 4
  %3386 = getelementptr inbounds %struct.mxl5005s_state, ptr %3385, i32 0, i32 24
  %3387 = load i16, ptr %3386, align 4
  %3388 = zext i16 %3387 to i32
  %3389 = icmp eq i16 %3387, 0
  br i1 %3389, label %3411, label %3390

3390:                                             ; preds = %3380
  %3391 = getelementptr %struct.mxl5005s_state, ptr %3366, i32 0, i32 19, i32 %3372, i32 2, i32 %3381
  %3392 = load i16, ptr %3391, align 2
  %3393 = and i16 %3392, 255
  br label %3394

3394:                                             ; preds = %3408, %3390
  %3395 = phi i32 [ 0, %3390 ], [ %3409, %3408 ]
  %3396 = getelementptr %struct.mxl5005s_state, ptr %3385, i32 0, i32 25, i32 %3395
  %3397 = load i16, ptr %3396, align 2
  %3398 = icmp eq i16 %3397, %3393
  br i1 %3398, label %3399, label %3408

3399:                                             ; preds = %3394
  %3400 = and i16 %3384, 255
  %3401 = zext i16 %3400 to i32
  %3402 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3401
  %3403 = load i8, ptr %3402, align 1
  %3404 = zext i8 %3403 to i16
  %3405 = getelementptr %struct.mxl5005s_state, ptr %3385, i32 0, i32 25, i32 %3395, i32 1
  %3406 = load i16, ptr %3405, align 2
  %3407 = and i16 %3406, %3404
  store i16 %3407, ptr %3405, align 2
  br label %3411

3408:                                             ; preds = %3394
  %3409 = add nuw nsw i32 %3395, 1
  %3410 = icmp eq i32 %3409, %3388
  br i1 %3410, label %3411, label %3394

3411:                                             ; preds = %3408, %3399, %3380
  %3412 = add nuw nsw i32 %3381, 1
  %3413 = load i16, ptr %3377, align 2
  %3414 = zext i16 %3413 to i32
  %3415 = icmp ult i32 %3412, %3414
  br i1 %3415, label %3380, label %3416

3416:                                             ; preds = %3411
  %3417 = load i16, ptr %3367, align 4
  br label %3418

3418:                                             ; preds = %3416, %3376, %3370
  %3419 = phi i16 [ %3417, %3416 ], [ %3371, %3376 ], [ %3371, %3370 ]
  %3420 = add nuw nsw i32 %3372, 1
  %3421 = zext i16 %3419 to i32
  %3422 = icmp ult i32 %3420, %3421
  br i1 %3422, label %3370, label %3423

3423:                                             ; preds = %3418
  %3424 = load ptr, ptr %3, align 4
  br label %3425

3425:                                             ; preds = %3423, %3365
  %3426 = phi ptr [ %3424, %3423 ], [ %3366, %3365 ]
  %3427 = getelementptr inbounds %struct.mxl5005s_state, ptr %3426, i32 0, i32 20
  %3428 = load i16, ptr %3427, align 2
  %3429 = icmp eq i16 %3428, 0
  br i1 %3429, label %3483, label %3430

3430:                                             ; preds = %3478, %3425
  %3431 = phi i16 [ %3479, %3478 ], [ %3428, %3425 ]
  %3432 = phi i32 [ %3480, %3478 ], [ 0, %3425 ]
  %3433 = getelementptr %struct.mxl5005s_state, ptr %3426, i32 0, i32 21, i32 %3432
  %3434 = load i16, ptr %3433, align 2
  %3435 = icmp eq i16 %3434, 61
  br i1 %3435, label %3436, label %3478

3436:                                             ; preds = %3430
  %3437 = getelementptr %struct.mxl5005s_state, ptr %3426, i32 0, i32 21, i32 %3432, i32 1
  %3438 = load i16, ptr %3437, align 2
  %3439 = icmp eq i16 %3438, 0
  br i1 %3439, label %3478, label %3440

3440:                                             ; preds = %3471, %3436
  %3441 = phi i32 [ %3472, %3471 ], [ 0, %3436 ]
  %3442 = getelementptr %struct.mxl5005s_state, ptr %3426, i32 0, i32 21, i32 %3432, i32 4, i32 %3441
  store i16 0, ptr %3442, align 2
  %3443 = getelementptr %struct.mxl5005s_state, ptr %3426, i32 0, i32 21, i32 %3432, i32 3, i32 %3441
  %3444 = load i16, ptr %3443, align 2
  %3445 = load ptr, ptr %3, align 4
  %3446 = getelementptr inbounds %struct.mxl5005s_state, ptr %3445, i32 0, i32 24
  %3447 = load i16, ptr %3446, align 4
  %3448 = zext i16 %3447 to i32
  %3449 = icmp eq i16 %3447, 0
  br i1 %3449, label %3471, label %3450

3450:                                             ; preds = %3440
  %3451 = getelementptr %struct.mxl5005s_state, ptr %3426, i32 0, i32 21, i32 %3432, i32 2, i32 %3441
  %3452 = load i16, ptr %3451, align 2
  %3453 = and i16 %3452, 255
  br label %3454

3454:                                             ; preds = %3468, %3450
  %3455 = phi i32 [ 0, %3450 ], [ %3469, %3468 ]
  %3456 = getelementptr %struct.mxl5005s_state, ptr %3445, i32 0, i32 25, i32 %3455
  %3457 = load i16, ptr %3456, align 2
  %3458 = icmp eq i16 %3457, %3453
  br i1 %3458, label %3459, label %3468

3459:                                             ; preds = %3454
  %3460 = and i16 %3444, 255
  %3461 = zext i16 %3460 to i32
  %3462 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3461
  %3463 = load i8, ptr %3462, align 1
  %3464 = zext i8 %3463 to i16
  %3465 = getelementptr %struct.mxl5005s_state, ptr %3445, i32 0, i32 25, i32 %3455, i32 1
  %3466 = load i16, ptr %3465, align 2
  %3467 = and i16 %3466, %3464
  store i16 %3467, ptr %3465, align 2
  br label %3471

3468:                                             ; preds = %3454
  %3469 = add nuw nsw i32 %3455, 1
  %3470 = icmp eq i32 %3469, %3448
  br i1 %3470, label %3471, label %3454

3471:                                             ; preds = %3468, %3459, %3440
  %3472 = add nuw nsw i32 %3441, 1
  %3473 = load i16, ptr %3437, align 2
  %3474 = zext i16 %3473 to i32
  %3475 = icmp ult i32 %3472, %3474
  br i1 %3475, label %3440, label %3476

3476:                                             ; preds = %3471
  %3477 = load i16, ptr %3427, align 2
  br label %3478

3478:                                             ; preds = %3476, %3436, %3430
  %3479 = phi i16 [ %3477, %3476 ], [ %3431, %3436 ], [ %3431, %3430 ]
  %3480 = add nuw nsw i32 %3432, 1
  %3481 = zext i16 %3479 to i32
  %3482 = icmp ult i32 %3480, %3481
  br i1 %3482, label %3430, label %3483

3483:                                             ; preds = %3478, %3425
  %3484 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %3485 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %3486 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 1) #12
  %3487 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 2) #12
  %3488 = load i32, ptr %40, align 4
  br label %3489

3489:                                             ; preds = %3483, %3118
  %3490 = phi i32 [ %3488, %3483 ], [ %3119, %3118 ]
  %3491 = phi i32 [ 32, %3483 ], [ %3120, %3118 ]
  %3492 = phi i32 [ 85000000, %3483 ], [ %3121, %3118 ]
  %3493 = phi i32 [ -56000000, %3483 ], [ %3122, %3118 ]
  %3494 = add i32 %3490, -85000001
  %3495 = icmp ult i32 %3494, 27000000
  br i1 %3495, label %3496, label %3742

3496:                                             ; preds = %3489
  %3497 = load ptr, ptr %3, align 4
  %3498 = getelementptr inbounds %struct.mxl5005s_state, ptr %3497, i32 0, i32 18
  %3499 = load i16, ptr %3498, align 4
  %3500 = icmp eq i16 %3499, 0
  br i1 %3500, label %3556, label %3501

3501:                                             ; preds = %3549, %3496
  %3502 = phi i16 [ %3550, %3549 ], [ %3499, %3496 ]
  %3503 = phi i32 [ %3551, %3549 ], [ 0, %3496 ]
  %3504 = getelementptr %struct.mxl5005s_state, ptr %3497, i32 0, i32 19, i32 %3503
  %3505 = load i16, ptr %3504, align 2
  %3506 = icmp eq i16 %3505, 58
  br i1 %3506, label %3507, label %3549

3507:                                             ; preds = %3501
  %3508 = getelementptr %struct.mxl5005s_state, ptr %3497, i32 0, i32 19, i32 %3503, i32 1
  %3509 = load i16, ptr %3508, align 2
  %3510 = icmp eq i16 %3509, 0
  br i1 %3510, label %3549, label %3511

3511:                                             ; preds = %3542, %3507
  %3512 = phi i32 [ %3543, %3542 ], [ 0, %3507 ]
  %3513 = getelementptr %struct.mxl5005s_state, ptr %3497, i32 0, i32 19, i32 %3503, i32 4, i32 %3512
  store i16 0, ptr %3513, align 2
  %3514 = getelementptr %struct.mxl5005s_state, ptr %3497, i32 0, i32 19, i32 %3503, i32 3, i32 %3512
  %3515 = load i16, ptr %3514, align 2
  %3516 = load ptr, ptr %3, align 4
  %3517 = getelementptr inbounds %struct.mxl5005s_state, ptr %3516, i32 0, i32 24
  %3518 = load i16, ptr %3517, align 4
  %3519 = zext i16 %3518 to i32
  %3520 = icmp eq i16 %3518, 0
  br i1 %3520, label %3542, label %3521

3521:                                             ; preds = %3511
  %3522 = getelementptr %struct.mxl5005s_state, ptr %3497, i32 0, i32 19, i32 %3503, i32 2, i32 %3512
  %3523 = load i16, ptr %3522, align 2
  %3524 = and i16 %3523, 255
  br label %3525

3525:                                             ; preds = %3539, %3521
  %3526 = phi i32 [ 0, %3521 ], [ %3540, %3539 ]
  %3527 = getelementptr %struct.mxl5005s_state, ptr %3516, i32 0, i32 25, i32 %3526
  %3528 = load i16, ptr %3527, align 2
  %3529 = icmp eq i16 %3528, %3524
  br i1 %3529, label %3530, label %3539

3530:                                             ; preds = %3525
  %3531 = and i16 %3515, 255
  %3532 = zext i16 %3531 to i32
  %3533 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3532
  %3534 = load i8, ptr %3533, align 1
  %3535 = zext i8 %3534 to i16
  %3536 = getelementptr %struct.mxl5005s_state, ptr %3516, i32 0, i32 25, i32 %3526, i32 1
  %3537 = load i16, ptr %3536, align 2
  %3538 = and i16 %3537, %3535
  store i16 %3538, ptr %3536, align 2
  br label %3542

3539:                                             ; preds = %3525
  %3540 = add nuw nsw i32 %3526, 1
  %3541 = icmp eq i32 %3540, %3519
  br i1 %3541, label %3542, label %3525

3542:                                             ; preds = %3539, %3530, %3511
  %3543 = add nuw nsw i32 %3512, 1
  %3544 = load i16, ptr %3508, align 2
  %3545 = zext i16 %3544 to i32
  %3546 = icmp ult i32 %3543, %3545
  br i1 %3546, label %3511, label %3547

3547:                                             ; preds = %3542
  %3548 = load i16, ptr %3498, align 4
  br label %3549

3549:                                             ; preds = %3547, %3507, %3501
  %3550 = phi i16 [ %3548, %3547 ], [ %3502, %3507 ], [ %3502, %3501 ]
  %3551 = add nuw nsw i32 %3503, 1
  %3552 = zext i16 %3550 to i32
  %3553 = icmp ult i32 %3551, %3552
  br i1 %3553, label %3501, label %3554

3554:                                             ; preds = %3549
  %3555 = load ptr, ptr %3, align 4
  br label %3556

3556:                                             ; preds = %3554, %3496
  %3557 = phi ptr [ %3555, %3554 ], [ %3497, %3496 ]
  %3558 = getelementptr inbounds %struct.mxl5005s_state, ptr %3557, i32 0, i32 20
  %3559 = load i16, ptr %3558, align 2
  %3560 = icmp eq i16 %3559, 0
  br i1 %3560, label %3614, label %3561

3561:                                             ; preds = %3609, %3556
  %3562 = phi i16 [ %3610, %3609 ], [ %3559, %3556 ]
  %3563 = phi i32 [ %3611, %3609 ], [ 0, %3556 ]
  %3564 = getelementptr %struct.mxl5005s_state, ptr %3557, i32 0, i32 21, i32 %3563
  %3565 = load i16, ptr %3564, align 2
  %3566 = icmp eq i16 %3565, 58
  br i1 %3566, label %3567, label %3609

3567:                                             ; preds = %3561
  %3568 = getelementptr %struct.mxl5005s_state, ptr %3557, i32 0, i32 21, i32 %3563, i32 1
  %3569 = load i16, ptr %3568, align 2
  %3570 = icmp eq i16 %3569, 0
  br i1 %3570, label %3609, label %3571

3571:                                             ; preds = %3602, %3567
  %3572 = phi i32 [ %3603, %3602 ], [ 0, %3567 ]
  %3573 = getelementptr %struct.mxl5005s_state, ptr %3557, i32 0, i32 21, i32 %3563, i32 4, i32 %3572
  store i16 0, ptr %3573, align 2
  %3574 = getelementptr %struct.mxl5005s_state, ptr %3557, i32 0, i32 21, i32 %3563, i32 3, i32 %3572
  %3575 = load i16, ptr %3574, align 2
  %3576 = load ptr, ptr %3, align 4
  %3577 = getelementptr inbounds %struct.mxl5005s_state, ptr %3576, i32 0, i32 24
  %3578 = load i16, ptr %3577, align 4
  %3579 = zext i16 %3578 to i32
  %3580 = icmp eq i16 %3578, 0
  br i1 %3580, label %3602, label %3581

3581:                                             ; preds = %3571
  %3582 = getelementptr %struct.mxl5005s_state, ptr %3557, i32 0, i32 21, i32 %3563, i32 2, i32 %3572
  %3583 = load i16, ptr %3582, align 2
  %3584 = and i16 %3583, 255
  br label %3585

3585:                                             ; preds = %3599, %3581
  %3586 = phi i32 [ 0, %3581 ], [ %3600, %3599 ]
  %3587 = getelementptr %struct.mxl5005s_state, ptr %3576, i32 0, i32 25, i32 %3586
  %3588 = load i16, ptr %3587, align 2
  %3589 = icmp eq i16 %3588, %3584
  br i1 %3589, label %3590, label %3599

3590:                                             ; preds = %3585
  %3591 = and i16 %3575, 255
  %3592 = zext i16 %3591 to i32
  %3593 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3592
  %3594 = load i8, ptr %3593, align 1
  %3595 = zext i8 %3594 to i16
  %3596 = getelementptr %struct.mxl5005s_state, ptr %3576, i32 0, i32 25, i32 %3586, i32 1
  %3597 = load i16, ptr %3596, align 2
  %3598 = and i16 %3597, %3595
  store i16 %3598, ptr %3596, align 2
  br label %3602

3599:                                             ; preds = %3585
  %3600 = add nuw nsw i32 %3586, 1
  %3601 = icmp eq i32 %3600, %3579
  br i1 %3601, label %3602, label %3585

3602:                                             ; preds = %3599, %3590, %3571
  %3603 = add nuw nsw i32 %3572, 1
  %3604 = load i16, ptr %3568, align 2
  %3605 = zext i16 %3604 to i32
  %3606 = icmp ult i32 %3603, %3605
  br i1 %3606, label %3571, label %3607

3607:                                             ; preds = %3602
  %3608 = load i16, ptr %3558, align 2
  br label %3609

3609:                                             ; preds = %3607, %3567, %3561
  %3610 = phi i16 [ %3608, %3607 ], [ %3562, %3567 ], [ %3562, %3561 ]
  %3611 = add nuw nsw i32 %3563, 1
  %3612 = zext i16 %3610 to i32
  %3613 = icmp ult i32 %3611, %3612
  br i1 %3613, label %3561, label %3614

3614:                                             ; preds = %3609, %3556
  %3615 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 1) #12
  %3616 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 2) #12
  %3617 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 1) #12
  %3618 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 2) #12
  %3619 = load ptr, ptr %3, align 4
  %3620 = getelementptr inbounds %struct.mxl5005s_state, ptr %3619, i32 0, i32 18
  %3621 = load i16, ptr %3620, align 4
  %3622 = icmp eq i16 %3621, 0
  br i1 %3622, label %3678, label %3623

3623:                                             ; preds = %3671, %3614
  %3624 = phi i16 [ %3672, %3671 ], [ %3621, %3614 ]
  %3625 = phi i32 [ %3673, %3671 ], [ 0, %3614 ]
  %3626 = getelementptr %struct.mxl5005s_state, ptr %3619, i32 0, i32 19, i32 %3625
  %3627 = load i16, ptr %3626, align 2
  %3628 = icmp eq i16 %3627, 61
  br i1 %3628, label %3629, label %3671

3629:                                             ; preds = %3623
  %3630 = getelementptr %struct.mxl5005s_state, ptr %3619, i32 0, i32 19, i32 %3625, i32 1
  %3631 = load i16, ptr %3630, align 2
  %3632 = icmp eq i16 %3631, 0
  br i1 %3632, label %3671, label %3633

3633:                                             ; preds = %3664, %3629
  %3634 = phi i32 [ %3665, %3664 ], [ 0, %3629 ]
  %3635 = getelementptr %struct.mxl5005s_state, ptr %3619, i32 0, i32 19, i32 %3625, i32 4, i32 %3634
  store i16 0, ptr %3635, align 2
  %3636 = getelementptr %struct.mxl5005s_state, ptr %3619, i32 0, i32 19, i32 %3625, i32 3, i32 %3634
  %3637 = load i16, ptr %3636, align 2
  %3638 = load ptr, ptr %3, align 4
  %3639 = getelementptr inbounds %struct.mxl5005s_state, ptr %3638, i32 0, i32 24
  %3640 = load i16, ptr %3639, align 4
  %3641 = zext i16 %3640 to i32
  %3642 = icmp eq i16 %3640, 0
  br i1 %3642, label %3664, label %3643

3643:                                             ; preds = %3633
  %3644 = getelementptr %struct.mxl5005s_state, ptr %3619, i32 0, i32 19, i32 %3625, i32 2, i32 %3634
  %3645 = load i16, ptr %3644, align 2
  %3646 = and i16 %3645, 255
  br label %3647

3647:                                             ; preds = %3661, %3643
  %3648 = phi i32 [ 0, %3643 ], [ %3662, %3661 ]
  %3649 = getelementptr %struct.mxl5005s_state, ptr %3638, i32 0, i32 25, i32 %3648
  %3650 = load i16, ptr %3649, align 2
  %3651 = icmp eq i16 %3650, %3646
  br i1 %3651, label %3652, label %3661

3652:                                             ; preds = %3647
  %3653 = and i16 %3637, 255
  %3654 = zext i16 %3653 to i32
  %3655 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3654
  %3656 = load i8, ptr %3655, align 1
  %3657 = zext i8 %3656 to i16
  %3658 = getelementptr %struct.mxl5005s_state, ptr %3638, i32 0, i32 25, i32 %3648, i32 1
  %3659 = load i16, ptr %3658, align 2
  %3660 = and i16 %3659, %3657
  store i16 %3660, ptr %3658, align 2
  br label %3664

3661:                                             ; preds = %3647
  %3662 = add nuw nsw i32 %3648, 1
  %3663 = icmp eq i32 %3662, %3641
  br i1 %3663, label %3664, label %3647

3664:                                             ; preds = %3661, %3652, %3633
  %3665 = add nuw nsw i32 %3634, 1
  %3666 = load i16, ptr %3630, align 2
  %3667 = zext i16 %3666 to i32
  %3668 = icmp ult i32 %3665, %3667
  br i1 %3668, label %3633, label %3669

3669:                                             ; preds = %3664
  %3670 = load i16, ptr %3620, align 4
  br label %3671

3671:                                             ; preds = %3669, %3629, %3623
  %3672 = phi i16 [ %3670, %3669 ], [ %3624, %3629 ], [ %3624, %3623 ]
  %3673 = add nuw nsw i32 %3625, 1
  %3674 = zext i16 %3672 to i32
  %3675 = icmp ult i32 %3673, %3674
  br i1 %3675, label %3623, label %3676

3676:                                             ; preds = %3671
  %3677 = load ptr, ptr %3, align 4
  br label %3678

3678:                                             ; preds = %3676, %3614
  %3679 = phi ptr [ %3677, %3676 ], [ %3619, %3614 ]
  %3680 = getelementptr inbounds %struct.mxl5005s_state, ptr %3679, i32 0, i32 20
  %3681 = load i16, ptr %3680, align 2
  %3682 = icmp eq i16 %3681, 0
  br i1 %3682, label %3736, label %3683

3683:                                             ; preds = %3731, %3678
  %3684 = phi i16 [ %3732, %3731 ], [ %3681, %3678 ]
  %3685 = phi i32 [ %3733, %3731 ], [ 0, %3678 ]
  %3686 = getelementptr %struct.mxl5005s_state, ptr %3679, i32 0, i32 21, i32 %3685
  %3687 = load i16, ptr %3686, align 2
  %3688 = icmp eq i16 %3687, 61
  br i1 %3688, label %3689, label %3731

3689:                                             ; preds = %3683
  %3690 = getelementptr %struct.mxl5005s_state, ptr %3679, i32 0, i32 21, i32 %3685, i32 1
  %3691 = load i16, ptr %3690, align 2
  %3692 = icmp eq i16 %3691, 0
  br i1 %3692, label %3731, label %3693

3693:                                             ; preds = %3724, %3689
  %3694 = phi i32 [ %3725, %3724 ], [ 0, %3689 ]
  %3695 = getelementptr %struct.mxl5005s_state, ptr %3679, i32 0, i32 21, i32 %3685, i32 4, i32 %3694
  store i16 0, ptr %3695, align 2
  %3696 = getelementptr %struct.mxl5005s_state, ptr %3679, i32 0, i32 21, i32 %3685, i32 3, i32 %3694
  %3697 = load i16, ptr %3696, align 2
  %3698 = load ptr, ptr %3, align 4
  %3699 = getelementptr inbounds %struct.mxl5005s_state, ptr %3698, i32 0, i32 24
  %3700 = load i16, ptr %3699, align 4
  %3701 = zext i16 %3700 to i32
  %3702 = icmp eq i16 %3700, 0
  br i1 %3702, label %3724, label %3703

3703:                                             ; preds = %3693
  %3704 = getelementptr %struct.mxl5005s_state, ptr %3679, i32 0, i32 21, i32 %3685, i32 2, i32 %3694
  %3705 = load i16, ptr %3704, align 2
  %3706 = and i16 %3705, 255
  br label %3707

3707:                                             ; preds = %3721, %3703
  %3708 = phi i32 [ 0, %3703 ], [ %3722, %3721 ]
  %3709 = getelementptr %struct.mxl5005s_state, ptr %3698, i32 0, i32 25, i32 %3708
  %3710 = load i16, ptr %3709, align 2
  %3711 = icmp eq i16 %3710, %3706
  br i1 %3711, label %3712, label %3721

3712:                                             ; preds = %3707
  %3713 = and i16 %3697, 255
  %3714 = zext i16 %3713 to i32
  %3715 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3714
  %3716 = load i8, ptr %3715, align 1
  %3717 = zext i8 %3716 to i16
  %3718 = getelementptr %struct.mxl5005s_state, ptr %3698, i32 0, i32 25, i32 %3708, i32 1
  %3719 = load i16, ptr %3718, align 2
  %3720 = and i16 %3719, %3717
  store i16 %3720, ptr %3718, align 2
  br label %3724

3721:                                             ; preds = %3707
  %3722 = add nuw nsw i32 %3708, 1
  %3723 = icmp eq i32 %3722, %3701
  br i1 %3723, label %3724, label %3707

3724:                                             ; preds = %3721, %3712, %3693
  %3725 = add nuw nsw i32 %3694, 1
  %3726 = load i16, ptr %3690, align 2
  %3727 = zext i16 %3726 to i32
  %3728 = icmp ult i32 %3725, %3727
  br i1 %3728, label %3693, label %3729

3729:                                             ; preds = %3724
  %3730 = load i16, ptr %3680, align 2
  br label %3731

3731:                                             ; preds = %3729, %3689, %3683
  %3732 = phi i16 [ %3730, %3729 ], [ %3684, %3689 ], [ %3684, %3683 ]
  %3733 = add nuw nsw i32 %3685, 1
  %3734 = zext i16 %3732 to i32
  %3735 = icmp ult i32 %3733, %3734
  br i1 %3735, label %3683, label %3736

3736:                                             ; preds = %3731, %3678
  %3737 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %3738 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %3739 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 1) #12
  %3740 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 1, i16 noundef zeroext 2) #12
  %3741 = load i32, ptr %40, align 4
  br label %3742

3742:                                             ; preds = %3736, %3489
  %3743 = phi i32 [ %3741, %3736 ], [ %3490, %3489 ]
  %3744 = phi i32 [ 32, %3736 ], [ %3491, %3489 ]
  %3745 = phi i32 [ 112000000, %3736 ], [ %3492, %3489 ]
  %3746 = phi i32 [ -85000000, %3736 ], [ %3493, %3489 ]
  %3747 = add i32 %3743, -112000001
  %3748 = icmp ult i32 %3747, 58000000
  br i1 %3748, label %3749, label %4113

3749:                                             ; preds = %3742
  %3750 = load ptr, ptr %3, align 4
  %3751 = getelementptr inbounds %struct.mxl5005s_state, ptr %3750, i32 0, i32 18
  %3752 = load i16, ptr %3751, align 4
  %3753 = icmp eq i16 %3752, 0
  br i1 %3753, label %3809, label %3754

3754:                                             ; preds = %3802, %3749
  %3755 = phi i16 [ %3803, %3802 ], [ %3752, %3749 ]
  %3756 = phi i32 [ %3804, %3802 ], [ 0, %3749 ]
  %3757 = getelementptr %struct.mxl5005s_state, ptr %3750, i32 0, i32 19, i32 %3756
  %3758 = load i16, ptr %3757, align 2
  %3759 = icmp eq i16 %3758, 58
  br i1 %3759, label %3760, label %3802

3760:                                             ; preds = %3754
  %3761 = getelementptr %struct.mxl5005s_state, ptr %3750, i32 0, i32 19, i32 %3756, i32 1
  %3762 = load i16, ptr %3761, align 2
  %3763 = icmp eq i16 %3762, 0
  br i1 %3763, label %3802, label %3764

3764:                                             ; preds = %3795, %3760
  %3765 = phi i32 [ %3796, %3795 ], [ 0, %3760 ]
  %3766 = getelementptr %struct.mxl5005s_state, ptr %3750, i32 0, i32 19, i32 %3756, i32 4, i32 %3765
  store i16 0, ptr %3766, align 2
  %3767 = getelementptr %struct.mxl5005s_state, ptr %3750, i32 0, i32 19, i32 %3756, i32 3, i32 %3765
  %3768 = load i16, ptr %3767, align 2
  %3769 = load ptr, ptr %3, align 4
  %3770 = getelementptr inbounds %struct.mxl5005s_state, ptr %3769, i32 0, i32 24
  %3771 = load i16, ptr %3770, align 4
  %3772 = zext i16 %3771 to i32
  %3773 = icmp eq i16 %3771, 0
  br i1 %3773, label %3795, label %3774

3774:                                             ; preds = %3764
  %3775 = getelementptr %struct.mxl5005s_state, ptr %3750, i32 0, i32 19, i32 %3756, i32 2, i32 %3765
  %3776 = load i16, ptr %3775, align 2
  %3777 = and i16 %3776, 255
  br label %3778

3778:                                             ; preds = %3792, %3774
  %3779 = phi i32 [ 0, %3774 ], [ %3793, %3792 ]
  %3780 = getelementptr %struct.mxl5005s_state, ptr %3769, i32 0, i32 25, i32 %3779
  %3781 = load i16, ptr %3780, align 2
  %3782 = icmp eq i16 %3781, %3777
  br i1 %3782, label %3783, label %3792

3783:                                             ; preds = %3778
  %3784 = and i16 %3768, 255
  %3785 = zext i16 %3784 to i32
  %3786 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3785
  %3787 = load i8, ptr %3786, align 1
  %3788 = zext i8 %3787 to i16
  %3789 = getelementptr %struct.mxl5005s_state, ptr %3769, i32 0, i32 25, i32 %3779, i32 1
  %3790 = load i16, ptr %3789, align 2
  %3791 = and i16 %3790, %3788
  store i16 %3791, ptr %3789, align 2
  br label %3795

3792:                                             ; preds = %3778
  %3793 = add nuw nsw i32 %3779, 1
  %3794 = icmp eq i32 %3793, %3772
  br i1 %3794, label %3795, label %3778

3795:                                             ; preds = %3792, %3783, %3764
  %3796 = add nuw nsw i32 %3765, 1
  %3797 = load i16, ptr %3761, align 2
  %3798 = zext i16 %3797 to i32
  %3799 = icmp ult i32 %3796, %3798
  br i1 %3799, label %3764, label %3800

3800:                                             ; preds = %3795
  %3801 = load i16, ptr %3751, align 4
  br label %3802

3802:                                             ; preds = %3800, %3760, %3754
  %3803 = phi i16 [ %3801, %3800 ], [ %3755, %3760 ], [ %3755, %3754 ]
  %3804 = add nuw nsw i32 %3756, 1
  %3805 = zext i16 %3803 to i32
  %3806 = icmp ult i32 %3804, %3805
  br i1 %3806, label %3754, label %3807

3807:                                             ; preds = %3802
  %3808 = load ptr, ptr %3, align 4
  br label %3809

3809:                                             ; preds = %3807, %3749
  %3810 = phi ptr [ %3808, %3807 ], [ %3750, %3749 ]
  %3811 = getelementptr inbounds %struct.mxl5005s_state, ptr %3810, i32 0, i32 20
  %3812 = load i16, ptr %3811, align 2
  %3813 = icmp eq i16 %3812, 0
  br i1 %3813, label %3867, label %3814

3814:                                             ; preds = %3862, %3809
  %3815 = phi i16 [ %3863, %3862 ], [ %3812, %3809 ]
  %3816 = phi i32 [ %3864, %3862 ], [ 0, %3809 ]
  %3817 = getelementptr %struct.mxl5005s_state, ptr %3810, i32 0, i32 21, i32 %3816
  %3818 = load i16, ptr %3817, align 2
  %3819 = icmp eq i16 %3818, 58
  br i1 %3819, label %3820, label %3862

3820:                                             ; preds = %3814
  %3821 = getelementptr %struct.mxl5005s_state, ptr %3810, i32 0, i32 21, i32 %3816, i32 1
  %3822 = load i16, ptr %3821, align 2
  %3823 = icmp eq i16 %3822, 0
  br i1 %3823, label %3862, label %3824

3824:                                             ; preds = %3855, %3820
  %3825 = phi i32 [ %3856, %3855 ], [ 0, %3820 ]
  %3826 = getelementptr %struct.mxl5005s_state, ptr %3810, i32 0, i32 21, i32 %3816, i32 4, i32 %3825
  store i16 0, ptr %3826, align 2
  %3827 = getelementptr %struct.mxl5005s_state, ptr %3810, i32 0, i32 21, i32 %3816, i32 3, i32 %3825
  %3828 = load i16, ptr %3827, align 2
  %3829 = load ptr, ptr %3, align 4
  %3830 = getelementptr inbounds %struct.mxl5005s_state, ptr %3829, i32 0, i32 24
  %3831 = load i16, ptr %3830, align 4
  %3832 = zext i16 %3831 to i32
  %3833 = icmp eq i16 %3831, 0
  br i1 %3833, label %3855, label %3834

3834:                                             ; preds = %3824
  %3835 = getelementptr %struct.mxl5005s_state, ptr %3810, i32 0, i32 21, i32 %3816, i32 2, i32 %3825
  %3836 = load i16, ptr %3835, align 2
  %3837 = and i16 %3836, 255
  br label %3838

3838:                                             ; preds = %3852, %3834
  %3839 = phi i32 [ 0, %3834 ], [ %3853, %3852 ]
  %3840 = getelementptr %struct.mxl5005s_state, ptr %3829, i32 0, i32 25, i32 %3839
  %3841 = load i16, ptr %3840, align 2
  %3842 = icmp eq i16 %3841, %3837
  br i1 %3842, label %3843, label %3852

3843:                                             ; preds = %3838
  %3844 = and i16 %3828, 255
  %3845 = zext i16 %3844 to i32
  %3846 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3845
  %3847 = load i8, ptr %3846, align 1
  %3848 = zext i8 %3847 to i16
  %3849 = getelementptr %struct.mxl5005s_state, ptr %3829, i32 0, i32 25, i32 %3839, i32 1
  %3850 = load i16, ptr %3849, align 2
  %3851 = and i16 %3850, %3848
  store i16 %3851, ptr %3849, align 2
  br label %3855

3852:                                             ; preds = %3838
  %3853 = add nuw nsw i32 %3839, 1
  %3854 = icmp eq i32 %3853, %3832
  br i1 %3854, label %3855, label %3838

3855:                                             ; preds = %3852, %3843, %3824
  %3856 = add nuw nsw i32 %3825, 1
  %3857 = load i16, ptr %3821, align 2
  %3858 = zext i16 %3857 to i32
  %3859 = icmp ult i32 %3856, %3858
  br i1 %3859, label %3824, label %3860

3860:                                             ; preds = %3855
  %3861 = load i16, ptr %3811, align 2
  br label %3862

3862:                                             ; preds = %3860, %3820, %3814
  %3863 = phi i16 [ %3861, %3860 ], [ %3815, %3820 ], [ %3815, %3814 ]
  %3864 = add nuw nsw i32 %3816, 1
  %3865 = zext i16 %3863 to i32
  %3866 = icmp ult i32 %3864, %3865
  br i1 %3866, label %3814, label %3867

3867:                                             ; preds = %3862, %3809
  %3868 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 1) #12
  %3869 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 2) #12
  %3870 = load ptr, ptr %3, align 4
  %3871 = getelementptr inbounds %struct.mxl5005s_state, ptr %3870, i32 0, i32 18
  %3872 = load i16, ptr %3871, align 4
  %3873 = icmp eq i16 %3872, 0
  br i1 %3873, label %3929, label %3874

3874:                                             ; preds = %3922, %3867
  %3875 = phi i16 [ %3923, %3922 ], [ %3872, %3867 ]
  %3876 = phi i32 [ %3924, %3922 ], [ 0, %3867 ]
  %3877 = getelementptr %struct.mxl5005s_state, ptr %3870, i32 0, i32 19, i32 %3876
  %3878 = load i16, ptr %3877, align 2
  %3879 = icmp eq i16 %3878, 60
  br i1 %3879, label %3880, label %3922

3880:                                             ; preds = %3874
  %3881 = getelementptr %struct.mxl5005s_state, ptr %3870, i32 0, i32 19, i32 %3876, i32 1
  %3882 = load i16, ptr %3881, align 2
  %3883 = icmp eq i16 %3882, 0
  br i1 %3883, label %3922, label %3884

3884:                                             ; preds = %3915, %3880
  %3885 = phi i32 [ %3916, %3915 ], [ 0, %3880 ]
  %3886 = getelementptr %struct.mxl5005s_state, ptr %3870, i32 0, i32 19, i32 %3876, i32 4, i32 %3885
  store i16 0, ptr %3886, align 2
  %3887 = getelementptr %struct.mxl5005s_state, ptr %3870, i32 0, i32 19, i32 %3876, i32 3, i32 %3885
  %3888 = load i16, ptr %3887, align 2
  %3889 = load ptr, ptr %3, align 4
  %3890 = getelementptr inbounds %struct.mxl5005s_state, ptr %3889, i32 0, i32 24
  %3891 = load i16, ptr %3890, align 4
  %3892 = zext i16 %3891 to i32
  %3893 = icmp eq i16 %3891, 0
  br i1 %3893, label %3915, label %3894

3894:                                             ; preds = %3884
  %3895 = getelementptr %struct.mxl5005s_state, ptr %3870, i32 0, i32 19, i32 %3876, i32 2, i32 %3885
  %3896 = load i16, ptr %3895, align 2
  %3897 = and i16 %3896, 255
  br label %3898

3898:                                             ; preds = %3912, %3894
  %3899 = phi i32 [ 0, %3894 ], [ %3913, %3912 ]
  %3900 = getelementptr %struct.mxl5005s_state, ptr %3889, i32 0, i32 25, i32 %3899
  %3901 = load i16, ptr %3900, align 2
  %3902 = icmp eq i16 %3901, %3897
  br i1 %3902, label %3903, label %3912

3903:                                             ; preds = %3898
  %3904 = and i16 %3888, 255
  %3905 = zext i16 %3904 to i32
  %3906 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3905
  %3907 = load i8, ptr %3906, align 1
  %3908 = zext i8 %3907 to i16
  %3909 = getelementptr %struct.mxl5005s_state, ptr %3889, i32 0, i32 25, i32 %3899, i32 1
  %3910 = load i16, ptr %3909, align 2
  %3911 = and i16 %3910, %3908
  store i16 %3911, ptr %3909, align 2
  br label %3915

3912:                                             ; preds = %3898
  %3913 = add nuw nsw i32 %3899, 1
  %3914 = icmp eq i32 %3913, %3892
  br i1 %3914, label %3915, label %3898

3915:                                             ; preds = %3912, %3903, %3884
  %3916 = add nuw nsw i32 %3885, 1
  %3917 = load i16, ptr %3881, align 2
  %3918 = zext i16 %3917 to i32
  %3919 = icmp ult i32 %3916, %3918
  br i1 %3919, label %3884, label %3920

3920:                                             ; preds = %3915
  %3921 = load i16, ptr %3871, align 4
  br label %3922

3922:                                             ; preds = %3920, %3880, %3874
  %3923 = phi i16 [ %3921, %3920 ], [ %3875, %3880 ], [ %3875, %3874 ]
  %3924 = add nuw nsw i32 %3876, 1
  %3925 = zext i16 %3923 to i32
  %3926 = icmp ult i32 %3924, %3925
  br i1 %3926, label %3874, label %3927

3927:                                             ; preds = %3922
  %3928 = load ptr, ptr %3, align 4
  br label %3929

3929:                                             ; preds = %3927, %3867
  %3930 = phi ptr [ %3928, %3927 ], [ %3870, %3867 ]
  %3931 = getelementptr inbounds %struct.mxl5005s_state, ptr %3930, i32 0, i32 20
  %3932 = load i16, ptr %3931, align 2
  %3933 = icmp eq i16 %3932, 0
  br i1 %3933, label %3989, label %3934

3934:                                             ; preds = %3982, %3929
  %3935 = phi i16 [ %3983, %3982 ], [ %3932, %3929 ]
  %3936 = phi i32 [ %3984, %3982 ], [ 0, %3929 ]
  %3937 = getelementptr %struct.mxl5005s_state, ptr %3930, i32 0, i32 21, i32 %3936
  %3938 = load i16, ptr %3937, align 2
  %3939 = icmp eq i16 %3938, 60
  br i1 %3939, label %3940, label %3982

3940:                                             ; preds = %3934
  %3941 = getelementptr %struct.mxl5005s_state, ptr %3930, i32 0, i32 21, i32 %3936, i32 1
  %3942 = load i16, ptr %3941, align 2
  %3943 = icmp eq i16 %3942, 0
  br i1 %3943, label %3982, label %3944

3944:                                             ; preds = %3975, %3940
  %3945 = phi i32 [ %3976, %3975 ], [ 0, %3940 ]
  %3946 = getelementptr %struct.mxl5005s_state, ptr %3930, i32 0, i32 21, i32 %3936, i32 4, i32 %3945
  store i16 0, ptr %3946, align 2
  %3947 = getelementptr %struct.mxl5005s_state, ptr %3930, i32 0, i32 21, i32 %3936, i32 3, i32 %3945
  %3948 = load i16, ptr %3947, align 2
  %3949 = load ptr, ptr %3, align 4
  %3950 = getelementptr inbounds %struct.mxl5005s_state, ptr %3949, i32 0, i32 24
  %3951 = load i16, ptr %3950, align 4
  %3952 = zext i16 %3951 to i32
  %3953 = icmp eq i16 %3951, 0
  br i1 %3953, label %3975, label %3954

3954:                                             ; preds = %3944
  %3955 = getelementptr %struct.mxl5005s_state, ptr %3930, i32 0, i32 21, i32 %3936, i32 2, i32 %3945
  %3956 = load i16, ptr %3955, align 2
  %3957 = and i16 %3956, 255
  br label %3958

3958:                                             ; preds = %3972, %3954
  %3959 = phi i32 [ 0, %3954 ], [ %3973, %3972 ]
  %3960 = getelementptr %struct.mxl5005s_state, ptr %3949, i32 0, i32 25, i32 %3959
  %3961 = load i16, ptr %3960, align 2
  %3962 = icmp eq i16 %3961, %3957
  br i1 %3962, label %3963, label %3972

3963:                                             ; preds = %3958
  %3964 = and i16 %3948, 255
  %3965 = zext i16 %3964 to i32
  %3966 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %3965
  %3967 = load i8, ptr %3966, align 1
  %3968 = zext i8 %3967 to i16
  %3969 = getelementptr %struct.mxl5005s_state, ptr %3949, i32 0, i32 25, i32 %3959, i32 1
  %3970 = load i16, ptr %3969, align 2
  %3971 = and i16 %3970, %3968
  store i16 %3971, ptr %3969, align 2
  br label %3975

3972:                                             ; preds = %3958
  %3973 = add nuw nsw i32 %3959, 1
  %3974 = icmp eq i32 %3973, %3952
  br i1 %3974, label %3975, label %3958

3975:                                             ; preds = %3972, %3963, %3944
  %3976 = add nuw nsw i32 %3945, 1
  %3977 = load i16, ptr %3941, align 2
  %3978 = zext i16 %3977 to i32
  %3979 = icmp ult i32 %3976, %3978
  br i1 %3979, label %3944, label %3980

3980:                                             ; preds = %3975
  %3981 = load i16, ptr %3931, align 2
  br label %3982

3982:                                             ; preds = %3980, %3940, %3934
  %3983 = phi i16 [ %3981, %3980 ], [ %3935, %3940 ], [ %3935, %3934 ]
  %3984 = add nuw nsw i32 %3936, 1
  %3985 = zext i16 %3983 to i32
  %3986 = icmp ult i32 %3984, %3985
  br i1 %3986, label %3934, label %3987

3987:                                             ; preds = %3982
  %3988 = load ptr, ptr %3, align 4
  br label %3989

3989:                                             ; preds = %3987, %3929
  %3990 = phi ptr [ %3988, %3987 ], [ %3930, %3929 ]
  %3991 = getelementptr inbounds %struct.mxl5005s_state, ptr %3990, i32 0, i32 18
  %3992 = load i16, ptr %3991, align 4
  %3993 = icmp eq i16 %3992, 0
  br i1 %3993, label %4049, label %3994

3994:                                             ; preds = %4042, %3989
  %3995 = phi i16 [ %4043, %4042 ], [ %3992, %3989 ]
  %3996 = phi i32 [ %4044, %4042 ], [ 0, %3989 ]
  %3997 = getelementptr %struct.mxl5005s_state, ptr %3990, i32 0, i32 19, i32 %3996
  %3998 = load i16, ptr %3997, align 2
  %3999 = icmp eq i16 %3998, 61
  br i1 %3999, label %4000, label %4042

4000:                                             ; preds = %3994
  %4001 = getelementptr %struct.mxl5005s_state, ptr %3990, i32 0, i32 19, i32 %3996, i32 1
  %4002 = load i16, ptr %4001, align 2
  %4003 = icmp eq i16 %4002, 0
  br i1 %4003, label %4042, label %4004

4004:                                             ; preds = %4035, %4000
  %4005 = phi i32 [ %4036, %4035 ], [ 0, %4000 ]
  %4006 = getelementptr %struct.mxl5005s_state, ptr %3990, i32 0, i32 19, i32 %3996, i32 4, i32 %4005
  store i16 0, ptr %4006, align 2
  %4007 = getelementptr %struct.mxl5005s_state, ptr %3990, i32 0, i32 19, i32 %3996, i32 3, i32 %4005
  %4008 = load i16, ptr %4007, align 2
  %4009 = load ptr, ptr %3, align 4
  %4010 = getelementptr inbounds %struct.mxl5005s_state, ptr %4009, i32 0, i32 24
  %4011 = load i16, ptr %4010, align 4
  %4012 = zext i16 %4011 to i32
  %4013 = icmp eq i16 %4011, 0
  br i1 %4013, label %4035, label %4014

4014:                                             ; preds = %4004
  %4015 = getelementptr %struct.mxl5005s_state, ptr %3990, i32 0, i32 19, i32 %3996, i32 2, i32 %4005
  %4016 = load i16, ptr %4015, align 2
  %4017 = and i16 %4016, 255
  br label %4018

4018:                                             ; preds = %4032, %4014
  %4019 = phi i32 [ 0, %4014 ], [ %4033, %4032 ]
  %4020 = getelementptr %struct.mxl5005s_state, ptr %4009, i32 0, i32 25, i32 %4019
  %4021 = load i16, ptr %4020, align 2
  %4022 = icmp eq i16 %4021, %4017
  br i1 %4022, label %4023, label %4032

4023:                                             ; preds = %4018
  %4024 = and i16 %4008, 255
  %4025 = zext i16 %4024 to i32
  %4026 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4025
  %4027 = load i8, ptr %4026, align 1
  %4028 = zext i8 %4027 to i16
  %4029 = getelementptr %struct.mxl5005s_state, ptr %4009, i32 0, i32 25, i32 %4019, i32 1
  %4030 = load i16, ptr %4029, align 2
  %4031 = and i16 %4030, %4028
  store i16 %4031, ptr %4029, align 2
  br label %4035

4032:                                             ; preds = %4018
  %4033 = add nuw nsw i32 %4019, 1
  %4034 = icmp eq i32 %4033, %4012
  br i1 %4034, label %4035, label %4018

4035:                                             ; preds = %4032, %4023, %4004
  %4036 = add nuw nsw i32 %4005, 1
  %4037 = load i16, ptr %4001, align 2
  %4038 = zext i16 %4037 to i32
  %4039 = icmp ult i32 %4036, %4038
  br i1 %4039, label %4004, label %4040

4040:                                             ; preds = %4035
  %4041 = load i16, ptr %3991, align 4
  br label %4042

4042:                                             ; preds = %4040, %4000, %3994
  %4043 = phi i16 [ %4041, %4040 ], [ %3995, %4000 ], [ %3995, %3994 ]
  %4044 = add nuw nsw i32 %3996, 1
  %4045 = zext i16 %4043 to i32
  %4046 = icmp ult i32 %4044, %4045
  br i1 %4046, label %3994, label %4047

4047:                                             ; preds = %4042
  %4048 = load ptr, ptr %3, align 4
  br label %4049

4049:                                             ; preds = %4047, %3989
  %4050 = phi ptr [ %4048, %4047 ], [ %3990, %3989 ]
  %4051 = getelementptr inbounds %struct.mxl5005s_state, ptr %4050, i32 0, i32 20
  %4052 = load i16, ptr %4051, align 2
  %4053 = icmp eq i16 %4052, 0
  br i1 %4053, label %4107, label %4054

4054:                                             ; preds = %4102, %4049
  %4055 = phi i16 [ %4103, %4102 ], [ %4052, %4049 ]
  %4056 = phi i32 [ %4104, %4102 ], [ 0, %4049 ]
  %4057 = getelementptr %struct.mxl5005s_state, ptr %4050, i32 0, i32 21, i32 %4056
  %4058 = load i16, ptr %4057, align 2
  %4059 = icmp eq i16 %4058, 61
  br i1 %4059, label %4060, label %4102

4060:                                             ; preds = %4054
  %4061 = getelementptr %struct.mxl5005s_state, ptr %4050, i32 0, i32 21, i32 %4056, i32 1
  %4062 = load i16, ptr %4061, align 2
  %4063 = icmp eq i16 %4062, 0
  br i1 %4063, label %4102, label %4064

4064:                                             ; preds = %4095, %4060
  %4065 = phi i32 [ %4096, %4095 ], [ 0, %4060 ]
  %4066 = getelementptr %struct.mxl5005s_state, ptr %4050, i32 0, i32 21, i32 %4056, i32 4, i32 %4065
  store i16 0, ptr %4066, align 2
  %4067 = getelementptr %struct.mxl5005s_state, ptr %4050, i32 0, i32 21, i32 %4056, i32 3, i32 %4065
  %4068 = load i16, ptr %4067, align 2
  %4069 = load ptr, ptr %3, align 4
  %4070 = getelementptr inbounds %struct.mxl5005s_state, ptr %4069, i32 0, i32 24
  %4071 = load i16, ptr %4070, align 4
  %4072 = zext i16 %4071 to i32
  %4073 = icmp eq i16 %4071, 0
  br i1 %4073, label %4095, label %4074

4074:                                             ; preds = %4064
  %4075 = getelementptr %struct.mxl5005s_state, ptr %4050, i32 0, i32 21, i32 %4056, i32 2, i32 %4065
  %4076 = load i16, ptr %4075, align 2
  %4077 = and i16 %4076, 255
  br label %4078

4078:                                             ; preds = %4092, %4074
  %4079 = phi i32 [ 0, %4074 ], [ %4093, %4092 ]
  %4080 = getelementptr %struct.mxl5005s_state, ptr %4069, i32 0, i32 25, i32 %4079
  %4081 = load i16, ptr %4080, align 2
  %4082 = icmp eq i16 %4081, %4077
  br i1 %4082, label %4083, label %4092

4083:                                             ; preds = %4078
  %4084 = and i16 %4068, 255
  %4085 = zext i16 %4084 to i32
  %4086 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4085
  %4087 = load i8, ptr %4086, align 1
  %4088 = zext i8 %4087 to i16
  %4089 = getelementptr %struct.mxl5005s_state, ptr %4069, i32 0, i32 25, i32 %4079, i32 1
  %4090 = load i16, ptr %4089, align 2
  %4091 = and i16 %4090, %4088
  store i16 %4091, ptr %4089, align 2
  br label %4095

4092:                                             ; preds = %4078
  %4093 = add nuw nsw i32 %4079, 1
  %4094 = icmp eq i32 %4093, %4072
  br i1 %4094, label %4095, label %4078

4095:                                             ; preds = %4092, %4083, %4064
  %4096 = add nuw nsw i32 %4065, 1
  %4097 = load i16, ptr %4061, align 2
  %4098 = zext i16 %4097 to i32
  %4099 = icmp ult i32 %4096, %4098
  br i1 %4099, label %4064, label %4100

4100:                                             ; preds = %4095
  %4101 = load i16, ptr %4051, align 2
  br label %4102

4102:                                             ; preds = %4100, %4060, %4054
  %4103 = phi i16 [ %4101, %4100 ], [ %4055, %4060 ], [ %4055, %4054 ]
  %4104 = add nuw nsw i32 %4056, 1
  %4105 = zext i16 %4103 to i32
  %4106 = icmp ult i32 %4104, %4105
  br i1 %4106, label %4054, label %4107

4107:                                             ; preds = %4102, %4049
  %4108 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %4109 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %4110 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 2, i16 noundef zeroext 1) #12
  %4111 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 2, i16 noundef zeroext 2) #12
  %4112 = load i32, ptr %40, align 4
  br label %4113

4113:                                             ; preds = %4107, %3742
  %4114 = phi i32 [ %4112, %4107 ], [ %3743, %3742 ]
  %4115 = phi i32 [ 16, %4107 ], [ %3744, %3742 ]
  %4116 = phi i32 [ 170000000, %4107 ], [ %3745, %3742 ]
  %4117 = phi i32 [ -112000000, %4107 ], [ %3746, %3742 ]
  %4118 = add i32 %4114, -170000001
  %4119 = icmp ult i32 %4118, 55000000
  br i1 %4119, label %4120, label %4366

4120:                                             ; preds = %4113
  %4121 = load ptr, ptr %3, align 4
  %4122 = getelementptr inbounds %struct.mxl5005s_state, ptr %4121, i32 0, i32 18
  %4123 = load i16, ptr %4122, align 4
  %4124 = icmp eq i16 %4123, 0
  br i1 %4124, label %4180, label %4125

4125:                                             ; preds = %4173, %4120
  %4126 = phi i16 [ %4174, %4173 ], [ %4123, %4120 ]
  %4127 = phi i32 [ %4175, %4173 ], [ 0, %4120 ]
  %4128 = getelementptr %struct.mxl5005s_state, ptr %4121, i32 0, i32 19, i32 %4127
  %4129 = load i16, ptr %4128, align 2
  %4130 = icmp eq i16 %4129, 58
  br i1 %4130, label %4131, label %4173

4131:                                             ; preds = %4125
  %4132 = getelementptr %struct.mxl5005s_state, ptr %4121, i32 0, i32 19, i32 %4127, i32 1
  %4133 = load i16, ptr %4132, align 2
  %4134 = icmp eq i16 %4133, 0
  br i1 %4134, label %4173, label %4135

4135:                                             ; preds = %4166, %4131
  %4136 = phi i32 [ %4167, %4166 ], [ 0, %4131 ]
  %4137 = getelementptr %struct.mxl5005s_state, ptr %4121, i32 0, i32 19, i32 %4127, i32 4, i32 %4136
  store i16 0, ptr %4137, align 2
  %4138 = getelementptr %struct.mxl5005s_state, ptr %4121, i32 0, i32 19, i32 %4127, i32 3, i32 %4136
  %4139 = load i16, ptr %4138, align 2
  %4140 = load ptr, ptr %3, align 4
  %4141 = getelementptr inbounds %struct.mxl5005s_state, ptr %4140, i32 0, i32 24
  %4142 = load i16, ptr %4141, align 4
  %4143 = zext i16 %4142 to i32
  %4144 = icmp eq i16 %4142, 0
  br i1 %4144, label %4166, label %4145

4145:                                             ; preds = %4135
  %4146 = getelementptr %struct.mxl5005s_state, ptr %4121, i32 0, i32 19, i32 %4127, i32 2, i32 %4136
  %4147 = load i16, ptr %4146, align 2
  %4148 = and i16 %4147, 255
  br label %4149

4149:                                             ; preds = %4163, %4145
  %4150 = phi i32 [ 0, %4145 ], [ %4164, %4163 ]
  %4151 = getelementptr %struct.mxl5005s_state, ptr %4140, i32 0, i32 25, i32 %4150
  %4152 = load i16, ptr %4151, align 2
  %4153 = icmp eq i16 %4152, %4148
  br i1 %4153, label %4154, label %4163

4154:                                             ; preds = %4149
  %4155 = and i16 %4139, 255
  %4156 = zext i16 %4155 to i32
  %4157 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4156
  %4158 = load i8, ptr %4157, align 1
  %4159 = zext i8 %4158 to i16
  %4160 = getelementptr %struct.mxl5005s_state, ptr %4140, i32 0, i32 25, i32 %4150, i32 1
  %4161 = load i16, ptr %4160, align 2
  %4162 = and i16 %4161, %4159
  store i16 %4162, ptr %4160, align 2
  br label %4166

4163:                                             ; preds = %4149
  %4164 = add nuw nsw i32 %4150, 1
  %4165 = icmp eq i32 %4164, %4143
  br i1 %4165, label %4166, label %4149

4166:                                             ; preds = %4163, %4154, %4135
  %4167 = add nuw nsw i32 %4136, 1
  %4168 = load i16, ptr %4132, align 2
  %4169 = zext i16 %4168 to i32
  %4170 = icmp ult i32 %4167, %4169
  br i1 %4170, label %4135, label %4171

4171:                                             ; preds = %4166
  %4172 = load i16, ptr %4122, align 4
  br label %4173

4173:                                             ; preds = %4171, %4131, %4125
  %4174 = phi i16 [ %4172, %4171 ], [ %4126, %4131 ], [ %4126, %4125 ]
  %4175 = add nuw nsw i32 %4127, 1
  %4176 = zext i16 %4174 to i32
  %4177 = icmp ult i32 %4175, %4176
  br i1 %4177, label %4125, label %4178

4178:                                             ; preds = %4173
  %4179 = load ptr, ptr %3, align 4
  br label %4180

4180:                                             ; preds = %4178, %4120
  %4181 = phi ptr [ %4179, %4178 ], [ %4121, %4120 ]
  %4182 = getelementptr inbounds %struct.mxl5005s_state, ptr %4181, i32 0, i32 20
  %4183 = load i16, ptr %4182, align 2
  %4184 = icmp eq i16 %4183, 0
  br i1 %4184, label %4238, label %4185

4185:                                             ; preds = %4233, %4180
  %4186 = phi i16 [ %4234, %4233 ], [ %4183, %4180 ]
  %4187 = phi i32 [ %4235, %4233 ], [ 0, %4180 ]
  %4188 = getelementptr %struct.mxl5005s_state, ptr %4181, i32 0, i32 21, i32 %4187
  %4189 = load i16, ptr %4188, align 2
  %4190 = icmp eq i16 %4189, 58
  br i1 %4190, label %4191, label %4233

4191:                                             ; preds = %4185
  %4192 = getelementptr %struct.mxl5005s_state, ptr %4181, i32 0, i32 21, i32 %4187, i32 1
  %4193 = load i16, ptr %4192, align 2
  %4194 = icmp eq i16 %4193, 0
  br i1 %4194, label %4233, label %4195

4195:                                             ; preds = %4226, %4191
  %4196 = phi i32 [ %4227, %4226 ], [ 0, %4191 ]
  %4197 = getelementptr %struct.mxl5005s_state, ptr %4181, i32 0, i32 21, i32 %4187, i32 4, i32 %4196
  store i16 0, ptr %4197, align 2
  %4198 = getelementptr %struct.mxl5005s_state, ptr %4181, i32 0, i32 21, i32 %4187, i32 3, i32 %4196
  %4199 = load i16, ptr %4198, align 2
  %4200 = load ptr, ptr %3, align 4
  %4201 = getelementptr inbounds %struct.mxl5005s_state, ptr %4200, i32 0, i32 24
  %4202 = load i16, ptr %4201, align 4
  %4203 = zext i16 %4202 to i32
  %4204 = icmp eq i16 %4202, 0
  br i1 %4204, label %4226, label %4205

4205:                                             ; preds = %4195
  %4206 = getelementptr %struct.mxl5005s_state, ptr %4181, i32 0, i32 21, i32 %4187, i32 2, i32 %4196
  %4207 = load i16, ptr %4206, align 2
  %4208 = and i16 %4207, 255
  br label %4209

4209:                                             ; preds = %4223, %4205
  %4210 = phi i32 [ 0, %4205 ], [ %4224, %4223 ]
  %4211 = getelementptr %struct.mxl5005s_state, ptr %4200, i32 0, i32 25, i32 %4210
  %4212 = load i16, ptr %4211, align 2
  %4213 = icmp eq i16 %4212, %4208
  br i1 %4213, label %4214, label %4223

4214:                                             ; preds = %4209
  %4215 = and i16 %4199, 255
  %4216 = zext i16 %4215 to i32
  %4217 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4216
  %4218 = load i8, ptr %4217, align 1
  %4219 = zext i8 %4218 to i16
  %4220 = getelementptr %struct.mxl5005s_state, ptr %4200, i32 0, i32 25, i32 %4210, i32 1
  %4221 = load i16, ptr %4220, align 2
  %4222 = and i16 %4221, %4219
  store i16 %4222, ptr %4220, align 2
  br label %4226

4223:                                             ; preds = %4209
  %4224 = add nuw nsw i32 %4210, 1
  %4225 = icmp eq i32 %4224, %4203
  br i1 %4225, label %4226, label %4209

4226:                                             ; preds = %4223, %4214, %4195
  %4227 = add nuw nsw i32 %4196, 1
  %4228 = load i16, ptr %4192, align 2
  %4229 = zext i16 %4228 to i32
  %4230 = icmp ult i32 %4227, %4229
  br i1 %4230, label %4195, label %4231

4231:                                             ; preds = %4226
  %4232 = load i16, ptr %4182, align 2
  br label %4233

4233:                                             ; preds = %4231, %4191, %4185
  %4234 = phi i16 [ %4232, %4231 ], [ %4186, %4191 ], [ %4186, %4185 ]
  %4235 = add nuw nsw i32 %4187, 1
  %4236 = zext i16 %4234 to i32
  %4237 = icmp ult i32 %4235, %4236
  br i1 %4237, label %4185, label %4238

4238:                                             ; preds = %4233, %4180
  %4239 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 1) #12
  %4240 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 2) #12
  %4241 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 1) #12
  %4242 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 2) #12
  %4243 = load ptr, ptr %3, align 4
  %4244 = getelementptr inbounds %struct.mxl5005s_state, ptr %4243, i32 0, i32 18
  %4245 = load i16, ptr %4244, align 4
  %4246 = icmp eq i16 %4245, 0
  br i1 %4246, label %4302, label %4247

4247:                                             ; preds = %4295, %4238
  %4248 = phi i16 [ %4296, %4295 ], [ %4245, %4238 ]
  %4249 = phi i32 [ %4297, %4295 ], [ 0, %4238 ]
  %4250 = getelementptr %struct.mxl5005s_state, ptr %4243, i32 0, i32 19, i32 %4249
  %4251 = load i16, ptr %4250, align 2
  %4252 = icmp eq i16 %4251, 61
  br i1 %4252, label %4253, label %4295

4253:                                             ; preds = %4247
  %4254 = getelementptr %struct.mxl5005s_state, ptr %4243, i32 0, i32 19, i32 %4249, i32 1
  %4255 = load i16, ptr %4254, align 2
  %4256 = icmp eq i16 %4255, 0
  br i1 %4256, label %4295, label %4257

4257:                                             ; preds = %4288, %4253
  %4258 = phi i32 [ %4289, %4288 ], [ 0, %4253 ]
  %4259 = getelementptr %struct.mxl5005s_state, ptr %4243, i32 0, i32 19, i32 %4249, i32 4, i32 %4258
  store i16 0, ptr %4259, align 2
  %4260 = getelementptr %struct.mxl5005s_state, ptr %4243, i32 0, i32 19, i32 %4249, i32 3, i32 %4258
  %4261 = load i16, ptr %4260, align 2
  %4262 = load ptr, ptr %3, align 4
  %4263 = getelementptr inbounds %struct.mxl5005s_state, ptr %4262, i32 0, i32 24
  %4264 = load i16, ptr %4263, align 4
  %4265 = zext i16 %4264 to i32
  %4266 = icmp eq i16 %4264, 0
  br i1 %4266, label %4288, label %4267

4267:                                             ; preds = %4257
  %4268 = getelementptr %struct.mxl5005s_state, ptr %4243, i32 0, i32 19, i32 %4249, i32 2, i32 %4258
  %4269 = load i16, ptr %4268, align 2
  %4270 = and i16 %4269, 255
  br label %4271

4271:                                             ; preds = %4285, %4267
  %4272 = phi i32 [ 0, %4267 ], [ %4286, %4285 ]
  %4273 = getelementptr %struct.mxl5005s_state, ptr %4262, i32 0, i32 25, i32 %4272
  %4274 = load i16, ptr %4273, align 2
  %4275 = icmp eq i16 %4274, %4270
  br i1 %4275, label %4276, label %4285

4276:                                             ; preds = %4271
  %4277 = and i16 %4261, 255
  %4278 = zext i16 %4277 to i32
  %4279 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4278
  %4280 = load i8, ptr %4279, align 1
  %4281 = zext i8 %4280 to i16
  %4282 = getelementptr %struct.mxl5005s_state, ptr %4262, i32 0, i32 25, i32 %4272, i32 1
  %4283 = load i16, ptr %4282, align 2
  %4284 = and i16 %4283, %4281
  store i16 %4284, ptr %4282, align 2
  br label %4288

4285:                                             ; preds = %4271
  %4286 = add nuw nsw i32 %4272, 1
  %4287 = icmp eq i32 %4286, %4265
  br i1 %4287, label %4288, label %4271

4288:                                             ; preds = %4285, %4276, %4257
  %4289 = add nuw nsw i32 %4258, 1
  %4290 = load i16, ptr %4254, align 2
  %4291 = zext i16 %4290 to i32
  %4292 = icmp ult i32 %4289, %4291
  br i1 %4292, label %4257, label %4293

4293:                                             ; preds = %4288
  %4294 = load i16, ptr %4244, align 4
  br label %4295

4295:                                             ; preds = %4293, %4253, %4247
  %4296 = phi i16 [ %4294, %4293 ], [ %4248, %4253 ], [ %4248, %4247 ]
  %4297 = add nuw nsw i32 %4249, 1
  %4298 = zext i16 %4296 to i32
  %4299 = icmp ult i32 %4297, %4298
  br i1 %4299, label %4247, label %4300

4300:                                             ; preds = %4295
  %4301 = load ptr, ptr %3, align 4
  br label %4302

4302:                                             ; preds = %4300, %4238
  %4303 = phi ptr [ %4301, %4300 ], [ %4243, %4238 ]
  %4304 = getelementptr inbounds %struct.mxl5005s_state, ptr %4303, i32 0, i32 20
  %4305 = load i16, ptr %4304, align 2
  %4306 = icmp eq i16 %4305, 0
  br i1 %4306, label %4360, label %4307

4307:                                             ; preds = %4355, %4302
  %4308 = phi i16 [ %4356, %4355 ], [ %4305, %4302 ]
  %4309 = phi i32 [ %4357, %4355 ], [ 0, %4302 ]
  %4310 = getelementptr %struct.mxl5005s_state, ptr %4303, i32 0, i32 21, i32 %4309
  %4311 = load i16, ptr %4310, align 2
  %4312 = icmp eq i16 %4311, 61
  br i1 %4312, label %4313, label %4355

4313:                                             ; preds = %4307
  %4314 = getelementptr %struct.mxl5005s_state, ptr %4303, i32 0, i32 21, i32 %4309, i32 1
  %4315 = load i16, ptr %4314, align 2
  %4316 = icmp eq i16 %4315, 0
  br i1 %4316, label %4355, label %4317

4317:                                             ; preds = %4348, %4313
  %4318 = phi i32 [ %4349, %4348 ], [ 0, %4313 ]
  %4319 = getelementptr %struct.mxl5005s_state, ptr %4303, i32 0, i32 21, i32 %4309, i32 4, i32 %4318
  store i16 0, ptr %4319, align 2
  %4320 = getelementptr %struct.mxl5005s_state, ptr %4303, i32 0, i32 21, i32 %4309, i32 3, i32 %4318
  %4321 = load i16, ptr %4320, align 2
  %4322 = load ptr, ptr %3, align 4
  %4323 = getelementptr inbounds %struct.mxl5005s_state, ptr %4322, i32 0, i32 24
  %4324 = load i16, ptr %4323, align 4
  %4325 = zext i16 %4324 to i32
  %4326 = icmp eq i16 %4324, 0
  br i1 %4326, label %4348, label %4327

4327:                                             ; preds = %4317
  %4328 = getelementptr %struct.mxl5005s_state, ptr %4303, i32 0, i32 21, i32 %4309, i32 2, i32 %4318
  %4329 = load i16, ptr %4328, align 2
  %4330 = and i16 %4329, 255
  br label %4331

4331:                                             ; preds = %4345, %4327
  %4332 = phi i32 [ 0, %4327 ], [ %4346, %4345 ]
  %4333 = getelementptr %struct.mxl5005s_state, ptr %4322, i32 0, i32 25, i32 %4332
  %4334 = load i16, ptr %4333, align 2
  %4335 = icmp eq i16 %4334, %4330
  br i1 %4335, label %4336, label %4345

4336:                                             ; preds = %4331
  %4337 = and i16 %4321, 255
  %4338 = zext i16 %4337 to i32
  %4339 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4338
  %4340 = load i8, ptr %4339, align 1
  %4341 = zext i8 %4340 to i16
  %4342 = getelementptr %struct.mxl5005s_state, ptr %4322, i32 0, i32 25, i32 %4332, i32 1
  %4343 = load i16, ptr %4342, align 2
  %4344 = and i16 %4343, %4341
  store i16 %4344, ptr %4342, align 2
  br label %4348

4345:                                             ; preds = %4331
  %4346 = add nuw nsw i32 %4332, 1
  %4347 = icmp eq i32 %4346, %4325
  br i1 %4347, label %4348, label %4331

4348:                                             ; preds = %4345, %4336, %4317
  %4349 = add nuw nsw i32 %4318, 1
  %4350 = load i16, ptr %4314, align 2
  %4351 = zext i16 %4350 to i32
  %4352 = icmp ult i32 %4349, %4351
  br i1 %4352, label %4317, label %4353

4353:                                             ; preds = %4348
  %4354 = load i16, ptr %4304, align 2
  br label %4355

4355:                                             ; preds = %4353, %4313, %4307
  %4356 = phi i16 [ %4354, %4353 ], [ %4308, %4313 ], [ %4308, %4307 ]
  %4357 = add nuw nsw i32 %4309, 1
  %4358 = zext i16 %4356 to i32
  %4359 = icmp ult i32 %4357, %4358
  br i1 %4359, label %4307, label %4360

4360:                                             ; preds = %4355, %4302
  %4361 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %4362 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %4363 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 2, i16 noundef zeroext 1) #12
  %4364 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 2, i16 noundef zeroext 2) #12
  %4365 = load i32, ptr %40, align 4
  br label %4366

4366:                                             ; preds = %4360, %4113
  %4367 = phi i32 [ %4365, %4360 ], [ %4114, %4113 ]
  %4368 = phi i32 [ 16, %4360 ], [ %4115, %4113 ]
  %4369 = phi i32 [ 225000000, %4360 ], [ %4116, %4113 ]
  %4370 = phi i32 [ -170000000, %4360 ], [ %4117, %4113 ]
  %4371 = add i32 %4367, -225000001
  %4372 = icmp ult i32 %4371, 75000000
  br i1 %4372, label %4373, label %4737

4373:                                             ; preds = %4366
  %4374 = load ptr, ptr %3, align 4
  %4375 = getelementptr inbounds %struct.mxl5005s_state, ptr %4374, i32 0, i32 18
  %4376 = load i16, ptr %4375, align 4
  %4377 = icmp eq i16 %4376, 0
  br i1 %4377, label %4433, label %4378

4378:                                             ; preds = %4426, %4373
  %4379 = phi i16 [ %4427, %4426 ], [ %4376, %4373 ]
  %4380 = phi i32 [ %4428, %4426 ], [ 0, %4373 ]
  %4381 = getelementptr %struct.mxl5005s_state, ptr %4374, i32 0, i32 19, i32 %4380
  %4382 = load i16, ptr %4381, align 2
  %4383 = icmp eq i16 %4382, 58
  br i1 %4383, label %4384, label %4426

4384:                                             ; preds = %4378
  %4385 = getelementptr %struct.mxl5005s_state, ptr %4374, i32 0, i32 19, i32 %4380, i32 1
  %4386 = load i16, ptr %4385, align 2
  %4387 = icmp eq i16 %4386, 0
  br i1 %4387, label %4426, label %4388

4388:                                             ; preds = %4419, %4384
  %4389 = phi i32 [ %4420, %4419 ], [ 0, %4384 ]
  %4390 = getelementptr %struct.mxl5005s_state, ptr %4374, i32 0, i32 19, i32 %4380, i32 4, i32 %4389
  store i16 0, ptr %4390, align 2
  %4391 = getelementptr %struct.mxl5005s_state, ptr %4374, i32 0, i32 19, i32 %4380, i32 3, i32 %4389
  %4392 = load i16, ptr %4391, align 2
  %4393 = load ptr, ptr %3, align 4
  %4394 = getelementptr inbounds %struct.mxl5005s_state, ptr %4393, i32 0, i32 24
  %4395 = load i16, ptr %4394, align 4
  %4396 = zext i16 %4395 to i32
  %4397 = icmp eq i16 %4395, 0
  br i1 %4397, label %4419, label %4398

4398:                                             ; preds = %4388
  %4399 = getelementptr %struct.mxl5005s_state, ptr %4374, i32 0, i32 19, i32 %4380, i32 2, i32 %4389
  %4400 = load i16, ptr %4399, align 2
  %4401 = and i16 %4400, 255
  br label %4402

4402:                                             ; preds = %4416, %4398
  %4403 = phi i32 [ 0, %4398 ], [ %4417, %4416 ]
  %4404 = getelementptr %struct.mxl5005s_state, ptr %4393, i32 0, i32 25, i32 %4403
  %4405 = load i16, ptr %4404, align 2
  %4406 = icmp eq i16 %4405, %4401
  br i1 %4406, label %4407, label %4416

4407:                                             ; preds = %4402
  %4408 = and i16 %4392, 255
  %4409 = zext i16 %4408 to i32
  %4410 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4409
  %4411 = load i8, ptr %4410, align 1
  %4412 = zext i8 %4411 to i16
  %4413 = getelementptr %struct.mxl5005s_state, ptr %4393, i32 0, i32 25, i32 %4403, i32 1
  %4414 = load i16, ptr %4413, align 2
  %4415 = and i16 %4414, %4412
  store i16 %4415, ptr %4413, align 2
  br label %4419

4416:                                             ; preds = %4402
  %4417 = add nuw nsw i32 %4403, 1
  %4418 = icmp eq i32 %4417, %4396
  br i1 %4418, label %4419, label %4402

4419:                                             ; preds = %4416, %4407, %4388
  %4420 = add nuw nsw i32 %4389, 1
  %4421 = load i16, ptr %4385, align 2
  %4422 = zext i16 %4421 to i32
  %4423 = icmp ult i32 %4420, %4422
  br i1 %4423, label %4388, label %4424

4424:                                             ; preds = %4419
  %4425 = load i16, ptr %4375, align 4
  br label %4426

4426:                                             ; preds = %4424, %4384, %4378
  %4427 = phi i16 [ %4425, %4424 ], [ %4379, %4384 ], [ %4379, %4378 ]
  %4428 = add nuw nsw i32 %4380, 1
  %4429 = zext i16 %4427 to i32
  %4430 = icmp ult i32 %4428, %4429
  br i1 %4430, label %4378, label %4431

4431:                                             ; preds = %4426
  %4432 = load ptr, ptr %3, align 4
  br label %4433

4433:                                             ; preds = %4431, %4373
  %4434 = phi ptr [ %4432, %4431 ], [ %4374, %4373 ]
  %4435 = getelementptr inbounds %struct.mxl5005s_state, ptr %4434, i32 0, i32 20
  %4436 = load i16, ptr %4435, align 2
  %4437 = icmp eq i16 %4436, 0
  br i1 %4437, label %4491, label %4438

4438:                                             ; preds = %4486, %4433
  %4439 = phi i16 [ %4487, %4486 ], [ %4436, %4433 ]
  %4440 = phi i32 [ %4488, %4486 ], [ 0, %4433 ]
  %4441 = getelementptr %struct.mxl5005s_state, ptr %4434, i32 0, i32 21, i32 %4440
  %4442 = load i16, ptr %4441, align 2
  %4443 = icmp eq i16 %4442, 58
  br i1 %4443, label %4444, label %4486

4444:                                             ; preds = %4438
  %4445 = getelementptr %struct.mxl5005s_state, ptr %4434, i32 0, i32 21, i32 %4440, i32 1
  %4446 = load i16, ptr %4445, align 2
  %4447 = icmp eq i16 %4446, 0
  br i1 %4447, label %4486, label %4448

4448:                                             ; preds = %4479, %4444
  %4449 = phi i32 [ %4480, %4479 ], [ 0, %4444 ]
  %4450 = getelementptr %struct.mxl5005s_state, ptr %4434, i32 0, i32 21, i32 %4440, i32 4, i32 %4449
  store i16 0, ptr %4450, align 2
  %4451 = getelementptr %struct.mxl5005s_state, ptr %4434, i32 0, i32 21, i32 %4440, i32 3, i32 %4449
  %4452 = load i16, ptr %4451, align 2
  %4453 = load ptr, ptr %3, align 4
  %4454 = getelementptr inbounds %struct.mxl5005s_state, ptr %4453, i32 0, i32 24
  %4455 = load i16, ptr %4454, align 4
  %4456 = zext i16 %4455 to i32
  %4457 = icmp eq i16 %4455, 0
  br i1 %4457, label %4479, label %4458

4458:                                             ; preds = %4448
  %4459 = getelementptr %struct.mxl5005s_state, ptr %4434, i32 0, i32 21, i32 %4440, i32 2, i32 %4449
  %4460 = load i16, ptr %4459, align 2
  %4461 = and i16 %4460, 255
  br label %4462

4462:                                             ; preds = %4476, %4458
  %4463 = phi i32 [ 0, %4458 ], [ %4477, %4476 ]
  %4464 = getelementptr %struct.mxl5005s_state, ptr %4453, i32 0, i32 25, i32 %4463
  %4465 = load i16, ptr %4464, align 2
  %4466 = icmp eq i16 %4465, %4461
  br i1 %4466, label %4467, label %4476

4467:                                             ; preds = %4462
  %4468 = and i16 %4452, 255
  %4469 = zext i16 %4468 to i32
  %4470 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4469
  %4471 = load i8, ptr %4470, align 1
  %4472 = zext i8 %4471 to i16
  %4473 = getelementptr %struct.mxl5005s_state, ptr %4453, i32 0, i32 25, i32 %4463, i32 1
  %4474 = load i16, ptr %4473, align 2
  %4475 = and i16 %4474, %4472
  store i16 %4475, ptr %4473, align 2
  br label %4479

4476:                                             ; preds = %4462
  %4477 = add nuw nsw i32 %4463, 1
  %4478 = icmp eq i32 %4477, %4456
  br i1 %4478, label %4479, label %4462

4479:                                             ; preds = %4476, %4467, %4448
  %4480 = add nuw nsw i32 %4449, 1
  %4481 = load i16, ptr %4445, align 2
  %4482 = zext i16 %4481 to i32
  %4483 = icmp ult i32 %4480, %4482
  br i1 %4483, label %4448, label %4484

4484:                                             ; preds = %4479
  %4485 = load i16, ptr %4435, align 2
  br label %4486

4486:                                             ; preds = %4484, %4444, %4438
  %4487 = phi i16 [ %4485, %4484 ], [ %4439, %4444 ], [ %4439, %4438 ]
  %4488 = add nuw nsw i32 %4440, 1
  %4489 = zext i16 %4487 to i32
  %4490 = icmp ult i32 %4488, %4489
  br i1 %4490, label %4438, label %4491

4491:                                             ; preds = %4486, %4433
  %4492 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 1) #12
  %4493 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 2) #12
  %4494 = load ptr, ptr %3, align 4
  %4495 = getelementptr inbounds %struct.mxl5005s_state, ptr %4494, i32 0, i32 18
  %4496 = load i16, ptr %4495, align 4
  %4497 = icmp eq i16 %4496, 0
  br i1 %4497, label %4553, label %4498

4498:                                             ; preds = %4546, %4491
  %4499 = phi i16 [ %4547, %4546 ], [ %4496, %4491 ]
  %4500 = phi i32 [ %4548, %4546 ], [ 0, %4491 ]
  %4501 = getelementptr %struct.mxl5005s_state, ptr %4494, i32 0, i32 19, i32 %4500
  %4502 = load i16, ptr %4501, align 2
  %4503 = icmp eq i16 %4502, 60
  br i1 %4503, label %4504, label %4546

4504:                                             ; preds = %4498
  %4505 = getelementptr %struct.mxl5005s_state, ptr %4494, i32 0, i32 19, i32 %4500, i32 1
  %4506 = load i16, ptr %4505, align 2
  %4507 = icmp eq i16 %4506, 0
  br i1 %4507, label %4546, label %4508

4508:                                             ; preds = %4539, %4504
  %4509 = phi i32 [ %4540, %4539 ], [ 0, %4504 ]
  %4510 = getelementptr %struct.mxl5005s_state, ptr %4494, i32 0, i32 19, i32 %4500, i32 4, i32 %4509
  store i16 0, ptr %4510, align 2
  %4511 = getelementptr %struct.mxl5005s_state, ptr %4494, i32 0, i32 19, i32 %4500, i32 3, i32 %4509
  %4512 = load i16, ptr %4511, align 2
  %4513 = load ptr, ptr %3, align 4
  %4514 = getelementptr inbounds %struct.mxl5005s_state, ptr %4513, i32 0, i32 24
  %4515 = load i16, ptr %4514, align 4
  %4516 = zext i16 %4515 to i32
  %4517 = icmp eq i16 %4515, 0
  br i1 %4517, label %4539, label %4518

4518:                                             ; preds = %4508
  %4519 = getelementptr %struct.mxl5005s_state, ptr %4494, i32 0, i32 19, i32 %4500, i32 2, i32 %4509
  %4520 = load i16, ptr %4519, align 2
  %4521 = and i16 %4520, 255
  br label %4522

4522:                                             ; preds = %4536, %4518
  %4523 = phi i32 [ 0, %4518 ], [ %4537, %4536 ]
  %4524 = getelementptr %struct.mxl5005s_state, ptr %4513, i32 0, i32 25, i32 %4523
  %4525 = load i16, ptr %4524, align 2
  %4526 = icmp eq i16 %4525, %4521
  br i1 %4526, label %4527, label %4536

4527:                                             ; preds = %4522
  %4528 = and i16 %4512, 255
  %4529 = zext i16 %4528 to i32
  %4530 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4529
  %4531 = load i8, ptr %4530, align 1
  %4532 = zext i8 %4531 to i16
  %4533 = getelementptr %struct.mxl5005s_state, ptr %4513, i32 0, i32 25, i32 %4523, i32 1
  %4534 = load i16, ptr %4533, align 2
  %4535 = and i16 %4534, %4532
  store i16 %4535, ptr %4533, align 2
  br label %4539

4536:                                             ; preds = %4522
  %4537 = add nuw nsw i32 %4523, 1
  %4538 = icmp eq i32 %4537, %4516
  br i1 %4538, label %4539, label %4522

4539:                                             ; preds = %4536, %4527, %4508
  %4540 = add nuw nsw i32 %4509, 1
  %4541 = load i16, ptr %4505, align 2
  %4542 = zext i16 %4541 to i32
  %4543 = icmp ult i32 %4540, %4542
  br i1 %4543, label %4508, label %4544

4544:                                             ; preds = %4539
  %4545 = load i16, ptr %4495, align 4
  br label %4546

4546:                                             ; preds = %4544, %4504, %4498
  %4547 = phi i16 [ %4545, %4544 ], [ %4499, %4504 ], [ %4499, %4498 ]
  %4548 = add nuw nsw i32 %4500, 1
  %4549 = zext i16 %4547 to i32
  %4550 = icmp ult i32 %4548, %4549
  br i1 %4550, label %4498, label %4551

4551:                                             ; preds = %4546
  %4552 = load ptr, ptr %3, align 4
  br label %4553

4553:                                             ; preds = %4551, %4491
  %4554 = phi ptr [ %4552, %4551 ], [ %4494, %4491 ]
  %4555 = getelementptr inbounds %struct.mxl5005s_state, ptr %4554, i32 0, i32 20
  %4556 = load i16, ptr %4555, align 2
  %4557 = icmp eq i16 %4556, 0
  br i1 %4557, label %4613, label %4558

4558:                                             ; preds = %4606, %4553
  %4559 = phi i16 [ %4607, %4606 ], [ %4556, %4553 ]
  %4560 = phi i32 [ %4608, %4606 ], [ 0, %4553 ]
  %4561 = getelementptr %struct.mxl5005s_state, ptr %4554, i32 0, i32 21, i32 %4560
  %4562 = load i16, ptr %4561, align 2
  %4563 = icmp eq i16 %4562, 60
  br i1 %4563, label %4564, label %4606

4564:                                             ; preds = %4558
  %4565 = getelementptr %struct.mxl5005s_state, ptr %4554, i32 0, i32 21, i32 %4560, i32 1
  %4566 = load i16, ptr %4565, align 2
  %4567 = icmp eq i16 %4566, 0
  br i1 %4567, label %4606, label %4568

4568:                                             ; preds = %4599, %4564
  %4569 = phi i32 [ %4600, %4599 ], [ 0, %4564 ]
  %4570 = getelementptr %struct.mxl5005s_state, ptr %4554, i32 0, i32 21, i32 %4560, i32 4, i32 %4569
  store i16 0, ptr %4570, align 2
  %4571 = getelementptr %struct.mxl5005s_state, ptr %4554, i32 0, i32 21, i32 %4560, i32 3, i32 %4569
  %4572 = load i16, ptr %4571, align 2
  %4573 = load ptr, ptr %3, align 4
  %4574 = getelementptr inbounds %struct.mxl5005s_state, ptr %4573, i32 0, i32 24
  %4575 = load i16, ptr %4574, align 4
  %4576 = zext i16 %4575 to i32
  %4577 = icmp eq i16 %4575, 0
  br i1 %4577, label %4599, label %4578

4578:                                             ; preds = %4568
  %4579 = getelementptr %struct.mxl5005s_state, ptr %4554, i32 0, i32 21, i32 %4560, i32 2, i32 %4569
  %4580 = load i16, ptr %4579, align 2
  %4581 = and i16 %4580, 255
  br label %4582

4582:                                             ; preds = %4596, %4578
  %4583 = phi i32 [ 0, %4578 ], [ %4597, %4596 ]
  %4584 = getelementptr %struct.mxl5005s_state, ptr %4573, i32 0, i32 25, i32 %4583
  %4585 = load i16, ptr %4584, align 2
  %4586 = icmp eq i16 %4585, %4581
  br i1 %4586, label %4587, label %4596

4587:                                             ; preds = %4582
  %4588 = and i16 %4572, 255
  %4589 = zext i16 %4588 to i32
  %4590 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4589
  %4591 = load i8, ptr %4590, align 1
  %4592 = zext i8 %4591 to i16
  %4593 = getelementptr %struct.mxl5005s_state, ptr %4573, i32 0, i32 25, i32 %4583, i32 1
  %4594 = load i16, ptr %4593, align 2
  %4595 = and i16 %4594, %4592
  store i16 %4595, ptr %4593, align 2
  br label %4599

4596:                                             ; preds = %4582
  %4597 = add nuw nsw i32 %4583, 1
  %4598 = icmp eq i32 %4597, %4576
  br i1 %4598, label %4599, label %4582

4599:                                             ; preds = %4596, %4587, %4568
  %4600 = add nuw nsw i32 %4569, 1
  %4601 = load i16, ptr %4565, align 2
  %4602 = zext i16 %4601 to i32
  %4603 = icmp ult i32 %4600, %4602
  br i1 %4603, label %4568, label %4604

4604:                                             ; preds = %4599
  %4605 = load i16, ptr %4555, align 2
  br label %4606

4606:                                             ; preds = %4604, %4564, %4558
  %4607 = phi i16 [ %4605, %4604 ], [ %4559, %4564 ], [ %4559, %4558 ]
  %4608 = add nuw nsw i32 %4560, 1
  %4609 = zext i16 %4607 to i32
  %4610 = icmp ult i32 %4608, %4609
  br i1 %4610, label %4558, label %4611

4611:                                             ; preds = %4606
  %4612 = load ptr, ptr %3, align 4
  br label %4613

4613:                                             ; preds = %4611, %4553
  %4614 = phi ptr [ %4612, %4611 ], [ %4554, %4553 ]
  %4615 = getelementptr inbounds %struct.mxl5005s_state, ptr %4614, i32 0, i32 18
  %4616 = load i16, ptr %4615, align 4
  %4617 = icmp eq i16 %4616, 0
  br i1 %4617, label %4673, label %4618

4618:                                             ; preds = %4666, %4613
  %4619 = phi i16 [ %4667, %4666 ], [ %4616, %4613 ]
  %4620 = phi i32 [ %4668, %4666 ], [ 0, %4613 ]
  %4621 = getelementptr %struct.mxl5005s_state, ptr %4614, i32 0, i32 19, i32 %4620
  %4622 = load i16, ptr %4621, align 2
  %4623 = icmp eq i16 %4622, 61
  br i1 %4623, label %4624, label %4666

4624:                                             ; preds = %4618
  %4625 = getelementptr %struct.mxl5005s_state, ptr %4614, i32 0, i32 19, i32 %4620, i32 1
  %4626 = load i16, ptr %4625, align 2
  %4627 = icmp eq i16 %4626, 0
  br i1 %4627, label %4666, label %4628

4628:                                             ; preds = %4659, %4624
  %4629 = phi i32 [ %4660, %4659 ], [ 0, %4624 ]
  %4630 = getelementptr %struct.mxl5005s_state, ptr %4614, i32 0, i32 19, i32 %4620, i32 4, i32 %4629
  store i16 0, ptr %4630, align 2
  %4631 = getelementptr %struct.mxl5005s_state, ptr %4614, i32 0, i32 19, i32 %4620, i32 3, i32 %4629
  %4632 = load i16, ptr %4631, align 2
  %4633 = load ptr, ptr %3, align 4
  %4634 = getelementptr inbounds %struct.mxl5005s_state, ptr %4633, i32 0, i32 24
  %4635 = load i16, ptr %4634, align 4
  %4636 = zext i16 %4635 to i32
  %4637 = icmp eq i16 %4635, 0
  br i1 %4637, label %4659, label %4638

4638:                                             ; preds = %4628
  %4639 = getelementptr %struct.mxl5005s_state, ptr %4614, i32 0, i32 19, i32 %4620, i32 2, i32 %4629
  %4640 = load i16, ptr %4639, align 2
  %4641 = and i16 %4640, 255
  br label %4642

4642:                                             ; preds = %4656, %4638
  %4643 = phi i32 [ 0, %4638 ], [ %4657, %4656 ]
  %4644 = getelementptr %struct.mxl5005s_state, ptr %4633, i32 0, i32 25, i32 %4643
  %4645 = load i16, ptr %4644, align 2
  %4646 = icmp eq i16 %4645, %4641
  br i1 %4646, label %4647, label %4656

4647:                                             ; preds = %4642
  %4648 = and i16 %4632, 255
  %4649 = zext i16 %4648 to i32
  %4650 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4649
  %4651 = load i8, ptr %4650, align 1
  %4652 = zext i8 %4651 to i16
  %4653 = getelementptr %struct.mxl5005s_state, ptr %4633, i32 0, i32 25, i32 %4643, i32 1
  %4654 = load i16, ptr %4653, align 2
  %4655 = and i16 %4654, %4652
  store i16 %4655, ptr %4653, align 2
  br label %4659

4656:                                             ; preds = %4642
  %4657 = add nuw nsw i32 %4643, 1
  %4658 = icmp eq i32 %4657, %4636
  br i1 %4658, label %4659, label %4642

4659:                                             ; preds = %4656, %4647, %4628
  %4660 = add nuw nsw i32 %4629, 1
  %4661 = load i16, ptr %4625, align 2
  %4662 = zext i16 %4661 to i32
  %4663 = icmp ult i32 %4660, %4662
  br i1 %4663, label %4628, label %4664

4664:                                             ; preds = %4659
  %4665 = load i16, ptr %4615, align 4
  br label %4666

4666:                                             ; preds = %4664, %4624, %4618
  %4667 = phi i16 [ %4665, %4664 ], [ %4619, %4624 ], [ %4619, %4618 ]
  %4668 = add nuw nsw i32 %4620, 1
  %4669 = zext i16 %4667 to i32
  %4670 = icmp ult i32 %4668, %4669
  br i1 %4670, label %4618, label %4671

4671:                                             ; preds = %4666
  %4672 = load ptr, ptr %3, align 4
  br label %4673

4673:                                             ; preds = %4671, %4613
  %4674 = phi ptr [ %4672, %4671 ], [ %4614, %4613 ]
  %4675 = getelementptr inbounds %struct.mxl5005s_state, ptr %4674, i32 0, i32 20
  %4676 = load i16, ptr %4675, align 2
  %4677 = icmp eq i16 %4676, 0
  br i1 %4677, label %4731, label %4678

4678:                                             ; preds = %4726, %4673
  %4679 = phi i16 [ %4727, %4726 ], [ %4676, %4673 ]
  %4680 = phi i32 [ %4728, %4726 ], [ 0, %4673 ]
  %4681 = getelementptr %struct.mxl5005s_state, ptr %4674, i32 0, i32 21, i32 %4680
  %4682 = load i16, ptr %4681, align 2
  %4683 = icmp eq i16 %4682, 61
  br i1 %4683, label %4684, label %4726

4684:                                             ; preds = %4678
  %4685 = getelementptr %struct.mxl5005s_state, ptr %4674, i32 0, i32 21, i32 %4680, i32 1
  %4686 = load i16, ptr %4685, align 2
  %4687 = icmp eq i16 %4686, 0
  br i1 %4687, label %4726, label %4688

4688:                                             ; preds = %4719, %4684
  %4689 = phi i32 [ %4720, %4719 ], [ 0, %4684 ]
  %4690 = getelementptr %struct.mxl5005s_state, ptr %4674, i32 0, i32 21, i32 %4680, i32 4, i32 %4689
  store i16 0, ptr %4690, align 2
  %4691 = getelementptr %struct.mxl5005s_state, ptr %4674, i32 0, i32 21, i32 %4680, i32 3, i32 %4689
  %4692 = load i16, ptr %4691, align 2
  %4693 = load ptr, ptr %3, align 4
  %4694 = getelementptr inbounds %struct.mxl5005s_state, ptr %4693, i32 0, i32 24
  %4695 = load i16, ptr %4694, align 4
  %4696 = zext i16 %4695 to i32
  %4697 = icmp eq i16 %4695, 0
  br i1 %4697, label %4719, label %4698

4698:                                             ; preds = %4688
  %4699 = getelementptr %struct.mxl5005s_state, ptr %4674, i32 0, i32 21, i32 %4680, i32 2, i32 %4689
  %4700 = load i16, ptr %4699, align 2
  %4701 = and i16 %4700, 255
  br label %4702

4702:                                             ; preds = %4716, %4698
  %4703 = phi i32 [ 0, %4698 ], [ %4717, %4716 ]
  %4704 = getelementptr %struct.mxl5005s_state, ptr %4693, i32 0, i32 25, i32 %4703
  %4705 = load i16, ptr %4704, align 2
  %4706 = icmp eq i16 %4705, %4701
  br i1 %4706, label %4707, label %4716

4707:                                             ; preds = %4702
  %4708 = and i16 %4692, 255
  %4709 = zext i16 %4708 to i32
  %4710 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4709
  %4711 = load i8, ptr %4710, align 1
  %4712 = zext i8 %4711 to i16
  %4713 = getelementptr %struct.mxl5005s_state, ptr %4693, i32 0, i32 25, i32 %4703, i32 1
  %4714 = load i16, ptr %4713, align 2
  %4715 = and i16 %4714, %4712
  store i16 %4715, ptr %4713, align 2
  br label %4719

4716:                                             ; preds = %4702
  %4717 = add nuw nsw i32 %4703, 1
  %4718 = icmp eq i32 %4717, %4696
  br i1 %4718, label %4719, label %4702

4719:                                             ; preds = %4716, %4707, %4688
  %4720 = add nuw nsw i32 %4689, 1
  %4721 = load i16, ptr %4685, align 2
  %4722 = zext i16 %4721 to i32
  %4723 = icmp ult i32 %4720, %4722
  br i1 %4723, label %4688, label %4724

4724:                                             ; preds = %4719
  %4725 = load i16, ptr %4675, align 2
  br label %4726

4726:                                             ; preds = %4724, %4684, %4678
  %4727 = phi i16 [ %4725, %4724 ], [ %4679, %4684 ], [ %4679, %4678 ]
  %4728 = add nuw nsw i32 %4680, 1
  %4729 = zext i16 %4727 to i32
  %4730 = icmp ult i32 %4728, %4729
  br i1 %4730, label %4678, label %4731

4731:                                             ; preds = %4726, %4673
  %4732 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %4733 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %4734 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 4, i16 noundef zeroext 1) #12
  %4735 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 63, i32 noundef 4, i16 noundef zeroext 2) #12
  %4736 = load i32, ptr %40, align 4
  br label %4737

4737:                                             ; preds = %4731, %4366
  %4738 = phi i32 [ %4736, %4731 ], [ %4367, %4366 ]
  %4739 = phi i32 [ 8, %4731 ], [ %4368, %4366 ]
  %4740 = phi i32 [ 340000000, %4731 ], [ %4369, %4366 ]
  %4741 = phi i32 [ -225000000, %4731 ], [ %4370, %4366 ]
  %4742 = add i32 %4738, -300000001
  %4743 = icmp ult i32 %4742, 40000000
  br i1 %4743, label %4744, label %5224

4744:                                             ; preds = %4737
  %4745 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 1) #12
  %4746 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 2) #12
  %4747 = load ptr, ptr %3, align 4
  %4748 = getelementptr inbounds %struct.mxl5005s_state, ptr %4747, i32 0, i32 18
  %4749 = load i16, ptr %4748, align 4
  %4750 = icmp eq i16 %4749, 0
  br i1 %4750, label %4806, label %4751

4751:                                             ; preds = %4799, %4744
  %4752 = phi i16 [ %4800, %4799 ], [ %4749, %4744 ]
  %4753 = phi i32 [ %4801, %4799 ], [ 0, %4744 ]
  %4754 = getelementptr %struct.mxl5005s_state, ptr %4747, i32 0, i32 19, i32 %4753
  %4755 = load i16, ptr %4754, align 2
  %4756 = icmp eq i16 %4755, 59
  br i1 %4756, label %4757, label %4799

4757:                                             ; preds = %4751
  %4758 = getelementptr %struct.mxl5005s_state, ptr %4747, i32 0, i32 19, i32 %4753, i32 1
  %4759 = load i16, ptr %4758, align 2
  %4760 = icmp eq i16 %4759, 0
  br i1 %4760, label %4799, label %4761

4761:                                             ; preds = %4792, %4757
  %4762 = phi i32 [ %4793, %4792 ], [ 0, %4757 ]
  %4763 = getelementptr %struct.mxl5005s_state, ptr %4747, i32 0, i32 19, i32 %4753, i32 4, i32 %4762
  store i16 0, ptr %4763, align 2
  %4764 = getelementptr %struct.mxl5005s_state, ptr %4747, i32 0, i32 19, i32 %4753, i32 3, i32 %4762
  %4765 = load i16, ptr %4764, align 2
  %4766 = load ptr, ptr %3, align 4
  %4767 = getelementptr inbounds %struct.mxl5005s_state, ptr %4766, i32 0, i32 24
  %4768 = load i16, ptr %4767, align 4
  %4769 = zext i16 %4768 to i32
  %4770 = icmp eq i16 %4768, 0
  br i1 %4770, label %4792, label %4771

4771:                                             ; preds = %4761
  %4772 = getelementptr %struct.mxl5005s_state, ptr %4747, i32 0, i32 19, i32 %4753, i32 2, i32 %4762
  %4773 = load i16, ptr %4772, align 2
  %4774 = and i16 %4773, 255
  br label %4775

4775:                                             ; preds = %4789, %4771
  %4776 = phi i32 [ 0, %4771 ], [ %4790, %4789 ]
  %4777 = getelementptr %struct.mxl5005s_state, ptr %4766, i32 0, i32 25, i32 %4776
  %4778 = load i16, ptr %4777, align 2
  %4779 = icmp eq i16 %4778, %4774
  br i1 %4779, label %4780, label %4789

4780:                                             ; preds = %4775
  %4781 = and i16 %4765, 255
  %4782 = zext i16 %4781 to i32
  %4783 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4782
  %4784 = load i8, ptr %4783, align 1
  %4785 = zext i8 %4784 to i16
  %4786 = getelementptr %struct.mxl5005s_state, ptr %4766, i32 0, i32 25, i32 %4776, i32 1
  %4787 = load i16, ptr %4786, align 2
  %4788 = and i16 %4787, %4785
  store i16 %4788, ptr %4786, align 2
  br label %4792

4789:                                             ; preds = %4775
  %4790 = add nuw nsw i32 %4776, 1
  %4791 = icmp eq i32 %4790, %4769
  br i1 %4791, label %4792, label %4775

4792:                                             ; preds = %4789, %4780, %4761
  %4793 = add nuw nsw i32 %4762, 1
  %4794 = load i16, ptr %4758, align 2
  %4795 = zext i16 %4794 to i32
  %4796 = icmp ult i32 %4793, %4795
  br i1 %4796, label %4761, label %4797

4797:                                             ; preds = %4792
  %4798 = load i16, ptr %4748, align 4
  br label %4799

4799:                                             ; preds = %4797, %4757, %4751
  %4800 = phi i16 [ %4798, %4797 ], [ %4752, %4757 ], [ %4752, %4751 ]
  %4801 = add nuw nsw i32 %4753, 1
  %4802 = zext i16 %4800 to i32
  %4803 = icmp ult i32 %4801, %4802
  br i1 %4803, label %4751, label %4804

4804:                                             ; preds = %4799
  %4805 = load ptr, ptr %3, align 4
  br label %4806

4806:                                             ; preds = %4804, %4744
  %4807 = phi ptr [ %4805, %4804 ], [ %4747, %4744 ]
  %4808 = getelementptr inbounds %struct.mxl5005s_state, ptr %4807, i32 0, i32 20
  %4809 = load i16, ptr %4808, align 2
  %4810 = icmp eq i16 %4809, 0
  br i1 %4810, label %4866, label %4811

4811:                                             ; preds = %4859, %4806
  %4812 = phi i16 [ %4860, %4859 ], [ %4809, %4806 ]
  %4813 = phi i32 [ %4861, %4859 ], [ 0, %4806 ]
  %4814 = getelementptr %struct.mxl5005s_state, ptr %4807, i32 0, i32 21, i32 %4813
  %4815 = load i16, ptr %4814, align 2
  %4816 = icmp eq i16 %4815, 59
  br i1 %4816, label %4817, label %4859

4817:                                             ; preds = %4811
  %4818 = getelementptr %struct.mxl5005s_state, ptr %4807, i32 0, i32 21, i32 %4813, i32 1
  %4819 = load i16, ptr %4818, align 2
  %4820 = icmp eq i16 %4819, 0
  br i1 %4820, label %4859, label %4821

4821:                                             ; preds = %4852, %4817
  %4822 = phi i32 [ %4853, %4852 ], [ 0, %4817 ]
  %4823 = getelementptr %struct.mxl5005s_state, ptr %4807, i32 0, i32 21, i32 %4813, i32 4, i32 %4822
  store i16 0, ptr %4823, align 2
  %4824 = getelementptr %struct.mxl5005s_state, ptr %4807, i32 0, i32 21, i32 %4813, i32 3, i32 %4822
  %4825 = load i16, ptr %4824, align 2
  %4826 = load ptr, ptr %3, align 4
  %4827 = getelementptr inbounds %struct.mxl5005s_state, ptr %4826, i32 0, i32 24
  %4828 = load i16, ptr %4827, align 4
  %4829 = zext i16 %4828 to i32
  %4830 = icmp eq i16 %4828, 0
  br i1 %4830, label %4852, label %4831

4831:                                             ; preds = %4821
  %4832 = getelementptr %struct.mxl5005s_state, ptr %4807, i32 0, i32 21, i32 %4813, i32 2, i32 %4822
  %4833 = load i16, ptr %4832, align 2
  %4834 = and i16 %4833, 255
  br label %4835

4835:                                             ; preds = %4849, %4831
  %4836 = phi i32 [ 0, %4831 ], [ %4850, %4849 ]
  %4837 = getelementptr %struct.mxl5005s_state, ptr %4826, i32 0, i32 25, i32 %4836
  %4838 = load i16, ptr %4837, align 2
  %4839 = icmp eq i16 %4838, %4834
  br i1 %4839, label %4840, label %4849

4840:                                             ; preds = %4835
  %4841 = and i16 %4825, 255
  %4842 = zext i16 %4841 to i32
  %4843 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4842
  %4844 = load i8, ptr %4843, align 1
  %4845 = zext i8 %4844 to i16
  %4846 = getelementptr %struct.mxl5005s_state, ptr %4826, i32 0, i32 25, i32 %4836, i32 1
  %4847 = load i16, ptr %4846, align 2
  %4848 = and i16 %4847, %4845
  store i16 %4848, ptr %4846, align 2
  br label %4852

4849:                                             ; preds = %4835
  %4850 = add nuw nsw i32 %4836, 1
  %4851 = icmp eq i32 %4850, %4829
  br i1 %4851, label %4852, label %4835

4852:                                             ; preds = %4849, %4840, %4821
  %4853 = add nuw nsw i32 %4822, 1
  %4854 = load i16, ptr %4818, align 2
  %4855 = zext i16 %4854 to i32
  %4856 = icmp ult i32 %4853, %4855
  br i1 %4856, label %4821, label %4857

4857:                                             ; preds = %4852
  %4858 = load i16, ptr %4808, align 2
  br label %4859

4859:                                             ; preds = %4857, %4817, %4811
  %4860 = phi i16 [ %4858, %4857 ], [ %4812, %4817 ], [ %4812, %4811 ]
  %4861 = add nuw nsw i32 %4813, 1
  %4862 = zext i16 %4860 to i32
  %4863 = icmp ult i32 %4861, %4862
  br i1 %4863, label %4811, label %4864

4864:                                             ; preds = %4859
  %4865 = load ptr, ptr %3, align 4
  br label %4866

4866:                                             ; preds = %4864, %4806
  %4867 = phi ptr [ %4865, %4864 ], [ %4807, %4806 ]
  %4868 = getelementptr inbounds %struct.mxl5005s_state, ptr %4867, i32 0, i32 18
  %4869 = load i16, ptr %4868, align 4
  %4870 = icmp eq i16 %4869, 0
  br i1 %4870, label %4926, label %4871

4871:                                             ; preds = %4919, %4866
  %4872 = phi i16 [ %4920, %4919 ], [ %4869, %4866 ]
  %4873 = phi i32 [ %4921, %4919 ], [ 0, %4866 ]
  %4874 = getelementptr %struct.mxl5005s_state, ptr %4867, i32 0, i32 19, i32 %4873
  %4875 = load i16, ptr %4874, align 2
  %4876 = icmp eq i16 %4875, 60
  br i1 %4876, label %4877, label %4919

4877:                                             ; preds = %4871
  %4878 = getelementptr %struct.mxl5005s_state, ptr %4867, i32 0, i32 19, i32 %4873, i32 1
  %4879 = load i16, ptr %4878, align 2
  %4880 = icmp eq i16 %4879, 0
  br i1 %4880, label %4919, label %4881

4881:                                             ; preds = %4912, %4877
  %4882 = phi i32 [ %4913, %4912 ], [ 0, %4877 ]
  %4883 = getelementptr %struct.mxl5005s_state, ptr %4867, i32 0, i32 19, i32 %4873, i32 4, i32 %4882
  store i16 0, ptr %4883, align 2
  %4884 = getelementptr %struct.mxl5005s_state, ptr %4867, i32 0, i32 19, i32 %4873, i32 3, i32 %4882
  %4885 = load i16, ptr %4884, align 2
  %4886 = load ptr, ptr %3, align 4
  %4887 = getelementptr inbounds %struct.mxl5005s_state, ptr %4886, i32 0, i32 24
  %4888 = load i16, ptr %4887, align 4
  %4889 = zext i16 %4888 to i32
  %4890 = icmp eq i16 %4888, 0
  br i1 %4890, label %4912, label %4891

4891:                                             ; preds = %4881
  %4892 = getelementptr %struct.mxl5005s_state, ptr %4867, i32 0, i32 19, i32 %4873, i32 2, i32 %4882
  %4893 = load i16, ptr %4892, align 2
  %4894 = and i16 %4893, 255
  br label %4895

4895:                                             ; preds = %4909, %4891
  %4896 = phi i32 [ 0, %4891 ], [ %4910, %4909 ]
  %4897 = getelementptr %struct.mxl5005s_state, ptr %4886, i32 0, i32 25, i32 %4896
  %4898 = load i16, ptr %4897, align 2
  %4899 = icmp eq i16 %4898, %4894
  br i1 %4899, label %4900, label %4909

4900:                                             ; preds = %4895
  %4901 = and i16 %4885, 255
  %4902 = zext i16 %4901 to i32
  %4903 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4902
  %4904 = load i8, ptr %4903, align 1
  %4905 = zext i8 %4904 to i16
  %4906 = getelementptr %struct.mxl5005s_state, ptr %4886, i32 0, i32 25, i32 %4896, i32 1
  %4907 = load i16, ptr %4906, align 2
  %4908 = and i16 %4907, %4905
  store i16 %4908, ptr %4906, align 2
  br label %4912

4909:                                             ; preds = %4895
  %4910 = add nuw nsw i32 %4896, 1
  %4911 = icmp eq i32 %4910, %4889
  br i1 %4911, label %4912, label %4895

4912:                                             ; preds = %4909, %4900, %4881
  %4913 = add nuw nsw i32 %4882, 1
  %4914 = load i16, ptr %4878, align 2
  %4915 = zext i16 %4914 to i32
  %4916 = icmp ult i32 %4913, %4915
  br i1 %4916, label %4881, label %4917

4917:                                             ; preds = %4912
  %4918 = load i16, ptr %4868, align 4
  br label %4919

4919:                                             ; preds = %4917, %4877, %4871
  %4920 = phi i16 [ %4918, %4917 ], [ %4872, %4877 ], [ %4872, %4871 ]
  %4921 = add nuw nsw i32 %4873, 1
  %4922 = zext i16 %4920 to i32
  %4923 = icmp ult i32 %4921, %4922
  br i1 %4923, label %4871, label %4924

4924:                                             ; preds = %4919
  %4925 = load ptr, ptr %3, align 4
  br label %4926

4926:                                             ; preds = %4924, %4866
  %4927 = phi ptr [ %4925, %4924 ], [ %4867, %4866 ]
  %4928 = getelementptr inbounds %struct.mxl5005s_state, ptr %4927, i32 0, i32 20
  %4929 = load i16, ptr %4928, align 2
  %4930 = icmp eq i16 %4929, 0
  br i1 %4930, label %4986, label %4931

4931:                                             ; preds = %4979, %4926
  %4932 = phi i16 [ %4980, %4979 ], [ %4929, %4926 ]
  %4933 = phi i32 [ %4981, %4979 ], [ 0, %4926 ]
  %4934 = getelementptr %struct.mxl5005s_state, ptr %4927, i32 0, i32 21, i32 %4933
  %4935 = load i16, ptr %4934, align 2
  %4936 = icmp eq i16 %4935, 60
  br i1 %4936, label %4937, label %4979

4937:                                             ; preds = %4931
  %4938 = getelementptr %struct.mxl5005s_state, ptr %4927, i32 0, i32 21, i32 %4933, i32 1
  %4939 = load i16, ptr %4938, align 2
  %4940 = icmp eq i16 %4939, 0
  br i1 %4940, label %4979, label %4941

4941:                                             ; preds = %4972, %4937
  %4942 = phi i32 [ %4973, %4972 ], [ 0, %4937 ]
  %4943 = getelementptr %struct.mxl5005s_state, ptr %4927, i32 0, i32 21, i32 %4933, i32 4, i32 %4942
  store i16 0, ptr %4943, align 2
  %4944 = getelementptr %struct.mxl5005s_state, ptr %4927, i32 0, i32 21, i32 %4933, i32 3, i32 %4942
  %4945 = load i16, ptr %4944, align 2
  %4946 = load ptr, ptr %3, align 4
  %4947 = getelementptr inbounds %struct.mxl5005s_state, ptr %4946, i32 0, i32 24
  %4948 = load i16, ptr %4947, align 4
  %4949 = zext i16 %4948 to i32
  %4950 = icmp eq i16 %4948, 0
  br i1 %4950, label %4972, label %4951

4951:                                             ; preds = %4941
  %4952 = getelementptr %struct.mxl5005s_state, ptr %4927, i32 0, i32 21, i32 %4933, i32 2, i32 %4942
  %4953 = load i16, ptr %4952, align 2
  %4954 = and i16 %4953, 255
  br label %4955

4955:                                             ; preds = %4969, %4951
  %4956 = phi i32 [ 0, %4951 ], [ %4970, %4969 ]
  %4957 = getelementptr %struct.mxl5005s_state, ptr %4946, i32 0, i32 25, i32 %4956
  %4958 = load i16, ptr %4957, align 2
  %4959 = icmp eq i16 %4958, %4954
  br i1 %4959, label %4960, label %4969

4960:                                             ; preds = %4955
  %4961 = and i16 %4945, 255
  %4962 = zext i16 %4961 to i32
  %4963 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %4962
  %4964 = load i8, ptr %4963, align 1
  %4965 = zext i8 %4964 to i16
  %4966 = getelementptr %struct.mxl5005s_state, ptr %4946, i32 0, i32 25, i32 %4956, i32 1
  %4967 = load i16, ptr %4966, align 2
  %4968 = and i16 %4967, %4965
  store i16 %4968, ptr %4966, align 2
  br label %4972

4969:                                             ; preds = %4955
  %4970 = add nuw nsw i32 %4956, 1
  %4971 = icmp eq i32 %4970, %4949
  br i1 %4971, label %4972, label %4955

4972:                                             ; preds = %4969, %4960, %4941
  %4973 = add nuw nsw i32 %4942, 1
  %4974 = load i16, ptr %4938, align 2
  %4975 = zext i16 %4974 to i32
  %4976 = icmp ult i32 %4973, %4975
  br i1 %4976, label %4941, label %4977

4977:                                             ; preds = %4972
  %4978 = load i16, ptr %4928, align 2
  br label %4979

4979:                                             ; preds = %4977, %4937, %4931
  %4980 = phi i16 [ %4978, %4977 ], [ %4932, %4937 ], [ %4932, %4931 ]
  %4981 = add nuw nsw i32 %4933, 1
  %4982 = zext i16 %4980 to i32
  %4983 = icmp ult i32 %4981, %4982
  br i1 %4983, label %4931, label %4984

4984:                                             ; preds = %4979
  %4985 = load ptr, ptr %3, align 4
  br label %4986

4986:                                             ; preds = %4984, %4926
  %4987 = phi ptr [ %4985, %4984 ], [ %4927, %4926 ]
  %4988 = getelementptr inbounds %struct.mxl5005s_state, ptr %4987, i32 0, i32 18
  %4989 = load i16, ptr %4988, align 4
  %4990 = icmp eq i16 %4989, 0
  br i1 %4990, label %5046, label %4991

4991:                                             ; preds = %5039, %4986
  %4992 = phi i16 [ %5040, %5039 ], [ %4989, %4986 ]
  %4993 = phi i32 [ %5041, %5039 ], [ 0, %4986 ]
  %4994 = getelementptr %struct.mxl5005s_state, ptr %4987, i32 0, i32 19, i32 %4993
  %4995 = load i16, ptr %4994, align 2
  %4996 = icmp eq i16 %4995, 61
  br i1 %4996, label %4997, label %5039

4997:                                             ; preds = %4991
  %4998 = getelementptr %struct.mxl5005s_state, ptr %4987, i32 0, i32 19, i32 %4993, i32 1
  %4999 = load i16, ptr %4998, align 2
  %5000 = icmp eq i16 %4999, 0
  br i1 %5000, label %5039, label %5001

5001:                                             ; preds = %5032, %4997
  %5002 = phi i32 [ %5033, %5032 ], [ 0, %4997 ]
  %5003 = getelementptr %struct.mxl5005s_state, ptr %4987, i32 0, i32 19, i32 %4993, i32 4, i32 %5002
  store i16 0, ptr %5003, align 2
  %5004 = getelementptr %struct.mxl5005s_state, ptr %4987, i32 0, i32 19, i32 %4993, i32 3, i32 %5002
  %5005 = load i16, ptr %5004, align 2
  %5006 = load ptr, ptr %3, align 4
  %5007 = getelementptr inbounds %struct.mxl5005s_state, ptr %5006, i32 0, i32 24
  %5008 = load i16, ptr %5007, align 4
  %5009 = zext i16 %5008 to i32
  %5010 = icmp eq i16 %5008, 0
  br i1 %5010, label %5032, label %5011

5011:                                             ; preds = %5001
  %5012 = getelementptr %struct.mxl5005s_state, ptr %4987, i32 0, i32 19, i32 %4993, i32 2, i32 %5002
  %5013 = load i16, ptr %5012, align 2
  %5014 = and i16 %5013, 255
  br label %5015

5015:                                             ; preds = %5029, %5011
  %5016 = phi i32 [ 0, %5011 ], [ %5030, %5029 ]
  %5017 = getelementptr %struct.mxl5005s_state, ptr %5006, i32 0, i32 25, i32 %5016
  %5018 = load i16, ptr %5017, align 2
  %5019 = icmp eq i16 %5018, %5014
  br i1 %5019, label %5020, label %5029

5020:                                             ; preds = %5015
  %5021 = and i16 %5005, 255
  %5022 = zext i16 %5021 to i32
  %5023 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5022
  %5024 = load i8, ptr %5023, align 1
  %5025 = zext i8 %5024 to i16
  %5026 = getelementptr %struct.mxl5005s_state, ptr %5006, i32 0, i32 25, i32 %5016, i32 1
  %5027 = load i16, ptr %5026, align 2
  %5028 = and i16 %5027, %5025
  store i16 %5028, ptr %5026, align 2
  br label %5032

5029:                                             ; preds = %5015
  %5030 = add nuw nsw i32 %5016, 1
  %5031 = icmp eq i32 %5030, %5009
  br i1 %5031, label %5032, label %5015

5032:                                             ; preds = %5029, %5020, %5001
  %5033 = add nuw nsw i32 %5002, 1
  %5034 = load i16, ptr %4998, align 2
  %5035 = zext i16 %5034 to i32
  %5036 = icmp ult i32 %5033, %5035
  br i1 %5036, label %5001, label %5037

5037:                                             ; preds = %5032
  %5038 = load i16, ptr %4988, align 4
  br label %5039

5039:                                             ; preds = %5037, %4997, %4991
  %5040 = phi i16 [ %5038, %5037 ], [ %4992, %4997 ], [ %4992, %4991 ]
  %5041 = add nuw nsw i32 %4993, 1
  %5042 = zext i16 %5040 to i32
  %5043 = icmp ult i32 %5041, %5042
  br i1 %5043, label %4991, label %5044

5044:                                             ; preds = %5039
  %5045 = load ptr, ptr %3, align 4
  br label %5046

5046:                                             ; preds = %5044, %4986
  %5047 = phi ptr [ %5045, %5044 ], [ %4987, %4986 ]
  %5048 = getelementptr inbounds %struct.mxl5005s_state, ptr %5047, i32 0, i32 20
  %5049 = load i16, ptr %5048, align 2
  %5050 = icmp eq i16 %5049, 0
  br i1 %5050, label %5104, label %5051

5051:                                             ; preds = %5099, %5046
  %5052 = phi i16 [ %5100, %5099 ], [ %5049, %5046 ]
  %5053 = phi i32 [ %5101, %5099 ], [ 0, %5046 ]
  %5054 = getelementptr %struct.mxl5005s_state, ptr %5047, i32 0, i32 21, i32 %5053
  %5055 = load i16, ptr %5054, align 2
  %5056 = icmp eq i16 %5055, 61
  br i1 %5056, label %5057, label %5099

5057:                                             ; preds = %5051
  %5058 = getelementptr %struct.mxl5005s_state, ptr %5047, i32 0, i32 21, i32 %5053, i32 1
  %5059 = load i16, ptr %5058, align 2
  %5060 = icmp eq i16 %5059, 0
  br i1 %5060, label %5099, label %5061

5061:                                             ; preds = %5092, %5057
  %5062 = phi i32 [ %5093, %5092 ], [ 0, %5057 ]
  %5063 = getelementptr %struct.mxl5005s_state, ptr %5047, i32 0, i32 21, i32 %5053, i32 4, i32 %5062
  store i16 0, ptr %5063, align 2
  %5064 = getelementptr %struct.mxl5005s_state, ptr %5047, i32 0, i32 21, i32 %5053, i32 3, i32 %5062
  %5065 = load i16, ptr %5064, align 2
  %5066 = load ptr, ptr %3, align 4
  %5067 = getelementptr inbounds %struct.mxl5005s_state, ptr %5066, i32 0, i32 24
  %5068 = load i16, ptr %5067, align 4
  %5069 = zext i16 %5068 to i32
  %5070 = icmp eq i16 %5068, 0
  br i1 %5070, label %5092, label %5071

5071:                                             ; preds = %5061
  %5072 = getelementptr %struct.mxl5005s_state, ptr %5047, i32 0, i32 21, i32 %5053, i32 2, i32 %5062
  %5073 = load i16, ptr %5072, align 2
  %5074 = and i16 %5073, 255
  br label %5075

5075:                                             ; preds = %5089, %5071
  %5076 = phi i32 [ 0, %5071 ], [ %5090, %5089 ]
  %5077 = getelementptr %struct.mxl5005s_state, ptr %5066, i32 0, i32 25, i32 %5076
  %5078 = load i16, ptr %5077, align 2
  %5079 = icmp eq i16 %5078, %5074
  br i1 %5079, label %5080, label %5089

5080:                                             ; preds = %5075
  %5081 = and i16 %5065, 255
  %5082 = zext i16 %5081 to i32
  %5083 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5082
  %5084 = load i8, ptr %5083, align 1
  %5085 = zext i8 %5084 to i16
  %5086 = getelementptr %struct.mxl5005s_state, ptr %5066, i32 0, i32 25, i32 %5076, i32 1
  %5087 = load i16, ptr %5086, align 2
  %5088 = and i16 %5087, %5085
  store i16 %5088, ptr %5086, align 2
  br label %5092

5089:                                             ; preds = %5075
  %5090 = add nuw nsw i32 %5076, 1
  %5091 = icmp eq i32 %5090, %5069
  br i1 %5091, label %5092, label %5075

5092:                                             ; preds = %5089, %5080, %5061
  %5093 = add nuw nsw i32 %5062, 1
  %5094 = load i16, ptr %5058, align 2
  %5095 = zext i16 %5094 to i32
  %5096 = icmp ult i32 %5093, %5095
  br i1 %5096, label %5061, label %5097

5097:                                             ; preds = %5092
  %5098 = load i16, ptr %5048, align 2
  br label %5099

5099:                                             ; preds = %5097, %5057, %5051
  %5100 = phi i16 [ %5098, %5097 ], [ %5052, %5057 ], [ %5052, %5051 ]
  %5101 = add nuw nsw i32 %5053, 1
  %5102 = zext i16 %5100 to i32
  %5103 = icmp ult i32 %5101, %5102
  br i1 %5103, label %5051, label %5104

5104:                                             ; preds = %5099, %5046
  %5105 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %5106 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %5107 = load ptr, ptr %3, align 4
  %5108 = getelementptr inbounds %struct.mxl5005s_state, ptr %5107, i32 0, i32 18
  %5109 = load i16, ptr %5108, align 4
  %5110 = icmp eq i16 %5109, 0
  br i1 %5110, label %5166, label %5111

5111:                                             ; preds = %5159, %5104
  %5112 = phi i16 [ %5160, %5159 ], [ %5109, %5104 ]
  %5113 = phi i32 [ %5161, %5159 ], [ 0, %5104 ]
  %5114 = getelementptr %struct.mxl5005s_state, ptr %5107, i32 0, i32 19, i32 %5113
  %5115 = load i16, ptr %5114, align 2
  %5116 = icmp eq i16 %5115, 63
  br i1 %5116, label %5117, label %5159

5117:                                             ; preds = %5111
  %5118 = getelementptr %struct.mxl5005s_state, ptr %5107, i32 0, i32 19, i32 %5113, i32 1
  %5119 = load i16, ptr %5118, align 2
  %5120 = icmp eq i16 %5119, 0
  br i1 %5120, label %5159, label %5121

5121:                                             ; preds = %5152, %5117
  %5122 = phi i32 [ %5153, %5152 ], [ 0, %5117 ]
  %5123 = getelementptr %struct.mxl5005s_state, ptr %5107, i32 0, i32 19, i32 %5113, i32 4, i32 %5122
  store i16 0, ptr %5123, align 2
  %5124 = getelementptr %struct.mxl5005s_state, ptr %5107, i32 0, i32 19, i32 %5113, i32 3, i32 %5122
  %5125 = load i16, ptr %5124, align 2
  %5126 = load ptr, ptr %3, align 4
  %5127 = getelementptr inbounds %struct.mxl5005s_state, ptr %5126, i32 0, i32 24
  %5128 = load i16, ptr %5127, align 4
  %5129 = zext i16 %5128 to i32
  %5130 = icmp eq i16 %5128, 0
  br i1 %5130, label %5152, label %5131

5131:                                             ; preds = %5121
  %5132 = getelementptr %struct.mxl5005s_state, ptr %5107, i32 0, i32 19, i32 %5113, i32 2, i32 %5122
  %5133 = load i16, ptr %5132, align 2
  %5134 = and i16 %5133, 255
  br label %5135

5135:                                             ; preds = %5149, %5131
  %5136 = phi i32 [ 0, %5131 ], [ %5150, %5149 ]
  %5137 = getelementptr %struct.mxl5005s_state, ptr %5126, i32 0, i32 25, i32 %5136
  %5138 = load i16, ptr %5137, align 2
  %5139 = icmp eq i16 %5138, %5134
  br i1 %5139, label %5140, label %5149

5140:                                             ; preds = %5135
  %5141 = and i16 %5125, 255
  %5142 = zext i16 %5141 to i32
  %5143 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5142
  %5144 = load i8, ptr %5143, align 1
  %5145 = zext i8 %5144 to i16
  %5146 = getelementptr %struct.mxl5005s_state, ptr %5126, i32 0, i32 25, i32 %5136, i32 1
  %5147 = load i16, ptr %5146, align 2
  %5148 = and i16 %5147, %5145
  store i16 %5148, ptr %5146, align 2
  br label %5152

5149:                                             ; preds = %5135
  %5150 = add nuw nsw i32 %5136, 1
  %5151 = icmp eq i32 %5150, %5129
  br i1 %5151, label %5152, label %5135

5152:                                             ; preds = %5149, %5140, %5121
  %5153 = add nuw nsw i32 %5122, 1
  %5154 = load i16, ptr %5118, align 2
  %5155 = zext i16 %5154 to i32
  %5156 = icmp ult i32 %5153, %5155
  br i1 %5156, label %5121, label %5157

5157:                                             ; preds = %5152
  %5158 = load i16, ptr %5108, align 4
  br label %5159

5159:                                             ; preds = %5157, %5117, %5111
  %5160 = phi i16 [ %5158, %5157 ], [ %5112, %5117 ], [ %5112, %5111 ]
  %5161 = add nuw nsw i32 %5113, 1
  %5162 = zext i16 %5160 to i32
  %5163 = icmp ult i32 %5161, %5162
  br i1 %5163, label %5111, label %5164

5164:                                             ; preds = %5159
  %5165 = load ptr, ptr %3, align 4
  br label %5166

5166:                                             ; preds = %5164, %5104
  %5167 = phi ptr [ %5165, %5164 ], [ %5107, %5104 ]
  %5168 = getelementptr inbounds %struct.mxl5005s_state, ptr %5167, i32 0, i32 20
  %5169 = load i16, ptr %5168, align 2
  %5170 = icmp eq i16 %5169, 0
  br i1 %5170, label %5224, label %5171

5171:                                             ; preds = %5219, %5166
  %5172 = phi i16 [ %5220, %5219 ], [ %5169, %5166 ]
  %5173 = phi i32 [ %5221, %5219 ], [ 0, %5166 ]
  %5174 = getelementptr %struct.mxl5005s_state, ptr %5167, i32 0, i32 21, i32 %5173
  %5175 = load i16, ptr %5174, align 2
  %5176 = icmp eq i16 %5175, 63
  br i1 %5176, label %5177, label %5219

5177:                                             ; preds = %5171
  %5178 = getelementptr %struct.mxl5005s_state, ptr %5167, i32 0, i32 21, i32 %5173, i32 1
  %5179 = load i16, ptr %5178, align 2
  %5180 = icmp eq i16 %5179, 0
  br i1 %5180, label %5219, label %5181

5181:                                             ; preds = %5212, %5177
  %5182 = phi i32 [ %5213, %5212 ], [ 0, %5177 ]
  %5183 = getelementptr %struct.mxl5005s_state, ptr %5167, i32 0, i32 21, i32 %5173, i32 4, i32 %5182
  store i16 0, ptr %5183, align 2
  %5184 = getelementptr %struct.mxl5005s_state, ptr %5167, i32 0, i32 21, i32 %5173, i32 3, i32 %5182
  %5185 = load i16, ptr %5184, align 2
  %5186 = load ptr, ptr %3, align 4
  %5187 = getelementptr inbounds %struct.mxl5005s_state, ptr %5186, i32 0, i32 24
  %5188 = load i16, ptr %5187, align 4
  %5189 = zext i16 %5188 to i32
  %5190 = icmp eq i16 %5188, 0
  br i1 %5190, label %5212, label %5191

5191:                                             ; preds = %5181
  %5192 = getelementptr %struct.mxl5005s_state, ptr %5167, i32 0, i32 21, i32 %5173, i32 2, i32 %5182
  %5193 = load i16, ptr %5192, align 2
  %5194 = and i16 %5193, 255
  br label %5195

5195:                                             ; preds = %5209, %5191
  %5196 = phi i32 [ 0, %5191 ], [ %5210, %5209 ]
  %5197 = getelementptr %struct.mxl5005s_state, ptr %5186, i32 0, i32 25, i32 %5196
  %5198 = load i16, ptr %5197, align 2
  %5199 = icmp eq i16 %5198, %5194
  br i1 %5199, label %5200, label %5209

5200:                                             ; preds = %5195
  %5201 = and i16 %5185, 255
  %5202 = zext i16 %5201 to i32
  %5203 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5202
  %5204 = load i8, ptr %5203, align 1
  %5205 = zext i8 %5204 to i16
  %5206 = getelementptr %struct.mxl5005s_state, ptr %5186, i32 0, i32 25, i32 %5196, i32 1
  %5207 = load i16, ptr %5206, align 2
  %5208 = and i16 %5207, %5205
  store i16 %5208, ptr %5206, align 2
  br label %5212

5209:                                             ; preds = %5195
  %5210 = add nuw nsw i32 %5196, 1
  %5211 = icmp eq i32 %5210, %5189
  br i1 %5211, label %5212, label %5195

5212:                                             ; preds = %5209, %5200, %5181
  %5213 = add nuw nsw i32 %5182, 1
  %5214 = load i16, ptr %5178, align 2
  %5215 = zext i16 %5214 to i32
  %5216 = icmp ult i32 %5213, %5215
  br i1 %5216, label %5181, label %5217

5217:                                             ; preds = %5212
  %5218 = load i16, ptr %5168, align 2
  br label %5219

5219:                                             ; preds = %5217, %5177, %5171
  %5220 = phi i16 [ %5218, %5217 ], [ %5172, %5177 ], [ %5172, %5171 ]
  %5221 = add nuw nsw i32 %5173, 1
  %5222 = zext i16 %5220 to i32
  %5223 = icmp ult i32 %5221, %5222
  br i1 %5223, label %5171, label %5224

5224:                                             ; preds = %5219, %5166, %4737
  %5225 = phi i32 [ %4739, %4737 ], [ 8, %5166 ], [ 8, %5219 ]
  %5226 = phi i32 [ %4740, %4737 ], [ 340000000, %5166 ], [ 340000000, %5219 ]
  %5227 = phi i32 [ %4741, %4737 ], [ -225000000, %5166 ], [ -225000000, %5219 ]
  %5228 = load i32, ptr %40, align 4
  %5229 = add i32 %5228, -340000001
  %5230 = icmp ult i32 %5229, 110000000
  br i1 %5230, label %5231, label %5591

5231:                                             ; preds = %5224
  %5232 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 1) #12
  %5233 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 58, i32 noundef 1, i16 noundef zeroext 2) #12
  %5234 = load ptr, ptr %3, align 4
  %5235 = getelementptr inbounds %struct.mxl5005s_state, ptr %5234, i32 0, i32 18
  %5236 = load i16, ptr %5235, align 4
  %5237 = icmp eq i16 %5236, 0
  br i1 %5237, label %5293, label %5238

5238:                                             ; preds = %5286, %5231
  %5239 = phi i16 [ %5287, %5286 ], [ %5236, %5231 ]
  %5240 = phi i32 [ %5288, %5286 ], [ 0, %5231 ]
  %5241 = getelementptr %struct.mxl5005s_state, ptr %5234, i32 0, i32 19, i32 %5240
  %5242 = load i16, ptr %5241, align 2
  %5243 = icmp eq i16 %5242, 59
  br i1 %5243, label %5244, label %5286

5244:                                             ; preds = %5238
  %5245 = getelementptr %struct.mxl5005s_state, ptr %5234, i32 0, i32 19, i32 %5240, i32 1
  %5246 = load i16, ptr %5245, align 2
  %5247 = icmp eq i16 %5246, 0
  br i1 %5247, label %5286, label %5248

5248:                                             ; preds = %5279, %5244
  %5249 = phi i32 [ %5280, %5279 ], [ 0, %5244 ]
  %5250 = getelementptr %struct.mxl5005s_state, ptr %5234, i32 0, i32 19, i32 %5240, i32 4, i32 %5249
  store i16 0, ptr %5250, align 2
  %5251 = getelementptr %struct.mxl5005s_state, ptr %5234, i32 0, i32 19, i32 %5240, i32 3, i32 %5249
  %5252 = load i16, ptr %5251, align 2
  %5253 = load ptr, ptr %3, align 4
  %5254 = getelementptr inbounds %struct.mxl5005s_state, ptr %5253, i32 0, i32 24
  %5255 = load i16, ptr %5254, align 4
  %5256 = zext i16 %5255 to i32
  %5257 = icmp eq i16 %5255, 0
  br i1 %5257, label %5279, label %5258

5258:                                             ; preds = %5248
  %5259 = getelementptr %struct.mxl5005s_state, ptr %5234, i32 0, i32 19, i32 %5240, i32 2, i32 %5249
  %5260 = load i16, ptr %5259, align 2
  %5261 = and i16 %5260, 255
  br label %5262

5262:                                             ; preds = %5276, %5258
  %5263 = phi i32 [ 0, %5258 ], [ %5277, %5276 ]
  %5264 = getelementptr %struct.mxl5005s_state, ptr %5253, i32 0, i32 25, i32 %5263
  %5265 = load i16, ptr %5264, align 2
  %5266 = icmp eq i16 %5265, %5261
  br i1 %5266, label %5267, label %5276

5267:                                             ; preds = %5262
  %5268 = and i16 %5252, 255
  %5269 = zext i16 %5268 to i32
  %5270 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5269
  %5271 = load i8, ptr %5270, align 1
  %5272 = zext i8 %5271 to i16
  %5273 = getelementptr %struct.mxl5005s_state, ptr %5253, i32 0, i32 25, i32 %5263, i32 1
  %5274 = load i16, ptr %5273, align 2
  %5275 = and i16 %5274, %5272
  store i16 %5275, ptr %5273, align 2
  br label %5279

5276:                                             ; preds = %5262
  %5277 = add nuw nsw i32 %5263, 1
  %5278 = icmp eq i32 %5277, %5256
  br i1 %5278, label %5279, label %5262

5279:                                             ; preds = %5276, %5267, %5248
  %5280 = add nuw nsw i32 %5249, 1
  %5281 = load i16, ptr %5245, align 2
  %5282 = zext i16 %5281 to i32
  %5283 = icmp ult i32 %5280, %5282
  br i1 %5283, label %5248, label %5284

5284:                                             ; preds = %5279
  %5285 = load i16, ptr %5235, align 4
  br label %5286

5286:                                             ; preds = %5284, %5244, %5238
  %5287 = phi i16 [ %5285, %5284 ], [ %5239, %5244 ], [ %5239, %5238 ]
  %5288 = add nuw nsw i32 %5240, 1
  %5289 = zext i16 %5287 to i32
  %5290 = icmp ult i32 %5288, %5289
  br i1 %5290, label %5238, label %5291

5291:                                             ; preds = %5286
  %5292 = load ptr, ptr %3, align 4
  br label %5293

5293:                                             ; preds = %5291, %5231
  %5294 = phi ptr [ %5292, %5291 ], [ %5234, %5231 ]
  %5295 = getelementptr inbounds %struct.mxl5005s_state, ptr %5294, i32 0, i32 20
  %5296 = load i16, ptr %5295, align 2
  %5297 = icmp eq i16 %5296, 0
  br i1 %5297, label %5351, label %5298

5298:                                             ; preds = %5346, %5293
  %5299 = phi i16 [ %5347, %5346 ], [ %5296, %5293 ]
  %5300 = phi i32 [ %5348, %5346 ], [ 0, %5293 ]
  %5301 = getelementptr %struct.mxl5005s_state, ptr %5294, i32 0, i32 21, i32 %5300
  %5302 = load i16, ptr %5301, align 2
  %5303 = icmp eq i16 %5302, 59
  br i1 %5303, label %5304, label %5346

5304:                                             ; preds = %5298
  %5305 = getelementptr %struct.mxl5005s_state, ptr %5294, i32 0, i32 21, i32 %5300, i32 1
  %5306 = load i16, ptr %5305, align 2
  %5307 = icmp eq i16 %5306, 0
  br i1 %5307, label %5346, label %5308

5308:                                             ; preds = %5339, %5304
  %5309 = phi i32 [ %5340, %5339 ], [ 0, %5304 ]
  %5310 = getelementptr %struct.mxl5005s_state, ptr %5294, i32 0, i32 21, i32 %5300, i32 4, i32 %5309
  store i16 0, ptr %5310, align 2
  %5311 = getelementptr %struct.mxl5005s_state, ptr %5294, i32 0, i32 21, i32 %5300, i32 3, i32 %5309
  %5312 = load i16, ptr %5311, align 2
  %5313 = load ptr, ptr %3, align 4
  %5314 = getelementptr inbounds %struct.mxl5005s_state, ptr %5313, i32 0, i32 24
  %5315 = load i16, ptr %5314, align 4
  %5316 = zext i16 %5315 to i32
  %5317 = icmp eq i16 %5315, 0
  br i1 %5317, label %5339, label %5318

5318:                                             ; preds = %5308
  %5319 = getelementptr %struct.mxl5005s_state, ptr %5294, i32 0, i32 21, i32 %5300, i32 2, i32 %5309
  %5320 = load i16, ptr %5319, align 2
  %5321 = and i16 %5320, 255
  br label %5322

5322:                                             ; preds = %5336, %5318
  %5323 = phi i32 [ 0, %5318 ], [ %5337, %5336 ]
  %5324 = getelementptr %struct.mxl5005s_state, ptr %5313, i32 0, i32 25, i32 %5323
  %5325 = load i16, ptr %5324, align 2
  %5326 = icmp eq i16 %5325, %5321
  br i1 %5326, label %5327, label %5336

5327:                                             ; preds = %5322
  %5328 = and i16 %5312, 255
  %5329 = zext i16 %5328 to i32
  %5330 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5329
  %5331 = load i8, ptr %5330, align 1
  %5332 = zext i8 %5331 to i16
  %5333 = getelementptr %struct.mxl5005s_state, ptr %5313, i32 0, i32 25, i32 %5323, i32 1
  %5334 = load i16, ptr %5333, align 2
  %5335 = and i16 %5334, %5332
  store i16 %5335, ptr %5333, align 2
  br label %5339

5336:                                             ; preds = %5322
  %5337 = add nuw nsw i32 %5323, 1
  %5338 = icmp eq i32 %5337, %5316
  br i1 %5338, label %5339, label %5322

5339:                                             ; preds = %5336, %5327, %5308
  %5340 = add nuw nsw i32 %5309, 1
  %5341 = load i16, ptr %5305, align 2
  %5342 = zext i16 %5341 to i32
  %5343 = icmp ult i32 %5340, %5342
  br i1 %5343, label %5308, label %5344

5344:                                             ; preds = %5339
  %5345 = load i16, ptr %5295, align 2
  br label %5346

5346:                                             ; preds = %5344, %5304, %5298
  %5347 = phi i16 [ %5345, %5344 ], [ %5299, %5304 ], [ %5299, %5298 ]
  %5348 = add nuw nsw i32 %5300, 1
  %5349 = zext i16 %5347 to i32
  %5350 = icmp ult i32 %5348, %5349
  br i1 %5350, label %5298, label %5351

5351:                                             ; preds = %5346, %5293
  %5352 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 1) #12
  %5353 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 2) #12
  %5354 = load ptr, ptr %3, align 4
  %5355 = getelementptr inbounds %struct.mxl5005s_state, ptr %5354, i32 0, i32 18
  %5356 = load i16, ptr %5355, align 4
  %5357 = icmp eq i16 %5356, 0
  br i1 %5357, label %5413, label %5358

5358:                                             ; preds = %5406, %5351
  %5359 = phi i16 [ %5407, %5406 ], [ %5356, %5351 ]
  %5360 = phi i32 [ %5408, %5406 ], [ 0, %5351 ]
  %5361 = getelementptr %struct.mxl5005s_state, ptr %5354, i32 0, i32 19, i32 %5360
  %5362 = load i16, ptr %5361, align 2
  %5363 = icmp eq i16 %5362, 61
  br i1 %5363, label %5364, label %5406

5364:                                             ; preds = %5358
  %5365 = getelementptr %struct.mxl5005s_state, ptr %5354, i32 0, i32 19, i32 %5360, i32 1
  %5366 = load i16, ptr %5365, align 2
  %5367 = icmp eq i16 %5366, 0
  br i1 %5367, label %5406, label %5368

5368:                                             ; preds = %5399, %5364
  %5369 = phi i32 [ %5400, %5399 ], [ 0, %5364 ]
  %5370 = getelementptr %struct.mxl5005s_state, ptr %5354, i32 0, i32 19, i32 %5360, i32 4, i32 %5369
  store i16 0, ptr %5370, align 2
  %5371 = getelementptr %struct.mxl5005s_state, ptr %5354, i32 0, i32 19, i32 %5360, i32 3, i32 %5369
  %5372 = load i16, ptr %5371, align 2
  %5373 = load ptr, ptr %3, align 4
  %5374 = getelementptr inbounds %struct.mxl5005s_state, ptr %5373, i32 0, i32 24
  %5375 = load i16, ptr %5374, align 4
  %5376 = zext i16 %5375 to i32
  %5377 = icmp eq i16 %5375, 0
  br i1 %5377, label %5399, label %5378

5378:                                             ; preds = %5368
  %5379 = getelementptr %struct.mxl5005s_state, ptr %5354, i32 0, i32 19, i32 %5360, i32 2, i32 %5369
  %5380 = load i16, ptr %5379, align 2
  %5381 = and i16 %5380, 255
  br label %5382

5382:                                             ; preds = %5396, %5378
  %5383 = phi i32 [ 0, %5378 ], [ %5397, %5396 ]
  %5384 = getelementptr %struct.mxl5005s_state, ptr %5373, i32 0, i32 25, i32 %5383
  %5385 = load i16, ptr %5384, align 2
  %5386 = icmp eq i16 %5385, %5381
  br i1 %5386, label %5387, label %5396

5387:                                             ; preds = %5382
  %5388 = and i16 %5372, 255
  %5389 = zext i16 %5388 to i32
  %5390 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5389
  %5391 = load i8, ptr %5390, align 1
  %5392 = zext i8 %5391 to i16
  %5393 = getelementptr %struct.mxl5005s_state, ptr %5373, i32 0, i32 25, i32 %5383, i32 1
  %5394 = load i16, ptr %5393, align 2
  %5395 = and i16 %5394, %5392
  store i16 %5395, ptr %5393, align 2
  br label %5399

5396:                                             ; preds = %5382
  %5397 = add nuw nsw i32 %5383, 1
  %5398 = icmp eq i32 %5397, %5376
  br i1 %5398, label %5399, label %5382

5399:                                             ; preds = %5396, %5387, %5368
  %5400 = add nuw nsw i32 %5369, 1
  %5401 = load i16, ptr %5365, align 2
  %5402 = zext i16 %5401 to i32
  %5403 = icmp ult i32 %5400, %5402
  br i1 %5403, label %5368, label %5404

5404:                                             ; preds = %5399
  %5405 = load i16, ptr %5355, align 4
  br label %5406

5406:                                             ; preds = %5404, %5364, %5358
  %5407 = phi i16 [ %5405, %5404 ], [ %5359, %5364 ], [ %5359, %5358 ]
  %5408 = add nuw nsw i32 %5360, 1
  %5409 = zext i16 %5407 to i32
  %5410 = icmp ult i32 %5408, %5409
  br i1 %5410, label %5358, label %5411

5411:                                             ; preds = %5406
  %5412 = load ptr, ptr %3, align 4
  br label %5413

5413:                                             ; preds = %5411, %5351
  %5414 = phi ptr [ %5412, %5411 ], [ %5354, %5351 ]
  %5415 = getelementptr inbounds %struct.mxl5005s_state, ptr %5414, i32 0, i32 20
  %5416 = load i16, ptr %5415, align 2
  %5417 = icmp eq i16 %5416, 0
  br i1 %5417, label %5471, label %5418

5418:                                             ; preds = %5466, %5413
  %5419 = phi i16 [ %5467, %5466 ], [ %5416, %5413 ]
  %5420 = phi i32 [ %5468, %5466 ], [ 0, %5413 ]
  %5421 = getelementptr %struct.mxl5005s_state, ptr %5414, i32 0, i32 21, i32 %5420
  %5422 = load i16, ptr %5421, align 2
  %5423 = icmp eq i16 %5422, 61
  br i1 %5423, label %5424, label %5466

5424:                                             ; preds = %5418
  %5425 = getelementptr %struct.mxl5005s_state, ptr %5414, i32 0, i32 21, i32 %5420, i32 1
  %5426 = load i16, ptr %5425, align 2
  %5427 = icmp eq i16 %5426, 0
  br i1 %5427, label %5466, label %5428

5428:                                             ; preds = %5459, %5424
  %5429 = phi i32 [ %5460, %5459 ], [ 0, %5424 ]
  %5430 = getelementptr %struct.mxl5005s_state, ptr %5414, i32 0, i32 21, i32 %5420, i32 4, i32 %5429
  store i16 0, ptr %5430, align 2
  %5431 = getelementptr %struct.mxl5005s_state, ptr %5414, i32 0, i32 21, i32 %5420, i32 3, i32 %5429
  %5432 = load i16, ptr %5431, align 2
  %5433 = load ptr, ptr %3, align 4
  %5434 = getelementptr inbounds %struct.mxl5005s_state, ptr %5433, i32 0, i32 24
  %5435 = load i16, ptr %5434, align 4
  %5436 = zext i16 %5435 to i32
  %5437 = icmp eq i16 %5435, 0
  br i1 %5437, label %5459, label %5438

5438:                                             ; preds = %5428
  %5439 = getelementptr %struct.mxl5005s_state, ptr %5414, i32 0, i32 21, i32 %5420, i32 2, i32 %5429
  %5440 = load i16, ptr %5439, align 2
  %5441 = and i16 %5440, 255
  br label %5442

5442:                                             ; preds = %5456, %5438
  %5443 = phi i32 [ 0, %5438 ], [ %5457, %5456 ]
  %5444 = getelementptr %struct.mxl5005s_state, ptr %5433, i32 0, i32 25, i32 %5443
  %5445 = load i16, ptr %5444, align 2
  %5446 = icmp eq i16 %5445, %5441
  br i1 %5446, label %5447, label %5456

5447:                                             ; preds = %5442
  %5448 = and i16 %5432, 255
  %5449 = zext i16 %5448 to i32
  %5450 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5449
  %5451 = load i8, ptr %5450, align 1
  %5452 = zext i8 %5451 to i16
  %5453 = getelementptr %struct.mxl5005s_state, ptr %5433, i32 0, i32 25, i32 %5443, i32 1
  %5454 = load i16, ptr %5453, align 2
  %5455 = and i16 %5454, %5452
  store i16 %5455, ptr %5453, align 2
  br label %5459

5456:                                             ; preds = %5442
  %5457 = add nuw nsw i32 %5443, 1
  %5458 = icmp eq i32 %5457, %5436
  br i1 %5458, label %5459, label %5442

5459:                                             ; preds = %5456, %5447, %5428
  %5460 = add nuw nsw i32 %5429, 1
  %5461 = load i16, ptr %5425, align 2
  %5462 = zext i16 %5461 to i32
  %5463 = icmp ult i32 %5460, %5462
  br i1 %5463, label %5428, label %5464

5464:                                             ; preds = %5459
  %5465 = load i16, ptr %5415, align 2
  br label %5466

5466:                                             ; preds = %5464, %5424, %5418
  %5467 = phi i16 [ %5465, %5464 ], [ %5419, %5424 ], [ %5419, %5418 ]
  %5468 = add nuw nsw i32 %5420, 1
  %5469 = zext i16 %5467 to i32
  %5470 = icmp ult i32 %5468, %5469
  br i1 %5470, label %5418, label %5471

5471:                                             ; preds = %5466, %5413
  %5472 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 2, i16 noundef zeroext 1) #12
  %5473 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 2, i16 noundef zeroext 2) #12
  %5474 = load ptr, ptr %3, align 4
  %5475 = getelementptr inbounds %struct.mxl5005s_state, ptr %5474, i32 0, i32 18
  %5476 = load i16, ptr %5475, align 4
  %5477 = icmp eq i16 %5476, 0
  br i1 %5477, label %5533, label %5478

5478:                                             ; preds = %5526, %5471
  %5479 = phi i16 [ %5527, %5526 ], [ %5476, %5471 ]
  %5480 = phi i32 [ %5528, %5526 ], [ 0, %5471 ]
  %5481 = getelementptr %struct.mxl5005s_state, ptr %5474, i32 0, i32 19, i32 %5480
  %5482 = load i16, ptr %5481, align 2
  %5483 = icmp eq i16 %5482, 63
  br i1 %5483, label %5484, label %5526

5484:                                             ; preds = %5478
  %5485 = getelementptr %struct.mxl5005s_state, ptr %5474, i32 0, i32 19, i32 %5480, i32 1
  %5486 = load i16, ptr %5485, align 2
  %5487 = icmp eq i16 %5486, 0
  br i1 %5487, label %5526, label %5488

5488:                                             ; preds = %5519, %5484
  %5489 = phi i32 [ %5520, %5519 ], [ 0, %5484 ]
  %5490 = getelementptr %struct.mxl5005s_state, ptr %5474, i32 0, i32 19, i32 %5480, i32 4, i32 %5489
  store i16 0, ptr %5490, align 2
  %5491 = getelementptr %struct.mxl5005s_state, ptr %5474, i32 0, i32 19, i32 %5480, i32 3, i32 %5489
  %5492 = load i16, ptr %5491, align 2
  %5493 = load ptr, ptr %3, align 4
  %5494 = getelementptr inbounds %struct.mxl5005s_state, ptr %5493, i32 0, i32 24
  %5495 = load i16, ptr %5494, align 4
  %5496 = zext i16 %5495 to i32
  %5497 = icmp eq i16 %5495, 0
  br i1 %5497, label %5519, label %5498

5498:                                             ; preds = %5488
  %5499 = getelementptr %struct.mxl5005s_state, ptr %5474, i32 0, i32 19, i32 %5480, i32 2, i32 %5489
  %5500 = load i16, ptr %5499, align 2
  %5501 = and i16 %5500, 255
  br label %5502

5502:                                             ; preds = %5516, %5498
  %5503 = phi i32 [ 0, %5498 ], [ %5517, %5516 ]
  %5504 = getelementptr %struct.mxl5005s_state, ptr %5493, i32 0, i32 25, i32 %5503
  %5505 = load i16, ptr %5504, align 2
  %5506 = icmp eq i16 %5505, %5501
  br i1 %5506, label %5507, label %5516

5507:                                             ; preds = %5502
  %5508 = and i16 %5492, 255
  %5509 = zext i16 %5508 to i32
  %5510 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5509
  %5511 = load i8, ptr %5510, align 1
  %5512 = zext i8 %5511 to i16
  %5513 = getelementptr %struct.mxl5005s_state, ptr %5493, i32 0, i32 25, i32 %5503, i32 1
  %5514 = load i16, ptr %5513, align 2
  %5515 = and i16 %5514, %5512
  store i16 %5515, ptr %5513, align 2
  br label %5519

5516:                                             ; preds = %5502
  %5517 = add nuw nsw i32 %5503, 1
  %5518 = icmp eq i32 %5517, %5496
  br i1 %5518, label %5519, label %5502

5519:                                             ; preds = %5516, %5507, %5488
  %5520 = add nuw nsw i32 %5489, 1
  %5521 = load i16, ptr %5485, align 2
  %5522 = zext i16 %5521 to i32
  %5523 = icmp ult i32 %5520, %5522
  br i1 %5523, label %5488, label %5524

5524:                                             ; preds = %5519
  %5525 = load i16, ptr %5475, align 4
  br label %5526

5526:                                             ; preds = %5524, %5484, %5478
  %5527 = phi i16 [ %5525, %5524 ], [ %5479, %5484 ], [ %5479, %5478 ]
  %5528 = add nuw nsw i32 %5480, 1
  %5529 = zext i16 %5527 to i32
  %5530 = icmp ult i32 %5528, %5529
  br i1 %5530, label %5478, label %5531

5531:                                             ; preds = %5526
  %5532 = load ptr, ptr %3, align 4
  br label %5533

5533:                                             ; preds = %5531, %5471
  %5534 = phi ptr [ %5532, %5531 ], [ %5474, %5471 ]
  %5535 = getelementptr inbounds %struct.mxl5005s_state, ptr %5534, i32 0, i32 20
  %5536 = load i16, ptr %5535, align 2
  %5537 = icmp eq i16 %5536, 0
  br i1 %5537, label %5591, label %5538

5538:                                             ; preds = %5586, %5533
  %5539 = phi i16 [ %5587, %5586 ], [ %5536, %5533 ]
  %5540 = phi i32 [ %5588, %5586 ], [ 0, %5533 ]
  %5541 = getelementptr %struct.mxl5005s_state, ptr %5534, i32 0, i32 21, i32 %5540
  %5542 = load i16, ptr %5541, align 2
  %5543 = icmp eq i16 %5542, 63
  br i1 %5543, label %5544, label %5586

5544:                                             ; preds = %5538
  %5545 = getelementptr %struct.mxl5005s_state, ptr %5534, i32 0, i32 21, i32 %5540, i32 1
  %5546 = load i16, ptr %5545, align 2
  %5547 = icmp eq i16 %5546, 0
  br i1 %5547, label %5586, label %5548

5548:                                             ; preds = %5579, %5544
  %5549 = phi i32 [ %5580, %5579 ], [ 0, %5544 ]
  %5550 = getelementptr %struct.mxl5005s_state, ptr %5534, i32 0, i32 21, i32 %5540, i32 4, i32 %5549
  store i16 0, ptr %5550, align 2
  %5551 = getelementptr %struct.mxl5005s_state, ptr %5534, i32 0, i32 21, i32 %5540, i32 3, i32 %5549
  %5552 = load i16, ptr %5551, align 2
  %5553 = load ptr, ptr %3, align 4
  %5554 = getelementptr inbounds %struct.mxl5005s_state, ptr %5553, i32 0, i32 24
  %5555 = load i16, ptr %5554, align 4
  %5556 = zext i16 %5555 to i32
  %5557 = icmp eq i16 %5555, 0
  br i1 %5557, label %5579, label %5558

5558:                                             ; preds = %5548
  %5559 = getelementptr %struct.mxl5005s_state, ptr %5534, i32 0, i32 21, i32 %5540, i32 2, i32 %5549
  %5560 = load i16, ptr %5559, align 2
  %5561 = and i16 %5560, 255
  br label %5562

5562:                                             ; preds = %5576, %5558
  %5563 = phi i32 [ 0, %5558 ], [ %5577, %5576 ]
  %5564 = getelementptr %struct.mxl5005s_state, ptr %5553, i32 0, i32 25, i32 %5563
  %5565 = load i16, ptr %5564, align 2
  %5566 = icmp eq i16 %5565, %5561
  br i1 %5566, label %5567, label %5576

5567:                                             ; preds = %5562
  %5568 = and i16 %5552, 255
  %5569 = zext i16 %5568 to i32
  %5570 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5569
  %5571 = load i8, ptr %5570, align 1
  %5572 = zext i8 %5571 to i16
  %5573 = getelementptr %struct.mxl5005s_state, ptr %5553, i32 0, i32 25, i32 %5563, i32 1
  %5574 = load i16, ptr %5573, align 2
  %5575 = and i16 %5574, %5572
  store i16 %5575, ptr %5573, align 2
  br label %5579

5576:                                             ; preds = %5562
  %5577 = add nuw nsw i32 %5563, 1
  %5578 = icmp eq i32 %5577, %5556
  br i1 %5578, label %5579, label %5562

5579:                                             ; preds = %5576, %5567, %5548
  %5580 = add nuw nsw i32 %5549, 1
  %5581 = load i16, ptr %5545, align 2
  %5582 = zext i16 %5581 to i32
  %5583 = icmp ult i32 %5580, %5582
  br i1 %5583, label %5548, label %5584

5584:                                             ; preds = %5579
  %5585 = load i16, ptr %5535, align 2
  br label %5586

5586:                                             ; preds = %5584, %5544, %5538
  %5587 = phi i16 [ %5585, %5584 ], [ %5539, %5544 ], [ %5539, %5538 ]
  %5588 = add nuw nsw i32 %5540, 1
  %5589 = zext i16 %5587 to i32
  %5590 = icmp ult i32 %5588, %5589
  br i1 %5590, label %5538, label %5591

5591:                                             ; preds = %5586, %5533, %5224
  %5592 = phi i32 [ %5225, %5224 ], [ 8, %5533 ], [ 8, %5586 ]
  %5593 = phi i32 [ %5226, %5224 ], [ 450000000, %5533 ], [ 450000000, %5586 ]
  %5594 = phi i32 [ %5227, %5224 ], [ -340000000, %5533 ], [ -340000000, %5586 ]
  %5595 = load i32, ptr %40, align 4
  %5596 = add i32 %5595, -450000001
  %5597 = icmp ult i32 %5596, 230000000
  br i1 %5597, label %5598, label %5958

5598:                                             ; preds = %5591
  %5599 = load ptr, ptr %3, align 4
  %5600 = getelementptr inbounds %struct.mxl5005s_state, ptr %5599, i32 0, i32 18
  %5601 = load i16, ptr %5600, align 4
  %5602 = icmp eq i16 %5601, 0
  br i1 %5602, label %5658, label %5603

5603:                                             ; preds = %5651, %5598
  %5604 = phi i16 [ %5652, %5651 ], [ %5601, %5598 ]
  %5605 = phi i32 [ %5653, %5651 ], [ 0, %5598 ]
  %5606 = getelementptr %struct.mxl5005s_state, ptr %5599, i32 0, i32 19, i32 %5605
  %5607 = load i16, ptr %5606, align 2
  %5608 = icmp eq i16 %5607, 58
  br i1 %5608, label %5609, label %5651

5609:                                             ; preds = %5603
  %5610 = getelementptr %struct.mxl5005s_state, ptr %5599, i32 0, i32 19, i32 %5605, i32 1
  %5611 = load i16, ptr %5610, align 2
  %5612 = icmp eq i16 %5611, 0
  br i1 %5612, label %5651, label %5613

5613:                                             ; preds = %5644, %5609
  %5614 = phi i32 [ %5645, %5644 ], [ 0, %5609 ]
  %5615 = getelementptr %struct.mxl5005s_state, ptr %5599, i32 0, i32 19, i32 %5605, i32 4, i32 %5614
  store i16 0, ptr %5615, align 2
  %5616 = getelementptr %struct.mxl5005s_state, ptr %5599, i32 0, i32 19, i32 %5605, i32 3, i32 %5614
  %5617 = load i16, ptr %5616, align 2
  %5618 = load ptr, ptr %3, align 4
  %5619 = getelementptr inbounds %struct.mxl5005s_state, ptr %5618, i32 0, i32 24
  %5620 = load i16, ptr %5619, align 4
  %5621 = zext i16 %5620 to i32
  %5622 = icmp eq i16 %5620, 0
  br i1 %5622, label %5644, label %5623

5623:                                             ; preds = %5613
  %5624 = getelementptr %struct.mxl5005s_state, ptr %5599, i32 0, i32 19, i32 %5605, i32 2, i32 %5614
  %5625 = load i16, ptr %5624, align 2
  %5626 = and i16 %5625, 255
  br label %5627

5627:                                             ; preds = %5641, %5623
  %5628 = phi i32 [ 0, %5623 ], [ %5642, %5641 ]
  %5629 = getelementptr %struct.mxl5005s_state, ptr %5618, i32 0, i32 25, i32 %5628
  %5630 = load i16, ptr %5629, align 2
  %5631 = icmp eq i16 %5630, %5626
  br i1 %5631, label %5632, label %5641

5632:                                             ; preds = %5627
  %5633 = and i16 %5617, 255
  %5634 = zext i16 %5633 to i32
  %5635 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5634
  %5636 = load i8, ptr %5635, align 1
  %5637 = zext i8 %5636 to i16
  %5638 = getelementptr %struct.mxl5005s_state, ptr %5618, i32 0, i32 25, i32 %5628, i32 1
  %5639 = load i16, ptr %5638, align 2
  %5640 = and i16 %5639, %5637
  store i16 %5640, ptr %5638, align 2
  br label %5644

5641:                                             ; preds = %5627
  %5642 = add nuw nsw i32 %5628, 1
  %5643 = icmp eq i32 %5642, %5621
  br i1 %5643, label %5644, label %5627

5644:                                             ; preds = %5641, %5632, %5613
  %5645 = add nuw nsw i32 %5614, 1
  %5646 = load i16, ptr %5610, align 2
  %5647 = zext i16 %5646 to i32
  %5648 = icmp ult i32 %5645, %5647
  br i1 %5648, label %5613, label %5649

5649:                                             ; preds = %5644
  %5650 = load i16, ptr %5600, align 4
  br label %5651

5651:                                             ; preds = %5649, %5609, %5603
  %5652 = phi i16 [ %5650, %5649 ], [ %5604, %5609 ], [ %5604, %5603 ]
  %5653 = add nuw nsw i32 %5605, 1
  %5654 = zext i16 %5652 to i32
  %5655 = icmp ult i32 %5653, %5654
  br i1 %5655, label %5603, label %5656

5656:                                             ; preds = %5651
  %5657 = load ptr, ptr %3, align 4
  br label %5658

5658:                                             ; preds = %5656, %5598
  %5659 = phi ptr [ %5657, %5656 ], [ %5599, %5598 ]
  %5660 = getelementptr inbounds %struct.mxl5005s_state, ptr %5659, i32 0, i32 20
  %5661 = load i16, ptr %5660, align 2
  %5662 = icmp eq i16 %5661, 0
  br i1 %5662, label %5716, label %5663

5663:                                             ; preds = %5711, %5658
  %5664 = phi i16 [ %5712, %5711 ], [ %5661, %5658 ]
  %5665 = phi i32 [ %5713, %5711 ], [ 0, %5658 ]
  %5666 = getelementptr %struct.mxl5005s_state, ptr %5659, i32 0, i32 21, i32 %5665
  %5667 = load i16, ptr %5666, align 2
  %5668 = icmp eq i16 %5667, 58
  br i1 %5668, label %5669, label %5711

5669:                                             ; preds = %5663
  %5670 = getelementptr %struct.mxl5005s_state, ptr %5659, i32 0, i32 21, i32 %5665, i32 1
  %5671 = load i16, ptr %5670, align 2
  %5672 = icmp eq i16 %5671, 0
  br i1 %5672, label %5711, label %5673

5673:                                             ; preds = %5704, %5669
  %5674 = phi i32 [ %5705, %5704 ], [ 0, %5669 ]
  %5675 = getelementptr %struct.mxl5005s_state, ptr %5659, i32 0, i32 21, i32 %5665, i32 4, i32 %5674
  store i16 0, ptr %5675, align 2
  %5676 = getelementptr %struct.mxl5005s_state, ptr %5659, i32 0, i32 21, i32 %5665, i32 3, i32 %5674
  %5677 = load i16, ptr %5676, align 2
  %5678 = load ptr, ptr %3, align 4
  %5679 = getelementptr inbounds %struct.mxl5005s_state, ptr %5678, i32 0, i32 24
  %5680 = load i16, ptr %5679, align 4
  %5681 = zext i16 %5680 to i32
  %5682 = icmp eq i16 %5680, 0
  br i1 %5682, label %5704, label %5683

5683:                                             ; preds = %5673
  %5684 = getelementptr %struct.mxl5005s_state, ptr %5659, i32 0, i32 21, i32 %5665, i32 2, i32 %5674
  %5685 = load i16, ptr %5684, align 2
  %5686 = and i16 %5685, 255
  br label %5687

5687:                                             ; preds = %5701, %5683
  %5688 = phi i32 [ 0, %5683 ], [ %5702, %5701 ]
  %5689 = getelementptr %struct.mxl5005s_state, ptr %5678, i32 0, i32 25, i32 %5688
  %5690 = load i16, ptr %5689, align 2
  %5691 = icmp eq i16 %5690, %5686
  br i1 %5691, label %5692, label %5701

5692:                                             ; preds = %5687
  %5693 = and i16 %5677, 255
  %5694 = zext i16 %5693 to i32
  %5695 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5694
  %5696 = load i8, ptr %5695, align 1
  %5697 = zext i8 %5696 to i16
  %5698 = getelementptr %struct.mxl5005s_state, ptr %5678, i32 0, i32 25, i32 %5688, i32 1
  %5699 = load i16, ptr %5698, align 2
  %5700 = and i16 %5699, %5697
  store i16 %5700, ptr %5698, align 2
  br label %5704

5701:                                             ; preds = %5687
  %5702 = add nuw nsw i32 %5688, 1
  %5703 = icmp eq i32 %5702, %5681
  br i1 %5703, label %5704, label %5687

5704:                                             ; preds = %5701, %5692, %5673
  %5705 = add nuw nsw i32 %5674, 1
  %5706 = load i16, ptr %5670, align 2
  %5707 = zext i16 %5706 to i32
  %5708 = icmp ult i32 %5705, %5707
  br i1 %5708, label %5673, label %5709

5709:                                             ; preds = %5704
  %5710 = load i16, ptr %5660, align 2
  br label %5711

5711:                                             ; preds = %5709, %5669, %5663
  %5712 = phi i16 [ %5710, %5709 ], [ %5664, %5669 ], [ %5664, %5663 ]
  %5713 = add nuw nsw i32 %5665, 1
  %5714 = zext i16 %5712 to i32
  %5715 = icmp ult i32 %5713, %5714
  br i1 %5715, label %5663, label %5716

5716:                                             ; preds = %5711, %5658
  %5717 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 1) #12
  %5718 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 2) #12
  %5719 = load ptr, ptr %3, align 4
  %5720 = getelementptr inbounds %struct.mxl5005s_state, ptr %5719, i32 0, i32 18
  %5721 = load i16, ptr %5720, align 4
  %5722 = icmp eq i16 %5721, 0
  br i1 %5722, label %5778, label %5723

5723:                                             ; preds = %5771, %5716
  %5724 = phi i16 [ %5772, %5771 ], [ %5721, %5716 ]
  %5725 = phi i32 [ %5773, %5771 ], [ 0, %5716 ]
  %5726 = getelementptr %struct.mxl5005s_state, ptr %5719, i32 0, i32 19, i32 %5725
  %5727 = load i16, ptr %5726, align 2
  %5728 = icmp eq i16 %5727, 60
  br i1 %5728, label %5729, label %5771

5729:                                             ; preds = %5723
  %5730 = getelementptr %struct.mxl5005s_state, ptr %5719, i32 0, i32 19, i32 %5725, i32 1
  %5731 = load i16, ptr %5730, align 2
  %5732 = icmp eq i16 %5731, 0
  br i1 %5732, label %5771, label %5733

5733:                                             ; preds = %5764, %5729
  %5734 = phi i32 [ %5765, %5764 ], [ 0, %5729 ]
  %5735 = getelementptr %struct.mxl5005s_state, ptr %5719, i32 0, i32 19, i32 %5725, i32 4, i32 %5734
  store i16 0, ptr %5735, align 2
  %5736 = getelementptr %struct.mxl5005s_state, ptr %5719, i32 0, i32 19, i32 %5725, i32 3, i32 %5734
  %5737 = load i16, ptr %5736, align 2
  %5738 = load ptr, ptr %3, align 4
  %5739 = getelementptr inbounds %struct.mxl5005s_state, ptr %5738, i32 0, i32 24
  %5740 = load i16, ptr %5739, align 4
  %5741 = zext i16 %5740 to i32
  %5742 = icmp eq i16 %5740, 0
  br i1 %5742, label %5764, label %5743

5743:                                             ; preds = %5733
  %5744 = getelementptr %struct.mxl5005s_state, ptr %5719, i32 0, i32 19, i32 %5725, i32 2, i32 %5734
  %5745 = load i16, ptr %5744, align 2
  %5746 = and i16 %5745, 255
  br label %5747

5747:                                             ; preds = %5761, %5743
  %5748 = phi i32 [ 0, %5743 ], [ %5762, %5761 ]
  %5749 = getelementptr %struct.mxl5005s_state, ptr %5738, i32 0, i32 25, i32 %5748
  %5750 = load i16, ptr %5749, align 2
  %5751 = icmp eq i16 %5750, %5746
  br i1 %5751, label %5752, label %5761

5752:                                             ; preds = %5747
  %5753 = and i16 %5737, 255
  %5754 = zext i16 %5753 to i32
  %5755 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5754
  %5756 = load i8, ptr %5755, align 1
  %5757 = zext i8 %5756 to i16
  %5758 = getelementptr %struct.mxl5005s_state, ptr %5738, i32 0, i32 25, i32 %5748, i32 1
  %5759 = load i16, ptr %5758, align 2
  %5760 = and i16 %5759, %5757
  store i16 %5760, ptr %5758, align 2
  br label %5764

5761:                                             ; preds = %5747
  %5762 = add nuw nsw i32 %5748, 1
  %5763 = icmp eq i32 %5762, %5741
  br i1 %5763, label %5764, label %5747

5764:                                             ; preds = %5761, %5752, %5733
  %5765 = add nuw nsw i32 %5734, 1
  %5766 = load i16, ptr %5730, align 2
  %5767 = zext i16 %5766 to i32
  %5768 = icmp ult i32 %5765, %5767
  br i1 %5768, label %5733, label %5769

5769:                                             ; preds = %5764
  %5770 = load i16, ptr %5720, align 4
  br label %5771

5771:                                             ; preds = %5769, %5729, %5723
  %5772 = phi i16 [ %5770, %5769 ], [ %5724, %5729 ], [ %5724, %5723 ]
  %5773 = add nuw nsw i32 %5725, 1
  %5774 = zext i16 %5772 to i32
  %5775 = icmp ult i32 %5773, %5774
  br i1 %5775, label %5723, label %5776

5776:                                             ; preds = %5771
  %5777 = load ptr, ptr %3, align 4
  br label %5778

5778:                                             ; preds = %5776, %5716
  %5779 = phi ptr [ %5777, %5776 ], [ %5719, %5716 ]
  %5780 = getelementptr inbounds %struct.mxl5005s_state, ptr %5779, i32 0, i32 20
  %5781 = load i16, ptr %5780, align 2
  %5782 = icmp eq i16 %5781, 0
  br i1 %5782, label %5836, label %5783

5783:                                             ; preds = %5831, %5778
  %5784 = phi i16 [ %5832, %5831 ], [ %5781, %5778 ]
  %5785 = phi i32 [ %5833, %5831 ], [ 0, %5778 ]
  %5786 = getelementptr %struct.mxl5005s_state, ptr %5779, i32 0, i32 21, i32 %5785
  %5787 = load i16, ptr %5786, align 2
  %5788 = icmp eq i16 %5787, 60
  br i1 %5788, label %5789, label %5831

5789:                                             ; preds = %5783
  %5790 = getelementptr %struct.mxl5005s_state, ptr %5779, i32 0, i32 21, i32 %5785, i32 1
  %5791 = load i16, ptr %5790, align 2
  %5792 = icmp eq i16 %5791, 0
  br i1 %5792, label %5831, label %5793

5793:                                             ; preds = %5824, %5789
  %5794 = phi i32 [ %5825, %5824 ], [ 0, %5789 ]
  %5795 = getelementptr %struct.mxl5005s_state, ptr %5779, i32 0, i32 21, i32 %5785, i32 4, i32 %5794
  store i16 0, ptr %5795, align 2
  %5796 = getelementptr %struct.mxl5005s_state, ptr %5779, i32 0, i32 21, i32 %5785, i32 3, i32 %5794
  %5797 = load i16, ptr %5796, align 2
  %5798 = load ptr, ptr %3, align 4
  %5799 = getelementptr inbounds %struct.mxl5005s_state, ptr %5798, i32 0, i32 24
  %5800 = load i16, ptr %5799, align 4
  %5801 = zext i16 %5800 to i32
  %5802 = icmp eq i16 %5800, 0
  br i1 %5802, label %5824, label %5803

5803:                                             ; preds = %5793
  %5804 = getelementptr %struct.mxl5005s_state, ptr %5779, i32 0, i32 21, i32 %5785, i32 2, i32 %5794
  %5805 = load i16, ptr %5804, align 2
  %5806 = and i16 %5805, 255
  br label %5807

5807:                                             ; preds = %5821, %5803
  %5808 = phi i32 [ 0, %5803 ], [ %5822, %5821 ]
  %5809 = getelementptr %struct.mxl5005s_state, ptr %5798, i32 0, i32 25, i32 %5808
  %5810 = load i16, ptr %5809, align 2
  %5811 = icmp eq i16 %5810, %5806
  br i1 %5811, label %5812, label %5821

5812:                                             ; preds = %5807
  %5813 = and i16 %5797, 255
  %5814 = zext i16 %5813 to i32
  %5815 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5814
  %5816 = load i8, ptr %5815, align 1
  %5817 = zext i8 %5816 to i16
  %5818 = getelementptr %struct.mxl5005s_state, ptr %5798, i32 0, i32 25, i32 %5808, i32 1
  %5819 = load i16, ptr %5818, align 2
  %5820 = and i16 %5819, %5817
  store i16 %5820, ptr %5818, align 2
  br label %5824

5821:                                             ; preds = %5807
  %5822 = add nuw nsw i32 %5808, 1
  %5823 = icmp eq i32 %5822, %5801
  br i1 %5823, label %5824, label %5807

5824:                                             ; preds = %5821, %5812, %5793
  %5825 = add nuw nsw i32 %5794, 1
  %5826 = load i16, ptr %5790, align 2
  %5827 = zext i16 %5826 to i32
  %5828 = icmp ult i32 %5825, %5827
  br i1 %5828, label %5793, label %5829

5829:                                             ; preds = %5824
  %5830 = load i16, ptr %5780, align 2
  br label %5831

5831:                                             ; preds = %5829, %5789, %5783
  %5832 = phi i16 [ %5830, %5829 ], [ %5784, %5789 ], [ %5784, %5783 ]
  %5833 = add nuw nsw i32 %5785, 1
  %5834 = zext i16 %5832 to i32
  %5835 = icmp ult i32 %5833, %5834
  br i1 %5835, label %5783, label %5836

5836:                                             ; preds = %5831, %5778
  %5837 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 61, i32 noundef 1, i16 noundef zeroext 1) #12
  %5838 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 61, i32 noundef 1, i16 noundef zeroext 2) #12
  %5839 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %5840 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %5841 = load ptr, ptr %3, align 4
  %5842 = getelementptr inbounds %struct.mxl5005s_state, ptr %5841, i32 0, i32 18
  %5843 = load i16, ptr %5842, align 4
  %5844 = icmp eq i16 %5843, 0
  br i1 %5844, label %5900, label %5845

5845:                                             ; preds = %5893, %5836
  %5846 = phi i16 [ %5894, %5893 ], [ %5843, %5836 ]
  %5847 = phi i32 [ %5895, %5893 ], [ 0, %5836 ]
  %5848 = getelementptr %struct.mxl5005s_state, ptr %5841, i32 0, i32 19, i32 %5847
  %5849 = load i16, ptr %5848, align 2
  %5850 = icmp eq i16 %5849, 63
  br i1 %5850, label %5851, label %5893

5851:                                             ; preds = %5845
  %5852 = getelementptr %struct.mxl5005s_state, ptr %5841, i32 0, i32 19, i32 %5847, i32 1
  %5853 = load i16, ptr %5852, align 2
  %5854 = icmp eq i16 %5853, 0
  br i1 %5854, label %5893, label %5855

5855:                                             ; preds = %5886, %5851
  %5856 = phi i32 [ %5887, %5886 ], [ 0, %5851 ]
  %5857 = getelementptr %struct.mxl5005s_state, ptr %5841, i32 0, i32 19, i32 %5847, i32 4, i32 %5856
  store i16 0, ptr %5857, align 2
  %5858 = getelementptr %struct.mxl5005s_state, ptr %5841, i32 0, i32 19, i32 %5847, i32 3, i32 %5856
  %5859 = load i16, ptr %5858, align 2
  %5860 = load ptr, ptr %3, align 4
  %5861 = getelementptr inbounds %struct.mxl5005s_state, ptr %5860, i32 0, i32 24
  %5862 = load i16, ptr %5861, align 4
  %5863 = zext i16 %5862 to i32
  %5864 = icmp eq i16 %5862, 0
  br i1 %5864, label %5886, label %5865

5865:                                             ; preds = %5855
  %5866 = getelementptr %struct.mxl5005s_state, ptr %5841, i32 0, i32 19, i32 %5847, i32 2, i32 %5856
  %5867 = load i16, ptr %5866, align 2
  %5868 = and i16 %5867, 255
  br label %5869

5869:                                             ; preds = %5883, %5865
  %5870 = phi i32 [ 0, %5865 ], [ %5884, %5883 ]
  %5871 = getelementptr %struct.mxl5005s_state, ptr %5860, i32 0, i32 25, i32 %5870
  %5872 = load i16, ptr %5871, align 2
  %5873 = icmp eq i16 %5872, %5868
  br i1 %5873, label %5874, label %5883

5874:                                             ; preds = %5869
  %5875 = and i16 %5859, 255
  %5876 = zext i16 %5875 to i32
  %5877 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5876
  %5878 = load i8, ptr %5877, align 1
  %5879 = zext i8 %5878 to i16
  %5880 = getelementptr %struct.mxl5005s_state, ptr %5860, i32 0, i32 25, i32 %5870, i32 1
  %5881 = load i16, ptr %5880, align 2
  %5882 = and i16 %5881, %5879
  store i16 %5882, ptr %5880, align 2
  br label %5886

5883:                                             ; preds = %5869
  %5884 = add nuw nsw i32 %5870, 1
  %5885 = icmp eq i32 %5884, %5863
  br i1 %5885, label %5886, label %5869

5886:                                             ; preds = %5883, %5874, %5855
  %5887 = add nuw nsw i32 %5856, 1
  %5888 = load i16, ptr %5852, align 2
  %5889 = zext i16 %5888 to i32
  %5890 = icmp ult i32 %5887, %5889
  br i1 %5890, label %5855, label %5891

5891:                                             ; preds = %5886
  %5892 = load i16, ptr %5842, align 4
  br label %5893

5893:                                             ; preds = %5891, %5851, %5845
  %5894 = phi i16 [ %5892, %5891 ], [ %5846, %5851 ], [ %5846, %5845 ]
  %5895 = add nuw nsw i32 %5847, 1
  %5896 = zext i16 %5894 to i32
  %5897 = icmp ult i32 %5895, %5896
  br i1 %5897, label %5845, label %5898

5898:                                             ; preds = %5893
  %5899 = load ptr, ptr %3, align 4
  br label %5900

5900:                                             ; preds = %5898, %5836
  %5901 = phi ptr [ %5899, %5898 ], [ %5841, %5836 ]
  %5902 = getelementptr inbounds %struct.mxl5005s_state, ptr %5901, i32 0, i32 20
  %5903 = load i16, ptr %5902, align 2
  %5904 = icmp eq i16 %5903, 0
  br i1 %5904, label %5958, label %5905

5905:                                             ; preds = %5953, %5900
  %5906 = phi i16 [ %5954, %5953 ], [ %5903, %5900 ]
  %5907 = phi i32 [ %5955, %5953 ], [ 0, %5900 ]
  %5908 = getelementptr %struct.mxl5005s_state, ptr %5901, i32 0, i32 21, i32 %5907
  %5909 = load i16, ptr %5908, align 2
  %5910 = icmp eq i16 %5909, 63
  br i1 %5910, label %5911, label %5953

5911:                                             ; preds = %5905
  %5912 = getelementptr %struct.mxl5005s_state, ptr %5901, i32 0, i32 21, i32 %5907, i32 1
  %5913 = load i16, ptr %5912, align 2
  %5914 = icmp eq i16 %5913, 0
  br i1 %5914, label %5953, label %5915

5915:                                             ; preds = %5946, %5911
  %5916 = phi i32 [ %5947, %5946 ], [ 0, %5911 ]
  %5917 = getelementptr %struct.mxl5005s_state, ptr %5901, i32 0, i32 21, i32 %5907, i32 4, i32 %5916
  store i16 0, ptr %5917, align 2
  %5918 = getelementptr %struct.mxl5005s_state, ptr %5901, i32 0, i32 21, i32 %5907, i32 3, i32 %5916
  %5919 = load i16, ptr %5918, align 2
  %5920 = load ptr, ptr %3, align 4
  %5921 = getelementptr inbounds %struct.mxl5005s_state, ptr %5920, i32 0, i32 24
  %5922 = load i16, ptr %5921, align 4
  %5923 = zext i16 %5922 to i32
  %5924 = icmp eq i16 %5922, 0
  br i1 %5924, label %5946, label %5925

5925:                                             ; preds = %5915
  %5926 = getelementptr %struct.mxl5005s_state, ptr %5901, i32 0, i32 21, i32 %5907, i32 2, i32 %5916
  %5927 = load i16, ptr %5926, align 2
  %5928 = and i16 %5927, 255
  br label %5929

5929:                                             ; preds = %5943, %5925
  %5930 = phi i32 [ 0, %5925 ], [ %5944, %5943 ]
  %5931 = getelementptr %struct.mxl5005s_state, ptr %5920, i32 0, i32 25, i32 %5930
  %5932 = load i16, ptr %5931, align 2
  %5933 = icmp eq i16 %5932, %5928
  br i1 %5933, label %5934, label %5943

5934:                                             ; preds = %5929
  %5935 = and i16 %5919, 255
  %5936 = zext i16 %5935 to i32
  %5937 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %5936
  %5938 = load i8, ptr %5937, align 1
  %5939 = zext i8 %5938 to i16
  %5940 = getelementptr %struct.mxl5005s_state, ptr %5920, i32 0, i32 25, i32 %5930, i32 1
  %5941 = load i16, ptr %5940, align 2
  %5942 = and i16 %5941, %5939
  store i16 %5942, ptr %5940, align 2
  br label %5946

5943:                                             ; preds = %5929
  %5944 = add nuw nsw i32 %5930, 1
  %5945 = icmp eq i32 %5944, %5923
  br i1 %5945, label %5946, label %5929

5946:                                             ; preds = %5943, %5934, %5915
  %5947 = add nuw nsw i32 %5916, 1
  %5948 = load i16, ptr %5912, align 2
  %5949 = zext i16 %5948 to i32
  %5950 = icmp ult i32 %5947, %5949
  br i1 %5950, label %5915, label %5951

5951:                                             ; preds = %5946
  %5952 = load i16, ptr %5902, align 2
  br label %5953

5953:                                             ; preds = %5951, %5911, %5905
  %5954 = phi i16 [ %5952, %5951 ], [ %5906, %5911 ], [ %5906, %5905 ]
  %5955 = add nuw nsw i32 %5907, 1
  %5956 = zext i16 %5954 to i32
  %5957 = icmp ult i32 %5955, %5956
  br i1 %5957, label %5905, label %5958

5958:                                             ; preds = %5953, %5900, %5591
  %5959 = phi i32 [ %5592, %5591 ], [ 4, %5900 ], [ 4, %5953 ]
  %5960 = phi i32 [ %5593, %5591 ], [ 680000000, %5900 ], [ 680000000, %5953 ]
  %5961 = phi i32 [ %5594, %5591 ], [ -450000000, %5900 ], [ -450000000, %5953 ]
  %5962 = load i32, ptr %40, align 4
  %5963 = add i32 %5962, -680000001
  %5964 = icmp ult i32 %5963, 220000000
  br i1 %5964, label %5965, label %6209

5965:                                             ; preds = %5958
  %5966 = load ptr, ptr %3, align 4
  %5967 = getelementptr inbounds %struct.mxl5005s_state, ptr %5966, i32 0, i32 18
  %5968 = load i16, ptr %5967, align 4
  %5969 = icmp eq i16 %5968, 0
  br i1 %5969, label %6025, label %5970

5970:                                             ; preds = %6018, %5965
  %5971 = phi i16 [ %6019, %6018 ], [ %5968, %5965 ]
  %5972 = phi i32 [ %6020, %6018 ], [ 0, %5965 ]
  %5973 = getelementptr %struct.mxl5005s_state, ptr %5966, i32 0, i32 19, i32 %5972
  %5974 = load i16, ptr %5973, align 2
  %5975 = icmp eq i16 %5974, 58
  br i1 %5975, label %5976, label %6018

5976:                                             ; preds = %5970
  %5977 = getelementptr %struct.mxl5005s_state, ptr %5966, i32 0, i32 19, i32 %5972, i32 1
  %5978 = load i16, ptr %5977, align 2
  %5979 = icmp eq i16 %5978, 0
  br i1 %5979, label %6018, label %5980

5980:                                             ; preds = %6011, %5976
  %5981 = phi i32 [ %6012, %6011 ], [ 0, %5976 ]
  %5982 = getelementptr %struct.mxl5005s_state, ptr %5966, i32 0, i32 19, i32 %5972, i32 4, i32 %5981
  store i16 0, ptr %5982, align 2
  %5983 = getelementptr %struct.mxl5005s_state, ptr %5966, i32 0, i32 19, i32 %5972, i32 3, i32 %5981
  %5984 = load i16, ptr %5983, align 2
  %5985 = load ptr, ptr %3, align 4
  %5986 = getelementptr inbounds %struct.mxl5005s_state, ptr %5985, i32 0, i32 24
  %5987 = load i16, ptr %5986, align 4
  %5988 = zext i16 %5987 to i32
  %5989 = icmp eq i16 %5987, 0
  br i1 %5989, label %6011, label %5990

5990:                                             ; preds = %5980
  %5991 = getelementptr %struct.mxl5005s_state, ptr %5966, i32 0, i32 19, i32 %5972, i32 2, i32 %5981
  %5992 = load i16, ptr %5991, align 2
  %5993 = and i16 %5992, 255
  br label %5994

5994:                                             ; preds = %6008, %5990
  %5995 = phi i32 [ 0, %5990 ], [ %6009, %6008 ]
  %5996 = getelementptr %struct.mxl5005s_state, ptr %5985, i32 0, i32 25, i32 %5995
  %5997 = load i16, ptr %5996, align 2
  %5998 = icmp eq i16 %5997, %5993
  br i1 %5998, label %5999, label %6008

5999:                                             ; preds = %5994
  %6000 = and i16 %5984, 255
  %6001 = zext i16 %6000 to i32
  %6002 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6001
  %6003 = load i8, ptr %6002, align 1
  %6004 = zext i8 %6003 to i16
  %6005 = getelementptr %struct.mxl5005s_state, ptr %5985, i32 0, i32 25, i32 %5995, i32 1
  %6006 = load i16, ptr %6005, align 2
  %6007 = and i16 %6006, %6004
  store i16 %6007, ptr %6005, align 2
  br label %6011

6008:                                             ; preds = %5994
  %6009 = add nuw nsw i32 %5995, 1
  %6010 = icmp eq i32 %6009, %5988
  br i1 %6010, label %6011, label %5994

6011:                                             ; preds = %6008, %5999, %5980
  %6012 = add nuw nsw i32 %5981, 1
  %6013 = load i16, ptr %5977, align 2
  %6014 = zext i16 %6013 to i32
  %6015 = icmp ult i32 %6012, %6014
  br i1 %6015, label %5980, label %6016

6016:                                             ; preds = %6011
  %6017 = load i16, ptr %5967, align 4
  br label %6018

6018:                                             ; preds = %6016, %5976, %5970
  %6019 = phi i16 [ %6017, %6016 ], [ %5971, %5976 ], [ %5971, %5970 ]
  %6020 = add nuw nsw i32 %5972, 1
  %6021 = zext i16 %6019 to i32
  %6022 = icmp ult i32 %6020, %6021
  br i1 %6022, label %5970, label %6023

6023:                                             ; preds = %6018
  %6024 = load ptr, ptr %3, align 4
  br label %6025

6025:                                             ; preds = %6023, %5965
  %6026 = phi ptr [ %6024, %6023 ], [ %5966, %5965 ]
  %6027 = getelementptr inbounds %struct.mxl5005s_state, ptr %6026, i32 0, i32 20
  %6028 = load i16, ptr %6027, align 2
  %6029 = icmp eq i16 %6028, 0
  br i1 %6029, label %6083, label %6030

6030:                                             ; preds = %6078, %6025
  %6031 = phi i16 [ %6079, %6078 ], [ %6028, %6025 ]
  %6032 = phi i32 [ %6080, %6078 ], [ 0, %6025 ]
  %6033 = getelementptr %struct.mxl5005s_state, ptr %6026, i32 0, i32 21, i32 %6032
  %6034 = load i16, ptr %6033, align 2
  %6035 = icmp eq i16 %6034, 58
  br i1 %6035, label %6036, label %6078

6036:                                             ; preds = %6030
  %6037 = getelementptr %struct.mxl5005s_state, ptr %6026, i32 0, i32 21, i32 %6032, i32 1
  %6038 = load i16, ptr %6037, align 2
  %6039 = icmp eq i16 %6038, 0
  br i1 %6039, label %6078, label %6040

6040:                                             ; preds = %6071, %6036
  %6041 = phi i32 [ %6072, %6071 ], [ 0, %6036 ]
  %6042 = getelementptr %struct.mxl5005s_state, ptr %6026, i32 0, i32 21, i32 %6032, i32 4, i32 %6041
  store i16 0, ptr %6042, align 2
  %6043 = getelementptr %struct.mxl5005s_state, ptr %6026, i32 0, i32 21, i32 %6032, i32 3, i32 %6041
  %6044 = load i16, ptr %6043, align 2
  %6045 = load ptr, ptr %3, align 4
  %6046 = getelementptr inbounds %struct.mxl5005s_state, ptr %6045, i32 0, i32 24
  %6047 = load i16, ptr %6046, align 4
  %6048 = zext i16 %6047 to i32
  %6049 = icmp eq i16 %6047, 0
  br i1 %6049, label %6071, label %6050

6050:                                             ; preds = %6040
  %6051 = getelementptr %struct.mxl5005s_state, ptr %6026, i32 0, i32 21, i32 %6032, i32 2, i32 %6041
  %6052 = load i16, ptr %6051, align 2
  %6053 = and i16 %6052, 255
  br label %6054

6054:                                             ; preds = %6068, %6050
  %6055 = phi i32 [ 0, %6050 ], [ %6069, %6068 ]
  %6056 = getelementptr %struct.mxl5005s_state, ptr %6045, i32 0, i32 25, i32 %6055
  %6057 = load i16, ptr %6056, align 2
  %6058 = icmp eq i16 %6057, %6053
  br i1 %6058, label %6059, label %6068

6059:                                             ; preds = %6054
  %6060 = and i16 %6044, 255
  %6061 = zext i16 %6060 to i32
  %6062 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6061
  %6063 = load i8, ptr %6062, align 1
  %6064 = zext i8 %6063 to i16
  %6065 = getelementptr %struct.mxl5005s_state, ptr %6045, i32 0, i32 25, i32 %6055, i32 1
  %6066 = load i16, ptr %6065, align 2
  %6067 = and i16 %6066, %6064
  store i16 %6067, ptr %6065, align 2
  br label %6071

6068:                                             ; preds = %6054
  %6069 = add nuw nsw i32 %6055, 1
  %6070 = icmp eq i32 %6069, %6048
  br i1 %6070, label %6071, label %6054

6071:                                             ; preds = %6068, %6059, %6040
  %6072 = add nuw nsw i32 %6041, 1
  %6073 = load i16, ptr %6037, align 2
  %6074 = zext i16 %6073 to i32
  %6075 = icmp ult i32 %6072, %6074
  br i1 %6075, label %6040, label %6076

6076:                                             ; preds = %6071
  %6077 = load i16, ptr %6027, align 2
  br label %6078

6078:                                             ; preds = %6076, %6036, %6030
  %6079 = phi i16 [ %6077, %6076 ], [ %6031, %6036 ], [ %6031, %6030 ]
  %6080 = add nuw nsw i32 %6032, 1
  %6081 = zext i16 %6079 to i32
  %6082 = icmp ult i32 %6080, %6081
  br i1 %6082, label %6030, label %6083

6083:                                             ; preds = %6078, %6025
  %6084 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 1) #12
  %6085 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 59, i32 noundef 1, i16 noundef zeroext 2) #12
  %6086 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 1) #12
  %6087 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 60, i32 noundef 1, i16 noundef zeroext 2) #12
  %6088 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 61, i32 noundef 1, i16 noundef zeroext 1) #12
  %6089 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 61, i32 noundef 1, i16 noundef zeroext 2) #12
  %6090 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 1) #12
  %6091 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 62, i32 noundef 1, i16 noundef zeroext 2) #12
  %6092 = load ptr, ptr %3, align 4
  %6093 = getelementptr inbounds %struct.mxl5005s_state, ptr %6092, i32 0, i32 18
  %6094 = load i16, ptr %6093, align 4
  %6095 = icmp eq i16 %6094, 0
  br i1 %6095, label %6151, label %6096

6096:                                             ; preds = %6144, %6083
  %6097 = phi i16 [ %6145, %6144 ], [ %6094, %6083 ]
  %6098 = phi i32 [ %6146, %6144 ], [ 0, %6083 ]
  %6099 = getelementptr %struct.mxl5005s_state, ptr %6092, i32 0, i32 19, i32 %6098
  %6100 = load i16, ptr %6099, align 2
  %6101 = icmp eq i16 %6100, 63
  br i1 %6101, label %6102, label %6144

6102:                                             ; preds = %6096
  %6103 = getelementptr %struct.mxl5005s_state, ptr %6092, i32 0, i32 19, i32 %6098, i32 1
  %6104 = load i16, ptr %6103, align 2
  %6105 = icmp eq i16 %6104, 0
  br i1 %6105, label %6144, label %6106

6106:                                             ; preds = %6137, %6102
  %6107 = phi i32 [ %6138, %6137 ], [ 0, %6102 ]
  %6108 = getelementptr %struct.mxl5005s_state, ptr %6092, i32 0, i32 19, i32 %6098, i32 4, i32 %6107
  store i16 0, ptr %6108, align 2
  %6109 = getelementptr %struct.mxl5005s_state, ptr %6092, i32 0, i32 19, i32 %6098, i32 3, i32 %6107
  %6110 = load i16, ptr %6109, align 2
  %6111 = load ptr, ptr %3, align 4
  %6112 = getelementptr inbounds %struct.mxl5005s_state, ptr %6111, i32 0, i32 24
  %6113 = load i16, ptr %6112, align 4
  %6114 = zext i16 %6113 to i32
  %6115 = icmp eq i16 %6113, 0
  br i1 %6115, label %6137, label %6116

6116:                                             ; preds = %6106
  %6117 = getelementptr %struct.mxl5005s_state, ptr %6092, i32 0, i32 19, i32 %6098, i32 2, i32 %6107
  %6118 = load i16, ptr %6117, align 2
  %6119 = and i16 %6118, 255
  br label %6120

6120:                                             ; preds = %6134, %6116
  %6121 = phi i32 [ 0, %6116 ], [ %6135, %6134 ]
  %6122 = getelementptr %struct.mxl5005s_state, ptr %6111, i32 0, i32 25, i32 %6121
  %6123 = load i16, ptr %6122, align 2
  %6124 = icmp eq i16 %6123, %6119
  br i1 %6124, label %6125, label %6134

6125:                                             ; preds = %6120
  %6126 = and i16 %6110, 255
  %6127 = zext i16 %6126 to i32
  %6128 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6127
  %6129 = load i8, ptr %6128, align 1
  %6130 = zext i8 %6129 to i16
  %6131 = getelementptr %struct.mxl5005s_state, ptr %6111, i32 0, i32 25, i32 %6121, i32 1
  %6132 = load i16, ptr %6131, align 2
  %6133 = and i16 %6132, %6130
  store i16 %6133, ptr %6131, align 2
  br label %6137

6134:                                             ; preds = %6120
  %6135 = add nuw nsw i32 %6121, 1
  %6136 = icmp eq i32 %6135, %6114
  br i1 %6136, label %6137, label %6120

6137:                                             ; preds = %6134, %6125, %6106
  %6138 = add nuw nsw i32 %6107, 1
  %6139 = load i16, ptr %6103, align 2
  %6140 = zext i16 %6139 to i32
  %6141 = icmp ult i32 %6138, %6140
  br i1 %6141, label %6106, label %6142

6142:                                             ; preds = %6137
  %6143 = load i16, ptr %6093, align 4
  br label %6144

6144:                                             ; preds = %6142, %6102, %6096
  %6145 = phi i16 [ %6143, %6142 ], [ %6097, %6102 ], [ %6097, %6096 ]
  %6146 = add nuw nsw i32 %6098, 1
  %6147 = zext i16 %6145 to i32
  %6148 = icmp ult i32 %6146, %6147
  br i1 %6148, label %6096, label %6149

6149:                                             ; preds = %6144
  %6150 = load ptr, ptr %3, align 4
  br label %6151

6151:                                             ; preds = %6149, %6083
  %6152 = phi ptr [ %6150, %6149 ], [ %6092, %6083 ]
  %6153 = getelementptr inbounds %struct.mxl5005s_state, ptr %6152, i32 0, i32 20
  %6154 = load i16, ptr %6153, align 2
  %6155 = icmp eq i16 %6154, 0
  br i1 %6155, label %6209, label %6156

6156:                                             ; preds = %6204, %6151
  %6157 = phi i16 [ %6205, %6204 ], [ %6154, %6151 ]
  %6158 = phi i32 [ %6206, %6204 ], [ 0, %6151 ]
  %6159 = getelementptr %struct.mxl5005s_state, ptr %6152, i32 0, i32 21, i32 %6158
  %6160 = load i16, ptr %6159, align 2
  %6161 = icmp eq i16 %6160, 63
  br i1 %6161, label %6162, label %6204

6162:                                             ; preds = %6156
  %6163 = getelementptr %struct.mxl5005s_state, ptr %6152, i32 0, i32 21, i32 %6158, i32 1
  %6164 = load i16, ptr %6163, align 2
  %6165 = icmp eq i16 %6164, 0
  br i1 %6165, label %6204, label %6166

6166:                                             ; preds = %6197, %6162
  %6167 = phi i32 [ %6198, %6197 ], [ 0, %6162 ]
  %6168 = getelementptr %struct.mxl5005s_state, ptr %6152, i32 0, i32 21, i32 %6158, i32 4, i32 %6167
  store i16 0, ptr %6168, align 2
  %6169 = getelementptr %struct.mxl5005s_state, ptr %6152, i32 0, i32 21, i32 %6158, i32 3, i32 %6167
  %6170 = load i16, ptr %6169, align 2
  %6171 = load ptr, ptr %3, align 4
  %6172 = getelementptr inbounds %struct.mxl5005s_state, ptr %6171, i32 0, i32 24
  %6173 = load i16, ptr %6172, align 4
  %6174 = zext i16 %6173 to i32
  %6175 = icmp eq i16 %6173, 0
  br i1 %6175, label %6197, label %6176

6176:                                             ; preds = %6166
  %6177 = getelementptr %struct.mxl5005s_state, ptr %6152, i32 0, i32 21, i32 %6158, i32 2, i32 %6167
  %6178 = load i16, ptr %6177, align 2
  %6179 = and i16 %6178, 255
  br label %6180

6180:                                             ; preds = %6194, %6176
  %6181 = phi i32 [ 0, %6176 ], [ %6195, %6194 ]
  %6182 = getelementptr %struct.mxl5005s_state, ptr %6171, i32 0, i32 25, i32 %6181
  %6183 = load i16, ptr %6182, align 2
  %6184 = icmp eq i16 %6183, %6179
  br i1 %6184, label %6185, label %6194

6185:                                             ; preds = %6180
  %6186 = and i16 %6170, 255
  %6187 = zext i16 %6186 to i32
  %6188 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6187
  %6189 = load i8, ptr %6188, align 1
  %6190 = zext i8 %6189 to i16
  %6191 = getelementptr %struct.mxl5005s_state, ptr %6171, i32 0, i32 25, i32 %6181, i32 1
  %6192 = load i16, ptr %6191, align 2
  %6193 = and i16 %6192, %6190
  store i16 %6193, ptr %6191, align 2
  br label %6197

6194:                                             ; preds = %6180
  %6195 = add nuw nsw i32 %6181, 1
  %6196 = icmp eq i32 %6195, %6174
  br i1 %6196, label %6197, label %6180

6197:                                             ; preds = %6194, %6185, %6166
  %6198 = add nuw nsw i32 %6167, 1
  %6199 = load i16, ptr %6163, align 2
  %6200 = zext i16 %6199 to i32
  %6201 = icmp ult i32 %6198, %6200
  br i1 %6201, label %6166, label %6202

6202:                                             ; preds = %6197
  %6203 = load i16, ptr %6153, align 2
  br label %6204

6204:                                             ; preds = %6202, %6162, %6156
  %6205 = phi i16 [ %6203, %6202 ], [ %6157, %6162 ], [ %6157, %6156 ]
  %6206 = add nuw nsw i32 %6158, 1
  %6207 = zext i16 %6205 to i32
  %6208 = icmp ult i32 %6206, %6207
  br i1 %6208, label %6156, label %6209

6209:                                             ; preds = %6204, %6151, %5958
  %6210 = phi i32 [ %5959, %5958 ], [ 4, %6151 ], [ 4, %6204 ]
  %6211 = phi i32 [ %5960, %5958 ], [ 900000000, %6151 ], [ 900000000, %6204 ]
  %6212 = phi i32 [ %5961, %5958 ], [ -680000000, %6151 ], [ -680000000, %6204 ]
  %6213 = load i32, ptr %40, align 4
  %6214 = sub i32 %6211, %6213
  %6215 = udiv i32 %6214, 1000
  %6216 = shl nuw nsw i32 %6215, 5
  %6217 = add nsw i32 %6212, %6211
  %6218 = udiv i32 %6217, 1000
  %6219 = udiv i32 %6216, %6218
  %6220 = add nuw nsw i32 %6219, 8
  %6221 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 64, i32 noundef %6220, i16 noundef zeroext 1) #12
  %6222 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 64, i32 noundef %6220, i16 noundef zeroext 2) #12
  %6223 = load i32, ptr %40, align 4
  %6224 = mul i32 %6223, %6210
  %6225 = udiv i32 %6224, 1000
  %6226 = load i32, ptr %35, align 4
  %6227 = shl nuw nsw i32 %39, 1
  %6228 = mul i32 %6227, %6226
  %6229 = udiv i32 %6228, 1000
  %6230 = udiv i32 %6225, %6229
  %6231 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 65, i32 noundef %6230, i16 noundef zeroext 1) #12
  %6232 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 65, i32 noundef %6230, i16 noundef zeroext 2) #12
  %6233 = load i32, ptr %40, align 4
  %6234 = udiv i32 %6233, 10000
  %6235 = mul nuw nsw i32 %6234, %6210
  %6236 = load i32, ptr %35, align 4
  %6237 = shl i32 %6236, 1
  %6238 = mul i32 %6237, %39
  %6239 = mul i32 %6238, %6230
  %6240 = udiv i32 %6239, 10000
  %6241 = sub nsw i32 %6235, %6240
  %6242 = shl i32 %6241, 18
  %6243 = udiv i32 %6238, 10000
  %6244 = udiv i32 %6242, %6243
  %6245 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 66, i32 noundef %6244, i16 noundef zeroext 1) #12
  %6246 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 66, i32 noundef %6244, i16 noundef zeroext 2) #12
  %6247 = load i32, ptr %40, align 4
  %6248 = sub i32 %6211, %6247
  %6249 = udiv i32 %6248, 1000
  %6250 = shl nuw nsw i32 %6249, 2
  %6251 = udiv i32 %6250, %6218
  %6252 = add nuw nsw i32 %6251, 1
  %6253 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 67, i32 noundef %6252, i16 noundef zeroext 1) #12
  %6254 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 67, i32 noundef %6252, i16 noundef zeroext 2) #12
  %6255 = icmp ugt i32 %6243, %6242
  %6256 = zext i1 %6255 to i32
  %6257 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 68, i32 noundef %6256, i16 noundef zeroext 1) #12
  %6258 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 68, i32 noundef %6256, i16 noundef zeroext 2) #12
  %6259 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 17
  %6260 = load i32, ptr %6259, align 4
  %6261 = icmp ult i32 %6260, 33000000
  br i1 %6261, label %20518, label %6262

6262:                                             ; preds = %6209
  %6263 = icmp ult i32 %6260, 50000001
  br i1 %6263, label %6264, label %6384

6264:                                             ; preds = %6262
  %6265 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 6, i16 noundef zeroext 1) #12
  %6266 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 6, i16 noundef zeroext 2) #12
  %6267 = load ptr, ptr %3, align 4
  %6268 = getelementptr inbounds %struct.mxl5005s_state, ptr %6267, i32 0, i32 18
  %6269 = load i16, ptr %6268, align 4
  %6270 = icmp eq i16 %6269, 0
  br i1 %6270, label %6326, label %6271

6271:                                             ; preds = %6319, %6264
  %6272 = phi i16 [ %6320, %6319 ], [ %6269, %6264 ]
  %6273 = phi i32 [ %6321, %6319 ], [ 0, %6264 ]
  %6274 = getelementptr %struct.mxl5005s_state, ptr %6267, i32 0, i32 19, i32 %6273
  %6275 = load i16, ptr %6274, align 2
  %6276 = icmp eq i16 %6275, 70
  br i1 %6276, label %6277, label %6319

6277:                                             ; preds = %6271
  %6278 = getelementptr %struct.mxl5005s_state, ptr %6267, i32 0, i32 19, i32 %6273, i32 1
  %6279 = load i16, ptr %6278, align 2
  %6280 = icmp eq i16 %6279, 0
  br i1 %6280, label %6319, label %6281

6281:                                             ; preds = %6312, %6277
  %6282 = phi i32 [ %6313, %6312 ], [ 0, %6277 ]
  %6283 = getelementptr %struct.mxl5005s_state, ptr %6267, i32 0, i32 19, i32 %6273, i32 4, i32 %6282
  store i16 0, ptr %6283, align 2
  %6284 = getelementptr %struct.mxl5005s_state, ptr %6267, i32 0, i32 19, i32 %6273, i32 3, i32 %6282
  %6285 = load i16, ptr %6284, align 2
  %6286 = load ptr, ptr %3, align 4
  %6287 = getelementptr inbounds %struct.mxl5005s_state, ptr %6286, i32 0, i32 24
  %6288 = load i16, ptr %6287, align 4
  %6289 = zext i16 %6288 to i32
  %6290 = icmp eq i16 %6288, 0
  br i1 %6290, label %6312, label %6291

6291:                                             ; preds = %6281
  %6292 = getelementptr %struct.mxl5005s_state, ptr %6267, i32 0, i32 19, i32 %6273, i32 2, i32 %6282
  %6293 = load i16, ptr %6292, align 2
  %6294 = and i16 %6293, 255
  br label %6295

6295:                                             ; preds = %6309, %6291
  %6296 = phi i32 [ 0, %6291 ], [ %6310, %6309 ]
  %6297 = getelementptr %struct.mxl5005s_state, ptr %6286, i32 0, i32 25, i32 %6296
  %6298 = load i16, ptr %6297, align 2
  %6299 = icmp eq i16 %6298, %6294
  br i1 %6299, label %6300, label %6309

6300:                                             ; preds = %6295
  %6301 = and i16 %6285, 255
  %6302 = zext i16 %6301 to i32
  %6303 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6302
  %6304 = load i8, ptr %6303, align 1
  %6305 = zext i8 %6304 to i16
  %6306 = getelementptr %struct.mxl5005s_state, ptr %6286, i32 0, i32 25, i32 %6296, i32 1
  %6307 = load i16, ptr %6306, align 2
  %6308 = and i16 %6307, %6305
  store i16 %6308, ptr %6306, align 2
  br label %6312

6309:                                             ; preds = %6295
  %6310 = add nuw nsw i32 %6296, 1
  %6311 = icmp eq i32 %6310, %6289
  br i1 %6311, label %6312, label %6295

6312:                                             ; preds = %6309, %6300, %6281
  %6313 = add nuw nsw i32 %6282, 1
  %6314 = load i16, ptr %6278, align 2
  %6315 = zext i16 %6314 to i32
  %6316 = icmp ult i32 %6313, %6315
  br i1 %6316, label %6281, label %6317

6317:                                             ; preds = %6312
  %6318 = load i16, ptr %6268, align 4
  br label %6319

6319:                                             ; preds = %6317, %6277, %6271
  %6320 = phi i16 [ %6318, %6317 ], [ %6272, %6277 ], [ %6272, %6271 ]
  %6321 = add nuw nsw i32 %6273, 1
  %6322 = zext i16 %6320 to i32
  %6323 = icmp ult i32 %6321, %6322
  br i1 %6323, label %6271, label %6324

6324:                                             ; preds = %6319
  %6325 = load ptr, ptr %3, align 4
  br label %6326

6326:                                             ; preds = %6324, %6264
  %6327 = phi ptr [ %6325, %6324 ], [ %6267, %6264 ]
  %6328 = getelementptr inbounds %struct.mxl5005s_state, ptr %6327, i32 0, i32 20
  %6329 = load i16, ptr %6328, align 2
  %6330 = icmp eq i16 %6329, 0
  br i1 %6330, label %6384, label %6331

6331:                                             ; preds = %6379, %6326
  %6332 = phi i16 [ %6380, %6379 ], [ %6329, %6326 ]
  %6333 = phi i32 [ %6381, %6379 ], [ 0, %6326 ]
  %6334 = getelementptr %struct.mxl5005s_state, ptr %6327, i32 0, i32 21, i32 %6333
  %6335 = load i16, ptr %6334, align 2
  %6336 = icmp eq i16 %6335, 70
  br i1 %6336, label %6337, label %6379

6337:                                             ; preds = %6331
  %6338 = getelementptr %struct.mxl5005s_state, ptr %6327, i32 0, i32 21, i32 %6333, i32 1
  %6339 = load i16, ptr %6338, align 2
  %6340 = icmp eq i16 %6339, 0
  br i1 %6340, label %6379, label %6341

6341:                                             ; preds = %6372, %6337
  %6342 = phi i32 [ %6373, %6372 ], [ 0, %6337 ]
  %6343 = getelementptr %struct.mxl5005s_state, ptr %6327, i32 0, i32 21, i32 %6333, i32 4, i32 %6342
  store i16 0, ptr %6343, align 2
  %6344 = getelementptr %struct.mxl5005s_state, ptr %6327, i32 0, i32 21, i32 %6333, i32 3, i32 %6342
  %6345 = load i16, ptr %6344, align 2
  %6346 = load ptr, ptr %3, align 4
  %6347 = getelementptr inbounds %struct.mxl5005s_state, ptr %6346, i32 0, i32 24
  %6348 = load i16, ptr %6347, align 4
  %6349 = zext i16 %6348 to i32
  %6350 = icmp eq i16 %6348, 0
  br i1 %6350, label %6372, label %6351

6351:                                             ; preds = %6341
  %6352 = getelementptr %struct.mxl5005s_state, ptr %6327, i32 0, i32 21, i32 %6333, i32 2, i32 %6342
  %6353 = load i16, ptr %6352, align 2
  %6354 = and i16 %6353, 255
  br label %6355

6355:                                             ; preds = %6369, %6351
  %6356 = phi i32 [ 0, %6351 ], [ %6370, %6369 ]
  %6357 = getelementptr %struct.mxl5005s_state, ptr %6346, i32 0, i32 25, i32 %6356
  %6358 = load i16, ptr %6357, align 2
  %6359 = icmp eq i16 %6358, %6354
  br i1 %6359, label %6360, label %6369

6360:                                             ; preds = %6355
  %6361 = and i16 %6345, 255
  %6362 = zext i16 %6361 to i32
  %6363 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6362
  %6364 = load i8, ptr %6363, align 1
  %6365 = zext i8 %6364 to i16
  %6366 = getelementptr %struct.mxl5005s_state, ptr %6346, i32 0, i32 25, i32 %6356, i32 1
  %6367 = load i16, ptr %6366, align 2
  %6368 = and i16 %6367, %6365
  store i16 %6368, ptr %6366, align 2
  br label %6372

6369:                                             ; preds = %6355
  %6370 = add nuw nsw i32 %6356, 1
  %6371 = icmp eq i32 %6370, %6349
  br i1 %6371, label %6372, label %6355

6372:                                             ; preds = %6369, %6360, %6341
  %6373 = add nuw nsw i32 %6342, 1
  %6374 = load i16, ptr %6338, align 2
  %6375 = zext i16 %6374 to i32
  %6376 = icmp ult i32 %6373, %6375
  br i1 %6376, label %6341, label %6377

6377:                                             ; preds = %6372
  %6378 = load i16, ptr %6328, align 2
  br label %6379

6379:                                             ; preds = %6377, %6337, %6331
  %6380 = phi i16 [ %6378, %6377 ], [ %6332, %6337 ], [ %6332, %6331 ]
  %6381 = add nuw nsw i32 %6333, 1
  %6382 = zext i16 %6380 to i32
  %6383 = icmp ult i32 %6381, %6382
  br i1 %6383, label %6331, label %6384

6384:                                             ; preds = %6379, %6326, %6262
  %6385 = phi i32 [ %6210, %6262 ], [ 36, %6326 ], [ 36, %6379 ]
  %6386 = load i32, ptr %6259, align 4
  %6387 = add i32 %6386, -50000001
  %6388 = icmp ult i32 %6387, 17000000
  br i1 %6388, label %6389, label %6509

6389:                                             ; preds = %6384
  %6390 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 1, i16 noundef zeroext 1) #12
  %6391 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 1, i16 noundef zeroext 2) #12
  %6392 = load ptr, ptr %3, align 4
  %6393 = getelementptr inbounds %struct.mxl5005s_state, ptr %6392, i32 0, i32 18
  %6394 = load i16, ptr %6393, align 4
  %6395 = icmp eq i16 %6394, 0
  br i1 %6395, label %6451, label %6396

6396:                                             ; preds = %6444, %6389
  %6397 = phi i16 [ %6445, %6444 ], [ %6394, %6389 ]
  %6398 = phi i32 [ %6446, %6444 ], [ 0, %6389 ]
  %6399 = getelementptr %struct.mxl5005s_state, ptr %6392, i32 0, i32 19, i32 %6398
  %6400 = load i16, ptr %6399, align 2
  %6401 = icmp eq i16 %6400, 70
  br i1 %6401, label %6402, label %6444

6402:                                             ; preds = %6396
  %6403 = getelementptr %struct.mxl5005s_state, ptr %6392, i32 0, i32 19, i32 %6398, i32 1
  %6404 = load i16, ptr %6403, align 2
  %6405 = icmp eq i16 %6404, 0
  br i1 %6405, label %6444, label %6406

6406:                                             ; preds = %6437, %6402
  %6407 = phi i32 [ %6438, %6437 ], [ 0, %6402 ]
  %6408 = getelementptr %struct.mxl5005s_state, ptr %6392, i32 0, i32 19, i32 %6398, i32 4, i32 %6407
  store i16 0, ptr %6408, align 2
  %6409 = getelementptr %struct.mxl5005s_state, ptr %6392, i32 0, i32 19, i32 %6398, i32 3, i32 %6407
  %6410 = load i16, ptr %6409, align 2
  %6411 = load ptr, ptr %3, align 4
  %6412 = getelementptr inbounds %struct.mxl5005s_state, ptr %6411, i32 0, i32 24
  %6413 = load i16, ptr %6412, align 4
  %6414 = zext i16 %6413 to i32
  %6415 = icmp eq i16 %6413, 0
  br i1 %6415, label %6437, label %6416

6416:                                             ; preds = %6406
  %6417 = getelementptr %struct.mxl5005s_state, ptr %6392, i32 0, i32 19, i32 %6398, i32 2, i32 %6407
  %6418 = load i16, ptr %6417, align 2
  %6419 = and i16 %6418, 255
  br label %6420

6420:                                             ; preds = %6434, %6416
  %6421 = phi i32 [ 0, %6416 ], [ %6435, %6434 ]
  %6422 = getelementptr %struct.mxl5005s_state, ptr %6411, i32 0, i32 25, i32 %6421
  %6423 = load i16, ptr %6422, align 2
  %6424 = icmp eq i16 %6423, %6419
  br i1 %6424, label %6425, label %6434

6425:                                             ; preds = %6420
  %6426 = and i16 %6410, 255
  %6427 = zext i16 %6426 to i32
  %6428 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6427
  %6429 = load i8, ptr %6428, align 1
  %6430 = zext i8 %6429 to i16
  %6431 = getelementptr %struct.mxl5005s_state, ptr %6411, i32 0, i32 25, i32 %6421, i32 1
  %6432 = load i16, ptr %6431, align 2
  %6433 = and i16 %6432, %6430
  store i16 %6433, ptr %6431, align 2
  br label %6437

6434:                                             ; preds = %6420
  %6435 = add nuw nsw i32 %6421, 1
  %6436 = icmp eq i32 %6435, %6414
  br i1 %6436, label %6437, label %6420

6437:                                             ; preds = %6434, %6425, %6406
  %6438 = add nuw nsw i32 %6407, 1
  %6439 = load i16, ptr %6403, align 2
  %6440 = zext i16 %6439 to i32
  %6441 = icmp ult i32 %6438, %6440
  br i1 %6441, label %6406, label %6442

6442:                                             ; preds = %6437
  %6443 = load i16, ptr %6393, align 4
  br label %6444

6444:                                             ; preds = %6442, %6402, %6396
  %6445 = phi i16 [ %6443, %6442 ], [ %6397, %6402 ], [ %6397, %6396 ]
  %6446 = add nuw nsw i32 %6398, 1
  %6447 = zext i16 %6445 to i32
  %6448 = icmp ult i32 %6446, %6447
  br i1 %6448, label %6396, label %6449

6449:                                             ; preds = %6444
  %6450 = load ptr, ptr %3, align 4
  br label %6451

6451:                                             ; preds = %6449, %6389
  %6452 = phi ptr [ %6450, %6449 ], [ %6392, %6389 ]
  %6453 = getelementptr inbounds %struct.mxl5005s_state, ptr %6452, i32 0, i32 20
  %6454 = load i16, ptr %6453, align 2
  %6455 = icmp eq i16 %6454, 0
  br i1 %6455, label %6509, label %6456

6456:                                             ; preds = %6504, %6451
  %6457 = phi i16 [ %6505, %6504 ], [ %6454, %6451 ]
  %6458 = phi i32 [ %6506, %6504 ], [ 0, %6451 ]
  %6459 = getelementptr %struct.mxl5005s_state, ptr %6452, i32 0, i32 21, i32 %6458
  %6460 = load i16, ptr %6459, align 2
  %6461 = icmp eq i16 %6460, 70
  br i1 %6461, label %6462, label %6504

6462:                                             ; preds = %6456
  %6463 = getelementptr %struct.mxl5005s_state, ptr %6452, i32 0, i32 21, i32 %6458, i32 1
  %6464 = load i16, ptr %6463, align 2
  %6465 = icmp eq i16 %6464, 0
  br i1 %6465, label %6504, label %6466

6466:                                             ; preds = %6497, %6462
  %6467 = phi i32 [ %6498, %6497 ], [ 0, %6462 ]
  %6468 = getelementptr %struct.mxl5005s_state, ptr %6452, i32 0, i32 21, i32 %6458, i32 4, i32 %6467
  store i16 0, ptr %6468, align 2
  %6469 = getelementptr %struct.mxl5005s_state, ptr %6452, i32 0, i32 21, i32 %6458, i32 3, i32 %6467
  %6470 = load i16, ptr %6469, align 2
  %6471 = load ptr, ptr %3, align 4
  %6472 = getelementptr inbounds %struct.mxl5005s_state, ptr %6471, i32 0, i32 24
  %6473 = load i16, ptr %6472, align 4
  %6474 = zext i16 %6473 to i32
  %6475 = icmp eq i16 %6473, 0
  br i1 %6475, label %6497, label %6476

6476:                                             ; preds = %6466
  %6477 = getelementptr %struct.mxl5005s_state, ptr %6452, i32 0, i32 21, i32 %6458, i32 2, i32 %6467
  %6478 = load i16, ptr %6477, align 2
  %6479 = and i16 %6478, 255
  br label %6480

6480:                                             ; preds = %6494, %6476
  %6481 = phi i32 [ 0, %6476 ], [ %6495, %6494 ]
  %6482 = getelementptr %struct.mxl5005s_state, ptr %6471, i32 0, i32 25, i32 %6481
  %6483 = load i16, ptr %6482, align 2
  %6484 = icmp eq i16 %6483, %6479
  br i1 %6484, label %6485, label %6494

6485:                                             ; preds = %6480
  %6486 = and i16 %6470, 255
  %6487 = zext i16 %6486 to i32
  %6488 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6487
  %6489 = load i8, ptr %6488, align 1
  %6490 = zext i8 %6489 to i16
  %6491 = getelementptr %struct.mxl5005s_state, ptr %6471, i32 0, i32 25, i32 %6481, i32 1
  %6492 = load i16, ptr %6491, align 2
  %6493 = and i16 %6492, %6490
  store i16 %6493, ptr %6491, align 2
  br label %6497

6494:                                             ; preds = %6480
  %6495 = add nuw nsw i32 %6481, 1
  %6496 = icmp eq i32 %6495, %6474
  br i1 %6496, label %6497, label %6480

6497:                                             ; preds = %6494, %6485, %6466
  %6498 = add nuw nsw i32 %6467, 1
  %6499 = load i16, ptr %6463, align 2
  %6500 = zext i16 %6499 to i32
  %6501 = icmp ult i32 %6498, %6500
  br i1 %6501, label %6466, label %6502

6502:                                             ; preds = %6497
  %6503 = load i16, ptr %6453, align 2
  br label %6504

6504:                                             ; preds = %6502, %6462, %6456
  %6505 = phi i16 [ %6503, %6502 ], [ %6457, %6462 ], [ %6457, %6456 ]
  %6506 = add nuw nsw i32 %6458, 1
  %6507 = zext i16 %6505 to i32
  %6508 = icmp ult i32 %6506, %6507
  br i1 %6508, label %6456, label %6509

6509:                                             ; preds = %6504, %6451, %6384
  %6510 = phi i32 [ %6385, %6384 ], [ 24, %6451 ], [ 24, %6504 ]
  %6511 = load i32, ptr %6259, align 4
  %6512 = add i32 %6511, -67000001
  %6513 = icmp ult i32 %6512, 33000000
  br i1 %6513, label %6514, label %6520

6514:                                             ; preds = %6509
  %6515 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 12, i16 noundef zeroext 1) #12
  %6516 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 12, i16 noundef zeroext 2) #12
  %6517 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 2, i16 noundef zeroext 1) #12
  %6518 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 2, i16 noundef zeroext 2) #12
  %6519 = load i32, ptr %6259, align 4
  br label %6520

6520:                                             ; preds = %6514, %6509
  %6521 = phi i32 [ %6519, %6514 ], [ %6511, %6509 ]
  %6522 = phi i32 [ 18, %6514 ], [ %6510, %6509 ]
  %6523 = add i32 %6521, -100000001
  %6524 = icmp ult i32 %6523, 50000000
  br i1 %6524, label %6525, label %6531

6525:                                             ; preds = %6520
  %6526 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 8, i16 noundef zeroext 1) #12
  %6527 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 8, i16 noundef zeroext 2) #12
  %6528 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 2, i16 noundef zeroext 1) #12
  %6529 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 2, i16 noundef zeroext 2) #12
  %6530 = load i32, ptr %6259, align 4
  br label %6531

6531:                                             ; preds = %6525, %6520
  %6532 = phi i32 [ %6530, %6525 ], [ %6521, %6520 ]
  %6533 = phi i32 [ 12, %6525 ], [ %6522, %6520 ]
  %6534 = add i32 %6532, -150000001
  %6535 = icmp ult i32 %6534, 50000000
  br i1 %6535, label %6536, label %6658

6536:                                             ; preds = %6531
  %6537 = load ptr, ptr %3, align 4
  %6538 = getelementptr inbounds %struct.mxl5005s_state, ptr %6537, i32 0, i32 18
  %6539 = load i16, ptr %6538, align 4
  %6540 = icmp eq i16 %6539, 0
  br i1 %6540, label %6596, label %6541

6541:                                             ; preds = %6589, %6536
  %6542 = phi i16 [ %6590, %6589 ], [ %6539, %6536 ]
  %6543 = phi i32 [ %6591, %6589 ], [ 0, %6536 ]
  %6544 = getelementptr %struct.mxl5005s_state, ptr %6537, i32 0, i32 19, i32 %6543
  %6545 = load i16, ptr %6544, align 2
  %6546 = icmp eq i16 %6545, 69
  br i1 %6546, label %6547, label %6589

6547:                                             ; preds = %6541
  %6548 = getelementptr %struct.mxl5005s_state, ptr %6537, i32 0, i32 19, i32 %6543, i32 1
  %6549 = load i16, ptr %6548, align 2
  %6550 = icmp eq i16 %6549, 0
  br i1 %6550, label %6589, label %6551

6551:                                             ; preds = %6582, %6547
  %6552 = phi i32 [ %6583, %6582 ], [ 0, %6547 ]
  %6553 = getelementptr %struct.mxl5005s_state, ptr %6537, i32 0, i32 19, i32 %6543, i32 4, i32 %6552
  store i16 0, ptr %6553, align 2
  %6554 = getelementptr %struct.mxl5005s_state, ptr %6537, i32 0, i32 19, i32 %6543, i32 3, i32 %6552
  %6555 = load i16, ptr %6554, align 2
  %6556 = load ptr, ptr %3, align 4
  %6557 = getelementptr inbounds %struct.mxl5005s_state, ptr %6556, i32 0, i32 24
  %6558 = load i16, ptr %6557, align 4
  %6559 = zext i16 %6558 to i32
  %6560 = icmp eq i16 %6558, 0
  br i1 %6560, label %6582, label %6561

6561:                                             ; preds = %6551
  %6562 = getelementptr %struct.mxl5005s_state, ptr %6537, i32 0, i32 19, i32 %6543, i32 2, i32 %6552
  %6563 = load i16, ptr %6562, align 2
  %6564 = and i16 %6563, 255
  br label %6565

6565:                                             ; preds = %6579, %6561
  %6566 = phi i32 [ 0, %6561 ], [ %6580, %6579 ]
  %6567 = getelementptr %struct.mxl5005s_state, ptr %6556, i32 0, i32 25, i32 %6566
  %6568 = load i16, ptr %6567, align 2
  %6569 = icmp eq i16 %6568, %6564
  br i1 %6569, label %6570, label %6579

6570:                                             ; preds = %6565
  %6571 = and i16 %6555, 255
  %6572 = zext i16 %6571 to i32
  %6573 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6572
  %6574 = load i8, ptr %6573, align 1
  %6575 = zext i8 %6574 to i16
  %6576 = getelementptr %struct.mxl5005s_state, ptr %6556, i32 0, i32 25, i32 %6566, i32 1
  %6577 = load i16, ptr %6576, align 2
  %6578 = and i16 %6577, %6575
  store i16 %6578, ptr %6576, align 2
  br label %6582

6579:                                             ; preds = %6565
  %6580 = add nuw nsw i32 %6566, 1
  %6581 = icmp eq i32 %6580, %6559
  br i1 %6581, label %6582, label %6565

6582:                                             ; preds = %6579, %6570, %6551
  %6583 = add nuw nsw i32 %6552, 1
  %6584 = load i16, ptr %6548, align 2
  %6585 = zext i16 %6584 to i32
  %6586 = icmp ult i32 %6583, %6585
  br i1 %6586, label %6551, label %6587

6587:                                             ; preds = %6582
  %6588 = load i16, ptr %6538, align 4
  br label %6589

6589:                                             ; preds = %6587, %6547, %6541
  %6590 = phi i16 [ %6588, %6587 ], [ %6542, %6547 ], [ %6542, %6541 ]
  %6591 = add nuw nsw i32 %6543, 1
  %6592 = zext i16 %6590 to i32
  %6593 = icmp ult i32 %6591, %6592
  br i1 %6593, label %6541, label %6594

6594:                                             ; preds = %6589
  %6595 = load ptr, ptr %3, align 4
  br label %6596

6596:                                             ; preds = %6594, %6536
  %6597 = phi ptr [ %6595, %6594 ], [ %6537, %6536 ]
  %6598 = getelementptr inbounds %struct.mxl5005s_state, ptr %6597, i32 0, i32 20
  %6599 = load i16, ptr %6598, align 2
  %6600 = icmp eq i16 %6599, 0
  br i1 %6600, label %6654, label %6601

6601:                                             ; preds = %6649, %6596
  %6602 = phi i16 [ %6650, %6649 ], [ %6599, %6596 ]
  %6603 = phi i32 [ %6651, %6649 ], [ 0, %6596 ]
  %6604 = getelementptr %struct.mxl5005s_state, ptr %6597, i32 0, i32 21, i32 %6603
  %6605 = load i16, ptr %6604, align 2
  %6606 = icmp eq i16 %6605, 69
  br i1 %6606, label %6607, label %6649

6607:                                             ; preds = %6601
  %6608 = getelementptr %struct.mxl5005s_state, ptr %6597, i32 0, i32 21, i32 %6603, i32 1
  %6609 = load i16, ptr %6608, align 2
  %6610 = icmp eq i16 %6609, 0
  br i1 %6610, label %6649, label %6611

6611:                                             ; preds = %6642, %6607
  %6612 = phi i32 [ %6643, %6642 ], [ 0, %6607 ]
  %6613 = getelementptr %struct.mxl5005s_state, ptr %6597, i32 0, i32 21, i32 %6603, i32 4, i32 %6612
  store i16 0, ptr %6613, align 2
  %6614 = getelementptr %struct.mxl5005s_state, ptr %6597, i32 0, i32 21, i32 %6603, i32 3, i32 %6612
  %6615 = load i16, ptr %6614, align 2
  %6616 = load ptr, ptr %3, align 4
  %6617 = getelementptr inbounds %struct.mxl5005s_state, ptr %6616, i32 0, i32 24
  %6618 = load i16, ptr %6617, align 4
  %6619 = zext i16 %6618 to i32
  %6620 = icmp eq i16 %6618, 0
  br i1 %6620, label %6642, label %6621

6621:                                             ; preds = %6611
  %6622 = getelementptr %struct.mxl5005s_state, ptr %6597, i32 0, i32 21, i32 %6603, i32 2, i32 %6612
  %6623 = load i16, ptr %6622, align 2
  %6624 = and i16 %6623, 255
  br label %6625

6625:                                             ; preds = %6639, %6621
  %6626 = phi i32 [ 0, %6621 ], [ %6640, %6639 ]
  %6627 = getelementptr %struct.mxl5005s_state, ptr %6616, i32 0, i32 25, i32 %6626
  %6628 = load i16, ptr %6627, align 2
  %6629 = icmp eq i16 %6628, %6624
  br i1 %6629, label %6630, label %6639

6630:                                             ; preds = %6625
  %6631 = and i16 %6615, 255
  %6632 = zext i16 %6631 to i32
  %6633 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6632
  %6634 = load i8, ptr %6633, align 1
  %6635 = zext i8 %6634 to i16
  %6636 = getelementptr %struct.mxl5005s_state, ptr %6616, i32 0, i32 25, i32 %6626, i32 1
  %6637 = load i16, ptr %6636, align 2
  %6638 = and i16 %6637, %6635
  store i16 %6638, ptr %6636, align 2
  br label %6642

6639:                                             ; preds = %6625
  %6640 = add nuw nsw i32 %6626, 1
  %6641 = icmp eq i32 %6640, %6619
  br i1 %6641, label %6642, label %6625

6642:                                             ; preds = %6639, %6630, %6611
  %6643 = add nuw nsw i32 %6612, 1
  %6644 = load i16, ptr %6608, align 2
  %6645 = zext i16 %6644 to i32
  %6646 = icmp ult i32 %6643, %6645
  br i1 %6646, label %6611, label %6647

6647:                                             ; preds = %6642
  %6648 = load i16, ptr %6598, align 2
  br label %6649

6649:                                             ; preds = %6647, %6607, %6601
  %6650 = phi i16 [ %6648, %6647 ], [ %6602, %6607 ], [ %6602, %6601 ]
  %6651 = add nuw nsw i32 %6603, 1
  %6652 = zext i16 %6650 to i32
  %6653 = icmp ult i32 %6651, %6652
  br i1 %6653, label %6601, label %6654

6654:                                             ; preds = %6649, %6596
  %6655 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 2, i16 noundef zeroext 1) #12
  %6656 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 2, i16 noundef zeroext 2) #12
  %6657 = load i32, ptr %6259, align 4
  br label %6658

6658:                                             ; preds = %6654, %6531
  %6659 = phi i32 [ %6657, %6654 ], [ %6532, %6531 ]
  %6660 = phi i32 [ 8, %6654 ], [ %6533, %6531 ]
  %6661 = add i32 %6659, -200000001
  %6662 = icmp ult i32 %6661, 100000000
  br i1 %6662, label %6663, label %6669

6663:                                             ; preds = %6658
  %6664 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 8, i16 noundef zeroext 1) #12
  %6665 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 8, i16 noundef zeroext 2) #12
  %6666 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 3, i16 noundef zeroext 1) #12
  %6667 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 3, i16 noundef zeroext 2) #12
  %6668 = load i32, ptr %6259, align 4
  br label %6669

6669:                                             ; preds = %6663, %6658
  %6670 = phi i32 [ %6668, %6663 ], [ %6659, %6658 ]
  %6671 = phi i32 [ 6, %6663 ], [ %6660, %6658 ]
  %6672 = add i32 %6670, -300000001
  %6673 = icmp ult i32 %6672, 100000000
  br i1 %6673, label %6674, label %6796

6674:                                             ; preds = %6669
  %6675 = load ptr, ptr %3, align 4
  %6676 = getelementptr inbounds %struct.mxl5005s_state, ptr %6675, i32 0, i32 18
  %6677 = load i16, ptr %6676, align 4
  %6678 = icmp eq i16 %6677, 0
  br i1 %6678, label %6734, label %6679

6679:                                             ; preds = %6727, %6674
  %6680 = phi i16 [ %6728, %6727 ], [ %6677, %6674 ]
  %6681 = phi i32 [ %6729, %6727 ], [ 0, %6674 ]
  %6682 = getelementptr %struct.mxl5005s_state, ptr %6675, i32 0, i32 19, i32 %6681
  %6683 = load i16, ptr %6682, align 2
  %6684 = icmp eq i16 %6683, 69
  br i1 %6684, label %6685, label %6727

6685:                                             ; preds = %6679
  %6686 = getelementptr %struct.mxl5005s_state, ptr %6675, i32 0, i32 19, i32 %6681, i32 1
  %6687 = load i16, ptr %6686, align 2
  %6688 = icmp eq i16 %6687, 0
  br i1 %6688, label %6727, label %6689

6689:                                             ; preds = %6720, %6685
  %6690 = phi i32 [ %6721, %6720 ], [ 0, %6685 ]
  %6691 = getelementptr %struct.mxl5005s_state, ptr %6675, i32 0, i32 19, i32 %6681, i32 4, i32 %6690
  store i16 0, ptr %6691, align 2
  %6692 = getelementptr %struct.mxl5005s_state, ptr %6675, i32 0, i32 19, i32 %6681, i32 3, i32 %6690
  %6693 = load i16, ptr %6692, align 2
  %6694 = load ptr, ptr %3, align 4
  %6695 = getelementptr inbounds %struct.mxl5005s_state, ptr %6694, i32 0, i32 24
  %6696 = load i16, ptr %6695, align 4
  %6697 = zext i16 %6696 to i32
  %6698 = icmp eq i16 %6696, 0
  br i1 %6698, label %6720, label %6699

6699:                                             ; preds = %6689
  %6700 = getelementptr %struct.mxl5005s_state, ptr %6675, i32 0, i32 19, i32 %6681, i32 2, i32 %6690
  %6701 = load i16, ptr %6700, align 2
  %6702 = and i16 %6701, 255
  br label %6703

6703:                                             ; preds = %6717, %6699
  %6704 = phi i32 [ 0, %6699 ], [ %6718, %6717 ]
  %6705 = getelementptr %struct.mxl5005s_state, ptr %6694, i32 0, i32 25, i32 %6704
  %6706 = load i16, ptr %6705, align 2
  %6707 = icmp eq i16 %6706, %6702
  br i1 %6707, label %6708, label %6717

6708:                                             ; preds = %6703
  %6709 = and i16 %6693, 255
  %6710 = zext i16 %6709 to i32
  %6711 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6710
  %6712 = load i8, ptr %6711, align 1
  %6713 = zext i8 %6712 to i16
  %6714 = getelementptr %struct.mxl5005s_state, ptr %6694, i32 0, i32 25, i32 %6704, i32 1
  %6715 = load i16, ptr %6714, align 2
  %6716 = and i16 %6715, %6713
  store i16 %6716, ptr %6714, align 2
  br label %6720

6717:                                             ; preds = %6703
  %6718 = add nuw nsw i32 %6704, 1
  %6719 = icmp eq i32 %6718, %6697
  br i1 %6719, label %6720, label %6703

6720:                                             ; preds = %6717, %6708, %6689
  %6721 = add nuw nsw i32 %6690, 1
  %6722 = load i16, ptr %6686, align 2
  %6723 = zext i16 %6722 to i32
  %6724 = icmp ult i32 %6721, %6723
  br i1 %6724, label %6689, label %6725

6725:                                             ; preds = %6720
  %6726 = load i16, ptr %6676, align 4
  br label %6727

6727:                                             ; preds = %6725, %6685, %6679
  %6728 = phi i16 [ %6726, %6725 ], [ %6680, %6685 ], [ %6680, %6679 ]
  %6729 = add nuw nsw i32 %6681, 1
  %6730 = zext i16 %6728 to i32
  %6731 = icmp ult i32 %6729, %6730
  br i1 %6731, label %6679, label %6732

6732:                                             ; preds = %6727
  %6733 = load ptr, ptr %3, align 4
  br label %6734

6734:                                             ; preds = %6732, %6674
  %6735 = phi ptr [ %6733, %6732 ], [ %6675, %6674 ]
  %6736 = getelementptr inbounds %struct.mxl5005s_state, ptr %6735, i32 0, i32 20
  %6737 = load i16, ptr %6736, align 2
  %6738 = icmp eq i16 %6737, 0
  br i1 %6738, label %6792, label %6739

6739:                                             ; preds = %6787, %6734
  %6740 = phi i16 [ %6788, %6787 ], [ %6737, %6734 ]
  %6741 = phi i32 [ %6789, %6787 ], [ 0, %6734 ]
  %6742 = getelementptr %struct.mxl5005s_state, ptr %6735, i32 0, i32 21, i32 %6741
  %6743 = load i16, ptr %6742, align 2
  %6744 = icmp eq i16 %6743, 69
  br i1 %6744, label %6745, label %6787

6745:                                             ; preds = %6739
  %6746 = getelementptr %struct.mxl5005s_state, ptr %6735, i32 0, i32 21, i32 %6741, i32 1
  %6747 = load i16, ptr %6746, align 2
  %6748 = icmp eq i16 %6747, 0
  br i1 %6748, label %6787, label %6749

6749:                                             ; preds = %6780, %6745
  %6750 = phi i32 [ %6781, %6780 ], [ 0, %6745 ]
  %6751 = getelementptr %struct.mxl5005s_state, ptr %6735, i32 0, i32 21, i32 %6741, i32 4, i32 %6750
  store i16 0, ptr %6751, align 2
  %6752 = getelementptr %struct.mxl5005s_state, ptr %6735, i32 0, i32 21, i32 %6741, i32 3, i32 %6750
  %6753 = load i16, ptr %6752, align 2
  %6754 = load ptr, ptr %3, align 4
  %6755 = getelementptr inbounds %struct.mxl5005s_state, ptr %6754, i32 0, i32 24
  %6756 = load i16, ptr %6755, align 4
  %6757 = zext i16 %6756 to i32
  %6758 = icmp eq i16 %6756, 0
  br i1 %6758, label %6780, label %6759

6759:                                             ; preds = %6749
  %6760 = getelementptr %struct.mxl5005s_state, ptr %6735, i32 0, i32 21, i32 %6741, i32 2, i32 %6750
  %6761 = load i16, ptr %6760, align 2
  %6762 = and i16 %6761, 255
  br label %6763

6763:                                             ; preds = %6777, %6759
  %6764 = phi i32 [ 0, %6759 ], [ %6778, %6777 ]
  %6765 = getelementptr %struct.mxl5005s_state, ptr %6754, i32 0, i32 25, i32 %6764
  %6766 = load i16, ptr %6765, align 2
  %6767 = icmp eq i16 %6766, %6762
  br i1 %6767, label %6768, label %6777

6768:                                             ; preds = %6763
  %6769 = and i16 %6753, 255
  %6770 = zext i16 %6769 to i32
  %6771 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6770
  %6772 = load i8, ptr %6771, align 1
  %6773 = zext i8 %6772 to i16
  %6774 = getelementptr %struct.mxl5005s_state, ptr %6754, i32 0, i32 25, i32 %6764, i32 1
  %6775 = load i16, ptr %6774, align 2
  %6776 = and i16 %6775, %6773
  store i16 %6776, ptr %6774, align 2
  br label %6780

6777:                                             ; preds = %6763
  %6778 = add nuw nsw i32 %6764, 1
  %6779 = icmp eq i32 %6778, %6757
  br i1 %6779, label %6780, label %6763

6780:                                             ; preds = %6777, %6768, %6749
  %6781 = add nuw nsw i32 %6750, 1
  %6782 = load i16, ptr %6746, align 2
  %6783 = zext i16 %6782 to i32
  %6784 = icmp ult i32 %6781, %6783
  br i1 %6784, label %6749, label %6785

6785:                                             ; preds = %6780
  %6786 = load i16, ptr %6736, align 2
  br label %6787

6787:                                             ; preds = %6785, %6745, %6739
  %6788 = phi i16 [ %6786, %6785 ], [ %6740, %6745 ], [ %6740, %6739 ]
  %6789 = add nuw nsw i32 %6741, 1
  %6790 = zext i16 %6788 to i32
  %6791 = icmp ult i32 %6789, %6790
  br i1 %6791, label %6739, label %6792

6792:                                             ; preds = %6787, %6734
  %6793 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 3, i16 noundef zeroext 1) #12
  %6794 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 3, i16 noundef zeroext 2) #12
  %6795 = load i32, ptr %6259, align 4
  br label %6796

6796:                                             ; preds = %6792, %6669
  %6797 = phi i32 [ %6795, %6792 ], [ %6670, %6669 ]
  %6798 = phi i32 [ 4, %6792 ], [ %6671, %6669 ]
  %6799 = add i32 %6797, -400000001
  %6800 = icmp ult i32 %6799, 200000000
  br i1 %6800, label %6801, label %6807

6801:                                             ; preds = %6796
  %6802 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 8, i16 noundef zeroext 1) #12
  %6803 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 69, i32 noundef 8, i16 noundef zeroext 2) #12
  %6804 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 7, i16 noundef zeroext 1) #12
  %6805 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 7, i16 noundef zeroext 2) #12
  %6806 = load i32, ptr %6259, align 4
  br label %6807

6807:                                             ; preds = %6801, %6796
  %6808 = phi i32 [ %6806, %6801 ], [ %6797, %6796 ]
  %6809 = phi i32 [ 3, %6801 ], [ %6798, %6796 ]
  %6810 = add i32 %6808, -600000001
  %6811 = icmp ult i32 %6810, 300000000
  br i1 %6811, label %6812, label %6934

6812:                                             ; preds = %6807
  %6813 = load ptr, ptr %3, align 4
  %6814 = getelementptr inbounds %struct.mxl5005s_state, ptr %6813, i32 0, i32 18
  %6815 = load i16, ptr %6814, align 4
  %6816 = icmp eq i16 %6815, 0
  br i1 %6816, label %6872, label %6817

6817:                                             ; preds = %6865, %6812
  %6818 = phi i16 [ %6866, %6865 ], [ %6815, %6812 ]
  %6819 = phi i32 [ %6867, %6865 ], [ 0, %6812 ]
  %6820 = getelementptr %struct.mxl5005s_state, ptr %6813, i32 0, i32 19, i32 %6819
  %6821 = load i16, ptr %6820, align 2
  %6822 = icmp eq i16 %6821, 69
  br i1 %6822, label %6823, label %6865

6823:                                             ; preds = %6817
  %6824 = getelementptr %struct.mxl5005s_state, ptr %6813, i32 0, i32 19, i32 %6819, i32 1
  %6825 = load i16, ptr %6824, align 2
  %6826 = icmp eq i16 %6825, 0
  br i1 %6826, label %6865, label %6827

6827:                                             ; preds = %6858, %6823
  %6828 = phi i32 [ %6859, %6858 ], [ 0, %6823 ]
  %6829 = getelementptr %struct.mxl5005s_state, ptr %6813, i32 0, i32 19, i32 %6819, i32 4, i32 %6828
  store i16 0, ptr %6829, align 2
  %6830 = getelementptr %struct.mxl5005s_state, ptr %6813, i32 0, i32 19, i32 %6819, i32 3, i32 %6828
  %6831 = load i16, ptr %6830, align 2
  %6832 = load ptr, ptr %3, align 4
  %6833 = getelementptr inbounds %struct.mxl5005s_state, ptr %6832, i32 0, i32 24
  %6834 = load i16, ptr %6833, align 4
  %6835 = zext i16 %6834 to i32
  %6836 = icmp eq i16 %6834, 0
  br i1 %6836, label %6858, label %6837

6837:                                             ; preds = %6827
  %6838 = getelementptr %struct.mxl5005s_state, ptr %6813, i32 0, i32 19, i32 %6819, i32 2, i32 %6828
  %6839 = load i16, ptr %6838, align 2
  %6840 = and i16 %6839, 255
  br label %6841

6841:                                             ; preds = %6855, %6837
  %6842 = phi i32 [ 0, %6837 ], [ %6856, %6855 ]
  %6843 = getelementptr %struct.mxl5005s_state, ptr %6832, i32 0, i32 25, i32 %6842
  %6844 = load i16, ptr %6843, align 2
  %6845 = icmp eq i16 %6844, %6840
  br i1 %6845, label %6846, label %6855

6846:                                             ; preds = %6841
  %6847 = and i16 %6831, 255
  %6848 = zext i16 %6847 to i32
  %6849 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6848
  %6850 = load i8, ptr %6849, align 1
  %6851 = zext i8 %6850 to i16
  %6852 = getelementptr %struct.mxl5005s_state, ptr %6832, i32 0, i32 25, i32 %6842, i32 1
  %6853 = load i16, ptr %6852, align 2
  %6854 = and i16 %6853, %6851
  store i16 %6854, ptr %6852, align 2
  br label %6858

6855:                                             ; preds = %6841
  %6856 = add nuw nsw i32 %6842, 1
  %6857 = icmp eq i32 %6856, %6835
  br i1 %6857, label %6858, label %6841

6858:                                             ; preds = %6855, %6846, %6827
  %6859 = add nuw nsw i32 %6828, 1
  %6860 = load i16, ptr %6824, align 2
  %6861 = zext i16 %6860 to i32
  %6862 = icmp ult i32 %6859, %6861
  br i1 %6862, label %6827, label %6863

6863:                                             ; preds = %6858
  %6864 = load i16, ptr %6814, align 4
  br label %6865

6865:                                             ; preds = %6863, %6823, %6817
  %6866 = phi i16 [ %6864, %6863 ], [ %6818, %6823 ], [ %6818, %6817 ]
  %6867 = add nuw nsw i32 %6819, 1
  %6868 = zext i16 %6866 to i32
  %6869 = icmp ult i32 %6867, %6868
  br i1 %6869, label %6817, label %6870

6870:                                             ; preds = %6865
  %6871 = load ptr, ptr %3, align 4
  br label %6872

6872:                                             ; preds = %6870, %6812
  %6873 = phi ptr [ %6871, %6870 ], [ %6813, %6812 ]
  %6874 = getelementptr inbounds %struct.mxl5005s_state, ptr %6873, i32 0, i32 20
  %6875 = load i16, ptr %6874, align 2
  %6876 = icmp eq i16 %6875, 0
  br i1 %6876, label %6930, label %6877

6877:                                             ; preds = %6925, %6872
  %6878 = phi i16 [ %6926, %6925 ], [ %6875, %6872 ]
  %6879 = phi i32 [ %6927, %6925 ], [ 0, %6872 ]
  %6880 = getelementptr %struct.mxl5005s_state, ptr %6873, i32 0, i32 21, i32 %6879
  %6881 = load i16, ptr %6880, align 2
  %6882 = icmp eq i16 %6881, 69
  br i1 %6882, label %6883, label %6925

6883:                                             ; preds = %6877
  %6884 = getelementptr %struct.mxl5005s_state, ptr %6873, i32 0, i32 21, i32 %6879, i32 1
  %6885 = load i16, ptr %6884, align 2
  %6886 = icmp eq i16 %6885, 0
  br i1 %6886, label %6925, label %6887

6887:                                             ; preds = %6918, %6883
  %6888 = phi i32 [ %6919, %6918 ], [ 0, %6883 ]
  %6889 = getelementptr %struct.mxl5005s_state, ptr %6873, i32 0, i32 21, i32 %6879, i32 4, i32 %6888
  store i16 0, ptr %6889, align 2
  %6890 = getelementptr %struct.mxl5005s_state, ptr %6873, i32 0, i32 21, i32 %6879, i32 3, i32 %6888
  %6891 = load i16, ptr %6890, align 2
  %6892 = load ptr, ptr %3, align 4
  %6893 = getelementptr inbounds %struct.mxl5005s_state, ptr %6892, i32 0, i32 24
  %6894 = load i16, ptr %6893, align 4
  %6895 = zext i16 %6894 to i32
  %6896 = icmp eq i16 %6894, 0
  br i1 %6896, label %6918, label %6897

6897:                                             ; preds = %6887
  %6898 = getelementptr %struct.mxl5005s_state, ptr %6873, i32 0, i32 21, i32 %6879, i32 2, i32 %6888
  %6899 = load i16, ptr %6898, align 2
  %6900 = and i16 %6899, 255
  br label %6901

6901:                                             ; preds = %6915, %6897
  %6902 = phi i32 [ 0, %6897 ], [ %6916, %6915 ]
  %6903 = getelementptr %struct.mxl5005s_state, ptr %6892, i32 0, i32 25, i32 %6902
  %6904 = load i16, ptr %6903, align 2
  %6905 = icmp eq i16 %6904, %6900
  br i1 %6905, label %6906, label %6915

6906:                                             ; preds = %6901
  %6907 = and i16 %6891, 255
  %6908 = zext i16 %6907 to i32
  %6909 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %6908
  %6910 = load i8, ptr %6909, align 1
  %6911 = zext i8 %6910 to i16
  %6912 = getelementptr %struct.mxl5005s_state, ptr %6892, i32 0, i32 25, i32 %6902, i32 1
  %6913 = load i16, ptr %6912, align 2
  %6914 = and i16 %6913, %6911
  store i16 %6914, ptr %6912, align 2
  br label %6918

6915:                                             ; preds = %6901
  %6916 = add nuw nsw i32 %6902, 1
  %6917 = icmp eq i32 %6916, %6895
  br i1 %6917, label %6918, label %6901

6918:                                             ; preds = %6915, %6906, %6887
  %6919 = add nuw nsw i32 %6888, 1
  %6920 = load i16, ptr %6884, align 2
  %6921 = zext i16 %6920 to i32
  %6922 = icmp ult i32 %6919, %6921
  br i1 %6922, label %6887, label %6923

6923:                                             ; preds = %6918
  %6924 = load i16, ptr %6874, align 2
  br label %6925

6925:                                             ; preds = %6923, %6883, %6877
  %6926 = phi i16 [ %6924, %6923 ], [ %6878, %6883 ], [ %6878, %6877 ]
  %6927 = add nuw nsw i32 %6879, 1
  %6928 = zext i16 %6926 to i32
  %6929 = icmp ult i32 %6927, %6928
  br i1 %6929, label %6877, label %6930

6930:                                             ; preds = %6925, %6872
  %6931 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 7, i16 noundef zeroext 1) #12
  %6932 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 70, i32 noundef 7, i16 noundef zeroext 2) #12
  %6933 = load i32, ptr %6259, align 4
  br label %6934

6934:                                             ; preds = %6930, %6807
  %6935 = phi i32 [ %6933, %6930 ], [ %6808, %6807 ]
  %6936 = phi i32 [ 2, %6930 ], [ %6809, %6807 ]
  %6937 = mul i32 %6935, %6936
  %6938 = udiv i32 %6937, 100000
  %6939 = load i32, ptr %35, align 4
  %6940 = freeze i32 %6939
  %6941 = udiv i32 %6940, 1000000
  %6942 = mul i32 %6941, 1000000
  %6943 = sub i32 %6940, %6942
  %6944 = icmp ne i32 %6943, 0
  %6945 = zext i1 %6944 to i32
  %6946 = add nuw nsw i32 %6941, %6945
  %6947 = mul nuw nsw i32 %6938, 100
  %6948 = mul i32 %6947, %6946
  %6949 = udiv i32 %6939, 1000
  %6950 = udiv i32 %6948, %6949
  %6951 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 71, i32 noundef %6950, i16 noundef zeroext 1) #12
  %6952 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 71, i32 noundef %6950, i16 noundef zeroext 2) #12
  %6953 = load i32, ptr %6259, align 4
  %6954 = icmp ugt i32 %6953, 600000000
  br i1 %6954, label %6955, label %6960

6955:                                             ; preds = %6934
  %6956 = add i32 %6950, 1
  %6957 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 71, i32 noundef %6956, i16 noundef zeroext 1) #12
  %6958 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 71, i32 noundef %6956, i16 noundef zeroext 2) #12
  %6959 = load i32, ptr %6259, align 4
  br label %6960

6960:                                             ; preds = %6955, %6934
  %6961 = phi i32 [ %6959, %6955 ], [ %6953, %6934 ]
  %6962 = load i32, ptr %35, align 4
  %6963 = udiv i32 %6962, 1000
  %6964 = freeze i32 %6962
  %6965 = udiv i32 %6964, 1000000
  %6966 = mul i32 %6965, 1000000
  %6967 = sub i32 %6964, %6966
  %6968 = icmp ne i32 %6967, 0
  %6969 = zext i1 %6968 to i32
  %6970 = add nuw nsw i32 %6965, %6969
  %6971 = udiv i32 %6963, %6970
  %6972 = udiv i32 %6961, 10000
  %6973 = mul nuw nsw i32 %6971, %6936
  %6974 = mul i32 %6973, %6972
  %6975 = sub i32 180000000, %6974
  %6976 = udiv i32 %6975, 1875000
  %6977 = add nuw nsw i32 %6976, 8
  %6978 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 72, i32 noundef %6977, i16 noundef zeroext 1) #12
  %6979 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 72, i32 noundef %6977, i16 noundef zeroext 2) #12
  %6980 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 13
  %6981 = load i8, ptr %6980, align 4
  %6982 = icmp eq i8 %6981, 3
  br i1 %6982, label %6983, label %7000

6983:                                             ; preds = %6960
  %6984 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 26
  %6985 = load ptr, ptr %6984, align 4
  %6986 = getelementptr inbounds %struct.mxl5005s_config, ptr %6985, i32 0, i32 13
  %6987 = load i8, ptr %6986, align 2
  %6988 = icmp eq i8 %6987, 0
  br i1 %6988, label %6993, label %6989

6989:                                             ; preds = %6983
  %6990 = zext i8 %6987 to i32
  %6991 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef %6990, i16 noundef zeroext 1) #12
  %6992 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef %6990, i16 noundef zeroext 2) #12
  br label %7000

6993:                                             ; preds = %6983
  %6994 = load i32, ptr %5, align 4
  %6995 = icmp ult i32 %6994, 680000000
  br i1 %6995, label %6996, label %6998

6996:                                             ; preds = %6993
  %6997 = tail call fastcc zeroext i16 @MXL_ControlWrite(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 3)
  br label %7000

6998:                                             ; preds = %6993
  %6999 = tail call fastcc zeroext i16 @MXL_ControlWrite(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 2)
  br label %7000

7000:                                             ; preds = %6998, %6996, %6989, %6960
  %7001 = getelementptr inbounds %struct.mxl5005s_state, ptr %4, i32 0, i32 14
  %7002 = load i8, ptr %7001, align 1
  %7003 = icmp eq i8 %7002, 1
  br i1 %7003, label %7004, label %7364

7004:                                             ; preds = %7000
  %7005 = load ptr, ptr %3, align 4
  %7006 = getelementptr inbounds %struct.mxl5005s_state, ptr %7005, i32 0, i32 18
  %7007 = load i16, ptr %7006, align 4
  %7008 = icmp eq i16 %7007, 0
  br i1 %7008, label %7064, label %7009

7009:                                             ; preds = %7057, %7004
  %7010 = phi i16 [ %7058, %7057 ], [ %7007, %7004 ]
  %7011 = phi i32 [ %7059, %7057 ], [ 0, %7004 ]
  %7012 = getelementptr %struct.mxl5005s_state, ptr %7005, i32 0, i32 19, i32 %7011
  %7013 = load i16, ptr %7012, align 2
  %7014 = icmp eq i16 %7013, 83
  br i1 %7014, label %7015, label %7057

7015:                                             ; preds = %7009
  %7016 = getelementptr %struct.mxl5005s_state, ptr %7005, i32 0, i32 19, i32 %7011, i32 1
  %7017 = load i16, ptr %7016, align 2
  %7018 = icmp eq i16 %7017, 0
  br i1 %7018, label %7057, label %7019

7019:                                             ; preds = %7050, %7015
  %7020 = phi i32 [ %7051, %7050 ], [ 0, %7015 ]
  %7021 = getelementptr %struct.mxl5005s_state, ptr %7005, i32 0, i32 19, i32 %7011, i32 4, i32 %7020
  store i16 0, ptr %7021, align 2
  %7022 = getelementptr %struct.mxl5005s_state, ptr %7005, i32 0, i32 19, i32 %7011, i32 3, i32 %7020
  %7023 = load i16, ptr %7022, align 2
  %7024 = load ptr, ptr %3, align 4
  %7025 = getelementptr inbounds %struct.mxl5005s_state, ptr %7024, i32 0, i32 24
  %7026 = load i16, ptr %7025, align 4
  %7027 = zext i16 %7026 to i32
  %7028 = icmp eq i16 %7026, 0
  br i1 %7028, label %7050, label %7029

7029:                                             ; preds = %7019
  %7030 = getelementptr %struct.mxl5005s_state, ptr %7005, i32 0, i32 19, i32 %7011, i32 2, i32 %7020
  %7031 = load i16, ptr %7030, align 2
  %7032 = and i16 %7031, 255
  br label %7033

7033:                                             ; preds = %7047, %7029
  %7034 = phi i32 [ 0, %7029 ], [ %7048, %7047 ]
  %7035 = getelementptr %struct.mxl5005s_state, ptr %7024, i32 0, i32 25, i32 %7034
  %7036 = load i16, ptr %7035, align 2
  %7037 = icmp eq i16 %7036, %7032
  br i1 %7037, label %7038, label %7047

7038:                                             ; preds = %7033
  %7039 = and i16 %7023, 255
  %7040 = zext i16 %7039 to i32
  %7041 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7040
  %7042 = load i8, ptr %7041, align 1
  %7043 = zext i8 %7042 to i16
  %7044 = getelementptr %struct.mxl5005s_state, ptr %7024, i32 0, i32 25, i32 %7034, i32 1
  %7045 = load i16, ptr %7044, align 2
  %7046 = and i16 %7045, %7043
  store i16 %7046, ptr %7044, align 2
  br label %7050

7047:                                             ; preds = %7033
  %7048 = add nuw nsw i32 %7034, 1
  %7049 = icmp eq i32 %7048, %7027
  br i1 %7049, label %7050, label %7033

7050:                                             ; preds = %7047, %7038, %7019
  %7051 = add nuw nsw i32 %7020, 1
  %7052 = load i16, ptr %7016, align 2
  %7053 = zext i16 %7052 to i32
  %7054 = icmp ult i32 %7051, %7053
  br i1 %7054, label %7019, label %7055

7055:                                             ; preds = %7050
  %7056 = load i16, ptr %7006, align 4
  br label %7057

7057:                                             ; preds = %7055, %7015, %7009
  %7058 = phi i16 [ %7056, %7055 ], [ %7010, %7015 ], [ %7010, %7009 ]
  %7059 = add nuw nsw i32 %7011, 1
  %7060 = zext i16 %7058 to i32
  %7061 = icmp ult i32 %7059, %7060
  br i1 %7061, label %7009, label %7062

7062:                                             ; preds = %7057
  %7063 = load ptr, ptr %3, align 4
  br label %7064

7064:                                             ; preds = %7062, %7004
  %7065 = phi ptr [ %7063, %7062 ], [ %7005, %7004 ]
  %7066 = getelementptr inbounds %struct.mxl5005s_state, ptr %7065, i32 0, i32 20
  %7067 = load i16, ptr %7066, align 2
  %7068 = icmp eq i16 %7067, 0
  br i1 %7068, label %7124, label %7069

7069:                                             ; preds = %7117, %7064
  %7070 = phi i16 [ %7118, %7117 ], [ %7067, %7064 ]
  %7071 = phi i32 [ %7119, %7117 ], [ 0, %7064 ]
  %7072 = getelementptr %struct.mxl5005s_state, ptr %7065, i32 0, i32 21, i32 %7071
  %7073 = load i16, ptr %7072, align 2
  %7074 = icmp eq i16 %7073, 83
  br i1 %7074, label %7075, label %7117

7075:                                             ; preds = %7069
  %7076 = getelementptr %struct.mxl5005s_state, ptr %7065, i32 0, i32 21, i32 %7071, i32 1
  %7077 = load i16, ptr %7076, align 2
  %7078 = icmp eq i16 %7077, 0
  br i1 %7078, label %7117, label %7079

7079:                                             ; preds = %7110, %7075
  %7080 = phi i32 [ %7111, %7110 ], [ 0, %7075 ]
  %7081 = getelementptr %struct.mxl5005s_state, ptr %7065, i32 0, i32 21, i32 %7071, i32 4, i32 %7080
  store i16 0, ptr %7081, align 2
  %7082 = getelementptr %struct.mxl5005s_state, ptr %7065, i32 0, i32 21, i32 %7071, i32 3, i32 %7080
  %7083 = load i16, ptr %7082, align 2
  %7084 = load ptr, ptr %3, align 4
  %7085 = getelementptr inbounds %struct.mxl5005s_state, ptr %7084, i32 0, i32 24
  %7086 = load i16, ptr %7085, align 4
  %7087 = zext i16 %7086 to i32
  %7088 = icmp eq i16 %7086, 0
  br i1 %7088, label %7110, label %7089

7089:                                             ; preds = %7079
  %7090 = getelementptr %struct.mxl5005s_state, ptr %7065, i32 0, i32 21, i32 %7071, i32 2, i32 %7080
  %7091 = load i16, ptr %7090, align 2
  %7092 = and i16 %7091, 255
  br label %7093

7093:                                             ; preds = %7107, %7089
  %7094 = phi i32 [ 0, %7089 ], [ %7108, %7107 ]
  %7095 = getelementptr %struct.mxl5005s_state, ptr %7084, i32 0, i32 25, i32 %7094
  %7096 = load i16, ptr %7095, align 2
  %7097 = icmp eq i16 %7096, %7092
  br i1 %7097, label %7098, label %7107

7098:                                             ; preds = %7093
  %7099 = and i16 %7083, 255
  %7100 = zext i16 %7099 to i32
  %7101 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7100
  %7102 = load i8, ptr %7101, align 1
  %7103 = zext i8 %7102 to i16
  %7104 = getelementptr %struct.mxl5005s_state, ptr %7084, i32 0, i32 25, i32 %7094, i32 1
  %7105 = load i16, ptr %7104, align 2
  %7106 = and i16 %7105, %7103
  store i16 %7106, ptr %7104, align 2
  br label %7110

7107:                                             ; preds = %7093
  %7108 = add nuw nsw i32 %7094, 1
  %7109 = icmp eq i32 %7108, %7087
  br i1 %7109, label %7110, label %7093

7110:                                             ; preds = %7107, %7098, %7079
  %7111 = add nuw nsw i32 %7080, 1
  %7112 = load i16, ptr %7076, align 2
  %7113 = zext i16 %7112 to i32
  %7114 = icmp ult i32 %7111, %7113
  br i1 %7114, label %7079, label %7115

7115:                                             ; preds = %7110
  %7116 = load i16, ptr %7066, align 2
  br label %7117

7117:                                             ; preds = %7115, %7075, %7069
  %7118 = phi i16 [ %7116, %7115 ], [ %7070, %7075 ], [ %7070, %7069 ]
  %7119 = add nuw nsw i32 %7071, 1
  %7120 = zext i16 %7118 to i32
  %7121 = icmp ult i32 %7119, %7120
  br i1 %7121, label %7069, label %7122

7122:                                             ; preds = %7117
  %7123 = load ptr, ptr %3, align 4
  br label %7124

7124:                                             ; preds = %7122, %7064
  %7125 = phi ptr [ %7123, %7122 ], [ %7065, %7064 ]
  %7126 = getelementptr inbounds %struct.mxl5005s_state, ptr %7125, i32 0, i32 18
  %7127 = load i16, ptr %7126, align 4
  %7128 = icmp eq i16 %7127, 0
  br i1 %7128, label %7184, label %7129

7129:                                             ; preds = %7177, %7124
  %7130 = phi i16 [ %7178, %7177 ], [ %7127, %7124 ]
  %7131 = phi i32 [ %7179, %7177 ], [ 0, %7124 ]
  %7132 = getelementptr %struct.mxl5005s_state, ptr %7125, i32 0, i32 19, i32 %7131
  %7133 = load i16, ptr %7132, align 2
  %7134 = icmp eq i16 %7133, 84
  br i1 %7134, label %7135, label %7177

7135:                                             ; preds = %7129
  %7136 = getelementptr %struct.mxl5005s_state, ptr %7125, i32 0, i32 19, i32 %7131, i32 1
  %7137 = load i16, ptr %7136, align 2
  %7138 = icmp eq i16 %7137, 0
  br i1 %7138, label %7177, label %7139

7139:                                             ; preds = %7170, %7135
  %7140 = phi i32 [ %7171, %7170 ], [ 0, %7135 ]
  %7141 = getelementptr %struct.mxl5005s_state, ptr %7125, i32 0, i32 19, i32 %7131, i32 4, i32 %7140
  store i16 0, ptr %7141, align 2
  %7142 = getelementptr %struct.mxl5005s_state, ptr %7125, i32 0, i32 19, i32 %7131, i32 3, i32 %7140
  %7143 = load i16, ptr %7142, align 2
  %7144 = load ptr, ptr %3, align 4
  %7145 = getelementptr inbounds %struct.mxl5005s_state, ptr %7144, i32 0, i32 24
  %7146 = load i16, ptr %7145, align 4
  %7147 = zext i16 %7146 to i32
  %7148 = icmp eq i16 %7146, 0
  br i1 %7148, label %7170, label %7149

7149:                                             ; preds = %7139
  %7150 = getelementptr %struct.mxl5005s_state, ptr %7125, i32 0, i32 19, i32 %7131, i32 2, i32 %7140
  %7151 = load i16, ptr %7150, align 2
  %7152 = and i16 %7151, 255
  br label %7153

7153:                                             ; preds = %7167, %7149
  %7154 = phi i32 [ 0, %7149 ], [ %7168, %7167 ]
  %7155 = getelementptr %struct.mxl5005s_state, ptr %7144, i32 0, i32 25, i32 %7154
  %7156 = load i16, ptr %7155, align 2
  %7157 = icmp eq i16 %7156, %7152
  br i1 %7157, label %7158, label %7167

7158:                                             ; preds = %7153
  %7159 = and i16 %7143, 255
  %7160 = zext i16 %7159 to i32
  %7161 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7160
  %7162 = load i8, ptr %7161, align 1
  %7163 = zext i8 %7162 to i16
  %7164 = getelementptr %struct.mxl5005s_state, ptr %7144, i32 0, i32 25, i32 %7154, i32 1
  %7165 = load i16, ptr %7164, align 2
  %7166 = and i16 %7165, %7163
  store i16 %7166, ptr %7164, align 2
  br label %7170

7167:                                             ; preds = %7153
  %7168 = add nuw nsw i32 %7154, 1
  %7169 = icmp eq i32 %7168, %7147
  br i1 %7169, label %7170, label %7153

7170:                                             ; preds = %7167, %7158, %7139
  %7171 = add nuw nsw i32 %7140, 1
  %7172 = load i16, ptr %7136, align 2
  %7173 = zext i16 %7172 to i32
  %7174 = icmp ult i32 %7171, %7173
  br i1 %7174, label %7139, label %7175

7175:                                             ; preds = %7170
  %7176 = load i16, ptr %7126, align 4
  br label %7177

7177:                                             ; preds = %7175, %7135, %7129
  %7178 = phi i16 [ %7176, %7175 ], [ %7130, %7135 ], [ %7130, %7129 ]
  %7179 = add nuw nsw i32 %7131, 1
  %7180 = zext i16 %7178 to i32
  %7181 = icmp ult i32 %7179, %7180
  br i1 %7181, label %7129, label %7182

7182:                                             ; preds = %7177
  %7183 = load ptr, ptr %3, align 4
  br label %7184

7184:                                             ; preds = %7182, %7124
  %7185 = phi ptr [ %7183, %7182 ], [ %7125, %7124 ]
  %7186 = getelementptr inbounds %struct.mxl5005s_state, ptr %7185, i32 0, i32 20
  %7187 = load i16, ptr %7186, align 2
  %7188 = icmp eq i16 %7187, 0
  br i1 %7188, label %7242, label %7189

7189:                                             ; preds = %7237, %7184
  %7190 = phi i16 [ %7238, %7237 ], [ %7187, %7184 ]
  %7191 = phi i32 [ %7239, %7237 ], [ 0, %7184 ]
  %7192 = getelementptr %struct.mxl5005s_state, ptr %7185, i32 0, i32 21, i32 %7191
  %7193 = load i16, ptr %7192, align 2
  %7194 = icmp eq i16 %7193, 84
  br i1 %7194, label %7195, label %7237

7195:                                             ; preds = %7189
  %7196 = getelementptr %struct.mxl5005s_state, ptr %7185, i32 0, i32 21, i32 %7191, i32 1
  %7197 = load i16, ptr %7196, align 2
  %7198 = icmp eq i16 %7197, 0
  br i1 %7198, label %7237, label %7199

7199:                                             ; preds = %7230, %7195
  %7200 = phi i32 [ %7231, %7230 ], [ 0, %7195 ]
  %7201 = getelementptr %struct.mxl5005s_state, ptr %7185, i32 0, i32 21, i32 %7191, i32 4, i32 %7200
  store i16 0, ptr %7201, align 2
  %7202 = getelementptr %struct.mxl5005s_state, ptr %7185, i32 0, i32 21, i32 %7191, i32 3, i32 %7200
  %7203 = load i16, ptr %7202, align 2
  %7204 = load ptr, ptr %3, align 4
  %7205 = getelementptr inbounds %struct.mxl5005s_state, ptr %7204, i32 0, i32 24
  %7206 = load i16, ptr %7205, align 4
  %7207 = zext i16 %7206 to i32
  %7208 = icmp eq i16 %7206, 0
  br i1 %7208, label %7230, label %7209

7209:                                             ; preds = %7199
  %7210 = getelementptr %struct.mxl5005s_state, ptr %7185, i32 0, i32 21, i32 %7191, i32 2, i32 %7200
  %7211 = load i16, ptr %7210, align 2
  %7212 = and i16 %7211, 255
  br label %7213

7213:                                             ; preds = %7227, %7209
  %7214 = phi i32 [ 0, %7209 ], [ %7228, %7227 ]
  %7215 = getelementptr %struct.mxl5005s_state, ptr %7204, i32 0, i32 25, i32 %7214
  %7216 = load i16, ptr %7215, align 2
  %7217 = icmp eq i16 %7216, %7212
  br i1 %7217, label %7218, label %7227

7218:                                             ; preds = %7213
  %7219 = and i16 %7203, 255
  %7220 = zext i16 %7219 to i32
  %7221 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7220
  %7222 = load i8, ptr %7221, align 1
  %7223 = zext i8 %7222 to i16
  %7224 = getelementptr %struct.mxl5005s_state, ptr %7204, i32 0, i32 25, i32 %7214, i32 1
  %7225 = load i16, ptr %7224, align 2
  %7226 = and i16 %7225, %7223
  store i16 %7226, ptr %7224, align 2
  br label %7230

7227:                                             ; preds = %7213
  %7228 = add nuw nsw i32 %7214, 1
  %7229 = icmp eq i32 %7228, %7207
  br i1 %7229, label %7230, label %7213

7230:                                             ; preds = %7227, %7218, %7199
  %7231 = add nuw nsw i32 %7200, 1
  %7232 = load i16, ptr %7196, align 2
  %7233 = zext i16 %7232 to i32
  %7234 = icmp ult i32 %7231, %7233
  br i1 %7234, label %7199, label %7235

7235:                                             ; preds = %7230
  %7236 = load i16, ptr %7186, align 2
  br label %7237

7237:                                             ; preds = %7235, %7195, %7189
  %7238 = phi i16 [ %7236, %7235 ], [ %7190, %7195 ], [ %7190, %7189 ]
  %7239 = add nuw nsw i32 %7191, 1
  %7240 = zext i16 %7238 to i32
  %7241 = icmp ult i32 %7239, %7240
  br i1 %7241, label %7189, label %7242

7242:                                             ; preds = %7237, %7184
  %7243 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %7244 = load ptr, ptr %3, align 4
  %7245 = getelementptr inbounds %struct.mxl5005s_state, ptr %7244, i32 0, i32 18
  %7246 = load i16, ptr %7245, align 4
  %7247 = icmp eq i16 %7246, 0
  br i1 %7247, label %7303, label %7248

7248:                                             ; preds = %7296, %7242
  %7249 = phi i16 [ %7297, %7296 ], [ %7246, %7242 ]
  %7250 = phi i32 [ %7298, %7296 ], [ 0, %7242 ]
  %7251 = getelementptr %struct.mxl5005s_state, ptr %7244, i32 0, i32 19, i32 %7250
  %7252 = load i16, ptr %7251, align 2
  %7253 = icmp eq i16 %7252, 82
  br i1 %7253, label %7254, label %7296

7254:                                             ; preds = %7248
  %7255 = getelementptr %struct.mxl5005s_state, ptr %7244, i32 0, i32 19, i32 %7250, i32 1
  %7256 = load i16, ptr %7255, align 2
  %7257 = icmp eq i16 %7256, 0
  br i1 %7257, label %7296, label %7258

7258:                                             ; preds = %7289, %7254
  %7259 = phi i32 [ %7290, %7289 ], [ 0, %7254 ]
  %7260 = getelementptr %struct.mxl5005s_state, ptr %7244, i32 0, i32 19, i32 %7250, i32 4, i32 %7259
  store i16 0, ptr %7260, align 2
  %7261 = getelementptr %struct.mxl5005s_state, ptr %7244, i32 0, i32 19, i32 %7250, i32 3, i32 %7259
  %7262 = load i16, ptr %7261, align 2
  %7263 = load ptr, ptr %3, align 4
  %7264 = getelementptr inbounds %struct.mxl5005s_state, ptr %7263, i32 0, i32 24
  %7265 = load i16, ptr %7264, align 4
  %7266 = zext i16 %7265 to i32
  %7267 = icmp eq i16 %7265, 0
  br i1 %7267, label %7289, label %7268

7268:                                             ; preds = %7258
  %7269 = getelementptr %struct.mxl5005s_state, ptr %7244, i32 0, i32 19, i32 %7250, i32 2, i32 %7259
  %7270 = load i16, ptr %7269, align 2
  %7271 = and i16 %7270, 255
  br label %7272

7272:                                             ; preds = %7286, %7268
  %7273 = phi i32 [ 0, %7268 ], [ %7287, %7286 ]
  %7274 = getelementptr %struct.mxl5005s_state, ptr %7263, i32 0, i32 25, i32 %7273
  %7275 = load i16, ptr %7274, align 2
  %7276 = icmp eq i16 %7275, %7271
  br i1 %7276, label %7277, label %7286

7277:                                             ; preds = %7272
  %7278 = and i16 %7262, 255
  %7279 = zext i16 %7278 to i32
  %7280 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7279
  %7281 = load i8, ptr %7280, align 1
  %7282 = zext i8 %7281 to i16
  %7283 = getelementptr %struct.mxl5005s_state, ptr %7263, i32 0, i32 25, i32 %7273, i32 1
  %7284 = load i16, ptr %7283, align 2
  %7285 = and i16 %7284, %7282
  store i16 %7285, ptr %7283, align 2
  br label %7289

7286:                                             ; preds = %7272
  %7287 = add nuw nsw i32 %7273, 1
  %7288 = icmp eq i32 %7287, %7266
  br i1 %7288, label %7289, label %7272

7289:                                             ; preds = %7286, %7277, %7258
  %7290 = add nuw nsw i32 %7259, 1
  %7291 = load i16, ptr %7255, align 2
  %7292 = zext i16 %7291 to i32
  %7293 = icmp ult i32 %7290, %7292
  br i1 %7293, label %7258, label %7294

7294:                                             ; preds = %7289
  %7295 = load i16, ptr %7245, align 4
  br label %7296

7296:                                             ; preds = %7294, %7254, %7248
  %7297 = phi i16 [ %7295, %7294 ], [ %7249, %7254 ], [ %7249, %7248 ]
  %7298 = add nuw nsw i32 %7250, 1
  %7299 = zext i16 %7297 to i32
  %7300 = icmp ult i32 %7298, %7299
  br i1 %7300, label %7248, label %7301

7301:                                             ; preds = %7296
  %7302 = load ptr, ptr %3, align 4
  br label %7303

7303:                                             ; preds = %7301, %7242
  %7304 = phi ptr [ %7302, %7301 ], [ %7244, %7242 ]
  %7305 = getelementptr inbounds %struct.mxl5005s_state, ptr %7304, i32 0, i32 20
  %7306 = load i16, ptr %7305, align 2
  %7307 = icmp eq i16 %7306, 0
  br i1 %7307, label %7361, label %7308

7308:                                             ; preds = %7356, %7303
  %7309 = phi i16 [ %7357, %7356 ], [ %7306, %7303 ]
  %7310 = phi i32 [ %7358, %7356 ], [ 0, %7303 ]
  %7311 = getelementptr %struct.mxl5005s_state, ptr %7304, i32 0, i32 21, i32 %7310
  %7312 = load i16, ptr %7311, align 2
  %7313 = icmp eq i16 %7312, 82
  br i1 %7313, label %7314, label %7356

7314:                                             ; preds = %7308
  %7315 = getelementptr %struct.mxl5005s_state, ptr %7304, i32 0, i32 21, i32 %7310, i32 1
  %7316 = load i16, ptr %7315, align 2
  %7317 = icmp eq i16 %7316, 0
  br i1 %7317, label %7356, label %7318

7318:                                             ; preds = %7349, %7314
  %7319 = phi i32 [ %7350, %7349 ], [ 0, %7314 ]
  %7320 = getelementptr %struct.mxl5005s_state, ptr %7304, i32 0, i32 21, i32 %7310, i32 4, i32 %7319
  store i16 0, ptr %7320, align 2
  %7321 = getelementptr %struct.mxl5005s_state, ptr %7304, i32 0, i32 21, i32 %7310, i32 3, i32 %7319
  %7322 = load i16, ptr %7321, align 2
  %7323 = load ptr, ptr %3, align 4
  %7324 = getelementptr inbounds %struct.mxl5005s_state, ptr %7323, i32 0, i32 24
  %7325 = load i16, ptr %7324, align 4
  %7326 = zext i16 %7325 to i32
  %7327 = icmp eq i16 %7325, 0
  br i1 %7327, label %7349, label %7328

7328:                                             ; preds = %7318
  %7329 = getelementptr %struct.mxl5005s_state, ptr %7304, i32 0, i32 21, i32 %7310, i32 2, i32 %7319
  %7330 = load i16, ptr %7329, align 2
  %7331 = and i16 %7330, 255
  br label %7332

7332:                                             ; preds = %7346, %7328
  %7333 = phi i32 [ 0, %7328 ], [ %7347, %7346 ]
  %7334 = getelementptr %struct.mxl5005s_state, ptr %7323, i32 0, i32 25, i32 %7333
  %7335 = load i16, ptr %7334, align 2
  %7336 = icmp eq i16 %7335, %7331
  br i1 %7336, label %7337, label %7346

7337:                                             ; preds = %7332
  %7338 = and i16 %7322, 255
  %7339 = zext i16 %7338 to i32
  %7340 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7339
  %7341 = load i8, ptr %7340, align 1
  %7342 = zext i8 %7341 to i16
  %7343 = getelementptr %struct.mxl5005s_state, ptr %7323, i32 0, i32 25, i32 %7333, i32 1
  %7344 = load i16, ptr %7343, align 2
  %7345 = and i16 %7344, %7342
  store i16 %7345, ptr %7343, align 2
  br label %7349

7346:                                             ; preds = %7332
  %7347 = add nuw nsw i32 %7333, 1
  %7348 = icmp eq i32 %7347, %7326
  br i1 %7348, label %7349, label %7332

7349:                                             ; preds = %7346, %7337, %7318
  %7350 = add nuw nsw i32 %7319, 1
  %7351 = load i16, ptr %7315, align 2
  %7352 = zext i16 %7351 to i32
  %7353 = icmp ult i32 %7350, %7352
  br i1 %7353, label %7318, label %7354

7354:                                             ; preds = %7349
  %7355 = load i16, ptr %7305, align 2
  br label %7356

7356:                                             ; preds = %7354, %7314, %7308
  %7357 = phi i16 [ %7355, %7354 ], [ %7309, %7314 ], [ %7309, %7308 ]
  %7358 = add nuw nsw i32 %7310, 1
  %7359 = zext i16 %7357 to i32
  %7360 = icmp ult i32 %7358, %7359
  br i1 %7360, label %7308, label %7361

7361:                                             ; preds = %7356, %7303
  %7362 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %7363 = load i8, ptr %7001, align 1
  br label %7364

7364:                                             ; preds = %7361, %7000
  %7365 = phi i8 [ %7363, %7361 ], [ %7002, %7000 ]
  %7366 = icmp eq i8 %7365, 2
  br i1 %7366, label %7367, label %9607

7367:                                             ; preds = %7364
  %7368 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %7369 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %7370 = load ptr, ptr %3, align 4
  %7371 = getelementptr inbounds %struct.mxl5005s_state, ptr %7370, i32 0, i32 18
  %7372 = load i16, ptr %7371, align 4
  %7373 = icmp eq i16 %7372, 0
  br i1 %7373, label %7429, label %7374

7374:                                             ; preds = %7422, %7367
  %7375 = phi i16 [ %7423, %7422 ], [ %7372, %7367 ]
  %7376 = phi i32 [ %7424, %7422 ], [ 0, %7367 ]
  %7377 = getelementptr %struct.mxl5005s_state, ptr %7370, i32 0, i32 19, i32 %7376
  %7378 = load i16, ptr %7377, align 2
  %7379 = icmp eq i16 %7378, 85
  br i1 %7379, label %7380, label %7422

7380:                                             ; preds = %7374
  %7381 = getelementptr %struct.mxl5005s_state, ptr %7370, i32 0, i32 19, i32 %7376, i32 1
  %7382 = load i16, ptr %7381, align 2
  %7383 = icmp eq i16 %7382, 0
  br i1 %7383, label %7422, label %7384

7384:                                             ; preds = %7415, %7380
  %7385 = phi i32 [ %7416, %7415 ], [ 0, %7380 ]
  %7386 = getelementptr %struct.mxl5005s_state, ptr %7370, i32 0, i32 19, i32 %7376, i32 4, i32 %7385
  store i16 0, ptr %7386, align 2
  %7387 = getelementptr %struct.mxl5005s_state, ptr %7370, i32 0, i32 19, i32 %7376, i32 3, i32 %7385
  %7388 = load i16, ptr %7387, align 2
  %7389 = load ptr, ptr %3, align 4
  %7390 = getelementptr inbounds %struct.mxl5005s_state, ptr %7389, i32 0, i32 24
  %7391 = load i16, ptr %7390, align 4
  %7392 = zext i16 %7391 to i32
  %7393 = icmp eq i16 %7391, 0
  br i1 %7393, label %7415, label %7394

7394:                                             ; preds = %7384
  %7395 = getelementptr %struct.mxl5005s_state, ptr %7370, i32 0, i32 19, i32 %7376, i32 2, i32 %7385
  %7396 = load i16, ptr %7395, align 2
  %7397 = and i16 %7396, 255
  br label %7398

7398:                                             ; preds = %7412, %7394
  %7399 = phi i32 [ 0, %7394 ], [ %7413, %7412 ]
  %7400 = getelementptr %struct.mxl5005s_state, ptr %7389, i32 0, i32 25, i32 %7399
  %7401 = load i16, ptr %7400, align 2
  %7402 = icmp eq i16 %7401, %7397
  br i1 %7402, label %7403, label %7412

7403:                                             ; preds = %7398
  %7404 = and i16 %7388, 255
  %7405 = zext i16 %7404 to i32
  %7406 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7405
  %7407 = load i8, ptr %7406, align 1
  %7408 = zext i8 %7407 to i16
  %7409 = getelementptr %struct.mxl5005s_state, ptr %7389, i32 0, i32 25, i32 %7399, i32 1
  %7410 = load i16, ptr %7409, align 2
  %7411 = and i16 %7410, %7408
  store i16 %7411, ptr %7409, align 2
  br label %7415

7412:                                             ; preds = %7398
  %7413 = add nuw nsw i32 %7399, 1
  %7414 = icmp eq i32 %7413, %7392
  br i1 %7414, label %7415, label %7398

7415:                                             ; preds = %7412, %7403, %7384
  %7416 = add nuw nsw i32 %7385, 1
  %7417 = load i16, ptr %7381, align 2
  %7418 = zext i16 %7417 to i32
  %7419 = icmp ult i32 %7416, %7418
  br i1 %7419, label %7384, label %7420

7420:                                             ; preds = %7415
  %7421 = load i16, ptr %7371, align 4
  br label %7422

7422:                                             ; preds = %7420, %7380, %7374
  %7423 = phi i16 [ %7421, %7420 ], [ %7375, %7380 ], [ %7375, %7374 ]
  %7424 = add nuw nsw i32 %7376, 1
  %7425 = zext i16 %7423 to i32
  %7426 = icmp ult i32 %7424, %7425
  br i1 %7426, label %7374, label %7427

7427:                                             ; preds = %7422
  %7428 = load ptr, ptr %3, align 4
  br label %7429

7429:                                             ; preds = %7427, %7367
  %7430 = phi ptr [ %7428, %7427 ], [ %7370, %7367 ]
  %7431 = getelementptr inbounds %struct.mxl5005s_state, ptr %7430, i32 0, i32 20
  %7432 = load i16, ptr %7431, align 2
  %7433 = icmp eq i16 %7432, 0
  br i1 %7433, label %7487, label %7434

7434:                                             ; preds = %7482, %7429
  %7435 = phi i16 [ %7483, %7482 ], [ %7432, %7429 ]
  %7436 = phi i32 [ %7484, %7482 ], [ 0, %7429 ]
  %7437 = getelementptr %struct.mxl5005s_state, ptr %7430, i32 0, i32 21, i32 %7436
  %7438 = load i16, ptr %7437, align 2
  %7439 = icmp eq i16 %7438, 85
  br i1 %7439, label %7440, label %7482

7440:                                             ; preds = %7434
  %7441 = getelementptr %struct.mxl5005s_state, ptr %7430, i32 0, i32 21, i32 %7436, i32 1
  %7442 = load i16, ptr %7441, align 2
  %7443 = icmp eq i16 %7442, 0
  br i1 %7443, label %7482, label %7444

7444:                                             ; preds = %7475, %7440
  %7445 = phi i32 [ %7476, %7475 ], [ 0, %7440 ]
  %7446 = getelementptr %struct.mxl5005s_state, ptr %7430, i32 0, i32 21, i32 %7436, i32 4, i32 %7445
  store i16 0, ptr %7446, align 2
  %7447 = getelementptr %struct.mxl5005s_state, ptr %7430, i32 0, i32 21, i32 %7436, i32 3, i32 %7445
  %7448 = load i16, ptr %7447, align 2
  %7449 = load ptr, ptr %3, align 4
  %7450 = getelementptr inbounds %struct.mxl5005s_state, ptr %7449, i32 0, i32 24
  %7451 = load i16, ptr %7450, align 4
  %7452 = zext i16 %7451 to i32
  %7453 = icmp eq i16 %7451, 0
  br i1 %7453, label %7475, label %7454

7454:                                             ; preds = %7444
  %7455 = getelementptr %struct.mxl5005s_state, ptr %7430, i32 0, i32 21, i32 %7436, i32 2, i32 %7445
  %7456 = load i16, ptr %7455, align 2
  %7457 = and i16 %7456, 255
  br label %7458

7458:                                             ; preds = %7472, %7454
  %7459 = phi i32 [ 0, %7454 ], [ %7473, %7472 ]
  %7460 = getelementptr %struct.mxl5005s_state, ptr %7449, i32 0, i32 25, i32 %7459
  %7461 = load i16, ptr %7460, align 2
  %7462 = icmp eq i16 %7461, %7457
  br i1 %7462, label %7463, label %7472

7463:                                             ; preds = %7458
  %7464 = and i16 %7448, 255
  %7465 = zext i16 %7464 to i32
  %7466 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7465
  %7467 = load i8, ptr %7466, align 1
  %7468 = zext i8 %7467 to i16
  %7469 = getelementptr %struct.mxl5005s_state, ptr %7449, i32 0, i32 25, i32 %7459, i32 1
  %7470 = load i16, ptr %7469, align 2
  %7471 = and i16 %7470, %7468
  store i16 %7471, ptr %7469, align 2
  br label %7475

7472:                                             ; preds = %7458
  %7473 = add nuw nsw i32 %7459, 1
  %7474 = icmp eq i32 %7473, %7452
  br i1 %7474, label %7475, label %7458

7475:                                             ; preds = %7472, %7463, %7444
  %7476 = add nuw nsw i32 %7445, 1
  %7477 = load i16, ptr %7441, align 2
  %7478 = zext i16 %7477 to i32
  %7479 = icmp ult i32 %7476, %7478
  br i1 %7479, label %7444, label %7480

7480:                                             ; preds = %7475
  %7481 = load i16, ptr %7431, align 2
  br label %7482

7482:                                             ; preds = %7480, %7440, %7434
  %7483 = phi i16 [ %7481, %7480 ], [ %7435, %7440 ], [ %7435, %7434 ]
  %7484 = add nuw nsw i32 %7436, 1
  %7485 = zext i16 %7483 to i32
  %7486 = icmp ult i32 %7484, %7485
  br i1 %7486, label %7434, label %7487

7487:                                             ; preds = %7482, %7429
  %7488 = load i32, ptr %5, align 4
  %7489 = add i32 %7488, -43000000
  %7490 = icmp ult i32 %7489, 107000000
  br i1 %7490, label %7491, label %7854

7491:                                             ; preds = %7487
  %7492 = load ptr, ptr %3, align 4
  %7493 = getelementptr inbounds %struct.mxl5005s_state, ptr %7492, i32 0, i32 18
  %7494 = load i16, ptr %7493, align 4
  %7495 = icmp eq i16 %7494, 0
  br i1 %7495, label %7551, label %7496

7496:                                             ; preds = %7544, %7491
  %7497 = phi i16 [ %7545, %7544 ], [ %7494, %7491 ]
  %7498 = phi i32 [ %7546, %7544 ], [ 0, %7491 ]
  %7499 = getelementptr %struct.mxl5005s_state, ptr %7492, i32 0, i32 19, i32 %7498
  %7500 = load i16, ptr %7499, align 2
  %7501 = icmp eq i16 %7500, 83
  br i1 %7501, label %7502, label %7544

7502:                                             ; preds = %7496
  %7503 = getelementptr %struct.mxl5005s_state, ptr %7492, i32 0, i32 19, i32 %7498, i32 1
  %7504 = load i16, ptr %7503, align 2
  %7505 = icmp eq i16 %7504, 0
  br i1 %7505, label %7544, label %7506

7506:                                             ; preds = %7537, %7502
  %7507 = phi i32 [ %7538, %7537 ], [ 0, %7502 ]
  %7508 = getelementptr %struct.mxl5005s_state, ptr %7492, i32 0, i32 19, i32 %7498, i32 4, i32 %7507
  store i16 0, ptr %7508, align 2
  %7509 = getelementptr %struct.mxl5005s_state, ptr %7492, i32 0, i32 19, i32 %7498, i32 3, i32 %7507
  %7510 = load i16, ptr %7509, align 2
  %7511 = load ptr, ptr %3, align 4
  %7512 = getelementptr inbounds %struct.mxl5005s_state, ptr %7511, i32 0, i32 24
  %7513 = load i16, ptr %7512, align 4
  %7514 = zext i16 %7513 to i32
  %7515 = icmp eq i16 %7513, 0
  br i1 %7515, label %7537, label %7516

7516:                                             ; preds = %7506
  %7517 = getelementptr %struct.mxl5005s_state, ptr %7492, i32 0, i32 19, i32 %7498, i32 2, i32 %7507
  %7518 = load i16, ptr %7517, align 2
  %7519 = and i16 %7518, 255
  br label %7520

7520:                                             ; preds = %7534, %7516
  %7521 = phi i32 [ 0, %7516 ], [ %7535, %7534 ]
  %7522 = getelementptr %struct.mxl5005s_state, ptr %7511, i32 0, i32 25, i32 %7521
  %7523 = load i16, ptr %7522, align 2
  %7524 = icmp eq i16 %7523, %7519
  br i1 %7524, label %7525, label %7534

7525:                                             ; preds = %7520
  %7526 = and i16 %7510, 255
  %7527 = zext i16 %7526 to i32
  %7528 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7527
  %7529 = load i8, ptr %7528, align 1
  %7530 = zext i8 %7529 to i16
  %7531 = getelementptr %struct.mxl5005s_state, ptr %7511, i32 0, i32 25, i32 %7521, i32 1
  %7532 = load i16, ptr %7531, align 2
  %7533 = and i16 %7532, %7530
  store i16 %7533, ptr %7531, align 2
  br label %7537

7534:                                             ; preds = %7520
  %7535 = add nuw nsw i32 %7521, 1
  %7536 = icmp eq i32 %7535, %7514
  br i1 %7536, label %7537, label %7520

7537:                                             ; preds = %7534, %7525, %7506
  %7538 = add nuw nsw i32 %7507, 1
  %7539 = load i16, ptr %7503, align 2
  %7540 = zext i16 %7539 to i32
  %7541 = icmp ult i32 %7538, %7540
  br i1 %7541, label %7506, label %7542

7542:                                             ; preds = %7537
  %7543 = load i16, ptr %7493, align 4
  br label %7544

7544:                                             ; preds = %7542, %7502, %7496
  %7545 = phi i16 [ %7543, %7542 ], [ %7497, %7502 ], [ %7497, %7496 ]
  %7546 = add nuw nsw i32 %7498, 1
  %7547 = zext i16 %7545 to i32
  %7548 = icmp ult i32 %7546, %7547
  br i1 %7548, label %7496, label %7549

7549:                                             ; preds = %7544
  %7550 = load ptr, ptr %3, align 4
  br label %7551

7551:                                             ; preds = %7549, %7491
  %7552 = phi ptr [ %7550, %7549 ], [ %7492, %7491 ]
  %7553 = getelementptr inbounds %struct.mxl5005s_state, ptr %7552, i32 0, i32 20
  %7554 = load i16, ptr %7553, align 2
  %7555 = icmp eq i16 %7554, 0
  br i1 %7555, label %7611, label %7556

7556:                                             ; preds = %7604, %7551
  %7557 = phi i16 [ %7605, %7604 ], [ %7554, %7551 ]
  %7558 = phi i32 [ %7606, %7604 ], [ 0, %7551 ]
  %7559 = getelementptr %struct.mxl5005s_state, ptr %7552, i32 0, i32 21, i32 %7558
  %7560 = load i16, ptr %7559, align 2
  %7561 = icmp eq i16 %7560, 83
  br i1 %7561, label %7562, label %7604

7562:                                             ; preds = %7556
  %7563 = getelementptr %struct.mxl5005s_state, ptr %7552, i32 0, i32 21, i32 %7558, i32 1
  %7564 = load i16, ptr %7563, align 2
  %7565 = icmp eq i16 %7564, 0
  br i1 %7565, label %7604, label %7566

7566:                                             ; preds = %7597, %7562
  %7567 = phi i32 [ %7598, %7597 ], [ 0, %7562 ]
  %7568 = getelementptr %struct.mxl5005s_state, ptr %7552, i32 0, i32 21, i32 %7558, i32 4, i32 %7567
  store i16 0, ptr %7568, align 2
  %7569 = getelementptr %struct.mxl5005s_state, ptr %7552, i32 0, i32 21, i32 %7558, i32 3, i32 %7567
  %7570 = load i16, ptr %7569, align 2
  %7571 = load ptr, ptr %3, align 4
  %7572 = getelementptr inbounds %struct.mxl5005s_state, ptr %7571, i32 0, i32 24
  %7573 = load i16, ptr %7572, align 4
  %7574 = zext i16 %7573 to i32
  %7575 = icmp eq i16 %7573, 0
  br i1 %7575, label %7597, label %7576

7576:                                             ; preds = %7566
  %7577 = getelementptr %struct.mxl5005s_state, ptr %7552, i32 0, i32 21, i32 %7558, i32 2, i32 %7567
  %7578 = load i16, ptr %7577, align 2
  %7579 = and i16 %7578, 255
  br label %7580

7580:                                             ; preds = %7594, %7576
  %7581 = phi i32 [ 0, %7576 ], [ %7595, %7594 ]
  %7582 = getelementptr %struct.mxl5005s_state, ptr %7571, i32 0, i32 25, i32 %7581
  %7583 = load i16, ptr %7582, align 2
  %7584 = icmp eq i16 %7583, %7579
  br i1 %7584, label %7585, label %7594

7585:                                             ; preds = %7580
  %7586 = and i16 %7570, 255
  %7587 = zext i16 %7586 to i32
  %7588 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7587
  %7589 = load i8, ptr %7588, align 1
  %7590 = zext i8 %7589 to i16
  %7591 = getelementptr %struct.mxl5005s_state, ptr %7571, i32 0, i32 25, i32 %7581, i32 1
  %7592 = load i16, ptr %7591, align 2
  %7593 = and i16 %7592, %7590
  store i16 %7593, ptr %7591, align 2
  br label %7597

7594:                                             ; preds = %7580
  %7595 = add nuw nsw i32 %7581, 1
  %7596 = icmp eq i32 %7595, %7574
  br i1 %7596, label %7597, label %7580

7597:                                             ; preds = %7594, %7585, %7566
  %7598 = add nuw nsw i32 %7567, 1
  %7599 = load i16, ptr %7563, align 2
  %7600 = zext i16 %7599 to i32
  %7601 = icmp ult i32 %7598, %7600
  br i1 %7601, label %7566, label %7602

7602:                                             ; preds = %7597
  %7603 = load i16, ptr %7553, align 2
  br label %7604

7604:                                             ; preds = %7602, %7562, %7556
  %7605 = phi i16 [ %7603, %7602 ], [ %7557, %7562 ], [ %7557, %7556 ]
  %7606 = add nuw nsw i32 %7558, 1
  %7607 = zext i16 %7605 to i32
  %7608 = icmp ult i32 %7606, %7607
  br i1 %7608, label %7556, label %7609

7609:                                             ; preds = %7604
  %7610 = load ptr, ptr %3, align 4
  br label %7611

7611:                                             ; preds = %7609, %7551
  %7612 = phi ptr [ %7610, %7609 ], [ %7552, %7551 ]
  %7613 = getelementptr inbounds %struct.mxl5005s_state, ptr %7612, i32 0, i32 18
  %7614 = load i16, ptr %7613, align 4
  %7615 = icmp eq i16 %7614, 0
  br i1 %7615, label %7671, label %7616

7616:                                             ; preds = %7664, %7611
  %7617 = phi i16 [ %7665, %7664 ], [ %7614, %7611 ]
  %7618 = phi i32 [ %7666, %7664 ], [ 0, %7611 ]
  %7619 = getelementptr %struct.mxl5005s_state, ptr %7612, i32 0, i32 19, i32 %7618
  %7620 = load i16, ptr %7619, align 2
  %7621 = icmp eq i16 %7620, 86
  br i1 %7621, label %7622, label %7664

7622:                                             ; preds = %7616
  %7623 = getelementptr %struct.mxl5005s_state, ptr %7612, i32 0, i32 19, i32 %7618, i32 1
  %7624 = load i16, ptr %7623, align 2
  %7625 = icmp eq i16 %7624, 0
  br i1 %7625, label %7664, label %7626

7626:                                             ; preds = %7657, %7622
  %7627 = phi i32 [ %7658, %7657 ], [ 0, %7622 ]
  %7628 = getelementptr %struct.mxl5005s_state, ptr %7612, i32 0, i32 19, i32 %7618, i32 4, i32 %7627
  store i16 0, ptr %7628, align 2
  %7629 = getelementptr %struct.mxl5005s_state, ptr %7612, i32 0, i32 19, i32 %7618, i32 3, i32 %7627
  %7630 = load i16, ptr %7629, align 2
  %7631 = load ptr, ptr %3, align 4
  %7632 = getelementptr inbounds %struct.mxl5005s_state, ptr %7631, i32 0, i32 24
  %7633 = load i16, ptr %7632, align 4
  %7634 = zext i16 %7633 to i32
  %7635 = icmp eq i16 %7633, 0
  br i1 %7635, label %7657, label %7636

7636:                                             ; preds = %7626
  %7637 = getelementptr %struct.mxl5005s_state, ptr %7612, i32 0, i32 19, i32 %7618, i32 2, i32 %7627
  %7638 = load i16, ptr %7637, align 2
  %7639 = and i16 %7638, 255
  br label %7640

7640:                                             ; preds = %7654, %7636
  %7641 = phi i32 [ 0, %7636 ], [ %7655, %7654 ]
  %7642 = getelementptr %struct.mxl5005s_state, ptr %7631, i32 0, i32 25, i32 %7641
  %7643 = load i16, ptr %7642, align 2
  %7644 = icmp eq i16 %7643, %7639
  br i1 %7644, label %7645, label %7654

7645:                                             ; preds = %7640
  %7646 = and i16 %7630, 255
  %7647 = zext i16 %7646 to i32
  %7648 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7647
  %7649 = load i8, ptr %7648, align 1
  %7650 = zext i8 %7649 to i16
  %7651 = getelementptr %struct.mxl5005s_state, ptr %7631, i32 0, i32 25, i32 %7641, i32 1
  %7652 = load i16, ptr %7651, align 2
  %7653 = and i16 %7652, %7650
  store i16 %7653, ptr %7651, align 2
  br label %7657

7654:                                             ; preds = %7640
  %7655 = add nuw nsw i32 %7641, 1
  %7656 = icmp eq i32 %7655, %7634
  br i1 %7656, label %7657, label %7640

7657:                                             ; preds = %7654, %7645, %7626
  %7658 = add nuw nsw i32 %7627, 1
  %7659 = load i16, ptr %7623, align 2
  %7660 = zext i16 %7659 to i32
  %7661 = icmp ult i32 %7658, %7660
  br i1 %7661, label %7626, label %7662

7662:                                             ; preds = %7657
  %7663 = load i16, ptr %7613, align 4
  br label %7664

7664:                                             ; preds = %7662, %7622, %7616
  %7665 = phi i16 [ %7663, %7662 ], [ %7617, %7622 ], [ %7617, %7616 ]
  %7666 = add nuw nsw i32 %7618, 1
  %7667 = zext i16 %7665 to i32
  %7668 = icmp ult i32 %7666, %7667
  br i1 %7668, label %7616, label %7669

7669:                                             ; preds = %7664
  %7670 = load ptr, ptr %3, align 4
  br label %7671

7671:                                             ; preds = %7669, %7611
  %7672 = phi ptr [ %7670, %7669 ], [ %7612, %7611 ]
  %7673 = getelementptr inbounds %struct.mxl5005s_state, ptr %7672, i32 0, i32 20
  %7674 = load i16, ptr %7673, align 2
  %7675 = icmp eq i16 %7674, 0
  br i1 %7675, label %7729, label %7676

7676:                                             ; preds = %7724, %7671
  %7677 = phi i16 [ %7725, %7724 ], [ %7674, %7671 ]
  %7678 = phi i32 [ %7726, %7724 ], [ 0, %7671 ]
  %7679 = getelementptr %struct.mxl5005s_state, ptr %7672, i32 0, i32 21, i32 %7678
  %7680 = load i16, ptr %7679, align 2
  %7681 = icmp eq i16 %7680, 86
  br i1 %7681, label %7682, label %7724

7682:                                             ; preds = %7676
  %7683 = getelementptr %struct.mxl5005s_state, ptr %7672, i32 0, i32 21, i32 %7678, i32 1
  %7684 = load i16, ptr %7683, align 2
  %7685 = icmp eq i16 %7684, 0
  br i1 %7685, label %7724, label %7686

7686:                                             ; preds = %7717, %7682
  %7687 = phi i32 [ %7718, %7717 ], [ 0, %7682 ]
  %7688 = getelementptr %struct.mxl5005s_state, ptr %7672, i32 0, i32 21, i32 %7678, i32 4, i32 %7687
  store i16 0, ptr %7688, align 2
  %7689 = getelementptr %struct.mxl5005s_state, ptr %7672, i32 0, i32 21, i32 %7678, i32 3, i32 %7687
  %7690 = load i16, ptr %7689, align 2
  %7691 = load ptr, ptr %3, align 4
  %7692 = getelementptr inbounds %struct.mxl5005s_state, ptr %7691, i32 0, i32 24
  %7693 = load i16, ptr %7692, align 4
  %7694 = zext i16 %7693 to i32
  %7695 = icmp eq i16 %7693, 0
  br i1 %7695, label %7717, label %7696

7696:                                             ; preds = %7686
  %7697 = getelementptr %struct.mxl5005s_state, ptr %7672, i32 0, i32 21, i32 %7678, i32 2, i32 %7687
  %7698 = load i16, ptr %7697, align 2
  %7699 = and i16 %7698, 255
  br label %7700

7700:                                             ; preds = %7714, %7696
  %7701 = phi i32 [ 0, %7696 ], [ %7715, %7714 ]
  %7702 = getelementptr %struct.mxl5005s_state, ptr %7691, i32 0, i32 25, i32 %7701
  %7703 = load i16, ptr %7702, align 2
  %7704 = icmp eq i16 %7703, %7699
  br i1 %7704, label %7705, label %7714

7705:                                             ; preds = %7700
  %7706 = and i16 %7690, 255
  %7707 = zext i16 %7706 to i32
  %7708 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7707
  %7709 = load i8, ptr %7708, align 1
  %7710 = zext i8 %7709 to i16
  %7711 = getelementptr %struct.mxl5005s_state, ptr %7691, i32 0, i32 25, i32 %7701, i32 1
  %7712 = load i16, ptr %7711, align 2
  %7713 = and i16 %7712, %7710
  store i16 %7713, ptr %7711, align 2
  br label %7717

7714:                                             ; preds = %7700
  %7715 = add nuw nsw i32 %7701, 1
  %7716 = icmp eq i32 %7715, %7694
  br i1 %7716, label %7717, label %7700

7717:                                             ; preds = %7714, %7705, %7686
  %7718 = add nuw nsw i32 %7687, 1
  %7719 = load i16, ptr %7683, align 2
  %7720 = zext i16 %7719 to i32
  %7721 = icmp ult i32 %7718, %7720
  br i1 %7721, label %7686, label %7722

7722:                                             ; preds = %7717
  %7723 = load i16, ptr %7673, align 2
  br label %7724

7724:                                             ; preds = %7722, %7682, %7676
  %7725 = phi i16 [ %7723, %7722 ], [ %7677, %7682 ], [ %7677, %7676 ]
  %7726 = add nuw nsw i32 %7678, 1
  %7727 = zext i16 %7725 to i32
  %7728 = icmp ult i32 %7726, %7727
  br i1 %7728, label %7676, label %7729

7729:                                             ; preds = %7724, %7671
  %7730 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %7731 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %7732 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %7733 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %7734 = load ptr, ptr %3, align 4
  %7735 = getelementptr inbounds %struct.mxl5005s_state, ptr %7734, i32 0, i32 18
  %7736 = load i16, ptr %7735, align 4
  %7737 = icmp eq i16 %7736, 0
  br i1 %7737, label %7793, label %7738

7738:                                             ; preds = %7786, %7729
  %7739 = phi i16 [ %7787, %7786 ], [ %7736, %7729 ]
  %7740 = phi i32 [ %7788, %7786 ], [ 0, %7729 ]
  %7741 = getelementptr %struct.mxl5005s_state, ptr %7734, i32 0, i32 19, i32 %7740
  %7742 = load i16, ptr %7741, align 2
  %7743 = icmp eq i16 %7742, 82
  br i1 %7743, label %7744, label %7786

7744:                                             ; preds = %7738
  %7745 = getelementptr %struct.mxl5005s_state, ptr %7734, i32 0, i32 19, i32 %7740, i32 1
  %7746 = load i16, ptr %7745, align 2
  %7747 = icmp eq i16 %7746, 0
  br i1 %7747, label %7786, label %7748

7748:                                             ; preds = %7779, %7744
  %7749 = phi i32 [ %7780, %7779 ], [ 0, %7744 ]
  %7750 = getelementptr %struct.mxl5005s_state, ptr %7734, i32 0, i32 19, i32 %7740, i32 4, i32 %7749
  store i16 0, ptr %7750, align 2
  %7751 = getelementptr %struct.mxl5005s_state, ptr %7734, i32 0, i32 19, i32 %7740, i32 3, i32 %7749
  %7752 = load i16, ptr %7751, align 2
  %7753 = load ptr, ptr %3, align 4
  %7754 = getelementptr inbounds %struct.mxl5005s_state, ptr %7753, i32 0, i32 24
  %7755 = load i16, ptr %7754, align 4
  %7756 = zext i16 %7755 to i32
  %7757 = icmp eq i16 %7755, 0
  br i1 %7757, label %7779, label %7758

7758:                                             ; preds = %7748
  %7759 = getelementptr %struct.mxl5005s_state, ptr %7734, i32 0, i32 19, i32 %7740, i32 2, i32 %7749
  %7760 = load i16, ptr %7759, align 2
  %7761 = and i16 %7760, 255
  br label %7762

7762:                                             ; preds = %7776, %7758
  %7763 = phi i32 [ 0, %7758 ], [ %7777, %7776 ]
  %7764 = getelementptr %struct.mxl5005s_state, ptr %7753, i32 0, i32 25, i32 %7763
  %7765 = load i16, ptr %7764, align 2
  %7766 = icmp eq i16 %7765, %7761
  br i1 %7766, label %7767, label %7776

7767:                                             ; preds = %7762
  %7768 = and i16 %7752, 255
  %7769 = zext i16 %7768 to i32
  %7770 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7769
  %7771 = load i8, ptr %7770, align 1
  %7772 = zext i8 %7771 to i16
  %7773 = getelementptr %struct.mxl5005s_state, ptr %7753, i32 0, i32 25, i32 %7763, i32 1
  %7774 = load i16, ptr %7773, align 2
  %7775 = and i16 %7774, %7772
  store i16 %7775, ptr %7773, align 2
  br label %7779

7776:                                             ; preds = %7762
  %7777 = add nuw nsw i32 %7763, 1
  %7778 = icmp eq i32 %7777, %7756
  br i1 %7778, label %7779, label %7762

7779:                                             ; preds = %7776, %7767, %7748
  %7780 = add nuw nsw i32 %7749, 1
  %7781 = load i16, ptr %7745, align 2
  %7782 = zext i16 %7781 to i32
  %7783 = icmp ult i32 %7780, %7782
  br i1 %7783, label %7748, label %7784

7784:                                             ; preds = %7779
  %7785 = load i16, ptr %7735, align 4
  br label %7786

7786:                                             ; preds = %7784, %7744, %7738
  %7787 = phi i16 [ %7785, %7784 ], [ %7739, %7744 ], [ %7739, %7738 ]
  %7788 = add nuw nsw i32 %7740, 1
  %7789 = zext i16 %7787 to i32
  %7790 = icmp ult i32 %7788, %7789
  br i1 %7790, label %7738, label %7791

7791:                                             ; preds = %7786
  %7792 = load ptr, ptr %3, align 4
  br label %7793

7793:                                             ; preds = %7791, %7729
  %7794 = phi ptr [ %7792, %7791 ], [ %7734, %7729 ]
  %7795 = getelementptr inbounds %struct.mxl5005s_state, ptr %7794, i32 0, i32 20
  %7796 = load i16, ptr %7795, align 2
  %7797 = icmp eq i16 %7796, 0
  br i1 %7797, label %7851, label %7798

7798:                                             ; preds = %7846, %7793
  %7799 = phi i16 [ %7847, %7846 ], [ %7796, %7793 ]
  %7800 = phi i32 [ %7848, %7846 ], [ 0, %7793 ]
  %7801 = getelementptr %struct.mxl5005s_state, ptr %7794, i32 0, i32 21, i32 %7800
  %7802 = load i16, ptr %7801, align 2
  %7803 = icmp eq i16 %7802, 82
  br i1 %7803, label %7804, label %7846

7804:                                             ; preds = %7798
  %7805 = getelementptr %struct.mxl5005s_state, ptr %7794, i32 0, i32 21, i32 %7800, i32 1
  %7806 = load i16, ptr %7805, align 2
  %7807 = icmp eq i16 %7806, 0
  br i1 %7807, label %7846, label %7808

7808:                                             ; preds = %7839, %7804
  %7809 = phi i32 [ %7840, %7839 ], [ 0, %7804 ]
  %7810 = getelementptr %struct.mxl5005s_state, ptr %7794, i32 0, i32 21, i32 %7800, i32 4, i32 %7809
  store i16 0, ptr %7810, align 2
  %7811 = getelementptr %struct.mxl5005s_state, ptr %7794, i32 0, i32 21, i32 %7800, i32 3, i32 %7809
  %7812 = load i16, ptr %7811, align 2
  %7813 = load ptr, ptr %3, align 4
  %7814 = getelementptr inbounds %struct.mxl5005s_state, ptr %7813, i32 0, i32 24
  %7815 = load i16, ptr %7814, align 4
  %7816 = zext i16 %7815 to i32
  %7817 = icmp eq i16 %7815, 0
  br i1 %7817, label %7839, label %7818

7818:                                             ; preds = %7808
  %7819 = getelementptr %struct.mxl5005s_state, ptr %7794, i32 0, i32 21, i32 %7800, i32 2, i32 %7809
  %7820 = load i16, ptr %7819, align 2
  %7821 = and i16 %7820, 255
  br label %7822

7822:                                             ; preds = %7836, %7818
  %7823 = phi i32 [ 0, %7818 ], [ %7837, %7836 ]
  %7824 = getelementptr %struct.mxl5005s_state, ptr %7813, i32 0, i32 25, i32 %7823
  %7825 = load i16, ptr %7824, align 2
  %7826 = icmp eq i16 %7825, %7821
  br i1 %7826, label %7827, label %7836

7827:                                             ; preds = %7822
  %7828 = and i16 %7812, 255
  %7829 = zext i16 %7828 to i32
  %7830 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7829
  %7831 = load i8, ptr %7830, align 1
  %7832 = zext i8 %7831 to i16
  %7833 = getelementptr %struct.mxl5005s_state, ptr %7813, i32 0, i32 25, i32 %7823, i32 1
  %7834 = load i16, ptr %7833, align 2
  %7835 = and i16 %7834, %7832
  store i16 %7835, ptr %7833, align 2
  br label %7839

7836:                                             ; preds = %7822
  %7837 = add nuw nsw i32 %7823, 1
  %7838 = icmp eq i32 %7837, %7816
  br i1 %7838, label %7839, label %7822

7839:                                             ; preds = %7836, %7827, %7808
  %7840 = add nuw nsw i32 %7809, 1
  %7841 = load i16, ptr %7805, align 2
  %7842 = zext i16 %7841 to i32
  %7843 = icmp ult i32 %7840, %7842
  br i1 %7843, label %7808, label %7844

7844:                                             ; preds = %7839
  %7845 = load i16, ptr %7795, align 2
  br label %7846

7846:                                             ; preds = %7844, %7804, %7798
  %7847 = phi i16 [ %7845, %7844 ], [ %7799, %7804 ], [ %7799, %7798 ]
  %7848 = add nuw nsw i32 %7800, 1
  %7849 = zext i16 %7847 to i32
  %7850 = icmp ult i32 %7848, %7849
  br i1 %7850, label %7798, label %7851

7851:                                             ; preds = %7846, %7793
  %7852 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %7853 = load i32, ptr %5, align 4
  br label %7854

7854:                                             ; preds = %7851, %7487
  %7855 = phi i32 [ %7853, %7851 ], [ %7488, %7487 ]
  %7856 = add i32 %7855, -150000000
  %7857 = icmp ult i32 %7856, 130000000
  br i1 %7857, label %7858, label %8102

7858:                                             ; preds = %7854
  %7859 = load ptr, ptr %3, align 4
  %7860 = getelementptr inbounds %struct.mxl5005s_state, ptr %7859, i32 0, i32 18
  %7861 = load i16, ptr %7860, align 4
  %7862 = icmp eq i16 %7861, 0
  br i1 %7862, label %7918, label %7863

7863:                                             ; preds = %7911, %7858
  %7864 = phi i16 [ %7912, %7911 ], [ %7861, %7858 ]
  %7865 = phi i32 [ %7913, %7911 ], [ 0, %7858 ]
  %7866 = getelementptr %struct.mxl5005s_state, ptr %7859, i32 0, i32 19, i32 %7865
  %7867 = load i16, ptr %7866, align 2
  %7868 = icmp eq i16 %7867, 83
  br i1 %7868, label %7869, label %7911

7869:                                             ; preds = %7863
  %7870 = getelementptr %struct.mxl5005s_state, ptr %7859, i32 0, i32 19, i32 %7865, i32 1
  %7871 = load i16, ptr %7870, align 2
  %7872 = icmp eq i16 %7871, 0
  br i1 %7872, label %7911, label %7873

7873:                                             ; preds = %7904, %7869
  %7874 = phi i32 [ %7905, %7904 ], [ 0, %7869 ]
  %7875 = getelementptr %struct.mxl5005s_state, ptr %7859, i32 0, i32 19, i32 %7865, i32 4, i32 %7874
  store i16 0, ptr %7875, align 2
  %7876 = getelementptr %struct.mxl5005s_state, ptr %7859, i32 0, i32 19, i32 %7865, i32 3, i32 %7874
  %7877 = load i16, ptr %7876, align 2
  %7878 = load ptr, ptr %3, align 4
  %7879 = getelementptr inbounds %struct.mxl5005s_state, ptr %7878, i32 0, i32 24
  %7880 = load i16, ptr %7879, align 4
  %7881 = zext i16 %7880 to i32
  %7882 = icmp eq i16 %7880, 0
  br i1 %7882, label %7904, label %7883

7883:                                             ; preds = %7873
  %7884 = getelementptr %struct.mxl5005s_state, ptr %7859, i32 0, i32 19, i32 %7865, i32 2, i32 %7874
  %7885 = load i16, ptr %7884, align 2
  %7886 = and i16 %7885, 255
  br label %7887

7887:                                             ; preds = %7901, %7883
  %7888 = phi i32 [ 0, %7883 ], [ %7902, %7901 ]
  %7889 = getelementptr %struct.mxl5005s_state, ptr %7878, i32 0, i32 25, i32 %7888
  %7890 = load i16, ptr %7889, align 2
  %7891 = icmp eq i16 %7890, %7886
  br i1 %7891, label %7892, label %7901

7892:                                             ; preds = %7887
  %7893 = and i16 %7877, 255
  %7894 = zext i16 %7893 to i32
  %7895 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7894
  %7896 = load i8, ptr %7895, align 1
  %7897 = zext i8 %7896 to i16
  %7898 = getelementptr %struct.mxl5005s_state, ptr %7878, i32 0, i32 25, i32 %7888, i32 1
  %7899 = load i16, ptr %7898, align 2
  %7900 = and i16 %7899, %7897
  store i16 %7900, ptr %7898, align 2
  br label %7904

7901:                                             ; preds = %7887
  %7902 = add nuw nsw i32 %7888, 1
  %7903 = icmp eq i32 %7902, %7881
  br i1 %7903, label %7904, label %7887

7904:                                             ; preds = %7901, %7892, %7873
  %7905 = add nuw nsw i32 %7874, 1
  %7906 = load i16, ptr %7870, align 2
  %7907 = zext i16 %7906 to i32
  %7908 = icmp ult i32 %7905, %7907
  br i1 %7908, label %7873, label %7909

7909:                                             ; preds = %7904
  %7910 = load i16, ptr %7860, align 4
  br label %7911

7911:                                             ; preds = %7909, %7869, %7863
  %7912 = phi i16 [ %7910, %7909 ], [ %7864, %7869 ], [ %7864, %7863 ]
  %7913 = add nuw nsw i32 %7865, 1
  %7914 = zext i16 %7912 to i32
  %7915 = icmp ult i32 %7913, %7914
  br i1 %7915, label %7863, label %7916

7916:                                             ; preds = %7911
  %7917 = load ptr, ptr %3, align 4
  br label %7918

7918:                                             ; preds = %7916, %7858
  %7919 = phi ptr [ %7917, %7916 ], [ %7859, %7858 ]
  %7920 = getelementptr inbounds %struct.mxl5005s_state, ptr %7919, i32 0, i32 20
  %7921 = load i16, ptr %7920, align 2
  %7922 = icmp eq i16 %7921, 0
  br i1 %7922, label %7978, label %7923

7923:                                             ; preds = %7971, %7918
  %7924 = phi i16 [ %7972, %7971 ], [ %7921, %7918 ]
  %7925 = phi i32 [ %7973, %7971 ], [ 0, %7918 ]
  %7926 = getelementptr %struct.mxl5005s_state, ptr %7919, i32 0, i32 21, i32 %7925
  %7927 = load i16, ptr %7926, align 2
  %7928 = icmp eq i16 %7927, 83
  br i1 %7928, label %7929, label %7971

7929:                                             ; preds = %7923
  %7930 = getelementptr %struct.mxl5005s_state, ptr %7919, i32 0, i32 21, i32 %7925, i32 1
  %7931 = load i16, ptr %7930, align 2
  %7932 = icmp eq i16 %7931, 0
  br i1 %7932, label %7971, label %7933

7933:                                             ; preds = %7964, %7929
  %7934 = phi i32 [ %7965, %7964 ], [ 0, %7929 ]
  %7935 = getelementptr %struct.mxl5005s_state, ptr %7919, i32 0, i32 21, i32 %7925, i32 4, i32 %7934
  store i16 0, ptr %7935, align 2
  %7936 = getelementptr %struct.mxl5005s_state, ptr %7919, i32 0, i32 21, i32 %7925, i32 3, i32 %7934
  %7937 = load i16, ptr %7936, align 2
  %7938 = load ptr, ptr %3, align 4
  %7939 = getelementptr inbounds %struct.mxl5005s_state, ptr %7938, i32 0, i32 24
  %7940 = load i16, ptr %7939, align 4
  %7941 = zext i16 %7940 to i32
  %7942 = icmp eq i16 %7940, 0
  br i1 %7942, label %7964, label %7943

7943:                                             ; preds = %7933
  %7944 = getelementptr %struct.mxl5005s_state, ptr %7919, i32 0, i32 21, i32 %7925, i32 2, i32 %7934
  %7945 = load i16, ptr %7944, align 2
  %7946 = and i16 %7945, 255
  br label %7947

7947:                                             ; preds = %7961, %7943
  %7948 = phi i32 [ 0, %7943 ], [ %7962, %7961 ]
  %7949 = getelementptr %struct.mxl5005s_state, ptr %7938, i32 0, i32 25, i32 %7948
  %7950 = load i16, ptr %7949, align 2
  %7951 = icmp eq i16 %7950, %7946
  br i1 %7951, label %7952, label %7961

7952:                                             ; preds = %7947
  %7953 = and i16 %7937, 255
  %7954 = zext i16 %7953 to i32
  %7955 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %7954
  %7956 = load i8, ptr %7955, align 1
  %7957 = zext i8 %7956 to i16
  %7958 = getelementptr %struct.mxl5005s_state, ptr %7938, i32 0, i32 25, i32 %7948, i32 1
  %7959 = load i16, ptr %7958, align 2
  %7960 = and i16 %7959, %7957
  store i16 %7960, ptr %7958, align 2
  br label %7964

7961:                                             ; preds = %7947
  %7962 = add nuw nsw i32 %7948, 1
  %7963 = icmp eq i32 %7962, %7941
  br i1 %7963, label %7964, label %7947

7964:                                             ; preds = %7961, %7952, %7933
  %7965 = add nuw nsw i32 %7934, 1
  %7966 = load i16, ptr %7930, align 2
  %7967 = zext i16 %7966 to i32
  %7968 = icmp ult i32 %7965, %7967
  br i1 %7968, label %7933, label %7969

7969:                                             ; preds = %7964
  %7970 = load i16, ptr %7920, align 2
  br label %7971

7971:                                             ; preds = %7969, %7929, %7923
  %7972 = phi i16 [ %7970, %7969 ], [ %7924, %7929 ], [ %7924, %7923 ]
  %7973 = add nuw nsw i32 %7925, 1
  %7974 = zext i16 %7972 to i32
  %7975 = icmp ult i32 %7973, %7974
  br i1 %7975, label %7923, label %7976

7976:                                             ; preds = %7971
  %7977 = load ptr, ptr %3, align 4
  br label %7978

7978:                                             ; preds = %7976, %7918
  %7979 = phi ptr [ %7977, %7976 ], [ %7919, %7918 ]
  %7980 = getelementptr inbounds %struct.mxl5005s_state, ptr %7979, i32 0, i32 18
  %7981 = load i16, ptr %7980, align 4
  %7982 = icmp eq i16 %7981, 0
  br i1 %7982, label %8038, label %7983

7983:                                             ; preds = %8031, %7978
  %7984 = phi i16 [ %8032, %8031 ], [ %7981, %7978 ]
  %7985 = phi i32 [ %8033, %8031 ], [ 0, %7978 ]
  %7986 = getelementptr %struct.mxl5005s_state, ptr %7979, i32 0, i32 19, i32 %7985
  %7987 = load i16, ptr %7986, align 2
  %7988 = icmp eq i16 %7987, 86
  br i1 %7988, label %7989, label %8031

7989:                                             ; preds = %7983
  %7990 = getelementptr %struct.mxl5005s_state, ptr %7979, i32 0, i32 19, i32 %7985, i32 1
  %7991 = load i16, ptr %7990, align 2
  %7992 = icmp eq i16 %7991, 0
  br i1 %7992, label %8031, label %7993

7993:                                             ; preds = %8024, %7989
  %7994 = phi i32 [ %8025, %8024 ], [ 0, %7989 ]
  %7995 = getelementptr %struct.mxl5005s_state, ptr %7979, i32 0, i32 19, i32 %7985, i32 4, i32 %7994
  store i16 0, ptr %7995, align 2
  %7996 = getelementptr %struct.mxl5005s_state, ptr %7979, i32 0, i32 19, i32 %7985, i32 3, i32 %7994
  %7997 = load i16, ptr %7996, align 2
  %7998 = load ptr, ptr %3, align 4
  %7999 = getelementptr inbounds %struct.mxl5005s_state, ptr %7998, i32 0, i32 24
  %8000 = load i16, ptr %7999, align 4
  %8001 = zext i16 %8000 to i32
  %8002 = icmp eq i16 %8000, 0
  br i1 %8002, label %8024, label %8003

8003:                                             ; preds = %7993
  %8004 = getelementptr %struct.mxl5005s_state, ptr %7979, i32 0, i32 19, i32 %7985, i32 2, i32 %7994
  %8005 = load i16, ptr %8004, align 2
  %8006 = and i16 %8005, 255
  br label %8007

8007:                                             ; preds = %8021, %8003
  %8008 = phi i32 [ 0, %8003 ], [ %8022, %8021 ]
  %8009 = getelementptr %struct.mxl5005s_state, ptr %7998, i32 0, i32 25, i32 %8008
  %8010 = load i16, ptr %8009, align 2
  %8011 = icmp eq i16 %8010, %8006
  br i1 %8011, label %8012, label %8021

8012:                                             ; preds = %8007
  %8013 = and i16 %7997, 255
  %8014 = zext i16 %8013 to i32
  %8015 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8014
  %8016 = load i8, ptr %8015, align 1
  %8017 = zext i8 %8016 to i16
  %8018 = getelementptr %struct.mxl5005s_state, ptr %7998, i32 0, i32 25, i32 %8008, i32 1
  %8019 = load i16, ptr %8018, align 2
  %8020 = and i16 %8019, %8017
  store i16 %8020, ptr %8018, align 2
  br label %8024

8021:                                             ; preds = %8007
  %8022 = add nuw nsw i32 %8008, 1
  %8023 = icmp eq i32 %8022, %8001
  br i1 %8023, label %8024, label %8007

8024:                                             ; preds = %8021, %8012, %7993
  %8025 = add nuw nsw i32 %7994, 1
  %8026 = load i16, ptr %7990, align 2
  %8027 = zext i16 %8026 to i32
  %8028 = icmp ult i32 %8025, %8027
  br i1 %8028, label %7993, label %8029

8029:                                             ; preds = %8024
  %8030 = load i16, ptr %7980, align 4
  br label %8031

8031:                                             ; preds = %8029, %7989, %7983
  %8032 = phi i16 [ %8030, %8029 ], [ %7984, %7989 ], [ %7984, %7983 ]
  %8033 = add nuw nsw i32 %7985, 1
  %8034 = zext i16 %8032 to i32
  %8035 = icmp ult i32 %8033, %8034
  br i1 %8035, label %7983, label %8036

8036:                                             ; preds = %8031
  %8037 = load ptr, ptr %3, align 4
  br label %8038

8038:                                             ; preds = %8036, %7978
  %8039 = phi ptr [ %8037, %8036 ], [ %7979, %7978 ]
  %8040 = getelementptr inbounds %struct.mxl5005s_state, ptr %8039, i32 0, i32 20
  %8041 = load i16, ptr %8040, align 2
  %8042 = icmp eq i16 %8041, 0
  br i1 %8042, label %8096, label %8043

8043:                                             ; preds = %8091, %8038
  %8044 = phi i16 [ %8092, %8091 ], [ %8041, %8038 ]
  %8045 = phi i32 [ %8093, %8091 ], [ 0, %8038 ]
  %8046 = getelementptr %struct.mxl5005s_state, ptr %8039, i32 0, i32 21, i32 %8045
  %8047 = load i16, ptr %8046, align 2
  %8048 = icmp eq i16 %8047, 86
  br i1 %8048, label %8049, label %8091

8049:                                             ; preds = %8043
  %8050 = getelementptr %struct.mxl5005s_state, ptr %8039, i32 0, i32 21, i32 %8045, i32 1
  %8051 = load i16, ptr %8050, align 2
  %8052 = icmp eq i16 %8051, 0
  br i1 %8052, label %8091, label %8053

8053:                                             ; preds = %8084, %8049
  %8054 = phi i32 [ %8085, %8084 ], [ 0, %8049 ]
  %8055 = getelementptr %struct.mxl5005s_state, ptr %8039, i32 0, i32 21, i32 %8045, i32 4, i32 %8054
  store i16 0, ptr %8055, align 2
  %8056 = getelementptr %struct.mxl5005s_state, ptr %8039, i32 0, i32 21, i32 %8045, i32 3, i32 %8054
  %8057 = load i16, ptr %8056, align 2
  %8058 = load ptr, ptr %3, align 4
  %8059 = getelementptr inbounds %struct.mxl5005s_state, ptr %8058, i32 0, i32 24
  %8060 = load i16, ptr %8059, align 4
  %8061 = zext i16 %8060 to i32
  %8062 = icmp eq i16 %8060, 0
  br i1 %8062, label %8084, label %8063

8063:                                             ; preds = %8053
  %8064 = getelementptr %struct.mxl5005s_state, ptr %8039, i32 0, i32 21, i32 %8045, i32 2, i32 %8054
  %8065 = load i16, ptr %8064, align 2
  %8066 = and i16 %8065, 255
  br label %8067

8067:                                             ; preds = %8081, %8063
  %8068 = phi i32 [ 0, %8063 ], [ %8082, %8081 ]
  %8069 = getelementptr %struct.mxl5005s_state, ptr %8058, i32 0, i32 25, i32 %8068
  %8070 = load i16, ptr %8069, align 2
  %8071 = icmp eq i16 %8070, %8066
  br i1 %8071, label %8072, label %8081

8072:                                             ; preds = %8067
  %8073 = and i16 %8057, 255
  %8074 = zext i16 %8073 to i32
  %8075 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8074
  %8076 = load i8, ptr %8075, align 1
  %8077 = zext i8 %8076 to i16
  %8078 = getelementptr %struct.mxl5005s_state, ptr %8058, i32 0, i32 25, i32 %8068, i32 1
  %8079 = load i16, ptr %8078, align 2
  %8080 = and i16 %8079, %8077
  store i16 %8080, ptr %8078, align 2
  br label %8084

8081:                                             ; preds = %8067
  %8082 = add nuw nsw i32 %8068, 1
  %8083 = icmp eq i32 %8082, %8061
  br i1 %8083, label %8084, label %8067

8084:                                             ; preds = %8081, %8072, %8053
  %8085 = add nuw nsw i32 %8054, 1
  %8086 = load i16, ptr %8050, align 2
  %8087 = zext i16 %8086 to i32
  %8088 = icmp ult i32 %8085, %8087
  br i1 %8088, label %8053, label %8089

8089:                                             ; preds = %8084
  %8090 = load i16, ptr %8040, align 2
  br label %8091

8091:                                             ; preds = %8089, %8049, %8043
  %8092 = phi i16 [ %8090, %8089 ], [ %8044, %8049 ], [ %8044, %8043 ]
  %8093 = add nuw nsw i32 %8045, 1
  %8094 = zext i16 %8092 to i32
  %8095 = icmp ult i32 %8093, %8094
  br i1 %8095, label %8043, label %8096

8096:                                             ; preds = %8091, %8038
  %8097 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %8098 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %8099 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %8100 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %8101 = load i32, ptr %5, align 4
  br label %8102

8102:                                             ; preds = %8096, %7854
  %8103 = phi i32 [ %8101, %8096 ], [ %7855, %7854 ]
  %8104 = add i32 %8103, -280000000
  %8105 = icmp ult i32 %8104, 80000000
  br i1 %8105, label %8106, label %8353

8106:                                             ; preds = %8102
  %8107 = load ptr, ptr %3, align 4
  %8108 = getelementptr inbounds %struct.mxl5005s_state, ptr %8107, i32 0, i32 18
  %8109 = load i16, ptr %8108, align 4
  %8110 = icmp eq i16 %8109, 0
  br i1 %8110, label %8166, label %8111

8111:                                             ; preds = %8159, %8106
  %8112 = phi i16 [ %8160, %8159 ], [ %8109, %8106 ]
  %8113 = phi i32 [ %8161, %8159 ], [ 0, %8106 ]
  %8114 = getelementptr %struct.mxl5005s_state, ptr %8107, i32 0, i32 19, i32 %8113
  %8115 = load i16, ptr %8114, align 2
  %8116 = icmp eq i16 %8115, 83
  br i1 %8116, label %8117, label %8159

8117:                                             ; preds = %8111
  %8118 = getelementptr %struct.mxl5005s_state, ptr %8107, i32 0, i32 19, i32 %8113, i32 1
  %8119 = load i16, ptr %8118, align 2
  %8120 = icmp eq i16 %8119, 0
  br i1 %8120, label %8159, label %8121

8121:                                             ; preds = %8152, %8117
  %8122 = phi i32 [ %8153, %8152 ], [ 0, %8117 ]
  %8123 = getelementptr %struct.mxl5005s_state, ptr %8107, i32 0, i32 19, i32 %8113, i32 4, i32 %8122
  store i16 0, ptr %8123, align 2
  %8124 = getelementptr %struct.mxl5005s_state, ptr %8107, i32 0, i32 19, i32 %8113, i32 3, i32 %8122
  %8125 = load i16, ptr %8124, align 2
  %8126 = load ptr, ptr %3, align 4
  %8127 = getelementptr inbounds %struct.mxl5005s_state, ptr %8126, i32 0, i32 24
  %8128 = load i16, ptr %8127, align 4
  %8129 = zext i16 %8128 to i32
  %8130 = icmp eq i16 %8128, 0
  br i1 %8130, label %8152, label %8131

8131:                                             ; preds = %8121
  %8132 = getelementptr %struct.mxl5005s_state, ptr %8107, i32 0, i32 19, i32 %8113, i32 2, i32 %8122
  %8133 = load i16, ptr %8132, align 2
  %8134 = and i16 %8133, 255
  br label %8135

8135:                                             ; preds = %8149, %8131
  %8136 = phi i32 [ 0, %8131 ], [ %8150, %8149 ]
  %8137 = getelementptr %struct.mxl5005s_state, ptr %8126, i32 0, i32 25, i32 %8136
  %8138 = load i16, ptr %8137, align 2
  %8139 = icmp eq i16 %8138, %8134
  br i1 %8139, label %8140, label %8149

8140:                                             ; preds = %8135
  %8141 = and i16 %8125, 255
  %8142 = zext i16 %8141 to i32
  %8143 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8142
  %8144 = load i8, ptr %8143, align 1
  %8145 = zext i8 %8144 to i16
  %8146 = getelementptr %struct.mxl5005s_state, ptr %8126, i32 0, i32 25, i32 %8136, i32 1
  %8147 = load i16, ptr %8146, align 2
  %8148 = and i16 %8147, %8145
  store i16 %8148, ptr %8146, align 2
  br label %8152

8149:                                             ; preds = %8135
  %8150 = add nuw nsw i32 %8136, 1
  %8151 = icmp eq i32 %8150, %8129
  br i1 %8151, label %8152, label %8135

8152:                                             ; preds = %8149, %8140, %8121
  %8153 = add nuw nsw i32 %8122, 1
  %8154 = load i16, ptr %8118, align 2
  %8155 = zext i16 %8154 to i32
  %8156 = icmp ult i32 %8153, %8155
  br i1 %8156, label %8121, label %8157

8157:                                             ; preds = %8152
  %8158 = load i16, ptr %8108, align 4
  br label %8159

8159:                                             ; preds = %8157, %8117, %8111
  %8160 = phi i16 [ %8158, %8157 ], [ %8112, %8117 ], [ %8112, %8111 ]
  %8161 = add nuw nsw i32 %8113, 1
  %8162 = zext i16 %8160 to i32
  %8163 = icmp ult i32 %8161, %8162
  br i1 %8163, label %8111, label %8164

8164:                                             ; preds = %8159
  %8165 = load ptr, ptr %3, align 4
  br label %8166

8166:                                             ; preds = %8164, %8106
  %8167 = phi ptr [ %8165, %8164 ], [ %8107, %8106 ]
  %8168 = getelementptr inbounds %struct.mxl5005s_state, ptr %8167, i32 0, i32 20
  %8169 = load i16, ptr %8168, align 2
  %8170 = icmp eq i16 %8169, 0
  br i1 %8170, label %8226, label %8171

8171:                                             ; preds = %8219, %8166
  %8172 = phi i16 [ %8220, %8219 ], [ %8169, %8166 ]
  %8173 = phi i32 [ %8221, %8219 ], [ 0, %8166 ]
  %8174 = getelementptr %struct.mxl5005s_state, ptr %8167, i32 0, i32 21, i32 %8173
  %8175 = load i16, ptr %8174, align 2
  %8176 = icmp eq i16 %8175, 83
  br i1 %8176, label %8177, label %8219

8177:                                             ; preds = %8171
  %8178 = getelementptr %struct.mxl5005s_state, ptr %8167, i32 0, i32 21, i32 %8173, i32 1
  %8179 = load i16, ptr %8178, align 2
  %8180 = icmp eq i16 %8179, 0
  br i1 %8180, label %8219, label %8181

8181:                                             ; preds = %8212, %8177
  %8182 = phi i32 [ %8213, %8212 ], [ 0, %8177 ]
  %8183 = getelementptr %struct.mxl5005s_state, ptr %8167, i32 0, i32 21, i32 %8173, i32 4, i32 %8182
  store i16 0, ptr %8183, align 2
  %8184 = getelementptr %struct.mxl5005s_state, ptr %8167, i32 0, i32 21, i32 %8173, i32 3, i32 %8182
  %8185 = load i16, ptr %8184, align 2
  %8186 = load ptr, ptr %3, align 4
  %8187 = getelementptr inbounds %struct.mxl5005s_state, ptr %8186, i32 0, i32 24
  %8188 = load i16, ptr %8187, align 4
  %8189 = zext i16 %8188 to i32
  %8190 = icmp eq i16 %8188, 0
  br i1 %8190, label %8212, label %8191

8191:                                             ; preds = %8181
  %8192 = getelementptr %struct.mxl5005s_state, ptr %8167, i32 0, i32 21, i32 %8173, i32 2, i32 %8182
  %8193 = load i16, ptr %8192, align 2
  %8194 = and i16 %8193, 255
  br label %8195

8195:                                             ; preds = %8209, %8191
  %8196 = phi i32 [ 0, %8191 ], [ %8210, %8209 ]
  %8197 = getelementptr %struct.mxl5005s_state, ptr %8186, i32 0, i32 25, i32 %8196
  %8198 = load i16, ptr %8197, align 2
  %8199 = icmp eq i16 %8198, %8194
  br i1 %8199, label %8200, label %8209

8200:                                             ; preds = %8195
  %8201 = and i16 %8185, 255
  %8202 = zext i16 %8201 to i32
  %8203 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8202
  %8204 = load i8, ptr %8203, align 1
  %8205 = zext i8 %8204 to i16
  %8206 = getelementptr %struct.mxl5005s_state, ptr %8186, i32 0, i32 25, i32 %8196, i32 1
  %8207 = load i16, ptr %8206, align 2
  %8208 = and i16 %8207, %8205
  store i16 %8208, ptr %8206, align 2
  br label %8212

8209:                                             ; preds = %8195
  %8210 = add nuw nsw i32 %8196, 1
  %8211 = icmp eq i32 %8210, %8189
  br i1 %8211, label %8212, label %8195

8212:                                             ; preds = %8209, %8200, %8181
  %8213 = add nuw nsw i32 %8182, 1
  %8214 = load i16, ptr %8178, align 2
  %8215 = zext i16 %8214 to i32
  %8216 = icmp ult i32 %8213, %8215
  br i1 %8216, label %8181, label %8217

8217:                                             ; preds = %8212
  %8218 = load i16, ptr %8168, align 2
  br label %8219

8219:                                             ; preds = %8217, %8177, %8171
  %8220 = phi i16 [ %8218, %8217 ], [ %8172, %8177 ], [ %8172, %8171 ]
  %8221 = add nuw nsw i32 %8173, 1
  %8222 = zext i16 %8220 to i32
  %8223 = icmp ult i32 %8221, %8222
  br i1 %8223, label %8171, label %8224

8224:                                             ; preds = %8219
  %8225 = load ptr, ptr %3, align 4
  br label %8226

8226:                                             ; preds = %8224, %8166
  %8227 = phi ptr [ %8225, %8224 ], [ %8167, %8166 ]
  %8228 = getelementptr inbounds %struct.mxl5005s_state, ptr %8227, i32 0, i32 18
  %8229 = load i16, ptr %8228, align 4
  %8230 = icmp eq i16 %8229, 0
  br i1 %8230, label %8286, label %8231

8231:                                             ; preds = %8279, %8226
  %8232 = phi i16 [ %8280, %8279 ], [ %8229, %8226 ]
  %8233 = phi i32 [ %8281, %8279 ], [ 0, %8226 ]
  %8234 = getelementptr %struct.mxl5005s_state, ptr %8227, i32 0, i32 19, i32 %8233
  %8235 = load i16, ptr %8234, align 2
  %8236 = icmp eq i16 %8235, 86
  br i1 %8236, label %8237, label %8279

8237:                                             ; preds = %8231
  %8238 = getelementptr %struct.mxl5005s_state, ptr %8227, i32 0, i32 19, i32 %8233, i32 1
  %8239 = load i16, ptr %8238, align 2
  %8240 = icmp eq i16 %8239, 0
  br i1 %8240, label %8279, label %8241

8241:                                             ; preds = %8272, %8237
  %8242 = phi i32 [ %8273, %8272 ], [ 0, %8237 ]
  %8243 = getelementptr %struct.mxl5005s_state, ptr %8227, i32 0, i32 19, i32 %8233, i32 4, i32 %8242
  store i16 0, ptr %8243, align 2
  %8244 = getelementptr %struct.mxl5005s_state, ptr %8227, i32 0, i32 19, i32 %8233, i32 3, i32 %8242
  %8245 = load i16, ptr %8244, align 2
  %8246 = load ptr, ptr %3, align 4
  %8247 = getelementptr inbounds %struct.mxl5005s_state, ptr %8246, i32 0, i32 24
  %8248 = load i16, ptr %8247, align 4
  %8249 = zext i16 %8248 to i32
  %8250 = icmp eq i16 %8248, 0
  br i1 %8250, label %8272, label %8251

8251:                                             ; preds = %8241
  %8252 = getelementptr %struct.mxl5005s_state, ptr %8227, i32 0, i32 19, i32 %8233, i32 2, i32 %8242
  %8253 = load i16, ptr %8252, align 2
  %8254 = and i16 %8253, 255
  br label %8255

8255:                                             ; preds = %8269, %8251
  %8256 = phi i32 [ 0, %8251 ], [ %8270, %8269 ]
  %8257 = getelementptr %struct.mxl5005s_state, ptr %8246, i32 0, i32 25, i32 %8256
  %8258 = load i16, ptr %8257, align 2
  %8259 = icmp eq i16 %8258, %8254
  br i1 %8259, label %8260, label %8269

8260:                                             ; preds = %8255
  %8261 = and i16 %8245, 255
  %8262 = zext i16 %8261 to i32
  %8263 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8262
  %8264 = load i8, ptr %8263, align 1
  %8265 = zext i8 %8264 to i16
  %8266 = getelementptr %struct.mxl5005s_state, ptr %8246, i32 0, i32 25, i32 %8256, i32 1
  %8267 = load i16, ptr %8266, align 2
  %8268 = and i16 %8267, %8265
  store i16 %8268, ptr %8266, align 2
  br label %8272

8269:                                             ; preds = %8255
  %8270 = add nuw nsw i32 %8256, 1
  %8271 = icmp eq i32 %8270, %8249
  br i1 %8271, label %8272, label %8255

8272:                                             ; preds = %8269, %8260, %8241
  %8273 = add nuw nsw i32 %8242, 1
  %8274 = load i16, ptr %8238, align 2
  %8275 = zext i16 %8274 to i32
  %8276 = icmp ult i32 %8273, %8275
  br i1 %8276, label %8241, label %8277

8277:                                             ; preds = %8272
  %8278 = load i16, ptr %8228, align 4
  br label %8279

8279:                                             ; preds = %8277, %8237, %8231
  %8280 = phi i16 [ %8278, %8277 ], [ %8232, %8237 ], [ %8232, %8231 ]
  %8281 = add nuw nsw i32 %8233, 1
  %8282 = zext i16 %8280 to i32
  %8283 = icmp ult i32 %8281, %8282
  br i1 %8283, label %8231, label %8284

8284:                                             ; preds = %8279
  %8285 = load ptr, ptr %3, align 4
  br label %8286

8286:                                             ; preds = %8284, %8226
  %8287 = phi ptr [ %8285, %8284 ], [ %8227, %8226 ]
  %8288 = getelementptr inbounds %struct.mxl5005s_state, ptr %8287, i32 0, i32 20
  %8289 = load i16, ptr %8288, align 2
  %8290 = icmp eq i16 %8289, 0
  br i1 %8290, label %8344, label %8291

8291:                                             ; preds = %8339, %8286
  %8292 = phi i16 [ %8340, %8339 ], [ %8289, %8286 ]
  %8293 = phi i32 [ %8341, %8339 ], [ 0, %8286 ]
  %8294 = getelementptr %struct.mxl5005s_state, ptr %8287, i32 0, i32 21, i32 %8293
  %8295 = load i16, ptr %8294, align 2
  %8296 = icmp eq i16 %8295, 86
  br i1 %8296, label %8297, label %8339

8297:                                             ; preds = %8291
  %8298 = getelementptr %struct.mxl5005s_state, ptr %8287, i32 0, i32 21, i32 %8293, i32 1
  %8299 = load i16, ptr %8298, align 2
  %8300 = icmp eq i16 %8299, 0
  br i1 %8300, label %8339, label %8301

8301:                                             ; preds = %8332, %8297
  %8302 = phi i32 [ %8333, %8332 ], [ 0, %8297 ]
  %8303 = getelementptr %struct.mxl5005s_state, ptr %8287, i32 0, i32 21, i32 %8293, i32 4, i32 %8302
  store i16 0, ptr %8303, align 2
  %8304 = getelementptr %struct.mxl5005s_state, ptr %8287, i32 0, i32 21, i32 %8293, i32 3, i32 %8302
  %8305 = load i16, ptr %8304, align 2
  %8306 = load ptr, ptr %3, align 4
  %8307 = getelementptr inbounds %struct.mxl5005s_state, ptr %8306, i32 0, i32 24
  %8308 = load i16, ptr %8307, align 4
  %8309 = zext i16 %8308 to i32
  %8310 = icmp eq i16 %8308, 0
  br i1 %8310, label %8332, label %8311

8311:                                             ; preds = %8301
  %8312 = getelementptr %struct.mxl5005s_state, ptr %8287, i32 0, i32 21, i32 %8293, i32 2, i32 %8302
  %8313 = load i16, ptr %8312, align 2
  %8314 = and i16 %8313, 255
  br label %8315

8315:                                             ; preds = %8329, %8311
  %8316 = phi i32 [ 0, %8311 ], [ %8330, %8329 ]
  %8317 = getelementptr %struct.mxl5005s_state, ptr %8306, i32 0, i32 25, i32 %8316
  %8318 = load i16, ptr %8317, align 2
  %8319 = icmp eq i16 %8318, %8314
  br i1 %8319, label %8320, label %8329

8320:                                             ; preds = %8315
  %8321 = and i16 %8305, 255
  %8322 = zext i16 %8321 to i32
  %8323 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8322
  %8324 = load i8, ptr %8323, align 1
  %8325 = zext i8 %8324 to i16
  %8326 = getelementptr %struct.mxl5005s_state, ptr %8306, i32 0, i32 25, i32 %8316, i32 1
  %8327 = load i16, ptr %8326, align 2
  %8328 = and i16 %8327, %8325
  store i16 %8328, ptr %8326, align 2
  br label %8332

8329:                                             ; preds = %8315
  %8330 = add nuw nsw i32 %8316, 1
  %8331 = icmp eq i32 %8330, %8309
  br i1 %8331, label %8332, label %8315

8332:                                             ; preds = %8329, %8320, %8301
  %8333 = add nuw nsw i32 %8302, 1
  %8334 = load i16, ptr %8298, align 2
  %8335 = zext i16 %8334 to i32
  %8336 = icmp ult i32 %8333, %8335
  br i1 %8336, label %8301, label %8337

8337:                                             ; preds = %8332
  %8338 = load i16, ptr %8288, align 2
  br label %8339

8339:                                             ; preds = %8337, %8297, %8291
  %8340 = phi i16 [ %8338, %8337 ], [ %8292, %8297 ], [ %8292, %8291 ]
  %8341 = add nuw nsw i32 %8293, 1
  %8342 = zext i16 %8340 to i32
  %8343 = icmp ult i32 %8341, %8342
  br i1 %8343, label %8291, label %8344

8344:                                             ; preds = %8339, %8286
  %8345 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %8346 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %8347 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %8348 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %8349 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %8350 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %8351 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %8352 = load i32, ptr %5, align 4
  br label %8353

8353:                                             ; preds = %8344, %8102
  %8354 = phi i32 [ %8352, %8344 ], [ %8103, %8102 ]
  %8355 = add i32 %8354, -360000000
  %8356 = icmp ult i32 %8355, 200000000
  br i1 %8356, label %8357, label %8720

8357:                                             ; preds = %8353
  %8358 = load ptr, ptr %3, align 4
  %8359 = getelementptr inbounds %struct.mxl5005s_state, ptr %8358, i32 0, i32 18
  %8360 = load i16, ptr %8359, align 4
  %8361 = icmp eq i16 %8360, 0
  br i1 %8361, label %8417, label %8362

8362:                                             ; preds = %8410, %8357
  %8363 = phi i16 [ %8411, %8410 ], [ %8360, %8357 ]
  %8364 = phi i32 [ %8412, %8410 ], [ 0, %8357 ]
  %8365 = getelementptr %struct.mxl5005s_state, ptr %8358, i32 0, i32 19, i32 %8364
  %8366 = load i16, ptr %8365, align 2
  %8367 = icmp eq i16 %8366, 83
  br i1 %8367, label %8368, label %8410

8368:                                             ; preds = %8362
  %8369 = getelementptr %struct.mxl5005s_state, ptr %8358, i32 0, i32 19, i32 %8364, i32 1
  %8370 = load i16, ptr %8369, align 2
  %8371 = icmp eq i16 %8370, 0
  br i1 %8371, label %8410, label %8372

8372:                                             ; preds = %8403, %8368
  %8373 = phi i32 [ %8404, %8403 ], [ 0, %8368 ]
  %8374 = getelementptr %struct.mxl5005s_state, ptr %8358, i32 0, i32 19, i32 %8364, i32 4, i32 %8373
  store i16 0, ptr %8374, align 2
  %8375 = getelementptr %struct.mxl5005s_state, ptr %8358, i32 0, i32 19, i32 %8364, i32 3, i32 %8373
  %8376 = load i16, ptr %8375, align 2
  %8377 = load ptr, ptr %3, align 4
  %8378 = getelementptr inbounds %struct.mxl5005s_state, ptr %8377, i32 0, i32 24
  %8379 = load i16, ptr %8378, align 4
  %8380 = zext i16 %8379 to i32
  %8381 = icmp eq i16 %8379, 0
  br i1 %8381, label %8403, label %8382

8382:                                             ; preds = %8372
  %8383 = getelementptr %struct.mxl5005s_state, ptr %8358, i32 0, i32 19, i32 %8364, i32 2, i32 %8373
  %8384 = load i16, ptr %8383, align 2
  %8385 = and i16 %8384, 255
  br label %8386

8386:                                             ; preds = %8400, %8382
  %8387 = phi i32 [ 0, %8382 ], [ %8401, %8400 ]
  %8388 = getelementptr %struct.mxl5005s_state, ptr %8377, i32 0, i32 25, i32 %8387
  %8389 = load i16, ptr %8388, align 2
  %8390 = icmp eq i16 %8389, %8385
  br i1 %8390, label %8391, label %8400

8391:                                             ; preds = %8386
  %8392 = and i16 %8376, 255
  %8393 = zext i16 %8392 to i32
  %8394 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8393
  %8395 = load i8, ptr %8394, align 1
  %8396 = zext i8 %8395 to i16
  %8397 = getelementptr %struct.mxl5005s_state, ptr %8377, i32 0, i32 25, i32 %8387, i32 1
  %8398 = load i16, ptr %8397, align 2
  %8399 = and i16 %8398, %8396
  store i16 %8399, ptr %8397, align 2
  br label %8403

8400:                                             ; preds = %8386
  %8401 = add nuw nsw i32 %8387, 1
  %8402 = icmp eq i32 %8401, %8380
  br i1 %8402, label %8403, label %8386

8403:                                             ; preds = %8400, %8391, %8372
  %8404 = add nuw nsw i32 %8373, 1
  %8405 = load i16, ptr %8369, align 2
  %8406 = zext i16 %8405 to i32
  %8407 = icmp ult i32 %8404, %8406
  br i1 %8407, label %8372, label %8408

8408:                                             ; preds = %8403
  %8409 = load i16, ptr %8359, align 4
  br label %8410

8410:                                             ; preds = %8408, %8368, %8362
  %8411 = phi i16 [ %8409, %8408 ], [ %8363, %8368 ], [ %8363, %8362 ]
  %8412 = add nuw nsw i32 %8364, 1
  %8413 = zext i16 %8411 to i32
  %8414 = icmp ult i32 %8412, %8413
  br i1 %8414, label %8362, label %8415

8415:                                             ; preds = %8410
  %8416 = load ptr, ptr %3, align 4
  br label %8417

8417:                                             ; preds = %8415, %8357
  %8418 = phi ptr [ %8416, %8415 ], [ %8358, %8357 ]
  %8419 = getelementptr inbounds %struct.mxl5005s_state, ptr %8418, i32 0, i32 20
  %8420 = load i16, ptr %8419, align 2
  %8421 = icmp eq i16 %8420, 0
  br i1 %8421, label %8477, label %8422

8422:                                             ; preds = %8470, %8417
  %8423 = phi i16 [ %8471, %8470 ], [ %8420, %8417 ]
  %8424 = phi i32 [ %8472, %8470 ], [ 0, %8417 ]
  %8425 = getelementptr %struct.mxl5005s_state, ptr %8418, i32 0, i32 21, i32 %8424
  %8426 = load i16, ptr %8425, align 2
  %8427 = icmp eq i16 %8426, 83
  br i1 %8427, label %8428, label %8470

8428:                                             ; preds = %8422
  %8429 = getelementptr %struct.mxl5005s_state, ptr %8418, i32 0, i32 21, i32 %8424, i32 1
  %8430 = load i16, ptr %8429, align 2
  %8431 = icmp eq i16 %8430, 0
  br i1 %8431, label %8470, label %8432

8432:                                             ; preds = %8463, %8428
  %8433 = phi i32 [ %8464, %8463 ], [ 0, %8428 ]
  %8434 = getelementptr %struct.mxl5005s_state, ptr %8418, i32 0, i32 21, i32 %8424, i32 4, i32 %8433
  store i16 0, ptr %8434, align 2
  %8435 = getelementptr %struct.mxl5005s_state, ptr %8418, i32 0, i32 21, i32 %8424, i32 3, i32 %8433
  %8436 = load i16, ptr %8435, align 2
  %8437 = load ptr, ptr %3, align 4
  %8438 = getelementptr inbounds %struct.mxl5005s_state, ptr %8437, i32 0, i32 24
  %8439 = load i16, ptr %8438, align 4
  %8440 = zext i16 %8439 to i32
  %8441 = icmp eq i16 %8439, 0
  br i1 %8441, label %8463, label %8442

8442:                                             ; preds = %8432
  %8443 = getelementptr %struct.mxl5005s_state, ptr %8418, i32 0, i32 21, i32 %8424, i32 2, i32 %8433
  %8444 = load i16, ptr %8443, align 2
  %8445 = and i16 %8444, 255
  br label %8446

8446:                                             ; preds = %8460, %8442
  %8447 = phi i32 [ 0, %8442 ], [ %8461, %8460 ]
  %8448 = getelementptr %struct.mxl5005s_state, ptr %8437, i32 0, i32 25, i32 %8447
  %8449 = load i16, ptr %8448, align 2
  %8450 = icmp eq i16 %8449, %8445
  br i1 %8450, label %8451, label %8460

8451:                                             ; preds = %8446
  %8452 = and i16 %8436, 255
  %8453 = zext i16 %8452 to i32
  %8454 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8453
  %8455 = load i8, ptr %8454, align 1
  %8456 = zext i8 %8455 to i16
  %8457 = getelementptr %struct.mxl5005s_state, ptr %8437, i32 0, i32 25, i32 %8447, i32 1
  %8458 = load i16, ptr %8457, align 2
  %8459 = and i16 %8458, %8456
  store i16 %8459, ptr %8457, align 2
  br label %8463

8460:                                             ; preds = %8446
  %8461 = add nuw nsw i32 %8447, 1
  %8462 = icmp eq i32 %8461, %8440
  br i1 %8462, label %8463, label %8446

8463:                                             ; preds = %8460, %8451, %8432
  %8464 = add nuw nsw i32 %8433, 1
  %8465 = load i16, ptr %8429, align 2
  %8466 = zext i16 %8465 to i32
  %8467 = icmp ult i32 %8464, %8466
  br i1 %8467, label %8432, label %8468

8468:                                             ; preds = %8463
  %8469 = load i16, ptr %8419, align 2
  br label %8470

8470:                                             ; preds = %8468, %8428, %8422
  %8471 = phi i16 [ %8469, %8468 ], [ %8423, %8428 ], [ %8423, %8422 ]
  %8472 = add nuw nsw i32 %8424, 1
  %8473 = zext i16 %8471 to i32
  %8474 = icmp ult i32 %8472, %8473
  br i1 %8474, label %8422, label %8475

8475:                                             ; preds = %8470
  %8476 = load ptr, ptr %3, align 4
  br label %8477

8477:                                             ; preds = %8475, %8417
  %8478 = phi ptr [ %8476, %8475 ], [ %8418, %8417 ]
  %8479 = getelementptr inbounds %struct.mxl5005s_state, ptr %8478, i32 0, i32 18
  %8480 = load i16, ptr %8479, align 4
  %8481 = icmp eq i16 %8480, 0
  br i1 %8481, label %8537, label %8482

8482:                                             ; preds = %8530, %8477
  %8483 = phi i16 [ %8531, %8530 ], [ %8480, %8477 ]
  %8484 = phi i32 [ %8532, %8530 ], [ 0, %8477 ]
  %8485 = getelementptr %struct.mxl5005s_state, ptr %8478, i32 0, i32 19, i32 %8484
  %8486 = load i16, ptr %8485, align 2
  %8487 = icmp eq i16 %8486, 86
  br i1 %8487, label %8488, label %8530

8488:                                             ; preds = %8482
  %8489 = getelementptr %struct.mxl5005s_state, ptr %8478, i32 0, i32 19, i32 %8484, i32 1
  %8490 = load i16, ptr %8489, align 2
  %8491 = icmp eq i16 %8490, 0
  br i1 %8491, label %8530, label %8492

8492:                                             ; preds = %8523, %8488
  %8493 = phi i32 [ %8524, %8523 ], [ 0, %8488 ]
  %8494 = getelementptr %struct.mxl5005s_state, ptr %8478, i32 0, i32 19, i32 %8484, i32 4, i32 %8493
  store i16 0, ptr %8494, align 2
  %8495 = getelementptr %struct.mxl5005s_state, ptr %8478, i32 0, i32 19, i32 %8484, i32 3, i32 %8493
  %8496 = load i16, ptr %8495, align 2
  %8497 = load ptr, ptr %3, align 4
  %8498 = getelementptr inbounds %struct.mxl5005s_state, ptr %8497, i32 0, i32 24
  %8499 = load i16, ptr %8498, align 4
  %8500 = zext i16 %8499 to i32
  %8501 = icmp eq i16 %8499, 0
  br i1 %8501, label %8523, label %8502

8502:                                             ; preds = %8492
  %8503 = getelementptr %struct.mxl5005s_state, ptr %8478, i32 0, i32 19, i32 %8484, i32 2, i32 %8493
  %8504 = load i16, ptr %8503, align 2
  %8505 = and i16 %8504, 255
  br label %8506

8506:                                             ; preds = %8520, %8502
  %8507 = phi i32 [ 0, %8502 ], [ %8521, %8520 ]
  %8508 = getelementptr %struct.mxl5005s_state, ptr %8497, i32 0, i32 25, i32 %8507
  %8509 = load i16, ptr %8508, align 2
  %8510 = icmp eq i16 %8509, %8505
  br i1 %8510, label %8511, label %8520

8511:                                             ; preds = %8506
  %8512 = and i16 %8496, 255
  %8513 = zext i16 %8512 to i32
  %8514 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8513
  %8515 = load i8, ptr %8514, align 1
  %8516 = zext i8 %8515 to i16
  %8517 = getelementptr %struct.mxl5005s_state, ptr %8497, i32 0, i32 25, i32 %8507, i32 1
  %8518 = load i16, ptr %8517, align 2
  %8519 = and i16 %8518, %8516
  store i16 %8519, ptr %8517, align 2
  br label %8523

8520:                                             ; preds = %8506
  %8521 = add nuw nsw i32 %8507, 1
  %8522 = icmp eq i32 %8521, %8500
  br i1 %8522, label %8523, label %8506

8523:                                             ; preds = %8520, %8511, %8492
  %8524 = add nuw nsw i32 %8493, 1
  %8525 = load i16, ptr %8489, align 2
  %8526 = zext i16 %8525 to i32
  %8527 = icmp ult i32 %8524, %8526
  br i1 %8527, label %8492, label %8528

8528:                                             ; preds = %8523
  %8529 = load i16, ptr %8479, align 4
  br label %8530

8530:                                             ; preds = %8528, %8488, %8482
  %8531 = phi i16 [ %8529, %8528 ], [ %8483, %8488 ], [ %8483, %8482 ]
  %8532 = add nuw nsw i32 %8484, 1
  %8533 = zext i16 %8531 to i32
  %8534 = icmp ult i32 %8532, %8533
  br i1 %8534, label %8482, label %8535

8535:                                             ; preds = %8530
  %8536 = load ptr, ptr %3, align 4
  br label %8537

8537:                                             ; preds = %8535, %8477
  %8538 = phi ptr [ %8536, %8535 ], [ %8478, %8477 ]
  %8539 = getelementptr inbounds %struct.mxl5005s_state, ptr %8538, i32 0, i32 20
  %8540 = load i16, ptr %8539, align 2
  %8541 = icmp eq i16 %8540, 0
  br i1 %8541, label %8595, label %8542

8542:                                             ; preds = %8590, %8537
  %8543 = phi i16 [ %8591, %8590 ], [ %8540, %8537 ]
  %8544 = phi i32 [ %8592, %8590 ], [ 0, %8537 ]
  %8545 = getelementptr %struct.mxl5005s_state, ptr %8538, i32 0, i32 21, i32 %8544
  %8546 = load i16, ptr %8545, align 2
  %8547 = icmp eq i16 %8546, 86
  br i1 %8547, label %8548, label %8590

8548:                                             ; preds = %8542
  %8549 = getelementptr %struct.mxl5005s_state, ptr %8538, i32 0, i32 21, i32 %8544, i32 1
  %8550 = load i16, ptr %8549, align 2
  %8551 = icmp eq i16 %8550, 0
  br i1 %8551, label %8590, label %8552

8552:                                             ; preds = %8583, %8548
  %8553 = phi i32 [ %8584, %8583 ], [ 0, %8548 ]
  %8554 = getelementptr %struct.mxl5005s_state, ptr %8538, i32 0, i32 21, i32 %8544, i32 4, i32 %8553
  store i16 0, ptr %8554, align 2
  %8555 = getelementptr %struct.mxl5005s_state, ptr %8538, i32 0, i32 21, i32 %8544, i32 3, i32 %8553
  %8556 = load i16, ptr %8555, align 2
  %8557 = load ptr, ptr %3, align 4
  %8558 = getelementptr inbounds %struct.mxl5005s_state, ptr %8557, i32 0, i32 24
  %8559 = load i16, ptr %8558, align 4
  %8560 = zext i16 %8559 to i32
  %8561 = icmp eq i16 %8559, 0
  br i1 %8561, label %8583, label %8562

8562:                                             ; preds = %8552
  %8563 = getelementptr %struct.mxl5005s_state, ptr %8538, i32 0, i32 21, i32 %8544, i32 2, i32 %8553
  %8564 = load i16, ptr %8563, align 2
  %8565 = and i16 %8564, 255
  br label %8566

8566:                                             ; preds = %8580, %8562
  %8567 = phi i32 [ 0, %8562 ], [ %8581, %8580 ]
  %8568 = getelementptr %struct.mxl5005s_state, ptr %8557, i32 0, i32 25, i32 %8567
  %8569 = load i16, ptr %8568, align 2
  %8570 = icmp eq i16 %8569, %8565
  br i1 %8570, label %8571, label %8580

8571:                                             ; preds = %8566
  %8572 = and i16 %8556, 255
  %8573 = zext i16 %8572 to i32
  %8574 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8573
  %8575 = load i8, ptr %8574, align 1
  %8576 = zext i8 %8575 to i16
  %8577 = getelementptr %struct.mxl5005s_state, ptr %8557, i32 0, i32 25, i32 %8567, i32 1
  %8578 = load i16, ptr %8577, align 2
  %8579 = and i16 %8578, %8576
  store i16 %8579, ptr %8577, align 2
  br label %8583

8580:                                             ; preds = %8566
  %8581 = add nuw nsw i32 %8567, 1
  %8582 = icmp eq i32 %8581, %8560
  br i1 %8582, label %8583, label %8566

8583:                                             ; preds = %8580, %8571, %8552
  %8584 = add nuw nsw i32 %8553, 1
  %8585 = load i16, ptr %8549, align 2
  %8586 = zext i16 %8585 to i32
  %8587 = icmp ult i32 %8584, %8586
  br i1 %8587, label %8552, label %8588

8588:                                             ; preds = %8583
  %8589 = load i16, ptr %8539, align 2
  br label %8590

8590:                                             ; preds = %8588, %8548, %8542
  %8591 = phi i16 [ %8589, %8588 ], [ %8543, %8548 ], [ %8543, %8542 ]
  %8592 = add nuw nsw i32 %8544, 1
  %8593 = zext i16 %8591 to i32
  %8594 = icmp ult i32 %8592, %8593
  br i1 %8594, label %8542, label %8595

8595:                                             ; preds = %8590, %8537
  %8596 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %8597 = load ptr, ptr %3, align 4
  %8598 = getelementptr inbounds %struct.mxl5005s_state, ptr %8597, i32 0, i32 18
  %8599 = load i16, ptr %8598, align 4
  %8600 = icmp eq i16 %8599, 0
  br i1 %8600, label %8656, label %8601

8601:                                             ; preds = %8649, %8595
  %8602 = phi i16 [ %8650, %8649 ], [ %8599, %8595 ]
  %8603 = phi i32 [ %8651, %8649 ], [ 0, %8595 ]
  %8604 = getelementptr %struct.mxl5005s_state, ptr %8597, i32 0, i32 19, i32 %8603
  %8605 = load i16, ptr %8604, align 2
  %8606 = icmp eq i16 %8605, 82
  br i1 %8606, label %8607, label %8649

8607:                                             ; preds = %8601
  %8608 = getelementptr %struct.mxl5005s_state, ptr %8597, i32 0, i32 19, i32 %8603, i32 1
  %8609 = load i16, ptr %8608, align 2
  %8610 = icmp eq i16 %8609, 0
  br i1 %8610, label %8649, label %8611

8611:                                             ; preds = %8642, %8607
  %8612 = phi i32 [ %8643, %8642 ], [ 0, %8607 ]
  %8613 = getelementptr %struct.mxl5005s_state, ptr %8597, i32 0, i32 19, i32 %8603, i32 4, i32 %8612
  store i16 0, ptr %8613, align 2
  %8614 = getelementptr %struct.mxl5005s_state, ptr %8597, i32 0, i32 19, i32 %8603, i32 3, i32 %8612
  %8615 = load i16, ptr %8614, align 2
  %8616 = load ptr, ptr %3, align 4
  %8617 = getelementptr inbounds %struct.mxl5005s_state, ptr %8616, i32 0, i32 24
  %8618 = load i16, ptr %8617, align 4
  %8619 = zext i16 %8618 to i32
  %8620 = icmp eq i16 %8618, 0
  br i1 %8620, label %8642, label %8621

8621:                                             ; preds = %8611
  %8622 = getelementptr %struct.mxl5005s_state, ptr %8597, i32 0, i32 19, i32 %8603, i32 2, i32 %8612
  %8623 = load i16, ptr %8622, align 2
  %8624 = and i16 %8623, 255
  br label %8625

8625:                                             ; preds = %8639, %8621
  %8626 = phi i32 [ 0, %8621 ], [ %8640, %8639 ]
  %8627 = getelementptr %struct.mxl5005s_state, ptr %8616, i32 0, i32 25, i32 %8626
  %8628 = load i16, ptr %8627, align 2
  %8629 = icmp eq i16 %8628, %8624
  br i1 %8629, label %8630, label %8639

8630:                                             ; preds = %8625
  %8631 = and i16 %8615, 255
  %8632 = zext i16 %8631 to i32
  %8633 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8632
  %8634 = load i8, ptr %8633, align 1
  %8635 = zext i8 %8634 to i16
  %8636 = getelementptr %struct.mxl5005s_state, ptr %8616, i32 0, i32 25, i32 %8626, i32 1
  %8637 = load i16, ptr %8636, align 2
  %8638 = and i16 %8637, %8635
  store i16 %8638, ptr %8636, align 2
  br label %8642

8639:                                             ; preds = %8625
  %8640 = add nuw nsw i32 %8626, 1
  %8641 = icmp eq i32 %8640, %8619
  br i1 %8641, label %8642, label %8625

8642:                                             ; preds = %8639, %8630, %8611
  %8643 = add nuw nsw i32 %8612, 1
  %8644 = load i16, ptr %8608, align 2
  %8645 = zext i16 %8644 to i32
  %8646 = icmp ult i32 %8643, %8645
  br i1 %8646, label %8611, label %8647

8647:                                             ; preds = %8642
  %8648 = load i16, ptr %8598, align 4
  br label %8649

8649:                                             ; preds = %8647, %8607, %8601
  %8650 = phi i16 [ %8648, %8647 ], [ %8602, %8607 ], [ %8602, %8601 ]
  %8651 = add nuw nsw i32 %8603, 1
  %8652 = zext i16 %8650 to i32
  %8653 = icmp ult i32 %8651, %8652
  br i1 %8653, label %8601, label %8654

8654:                                             ; preds = %8649
  %8655 = load ptr, ptr %3, align 4
  br label %8656

8656:                                             ; preds = %8654, %8595
  %8657 = phi ptr [ %8655, %8654 ], [ %8597, %8595 ]
  %8658 = getelementptr inbounds %struct.mxl5005s_state, ptr %8657, i32 0, i32 20
  %8659 = load i16, ptr %8658, align 2
  %8660 = icmp eq i16 %8659, 0
  br i1 %8660, label %8714, label %8661

8661:                                             ; preds = %8709, %8656
  %8662 = phi i16 [ %8710, %8709 ], [ %8659, %8656 ]
  %8663 = phi i32 [ %8711, %8709 ], [ 0, %8656 ]
  %8664 = getelementptr %struct.mxl5005s_state, ptr %8657, i32 0, i32 21, i32 %8663
  %8665 = load i16, ptr %8664, align 2
  %8666 = icmp eq i16 %8665, 82
  br i1 %8666, label %8667, label %8709

8667:                                             ; preds = %8661
  %8668 = getelementptr %struct.mxl5005s_state, ptr %8657, i32 0, i32 21, i32 %8663, i32 1
  %8669 = load i16, ptr %8668, align 2
  %8670 = icmp eq i16 %8669, 0
  br i1 %8670, label %8709, label %8671

8671:                                             ; preds = %8702, %8667
  %8672 = phi i32 [ %8703, %8702 ], [ 0, %8667 ]
  %8673 = getelementptr %struct.mxl5005s_state, ptr %8657, i32 0, i32 21, i32 %8663, i32 4, i32 %8672
  store i16 0, ptr %8673, align 2
  %8674 = getelementptr %struct.mxl5005s_state, ptr %8657, i32 0, i32 21, i32 %8663, i32 3, i32 %8672
  %8675 = load i16, ptr %8674, align 2
  %8676 = load ptr, ptr %3, align 4
  %8677 = getelementptr inbounds %struct.mxl5005s_state, ptr %8676, i32 0, i32 24
  %8678 = load i16, ptr %8677, align 4
  %8679 = zext i16 %8678 to i32
  %8680 = icmp eq i16 %8678, 0
  br i1 %8680, label %8702, label %8681

8681:                                             ; preds = %8671
  %8682 = getelementptr %struct.mxl5005s_state, ptr %8657, i32 0, i32 21, i32 %8663, i32 2, i32 %8672
  %8683 = load i16, ptr %8682, align 2
  %8684 = and i16 %8683, 255
  br label %8685

8685:                                             ; preds = %8699, %8681
  %8686 = phi i32 [ 0, %8681 ], [ %8700, %8699 ]
  %8687 = getelementptr %struct.mxl5005s_state, ptr %8676, i32 0, i32 25, i32 %8686
  %8688 = load i16, ptr %8687, align 2
  %8689 = icmp eq i16 %8688, %8684
  br i1 %8689, label %8690, label %8699

8690:                                             ; preds = %8685
  %8691 = and i16 %8675, 255
  %8692 = zext i16 %8691 to i32
  %8693 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8692
  %8694 = load i8, ptr %8693, align 1
  %8695 = zext i8 %8694 to i16
  %8696 = getelementptr %struct.mxl5005s_state, ptr %8676, i32 0, i32 25, i32 %8686, i32 1
  %8697 = load i16, ptr %8696, align 2
  %8698 = and i16 %8697, %8695
  store i16 %8698, ptr %8696, align 2
  br label %8702

8699:                                             ; preds = %8685
  %8700 = add nuw nsw i32 %8686, 1
  %8701 = icmp eq i32 %8700, %8679
  br i1 %8701, label %8702, label %8685

8702:                                             ; preds = %8699, %8690, %8671
  %8703 = add nuw nsw i32 %8672, 1
  %8704 = load i16, ptr %8668, align 2
  %8705 = zext i16 %8704 to i32
  %8706 = icmp ult i32 %8703, %8705
  br i1 %8706, label %8671, label %8707

8707:                                             ; preds = %8702
  %8708 = load i16, ptr %8658, align 2
  br label %8709

8709:                                             ; preds = %8707, %8667, %8661
  %8710 = phi i16 [ %8708, %8707 ], [ %8662, %8667 ], [ %8662, %8661 ]
  %8711 = add nuw nsw i32 %8663, 1
  %8712 = zext i16 %8710 to i32
  %8713 = icmp ult i32 %8711, %8712
  br i1 %8713, label %8661, label %8714

8714:                                             ; preds = %8709, %8656
  %8715 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %8716 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %8717 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %8718 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %8719 = load i32, ptr %5, align 4
  br label %8720

8720:                                             ; preds = %8714, %8353
  %8721 = phi i32 [ %8719, %8714 ], [ %8354, %8353 ]
  %8722 = add i32 %8721, -560000000
  %8723 = icmp ult i32 %8722, 20000000
  br i1 %8723, label %8724, label %8853

8724:                                             ; preds = %8720
  %8725 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %8726 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %8727 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 86, i32 noundef 29, i16 noundef zeroext 1) #12
  %8728 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 86, i32 noundef 29, i16 noundef zeroext 2) #12
  %8729 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %8730 = load ptr, ptr %3, align 4
  %8731 = getelementptr inbounds %struct.mxl5005s_state, ptr %8730, i32 0, i32 18
  %8732 = load i16, ptr %8731, align 4
  %8733 = icmp eq i16 %8732, 0
  br i1 %8733, label %8789, label %8734

8734:                                             ; preds = %8782, %8724
  %8735 = phi i16 [ %8783, %8782 ], [ %8732, %8724 ]
  %8736 = phi i32 [ %8784, %8782 ], [ 0, %8724 ]
  %8737 = getelementptr %struct.mxl5005s_state, ptr %8730, i32 0, i32 19, i32 %8736
  %8738 = load i16, ptr %8737, align 2
  %8739 = icmp eq i16 %8738, 82
  br i1 %8739, label %8740, label %8782

8740:                                             ; preds = %8734
  %8741 = getelementptr %struct.mxl5005s_state, ptr %8730, i32 0, i32 19, i32 %8736, i32 1
  %8742 = load i16, ptr %8741, align 2
  %8743 = icmp eq i16 %8742, 0
  br i1 %8743, label %8782, label %8744

8744:                                             ; preds = %8775, %8740
  %8745 = phi i32 [ %8776, %8775 ], [ 0, %8740 ]
  %8746 = getelementptr %struct.mxl5005s_state, ptr %8730, i32 0, i32 19, i32 %8736, i32 4, i32 %8745
  store i16 0, ptr %8746, align 2
  %8747 = getelementptr %struct.mxl5005s_state, ptr %8730, i32 0, i32 19, i32 %8736, i32 3, i32 %8745
  %8748 = load i16, ptr %8747, align 2
  %8749 = load ptr, ptr %3, align 4
  %8750 = getelementptr inbounds %struct.mxl5005s_state, ptr %8749, i32 0, i32 24
  %8751 = load i16, ptr %8750, align 4
  %8752 = zext i16 %8751 to i32
  %8753 = icmp eq i16 %8751, 0
  br i1 %8753, label %8775, label %8754

8754:                                             ; preds = %8744
  %8755 = getelementptr %struct.mxl5005s_state, ptr %8730, i32 0, i32 19, i32 %8736, i32 2, i32 %8745
  %8756 = load i16, ptr %8755, align 2
  %8757 = and i16 %8756, 255
  br label %8758

8758:                                             ; preds = %8772, %8754
  %8759 = phi i32 [ 0, %8754 ], [ %8773, %8772 ]
  %8760 = getelementptr %struct.mxl5005s_state, ptr %8749, i32 0, i32 25, i32 %8759
  %8761 = load i16, ptr %8760, align 2
  %8762 = icmp eq i16 %8761, %8757
  br i1 %8762, label %8763, label %8772

8763:                                             ; preds = %8758
  %8764 = and i16 %8748, 255
  %8765 = zext i16 %8764 to i32
  %8766 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8765
  %8767 = load i8, ptr %8766, align 1
  %8768 = zext i8 %8767 to i16
  %8769 = getelementptr %struct.mxl5005s_state, ptr %8749, i32 0, i32 25, i32 %8759, i32 1
  %8770 = load i16, ptr %8769, align 2
  %8771 = and i16 %8770, %8768
  store i16 %8771, ptr %8769, align 2
  br label %8775

8772:                                             ; preds = %8758
  %8773 = add nuw nsw i32 %8759, 1
  %8774 = icmp eq i32 %8773, %8752
  br i1 %8774, label %8775, label %8758

8775:                                             ; preds = %8772, %8763, %8744
  %8776 = add nuw nsw i32 %8745, 1
  %8777 = load i16, ptr %8741, align 2
  %8778 = zext i16 %8777 to i32
  %8779 = icmp ult i32 %8776, %8778
  br i1 %8779, label %8744, label %8780

8780:                                             ; preds = %8775
  %8781 = load i16, ptr %8731, align 4
  br label %8782

8782:                                             ; preds = %8780, %8740, %8734
  %8783 = phi i16 [ %8781, %8780 ], [ %8735, %8740 ], [ %8735, %8734 ]
  %8784 = add nuw nsw i32 %8736, 1
  %8785 = zext i16 %8783 to i32
  %8786 = icmp ult i32 %8784, %8785
  br i1 %8786, label %8734, label %8787

8787:                                             ; preds = %8782
  %8788 = load ptr, ptr %3, align 4
  br label %8789

8789:                                             ; preds = %8787, %8724
  %8790 = phi ptr [ %8788, %8787 ], [ %8730, %8724 ]
  %8791 = getelementptr inbounds %struct.mxl5005s_state, ptr %8790, i32 0, i32 20
  %8792 = load i16, ptr %8791, align 2
  %8793 = icmp eq i16 %8792, 0
  br i1 %8793, label %8847, label %8794

8794:                                             ; preds = %8842, %8789
  %8795 = phi i16 [ %8843, %8842 ], [ %8792, %8789 ]
  %8796 = phi i32 [ %8844, %8842 ], [ 0, %8789 ]
  %8797 = getelementptr %struct.mxl5005s_state, ptr %8790, i32 0, i32 21, i32 %8796
  %8798 = load i16, ptr %8797, align 2
  %8799 = icmp eq i16 %8798, 82
  br i1 %8799, label %8800, label %8842

8800:                                             ; preds = %8794
  %8801 = getelementptr %struct.mxl5005s_state, ptr %8790, i32 0, i32 21, i32 %8796, i32 1
  %8802 = load i16, ptr %8801, align 2
  %8803 = icmp eq i16 %8802, 0
  br i1 %8803, label %8842, label %8804

8804:                                             ; preds = %8835, %8800
  %8805 = phi i32 [ %8836, %8835 ], [ 0, %8800 ]
  %8806 = getelementptr %struct.mxl5005s_state, ptr %8790, i32 0, i32 21, i32 %8796, i32 4, i32 %8805
  store i16 0, ptr %8806, align 2
  %8807 = getelementptr %struct.mxl5005s_state, ptr %8790, i32 0, i32 21, i32 %8796, i32 3, i32 %8805
  %8808 = load i16, ptr %8807, align 2
  %8809 = load ptr, ptr %3, align 4
  %8810 = getelementptr inbounds %struct.mxl5005s_state, ptr %8809, i32 0, i32 24
  %8811 = load i16, ptr %8810, align 4
  %8812 = zext i16 %8811 to i32
  %8813 = icmp eq i16 %8811, 0
  br i1 %8813, label %8835, label %8814

8814:                                             ; preds = %8804
  %8815 = getelementptr %struct.mxl5005s_state, ptr %8790, i32 0, i32 21, i32 %8796, i32 2, i32 %8805
  %8816 = load i16, ptr %8815, align 2
  %8817 = and i16 %8816, 255
  br label %8818

8818:                                             ; preds = %8832, %8814
  %8819 = phi i32 [ 0, %8814 ], [ %8833, %8832 ]
  %8820 = getelementptr %struct.mxl5005s_state, ptr %8809, i32 0, i32 25, i32 %8819
  %8821 = load i16, ptr %8820, align 2
  %8822 = icmp eq i16 %8821, %8817
  br i1 %8822, label %8823, label %8832

8823:                                             ; preds = %8818
  %8824 = and i16 %8808, 255
  %8825 = zext i16 %8824 to i32
  %8826 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8825
  %8827 = load i8, ptr %8826, align 1
  %8828 = zext i8 %8827 to i16
  %8829 = getelementptr %struct.mxl5005s_state, ptr %8809, i32 0, i32 25, i32 %8819, i32 1
  %8830 = load i16, ptr %8829, align 2
  %8831 = and i16 %8830, %8828
  store i16 %8831, ptr %8829, align 2
  br label %8835

8832:                                             ; preds = %8818
  %8833 = add nuw nsw i32 %8819, 1
  %8834 = icmp eq i32 %8833, %8812
  br i1 %8834, label %8835, label %8818

8835:                                             ; preds = %8832, %8823, %8804
  %8836 = add nuw nsw i32 %8805, 1
  %8837 = load i16, ptr %8801, align 2
  %8838 = zext i16 %8837 to i32
  %8839 = icmp ult i32 %8836, %8838
  br i1 %8839, label %8804, label %8840

8840:                                             ; preds = %8835
  %8841 = load i16, ptr %8791, align 2
  br label %8842

8842:                                             ; preds = %8840, %8800, %8794
  %8843 = phi i16 [ %8841, %8840 ], [ %8795, %8800 ], [ %8795, %8794 ]
  %8844 = add nuw nsw i32 %8796, 1
  %8845 = zext i16 %8843 to i32
  %8846 = icmp ult i32 %8844, %8845
  br i1 %8846, label %8794, label %8847

8847:                                             ; preds = %8842, %8789
  %8848 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %8849 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %8850 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %8851 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %8852 = load i32, ptr %5, align 4
  br label %8853

8853:                                             ; preds = %8847, %8720
  %8854 = phi i32 [ %8852, %8847 ], [ %8721, %8720 ]
  %8855 = add i32 %8854, -580000000
  %8856 = icmp ult i32 %8855, 50000000
  br i1 %8856, label %8857, label %9102

8857:                                             ; preds = %8853
  %8858 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %8859 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %8860 = load ptr, ptr %3, align 4
  %8861 = getelementptr inbounds %struct.mxl5005s_state, ptr %8860, i32 0, i32 18
  %8862 = load i16, ptr %8861, align 4
  %8863 = icmp eq i16 %8862, 0
  br i1 %8863, label %8919, label %8864

8864:                                             ; preds = %8912, %8857
  %8865 = phi i16 [ %8913, %8912 ], [ %8862, %8857 ]
  %8866 = phi i32 [ %8914, %8912 ], [ 0, %8857 ]
  %8867 = getelementptr %struct.mxl5005s_state, ptr %8860, i32 0, i32 19, i32 %8866
  %8868 = load i16, ptr %8867, align 2
  %8869 = icmp eq i16 %8868, 86
  br i1 %8869, label %8870, label %8912

8870:                                             ; preds = %8864
  %8871 = getelementptr %struct.mxl5005s_state, ptr %8860, i32 0, i32 19, i32 %8866, i32 1
  %8872 = load i16, ptr %8871, align 2
  %8873 = icmp eq i16 %8872, 0
  br i1 %8873, label %8912, label %8874

8874:                                             ; preds = %8905, %8870
  %8875 = phi i32 [ %8906, %8905 ], [ 0, %8870 ]
  %8876 = getelementptr %struct.mxl5005s_state, ptr %8860, i32 0, i32 19, i32 %8866, i32 4, i32 %8875
  store i16 0, ptr %8876, align 2
  %8877 = getelementptr %struct.mxl5005s_state, ptr %8860, i32 0, i32 19, i32 %8866, i32 3, i32 %8875
  %8878 = load i16, ptr %8877, align 2
  %8879 = load ptr, ptr %3, align 4
  %8880 = getelementptr inbounds %struct.mxl5005s_state, ptr %8879, i32 0, i32 24
  %8881 = load i16, ptr %8880, align 4
  %8882 = zext i16 %8881 to i32
  %8883 = icmp eq i16 %8881, 0
  br i1 %8883, label %8905, label %8884

8884:                                             ; preds = %8874
  %8885 = getelementptr %struct.mxl5005s_state, ptr %8860, i32 0, i32 19, i32 %8866, i32 2, i32 %8875
  %8886 = load i16, ptr %8885, align 2
  %8887 = and i16 %8886, 255
  br label %8888

8888:                                             ; preds = %8902, %8884
  %8889 = phi i32 [ 0, %8884 ], [ %8903, %8902 ]
  %8890 = getelementptr %struct.mxl5005s_state, ptr %8879, i32 0, i32 25, i32 %8889
  %8891 = load i16, ptr %8890, align 2
  %8892 = icmp eq i16 %8891, %8887
  br i1 %8892, label %8893, label %8902

8893:                                             ; preds = %8888
  %8894 = and i16 %8878, 255
  %8895 = zext i16 %8894 to i32
  %8896 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8895
  %8897 = load i8, ptr %8896, align 1
  %8898 = zext i8 %8897 to i16
  %8899 = getelementptr %struct.mxl5005s_state, ptr %8879, i32 0, i32 25, i32 %8889, i32 1
  %8900 = load i16, ptr %8899, align 2
  %8901 = and i16 %8900, %8898
  store i16 %8901, ptr %8899, align 2
  br label %8905

8902:                                             ; preds = %8888
  %8903 = add nuw nsw i32 %8889, 1
  %8904 = icmp eq i32 %8903, %8882
  br i1 %8904, label %8905, label %8888

8905:                                             ; preds = %8902, %8893, %8874
  %8906 = add nuw nsw i32 %8875, 1
  %8907 = load i16, ptr %8871, align 2
  %8908 = zext i16 %8907 to i32
  %8909 = icmp ult i32 %8906, %8908
  br i1 %8909, label %8874, label %8910

8910:                                             ; preds = %8905
  %8911 = load i16, ptr %8861, align 4
  br label %8912

8912:                                             ; preds = %8910, %8870, %8864
  %8913 = phi i16 [ %8911, %8910 ], [ %8865, %8870 ], [ %8865, %8864 ]
  %8914 = add nuw nsw i32 %8866, 1
  %8915 = zext i16 %8913 to i32
  %8916 = icmp ult i32 %8914, %8915
  br i1 %8916, label %8864, label %8917

8917:                                             ; preds = %8912
  %8918 = load ptr, ptr %3, align 4
  br label %8919

8919:                                             ; preds = %8917, %8857
  %8920 = phi ptr [ %8918, %8917 ], [ %8860, %8857 ]
  %8921 = getelementptr inbounds %struct.mxl5005s_state, ptr %8920, i32 0, i32 20
  %8922 = load i16, ptr %8921, align 2
  %8923 = icmp eq i16 %8922, 0
  br i1 %8923, label %8977, label %8924

8924:                                             ; preds = %8972, %8919
  %8925 = phi i16 [ %8973, %8972 ], [ %8922, %8919 ]
  %8926 = phi i32 [ %8974, %8972 ], [ 0, %8919 ]
  %8927 = getelementptr %struct.mxl5005s_state, ptr %8920, i32 0, i32 21, i32 %8926
  %8928 = load i16, ptr %8927, align 2
  %8929 = icmp eq i16 %8928, 86
  br i1 %8929, label %8930, label %8972

8930:                                             ; preds = %8924
  %8931 = getelementptr %struct.mxl5005s_state, ptr %8920, i32 0, i32 21, i32 %8926, i32 1
  %8932 = load i16, ptr %8931, align 2
  %8933 = icmp eq i16 %8932, 0
  br i1 %8933, label %8972, label %8934

8934:                                             ; preds = %8965, %8930
  %8935 = phi i32 [ %8966, %8965 ], [ 0, %8930 ]
  %8936 = getelementptr %struct.mxl5005s_state, ptr %8920, i32 0, i32 21, i32 %8926, i32 4, i32 %8935
  store i16 0, ptr %8936, align 2
  %8937 = getelementptr %struct.mxl5005s_state, ptr %8920, i32 0, i32 21, i32 %8926, i32 3, i32 %8935
  %8938 = load i16, ptr %8937, align 2
  %8939 = load ptr, ptr %3, align 4
  %8940 = getelementptr inbounds %struct.mxl5005s_state, ptr %8939, i32 0, i32 24
  %8941 = load i16, ptr %8940, align 4
  %8942 = zext i16 %8941 to i32
  %8943 = icmp eq i16 %8941, 0
  br i1 %8943, label %8965, label %8944

8944:                                             ; preds = %8934
  %8945 = getelementptr %struct.mxl5005s_state, ptr %8920, i32 0, i32 21, i32 %8926, i32 2, i32 %8935
  %8946 = load i16, ptr %8945, align 2
  %8947 = and i16 %8946, 255
  br label %8948

8948:                                             ; preds = %8962, %8944
  %8949 = phi i32 [ 0, %8944 ], [ %8963, %8962 ]
  %8950 = getelementptr %struct.mxl5005s_state, ptr %8939, i32 0, i32 25, i32 %8949
  %8951 = load i16, ptr %8950, align 2
  %8952 = icmp eq i16 %8951, %8947
  br i1 %8952, label %8953, label %8962

8953:                                             ; preds = %8948
  %8954 = and i16 %8938, 255
  %8955 = zext i16 %8954 to i32
  %8956 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %8955
  %8957 = load i8, ptr %8956, align 1
  %8958 = zext i8 %8957 to i16
  %8959 = getelementptr %struct.mxl5005s_state, ptr %8939, i32 0, i32 25, i32 %8949, i32 1
  %8960 = load i16, ptr %8959, align 2
  %8961 = and i16 %8960, %8958
  store i16 %8961, ptr %8959, align 2
  br label %8965

8962:                                             ; preds = %8948
  %8963 = add nuw nsw i32 %8949, 1
  %8964 = icmp eq i32 %8963, %8942
  br i1 %8964, label %8965, label %8948

8965:                                             ; preds = %8962, %8953, %8934
  %8966 = add nuw nsw i32 %8935, 1
  %8967 = load i16, ptr %8931, align 2
  %8968 = zext i16 %8967 to i32
  %8969 = icmp ult i32 %8966, %8968
  br i1 %8969, label %8934, label %8970

8970:                                             ; preds = %8965
  %8971 = load i16, ptr %8921, align 2
  br label %8972

8972:                                             ; preds = %8970, %8930, %8924
  %8973 = phi i16 [ %8971, %8970 ], [ %8925, %8930 ], [ %8925, %8924 ]
  %8974 = add nuw nsw i32 %8926, 1
  %8975 = zext i16 %8973 to i32
  %8976 = icmp ult i32 %8974, %8975
  br i1 %8976, label %8924, label %8977

8977:                                             ; preds = %8972, %8919
  %8978 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %8979 = load ptr, ptr %3, align 4
  %8980 = getelementptr inbounds %struct.mxl5005s_state, ptr %8979, i32 0, i32 18
  %8981 = load i16, ptr %8980, align 4
  %8982 = icmp eq i16 %8981, 0
  br i1 %8982, label %9038, label %8983

8983:                                             ; preds = %9031, %8977
  %8984 = phi i16 [ %9032, %9031 ], [ %8981, %8977 ]
  %8985 = phi i32 [ %9033, %9031 ], [ 0, %8977 ]
  %8986 = getelementptr %struct.mxl5005s_state, ptr %8979, i32 0, i32 19, i32 %8985
  %8987 = load i16, ptr %8986, align 2
  %8988 = icmp eq i16 %8987, 82
  br i1 %8988, label %8989, label %9031

8989:                                             ; preds = %8983
  %8990 = getelementptr %struct.mxl5005s_state, ptr %8979, i32 0, i32 19, i32 %8985, i32 1
  %8991 = load i16, ptr %8990, align 2
  %8992 = icmp eq i16 %8991, 0
  br i1 %8992, label %9031, label %8993

8993:                                             ; preds = %9024, %8989
  %8994 = phi i32 [ %9025, %9024 ], [ 0, %8989 ]
  %8995 = getelementptr %struct.mxl5005s_state, ptr %8979, i32 0, i32 19, i32 %8985, i32 4, i32 %8994
  store i16 0, ptr %8995, align 2
  %8996 = getelementptr %struct.mxl5005s_state, ptr %8979, i32 0, i32 19, i32 %8985, i32 3, i32 %8994
  %8997 = load i16, ptr %8996, align 2
  %8998 = load ptr, ptr %3, align 4
  %8999 = getelementptr inbounds %struct.mxl5005s_state, ptr %8998, i32 0, i32 24
  %9000 = load i16, ptr %8999, align 4
  %9001 = zext i16 %9000 to i32
  %9002 = icmp eq i16 %9000, 0
  br i1 %9002, label %9024, label %9003

9003:                                             ; preds = %8993
  %9004 = getelementptr %struct.mxl5005s_state, ptr %8979, i32 0, i32 19, i32 %8985, i32 2, i32 %8994
  %9005 = load i16, ptr %9004, align 2
  %9006 = and i16 %9005, 255
  br label %9007

9007:                                             ; preds = %9021, %9003
  %9008 = phi i32 [ 0, %9003 ], [ %9022, %9021 ]
  %9009 = getelementptr %struct.mxl5005s_state, ptr %8998, i32 0, i32 25, i32 %9008
  %9010 = load i16, ptr %9009, align 2
  %9011 = icmp eq i16 %9010, %9006
  br i1 %9011, label %9012, label %9021

9012:                                             ; preds = %9007
  %9013 = and i16 %8997, 255
  %9014 = zext i16 %9013 to i32
  %9015 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9014
  %9016 = load i8, ptr %9015, align 1
  %9017 = zext i8 %9016 to i16
  %9018 = getelementptr %struct.mxl5005s_state, ptr %8998, i32 0, i32 25, i32 %9008, i32 1
  %9019 = load i16, ptr %9018, align 2
  %9020 = and i16 %9019, %9017
  store i16 %9020, ptr %9018, align 2
  br label %9024

9021:                                             ; preds = %9007
  %9022 = add nuw nsw i32 %9008, 1
  %9023 = icmp eq i32 %9022, %9001
  br i1 %9023, label %9024, label %9007

9024:                                             ; preds = %9021, %9012, %8993
  %9025 = add nuw nsw i32 %8994, 1
  %9026 = load i16, ptr %8990, align 2
  %9027 = zext i16 %9026 to i32
  %9028 = icmp ult i32 %9025, %9027
  br i1 %9028, label %8993, label %9029

9029:                                             ; preds = %9024
  %9030 = load i16, ptr %8980, align 4
  br label %9031

9031:                                             ; preds = %9029, %8989, %8983
  %9032 = phi i16 [ %9030, %9029 ], [ %8984, %8989 ], [ %8984, %8983 ]
  %9033 = add nuw nsw i32 %8985, 1
  %9034 = zext i16 %9032 to i32
  %9035 = icmp ult i32 %9033, %9034
  br i1 %9035, label %8983, label %9036

9036:                                             ; preds = %9031
  %9037 = load ptr, ptr %3, align 4
  br label %9038

9038:                                             ; preds = %9036, %8977
  %9039 = phi ptr [ %9037, %9036 ], [ %8979, %8977 ]
  %9040 = getelementptr inbounds %struct.mxl5005s_state, ptr %9039, i32 0, i32 20
  %9041 = load i16, ptr %9040, align 2
  %9042 = icmp eq i16 %9041, 0
  br i1 %9042, label %9096, label %9043

9043:                                             ; preds = %9091, %9038
  %9044 = phi i16 [ %9092, %9091 ], [ %9041, %9038 ]
  %9045 = phi i32 [ %9093, %9091 ], [ 0, %9038 ]
  %9046 = getelementptr %struct.mxl5005s_state, ptr %9039, i32 0, i32 21, i32 %9045
  %9047 = load i16, ptr %9046, align 2
  %9048 = icmp eq i16 %9047, 82
  br i1 %9048, label %9049, label %9091

9049:                                             ; preds = %9043
  %9050 = getelementptr %struct.mxl5005s_state, ptr %9039, i32 0, i32 21, i32 %9045, i32 1
  %9051 = load i16, ptr %9050, align 2
  %9052 = icmp eq i16 %9051, 0
  br i1 %9052, label %9091, label %9053

9053:                                             ; preds = %9084, %9049
  %9054 = phi i32 [ %9085, %9084 ], [ 0, %9049 ]
  %9055 = getelementptr %struct.mxl5005s_state, ptr %9039, i32 0, i32 21, i32 %9045, i32 4, i32 %9054
  store i16 0, ptr %9055, align 2
  %9056 = getelementptr %struct.mxl5005s_state, ptr %9039, i32 0, i32 21, i32 %9045, i32 3, i32 %9054
  %9057 = load i16, ptr %9056, align 2
  %9058 = load ptr, ptr %3, align 4
  %9059 = getelementptr inbounds %struct.mxl5005s_state, ptr %9058, i32 0, i32 24
  %9060 = load i16, ptr %9059, align 4
  %9061 = zext i16 %9060 to i32
  %9062 = icmp eq i16 %9060, 0
  br i1 %9062, label %9084, label %9063

9063:                                             ; preds = %9053
  %9064 = getelementptr %struct.mxl5005s_state, ptr %9039, i32 0, i32 21, i32 %9045, i32 2, i32 %9054
  %9065 = load i16, ptr %9064, align 2
  %9066 = and i16 %9065, 255
  br label %9067

9067:                                             ; preds = %9081, %9063
  %9068 = phi i32 [ 0, %9063 ], [ %9082, %9081 ]
  %9069 = getelementptr %struct.mxl5005s_state, ptr %9058, i32 0, i32 25, i32 %9068
  %9070 = load i16, ptr %9069, align 2
  %9071 = icmp eq i16 %9070, %9066
  br i1 %9071, label %9072, label %9081

9072:                                             ; preds = %9067
  %9073 = and i16 %9057, 255
  %9074 = zext i16 %9073 to i32
  %9075 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9074
  %9076 = load i8, ptr %9075, align 1
  %9077 = zext i8 %9076 to i16
  %9078 = getelementptr %struct.mxl5005s_state, ptr %9058, i32 0, i32 25, i32 %9068, i32 1
  %9079 = load i16, ptr %9078, align 2
  %9080 = and i16 %9079, %9077
  store i16 %9080, ptr %9078, align 2
  br label %9084

9081:                                             ; preds = %9067
  %9082 = add nuw nsw i32 %9068, 1
  %9083 = icmp eq i32 %9082, %9061
  br i1 %9083, label %9084, label %9067

9084:                                             ; preds = %9081, %9072, %9053
  %9085 = add nuw nsw i32 %9054, 1
  %9086 = load i16, ptr %9050, align 2
  %9087 = zext i16 %9086 to i32
  %9088 = icmp ult i32 %9085, %9087
  br i1 %9088, label %9053, label %9089

9089:                                             ; preds = %9084
  %9090 = load i16, ptr %9040, align 2
  br label %9091

9091:                                             ; preds = %9089, %9049, %9043
  %9092 = phi i16 [ %9090, %9089 ], [ %9044, %9049 ], [ %9044, %9043 ]
  %9093 = add nuw nsw i32 %9045, 1
  %9094 = zext i16 %9092 to i32
  %9095 = icmp ult i32 %9093, %9094
  br i1 %9095, label %9043, label %9096

9096:                                             ; preds = %9091, %9038
  %9097 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %9098 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %9099 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %9100 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %9101 = load i32, ptr %5, align 4
  br label %9102

9102:                                             ; preds = %9096, %8853
  %9103 = phi i32 [ %9101, %9096 ], [ %8854, %8853 ]
  %9104 = add i32 %9103, -630000000
  %9105 = icmp ult i32 %9104, 70000000
  br i1 %9105, label %9106, label %9232

9106:                                             ; preds = %9102
  %9107 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %9108 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %9109 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 86, i32 noundef 16, i16 noundef zeroext 1) #12
  %9110 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 86, i32 noundef 16, i16 noundef zeroext 2) #12
  %9111 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %9112 = load ptr, ptr %3, align 4
  %9113 = getelementptr inbounds %struct.mxl5005s_state, ptr %9112, i32 0, i32 18
  %9114 = load i16, ptr %9113, align 4
  %9115 = icmp eq i16 %9114, 0
  br i1 %9115, label %9171, label %9116

9116:                                             ; preds = %9164, %9106
  %9117 = phi i16 [ %9165, %9164 ], [ %9114, %9106 ]
  %9118 = phi i32 [ %9166, %9164 ], [ 0, %9106 ]
  %9119 = getelementptr %struct.mxl5005s_state, ptr %9112, i32 0, i32 19, i32 %9118
  %9120 = load i16, ptr %9119, align 2
  %9121 = icmp eq i16 %9120, 82
  br i1 %9121, label %9122, label %9164

9122:                                             ; preds = %9116
  %9123 = getelementptr %struct.mxl5005s_state, ptr %9112, i32 0, i32 19, i32 %9118, i32 1
  %9124 = load i16, ptr %9123, align 2
  %9125 = icmp eq i16 %9124, 0
  br i1 %9125, label %9164, label %9126

9126:                                             ; preds = %9157, %9122
  %9127 = phi i32 [ %9158, %9157 ], [ 0, %9122 ]
  %9128 = getelementptr %struct.mxl5005s_state, ptr %9112, i32 0, i32 19, i32 %9118, i32 4, i32 %9127
  store i16 0, ptr %9128, align 2
  %9129 = getelementptr %struct.mxl5005s_state, ptr %9112, i32 0, i32 19, i32 %9118, i32 3, i32 %9127
  %9130 = load i16, ptr %9129, align 2
  %9131 = load ptr, ptr %3, align 4
  %9132 = getelementptr inbounds %struct.mxl5005s_state, ptr %9131, i32 0, i32 24
  %9133 = load i16, ptr %9132, align 4
  %9134 = zext i16 %9133 to i32
  %9135 = icmp eq i16 %9133, 0
  br i1 %9135, label %9157, label %9136

9136:                                             ; preds = %9126
  %9137 = getelementptr %struct.mxl5005s_state, ptr %9112, i32 0, i32 19, i32 %9118, i32 2, i32 %9127
  %9138 = load i16, ptr %9137, align 2
  %9139 = and i16 %9138, 255
  br label %9140

9140:                                             ; preds = %9154, %9136
  %9141 = phi i32 [ 0, %9136 ], [ %9155, %9154 ]
  %9142 = getelementptr %struct.mxl5005s_state, ptr %9131, i32 0, i32 25, i32 %9141
  %9143 = load i16, ptr %9142, align 2
  %9144 = icmp eq i16 %9143, %9139
  br i1 %9144, label %9145, label %9154

9145:                                             ; preds = %9140
  %9146 = and i16 %9130, 255
  %9147 = zext i16 %9146 to i32
  %9148 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9147
  %9149 = load i8, ptr %9148, align 1
  %9150 = zext i8 %9149 to i16
  %9151 = getelementptr %struct.mxl5005s_state, ptr %9131, i32 0, i32 25, i32 %9141, i32 1
  %9152 = load i16, ptr %9151, align 2
  %9153 = and i16 %9152, %9150
  store i16 %9153, ptr %9151, align 2
  br label %9157

9154:                                             ; preds = %9140
  %9155 = add nuw nsw i32 %9141, 1
  %9156 = icmp eq i32 %9155, %9134
  br i1 %9156, label %9157, label %9140

9157:                                             ; preds = %9154, %9145, %9126
  %9158 = add nuw nsw i32 %9127, 1
  %9159 = load i16, ptr %9123, align 2
  %9160 = zext i16 %9159 to i32
  %9161 = icmp ult i32 %9158, %9160
  br i1 %9161, label %9126, label %9162

9162:                                             ; preds = %9157
  %9163 = load i16, ptr %9113, align 4
  br label %9164

9164:                                             ; preds = %9162, %9122, %9116
  %9165 = phi i16 [ %9163, %9162 ], [ %9117, %9122 ], [ %9117, %9116 ]
  %9166 = add nuw nsw i32 %9118, 1
  %9167 = zext i16 %9165 to i32
  %9168 = icmp ult i32 %9166, %9167
  br i1 %9168, label %9116, label %9169

9169:                                             ; preds = %9164
  %9170 = load ptr, ptr %3, align 4
  br label %9171

9171:                                             ; preds = %9169, %9106
  %9172 = phi ptr [ %9170, %9169 ], [ %9112, %9106 ]
  %9173 = getelementptr inbounds %struct.mxl5005s_state, ptr %9172, i32 0, i32 20
  %9174 = load i16, ptr %9173, align 2
  %9175 = icmp eq i16 %9174, 0
  br i1 %9175, label %9229, label %9176

9176:                                             ; preds = %9224, %9171
  %9177 = phi i16 [ %9225, %9224 ], [ %9174, %9171 ]
  %9178 = phi i32 [ %9226, %9224 ], [ 0, %9171 ]
  %9179 = getelementptr %struct.mxl5005s_state, ptr %9172, i32 0, i32 21, i32 %9178
  %9180 = load i16, ptr %9179, align 2
  %9181 = icmp eq i16 %9180, 82
  br i1 %9181, label %9182, label %9224

9182:                                             ; preds = %9176
  %9183 = getelementptr %struct.mxl5005s_state, ptr %9172, i32 0, i32 21, i32 %9178, i32 1
  %9184 = load i16, ptr %9183, align 2
  %9185 = icmp eq i16 %9184, 0
  br i1 %9185, label %9224, label %9186

9186:                                             ; preds = %9217, %9182
  %9187 = phi i32 [ %9218, %9217 ], [ 0, %9182 ]
  %9188 = getelementptr %struct.mxl5005s_state, ptr %9172, i32 0, i32 21, i32 %9178, i32 4, i32 %9187
  store i16 0, ptr %9188, align 2
  %9189 = getelementptr %struct.mxl5005s_state, ptr %9172, i32 0, i32 21, i32 %9178, i32 3, i32 %9187
  %9190 = load i16, ptr %9189, align 2
  %9191 = load ptr, ptr %3, align 4
  %9192 = getelementptr inbounds %struct.mxl5005s_state, ptr %9191, i32 0, i32 24
  %9193 = load i16, ptr %9192, align 4
  %9194 = zext i16 %9193 to i32
  %9195 = icmp eq i16 %9193, 0
  br i1 %9195, label %9217, label %9196

9196:                                             ; preds = %9186
  %9197 = getelementptr %struct.mxl5005s_state, ptr %9172, i32 0, i32 21, i32 %9178, i32 2, i32 %9187
  %9198 = load i16, ptr %9197, align 2
  %9199 = and i16 %9198, 255
  br label %9200

9200:                                             ; preds = %9214, %9196
  %9201 = phi i32 [ 0, %9196 ], [ %9215, %9214 ]
  %9202 = getelementptr %struct.mxl5005s_state, ptr %9191, i32 0, i32 25, i32 %9201
  %9203 = load i16, ptr %9202, align 2
  %9204 = icmp eq i16 %9203, %9199
  br i1 %9204, label %9205, label %9214

9205:                                             ; preds = %9200
  %9206 = and i16 %9190, 255
  %9207 = zext i16 %9206 to i32
  %9208 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9207
  %9209 = load i8, ptr %9208, align 1
  %9210 = zext i8 %9209 to i16
  %9211 = getelementptr %struct.mxl5005s_state, ptr %9191, i32 0, i32 25, i32 %9201, i32 1
  %9212 = load i16, ptr %9211, align 2
  %9213 = and i16 %9212, %9210
  store i16 %9213, ptr %9211, align 2
  br label %9217

9214:                                             ; preds = %9200
  %9215 = add nuw nsw i32 %9201, 1
  %9216 = icmp eq i32 %9215, %9194
  br i1 %9216, label %9217, label %9200

9217:                                             ; preds = %9214, %9205, %9186
  %9218 = add nuw nsw i32 %9187, 1
  %9219 = load i16, ptr %9183, align 2
  %9220 = zext i16 %9219 to i32
  %9221 = icmp ult i32 %9218, %9220
  br i1 %9221, label %9186, label %9222

9222:                                             ; preds = %9217
  %9223 = load i16, ptr %9173, align 2
  br label %9224

9224:                                             ; preds = %9222, %9182, %9176
  %9225 = phi i16 [ %9223, %9222 ], [ %9177, %9182 ], [ %9177, %9176 ]
  %9226 = add nuw nsw i32 %9178, 1
  %9227 = zext i16 %9225 to i32
  %9228 = icmp ult i32 %9226, %9227
  br i1 %9228, label %9176, label %9229

9229:                                             ; preds = %9224, %9171
  %9230 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %9231 = load i32, ptr %5, align 4
  br label %9232

9232:                                             ; preds = %9229, %9102
  %9233 = phi i32 [ %9231, %9229 ], [ %9103, %9102 ]
  %9234 = add i32 %9233, -700000000
  %9235 = icmp ult i32 %9234, 60000000
  br i1 %9235, label %9236, label %9362

9236:                                             ; preds = %9232
  %9237 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %9238 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %9239 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 86, i32 noundef 7, i16 noundef zeroext 1) #12
  %9240 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 86, i32 noundef 7, i16 noundef zeroext 2) #12
  %9241 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %9242 = load ptr, ptr %3, align 4
  %9243 = getelementptr inbounds %struct.mxl5005s_state, ptr %9242, i32 0, i32 18
  %9244 = load i16, ptr %9243, align 4
  %9245 = icmp eq i16 %9244, 0
  br i1 %9245, label %9301, label %9246

9246:                                             ; preds = %9294, %9236
  %9247 = phi i16 [ %9295, %9294 ], [ %9244, %9236 ]
  %9248 = phi i32 [ %9296, %9294 ], [ 0, %9236 ]
  %9249 = getelementptr %struct.mxl5005s_state, ptr %9242, i32 0, i32 19, i32 %9248
  %9250 = load i16, ptr %9249, align 2
  %9251 = icmp eq i16 %9250, 82
  br i1 %9251, label %9252, label %9294

9252:                                             ; preds = %9246
  %9253 = getelementptr %struct.mxl5005s_state, ptr %9242, i32 0, i32 19, i32 %9248, i32 1
  %9254 = load i16, ptr %9253, align 2
  %9255 = icmp eq i16 %9254, 0
  br i1 %9255, label %9294, label %9256

9256:                                             ; preds = %9287, %9252
  %9257 = phi i32 [ %9288, %9287 ], [ 0, %9252 ]
  %9258 = getelementptr %struct.mxl5005s_state, ptr %9242, i32 0, i32 19, i32 %9248, i32 4, i32 %9257
  store i16 0, ptr %9258, align 2
  %9259 = getelementptr %struct.mxl5005s_state, ptr %9242, i32 0, i32 19, i32 %9248, i32 3, i32 %9257
  %9260 = load i16, ptr %9259, align 2
  %9261 = load ptr, ptr %3, align 4
  %9262 = getelementptr inbounds %struct.mxl5005s_state, ptr %9261, i32 0, i32 24
  %9263 = load i16, ptr %9262, align 4
  %9264 = zext i16 %9263 to i32
  %9265 = icmp eq i16 %9263, 0
  br i1 %9265, label %9287, label %9266

9266:                                             ; preds = %9256
  %9267 = getelementptr %struct.mxl5005s_state, ptr %9242, i32 0, i32 19, i32 %9248, i32 2, i32 %9257
  %9268 = load i16, ptr %9267, align 2
  %9269 = and i16 %9268, 255
  br label %9270

9270:                                             ; preds = %9284, %9266
  %9271 = phi i32 [ 0, %9266 ], [ %9285, %9284 ]
  %9272 = getelementptr %struct.mxl5005s_state, ptr %9261, i32 0, i32 25, i32 %9271
  %9273 = load i16, ptr %9272, align 2
  %9274 = icmp eq i16 %9273, %9269
  br i1 %9274, label %9275, label %9284

9275:                                             ; preds = %9270
  %9276 = and i16 %9260, 255
  %9277 = zext i16 %9276 to i32
  %9278 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9277
  %9279 = load i8, ptr %9278, align 1
  %9280 = zext i8 %9279 to i16
  %9281 = getelementptr %struct.mxl5005s_state, ptr %9261, i32 0, i32 25, i32 %9271, i32 1
  %9282 = load i16, ptr %9281, align 2
  %9283 = and i16 %9282, %9280
  store i16 %9283, ptr %9281, align 2
  br label %9287

9284:                                             ; preds = %9270
  %9285 = add nuw nsw i32 %9271, 1
  %9286 = icmp eq i32 %9285, %9264
  br i1 %9286, label %9287, label %9270

9287:                                             ; preds = %9284, %9275, %9256
  %9288 = add nuw nsw i32 %9257, 1
  %9289 = load i16, ptr %9253, align 2
  %9290 = zext i16 %9289 to i32
  %9291 = icmp ult i32 %9288, %9290
  br i1 %9291, label %9256, label %9292

9292:                                             ; preds = %9287
  %9293 = load i16, ptr %9243, align 4
  br label %9294

9294:                                             ; preds = %9292, %9252, %9246
  %9295 = phi i16 [ %9293, %9292 ], [ %9247, %9252 ], [ %9247, %9246 ]
  %9296 = add nuw nsw i32 %9248, 1
  %9297 = zext i16 %9295 to i32
  %9298 = icmp ult i32 %9296, %9297
  br i1 %9298, label %9246, label %9299

9299:                                             ; preds = %9294
  %9300 = load ptr, ptr %3, align 4
  br label %9301

9301:                                             ; preds = %9299, %9236
  %9302 = phi ptr [ %9300, %9299 ], [ %9242, %9236 ]
  %9303 = getelementptr inbounds %struct.mxl5005s_state, ptr %9302, i32 0, i32 20
  %9304 = load i16, ptr %9303, align 2
  %9305 = icmp eq i16 %9304, 0
  br i1 %9305, label %9359, label %9306

9306:                                             ; preds = %9354, %9301
  %9307 = phi i16 [ %9355, %9354 ], [ %9304, %9301 ]
  %9308 = phi i32 [ %9356, %9354 ], [ 0, %9301 ]
  %9309 = getelementptr %struct.mxl5005s_state, ptr %9302, i32 0, i32 21, i32 %9308
  %9310 = load i16, ptr %9309, align 2
  %9311 = icmp eq i16 %9310, 82
  br i1 %9311, label %9312, label %9354

9312:                                             ; preds = %9306
  %9313 = getelementptr %struct.mxl5005s_state, ptr %9302, i32 0, i32 21, i32 %9308, i32 1
  %9314 = load i16, ptr %9313, align 2
  %9315 = icmp eq i16 %9314, 0
  br i1 %9315, label %9354, label %9316

9316:                                             ; preds = %9347, %9312
  %9317 = phi i32 [ %9348, %9347 ], [ 0, %9312 ]
  %9318 = getelementptr %struct.mxl5005s_state, ptr %9302, i32 0, i32 21, i32 %9308, i32 4, i32 %9317
  store i16 0, ptr %9318, align 2
  %9319 = getelementptr %struct.mxl5005s_state, ptr %9302, i32 0, i32 21, i32 %9308, i32 3, i32 %9317
  %9320 = load i16, ptr %9319, align 2
  %9321 = load ptr, ptr %3, align 4
  %9322 = getelementptr inbounds %struct.mxl5005s_state, ptr %9321, i32 0, i32 24
  %9323 = load i16, ptr %9322, align 4
  %9324 = zext i16 %9323 to i32
  %9325 = icmp eq i16 %9323, 0
  br i1 %9325, label %9347, label %9326

9326:                                             ; preds = %9316
  %9327 = getelementptr %struct.mxl5005s_state, ptr %9302, i32 0, i32 21, i32 %9308, i32 2, i32 %9317
  %9328 = load i16, ptr %9327, align 2
  %9329 = and i16 %9328, 255
  br label %9330

9330:                                             ; preds = %9344, %9326
  %9331 = phi i32 [ 0, %9326 ], [ %9345, %9344 ]
  %9332 = getelementptr %struct.mxl5005s_state, ptr %9321, i32 0, i32 25, i32 %9331
  %9333 = load i16, ptr %9332, align 2
  %9334 = icmp eq i16 %9333, %9329
  br i1 %9334, label %9335, label %9344

9335:                                             ; preds = %9330
  %9336 = and i16 %9320, 255
  %9337 = zext i16 %9336 to i32
  %9338 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9337
  %9339 = load i8, ptr %9338, align 1
  %9340 = zext i8 %9339 to i16
  %9341 = getelementptr %struct.mxl5005s_state, ptr %9321, i32 0, i32 25, i32 %9331, i32 1
  %9342 = load i16, ptr %9341, align 2
  %9343 = and i16 %9342, %9340
  store i16 %9343, ptr %9341, align 2
  br label %9347

9344:                                             ; preds = %9330
  %9345 = add nuw nsw i32 %9331, 1
  %9346 = icmp eq i32 %9345, %9324
  br i1 %9346, label %9347, label %9330

9347:                                             ; preds = %9344, %9335, %9316
  %9348 = add nuw nsw i32 %9317, 1
  %9349 = load i16, ptr %9313, align 2
  %9350 = zext i16 %9349 to i32
  %9351 = icmp ult i32 %9348, %9350
  br i1 %9351, label %9316, label %9352

9352:                                             ; preds = %9347
  %9353 = load i16, ptr %9303, align 2
  br label %9354

9354:                                             ; preds = %9352, %9312, %9306
  %9355 = phi i16 [ %9353, %9352 ], [ %9307, %9312 ], [ %9307, %9306 ]
  %9356 = add nuw nsw i32 %9308, 1
  %9357 = zext i16 %9355 to i32
  %9358 = icmp ult i32 %9356, %9357
  br i1 %9358, label %9306, label %9359

9359:                                             ; preds = %9354, %9301
  %9360 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %9361 = load i32, ptr %5, align 4
  br label %9362

9362:                                             ; preds = %9359, %9232
  %9363 = phi i32 [ %9361, %9359 ], [ %9233, %9232 ]
  %9364 = add i32 %9363, -760000000
  %9365 = icmp ult i32 %9364, 140000001
  br i1 %9365, label %9366, label %9607

9366:                                             ; preds = %9362
  %9367 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %9368 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %9369 = load ptr, ptr %3, align 4
  %9370 = getelementptr inbounds %struct.mxl5005s_state, ptr %9369, i32 0, i32 18
  %9371 = load i16, ptr %9370, align 4
  %9372 = icmp eq i16 %9371, 0
  br i1 %9372, label %9428, label %9373

9373:                                             ; preds = %9421, %9366
  %9374 = phi i16 [ %9422, %9421 ], [ %9371, %9366 ]
  %9375 = phi i32 [ %9423, %9421 ], [ 0, %9366 ]
  %9376 = getelementptr %struct.mxl5005s_state, ptr %9369, i32 0, i32 19, i32 %9375
  %9377 = load i16, ptr %9376, align 2
  %9378 = icmp eq i16 %9377, 86
  br i1 %9378, label %9379, label %9421

9379:                                             ; preds = %9373
  %9380 = getelementptr %struct.mxl5005s_state, ptr %9369, i32 0, i32 19, i32 %9375, i32 1
  %9381 = load i16, ptr %9380, align 2
  %9382 = icmp eq i16 %9381, 0
  br i1 %9382, label %9421, label %9383

9383:                                             ; preds = %9414, %9379
  %9384 = phi i32 [ %9415, %9414 ], [ 0, %9379 ]
  %9385 = getelementptr %struct.mxl5005s_state, ptr %9369, i32 0, i32 19, i32 %9375, i32 4, i32 %9384
  store i16 0, ptr %9385, align 2
  %9386 = getelementptr %struct.mxl5005s_state, ptr %9369, i32 0, i32 19, i32 %9375, i32 3, i32 %9384
  %9387 = load i16, ptr %9386, align 2
  %9388 = load ptr, ptr %3, align 4
  %9389 = getelementptr inbounds %struct.mxl5005s_state, ptr %9388, i32 0, i32 24
  %9390 = load i16, ptr %9389, align 4
  %9391 = zext i16 %9390 to i32
  %9392 = icmp eq i16 %9390, 0
  br i1 %9392, label %9414, label %9393

9393:                                             ; preds = %9383
  %9394 = getelementptr %struct.mxl5005s_state, ptr %9369, i32 0, i32 19, i32 %9375, i32 2, i32 %9384
  %9395 = load i16, ptr %9394, align 2
  %9396 = and i16 %9395, 255
  br label %9397

9397:                                             ; preds = %9411, %9393
  %9398 = phi i32 [ 0, %9393 ], [ %9412, %9411 ]
  %9399 = getelementptr %struct.mxl5005s_state, ptr %9388, i32 0, i32 25, i32 %9398
  %9400 = load i16, ptr %9399, align 2
  %9401 = icmp eq i16 %9400, %9396
  br i1 %9401, label %9402, label %9411

9402:                                             ; preds = %9397
  %9403 = and i16 %9387, 255
  %9404 = zext i16 %9403 to i32
  %9405 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9404
  %9406 = load i8, ptr %9405, align 1
  %9407 = zext i8 %9406 to i16
  %9408 = getelementptr %struct.mxl5005s_state, ptr %9388, i32 0, i32 25, i32 %9398, i32 1
  %9409 = load i16, ptr %9408, align 2
  %9410 = and i16 %9409, %9407
  store i16 %9410, ptr %9408, align 2
  br label %9414

9411:                                             ; preds = %9397
  %9412 = add nuw nsw i32 %9398, 1
  %9413 = icmp eq i32 %9412, %9391
  br i1 %9413, label %9414, label %9397

9414:                                             ; preds = %9411, %9402, %9383
  %9415 = add nuw nsw i32 %9384, 1
  %9416 = load i16, ptr %9380, align 2
  %9417 = zext i16 %9416 to i32
  %9418 = icmp ult i32 %9415, %9417
  br i1 %9418, label %9383, label %9419

9419:                                             ; preds = %9414
  %9420 = load i16, ptr %9370, align 4
  br label %9421

9421:                                             ; preds = %9419, %9379, %9373
  %9422 = phi i16 [ %9420, %9419 ], [ %9374, %9379 ], [ %9374, %9373 ]
  %9423 = add nuw nsw i32 %9375, 1
  %9424 = zext i16 %9422 to i32
  %9425 = icmp ult i32 %9423, %9424
  br i1 %9425, label %9373, label %9426

9426:                                             ; preds = %9421
  %9427 = load ptr, ptr %3, align 4
  br label %9428

9428:                                             ; preds = %9426, %9366
  %9429 = phi ptr [ %9427, %9426 ], [ %9369, %9366 ]
  %9430 = getelementptr inbounds %struct.mxl5005s_state, ptr %9429, i32 0, i32 20
  %9431 = load i16, ptr %9430, align 2
  %9432 = icmp eq i16 %9431, 0
  br i1 %9432, label %9486, label %9433

9433:                                             ; preds = %9481, %9428
  %9434 = phi i16 [ %9482, %9481 ], [ %9431, %9428 ]
  %9435 = phi i32 [ %9483, %9481 ], [ 0, %9428 ]
  %9436 = getelementptr %struct.mxl5005s_state, ptr %9429, i32 0, i32 21, i32 %9435
  %9437 = load i16, ptr %9436, align 2
  %9438 = icmp eq i16 %9437, 86
  br i1 %9438, label %9439, label %9481

9439:                                             ; preds = %9433
  %9440 = getelementptr %struct.mxl5005s_state, ptr %9429, i32 0, i32 21, i32 %9435, i32 1
  %9441 = load i16, ptr %9440, align 2
  %9442 = icmp eq i16 %9441, 0
  br i1 %9442, label %9481, label %9443

9443:                                             ; preds = %9474, %9439
  %9444 = phi i32 [ %9475, %9474 ], [ 0, %9439 ]
  %9445 = getelementptr %struct.mxl5005s_state, ptr %9429, i32 0, i32 21, i32 %9435, i32 4, i32 %9444
  store i16 0, ptr %9445, align 2
  %9446 = getelementptr %struct.mxl5005s_state, ptr %9429, i32 0, i32 21, i32 %9435, i32 3, i32 %9444
  %9447 = load i16, ptr %9446, align 2
  %9448 = load ptr, ptr %3, align 4
  %9449 = getelementptr inbounds %struct.mxl5005s_state, ptr %9448, i32 0, i32 24
  %9450 = load i16, ptr %9449, align 4
  %9451 = zext i16 %9450 to i32
  %9452 = icmp eq i16 %9450, 0
  br i1 %9452, label %9474, label %9453

9453:                                             ; preds = %9443
  %9454 = getelementptr %struct.mxl5005s_state, ptr %9429, i32 0, i32 21, i32 %9435, i32 2, i32 %9444
  %9455 = load i16, ptr %9454, align 2
  %9456 = and i16 %9455, 255
  br label %9457

9457:                                             ; preds = %9471, %9453
  %9458 = phi i32 [ 0, %9453 ], [ %9472, %9471 ]
  %9459 = getelementptr %struct.mxl5005s_state, ptr %9448, i32 0, i32 25, i32 %9458
  %9460 = load i16, ptr %9459, align 2
  %9461 = icmp eq i16 %9460, %9456
  br i1 %9461, label %9462, label %9471

9462:                                             ; preds = %9457
  %9463 = and i16 %9447, 255
  %9464 = zext i16 %9463 to i32
  %9465 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9464
  %9466 = load i8, ptr %9465, align 1
  %9467 = zext i8 %9466 to i16
  %9468 = getelementptr %struct.mxl5005s_state, ptr %9448, i32 0, i32 25, i32 %9458, i32 1
  %9469 = load i16, ptr %9468, align 2
  %9470 = and i16 %9469, %9467
  store i16 %9470, ptr %9468, align 2
  br label %9474

9471:                                             ; preds = %9457
  %9472 = add nuw nsw i32 %9458, 1
  %9473 = icmp eq i32 %9472, %9451
  br i1 %9473, label %9474, label %9457

9474:                                             ; preds = %9471, %9462, %9443
  %9475 = add nuw nsw i32 %9444, 1
  %9476 = load i16, ptr %9440, align 2
  %9477 = zext i16 %9476 to i32
  %9478 = icmp ult i32 %9475, %9477
  br i1 %9478, label %9443, label %9479

9479:                                             ; preds = %9474
  %9480 = load i16, ptr %9430, align 2
  br label %9481

9481:                                             ; preds = %9479, %9439, %9433
  %9482 = phi i16 [ %9480, %9479 ], [ %9434, %9439 ], [ %9434, %9433 ]
  %9483 = add nuw nsw i32 %9435, 1
  %9484 = zext i16 %9482 to i32
  %9485 = icmp ult i32 %9483, %9484
  br i1 %9485, label %9433, label %9486

9486:                                             ; preds = %9481, %9428
  %9487 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %9488 = load ptr, ptr %3, align 4
  %9489 = getelementptr inbounds %struct.mxl5005s_state, ptr %9488, i32 0, i32 18
  %9490 = load i16, ptr %9489, align 4
  %9491 = icmp eq i16 %9490, 0
  br i1 %9491, label %9547, label %9492

9492:                                             ; preds = %9540, %9486
  %9493 = phi i16 [ %9541, %9540 ], [ %9490, %9486 ]
  %9494 = phi i32 [ %9542, %9540 ], [ 0, %9486 ]
  %9495 = getelementptr %struct.mxl5005s_state, ptr %9488, i32 0, i32 19, i32 %9494
  %9496 = load i16, ptr %9495, align 2
  %9497 = icmp eq i16 %9496, 82
  br i1 %9497, label %9498, label %9540

9498:                                             ; preds = %9492
  %9499 = getelementptr %struct.mxl5005s_state, ptr %9488, i32 0, i32 19, i32 %9494, i32 1
  %9500 = load i16, ptr %9499, align 2
  %9501 = icmp eq i16 %9500, 0
  br i1 %9501, label %9540, label %9502

9502:                                             ; preds = %9533, %9498
  %9503 = phi i32 [ %9534, %9533 ], [ 0, %9498 ]
  %9504 = getelementptr %struct.mxl5005s_state, ptr %9488, i32 0, i32 19, i32 %9494, i32 4, i32 %9503
  store i16 0, ptr %9504, align 2
  %9505 = getelementptr %struct.mxl5005s_state, ptr %9488, i32 0, i32 19, i32 %9494, i32 3, i32 %9503
  %9506 = load i16, ptr %9505, align 2
  %9507 = load ptr, ptr %3, align 4
  %9508 = getelementptr inbounds %struct.mxl5005s_state, ptr %9507, i32 0, i32 24
  %9509 = load i16, ptr %9508, align 4
  %9510 = zext i16 %9509 to i32
  %9511 = icmp eq i16 %9509, 0
  br i1 %9511, label %9533, label %9512

9512:                                             ; preds = %9502
  %9513 = getelementptr %struct.mxl5005s_state, ptr %9488, i32 0, i32 19, i32 %9494, i32 2, i32 %9503
  %9514 = load i16, ptr %9513, align 2
  %9515 = and i16 %9514, 255
  br label %9516

9516:                                             ; preds = %9530, %9512
  %9517 = phi i32 [ 0, %9512 ], [ %9531, %9530 ]
  %9518 = getelementptr %struct.mxl5005s_state, ptr %9507, i32 0, i32 25, i32 %9517
  %9519 = load i16, ptr %9518, align 2
  %9520 = icmp eq i16 %9519, %9515
  br i1 %9520, label %9521, label %9530

9521:                                             ; preds = %9516
  %9522 = and i16 %9506, 255
  %9523 = zext i16 %9522 to i32
  %9524 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9523
  %9525 = load i8, ptr %9524, align 1
  %9526 = zext i8 %9525 to i16
  %9527 = getelementptr %struct.mxl5005s_state, ptr %9507, i32 0, i32 25, i32 %9517, i32 1
  %9528 = load i16, ptr %9527, align 2
  %9529 = and i16 %9528, %9526
  store i16 %9529, ptr %9527, align 2
  br label %9533

9530:                                             ; preds = %9516
  %9531 = add nuw nsw i32 %9517, 1
  %9532 = icmp eq i32 %9531, %9510
  br i1 %9532, label %9533, label %9516

9533:                                             ; preds = %9530, %9521, %9502
  %9534 = add nuw nsw i32 %9503, 1
  %9535 = load i16, ptr %9499, align 2
  %9536 = zext i16 %9535 to i32
  %9537 = icmp ult i32 %9534, %9536
  br i1 %9537, label %9502, label %9538

9538:                                             ; preds = %9533
  %9539 = load i16, ptr %9489, align 4
  br label %9540

9540:                                             ; preds = %9538, %9498, %9492
  %9541 = phi i16 [ %9539, %9538 ], [ %9493, %9498 ], [ %9493, %9492 ]
  %9542 = add nuw nsw i32 %9494, 1
  %9543 = zext i16 %9541 to i32
  %9544 = icmp ult i32 %9542, %9543
  br i1 %9544, label %9492, label %9545

9545:                                             ; preds = %9540
  %9546 = load ptr, ptr %3, align 4
  br label %9547

9547:                                             ; preds = %9545, %9486
  %9548 = phi ptr [ %9546, %9545 ], [ %9488, %9486 ]
  %9549 = getelementptr inbounds %struct.mxl5005s_state, ptr %9548, i32 0, i32 20
  %9550 = load i16, ptr %9549, align 2
  %9551 = icmp eq i16 %9550, 0
  br i1 %9551, label %9605, label %9552

9552:                                             ; preds = %9600, %9547
  %9553 = phi i16 [ %9601, %9600 ], [ %9550, %9547 ]
  %9554 = phi i32 [ %9602, %9600 ], [ 0, %9547 ]
  %9555 = getelementptr %struct.mxl5005s_state, ptr %9548, i32 0, i32 21, i32 %9554
  %9556 = load i16, ptr %9555, align 2
  %9557 = icmp eq i16 %9556, 82
  br i1 %9557, label %9558, label %9600

9558:                                             ; preds = %9552
  %9559 = getelementptr %struct.mxl5005s_state, ptr %9548, i32 0, i32 21, i32 %9554, i32 1
  %9560 = load i16, ptr %9559, align 2
  %9561 = icmp eq i16 %9560, 0
  br i1 %9561, label %9600, label %9562

9562:                                             ; preds = %9593, %9558
  %9563 = phi i32 [ %9594, %9593 ], [ 0, %9558 ]
  %9564 = getelementptr %struct.mxl5005s_state, ptr %9548, i32 0, i32 21, i32 %9554, i32 4, i32 %9563
  store i16 0, ptr %9564, align 2
  %9565 = getelementptr %struct.mxl5005s_state, ptr %9548, i32 0, i32 21, i32 %9554, i32 3, i32 %9563
  %9566 = load i16, ptr %9565, align 2
  %9567 = load ptr, ptr %3, align 4
  %9568 = getelementptr inbounds %struct.mxl5005s_state, ptr %9567, i32 0, i32 24
  %9569 = load i16, ptr %9568, align 4
  %9570 = zext i16 %9569 to i32
  %9571 = icmp eq i16 %9569, 0
  br i1 %9571, label %9593, label %9572

9572:                                             ; preds = %9562
  %9573 = getelementptr %struct.mxl5005s_state, ptr %9548, i32 0, i32 21, i32 %9554, i32 2, i32 %9563
  %9574 = load i16, ptr %9573, align 2
  %9575 = and i16 %9574, 255
  br label %9576

9576:                                             ; preds = %9590, %9572
  %9577 = phi i32 [ 0, %9572 ], [ %9591, %9590 ]
  %9578 = getelementptr %struct.mxl5005s_state, ptr %9567, i32 0, i32 25, i32 %9577
  %9579 = load i16, ptr %9578, align 2
  %9580 = icmp eq i16 %9579, %9575
  br i1 %9580, label %9581, label %9590

9581:                                             ; preds = %9576
  %9582 = and i16 %9566, 255
  %9583 = zext i16 %9582 to i32
  %9584 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9583
  %9585 = load i8, ptr %9584, align 1
  %9586 = zext i8 %9585 to i16
  %9587 = getelementptr %struct.mxl5005s_state, ptr %9567, i32 0, i32 25, i32 %9577, i32 1
  %9588 = load i16, ptr %9587, align 2
  %9589 = and i16 %9588, %9586
  store i16 %9589, ptr %9587, align 2
  br label %9593

9590:                                             ; preds = %9576
  %9591 = add nuw nsw i32 %9577, 1
  %9592 = icmp eq i32 %9591, %9570
  br i1 %9592, label %9593, label %9576

9593:                                             ; preds = %9590, %9581, %9562
  %9594 = add nuw nsw i32 %9563, 1
  %9595 = load i16, ptr %9559, align 2
  %9596 = zext i16 %9595 to i32
  %9597 = icmp ult i32 %9594, %9596
  br i1 %9597, label %9562, label %9598

9598:                                             ; preds = %9593
  %9599 = load i16, ptr %9549, align 2
  br label %9600

9600:                                             ; preds = %9598, %9558, %9552
  %9601 = phi i16 [ %9599, %9598 ], [ %9553, %9558 ], [ %9553, %9552 ]
  %9602 = add nuw nsw i32 %9554, 1
  %9603 = zext i16 %9601 to i32
  %9604 = icmp ult i32 %9602, %9603
  br i1 %9604, label %9552, label %9605

9605:                                             ; preds = %9600, %9547
  %9606 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  br label %9607

9607:                                             ; preds = %9605, %9362, %7364
  %9608 = load i8, ptr %7001, align 1
  %9609 = icmp eq i8 %9608, 3
  br i1 %9609, label %9610, label %10881

9610:                                             ; preds = %9607
  %9611 = load ptr, ptr %3, align 4
  %9612 = getelementptr inbounds %struct.mxl5005s_state, ptr %9611, i32 0, i32 18
  %9613 = load i16, ptr %9612, align 4
  %9614 = icmp eq i16 %9613, 0
  br i1 %9614, label %9670, label %9615

9615:                                             ; preds = %9663, %9610
  %9616 = phi i16 [ %9664, %9663 ], [ %9613, %9610 ]
  %9617 = phi i32 [ %9665, %9663 ], [ 0, %9610 ]
  %9618 = getelementptr %struct.mxl5005s_state, ptr %9611, i32 0, i32 19, i32 %9617
  %9619 = load i16, ptr %9618, align 2
  %9620 = icmp eq i16 %9619, 85
  br i1 %9620, label %9621, label %9663

9621:                                             ; preds = %9615
  %9622 = getelementptr %struct.mxl5005s_state, ptr %9611, i32 0, i32 19, i32 %9617, i32 1
  %9623 = load i16, ptr %9622, align 2
  %9624 = icmp eq i16 %9623, 0
  br i1 %9624, label %9663, label %9625

9625:                                             ; preds = %9656, %9621
  %9626 = phi i32 [ %9657, %9656 ], [ 0, %9621 ]
  %9627 = getelementptr %struct.mxl5005s_state, ptr %9611, i32 0, i32 19, i32 %9617, i32 4, i32 %9626
  store i16 0, ptr %9627, align 2
  %9628 = getelementptr %struct.mxl5005s_state, ptr %9611, i32 0, i32 19, i32 %9617, i32 3, i32 %9626
  %9629 = load i16, ptr %9628, align 2
  %9630 = load ptr, ptr %3, align 4
  %9631 = getelementptr inbounds %struct.mxl5005s_state, ptr %9630, i32 0, i32 24
  %9632 = load i16, ptr %9631, align 4
  %9633 = zext i16 %9632 to i32
  %9634 = icmp eq i16 %9632, 0
  br i1 %9634, label %9656, label %9635

9635:                                             ; preds = %9625
  %9636 = getelementptr %struct.mxl5005s_state, ptr %9611, i32 0, i32 19, i32 %9617, i32 2, i32 %9626
  %9637 = load i16, ptr %9636, align 2
  %9638 = and i16 %9637, 255
  br label %9639

9639:                                             ; preds = %9653, %9635
  %9640 = phi i32 [ 0, %9635 ], [ %9654, %9653 ]
  %9641 = getelementptr %struct.mxl5005s_state, ptr %9630, i32 0, i32 25, i32 %9640
  %9642 = load i16, ptr %9641, align 2
  %9643 = icmp eq i16 %9642, %9638
  br i1 %9643, label %9644, label %9653

9644:                                             ; preds = %9639
  %9645 = and i16 %9629, 255
  %9646 = zext i16 %9645 to i32
  %9647 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9646
  %9648 = load i8, ptr %9647, align 1
  %9649 = zext i8 %9648 to i16
  %9650 = getelementptr %struct.mxl5005s_state, ptr %9630, i32 0, i32 25, i32 %9640, i32 1
  %9651 = load i16, ptr %9650, align 2
  %9652 = and i16 %9651, %9649
  store i16 %9652, ptr %9650, align 2
  br label %9656

9653:                                             ; preds = %9639
  %9654 = add nuw nsw i32 %9640, 1
  %9655 = icmp eq i32 %9654, %9633
  br i1 %9655, label %9656, label %9639

9656:                                             ; preds = %9653, %9644, %9625
  %9657 = add nuw nsw i32 %9626, 1
  %9658 = load i16, ptr %9622, align 2
  %9659 = zext i16 %9658 to i32
  %9660 = icmp ult i32 %9657, %9659
  br i1 %9660, label %9625, label %9661

9661:                                             ; preds = %9656
  %9662 = load i16, ptr %9612, align 4
  br label %9663

9663:                                             ; preds = %9661, %9621, %9615
  %9664 = phi i16 [ %9662, %9661 ], [ %9616, %9621 ], [ %9616, %9615 ]
  %9665 = add nuw nsw i32 %9617, 1
  %9666 = zext i16 %9664 to i32
  %9667 = icmp ult i32 %9665, %9666
  br i1 %9667, label %9615, label %9668

9668:                                             ; preds = %9663
  %9669 = load ptr, ptr %3, align 4
  br label %9670

9670:                                             ; preds = %9668, %9610
  %9671 = phi ptr [ %9669, %9668 ], [ %9611, %9610 ]
  %9672 = getelementptr inbounds %struct.mxl5005s_state, ptr %9671, i32 0, i32 20
  %9673 = load i16, ptr %9672, align 2
  %9674 = icmp eq i16 %9673, 0
  br i1 %9674, label %9728, label %9675

9675:                                             ; preds = %9723, %9670
  %9676 = phi i16 [ %9724, %9723 ], [ %9673, %9670 ]
  %9677 = phi i32 [ %9725, %9723 ], [ 0, %9670 ]
  %9678 = getelementptr %struct.mxl5005s_state, ptr %9671, i32 0, i32 21, i32 %9677
  %9679 = load i16, ptr %9678, align 2
  %9680 = icmp eq i16 %9679, 85
  br i1 %9680, label %9681, label %9723

9681:                                             ; preds = %9675
  %9682 = getelementptr %struct.mxl5005s_state, ptr %9671, i32 0, i32 21, i32 %9677, i32 1
  %9683 = load i16, ptr %9682, align 2
  %9684 = icmp eq i16 %9683, 0
  br i1 %9684, label %9723, label %9685

9685:                                             ; preds = %9716, %9681
  %9686 = phi i32 [ %9717, %9716 ], [ 0, %9681 ]
  %9687 = getelementptr %struct.mxl5005s_state, ptr %9671, i32 0, i32 21, i32 %9677, i32 4, i32 %9686
  store i16 0, ptr %9687, align 2
  %9688 = getelementptr %struct.mxl5005s_state, ptr %9671, i32 0, i32 21, i32 %9677, i32 3, i32 %9686
  %9689 = load i16, ptr %9688, align 2
  %9690 = load ptr, ptr %3, align 4
  %9691 = getelementptr inbounds %struct.mxl5005s_state, ptr %9690, i32 0, i32 24
  %9692 = load i16, ptr %9691, align 4
  %9693 = zext i16 %9692 to i32
  %9694 = icmp eq i16 %9692, 0
  br i1 %9694, label %9716, label %9695

9695:                                             ; preds = %9685
  %9696 = getelementptr %struct.mxl5005s_state, ptr %9671, i32 0, i32 21, i32 %9677, i32 2, i32 %9686
  %9697 = load i16, ptr %9696, align 2
  %9698 = and i16 %9697, 255
  br label %9699

9699:                                             ; preds = %9713, %9695
  %9700 = phi i32 [ 0, %9695 ], [ %9714, %9713 ]
  %9701 = getelementptr %struct.mxl5005s_state, ptr %9690, i32 0, i32 25, i32 %9700
  %9702 = load i16, ptr %9701, align 2
  %9703 = icmp eq i16 %9702, %9698
  br i1 %9703, label %9704, label %9713

9704:                                             ; preds = %9699
  %9705 = and i16 %9689, 255
  %9706 = zext i16 %9705 to i32
  %9707 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9706
  %9708 = load i8, ptr %9707, align 1
  %9709 = zext i8 %9708 to i16
  %9710 = getelementptr %struct.mxl5005s_state, ptr %9690, i32 0, i32 25, i32 %9700, i32 1
  %9711 = load i16, ptr %9710, align 2
  %9712 = and i16 %9711, %9709
  store i16 %9712, ptr %9710, align 2
  br label %9716

9713:                                             ; preds = %9699
  %9714 = add nuw nsw i32 %9700, 1
  %9715 = icmp eq i32 %9714, %9693
  br i1 %9715, label %9716, label %9699

9716:                                             ; preds = %9713, %9704, %9685
  %9717 = add nuw nsw i32 %9686, 1
  %9718 = load i16, ptr %9682, align 2
  %9719 = zext i16 %9718 to i32
  %9720 = icmp ult i32 %9717, %9719
  br i1 %9720, label %9685, label %9721

9721:                                             ; preds = %9716
  %9722 = load i16, ptr %9672, align 2
  br label %9723

9723:                                             ; preds = %9721, %9681, %9675
  %9724 = phi i16 [ %9722, %9721 ], [ %9676, %9681 ], [ %9676, %9675 ]
  %9725 = add nuw nsw i32 %9677, 1
  %9726 = zext i16 %9724 to i32
  %9727 = icmp ult i32 %9725, %9726
  br i1 %9727, label %9675, label %9728

9728:                                             ; preds = %9723, %9670
  %9729 = load i32, ptr %5, align 4
  %9730 = add i32 %9729, -43000000
  %9731 = icmp ult i32 %9730, 107000000
  br i1 %9731, label %9732, label %9973

9732:                                             ; preds = %9728
  %9733 = load ptr, ptr %3, align 4
  %9734 = getelementptr inbounds %struct.mxl5005s_state, ptr %9733, i32 0, i32 18
  %9735 = load i16, ptr %9734, align 4
  %9736 = icmp eq i16 %9735, 0
  br i1 %9736, label %9792, label %9737

9737:                                             ; preds = %9785, %9732
  %9738 = phi i16 [ %9786, %9785 ], [ %9735, %9732 ]
  %9739 = phi i32 [ %9787, %9785 ], [ 0, %9732 ]
  %9740 = getelementptr %struct.mxl5005s_state, ptr %9733, i32 0, i32 19, i32 %9739
  %9741 = load i16, ptr %9740, align 2
  %9742 = icmp eq i16 %9741, 83
  br i1 %9742, label %9743, label %9785

9743:                                             ; preds = %9737
  %9744 = getelementptr %struct.mxl5005s_state, ptr %9733, i32 0, i32 19, i32 %9739, i32 1
  %9745 = load i16, ptr %9744, align 2
  %9746 = icmp eq i16 %9745, 0
  br i1 %9746, label %9785, label %9747

9747:                                             ; preds = %9778, %9743
  %9748 = phi i32 [ %9779, %9778 ], [ 0, %9743 ]
  %9749 = getelementptr %struct.mxl5005s_state, ptr %9733, i32 0, i32 19, i32 %9739, i32 4, i32 %9748
  store i16 0, ptr %9749, align 2
  %9750 = getelementptr %struct.mxl5005s_state, ptr %9733, i32 0, i32 19, i32 %9739, i32 3, i32 %9748
  %9751 = load i16, ptr %9750, align 2
  %9752 = load ptr, ptr %3, align 4
  %9753 = getelementptr inbounds %struct.mxl5005s_state, ptr %9752, i32 0, i32 24
  %9754 = load i16, ptr %9753, align 4
  %9755 = zext i16 %9754 to i32
  %9756 = icmp eq i16 %9754, 0
  br i1 %9756, label %9778, label %9757

9757:                                             ; preds = %9747
  %9758 = getelementptr %struct.mxl5005s_state, ptr %9733, i32 0, i32 19, i32 %9739, i32 2, i32 %9748
  %9759 = load i16, ptr %9758, align 2
  %9760 = and i16 %9759, 255
  br label %9761

9761:                                             ; preds = %9775, %9757
  %9762 = phi i32 [ 0, %9757 ], [ %9776, %9775 ]
  %9763 = getelementptr %struct.mxl5005s_state, ptr %9752, i32 0, i32 25, i32 %9762
  %9764 = load i16, ptr %9763, align 2
  %9765 = icmp eq i16 %9764, %9760
  br i1 %9765, label %9766, label %9775

9766:                                             ; preds = %9761
  %9767 = and i16 %9751, 255
  %9768 = zext i16 %9767 to i32
  %9769 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9768
  %9770 = load i8, ptr %9769, align 1
  %9771 = zext i8 %9770 to i16
  %9772 = getelementptr %struct.mxl5005s_state, ptr %9752, i32 0, i32 25, i32 %9762, i32 1
  %9773 = load i16, ptr %9772, align 2
  %9774 = and i16 %9773, %9771
  store i16 %9774, ptr %9772, align 2
  br label %9778

9775:                                             ; preds = %9761
  %9776 = add nuw nsw i32 %9762, 1
  %9777 = icmp eq i32 %9776, %9755
  br i1 %9777, label %9778, label %9761

9778:                                             ; preds = %9775, %9766, %9747
  %9779 = add nuw nsw i32 %9748, 1
  %9780 = load i16, ptr %9744, align 2
  %9781 = zext i16 %9780 to i32
  %9782 = icmp ult i32 %9779, %9781
  br i1 %9782, label %9747, label %9783

9783:                                             ; preds = %9778
  %9784 = load i16, ptr %9734, align 4
  br label %9785

9785:                                             ; preds = %9783, %9743, %9737
  %9786 = phi i16 [ %9784, %9783 ], [ %9738, %9743 ], [ %9738, %9737 ]
  %9787 = add nuw nsw i32 %9739, 1
  %9788 = zext i16 %9786 to i32
  %9789 = icmp ult i32 %9787, %9788
  br i1 %9789, label %9737, label %9790

9790:                                             ; preds = %9785
  %9791 = load ptr, ptr %3, align 4
  br label %9792

9792:                                             ; preds = %9790, %9732
  %9793 = phi ptr [ %9791, %9790 ], [ %9733, %9732 ]
  %9794 = getelementptr inbounds %struct.mxl5005s_state, ptr %9793, i32 0, i32 20
  %9795 = load i16, ptr %9794, align 2
  %9796 = icmp eq i16 %9795, 0
  br i1 %9796, label %9850, label %9797

9797:                                             ; preds = %9845, %9792
  %9798 = phi i16 [ %9846, %9845 ], [ %9795, %9792 ]
  %9799 = phi i32 [ %9847, %9845 ], [ 0, %9792 ]
  %9800 = getelementptr %struct.mxl5005s_state, ptr %9793, i32 0, i32 21, i32 %9799
  %9801 = load i16, ptr %9800, align 2
  %9802 = icmp eq i16 %9801, 83
  br i1 %9802, label %9803, label %9845

9803:                                             ; preds = %9797
  %9804 = getelementptr %struct.mxl5005s_state, ptr %9793, i32 0, i32 21, i32 %9799, i32 1
  %9805 = load i16, ptr %9804, align 2
  %9806 = icmp eq i16 %9805, 0
  br i1 %9806, label %9845, label %9807

9807:                                             ; preds = %9838, %9803
  %9808 = phi i32 [ %9839, %9838 ], [ 0, %9803 ]
  %9809 = getelementptr %struct.mxl5005s_state, ptr %9793, i32 0, i32 21, i32 %9799, i32 4, i32 %9808
  store i16 0, ptr %9809, align 2
  %9810 = getelementptr %struct.mxl5005s_state, ptr %9793, i32 0, i32 21, i32 %9799, i32 3, i32 %9808
  %9811 = load i16, ptr %9810, align 2
  %9812 = load ptr, ptr %3, align 4
  %9813 = getelementptr inbounds %struct.mxl5005s_state, ptr %9812, i32 0, i32 24
  %9814 = load i16, ptr %9813, align 4
  %9815 = zext i16 %9814 to i32
  %9816 = icmp eq i16 %9814, 0
  br i1 %9816, label %9838, label %9817

9817:                                             ; preds = %9807
  %9818 = getelementptr %struct.mxl5005s_state, ptr %9793, i32 0, i32 21, i32 %9799, i32 2, i32 %9808
  %9819 = load i16, ptr %9818, align 2
  %9820 = and i16 %9819, 255
  br label %9821

9821:                                             ; preds = %9835, %9817
  %9822 = phi i32 [ 0, %9817 ], [ %9836, %9835 ]
  %9823 = getelementptr %struct.mxl5005s_state, ptr %9812, i32 0, i32 25, i32 %9822
  %9824 = load i16, ptr %9823, align 2
  %9825 = icmp eq i16 %9824, %9820
  br i1 %9825, label %9826, label %9835

9826:                                             ; preds = %9821
  %9827 = and i16 %9811, 255
  %9828 = zext i16 %9827 to i32
  %9829 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9828
  %9830 = load i8, ptr %9829, align 1
  %9831 = zext i8 %9830 to i16
  %9832 = getelementptr %struct.mxl5005s_state, ptr %9812, i32 0, i32 25, i32 %9822, i32 1
  %9833 = load i16, ptr %9832, align 2
  %9834 = and i16 %9833, %9831
  store i16 %9834, ptr %9832, align 2
  br label %9838

9835:                                             ; preds = %9821
  %9836 = add nuw nsw i32 %9822, 1
  %9837 = icmp eq i32 %9836, %9815
  br i1 %9837, label %9838, label %9821

9838:                                             ; preds = %9835, %9826, %9807
  %9839 = add nuw nsw i32 %9808, 1
  %9840 = load i16, ptr %9804, align 2
  %9841 = zext i16 %9840 to i32
  %9842 = icmp ult i32 %9839, %9841
  br i1 %9842, label %9807, label %9843

9843:                                             ; preds = %9838
  %9844 = load i16, ptr %9794, align 2
  br label %9845

9845:                                             ; preds = %9843, %9803, %9797
  %9846 = phi i16 [ %9844, %9843 ], [ %9798, %9803 ], [ %9798, %9797 ]
  %9847 = add nuw nsw i32 %9799, 1
  %9848 = zext i16 %9846 to i32
  %9849 = icmp ult i32 %9847, %9848
  br i1 %9849, label %9797, label %9850

9850:                                             ; preds = %9845, %9792
  %9851 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %9852 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %9853 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %9854 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %9855 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %9856 = load ptr, ptr %3, align 4
  %9857 = getelementptr inbounds %struct.mxl5005s_state, ptr %9856, i32 0, i32 18
  %9858 = load i16, ptr %9857, align 4
  %9859 = icmp eq i16 %9858, 0
  br i1 %9859, label %9915, label %9860

9860:                                             ; preds = %9908, %9850
  %9861 = phi i16 [ %9909, %9908 ], [ %9858, %9850 ]
  %9862 = phi i32 [ %9910, %9908 ], [ 0, %9850 ]
  %9863 = getelementptr %struct.mxl5005s_state, ptr %9856, i32 0, i32 19, i32 %9862
  %9864 = load i16, ptr %9863, align 2
  %9865 = icmp eq i16 %9864, 82
  br i1 %9865, label %9866, label %9908

9866:                                             ; preds = %9860
  %9867 = getelementptr %struct.mxl5005s_state, ptr %9856, i32 0, i32 19, i32 %9862, i32 1
  %9868 = load i16, ptr %9867, align 2
  %9869 = icmp eq i16 %9868, 0
  br i1 %9869, label %9908, label %9870

9870:                                             ; preds = %9901, %9866
  %9871 = phi i32 [ %9902, %9901 ], [ 0, %9866 ]
  %9872 = getelementptr %struct.mxl5005s_state, ptr %9856, i32 0, i32 19, i32 %9862, i32 4, i32 %9871
  store i16 0, ptr %9872, align 2
  %9873 = getelementptr %struct.mxl5005s_state, ptr %9856, i32 0, i32 19, i32 %9862, i32 3, i32 %9871
  %9874 = load i16, ptr %9873, align 2
  %9875 = load ptr, ptr %3, align 4
  %9876 = getelementptr inbounds %struct.mxl5005s_state, ptr %9875, i32 0, i32 24
  %9877 = load i16, ptr %9876, align 4
  %9878 = zext i16 %9877 to i32
  %9879 = icmp eq i16 %9877, 0
  br i1 %9879, label %9901, label %9880

9880:                                             ; preds = %9870
  %9881 = getelementptr %struct.mxl5005s_state, ptr %9856, i32 0, i32 19, i32 %9862, i32 2, i32 %9871
  %9882 = load i16, ptr %9881, align 2
  %9883 = and i16 %9882, 255
  br label %9884

9884:                                             ; preds = %9898, %9880
  %9885 = phi i32 [ 0, %9880 ], [ %9899, %9898 ]
  %9886 = getelementptr %struct.mxl5005s_state, ptr %9875, i32 0, i32 25, i32 %9885
  %9887 = load i16, ptr %9886, align 2
  %9888 = icmp eq i16 %9887, %9883
  br i1 %9888, label %9889, label %9898

9889:                                             ; preds = %9884
  %9890 = and i16 %9874, 255
  %9891 = zext i16 %9890 to i32
  %9892 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9891
  %9893 = load i8, ptr %9892, align 1
  %9894 = zext i8 %9893 to i16
  %9895 = getelementptr %struct.mxl5005s_state, ptr %9875, i32 0, i32 25, i32 %9885, i32 1
  %9896 = load i16, ptr %9895, align 2
  %9897 = and i16 %9896, %9894
  store i16 %9897, ptr %9895, align 2
  br label %9901

9898:                                             ; preds = %9884
  %9899 = add nuw nsw i32 %9885, 1
  %9900 = icmp eq i32 %9899, %9878
  br i1 %9900, label %9901, label %9884

9901:                                             ; preds = %9898, %9889, %9870
  %9902 = add nuw nsw i32 %9871, 1
  %9903 = load i16, ptr %9867, align 2
  %9904 = zext i16 %9903 to i32
  %9905 = icmp ult i32 %9902, %9904
  br i1 %9905, label %9870, label %9906

9906:                                             ; preds = %9901
  %9907 = load i16, ptr %9857, align 4
  br label %9908

9908:                                             ; preds = %9906, %9866, %9860
  %9909 = phi i16 [ %9907, %9906 ], [ %9861, %9866 ], [ %9861, %9860 ]
  %9910 = add nuw nsw i32 %9862, 1
  %9911 = zext i16 %9909 to i32
  %9912 = icmp ult i32 %9910, %9911
  br i1 %9912, label %9860, label %9913

9913:                                             ; preds = %9908
  %9914 = load ptr, ptr %3, align 4
  br label %9915

9915:                                             ; preds = %9913, %9850
  %9916 = phi ptr [ %9914, %9913 ], [ %9856, %9850 ]
  %9917 = getelementptr inbounds %struct.mxl5005s_state, ptr %9916, i32 0, i32 20
  %9918 = load i16, ptr %9917, align 2
  %9919 = icmp eq i16 %9918, 0
  br i1 %9919, label %9973, label %9920

9920:                                             ; preds = %9968, %9915
  %9921 = phi i16 [ %9969, %9968 ], [ %9918, %9915 ]
  %9922 = phi i32 [ %9970, %9968 ], [ 0, %9915 ]
  %9923 = getelementptr %struct.mxl5005s_state, ptr %9916, i32 0, i32 21, i32 %9922
  %9924 = load i16, ptr %9923, align 2
  %9925 = icmp eq i16 %9924, 82
  br i1 %9925, label %9926, label %9968

9926:                                             ; preds = %9920
  %9927 = getelementptr %struct.mxl5005s_state, ptr %9916, i32 0, i32 21, i32 %9922, i32 1
  %9928 = load i16, ptr %9927, align 2
  %9929 = icmp eq i16 %9928, 0
  br i1 %9929, label %9968, label %9930

9930:                                             ; preds = %9961, %9926
  %9931 = phi i32 [ %9962, %9961 ], [ 0, %9926 ]
  %9932 = getelementptr %struct.mxl5005s_state, ptr %9916, i32 0, i32 21, i32 %9922, i32 4, i32 %9931
  store i16 0, ptr %9932, align 2
  %9933 = getelementptr %struct.mxl5005s_state, ptr %9916, i32 0, i32 21, i32 %9922, i32 3, i32 %9931
  %9934 = load i16, ptr %9933, align 2
  %9935 = load ptr, ptr %3, align 4
  %9936 = getelementptr inbounds %struct.mxl5005s_state, ptr %9935, i32 0, i32 24
  %9937 = load i16, ptr %9936, align 4
  %9938 = zext i16 %9937 to i32
  %9939 = icmp eq i16 %9937, 0
  br i1 %9939, label %9961, label %9940

9940:                                             ; preds = %9930
  %9941 = getelementptr %struct.mxl5005s_state, ptr %9916, i32 0, i32 21, i32 %9922, i32 2, i32 %9931
  %9942 = load i16, ptr %9941, align 2
  %9943 = and i16 %9942, 255
  br label %9944

9944:                                             ; preds = %9958, %9940
  %9945 = phi i32 [ 0, %9940 ], [ %9959, %9958 ]
  %9946 = getelementptr %struct.mxl5005s_state, ptr %9935, i32 0, i32 25, i32 %9945
  %9947 = load i16, ptr %9946, align 2
  %9948 = icmp eq i16 %9947, %9943
  br i1 %9948, label %9949, label %9958

9949:                                             ; preds = %9944
  %9950 = and i16 %9934, 255
  %9951 = zext i16 %9950 to i32
  %9952 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %9951
  %9953 = load i8, ptr %9952, align 1
  %9954 = zext i8 %9953 to i16
  %9955 = getelementptr %struct.mxl5005s_state, ptr %9935, i32 0, i32 25, i32 %9945, i32 1
  %9956 = load i16, ptr %9955, align 2
  %9957 = and i16 %9956, %9954
  store i16 %9957, ptr %9955, align 2
  br label %9961

9958:                                             ; preds = %9944
  %9959 = add nuw nsw i32 %9945, 1
  %9960 = icmp eq i32 %9959, %9938
  br i1 %9960, label %9961, label %9944

9961:                                             ; preds = %9958, %9949, %9930
  %9962 = add nuw nsw i32 %9931, 1
  %9963 = load i16, ptr %9927, align 2
  %9964 = zext i16 %9963 to i32
  %9965 = icmp ult i32 %9962, %9964
  br i1 %9965, label %9930, label %9966

9966:                                             ; preds = %9961
  %9967 = load i16, ptr %9917, align 2
  br label %9968

9968:                                             ; preds = %9966, %9926, %9920
  %9969 = phi i16 [ %9967, %9966 ], [ %9921, %9926 ], [ %9921, %9920 ]
  %9970 = add nuw nsw i32 %9922, 1
  %9971 = zext i16 %9969 to i32
  %9972 = icmp ult i32 %9970, %9971
  br i1 %9972, label %9920, label %9973

9973:                                             ; preds = %9968, %9915, %9728
  %9974 = load i32, ptr %5, align 4
  %9975 = add i32 %9974, -150000000
  %9976 = icmp ult i32 %9975, 130000000
  br i1 %9976, label %9977, label %10218

9977:                                             ; preds = %9973
  %9978 = load ptr, ptr %3, align 4
  %9979 = getelementptr inbounds %struct.mxl5005s_state, ptr %9978, i32 0, i32 18
  %9980 = load i16, ptr %9979, align 4
  %9981 = icmp eq i16 %9980, 0
  br i1 %9981, label %10037, label %9982

9982:                                             ; preds = %10030, %9977
  %9983 = phi i16 [ %10031, %10030 ], [ %9980, %9977 ]
  %9984 = phi i32 [ %10032, %10030 ], [ 0, %9977 ]
  %9985 = getelementptr %struct.mxl5005s_state, ptr %9978, i32 0, i32 19, i32 %9984
  %9986 = load i16, ptr %9985, align 2
  %9987 = icmp eq i16 %9986, 83
  br i1 %9987, label %9988, label %10030

9988:                                             ; preds = %9982
  %9989 = getelementptr %struct.mxl5005s_state, ptr %9978, i32 0, i32 19, i32 %9984, i32 1
  %9990 = load i16, ptr %9989, align 2
  %9991 = icmp eq i16 %9990, 0
  br i1 %9991, label %10030, label %9992

9992:                                             ; preds = %10023, %9988
  %9993 = phi i32 [ %10024, %10023 ], [ 0, %9988 ]
  %9994 = getelementptr %struct.mxl5005s_state, ptr %9978, i32 0, i32 19, i32 %9984, i32 4, i32 %9993
  store i16 0, ptr %9994, align 2
  %9995 = getelementptr %struct.mxl5005s_state, ptr %9978, i32 0, i32 19, i32 %9984, i32 3, i32 %9993
  %9996 = load i16, ptr %9995, align 2
  %9997 = load ptr, ptr %3, align 4
  %9998 = getelementptr inbounds %struct.mxl5005s_state, ptr %9997, i32 0, i32 24
  %9999 = load i16, ptr %9998, align 4
  %10000 = zext i16 %9999 to i32
  %10001 = icmp eq i16 %9999, 0
  br i1 %10001, label %10023, label %10002

10002:                                            ; preds = %9992
  %10003 = getelementptr %struct.mxl5005s_state, ptr %9978, i32 0, i32 19, i32 %9984, i32 2, i32 %9993
  %10004 = load i16, ptr %10003, align 2
  %10005 = and i16 %10004, 255
  br label %10006

10006:                                            ; preds = %10020, %10002
  %10007 = phi i32 [ 0, %10002 ], [ %10021, %10020 ]
  %10008 = getelementptr %struct.mxl5005s_state, ptr %9997, i32 0, i32 25, i32 %10007
  %10009 = load i16, ptr %10008, align 2
  %10010 = icmp eq i16 %10009, %10005
  br i1 %10010, label %10011, label %10020

10011:                                            ; preds = %10006
  %10012 = and i16 %9996, 255
  %10013 = zext i16 %10012 to i32
  %10014 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10013
  %10015 = load i8, ptr %10014, align 1
  %10016 = zext i8 %10015 to i16
  %10017 = getelementptr %struct.mxl5005s_state, ptr %9997, i32 0, i32 25, i32 %10007, i32 1
  %10018 = load i16, ptr %10017, align 2
  %10019 = and i16 %10018, %10016
  store i16 %10019, ptr %10017, align 2
  br label %10023

10020:                                            ; preds = %10006
  %10021 = add nuw nsw i32 %10007, 1
  %10022 = icmp eq i32 %10021, %10000
  br i1 %10022, label %10023, label %10006

10023:                                            ; preds = %10020, %10011, %9992
  %10024 = add nuw nsw i32 %9993, 1
  %10025 = load i16, ptr %9989, align 2
  %10026 = zext i16 %10025 to i32
  %10027 = icmp ult i32 %10024, %10026
  br i1 %10027, label %9992, label %10028

10028:                                            ; preds = %10023
  %10029 = load i16, ptr %9979, align 4
  br label %10030

10030:                                            ; preds = %10028, %9988, %9982
  %10031 = phi i16 [ %10029, %10028 ], [ %9983, %9988 ], [ %9983, %9982 ]
  %10032 = add nuw nsw i32 %9984, 1
  %10033 = zext i16 %10031 to i32
  %10034 = icmp ult i32 %10032, %10033
  br i1 %10034, label %9982, label %10035

10035:                                            ; preds = %10030
  %10036 = load ptr, ptr %3, align 4
  br label %10037

10037:                                            ; preds = %10035, %9977
  %10038 = phi ptr [ %10036, %10035 ], [ %9978, %9977 ]
  %10039 = getelementptr inbounds %struct.mxl5005s_state, ptr %10038, i32 0, i32 20
  %10040 = load i16, ptr %10039, align 2
  %10041 = icmp eq i16 %10040, 0
  br i1 %10041, label %10095, label %10042

10042:                                            ; preds = %10090, %10037
  %10043 = phi i16 [ %10091, %10090 ], [ %10040, %10037 ]
  %10044 = phi i32 [ %10092, %10090 ], [ 0, %10037 ]
  %10045 = getelementptr %struct.mxl5005s_state, ptr %10038, i32 0, i32 21, i32 %10044
  %10046 = load i16, ptr %10045, align 2
  %10047 = icmp eq i16 %10046, 83
  br i1 %10047, label %10048, label %10090

10048:                                            ; preds = %10042
  %10049 = getelementptr %struct.mxl5005s_state, ptr %10038, i32 0, i32 21, i32 %10044, i32 1
  %10050 = load i16, ptr %10049, align 2
  %10051 = icmp eq i16 %10050, 0
  br i1 %10051, label %10090, label %10052

10052:                                            ; preds = %10083, %10048
  %10053 = phi i32 [ %10084, %10083 ], [ 0, %10048 ]
  %10054 = getelementptr %struct.mxl5005s_state, ptr %10038, i32 0, i32 21, i32 %10044, i32 4, i32 %10053
  store i16 0, ptr %10054, align 2
  %10055 = getelementptr %struct.mxl5005s_state, ptr %10038, i32 0, i32 21, i32 %10044, i32 3, i32 %10053
  %10056 = load i16, ptr %10055, align 2
  %10057 = load ptr, ptr %3, align 4
  %10058 = getelementptr inbounds %struct.mxl5005s_state, ptr %10057, i32 0, i32 24
  %10059 = load i16, ptr %10058, align 4
  %10060 = zext i16 %10059 to i32
  %10061 = icmp eq i16 %10059, 0
  br i1 %10061, label %10083, label %10062

10062:                                            ; preds = %10052
  %10063 = getelementptr %struct.mxl5005s_state, ptr %10038, i32 0, i32 21, i32 %10044, i32 2, i32 %10053
  %10064 = load i16, ptr %10063, align 2
  %10065 = and i16 %10064, 255
  br label %10066

10066:                                            ; preds = %10080, %10062
  %10067 = phi i32 [ 0, %10062 ], [ %10081, %10080 ]
  %10068 = getelementptr %struct.mxl5005s_state, ptr %10057, i32 0, i32 25, i32 %10067
  %10069 = load i16, ptr %10068, align 2
  %10070 = icmp eq i16 %10069, %10065
  br i1 %10070, label %10071, label %10080

10071:                                            ; preds = %10066
  %10072 = and i16 %10056, 255
  %10073 = zext i16 %10072 to i32
  %10074 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10073
  %10075 = load i8, ptr %10074, align 1
  %10076 = zext i8 %10075 to i16
  %10077 = getelementptr %struct.mxl5005s_state, ptr %10057, i32 0, i32 25, i32 %10067, i32 1
  %10078 = load i16, ptr %10077, align 2
  %10079 = and i16 %10078, %10076
  store i16 %10079, ptr %10077, align 2
  br label %10083

10080:                                            ; preds = %10066
  %10081 = add nuw nsw i32 %10067, 1
  %10082 = icmp eq i32 %10081, %10060
  br i1 %10082, label %10083, label %10066

10083:                                            ; preds = %10080, %10071, %10052
  %10084 = add nuw nsw i32 %10053, 1
  %10085 = load i16, ptr %10049, align 2
  %10086 = zext i16 %10085 to i32
  %10087 = icmp ult i32 %10084, %10086
  br i1 %10087, label %10052, label %10088

10088:                                            ; preds = %10083
  %10089 = load i16, ptr %10039, align 2
  br label %10090

10090:                                            ; preds = %10088, %10048, %10042
  %10091 = phi i16 [ %10089, %10088 ], [ %10043, %10048 ], [ %10043, %10042 ]
  %10092 = add nuw nsw i32 %10044, 1
  %10093 = zext i16 %10091 to i32
  %10094 = icmp ult i32 %10092, %10093
  br i1 %10094, label %10042, label %10095

10095:                                            ; preds = %10090, %10037
  %10096 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10097 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %10098 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %10099 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %10100 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %10101 = load ptr, ptr %3, align 4
  %10102 = getelementptr inbounds %struct.mxl5005s_state, ptr %10101, i32 0, i32 18
  %10103 = load i16, ptr %10102, align 4
  %10104 = icmp eq i16 %10103, 0
  br i1 %10104, label %10160, label %10105

10105:                                            ; preds = %10153, %10095
  %10106 = phi i16 [ %10154, %10153 ], [ %10103, %10095 ]
  %10107 = phi i32 [ %10155, %10153 ], [ 0, %10095 ]
  %10108 = getelementptr %struct.mxl5005s_state, ptr %10101, i32 0, i32 19, i32 %10107
  %10109 = load i16, ptr %10108, align 2
  %10110 = icmp eq i16 %10109, 82
  br i1 %10110, label %10111, label %10153

10111:                                            ; preds = %10105
  %10112 = getelementptr %struct.mxl5005s_state, ptr %10101, i32 0, i32 19, i32 %10107, i32 1
  %10113 = load i16, ptr %10112, align 2
  %10114 = icmp eq i16 %10113, 0
  br i1 %10114, label %10153, label %10115

10115:                                            ; preds = %10146, %10111
  %10116 = phi i32 [ %10147, %10146 ], [ 0, %10111 ]
  %10117 = getelementptr %struct.mxl5005s_state, ptr %10101, i32 0, i32 19, i32 %10107, i32 4, i32 %10116
  store i16 0, ptr %10117, align 2
  %10118 = getelementptr %struct.mxl5005s_state, ptr %10101, i32 0, i32 19, i32 %10107, i32 3, i32 %10116
  %10119 = load i16, ptr %10118, align 2
  %10120 = load ptr, ptr %3, align 4
  %10121 = getelementptr inbounds %struct.mxl5005s_state, ptr %10120, i32 0, i32 24
  %10122 = load i16, ptr %10121, align 4
  %10123 = zext i16 %10122 to i32
  %10124 = icmp eq i16 %10122, 0
  br i1 %10124, label %10146, label %10125

10125:                                            ; preds = %10115
  %10126 = getelementptr %struct.mxl5005s_state, ptr %10101, i32 0, i32 19, i32 %10107, i32 2, i32 %10116
  %10127 = load i16, ptr %10126, align 2
  %10128 = and i16 %10127, 255
  br label %10129

10129:                                            ; preds = %10143, %10125
  %10130 = phi i32 [ 0, %10125 ], [ %10144, %10143 ]
  %10131 = getelementptr %struct.mxl5005s_state, ptr %10120, i32 0, i32 25, i32 %10130
  %10132 = load i16, ptr %10131, align 2
  %10133 = icmp eq i16 %10132, %10128
  br i1 %10133, label %10134, label %10143

10134:                                            ; preds = %10129
  %10135 = and i16 %10119, 255
  %10136 = zext i16 %10135 to i32
  %10137 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10136
  %10138 = load i8, ptr %10137, align 1
  %10139 = zext i8 %10138 to i16
  %10140 = getelementptr %struct.mxl5005s_state, ptr %10120, i32 0, i32 25, i32 %10130, i32 1
  %10141 = load i16, ptr %10140, align 2
  %10142 = and i16 %10141, %10139
  store i16 %10142, ptr %10140, align 2
  br label %10146

10143:                                            ; preds = %10129
  %10144 = add nuw nsw i32 %10130, 1
  %10145 = icmp eq i32 %10144, %10123
  br i1 %10145, label %10146, label %10129

10146:                                            ; preds = %10143, %10134, %10115
  %10147 = add nuw nsw i32 %10116, 1
  %10148 = load i16, ptr %10112, align 2
  %10149 = zext i16 %10148 to i32
  %10150 = icmp ult i32 %10147, %10149
  br i1 %10150, label %10115, label %10151

10151:                                            ; preds = %10146
  %10152 = load i16, ptr %10102, align 4
  br label %10153

10153:                                            ; preds = %10151, %10111, %10105
  %10154 = phi i16 [ %10152, %10151 ], [ %10106, %10111 ], [ %10106, %10105 ]
  %10155 = add nuw nsw i32 %10107, 1
  %10156 = zext i16 %10154 to i32
  %10157 = icmp ult i32 %10155, %10156
  br i1 %10157, label %10105, label %10158

10158:                                            ; preds = %10153
  %10159 = load ptr, ptr %3, align 4
  br label %10160

10160:                                            ; preds = %10158, %10095
  %10161 = phi ptr [ %10159, %10158 ], [ %10101, %10095 ]
  %10162 = getelementptr inbounds %struct.mxl5005s_state, ptr %10161, i32 0, i32 20
  %10163 = load i16, ptr %10162, align 2
  %10164 = icmp eq i16 %10163, 0
  br i1 %10164, label %10218, label %10165

10165:                                            ; preds = %10213, %10160
  %10166 = phi i16 [ %10214, %10213 ], [ %10163, %10160 ]
  %10167 = phi i32 [ %10215, %10213 ], [ 0, %10160 ]
  %10168 = getelementptr %struct.mxl5005s_state, ptr %10161, i32 0, i32 21, i32 %10167
  %10169 = load i16, ptr %10168, align 2
  %10170 = icmp eq i16 %10169, 82
  br i1 %10170, label %10171, label %10213

10171:                                            ; preds = %10165
  %10172 = getelementptr %struct.mxl5005s_state, ptr %10161, i32 0, i32 21, i32 %10167, i32 1
  %10173 = load i16, ptr %10172, align 2
  %10174 = icmp eq i16 %10173, 0
  br i1 %10174, label %10213, label %10175

10175:                                            ; preds = %10206, %10171
  %10176 = phi i32 [ %10207, %10206 ], [ 0, %10171 ]
  %10177 = getelementptr %struct.mxl5005s_state, ptr %10161, i32 0, i32 21, i32 %10167, i32 4, i32 %10176
  store i16 0, ptr %10177, align 2
  %10178 = getelementptr %struct.mxl5005s_state, ptr %10161, i32 0, i32 21, i32 %10167, i32 3, i32 %10176
  %10179 = load i16, ptr %10178, align 2
  %10180 = load ptr, ptr %3, align 4
  %10181 = getelementptr inbounds %struct.mxl5005s_state, ptr %10180, i32 0, i32 24
  %10182 = load i16, ptr %10181, align 4
  %10183 = zext i16 %10182 to i32
  %10184 = icmp eq i16 %10182, 0
  br i1 %10184, label %10206, label %10185

10185:                                            ; preds = %10175
  %10186 = getelementptr %struct.mxl5005s_state, ptr %10161, i32 0, i32 21, i32 %10167, i32 2, i32 %10176
  %10187 = load i16, ptr %10186, align 2
  %10188 = and i16 %10187, 255
  br label %10189

10189:                                            ; preds = %10203, %10185
  %10190 = phi i32 [ 0, %10185 ], [ %10204, %10203 ]
  %10191 = getelementptr %struct.mxl5005s_state, ptr %10180, i32 0, i32 25, i32 %10190
  %10192 = load i16, ptr %10191, align 2
  %10193 = icmp eq i16 %10192, %10188
  br i1 %10193, label %10194, label %10203

10194:                                            ; preds = %10189
  %10195 = and i16 %10179, 255
  %10196 = zext i16 %10195 to i32
  %10197 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10196
  %10198 = load i8, ptr %10197, align 1
  %10199 = zext i8 %10198 to i16
  %10200 = getelementptr %struct.mxl5005s_state, ptr %10180, i32 0, i32 25, i32 %10190, i32 1
  %10201 = load i16, ptr %10200, align 2
  %10202 = and i16 %10201, %10199
  store i16 %10202, ptr %10200, align 2
  br label %10206

10203:                                            ; preds = %10189
  %10204 = add nuw nsw i32 %10190, 1
  %10205 = icmp eq i32 %10204, %10183
  br i1 %10205, label %10206, label %10189

10206:                                            ; preds = %10203, %10194, %10175
  %10207 = add nuw nsw i32 %10176, 1
  %10208 = load i16, ptr %10172, align 2
  %10209 = zext i16 %10208 to i32
  %10210 = icmp ult i32 %10207, %10209
  br i1 %10210, label %10175, label %10211

10211:                                            ; preds = %10206
  %10212 = load i16, ptr %10162, align 2
  br label %10213

10213:                                            ; preds = %10211, %10171, %10165
  %10214 = phi i16 [ %10212, %10211 ], [ %10166, %10171 ], [ %10166, %10165 ]
  %10215 = add nuw nsw i32 %10167, 1
  %10216 = zext i16 %10214 to i32
  %10217 = icmp ult i32 %10215, %10216
  br i1 %10217, label %10165, label %10218

10218:                                            ; preds = %10213, %10160, %9973
  %10219 = load i32, ptr %5, align 4
  %10220 = add i32 %10219, -280000000
  %10221 = icmp ult i32 %10220, 80000000
  br i1 %10221, label %10222, label %10349

10222:                                            ; preds = %10218
  %10223 = load ptr, ptr %3, align 4
  %10224 = getelementptr inbounds %struct.mxl5005s_state, ptr %10223, i32 0, i32 18
  %10225 = load i16, ptr %10224, align 4
  %10226 = icmp eq i16 %10225, 0
  br i1 %10226, label %10282, label %10227

10227:                                            ; preds = %10275, %10222
  %10228 = phi i16 [ %10276, %10275 ], [ %10225, %10222 ]
  %10229 = phi i32 [ %10277, %10275 ], [ 0, %10222 ]
  %10230 = getelementptr %struct.mxl5005s_state, ptr %10223, i32 0, i32 19, i32 %10229
  %10231 = load i16, ptr %10230, align 2
  %10232 = icmp eq i16 %10231, 83
  br i1 %10232, label %10233, label %10275

10233:                                            ; preds = %10227
  %10234 = getelementptr %struct.mxl5005s_state, ptr %10223, i32 0, i32 19, i32 %10229, i32 1
  %10235 = load i16, ptr %10234, align 2
  %10236 = icmp eq i16 %10235, 0
  br i1 %10236, label %10275, label %10237

10237:                                            ; preds = %10268, %10233
  %10238 = phi i32 [ %10269, %10268 ], [ 0, %10233 ]
  %10239 = getelementptr %struct.mxl5005s_state, ptr %10223, i32 0, i32 19, i32 %10229, i32 4, i32 %10238
  store i16 0, ptr %10239, align 2
  %10240 = getelementptr %struct.mxl5005s_state, ptr %10223, i32 0, i32 19, i32 %10229, i32 3, i32 %10238
  %10241 = load i16, ptr %10240, align 2
  %10242 = load ptr, ptr %3, align 4
  %10243 = getelementptr inbounds %struct.mxl5005s_state, ptr %10242, i32 0, i32 24
  %10244 = load i16, ptr %10243, align 4
  %10245 = zext i16 %10244 to i32
  %10246 = icmp eq i16 %10244, 0
  br i1 %10246, label %10268, label %10247

10247:                                            ; preds = %10237
  %10248 = getelementptr %struct.mxl5005s_state, ptr %10223, i32 0, i32 19, i32 %10229, i32 2, i32 %10238
  %10249 = load i16, ptr %10248, align 2
  %10250 = and i16 %10249, 255
  br label %10251

10251:                                            ; preds = %10265, %10247
  %10252 = phi i32 [ 0, %10247 ], [ %10266, %10265 ]
  %10253 = getelementptr %struct.mxl5005s_state, ptr %10242, i32 0, i32 25, i32 %10252
  %10254 = load i16, ptr %10253, align 2
  %10255 = icmp eq i16 %10254, %10250
  br i1 %10255, label %10256, label %10265

10256:                                            ; preds = %10251
  %10257 = and i16 %10241, 255
  %10258 = zext i16 %10257 to i32
  %10259 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10258
  %10260 = load i8, ptr %10259, align 1
  %10261 = zext i8 %10260 to i16
  %10262 = getelementptr %struct.mxl5005s_state, ptr %10242, i32 0, i32 25, i32 %10252, i32 1
  %10263 = load i16, ptr %10262, align 2
  %10264 = and i16 %10263, %10261
  store i16 %10264, ptr %10262, align 2
  br label %10268

10265:                                            ; preds = %10251
  %10266 = add nuw nsw i32 %10252, 1
  %10267 = icmp eq i32 %10266, %10245
  br i1 %10267, label %10268, label %10251

10268:                                            ; preds = %10265, %10256, %10237
  %10269 = add nuw nsw i32 %10238, 1
  %10270 = load i16, ptr %10234, align 2
  %10271 = zext i16 %10270 to i32
  %10272 = icmp ult i32 %10269, %10271
  br i1 %10272, label %10237, label %10273

10273:                                            ; preds = %10268
  %10274 = load i16, ptr %10224, align 4
  br label %10275

10275:                                            ; preds = %10273, %10233, %10227
  %10276 = phi i16 [ %10274, %10273 ], [ %10228, %10233 ], [ %10228, %10227 ]
  %10277 = add nuw nsw i32 %10229, 1
  %10278 = zext i16 %10276 to i32
  %10279 = icmp ult i32 %10277, %10278
  br i1 %10279, label %10227, label %10280

10280:                                            ; preds = %10275
  %10281 = load ptr, ptr %3, align 4
  br label %10282

10282:                                            ; preds = %10280, %10222
  %10283 = phi ptr [ %10281, %10280 ], [ %10223, %10222 ]
  %10284 = getelementptr inbounds %struct.mxl5005s_state, ptr %10283, i32 0, i32 20
  %10285 = load i16, ptr %10284, align 2
  %10286 = icmp eq i16 %10285, 0
  br i1 %10286, label %10340, label %10287

10287:                                            ; preds = %10335, %10282
  %10288 = phi i16 [ %10336, %10335 ], [ %10285, %10282 ]
  %10289 = phi i32 [ %10337, %10335 ], [ 0, %10282 ]
  %10290 = getelementptr %struct.mxl5005s_state, ptr %10283, i32 0, i32 21, i32 %10289
  %10291 = load i16, ptr %10290, align 2
  %10292 = icmp eq i16 %10291, 83
  br i1 %10292, label %10293, label %10335

10293:                                            ; preds = %10287
  %10294 = getelementptr %struct.mxl5005s_state, ptr %10283, i32 0, i32 21, i32 %10289, i32 1
  %10295 = load i16, ptr %10294, align 2
  %10296 = icmp eq i16 %10295, 0
  br i1 %10296, label %10335, label %10297

10297:                                            ; preds = %10328, %10293
  %10298 = phi i32 [ %10329, %10328 ], [ 0, %10293 ]
  %10299 = getelementptr %struct.mxl5005s_state, ptr %10283, i32 0, i32 21, i32 %10289, i32 4, i32 %10298
  store i16 0, ptr %10299, align 2
  %10300 = getelementptr %struct.mxl5005s_state, ptr %10283, i32 0, i32 21, i32 %10289, i32 3, i32 %10298
  %10301 = load i16, ptr %10300, align 2
  %10302 = load ptr, ptr %3, align 4
  %10303 = getelementptr inbounds %struct.mxl5005s_state, ptr %10302, i32 0, i32 24
  %10304 = load i16, ptr %10303, align 4
  %10305 = zext i16 %10304 to i32
  %10306 = icmp eq i16 %10304, 0
  br i1 %10306, label %10328, label %10307

10307:                                            ; preds = %10297
  %10308 = getelementptr %struct.mxl5005s_state, ptr %10283, i32 0, i32 21, i32 %10289, i32 2, i32 %10298
  %10309 = load i16, ptr %10308, align 2
  %10310 = and i16 %10309, 255
  br label %10311

10311:                                            ; preds = %10325, %10307
  %10312 = phi i32 [ 0, %10307 ], [ %10326, %10325 ]
  %10313 = getelementptr %struct.mxl5005s_state, ptr %10302, i32 0, i32 25, i32 %10312
  %10314 = load i16, ptr %10313, align 2
  %10315 = icmp eq i16 %10314, %10310
  br i1 %10315, label %10316, label %10325

10316:                                            ; preds = %10311
  %10317 = and i16 %10301, 255
  %10318 = zext i16 %10317 to i32
  %10319 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10318
  %10320 = load i8, ptr %10319, align 1
  %10321 = zext i8 %10320 to i16
  %10322 = getelementptr %struct.mxl5005s_state, ptr %10302, i32 0, i32 25, i32 %10312, i32 1
  %10323 = load i16, ptr %10322, align 2
  %10324 = and i16 %10323, %10321
  store i16 %10324, ptr %10322, align 2
  br label %10328

10325:                                            ; preds = %10311
  %10326 = add nuw nsw i32 %10312, 1
  %10327 = icmp eq i32 %10326, %10305
  br i1 %10327, label %10328, label %10311

10328:                                            ; preds = %10325, %10316, %10297
  %10329 = add nuw nsw i32 %10298, 1
  %10330 = load i16, ptr %10294, align 2
  %10331 = zext i16 %10330 to i32
  %10332 = icmp ult i32 %10329, %10331
  br i1 %10332, label %10297, label %10333

10333:                                            ; preds = %10328
  %10334 = load i16, ptr %10284, align 2
  br label %10335

10335:                                            ; preds = %10333, %10293, %10287
  %10336 = phi i16 [ %10334, %10333 ], [ %10288, %10293 ], [ %10288, %10287 ]
  %10337 = add nuw nsw i32 %10289, 1
  %10338 = zext i16 %10336 to i32
  %10339 = icmp ult i32 %10337, %10338
  br i1 %10339, label %10287, label %10340

10340:                                            ; preds = %10335, %10282
  %10341 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10342 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %10343 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %10344 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %10345 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %10346 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %10347 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %10348 = load i32, ptr %5, align 4
  br label %10349

10349:                                            ; preds = %10340, %10218
  %10350 = phi i32 [ %10348, %10340 ], [ %10219, %10218 ]
  %10351 = add i32 %10350, -360000000
  %10352 = icmp ult i32 %10351, 200000000
  br i1 %10352, label %10353, label %10477

10353:                                            ; preds = %10349
  %10354 = load ptr, ptr %3, align 4
  %10355 = getelementptr inbounds %struct.mxl5005s_state, ptr %10354, i32 0, i32 18
  %10356 = load i16, ptr %10355, align 4
  %10357 = icmp eq i16 %10356, 0
  br i1 %10357, label %10413, label %10358

10358:                                            ; preds = %10406, %10353
  %10359 = phi i16 [ %10407, %10406 ], [ %10356, %10353 ]
  %10360 = phi i32 [ %10408, %10406 ], [ 0, %10353 ]
  %10361 = getelementptr %struct.mxl5005s_state, ptr %10354, i32 0, i32 19, i32 %10360
  %10362 = load i16, ptr %10361, align 2
  %10363 = icmp eq i16 %10362, 83
  br i1 %10363, label %10364, label %10406

10364:                                            ; preds = %10358
  %10365 = getelementptr %struct.mxl5005s_state, ptr %10354, i32 0, i32 19, i32 %10360, i32 1
  %10366 = load i16, ptr %10365, align 2
  %10367 = icmp eq i16 %10366, 0
  br i1 %10367, label %10406, label %10368

10368:                                            ; preds = %10399, %10364
  %10369 = phi i32 [ %10400, %10399 ], [ 0, %10364 ]
  %10370 = getelementptr %struct.mxl5005s_state, ptr %10354, i32 0, i32 19, i32 %10360, i32 4, i32 %10369
  store i16 0, ptr %10370, align 2
  %10371 = getelementptr %struct.mxl5005s_state, ptr %10354, i32 0, i32 19, i32 %10360, i32 3, i32 %10369
  %10372 = load i16, ptr %10371, align 2
  %10373 = load ptr, ptr %3, align 4
  %10374 = getelementptr inbounds %struct.mxl5005s_state, ptr %10373, i32 0, i32 24
  %10375 = load i16, ptr %10374, align 4
  %10376 = zext i16 %10375 to i32
  %10377 = icmp eq i16 %10375, 0
  br i1 %10377, label %10399, label %10378

10378:                                            ; preds = %10368
  %10379 = getelementptr %struct.mxl5005s_state, ptr %10354, i32 0, i32 19, i32 %10360, i32 2, i32 %10369
  %10380 = load i16, ptr %10379, align 2
  %10381 = and i16 %10380, 255
  br label %10382

10382:                                            ; preds = %10396, %10378
  %10383 = phi i32 [ 0, %10378 ], [ %10397, %10396 ]
  %10384 = getelementptr %struct.mxl5005s_state, ptr %10373, i32 0, i32 25, i32 %10383
  %10385 = load i16, ptr %10384, align 2
  %10386 = icmp eq i16 %10385, %10381
  br i1 %10386, label %10387, label %10396

10387:                                            ; preds = %10382
  %10388 = and i16 %10372, 255
  %10389 = zext i16 %10388 to i32
  %10390 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10389
  %10391 = load i8, ptr %10390, align 1
  %10392 = zext i8 %10391 to i16
  %10393 = getelementptr %struct.mxl5005s_state, ptr %10373, i32 0, i32 25, i32 %10383, i32 1
  %10394 = load i16, ptr %10393, align 2
  %10395 = and i16 %10394, %10392
  store i16 %10395, ptr %10393, align 2
  br label %10399

10396:                                            ; preds = %10382
  %10397 = add nuw nsw i32 %10383, 1
  %10398 = icmp eq i32 %10397, %10376
  br i1 %10398, label %10399, label %10382

10399:                                            ; preds = %10396, %10387, %10368
  %10400 = add nuw nsw i32 %10369, 1
  %10401 = load i16, ptr %10365, align 2
  %10402 = zext i16 %10401 to i32
  %10403 = icmp ult i32 %10400, %10402
  br i1 %10403, label %10368, label %10404

10404:                                            ; preds = %10399
  %10405 = load i16, ptr %10355, align 4
  br label %10406

10406:                                            ; preds = %10404, %10364, %10358
  %10407 = phi i16 [ %10405, %10404 ], [ %10359, %10364 ], [ %10359, %10358 ]
  %10408 = add nuw nsw i32 %10360, 1
  %10409 = zext i16 %10407 to i32
  %10410 = icmp ult i32 %10408, %10409
  br i1 %10410, label %10358, label %10411

10411:                                            ; preds = %10406
  %10412 = load ptr, ptr %3, align 4
  br label %10413

10413:                                            ; preds = %10411, %10353
  %10414 = phi ptr [ %10412, %10411 ], [ %10354, %10353 ]
  %10415 = getelementptr inbounds %struct.mxl5005s_state, ptr %10414, i32 0, i32 20
  %10416 = load i16, ptr %10415, align 2
  %10417 = icmp eq i16 %10416, 0
  br i1 %10417, label %10471, label %10418

10418:                                            ; preds = %10466, %10413
  %10419 = phi i16 [ %10467, %10466 ], [ %10416, %10413 ]
  %10420 = phi i32 [ %10468, %10466 ], [ 0, %10413 ]
  %10421 = getelementptr %struct.mxl5005s_state, ptr %10414, i32 0, i32 21, i32 %10420
  %10422 = load i16, ptr %10421, align 2
  %10423 = icmp eq i16 %10422, 83
  br i1 %10423, label %10424, label %10466

10424:                                            ; preds = %10418
  %10425 = getelementptr %struct.mxl5005s_state, ptr %10414, i32 0, i32 21, i32 %10420, i32 1
  %10426 = load i16, ptr %10425, align 2
  %10427 = icmp eq i16 %10426, 0
  br i1 %10427, label %10466, label %10428

10428:                                            ; preds = %10459, %10424
  %10429 = phi i32 [ %10460, %10459 ], [ 0, %10424 ]
  %10430 = getelementptr %struct.mxl5005s_state, ptr %10414, i32 0, i32 21, i32 %10420, i32 4, i32 %10429
  store i16 0, ptr %10430, align 2
  %10431 = getelementptr %struct.mxl5005s_state, ptr %10414, i32 0, i32 21, i32 %10420, i32 3, i32 %10429
  %10432 = load i16, ptr %10431, align 2
  %10433 = load ptr, ptr %3, align 4
  %10434 = getelementptr inbounds %struct.mxl5005s_state, ptr %10433, i32 0, i32 24
  %10435 = load i16, ptr %10434, align 4
  %10436 = zext i16 %10435 to i32
  %10437 = icmp eq i16 %10435, 0
  br i1 %10437, label %10459, label %10438

10438:                                            ; preds = %10428
  %10439 = getelementptr %struct.mxl5005s_state, ptr %10414, i32 0, i32 21, i32 %10420, i32 2, i32 %10429
  %10440 = load i16, ptr %10439, align 2
  %10441 = and i16 %10440, 255
  br label %10442

10442:                                            ; preds = %10456, %10438
  %10443 = phi i32 [ 0, %10438 ], [ %10457, %10456 ]
  %10444 = getelementptr %struct.mxl5005s_state, ptr %10433, i32 0, i32 25, i32 %10443
  %10445 = load i16, ptr %10444, align 2
  %10446 = icmp eq i16 %10445, %10441
  br i1 %10446, label %10447, label %10456

10447:                                            ; preds = %10442
  %10448 = and i16 %10432, 255
  %10449 = zext i16 %10448 to i32
  %10450 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10449
  %10451 = load i8, ptr %10450, align 1
  %10452 = zext i8 %10451 to i16
  %10453 = getelementptr %struct.mxl5005s_state, ptr %10433, i32 0, i32 25, i32 %10443, i32 1
  %10454 = load i16, ptr %10453, align 2
  %10455 = and i16 %10454, %10452
  store i16 %10455, ptr %10453, align 2
  br label %10459

10456:                                            ; preds = %10442
  %10457 = add nuw nsw i32 %10443, 1
  %10458 = icmp eq i32 %10457, %10436
  br i1 %10458, label %10459, label %10442

10459:                                            ; preds = %10456, %10447, %10428
  %10460 = add nuw nsw i32 %10429, 1
  %10461 = load i16, ptr %10425, align 2
  %10462 = zext i16 %10461 to i32
  %10463 = icmp ult i32 %10460, %10462
  br i1 %10463, label %10428, label %10464

10464:                                            ; preds = %10459
  %10465 = load i16, ptr %10415, align 2
  br label %10466

10466:                                            ; preds = %10464, %10424, %10418
  %10467 = phi i16 [ %10465, %10464 ], [ %10419, %10424 ], [ %10419, %10418 ]
  %10468 = add nuw nsw i32 %10420, 1
  %10469 = zext i16 %10467 to i32
  %10470 = icmp ult i32 %10468, %10469
  br i1 %10470, label %10418, label %10471

10471:                                            ; preds = %10466, %10413
  %10472 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10473 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %10474 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %10475 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %10476 = load i32, ptr %5, align 4
  br label %10477

10477:                                            ; preds = %10471, %10349
  %10478 = phi i32 [ %10476, %10471 ], [ %10350, %10349 ]
  %10479 = add i32 %10478, -560000000
  %10480 = icmp ult i32 %10479, 20000000
  br i1 %10480, label %10481, label %10489

10481:                                            ; preds = %10477
  %10482 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %10483 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %10484 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10485 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %10486 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %10487 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %10488 = load i32, ptr %5, align 4
  br label %10489

10489:                                            ; preds = %10481, %10477
  %10490 = phi i32 [ %10488, %10481 ], [ %10478, %10477 ]
  %10491 = add i32 %10490, -580000000
  %10492 = icmp ult i32 %10491, 50000000
  br i1 %10492, label %10493, label %10501

10493:                                            ; preds = %10489
  %10494 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %10495 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %10496 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10497 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %10498 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %10499 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %10500 = load i32, ptr %5, align 4
  br label %10501

10501:                                            ; preds = %10493, %10489
  %10502 = phi i32 [ %10500, %10493 ], [ %10490, %10489 ]
  %10503 = add i32 %10502, -630000000
  %10504 = icmp ult i32 %10503, 70000000
  br i1 %10504, label %10505, label %10627

10505:                                            ; preds = %10501
  %10506 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %10507 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %10508 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10509 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %10510 = load ptr, ptr %3, align 4
  %10511 = getelementptr inbounds %struct.mxl5005s_state, ptr %10510, i32 0, i32 18
  %10512 = load i16, ptr %10511, align 4
  %10513 = icmp eq i16 %10512, 0
  br i1 %10513, label %10569, label %10514

10514:                                            ; preds = %10562, %10505
  %10515 = phi i16 [ %10563, %10562 ], [ %10512, %10505 ]
  %10516 = phi i32 [ %10564, %10562 ], [ 0, %10505 ]
  %10517 = getelementptr %struct.mxl5005s_state, ptr %10510, i32 0, i32 19, i32 %10516
  %10518 = load i16, ptr %10517, align 2
  %10519 = icmp eq i16 %10518, 82
  br i1 %10519, label %10520, label %10562

10520:                                            ; preds = %10514
  %10521 = getelementptr %struct.mxl5005s_state, ptr %10510, i32 0, i32 19, i32 %10516, i32 1
  %10522 = load i16, ptr %10521, align 2
  %10523 = icmp eq i16 %10522, 0
  br i1 %10523, label %10562, label %10524

10524:                                            ; preds = %10555, %10520
  %10525 = phi i32 [ %10556, %10555 ], [ 0, %10520 ]
  %10526 = getelementptr %struct.mxl5005s_state, ptr %10510, i32 0, i32 19, i32 %10516, i32 4, i32 %10525
  store i16 0, ptr %10526, align 2
  %10527 = getelementptr %struct.mxl5005s_state, ptr %10510, i32 0, i32 19, i32 %10516, i32 3, i32 %10525
  %10528 = load i16, ptr %10527, align 2
  %10529 = load ptr, ptr %3, align 4
  %10530 = getelementptr inbounds %struct.mxl5005s_state, ptr %10529, i32 0, i32 24
  %10531 = load i16, ptr %10530, align 4
  %10532 = zext i16 %10531 to i32
  %10533 = icmp eq i16 %10531, 0
  br i1 %10533, label %10555, label %10534

10534:                                            ; preds = %10524
  %10535 = getelementptr %struct.mxl5005s_state, ptr %10510, i32 0, i32 19, i32 %10516, i32 2, i32 %10525
  %10536 = load i16, ptr %10535, align 2
  %10537 = and i16 %10536, 255
  br label %10538

10538:                                            ; preds = %10552, %10534
  %10539 = phi i32 [ 0, %10534 ], [ %10553, %10552 ]
  %10540 = getelementptr %struct.mxl5005s_state, ptr %10529, i32 0, i32 25, i32 %10539
  %10541 = load i16, ptr %10540, align 2
  %10542 = icmp eq i16 %10541, %10537
  br i1 %10542, label %10543, label %10552

10543:                                            ; preds = %10538
  %10544 = and i16 %10528, 255
  %10545 = zext i16 %10544 to i32
  %10546 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10545
  %10547 = load i8, ptr %10546, align 1
  %10548 = zext i8 %10547 to i16
  %10549 = getelementptr %struct.mxl5005s_state, ptr %10529, i32 0, i32 25, i32 %10539, i32 1
  %10550 = load i16, ptr %10549, align 2
  %10551 = and i16 %10550, %10548
  store i16 %10551, ptr %10549, align 2
  br label %10555

10552:                                            ; preds = %10538
  %10553 = add nuw nsw i32 %10539, 1
  %10554 = icmp eq i32 %10553, %10532
  br i1 %10554, label %10555, label %10538

10555:                                            ; preds = %10552, %10543, %10524
  %10556 = add nuw nsw i32 %10525, 1
  %10557 = load i16, ptr %10521, align 2
  %10558 = zext i16 %10557 to i32
  %10559 = icmp ult i32 %10556, %10558
  br i1 %10559, label %10524, label %10560

10560:                                            ; preds = %10555
  %10561 = load i16, ptr %10511, align 4
  br label %10562

10562:                                            ; preds = %10560, %10520, %10514
  %10563 = phi i16 [ %10561, %10560 ], [ %10515, %10520 ], [ %10515, %10514 ]
  %10564 = add nuw nsw i32 %10516, 1
  %10565 = zext i16 %10563 to i32
  %10566 = icmp ult i32 %10564, %10565
  br i1 %10566, label %10514, label %10567

10567:                                            ; preds = %10562
  %10568 = load ptr, ptr %3, align 4
  br label %10569

10569:                                            ; preds = %10567, %10505
  %10570 = phi ptr [ %10568, %10567 ], [ %10510, %10505 ]
  %10571 = getelementptr inbounds %struct.mxl5005s_state, ptr %10570, i32 0, i32 20
  %10572 = load i16, ptr %10571, align 2
  %10573 = icmp eq i16 %10572, 0
  br i1 %10573, label %10627, label %10574

10574:                                            ; preds = %10622, %10569
  %10575 = phi i16 [ %10623, %10622 ], [ %10572, %10569 ]
  %10576 = phi i32 [ %10624, %10622 ], [ 0, %10569 ]
  %10577 = getelementptr %struct.mxl5005s_state, ptr %10570, i32 0, i32 21, i32 %10576
  %10578 = load i16, ptr %10577, align 2
  %10579 = icmp eq i16 %10578, 82
  br i1 %10579, label %10580, label %10622

10580:                                            ; preds = %10574
  %10581 = getelementptr %struct.mxl5005s_state, ptr %10570, i32 0, i32 21, i32 %10576, i32 1
  %10582 = load i16, ptr %10581, align 2
  %10583 = icmp eq i16 %10582, 0
  br i1 %10583, label %10622, label %10584

10584:                                            ; preds = %10615, %10580
  %10585 = phi i32 [ %10616, %10615 ], [ 0, %10580 ]
  %10586 = getelementptr %struct.mxl5005s_state, ptr %10570, i32 0, i32 21, i32 %10576, i32 4, i32 %10585
  store i16 0, ptr %10586, align 2
  %10587 = getelementptr %struct.mxl5005s_state, ptr %10570, i32 0, i32 21, i32 %10576, i32 3, i32 %10585
  %10588 = load i16, ptr %10587, align 2
  %10589 = load ptr, ptr %3, align 4
  %10590 = getelementptr inbounds %struct.mxl5005s_state, ptr %10589, i32 0, i32 24
  %10591 = load i16, ptr %10590, align 4
  %10592 = zext i16 %10591 to i32
  %10593 = icmp eq i16 %10591, 0
  br i1 %10593, label %10615, label %10594

10594:                                            ; preds = %10584
  %10595 = getelementptr %struct.mxl5005s_state, ptr %10570, i32 0, i32 21, i32 %10576, i32 2, i32 %10585
  %10596 = load i16, ptr %10595, align 2
  %10597 = and i16 %10596, 255
  br label %10598

10598:                                            ; preds = %10612, %10594
  %10599 = phi i32 [ 0, %10594 ], [ %10613, %10612 ]
  %10600 = getelementptr %struct.mxl5005s_state, ptr %10589, i32 0, i32 25, i32 %10599
  %10601 = load i16, ptr %10600, align 2
  %10602 = icmp eq i16 %10601, %10597
  br i1 %10602, label %10603, label %10612

10603:                                            ; preds = %10598
  %10604 = and i16 %10588, 255
  %10605 = zext i16 %10604 to i32
  %10606 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10605
  %10607 = load i8, ptr %10606, align 1
  %10608 = zext i8 %10607 to i16
  %10609 = getelementptr %struct.mxl5005s_state, ptr %10589, i32 0, i32 25, i32 %10599, i32 1
  %10610 = load i16, ptr %10609, align 2
  %10611 = and i16 %10610, %10608
  store i16 %10611, ptr %10609, align 2
  br label %10615

10612:                                            ; preds = %10598
  %10613 = add nuw nsw i32 %10599, 1
  %10614 = icmp eq i32 %10613, %10592
  br i1 %10614, label %10615, label %10598

10615:                                            ; preds = %10612, %10603, %10584
  %10616 = add nuw nsw i32 %10585, 1
  %10617 = load i16, ptr %10581, align 2
  %10618 = zext i16 %10617 to i32
  %10619 = icmp ult i32 %10616, %10618
  br i1 %10619, label %10584, label %10620

10620:                                            ; preds = %10615
  %10621 = load i16, ptr %10571, align 2
  br label %10622

10622:                                            ; preds = %10620, %10580, %10574
  %10623 = phi i16 [ %10621, %10620 ], [ %10575, %10580 ], [ %10575, %10574 ]
  %10624 = add nuw nsw i32 %10576, 1
  %10625 = zext i16 %10623 to i32
  %10626 = icmp ult i32 %10624, %10625
  br i1 %10626, label %10574, label %10627

10627:                                            ; preds = %10622, %10569, %10501
  %10628 = load i32, ptr %5, align 4
  %10629 = add i32 %10628, -700000000
  %10630 = icmp ult i32 %10629, 60000000
  br i1 %10630, label %10631, label %10753

10631:                                            ; preds = %10627
  %10632 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %10633 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %10634 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10635 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %10636 = load ptr, ptr %3, align 4
  %10637 = getelementptr inbounds %struct.mxl5005s_state, ptr %10636, i32 0, i32 18
  %10638 = load i16, ptr %10637, align 4
  %10639 = icmp eq i16 %10638, 0
  br i1 %10639, label %10695, label %10640

10640:                                            ; preds = %10688, %10631
  %10641 = phi i16 [ %10689, %10688 ], [ %10638, %10631 ]
  %10642 = phi i32 [ %10690, %10688 ], [ 0, %10631 ]
  %10643 = getelementptr %struct.mxl5005s_state, ptr %10636, i32 0, i32 19, i32 %10642
  %10644 = load i16, ptr %10643, align 2
  %10645 = icmp eq i16 %10644, 82
  br i1 %10645, label %10646, label %10688

10646:                                            ; preds = %10640
  %10647 = getelementptr %struct.mxl5005s_state, ptr %10636, i32 0, i32 19, i32 %10642, i32 1
  %10648 = load i16, ptr %10647, align 2
  %10649 = icmp eq i16 %10648, 0
  br i1 %10649, label %10688, label %10650

10650:                                            ; preds = %10681, %10646
  %10651 = phi i32 [ %10682, %10681 ], [ 0, %10646 ]
  %10652 = getelementptr %struct.mxl5005s_state, ptr %10636, i32 0, i32 19, i32 %10642, i32 4, i32 %10651
  store i16 0, ptr %10652, align 2
  %10653 = getelementptr %struct.mxl5005s_state, ptr %10636, i32 0, i32 19, i32 %10642, i32 3, i32 %10651
  %10654 = load i16, ptr %10653, align 2
  %10655 = load ptr, ptr %3, align 4
  %10656 = getelementptr inbounds %struct.mxl5005s_state, ptr %10655, i32 0, i32 24
  %10657 = load i16, ptr %10656, align 4
  %10658 = zext i16 %10657 to i32
  %10659 = icmp eq i16 %10657, 0
  br i1 %10659, label %10681, label %10660

10660:                                            ; preds = %10650
  %10661 = getelementptr %struct.mxl5005s_state, ptr %10636, i32 0, i32 19, i32 %10642, i32 2, i32 %10651
  %10662 = load i16, ptr %10661, align 2
  %10663 = and i16 %10662, 255
  br label %10664

10664:                                            ; preds = %10678, %10660
  %10665 = phi i32 [ 0, %10660 ], [ %10679, %10678 ]
  %10666 = getelementptr %struct.mxl5005s_state, ptr %10655, i32 0, i32 25, i32 %10665
  %10667 = load i16, ptr %10666, align 2
  %10668 = icmp eq i16 %10667, %10663
  br i1 %10668, label %10669, label %10678

10669:                                            ; preds = %10664
  %10670 = and i16 %10654, 255
  %10671 = zext i16 %10670 to i32
  %10672 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10671
  %10673 = load i8, ptr %10672, align 1
  %10674 = zext i8 %10673 to i16
  %10675 = getelementptr %struct.mxl5005s_state, ptr %10655, i32 0, i32 25, i32 %10665, i32 1
  %10676 = load i16, ptr %10675, align 2
  %10677 = and i16 %10676, %10674
  store i16 %10677, ptr %10675, align 2
  br label %10681

10678:                                            ; preds = %10664
  %10679 = add nuw nsw i32 %10665, 1
  %10680 = icmp eq i32 %10679, %10658
  br i1 %10680, label %10681, label %10664

10681:                                            ; preds = %10678, %10669, %10650
  %10682 = add nuw nsw i32 %10651, 1
  %10683 = load i16, ptr %10647, align 2
  %10684 = zext i16 %10683 to i32
  %10685 = icmp ult i32 %10682, %10684
  br i1 %10685, label %10650, label %10686

10686:                                            ; preds = %10681
  %10687 = load i16, ptr %10637, align 4
  br label %10688

10688:                                            ; preds = %10686, %10646, %10640
  %10689 = phi i16 [ %10687, %10686 ], [ %10641, %10646 ], [ %10641, %10640 ]
  %10690 = add nuw nsw i32 %10642, 1
  %10691 = zext i16 %10689 to i32
  %10692 = icmp ult i32 %10690, %10691
  br i1 %10692, label %10640, label %10693

10693:                                            ; preds = %10688
  %10694 = load ptr, ptr %3, align 4
  br label %10695

10695:                                            ; preds = %10693, %10631
  %10696 = phi ptr [ %10694, %10693 ], [ %10636, %10631 ]
  %10697 = getelementptr inbounds %struct.mxl5005s_state, ptr %10696, i32 0, i32 20
  %10698 = load i16, ptr %10697, align 2
  %10699 = icmp eq i16 %10698, 0
  br i1 %10699, label %10753, label %10700

10700:                                            ; preds = %10748, %10695
  %10701 = phi i16 [ %10749, %10748 ], [ %10698, %10695 ]
  %10702 = phi i32 [ %10750, %10748 ], [ 0, %10695 ]
  %10703 = getelementptr %struct.mxl5005s_state, ptr %10696, i32 0, i32 21, i32 %10702
  %10704 = load i16, ptr %10703, align 2
  %10705 = icmp eq i16 %10704, 82
  br i1 %10705, label %10706, label %10748

10706:                                            ; preds = %10700
  %10707 = getelementptr %struct.mxl5005s_state, ptr %10696, i32 0, i32 21, i32 %10702, i32 1
  %10708 = load i16, ptr %10707, align 2
  %10709 = icmp eq i16 %10708, 0
  br i1 %10709, label %10748, label %10710

10710:                                            ; preds = %10741, %10706
  %10711 = phi i32 [ %10742, %10741 ], [ 0, %10706 ]
  %10712 = getelementptr %struct.mxl5005s_state, ptr %10696, i32 0, i32 21, i32 %10702, i32 4, i32 %10711
  store i16 0, ptr %10712, align 2
  %10713 = getelementptr %struct.mxl5005s_state, ptr %10696, i32 0, i32 21, i32 %10702, i32 3, i32 %10711
  %10714 = load i16, ptr %10713, align 2
  %10715 = load ptr, ptr %3, align 4
  %10716 = getelementptr inbounds %struct.mxl5005s_state, ptr %10715, i32 0, i32 24
  %10717 = load i16, ptr %10716, align 4
  %10718 = zext i16 %10717 to i32
  %10719 = icmp eq i16 %10717, 0
  br i1 %10719, label %10741, label %10720

10720:                                            ; preds = %10710
  %10721 = getelementptr %struct.mxl5005s_state, ptr %10696, i32 0, i32 21, i32 %10702, i32 2, i32 %10711
  %10722 = load i16, ptr %10721, align 2
  %10723 = and i16 %10722, 255
  br label %10724

10724:                                            ; preds = %10738, %10720
  %10725 = phi i32 [ 0, %10720 ], [ %10739, %10738 ]
  %10726 = getelementptr %struct.mxl5005s_state, ptr %10715, i32 0, i32 25, i32 %10725
  %10727 = load i16, ptr %10726, align 2
  %10728 = icmp eq i16 %10727, %10723
  br i1 %10728, label %10729, label %10738

10729:                                            ; preds = %10724
  %10730 = and i16 %10714, 255
  %10731 = zext i16 %10730 to i32
  %10732 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10731
  %10733 = load i8, ptr %10732, align 1
  %10734 = zext i8 %10733 to i16
  %10735 = getelementptr %struct.mxl5005s_state, ptr %10715, i32 0, i32 25, i32 %10725, i32 1
  %10736 = load i16, ptr %10735, align 2
  %10737 = and i16 %10736, %10734
  store i16 %10737, ptr %10735, align 2
  br label %10741

10738:                                            ; preds = %10724
  %10739 = add nuw nsw i32 %10725, 1
  %10740 = icmp eq i32 %10739, %10718
  br i1 %10740, label %10741, label %10724

10741:                                            ; preds = %10738, %10729, %10710
  %10742 = add nuw nsw i32 %10711, 1
  %10743 = load i16, ptr %10707, align 2
  %10744 = zext i16 %10743 to i32
  %10745 = icmp ult i32 %10742, %10744
  br i1 %10745, label %10710, label %10746

10746:                                            ; preds = %10741
  %10747 = load i16, ptr %10697, align 2
  br label %10748

10748:                                            ; preds = %10746, %10706, %10700
  %10749 = phi i16 [ %10747, %10746 ], [ %10701, %10706 ], [ %10701, %10700 ]
  %10750 = add nuw nsw i32 %10702, 1
  %10751 = zext i16 %10749 to i32
  %10752 = icmp ult i32 %10750, %10751
  br i1 %10752, label %10700, label %10753

10753:                                            ; preds = %10748, %10695, %10627
  %10754 = load i32, ptr %5, align 4
  %10755 = add i32 %10754, -760000000
  %10756 = icmp ult i32 %10755, 140000001
  br i1 %10756, label %10757, label %10879

10757:                                            ; preds = %10753
  %10758 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %10759 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %10760 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %10761 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %10762 = load ptr, ptr %3, align 4
  %10763 = getelementptr inbounds %struct.mxl5005s_state, ptr %10762, i32 0, i32 18
  %10764 = load i16, ptr %10763, align 4
  %10765 = icmp eq i16 %10764, 0
  br i1 %10765, label %10821, label %10766

10766:                                            ; preds = %10814, %10757
  %10767 = phi i16 [ %10815, %10814 ], [ %10764, %10757 ]
  %10768 = phi i32 [ %10816, %10814 ], [ 0, %10757 ]
  %10769 = getelementptr %struct.mxl5005s_state, ptr %10762, i32 0, i32 19, i32 %10768
  %10770 = load i16, ptr %10769, align 2
  %10771 = icmp eq i16 %10770, 82
  br i1 %10771, label %10772, label %10814

10772:                                            ; preds = %10766
  %10773 = getelementptr %struct.mxl5005s_state, ptr %10762, i32 0, i32 19, i32 %10768, i32 1
  %10774 = load i16, ptr %10773, align 2
  %10775 = icmp eq i16 %10774, 0
  br i1 %10775, label %10814, label %10776

10776:                                            ; preds = %10807, %10772
  %10777 = phi i32 [ %10808, %10807 ], [ 0, %10772 ]
  %10778 = getelementptr %struct.mxl5005s_state, ptr %10762, i32 0, i32 19, i32 %10768, i32 4, i32 %10777
  store i16 0, ptr %10778, align 2
  %10779 = getelementptr %struct.mxl5005s_state, ptr %10762, i32 0, i32 19, i32 %10768, i32 3, i32 %10777
  %10780 = load i16, ptr %10779, align 2
  %10781 = load ptr, ptr %3, align 4
  %10782 = getelementptr inbounds %struct.mxl5005s_state, ptr %10781, i32 0, i32 24
  %10783 = load i16, ptr %10782, align 4
  %10784 = zext i16 %10783 to i32
  %10785 = icmp eq i16 %10783, 0
  br i1 %10785, label %10807, label %10786

10786:                                            ; preds = %10776
  %10787 = getelementptr %struct.mxl5005s_state, ptr %10762, i32 0, i32 19, i32 %10768, i32 2, i32 %10777
  %10788 = load i16, ptr %10787, align 2
  %10789 = and i16 %10788, 255
  br label %10790

10790:                                            ; preds = %10804, %10786
  %10791 = phi i32 [ 0, %10786 ], [ %10805, %10804 ]
  %10792 = getelementptr %struct.mxl5005s_state, ptr %10781, i32 0, i32 25, i32 %10791
  %10793 = load i16, ptr %10792, align 2
  %10794 = icmp eq i16 %10793, %10789
  br i1 %10794, label %10795, label %10804

10795:                                            ; preds = %10790
  %10796 = and i16 %10780, 255
  %10797 = zext i16 %10796 to i32
  %10798 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10797
  %10799 = load i8, ptr %10798, align 1
  %10800 = zext i8 %10799 to i16
  %10801 = getelementptr %struct.mxl5005s_state, ptr %10781, i32 0, i32 25, i32 %10791, i32 1
  %10802 = load i16, ptr %10801, align 2
  %10803 = and i16 %10802, %10800
  store i16 %10803, ptr %10801, align 2
  br label %10807

10804:                                            ; preds = %10790
  %10805 = add nuw nsw i32 %10791, 1
  %10806 = icmp eq i32 %10805, %10784
  br i1 %10806, label %10807, label %10790

10807:                                            ; preds = %10804, %10795, %10776
  %10808 = add nuw nsw i32 %10777, 1
  %10809 = load i16, ptr %10773, align 2
  %10810 = zext i16 %10809 to i32
  %10811 = icmp ult i32 %10808, %10810
  br i1 %10811, label %10776, label %10812

10812:                                            ; preds = %10807
  %10813 = load i16, ptr %10763, align 4
  br label %10814

10814:                                            ; preds = %10812, %10772, %10766
  %10815 = phi i16 [ %10813, %10812 ], [ %10767, %10772 ], [ %10767, %10766 ]
  %10816 = add nuw nsw i32 %10768, 1
  %10817 = zext i16 %10815 to i32
  %10818 = icmp ult i32 %10816, %10817
  br i1 %10818, label %10766, label %10819

10819:                                            ; preds = %10814
  %10820 = load ptr, ptr %3, align 4
  br label %10821

10821:                                            ; preds = %10819, %10757
  %10822 = phi ptr [ %10820, %10819 ], [ %10762, %10757 ]
  %10823 = getelementptr inbounds %struct.mxl5005s_state, ptr %10822, i32 0, i32 20
  %10824 = load i16, ptr %10823, align 2
  %10825 = icmp eq i16 %10824, 0
  br i1 %10825, label %10879, label %10826

10826:                                            ; preds = %10874, %10821
  %10827 = phi i16 [ %10875, %10874 ], [ %10824, %10821 ]
  %10828 = phi i32 [ %10876, %10874 ], [ 0, %10821 ]
  %10829 = getelementptr %struct.mxl5005s_state, ptr %10822, i32 0, i32 21, i32 %10828
  %10830 = load i16, ptr %10829, align 2
  %10831 = icmp eq i16 %10830, 82
  br i1 %10831, label %10832, label %10874

10832:                                            ; preds = %10826
  %10833 = getelementptr %struct.mxl5005s_state, ptr %10822, i32 0, i32 21, i32 %10828, i32 1
  %10834 = load i16, ptr %10833, align 2
  %10835 = icmp eq i16 %10834, 0
  br i1 %10835, label %10874, label %10836

10836:                                            ; preds = %10867, %10832
  %10837 = phi i32 [ %10868, %10867 ], [ 0, %10832 ]
  %10838 = getelementptr %struct.mxl5005s_state, ptr %10822, i32 0, i32 21, i32 %10828, i32 4, i32 %10837
  store i16 0, ptr %10838, align 2
  %10839 = getelementptr %struct.mxl5005s_state, ptr %10822, i32 0, i32 21, i32 %10828, i32 3, i32 %10837
  %10840 = load i16, ptr %10839, align 2
  %10841 = load ptr, ptr %3, align 4
  %10842 = getelementptr inbounds %struct.mxl5005s_state, ptr %10841, i32 0, i32 24
  %10843 = load i16, ptr %10842, align 4
  %10844 = zext i16 %10843 to i32
  %10845 = icmp eq i16 %10843, 0
  br i1 %10845, label %10867, label %10846

10846:                                            ; preds = %10836
  %10847 = getelementptr %struct.mxl5005s_state, ptr %10822, i32 0, i32 21, i32 %10828, i32 2, i32 %10837
  %10848 = load i16, ptr %10847, align 2
  %10849 = and i16 %10848, 255
  br label %10850

10850:                                            ; preds = %10864, %10846
  %10851 = phi i32 [ 0, %10846 ], [ %10865, %10864 ]
  %10852 = getelementptr %struct.mxl5005s_state, ptr %10841, i32 0, i32 25, i32 %10851
  %10853 = load i16, ptr %10852, align 2
  %10854 = icmp eq i16 %10853, %10849
  br i1 %10854, label %10855, label %10864

10855:                                            ; preds = %10850
  %10856 = and i16 %10840, 255
  %10857 = zext i16 %10856 to i32
  %10858 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10857
  %10859 = load i8, ptr %10858, align 1
  %10860 = zext i8 %10859 to i16
  %10861 = getelementptr %struct.mxl5005s_state, ptr %10841, i32 0, i32 25, i32 %10851, i32 1
  %10862 = load i16, ptr %10861, align 2
  %10863 = and i16 %10862, %10860
  store i16 %10863, ptr %10861, align 2
  br label %10867

10864:                                            ; preds = %10850
  %10865 = add nuw nsw i32 %10851, 1
  %10866 = icmp eq i32 %10865, %10844
  br i1 %10866, label %10867, label %10850

10867:                                            ; preds = %10864, %10855, %10836
  %10868 = add nuw nsw i32 %10837, 1
  %10869 = load i16, ptr %10833, align 2
  %10870 = zext i16 %10869 to i32
  %10871 = icmp ult i32 %10868, %10870
  br i1 %10871, label %10836, label %10872

10872:                                            ; preds = %10867
  %10873 = load i16, ptr %10823, align 2
  br label %10874

10874:                                            ; preds = %10872, %10832, %10826
  %10875 = phi i16 [ %10873, %10872 ], [ %10827, %10832 ], [ %10827, %10826 ]
  %10876 = add nuw nsw i32 %10828, 1
  %10877 = zext i16 %10875 to i32
  %10878 = icmp ult i32 %10876, %10877
  br i1 %10878, label %10826, label %10879

10879:                                            ; preds = %10874, %10821, %10753
  %10880 = load i8, ptr %7001, align 1
  br label %10881

10881:                                            ; preds = %10879, %9607
  %10882 = phi i8 [ %10880, %10879 ], [ %9608, %9607 ]
  %10883 = icmp eq i8 %10882, 4
  br i1 %10883, label %10884, label %12144

10884:                                            ; preds = %10881
  %10885 = load ptr, ptr %3, align 4
  %10886 = getelementptr inbounds %struct.mxl5005s_state, ptr %10885, i32 0, i32 18
  %10887 = load i16, ptr %10886, align 4
  %10888 = icmp eq i16 %10887, 0
  br i1 %10888, label %10944, label %10889

10889:                                            ; preds = %10937, %10884
  %10890 = phi i16 [ %10938, %10937 ], [ %10887, %10884 ]
  %10891 = phi i32 [ %10939, %10937 ], [ 0, %10884 ]
  %10892 = getelementptr %struct.mxl5005s_state, ptr %10885, i32 0, i32 19, i32 %10891
  %10893 = load i16, ptr %10892, align 2
  %10894 = icmp eq i16 %10893, 86
  br i1 %10894, label %10895, label %10937

10895:                                            ; preds = %10889
  %10896 = getelementptr %struct.mxl5005s_state, ptr %10885, i32 0, i32 19, i32 %10891, i32 1
  %10897 = load i16, ptr %10896, align 2
  %10898 = icmp eq i16 %10897, 0
  br i1 %10898, label %10937, label %10899

10899:                                            ; preds = %10930, %10895
  %10900 = phi i32 [ %10931, %10930 ], [ 0, %10895 ]
  %10901 = getelementptr %struct.mxl5005s_state, ptr %10885, i32 0, i32 19, i32 %10891, i32 4, i32 %10900
  store i16 0, ptr %10901, align 2
  %10902 = getelementptr %struct.mxl5005s_state, ptr %10885, i32 0, i32 19, i32 %10891, i32 3, i32 %10900
  %10903 = load i16, ptr %10902, align 2
  %10904 = load ptr, ptr %3, align 4
  %10905 = getelementptr inbounds %struct.mxl5005s_state, ptr %10904, i32 0, i32 24
  %10906 = load i16, ptr %10905, align 4
  %10907 = zext i16 %10906 to i32
  %10908 = icmp eq i16 %10906, 0
  br i1 %10908, label %10930, label %10909

10909:                                            ; preds = %10899
  %10910 = getelementptr %struct.mxl5005s_state, ptr %10885, i32 0, i32 19, i32 %10891, i32 2, i32 %10900
  %10911 = load i16, ptr %10910, align 2
  %10912 = and i16 %10911, 255
  br label %10913

10913:                                            ; preds = %10927, %10909
  %10914 = phi i32 [ 0, %10909 ], [ %10928, %10927 ]
  %10915 = getelementptr %struct.mxl5005s_state, ptr %10904, i32 0, i32 25, i32 %10914
  %10916 = load i16, ptr %10915, align 2
  %10917 = icmp eq i16 %10916, %10912
  br i1 %10917, label %10918, label %10927

10918:                                            ; preds = %10913
  %10919 = and i16 %10903, 255
  %10920 = zext i16 %10919 to i32
  %10921 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10920
  %10922 = load i8, ptr %10921, align 1
  %10923 = zext i8 %10922 to i16
  %10924 = getelementptr %struct.mxl5005s_state, ptr %10904, i32 0, i32 25, i32 %10914, i32 1
  %10925 = load i16, ptr %10924, align 2
  %10926 = and i16 %10925, %10923
  store i16 %10926, ptr %10924, align 2
  br label %10930

10927:                                            ; preds = %10913
  %10928 = add nuw nsw i32 %10914, 1
  %10929 = icmp eq i32 %10928, %10907
  br i1 %10929, label %10930, label %10913

10930:                                            ; preds = %10927, %10918, %10899
  %10931 = add nuw nsw i32 %10900, 1
  %10932 = load i16, ptr %10896, align 2
  %10933 = zext i16 %10932 to i32
  %10934 = icmp ult i32 %10931, %10933
  br i1 %10934, label %10899, label %10935

10935:                                            ; preds = %10930
  %10936 = load i16, ptr %10886, align 4
  br label %10937

10937:                                            ; preds = %10935, %10895, %10889
  %10938 = phi i16 [ %10936, %10935 ], [ %10890, %10895 ], [ %10890, %10889 ]
  %10939 = add nuw nsw i32 %10891, 1
  %10940 = zext i16 %10938 to i32
  %10941 = icmp ult i32 %10939, %10940
  br i1 %10941, label %10889, label %10942

10942:                                            ; preds = %10937
  %10943 = load ptr, ptr %3, align 4
  br label %10944

10944:                                            ; preds = %10942, %10884
  %10945 = phi ptr [ %10943, %10942 ], [ %10885, %10884 ]
  %10946 = getelementptr inbounds %struct.mxl5005s_state, ptr %10945, i32 0, i32 20
  %10947 = load i16, ptr %10946, align 2
  %10948 = icmp eq i16 %10947, 0
  br i1 %10948, label %11002, label %10949

10949:                                            ; preds = %10997, %10944
  %10950 = phi i16 [ %10998, %10997 ], [ %10947, %10944 ]
  %10951 = phi i32 [ %10999, %10997 ], [ 0, %10944 ]
  %10952 = getelementptr %struct.mxl5005s_state, ptr %10945, i32 0, i32 21, i32 %10951
  %10953 = load i16, ptr %10952, align 2
  %10954 = icmp eq i16 %10953, 86
  br i1 %10954, label %10955, label %10997

10955:                                            ; preds = %10949
  %10956 = getelementptr %struct.mxl5005s_state, ptr %10945, i32 0, i32 21, i32 %10951, i32 1
  %10957 = load i16, ptr %10956, align 2
  %10958 = icmp eq i16 %10957, 0
  br i1 %10958, label %10997, label %10959

10959:                                            ; preds = %10990, %10955
  %10960 = phi i32 [ %10991, %10990 ], [ 0, %10955 ]
  %10961 = getelementptr %struct.mxl5005s_state, ptr %10945, i32 0, i32 21, i32 %10951, i32 4, i32 %10960
  store i16 0, ptr %10961, align 2
  %10962 = getelementptr %struct.mxl5005s_state, ptr %10945, i32 0, i32 21, i32 %10951, i32 3, i32 %10960
  %10963 = load i16, ptr %10962, align 2
  %10964 = load ptr, ptr %3, align 4
  %10965 = getelementptr inbounds %struct.mxl5005s_state, ptr %10964, i32 0, i32 24
  %10966 = load i16, ptr %10965, align 4
  %10967 = zext i16 %10966 to i32
  %10968 = icmp eq i16 %10966, 0
  br i1 %10968, label %10990, label %10969

10969:                                            ; preds = %10959
  %10970 = getelementptr %struct.mxl5005s_state, ptr %10945, i32 0, i32 21, i32 %10951, i32 2, i32 %10960
  %10971 = load i16, ptr %10970, align 2
  %10972 = and i16 %10971, 255
  br label %10973

10973:                                            ; preds = %10987, %10969
  %10974 = phi i32 [ 0, %10969 ], [ %10988, %10987 ]
  %10975 = getelementptr %struct.mxl5005s_state, ptr %10964, i32 0, i32 25, i32 %10974
  %10976 = load i16, ptr %10975, align 2
  %10977 = icmp eq i16 %10976, %10972
  br i1 %10977, label %10978, label %10987

10978:                                            ; preds = %10973
  %10979 = and i16 %10963, 255
  %10980 = zext i16 %10979 to i32
  %10981 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %10980
  %10982 = load i8, ptr %10981, align 1
  %10983 = zext i8 %10982 to i16
  %10984 = getelementptr %struct.mxl5005s_state, ptr %10964, i32 0, i32 25, i32 %10974, i32 1
  %10985 = load i16, ptr %10984, align 2
  %10986 = and i16 %10985, %10983
  store i16 %10986, ptr %10984, align 2
  br label %10990

10987:                                            ; preds = %10973
  %10988 = add nuw nsw i32 %10974, 1
  %10989 = icmp eq i32 %10988, %10967
  br i1 %10989, label %10990, label %10973

10990:                                            ; preds = %10987, %10978, %10959
  %10991 = add nuw nsw i32 %10960, 1
  %10992 = load i16, ptr %10956, align 2
  %10993 = zext i16 %10992 to i32
  %10994 = icmp ult i32 %10991, %10993
  br i1 %10994, label %10959, label %10995

10995:                                            ; preds = %10990
  %10996 = load i16, ptr %10946, align 2
  br label %10997

10997:                                            ; preds = %10995, %10955, %10949
  %10998 = phi i16 [ %10996, %10995 ], [ %10950, %10955 ], [ %10950, %10949 ]
  %10999 = add nuw nsw i32 %10951, 1
  %11000 = zext i16 %10998 to i32
  %11001 = icmp ult i32 %10999, %11000
  br i1 %11001, label %10949, label %11002

11002:                                            ; preds = %10997, %10944
  %11003 = load i32, ptr %5, align 4
  %11004 = add i32 %11003, -43000000
  %11005 = icmp ult i32 %11004, 131000000
  br i1 %11005, label %11006, label %11249

11006:                                            ; preds = %11002
  %11007 = load ptr, ptr %3, align 4
  %11008 = getelementptr inbounds %struct.mxl5005s_state, ptr %11007, i32 0, i32 18
  %11009 = load i16, ptr %11008, align 4
  %11010 = icmp eq i16 %11009, 0
  br i1 %11010, label %11066, label %11011

11011:                                            ; preds = %11059, %11006
  %11012 = phi i16 [ %11060, %11059 ], [ %11009, %11006 ]
  %11013 = phi i32 [ %11061, %11059 ], [ 0, %11006 ]
  %11014 = getelementptr %struct.mxl5005s_state, ptr %11007, i32 0, i32 19, i32 %11013
  %11015 = load i16, ptr %11014, align 2
  %11016 = icmp eq i16 %11015, 84
  br i1 %11016, label %11017, label %11059

11017:                                            ; preds = %11011
  %11018 = getelementptr %struct.mxl5005s_state, ptr %11007, i32 0, i32 19, i32 %11013, i32 1
  %11019 = load i16, ptr %11018, align 2
  %11020 = icmp eq i16 %11019, 0
  br i1 %11020, label %11059, label %11021

11021:                                            ; preds = %11052, %11017
  %11022 = phi i32 [ %11053, %11052 ], [ 0, %11017 ]
  %11023 = getelementptr %struct.mxl5005s_state, ptr %11007, i32 0, i32 19, i32 %11013, i32 4, i32 %11022
  store i16 0, ptr %11023, align 2
  %11024 = getelementptr %struct.mxl5005s_state, ptr %11007, i32 0, i32 19, i32 %11013, i32 3, i32 %11022
  %11025 = load i16, ptr %11024, align 2
  %11026 = load ptr, ptr %3, align 4
  %11027 = getelementptr inbounds %struct.mxl5005s_state, ptr %11026, i32 0, i32 24
  %11028 = load i16, ptr %11027, align 4
  %11029 = zext i16 %11028 to i32
  %11030 = icmp eq i16 %11028, 0
  br i1 %11030, label %11052, label %11031

11031:                                            ; preds = %11021
  %11032 = getelementptr %struct.mxl5005s_state, ptr %11007, i32 0, i32 19, i32 %11013, i32 2, i32 %11022
  %11033 = load i16, ptr %11032, align 2
  %11034 = and i16 %11033, 255
  br label %11035

11035:                                            ; preds = %11049, %11031
  %11036 = phi i32 [ 0, %11031 ], [ %11050, %11049 ]
  %11037 = getelementptr %struct.mxl5005s_state, ptr %11026, i32 0, i32 25, i32 %11036
  %11038 = load i16, ptr %11037, align 2
  %11039 = icmp eq i16 %11038, %11034
  br i1 %11039, label %11040, label %11049

11040:                                            ; preds = %11035
  %11041 = and i16 %11025, 255
  %11042 = zext i16 %11041 to i32
  %11043 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11042
  %11044 = load i8, ptr %11043, align 1
  %11045 = zext i8 %11044 to i16
  %11046 = getelementptr %struct.mxl5005s_state, ptr %11026, i32 0, i32 25, i32 %11036, i32 1
  %11047 = load i16, ptr %11046, align 2
  %11048 = and i16 %11047, %11045
  store i16 %11048, ptr %11046, align 2
  br label %11052

11049:                                            ; preds = %11035
  %11050 = add nuw nsw i32 %11036, 1
  %11051 = icmp eq i32 %11050, %11029
  br i1 %11051, label %11052, label %11035

11052:                                            ; preds = %11049, %11040, %11021
  %11053 = add nuw nsw i32 %11022, 1
  %11054 = load i16, ptr %11018, align 2
  %11055 = zext i16 %11054 to i32
  %11056 = icmp ult i32 %11053, %11055
  br i1 %11056, label %11021, label %11057

11057:                                            ; preds = %11052
  %11058 = load i16, ptr %11008, align 4
  br label %11059

11059:                                            ; preds = %11057, %11017, %11011
  %11060 = phi i16 [ %11058, %11057 ], [ %11012, %11017 ], [ %11012, %11011 ]
  %11061 = add nuw nsw i32 %11013, 1
  %11062 = zext i16 %11060 to i32
  %11063 = icmp ult i32 %11061, %11062
  br i1 %11063, label %11011, label %11064

11064:                                            ; preds = %11059
  %11065 = load ptr, ptr %3, align 4
  br label %11066

11066:                                            ; preds = %11064, %11006
  %11067 = phi ptr [ %11065, %11064 ], [ %11007, %11006 ]
  %11068 = getelementptr inbounds %struct.mxl5005s_state, ptr %11067, i32 0, i32 20
  %11069 = load i16, ptr %11068, align 2
  %11070 = icmp eq i16 %11069, 0
  br i1 %11070, label %11124, label %11071

11071:                                            ; preds = %11119, %11066
  %11072 = phi i16 [ %11120, %11119 ], [ %11069, %11066 ]
  %11073 = phi i32 [ %11121, %11119 ], [ 0, %11066 ]
  %11074 = getelementptr %struct.mxl5005s_state, ptr %11067, i32 0, i32 21, i32 %11073
  %11075 = load i16, ptr %11074, align 2
  %11076 = icmp eq i16 %11075, 84
  br i1 %11076, label %11077, label %11119

11077:                                            ; preds = %11071
  %11078 = getelementptr %struct.mxl5005s_state, ptr %11067, i32 0, i32 21, i32 %11073, i32 1
  %11079 = load i16, ptr %11078, align 2
  %11080 = icmp eq i16 %11079, 0
  br i1 %11080, label %11119, label %11081

11081:                                            ; preds = %11112, %11077
  %11082 = phi i32 [ %11113, %11112 ], [ 0, %11077 ]
  %11083 = getelementptr %struct.mxl5005s_state, ptr %11067, i32 0, i32 21, i32 %11073, i32 4, i32 %11082
  store i16 0, ptr %11083, align 2
  %11084 = getelementptr %struct.mxl5005s_state, ptr %11067, i32 0, i32 21, i32 %11073, i32 3, i32 %11082
  %11085 = load i16, ptr %11084, align 2
  %11086 = load ptr, ptr %3, align 4
  %11087 = getelementptr inbounds %struct.mxl5005s_state, ptr %11086, i32 0, i32 24
  %11088 = load i16, ptr %11087, align 4
  %11089 = zext i16 %11088 to i32
  %11090 = icmp eq i16 %11088, 0
  br i1 %11090, label %11112, label %11091

11091:                                            ; preds = %11081
  %11092 = getelementptr %struct.mxl5005s_state, ptr %11067, i32 0, i32 21, i32 %11073, i32 2, i32 %11082
  %11093 = load i16, ptr %11092, align 2
  %11094 = and i16 %11093, 255
  br label %11095

11095:                                            ; preds = %11109, %11091
  %11096 = phi i32 [ 0, %11091 ], [ %11110, %11109 ]
  %11097 = getelementptr %struct.mxl5005s_state, ptr %11086, i32 0, i32 25, i32 %11096
  %11098 = load i16, ptr %11097, align 2
  %11099 = icmp eq i16 %11098, %11094
  br i1 %11099, label %11100, label %11109

11100:                                            ; preds = %11095
  %11101 = and i16 %11085, 255
  %11102 = zext i16 %11101 to i32
  %11103 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11102
  %11104 = load i8, ptr %11103, align 1
  %11105 = zext i8 %11104 to i16
  %11106 = getelementptr %struct.mxl5005s_state, ptr %11086, i32 0, i32 25, i32 %11096, i32 1
  %11107 = load i16, ptr %11106, align 2
  %11108 = and i16 %11107, %11105
  store i16 %11108, ptr %11106, align 2
  br label %11112

11109:                                            ; preds = %11095
  %11110 = add nuw nsw i32 %11096, 1
  %11111 = icmp eq i32 %11110, %11089
  br i1 %11111, label %11112, label %11095

11112:                                            ; preds = %11109, %11100, %11081
  %11113 = add nuw nsw i32 %11082, 1
  %11114 = load i16, ptr %11078, align 2
  %11115 = zext i16 %11114 to i32
  %11116 = icmp ult i32 %11113, %11115
  br i1 %11116, label %11081, label %11117

11117:                                            ; preds = %11112
  %11118 = load i16, ptr %11068, align 2
  br label %11119

11119:                                            ; preds = %11117, %11077, %11071
  %11120 = phi i16 [ %11118, %11117 ], [ %11072, %11077 ], [ %11072, %11071 ]
  %11121 = add nuw nsw i32 %11073, 1
  %11122 = zext i16 %11120 to i32
  %11123 = icmp ult i32 %11121, %11122
  br i1 %11123, label %11071, label %11124

11124:                                            ; preds = %11119, %11066
  %11125 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %11126 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %11127 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %11128 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %11129 = load ptr, ptr %3, align 4
  %11130 = getelementptr inbounds %struct.mxl5005s_state, ptr %11129, i32 0, i32 18
  %11131 = load i16, ptr %11130, align 4
  %11132 = icmp eq i16 %11131, 0
  br i1 %11132, label %11188, label %11133

11133:                                            ; preds = %11181, %11124
  %11134 = phi i16 [ %11182, %11181 ], [ %11131, %11124 ]
  %11135 = phi i32 [ %11183, %11181 ], [ 0, %11124 ]
  %11136 = getelementptr %struct.mxl5005s_state, ptr %11129, i32 0, i32 19, i32 %11135
  %11137 = load i16, ptr %11136, align 2
  %11138 = icmp eq i16 %11137, 82
  br i1 %11138, label %11139, label %11181

11139:                                            ; preds = %11133
  %11140 = getelementptr %struct.mxl5005s_state, ptr %11129, i32 0, i32 19, i32 %11135, i32 1
  %11141 = load i16, ptr %11140, align 2
  %11142 = icmp eq i16 %11141, 0
  br i1 %11142, label %11181, label %11143

11143:                                            ; preds = %11174, %11139
  %11144 = phi i32 [ %11175, %11174 ], [ 0, %11139 ]
  %11145 = getelementptr %struct.mxl5005s_state, ptr %11129, i32 0, i32 19, i32 %11135, i32 4, i32 %11144
  store i16 0, ptr %11145, align 2
  %11146 = getelementptr %struct.mxl5005s_state, ptr %11129, i32 0, i32 19, i32 %11135, i32 3, i32 %11144
  %11147 = load i16, ptr %11146, align 2
  %11148 = load ptr, ptr %3, align 4
  %11149 = getelementptr inbounds %struct.mxl5005s_state, ptr %11148, i32 0, i32 24
  %11150 = load i16, ptr %11149, align 4
  %11151 = zext i16 %11150 to i32
  %11152 = icmp eq i16 %11150, 0
  br i1 %11152, label %11174, label %11153

11153:                                            ; preds = %11143
  %11154 = getelementptr %struct.mxl5005s_state, ptr %11129, i32 0, i32 19, i32 %11135, i32 2, i32 %11144
  %11155 = load i16, ptr %11154, align 2
  %11156 = and i16 %11155, 255
  br label %11157

11157:                                            ; preds = %11171, %11153
  %11158 = phi i32 [ 0, %11153 ], [ %11172, %11171 ]
  %11159 = getelementptr %struct.mxl5005s_state, ptr %11148, i32 0, i32 25, i32 %11158
  %11160 = load i16, ptr %11159, align 2
  %11161 = icmp eq i16 %11160, %11156
  br i1 %11161, label %11162, label %11171

11162:                                            ; preds = %11157
  %11163 = and i16 %11147, 255
  %11164 = zext i16 %11163 to i32
  %11165 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11164
  %11166 = load i8, ptr %11165, align 1
  %11167 = zext i8 %11166 to i16
  %11168 = getelementptr %struct.mxl5005s_state, ptr %11148, i32 0, i32 25, i32 %11158, i32 1
  %11169 = load i16, ptr %11168, align 2
  %11170 = and i16 %11169, %11167
  store i16 %11170, ptr %11168, align 2
  br label %11174

11171:                                            ; preds = %11157
  %11172 = add nuw nsw i32 %11158, 1
  %11173 = icmp eq i32 %11172, %11151
  br i1 %11173, label %11174, label %11157

11174:                                            ; preds = %11171, %11162, %11143
  %11175 = add nuw nsw i32 %11144, 1
  %11176 = load i16, ptr %11140, align 2
  %11177 = zext i16 %11176 to i32
  %11178 = icmp ult i32 %11175, %11177
  br i1 %11178, label %11143, label %11179

11179:                                            ; preds = %11174
  %11180 = load i16, ptr %11130, align 4
  br label %11181

11181:                                            ; preds = %11179, %11139, %11133
  %11182 = phi i16 [ %11180, %11179 ], [ %11134, %11139 ], [ %11134, %11133 ]
  %11183 = add nuw nsw i32 %11135, 1
  %11184 = zext i16 %11182 to i32
  %11185 = icmp ult i32 %11183, %11184
  br i1 %11185, label %11133, label %11186

11186:                                            ; preds = %11181
  %11187 = load ptr, ptr %3, align 4
  br label %11188

11188:                                            ; preds = %11186, %11124
  %11189 = phi ptr [ %11187, %11186 ], [ %11129, %11124 ]
  %11190 = getelementptr inbounds %struct.mxl5005s_state, ptr %11189, i32 0, i32 20
  %11191 = load i16, ptr %11190, align 2
  %11192 = icmp eq i16 %11191, 0
  br i1 %11192, label %11246, label %11193

11193:                                            ; preds = %11241, %11188
  %11194 = phi i16 [ %11242, %11241 ], [ %11191, %11188 ]
  %11195 = phi i32 [ %11243, %11241 ], [ 0, %11188 ]
  %11196 = getelementptr %struct.mxl5005s_state, ptr %11189, i32 0, i32 21, i32 %11195
  %11197 = load i16, ptr %11196, align 2
  %11198 = icmp eq i16 %11197, 82
  br i1 %11198, label %11199, label %11241

11199:                                            ; preds = %11193
  %11200 = getelementptr %struct.mxl5005s_state, ptr %11189, i32 0, i32 21, i32 %11195, i32 1
  %11201 = load i16, ptr %11200, align 2
  %11202 = icmp eq i16 %11201, 0
  br i1 %11202, label %11241, label %11203

11203:                                            ; preds = %11234, %11199
  %11204 = phi i32 [ %11235, %11234 ], [ 0, %11199 ]
  %11205 = getelementptr %struct.mxl5005s_state, ptr %11189, i32 0, i32 21, i32 %11195, i32 4, i32 %11204
  store i16 0, ptr %11205, align 2
  %11206 = getelementptr %struct.mxl5005s_state, ptr %11189, i32 0, i32 21, i32 %11195, i32 3, i32 %11204
  %11207 = load i16, ptr %11206, align 2
  %11208 = load ptr, ptr %3, align 4
  %11209 = getelementptr inbounds %struct.mxl5005s_state, ptr %11208, i32 0, i32 24
  %11210 = load i16, ptr %11209, align 4
  %11211 = zext i16 %11210 to i32
  %11212 = icmp eq i16 %11210, 0
  br i1 %11212, label %11234, label %11213

11213:                                            ; preds = %11203
  %11214 = getelementptr %struct.mxl5005s_state, ptr %11189, i32 0, i32 21, i32 %11195, i32 2, i32 %11204
  %11215 = load i16, ptr %11214, align 2
  %11216 = and i16 %11215, 255
  br label %11217

11217:                                            ; preds = %11231, %11213
  %11218 = phi i32 [ 0, %11213 ], [ %11232, %11231 ]
  %11219 = getelementptr %struct.mxl5005s_state, ptr %11208, i32 0, i32 25, i32 %11218
  %11220 = load i16, ptr %11219, align 2
  %11221 = icmp eq i16 %11220, %11216
  br i1 %11221, label %11222, label %11231

11222:                                            ; preds = %11217
  %11223 = and i16 %11207, 255
  %11224 = zext i16 %11223 to i32
  %11225 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11224
  %11226 = load i8, ptr %11225, align 1
  %11227 = zext i8 %11226 to i16
  %11228 = getelementptr %struct.mxl5005s_state, ptr %11208, i32 0, i32 25, i32 %11218, i32 1
  %11229 = load i16, ptr %11228, align 2
  %11230 = and i16 %11229, %11227
  store i16 %11230, ptr %11228, align 2
  br label %11234

11231:                                            ; preds = %11217
  %11232 = add nuw nsw i32 %11218, 1
  %11233 = icmp eq i32 %11232, %11211
  br i1 %11233, label %11234, label %11217

11234:                                            ; preds = %11231, %11222, %11203
  %11235 = add nuw nsw i32 %11204, 1
  %11236 = load i16, ptr %11200, align 2
  %11237 = zext i16 %11236 to i32
  %11238 = icmp ult i32 %11235, %11237
  br i1 %11238, label %11203, label %11239

11239:                                            ; preds = %11234
  %11240 = load i16, ptr %11190, align 2
  br label %11241

11241:                                            ; preds = %11239, %11199, %11193
  %11242 = phi i16 [ %11240, %11239 ], [ %11194, %11199 ], [ %11194, %11193 ]
  %11243 = add nuw nsw i32 %11195, 1
  %11244 = zext i16 %11242 to i32
  %11245 = icmp ult i32 %11243, %11244
  br i1 %11245, label %11193, label %11246

11246:                                            ; preds = %11241, %11188
  %11247 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %11248 = load i32, ptr %5, align 4
  br label %11249

11249:                                            ; preds = %11246, %11002
  %11250 = phi i32 [ %11248, %11246 ], [ %11003, %11002 ]
  %11251 = add i32 %11250, -174000000
  %11252 = icmp ult i32 %11251, 76000000
  br i1 %11252, label %11253, label %11380

11253:                                            ; preds = %11249
  %11254 = load ptr, ptr %3, align 4
  %11255 = getelementptr inbounds %struct.mxl5005s_state, ptr %11254, i32 0, i32 18
  %11256 = load i16, ptr %11255, align 4
  %11257 = icmp eq i16 %11256, 0
  br i1 %11257, label %11313, label %11258

11258:                                            ; preds = %11306, %11253
  %11259 = phi i16 [ %11307, %11306 ], [ %11256, %11253 ]
  %11260 = phi i32 [ %11308, %11306 ], [ 0, %11253 ]
  %11261 = getelementptr %struct.mxl5005s_state, ptr %11254, i32 0, i32 19, i32 %11260
  %11262 = load i16, ptr %11261, align 2
  %11263 = icmp eq i16 %11262, 84
  br i1 %11263, label %11264, label %11306

11264:                                            ; preds = %11258
  %11265 = getelementptr %struct.mxl5005s_state, ptr %11254, i32 0, i32 19, i32 %11260, i32 1
  %11266 = load i16, ptr %11265, align 2
  %11267 = icmp eq i16 %11266, 0
  br i1 %11267, label %11306, label %11268

11268:                                            ; preds = %11299, %11264
  %11269 = phi i32 [ %11300, %11299 ], [ 0, %11264 ]
  %11270 = getelementptr %struct.mxl5005s_state, ptr %11254, i32 0, i32 19, i32 %11260, i32 4, i32 %11269
  store i16 0, ptr %11270, align 2
  %11271 = getelementptr %struct.mxl5005s_state, ptr %11254, i32 0, i32 19, i32 %11260, i32 3, i32 %11269
  %11272 = load i16, ptr %11271, align 2
  %11273 = load ptr, ptr %3, align 4
  %11274 = getelementptr inbounds %struct.mxl5005s_state, ptr %11273, i32 0, i32 24
  %11275 = load i16, ptr %11274, align 4
  %11276 = zext i16 %11275 to i32
  %11277 = icmp eq i16 %11275, 0
  br i1 %11277, label %11299, label %11278

11278:                                            ; preds = %11268
  %11279 = getelementptr %struct.mxl5005s_state, ptr %11254, i32 0, i32 19, i32 %11260, i32 2, i32 %11269
  %11280 = load i16, ptr %11279, align 2
  %11281 = and i16 %11280, 255
  br label %11282

11282:                                            ; preds = %11296, %11278
  %11283 = phi i32 [ 0, %11278 ], [ %11297, %11296 ]
  %11284 = getelementptr %struct.mxl5005s_state, ptr %11273, i32 0, i32 25, i32 %11283
  %11285 = load i16, ptr %11284, align 2
  %11286 = icmp eq i16 %11285, %11281
  br i1 %11286, label %11287, label %11296

11287:                                            ; preds = %11282
  %11288 = and i16 %11272, 255
  %11289 = zext i16 %11288 to i32
  %11290 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11289
  %11291 = load i8, ptr %11290, align 1
  %11292 = zext i8 %11291 to i16
  %11293 = getelementptr %struct.mxl5005s_state, ptr %11273, i32 0, i32 25, i32 %11283, i32 1
  %11294 = load i16, ptr %11293, align 2
  %11295 = and i16 %11294, %11292
  store i16 %11295, ptr %11293, align 2
  br label %11299

11296:                                            ; preds = %11282
  %11297 = add nuw nsw i32 %11283, 1
  %11298 = icmp eq i32 %11297, %11276
  br i1 %11298, label %11299, label %11282

11299:                                            ; preds = %11296, %11287, %11268
  %11300 = add nuw nsw i32 %11269, 1
  %11301 = load i16, ptr %11265, align 2
  %11302 = zext i16 %11301 to i32
  %11303 = icmp ult i32 %11300, %11302
  br i1 %11303, label %11268, label %11304

11304:                                            ; preds = %11299
  %11305 = load i16, ptr %11255, align 4
  br label %11306

11306:                                            ; preds = %11304, %11264, %11258
  %11307 = phi i16 [ %11305, %11304 ], [ %11259, %11264 ], [ %11259, %11258 ]
  %11308 = add nuw nsw i32 %11260, 1
  %11309 = zext i16 %11307 to i32
  %11310 = icmp ult i32 %11308, %11309
  br i1 %11310, label %11258, label %11311

11311:                                            ; preds = %11306
  %11312 = load ptr, ptr %3, align 4
  br label %11313

11313:                                            ; preds = %11311, %11253
  %11314 = phi ptr [ %11312, %11311 ], [ %11254, %11253 ]
  %11315 = getelementptr inbounds %struct.mxl5005s_state, ptr %11314, i32 0, i32 20
  %11316 = load i16, ptr %11315, align 2
  %11317 = icmp eq i16 %11316, 0
  br i1 %11317, label %11371, label %11318

11318:                                            ; preds = %11366, %11313
  %11319 = phi i16 [ %11367, %11366 ], [ %11316, %11313 ]
  %11320 = phi i32 [ %11368, %11366 ], [ 0, %11313 ]
  %11321 = getelementptr %struct.mxl5005s_state, ptr %11314, i32 0, i32 21, i32 %11320
  %11322 = load i16, ptr %11321, align 2
  %11323 = icmp eq i16 %11322, 84
  br i1 %11323, label %11324, label %11366

11324:                                            ; preds = %11318
  %11325 = getelementptr %struct.mxl5005s_state, ptr %11314, i32 0, i32 21, i32 %11320, i32 1
  %11326 = load i16, ptr %11325, align 2
  %11327 = icmp eq i16 %11326, 0
  br i1 %11327, label %11366, label %11328

11328:                                            ; preds = %11359, %11324
  %11329 = phi i32 [ %11360, %11359 ], [ 0, %11324 ]
  %11330 = getelementptr %struct.mxl5005s_state, ptr %11314, i32 0, i32 21, i32 %11320, i32 4, i32 %11329
  store i16 0, ptr %11330, align 2
  %11331 = getelementptr %struct.mxl5005s_state, ptr %11314, i32 0, i32 21, i32 %11320, i32 3, i32 %11329
  %11332 = load i16, ptr %11331, align 2
  %11333 = load ptr, ptr %3, align 4
  %11334 = getelementptr inbounds %struct.mxl5005s_state, ptr %11333, i32 0, i32 24
  %11335 = load i16, ptr %11334, align 4
  %11336 = zext i16 %11335 to i32
  %11337 = icmp eq i16 %11335, 0
  br i1 %11337, label %11359, label %11338

11338:                                            ; preds = %11328
  %11339 = getelementptr %struct.mxl5005s_state, ptr %11314, i32 0, i32 21, i32 %11320, i32 2, i32 %11329
  %11340 = load i16, ptr %11339, align 2
  %11341 = and i16 %11340, 255
  br label %11342

11342:                                            ; preds = %11356, %11338
  %11343 = phi i32 [ 0, %11338 ], [ %11357, %11356 ]
  %11344 = getelementptr %struct.mxl5005s_state, ptr %11333, i32 0, i32 25, i32 %11343
  %11345 = load i16, ptr %11344, align 2
  %11346 = icmp eq i16 %11345, %11341
  br i1 %11346, label %11347, label %11356

11347:                                            ; preds = %11342
  %11348 = and i16 %11332, 255
  %11349 = zext i16 %11348 to i32
  %11350 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11349
  %11351 = load i8, ptr %11350, align 1
  %11352 = zext i8 %11351 to i16
  %11353 = getelementptr %struct.mxl5005s_state, ptr %11333, i32 0, i32 25, i32 %11343, i32 1
  %11354 = load i16, ptr %11353, align 2
  %11355 = and i16 %11354, %11352
  store i16 %11355, ptr %11353, align 2
  br label %11359

11356:                                            ; preds = %11342
  %11357 = add nuw nsw i32 %11343, 1
  %11358 = icmp eq i32 %11357, %11336
  br i1 %11358, label %11359, label %11342

11359:                                            ; preds = %11356, %11347, %11328
  %11360 = add nuw nsw i32 %11329, 1
  %11361 = load i16, ptr %11325, align 2
  %11362 = zext i16 %11361 to i32
  %11363 = icmp ult i32 %11360, %11362
  br i1 %11363, label %11328, label %11364

11364:                                            ; preds = %11359
  %11365 = load i16, ptr %11315, align 2
  br label %11366

11366:                                            ; preds = %11364, %11324, %11318
  %11367 = phi i16 [ %11365, %11364 ], [ %11319, %11324 ], [ %11319, %11318 ]
  %11368 = add nuw nsw i32 %11320, 1
  %11369 = zext i16 %11367 to i32
  %11370 = icmp ult i32 %11368, %11369
  br i1 %11370, label %11318, label %11371

11371:                                            ; preds = %11366, %11313
  %11372 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %11373 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %11374 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %11375 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %11376 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %11377 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %11378 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %11379 = load i32, ptr %5, align 4
  br label %11380

11380:                                            ; preds = %11371, %11249
  %11381 = phi i32 [ %11379, %11371 ], [ %11250, %11249 ]
  %11382 = add i32 %11381, -250000000
  %11383 = icmp ult i32 %11382, 60000000
  br i1 %11383, label %11384, label %11508

11384:                                            ; preds = %11380
  %11385 = load ptr, ptr %3, align 4
  %11386 = getelementptr inbounds %struct.mxl5005s_state, ptr %11385, i32 0, i32 18
  %11387 = load i16, ptr %11386, align 4
  %11388 = icmp eq i16 %11387, 0
  br i1 %11388, label %11444, label %11389

11389:                                            ; preds = %11437, %11384
  %11390 = phi i16 [ %11438, %11437 ], [ %11387, %11384 ]
  %11391 = phi i32 [ %11439, %11437 ], [ 0, %11384 ]
  %11392 = getelementptr %struct.mxl5005s_state, ptr %11385, i32 0, i32 19, i32 %11391
  %11393 = load i16, ptr %11392, align 2
  %11394 = icmp eq i16 %11393, 84
  br i1 %11394, label %11395, label %11437

11395:                                            ; preds = %11389
  %11396 = getelementptr %struct.mxl5005s_state, ptr %11385, i32 0, i32 19, i32 %11391, i32 1
  %11397 = load i16, ptr %11396, align 2
  %11398 = icmp eq i16 %11397, 0
  br i1 %11398, label %11437, label %11399

11399:                                            ; preds = %11430, %11395
  %11400 = phi i32 [ %11431, %11430 ], [ 0, %11395 ]
  %11401 = getelementptr %struct.mxl5005s_state, ptr %11385, i32 0, i32 19, i32 %11391, i32 4, i32 %11400
  store i16 0, ptr %11401, align 2
  %11402 = getelementptr %struct.mxl5005s_state, ptr %11385, i32 0, i32 19, i32 %11391, i32 3, i32 %11400
  %11403 = load i16, ptr %11402, align 2
  %11404 = load ptr, ptr %3, align 4
  %11405 = getelementptr inbounds %struct.mxl5005s_state, ptr %11404, i32 0, i32 24
  %11406 = load i16, ptr %11405, align 4
  %11407 = zext i16 %11406 to i32
  %11408 = icmp eq i16 %11406, 0
  br i1 %11408, label %11430, label %11409

11409:                                            ; preds = %11399
  %11410 = getelementptr %struct.mxl5005s_state, ptr %11385, i32 0, i32 19, i32 %11391, i32 2, i32 %11400
  %11411 = load i16, ptr %11410, align 2
  %11412 = and i16 %11411, 255
  br label %11413

11413:                                            ; preds = %11427, %11409
  %11414 = phi i32 [ 0, %11409 ], [ %11428, %11427 ]
  %11415 = getelementptr %struct.mxl5005s_state, ptr %11404, i32 0, i32 25, i32 %11414
  %11416 = load i16, ptr %11415, align 2
  %11417 = icmp eq i16 %11416, %11412
  br i1 %11417, label %11418, label %11427

11418:                                            ; preds = %11413
  %11419 = and i16 %11403, 255
  %11420 = zext i16 %11419 to i32
  %11421 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11420
  %11422 = load i8, ptr %11421, align 1
  %11423 = zext i8 %11422 to i16
  %11424 = getelementptr %struct.mxl5005s_state, ptr %11404, i32 0, i32 25, i32 %11414, i32 1
  %11425 = load i16, ptr %11424, align 2
  %11426 = and i16 %11425, %11423
  store i16 %11426, ptr %11424, align 2
  br label %11430

11427:                                            ; preds = %11413
  %11428 = add nuw nsw i32 %11414, 1
  %11429 = icmp eq i32 %11428, %11407
  br i1 %11429, label %11430, label %11413

11430:                                            ; preds = %11427, %11418, %11399
  %11431 = add nuw nsw i32 %11400, 1
  %11432 = load i16, ptr %11396, align 2
  %11433 = zext i16 %11432 to i32
  %11434 = icmp ult i32 %11431, %11433
  br i1 %11434, label %11399, label %11435

11435:                                            ; preds = %11430
  %11436 = load i16, ptr %11386, align 4
  br label %11437

11437:                                            ; preds = %11435, %11395, %11389
  %11438 = phi i16 [ %11436, %11435 ], [ %11390, %11395 ], [ %11390, %11389 ]
  %11439 = add nuw nsw i32 %11391, 1
  %11440 = zext i16 %11438 to i32
  %11441 = icmp ult i32 %11439, %11440
  br i1 %11441, label %11389, label %11442

11442:                                            ; preds = %11437
  %11443 = load ptr, ptr %3, align 4
  br label %11444

11444:                                            ; preds = %11442, %11384
  %11445 = phi ptr [ %11443, %11442 ], [ %11385, %11384 ]
  %11446 = getelementptr inbounds %struct.mxl5005s_state, ptr %11445, i32 0, i32 20
  %11447 = load i16, ptr %11446, align 2
  %11448 = icmp eq i16 %11447, 0
  br i1 %11448, label %11502, label %11449

11449:                                            ; preds = %11497, %11444
  %11450 = phi i16 [ %11498, %11497 ], [ %11447, %11444 ]
  %11451 = phi i32 [ %11499, %11497 ], [ 0, %11444 ]
  %11452 = getelementptr %struct.mxl5005s_state, ptr %11445, i32 0, i32 21, i32 %11451
  %11453 = load i16, ptr %11452, align 2
  %11454 = icmp eq i16 %11453, 84
  br i1 %11454, label %11455, label %11497

11455:                                            ; preds = %11449
  %11456 = getelementptr %struct.mxl5005s_state, ptr %11445, i32 0, i32 21, i32 %11451, i32 1
  %11457 = load i16, ptr %11456, align 2
  %11458 = icmp eq i16 %11457, 0
  br i1 %11458, label %11497, label %11459

11459:                                            ; preds = %11490, %11455
  %11460 = phi i32 [ %11491, %11490 ], [ 0, %11455 ]
  %11461 = getelementptr %struct.mxl5005s_state, ptr %11445, i32 0, i32 21, i32 %11451, i32 4, i32 %11460
  store i16 0, ptr %11461, align 2
  %11462 = getelementptr %struct.mxl5005s_state, ptr %11445, i32 0, i32 21, i32 %11451, i32 3, i32 %11460
  %11463 = load i16, ptr %11462, align 2
  %11464 = load ptr, ptr %3, align 4
  %11465 = getelementptr inbounds %struct.mxl5005s_state, ptr %11464, i32 0, i32 24
  %11466 = load i16, ptr %11465, align 4
  %11467 = zext i16 %11466 to i32
  %11468 = icmp eq i16 %11466, 0
  br i1 %11468, label %11490, label %11469

11469:                                            ; preds = %11459
  %11470 = getelementptr %struct.mxl5005s_state, ptr %11445, i32 0, i32 21, i32 %11451, i32 2, i32 %11460
  %11471 = load i16, ptr %11470, align 2
  %11472 = and i16 %11471, 255
  br label %11473

11473:                                            ; preds = %11487, %11469
  %11474 = phi i32 [ 0, %11469 ], [ %11488, %11487 ]
  %11475 = getelementptr %struct.mxl5005s_state, ptr %11464, i32 0, i32 25, i32 %11474
  %11476 = load i16, ptr %11475, align 2
  %11477 = icmp eq i16 %11476, %11472
  br i1 %11477, label %11478, label %11487

11478:                                            ; preds = %11473
  %11479 = and i16 %11463, 255
  %11480 = zext i16 %11479 to i32
  %11481 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11480
  %11482 = load i8, ptr %11481, align 1
  %11483 = zext i8 %11482 to i16
  %11484 = getelementptr %struct.mxl5005s_state, ptr %11464, i32 0, i32 25, i32 %11474, i32 1
  %11485 = load i16, ptr %11484, align 2
  %11486 = and i16 %11485, %11483
  store i16 %11486, ptr %11484, align 2
  br label %11490

11487:                                            ; preds = %11473
  %11488 = add nuw nsw i32 %11474, 1
  %11489 = icmp eq i32 %11488, %11467
  br i1 %11489, label %11490, label %11473

11490:                                            ; preds = %11487, %11478, %11459
  %11491 = add nuw nsw i32 %11460, 1
  %11492 = load i16, ptr %11456, align 2
  %11493 = zext i16 %11492 to i32
  %11494 = icmp ult i32 %11491, %11493
  br i1 %11494, label %11459, label %11495

11495:                                            ; preds = %11490
  %11496 = load i16, ptr %11446, align 2
  br label %11497

11497:                                            ; preds = %11495, %11455, %11449
  %11498 = phi i16 [ %11496, %11495 ], [ %11450, %11455 ], [ %11450, %11449 ]
  %11499 = add nuw nsw i32 %11451, 1
  %11500 = zext i16 %11498 to i32
  %11501 = icmp ult i32 %11499, %11500
  br i1 %11501, label %11449, label %11502

11502:                                            ; preds = %11497, %11444
  %11503 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %11504 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %11505 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %11506 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %11507 = load i32, ptr %5, align 4
  br label %11508

11508:                                            ; preds = %11502, %11380
  %11509 = phi i32 [ %11507, %11502 ], [ %11381, %11380 ]
  %11510 = add i32 %11509, -310000000
  %11511 = icmp ult i32 %11510, 50000000
  br i1 %11511, label %11512, label %11639

11512:                                            ; preds = %11508
  %11513 = load ptr, ptr %3, align 4
  %11514 = getelementptr inbounds %struct.mxl5005s_state, ptr %11513, i32 0, i32 18
  %11515 = load i16, ptr %11514, align 4
  %11516 = icmp eq i16 %11515, 0
  br i1 %11516, label %11572, label %11517

11517:                                            ; preds = %11565, %11512
  %11518 = phi i16 [ %11566, %11565 ], [ %11515, %11512 ]
  %11519 = phi i32 [ %11567, %11565 ], [ 0, %11512 ]
  %11520 = getelementptr %struct.mxl5005s_state, ptr %11513, i32 0, i32 19, i32 %11519
  %11521 = load i16, ptr %11520, align 2
  %11522 = icmp eq i16 %11521, 84
  br i1 %11522, label %11523, label %11565

11523:                                            ; preds = %11517
  %11524 = getelementptr %struct.mxl5005s_state, ptr %11513, i32 0, i32 19, i32 %11519, i32 1
  %11525 = load i16, ptr %11524, align 2
  %11526 = icmp eq i16 %11525, 0
  br i1 %11526, label %11565, label %11527

11527:                                            ; preds = %11558, %11523
  %11528 = phi i32 [ %11559, %11558 ], [ 0, %11523 ]
  %11529 = getelementptr %struct.mxl5005s_state, ptr %11513, i32 0, i32 19, i32 %11519, i32 4, i32 %11528
  store i16 0, ptr %11529, align 2
  %11530 = getelementptr %struct.mxl5005s_state, ptr %11513, i32 0, i32 19, i32 %11519, i32 3, i32 %11528
  %11531 = load i16, ptr %11530, align 2
  %11532 = load ptr, ptr %3, align 4
  %11533 = getelementptr inbounds %struct.mxl5005s_state, ptr %11532, i32 0, i32 24
  %11534 = load i16, ptr %11533, align 4
  %11535 = zext i16 %11534 to i32
  %11536 = icmp eq i16 %11534, 0
  br i1 %11536, label %11558, label %11537

11537:                                            ; preds = %11527
  %11538 = getelementptr %struct.mxl5005s_state, ptr %11513, i32 0, i32 19, i32 %11519, i32 2, i32 %11528
  %11539 = load i16, ptr %11538, align 2
  %11540 = and i16 %11539, 255
  br label %11541

11541:                                            ; preds = %11555, %11537
  %11542 = phi i32 [ 0, %11537 ], [ %11556, %11555 ]
  %11543 = getelementptr %struct.mxl5005s_state, ptr %11532, i32 0, i32 25, i32 %11542
  %11544 = load i16, ptr %11543, align 2
  %11545 = icmp eq i16 %11544, %11540
  br i1 %11545, label %11546, label %11555

11546:                                            ; preds = %11541
  %11547 = and i16 %11531, 255
  %11548 = zext i16 %11547 to i32
  %11549 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11548
  %11550 = load i8, ptr %11549, align 1
  %11551 = zext i8 %11550 to i16
  %11552 = getelementptr %struct.mxl5005s_state, ptr %11532, i32 0, i32 25, i32 %11542, i32 1
  %11553 = load i16, ptr %11552, align 2
  %11554 = and i16 %11553, %11551
  store i16 %11554, ptr %11552, align 2
  br label %11558

11555:                                            ; preds = %11541
  %11556 = add nuw nsw i32 %11542, 1
  %11557 = icmp eq i32 %11556, %11535
  br i1 %11557, label %11558, label %11541

11558:                                            ; preds = %11555, %11546, %11527
  %11559 = add nuw nsw i32 %11528, 1
  %11560 = load i16, ptr %11524, align 2
  %11561 = zext i16 %11560 to i32
  %11562 = icmp ult i32 %11559, %11561
  br i1 %11562, label %11527, label %11563

11563:                                            ; preds = %11558
  %11564 = load i16, ptr %11514, align 4
  br label %11565

11565:                                            ; preds = %11563, %11523, %11517
  %11566 = phi i16 [ %11564, %11563 ], [ %11518, %11523 ], [ %11518, %11517 ]
  %11567 = add nuw nsw i32 %11519, 1
  %11568 = zext i16 %11566 to i32
  %11569 = icmp ult i32 %11567, %11568
  br i1 %11569, label %11517, label %11570

11570:                                            ; preds = %11565
  %11571 = load ptr, ptr %3, align 4
  br label %11572

11572:                                            ; preds = %11570, %11512
  %11573 = phi ptr [ %11571, %11570 ], [ %11513, %11512 ]
  %11574 = getelementptr inbounds %struct.mxl5005s_state, ptr %11573, i32 0, i32 20
  %11575 = load i16, ptr %11574, align 2
  %11576 = icmp eq i16 %11575, 0
  br i1 %11576, label %11630, label %11577

11577:                                            ; preds = %11625, %11572
  %11578 = phi i16 [ %11626, %11625 ], [ %11575, %11572 ]
  %11579 = phi i32 [ %11627, %11625 ], [ 0, %11572 ]
  %11580 = getelementptr %struct.mxl5005s_state, ptr %11573, i32 0, i32 21, i32 %11579
  %11581 = load i16, ptr %11580, align 2
  %11582 = icmp eq i16 %11581, 84
  br i1 %11582, label %11583, label %11625

11583:                                            ; preds = %11577
  %11584 = getelementptr %struct.mxl5005s_state, ptr %11573, i32 0, i32 21, i32 %11579, i32 1
  %11585 = load i16, ptr %11584, align 2
  %11586 = icmp eq i16 %11585, 0
  br i1 %11586, label %11625, label %11587

11587:                                            ; preds = %11618, %11583
  %11588 = phi i32 [ %11619, %11618 ], [ 0, %11583 ]
  %11589 = getelementptr %struct.mxl5005s_state, ptr %11573, i32 0, i32 21, i32 %11579, i32 4, i32 %11588
  store i16 0, ptr %11589, align 2
  %11590 = getelementptr %struct.mxl5005s_state, ptr %11573, i32 0, i32 21, i32 %11579, i32 3, i32 %11588
  %11591 = load i16, ptr %11590, align 2
  %11592 = load ptr, ptr %3, align 4
  %11593 = getelementptr inbounds %struct.mxl5005s_state, ptr %11592, i32 0, i32 24
  %11594 = load i16, ptr %11593, align 4
  %11595 = zext i16 %11594 to i32
  %11596 = icmp eq i16 %11594, 0
  br i1 %11596, label %11618, label %11597

11597:                                            ; preds = %11587
  %11598 = getelementptr %struct.mxl5005s_state, ptr %11573, i32 0, i32 21, i32 %11579, i32 2, i32 %11588
  %11599 = load i16, ptr %11598, align 2
  %11600 = and i16 %11599, 255
  br label %11601

11601:                                            ; preds = %11615, %11597
  %11602 = phi i32 [ 0, %11597 ], [ %11616, %11615 ]
  %11603 = getelementptr %struct.mxl5005s_state, ptr %11592, i32 0, i32 25, i32 %11602
  %11604 = load i16, ptr %11603, align 2
  %11605 = icmp eq i16 %11604, %11600
  br i1 %11605, label %11606, label %11615

11606:                                            ; preds = %11601
  %11607 = and i16 %11591, 255
  %11608 = zext i16 %11607 to i32
  %11609 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11608
  %11610 = load i8, ptr %11609, align 1
  %11611 = zext i8 %11610 to i16
  %11612 = getelementptr %struct.mxl5005s_state, ptr %11592, i32 0, i32 25, i32 %11602, i32 1
  %11613 = load i16, ptr %11612, align 2
  %11614 = and i16 %11613, %11611
  store i16 %11614, ptr %11612, align 2
  br label %11618

11615:                                            ; preds = %11601
  %11616 = add nuw nsw i32 %11602, 1
  %11617 = icmp eq i32 %11616, %11595
  br i1 %11617, label %11618, label %11601

11618:                                            ; preds = %11615, %11606, %11587
  %11619 = add nuw nsw i32 %11588, 1
  %11620 = load i16, ptr %11584, align 2
  %11621 = zext i16 %11620 to i32
  %11622 = icmp ult i32 %11619, %11621
  br i1 %11622, label %11587, label %11623

11623:                                            ; preds = %11618
  %11624 = load i16, ptr %11574, align 2
  br label %11625

11625:                                            ; preds = %11623, %11583, %11577
  %11626 = phi i16 [ %11624, %11623 ], [ %11578, %11583 ], [ %11578, %11577 ]
  %11627 = add nuw nsw i32 %11579, 1
  %11628 = zext i16 %11626 to i32
  %11629 = icmp ult i32 %11627, %11628
  br i1 %11629, label %11577, label %11630

11630:                                            ; preds = %11625, %11572
  %11631 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %11632 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %11633 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %11634 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %11635 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %11636 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %11637 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %11638 = load i32, ptr %5, align 4
  br label %11639

11639:                                            ; preds = %11630, %11508
  %11640 = phi i32 [ %11638, %11630 ], [ %11509, %11508 ]
  %11641 = add i32 %11640, -360000000
  %11642 = icmp ult i32 %11641, 110000000
  br i1 %11642, label %11643, label %11886

11643:                                            ; preds = %11639
  %11644 = load ptr, ptr %3, align 4
  %11645 = getelementptr inbounds %struct.mxl5005s_state, ptr %11644, i32 0, i32 18
  %11646 = load i16, ptr %11645, align 4
  %11647 = icmp eq i16 %11646, 0
  br i1 %11647, label %11703, label %11648

11648:                                            ; preds = %11696, %11643
  %11649 = phi i16 [ %11697, %11696 ], [ %11646, %11643 ]
  %11650 = phi i32 [ %11698, %11696 ], [ 0, %11643 ]
  %11651 = getelementptr %struct.mxl5005s_state, ptr %11644, i32 0, i32 19, i32 %11650
  %11652 = load i16, ptr %11651, align 2
  %11653 = icmp eq i16 %11652, 84
  br i1 %11653, label %11654, label %11696

11654:                                            ; preds = %11648
  %11655 = getelementptr %struct.mxl5005s_state, ptr %11644, i32 0, i32 19, i32 %11650, i32 1
  %11656 = load i16, ptr %11655, align 2
  %11657 = icmp eq i16 %11656, 0
  br i1 %11657, label %11696, label %11658

11658:                                            ; preds = %11689, %11654
  %11659 = phi i32 [ %11690, %11689 ], [ 0, %11654 ]
  %11660 = getelementptr %struct.mxl5005s_state, ptr %11644, i32 0, i32 19, i32 %11650, i32 4, i32 %11659
  store i16 0, ptr %11660, align 2
  %11661 = getelementptr %struct.mxl5005s_state, ptr %11644, i32 0, i32 19, i32 %11650, i32 3, i32 %11659
  %11662 = load i16, ptr %11661, align 2
  %11663 = load ptr, ptr %3, align 4
  %11664 = getelementptr inbounds %struct.mxl5005s_state, ptr %11663, i32 0, i32 24
  %11665 = load i16, ptr %11664, align 4
  %11666 = zext i16 %11665 to i32
  %11667 = icmp eq i16 %11665, 0
  br i1 %11667, label %11689, label %11668

11668:                                            ; preds = %11658
  %11669 = getelementptr %struct.mxl5005s_state, ptr %11644, i32 0, i32 19, i32 %11650, i32 2, i32 %11659
  %11670 = load i16, ptr %11669, align 2
  %11671 = and i16 %11670, 255
  br label %11672

11672:                                            ; preds = %11686, %11668
  %11673 = phi i32 [ 0, %11668 ], [ %11687, %11686 ]
  %11674 = getelementptr %struct.mxl5005s_state, ptr %11663, i32 0, i32 25, i32 %11673
  %11675 = load i16, ptr %11674, align 2
  %11676 = icmp eq i16 %11675, %11671
  br i1 %11676, label %11677, label %11686

11677:                                            ; preds = %11672
  %11678 = and i16 %11662, 255
  %11679 = zext i16 %11678 to i32
  %11680 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11679
  %11681 = load i8, ptr %11680, align 1
  %11682 = zext i8 %11681 to i16
  %11683 = getelementptr %struct.mxl5005s_state, ptr %11663, i32 0, i32 25, i32 %11673, i32 1
  %11684 = load i16, ptr %11683, align 2
  %11685 = and i16 %11684, %11682
  store i16 %11685, ptr %11683, align 2
  br label %11689

11686:                                            ; preds = %11672
  %11687 = add nuw nsw i32 %11673, 1
  %11688 = icmp eq i32 %11687, %11666
  br i1 %11688, label %11689, label %11672

11689:                                            ; preds = %11686, %11677, %11658
  %11690 = add nuw nsw i32 %11659, 1
  %11691 = load i16, ptr %11655, align 2
  %11692 = zext i16 %11691 to i32
  %11693 = icmp ult i32 %11690, %11692
  br i1 %11693, label %11658, label %11694

11694:                                            ; preds = %11689
  %11695 = load i16, ptr %11645, align 4
  br label %11696

11696:                                            ; preds = %11694, %11654, %11648
  %11697 = phi i16 [ %11695, %11694 ], [ %11649, %11654 ], [ %11649, %11648 ]
  %11698 = add nuw nsw i32 %11650, 1
  %11699 = zext i16 %11697 to i32
  %11700 = icmp ult i32 %11698, %11699
  br i1 %11700, label %11648, label %11701

11701:                                            ; preds = %11696
  %11702 = load ptr, ptr %3, align 4
  br label %11703

11703:                                            ; preds = %11701, %11643
  %11704 = phi ptr [ %11702, %11701 ], [ %11644, %11643 ]
  %11705 = getelementptr inbounds %struct.mxl5005s_state, ptr %11704, i32 0, i32 20
  %11706 = load i16, ptr %11705, align 2
  %11707 = icmp eq i16 %11706, 0
  br i1 %11707, label %11761, label %11708

11708:                                            ; preds = %11756, %11703
  %11709 = phi i16 [ %11757, %11756 ], [ %11706, %11703 ]
  %11710 = phi i32 [ %11758, %11756 ], [ 0, %11703 ]
  %11711 = getelementptr %struct.mxl5005s_state, ptr %11704, i32 0, i32 21, i32 %11710
  %11712 = load i16, ptr %11711, align 2
  %11713 = icmp eq i16 %11712, 84
  br i1 %11713, label %11714, label %11756

11714:                                            ; preds = %11708
  %11715 = getelementptr %struct.mxl5005s_state, ptr %11704, i32 0, i32 21, i32 %11710, i32 1
  %11716 = load i16, ptr %11715, align 2
  %11717 = icmp eq i16 %11716, 0
  br i1 %11717, label %11756, label %11718

11718:                                            ; preds = %11749, %11714
  %11719 = phi i32 [ %11750, %11749 ], [ 0, %11714 ]
  %11720 = getelementptr %struct.mxl5005s_state, ptr %11704, i32 0, i32 21, i32 %11710, i32 4, i32 %11719
  store i16 0, ptr %11720, align 2
  %11721 = getelementptr %struct.mxl5005s_state, ptr %11704, i32 0, i32 21, i32 %11710, i32 3, i32 %11719
  %11722 = load i16, ptr %11721, align 2
  %11723 = load ptr, ptr %3, align 4
  %11724 = getelementptr inbounds %struct.mxl5005s_state, ptr %11723, i32 0, i32 24
  %11725 = load i16, ptr %11724, align 4
  %11726 = zext i16 %11725 to i32
  %11727 = icmp eq i16 %11725, 0
  br i1 %11727, label %11749, label %11728

11728:                                            ; preds = %11718
  %11729 = getelementptr %struct.mxl5005s_state, ptr %11704, i32 0, i32 21, i32 %11710, i32 2, i32 %11719
  %11730 = load i16, ptr %11729, align 2
  %11731 = and i16 %11730, 255
  br label %11732

11732:                                            ; preds = %11746, %11728
  %11733 = phi i32 [ 0, %11728 ], [ %11747, %11746 ]
  %11734 = getelementptr %struct.mxl5005s_state, ptr %11723, i32 0, i32 25, i32 %11733
  %11735 = load i16, ptr %11734, align 2
  %11736 = icmp eq i16 %11735, %11731
  br i1 %11736, label %11737, label %11746

11737:                                            ; preds = %11732
  %11738 = and i16 %11722, 255
  %11739 = zext i16 %11738 to i32
  %11740 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11739
  %11741 = load i8, ptr %11740, align 1
  %11742 = zext i8 %11741 to i16
  %11743 = getelementptr %struct.mxl5005s_state, ptr %11723, i32 0, i32 25, i32 %11733, i32 1
  %11744 = load i16, ptr %11743, align 2
  %11745 = and i16 %11744, %11742
  store i16 %11745, ptr %11743, align 2
  br label %11749

11746:                                            ; preds = %11732
  %11747 = add nuw nsw i32 %11733, 1
  %11748 = icmp eq i32 %11747, %11726
  br i1 %11748, label %11749, label %11732

11749:                                            ; preds = %11746, %11737, %11718
  %11750 = add nuw nsw i32 %11719, 1
  %11751 = load i16, ptr %11715, align 2
  %11752 = zext i16 %11751 to i32
  %11753 = icmp ult i32 %11750, %11752
  br i1 %11753, label %11718, label %11754

11754:                                            ; preds = %11749
  %11755 = load i16, ptr %11705, align 2
  br label %11756

11756:                                            ; preds = %11754, %11714, %11708
  %11757 = phi i16 [ %11755, %11754 ], [ %11709, %11714 ], [ %11709, %11708 ]
  %11758 = add nuw nsw i32 %11710, 1
  %11759 = zext i16 %11757 to i32
  %11760 = icmp ult i32 %11758, %11759
  br i1 %11760, label %11708, label %11761

11761:                                            ; preds = %11756, %11703
  %11762 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %11763 = load ptr, ptr %3, align 4
  %11764 = getelementptr inbounds %struct.mxl5005s_state, ptr %11763, i32 0, i32 18
  %11765 = load i16, ptr %11764, align 4
  %11766 = icmp eq i16 %11765, 0
  br i1 %11766, label %11822, label %11767

11767:                                            ; preds = %11815, %11761
  %11768 = phi i16 [ %11816, %11815 ], [ %11765, %11761 ]
  %11769 = phi i32 [ %11817, %11815 ], [ 0, %11761 ]
  %11770 = getelementptr %struct.mxl5005s_state, ptr %11763, i32 0, i32 19, i32 %11769
  %11771 = load i16, ptr %11770, align 2
  %11772 = icmp eq i16 %11771, 82
  br i1 %11772, label %11773, label %11815

11773:                                            ; preds = %11767
  %11774 = getelementptr %struct.mxl5005s_state, ptr %11763, i32 0, i32 19, i32 %11769, i32 1
  %11775 = load i16, ptr %11774, align 2
  %11776 = icmp eq i16 %11775, 0
  br i1 %11776, label %11815, label %11777

11777:                                            ; preds = %11808, %11773
  %11778 = phi i32 [ %11809, %11808 ], [ 0, %11773 ]
  %11779 = getelementptr %struct.mxl5005s_state, ptr %11763, i32 0, i32 19, i32 %11769, i32 4, i32 %11778
  store i16 0, ptr %11779, align 2
  %11780 = getelementptr %struct.mxl5005s_state, ptr %11763, i32 0, i32 19, i32 %11769, i32 3, i32 %11778
  %11781 = load i16, ptr %11780, align 2
  %11782 = load ptr, ptr %3, align 4
  %11783 = getelementptr inbounds %struct.mxl5005s_state, ptr %11782, i32 0, i32 24
  %11784 = load i16, ptr %11783, align 4
  %11785 = zext i16 %11784 to i32
  %11786 = icmp eq i16 %11784, 0
  br i1 %11786, label %11808, label %11787

11787:                                            ; preds = %11777
  %11788 = getelementptr %struct.mxl5005s_state, ptr %11763, i32 0, i32 19, i32 %11769, i32 2, i32 %11778
  %11789 = load i16, ptr %11788, align 2
  %11790 = and i16 %11789, 255
  br label %11791

11791:                                            ; preds = %11805, %11787
  %11792 = phi i32 [ 0, %11787 ], [ %11806, %11805 ]
  %11793 = getelementptr %struct.mxl5005s_state, ptr %11782, i32 0, i32 25, i32 %11792
  %11794 = load i16, ptr %11793, align 2
  %11795 = icmp eq i16 %11794, %11790
  br i1 %11795, label %11796, label %11805

11796:                                            ; preds = %11791
  %11797 = and i16 %11781, 255
  %11798 = zext i16 %11797 to i32
  %11799 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11798
  %11800 = load i8, ptr %11799, align 1
  %11801 = zext i8 %11800 to i16
  %11802 = getelementptr %struct.mxl5005s_state, ptr %11782, i32 0, i32 25, i32 %11792, i32 1
  %11803 = load i16, ptr %11802, align 2
  %11804 = and i16 %11803, %11801
  store i16 %11804, ptr %11802, align 2
  br label %11808

11805:                                            ; preds = %11791
  %11806 = add nuw nsw i32 %11792, 1
  %11807 = icmp eq i32 %11806, %11785
  br i1 %11807, label %11808, label %11791

11808:                                            ; preds = %11805, %11796, %11777
  %11809 = add nuw nsw i32 %11778, 1
  %11810 = load i16, ptr %11774, align 2
  %11811 = zext i16 %11810 to i32
  %11812 = icmp ult i32 %11809, %11811
  br i1 %11812, label %11777, label %11813

11813:                                            ; preds = %11808
  %11814 = load i16, ptr %11764, align 4
  br label %11815

11815:                                            ; preds = %11813, %11773, %11767
  %11816 = phi i16 [ %11814, %11813 ], [ %11768, %11773 ], [ %11768, %11767 ]
  %11817 = add nuw nsw i32 %11769, 1
  %11818 = zext i16 %11816 to i32
  %11819 = icmp ult i32 %11817, %11818
  br i1 %11819, label %11767, label %11820

11820:                                            ; preds = %11815
  %11821 = load ptr, ptr %3, align 4
  br label %11822

11822:                                            ; preds = %11820, %11761
  %11823 = phi ptr [ %11821, %11820 ], [ %11763, %11761 ]
  %11824 = getelementptr inbounds %struct.mxl5005s_state, ptr %11823, i32 0, i32 20
  %11825 = load i16, ptr %11824, align 2
  %11826 = icmp eq i16 %11825, 0
  br i1 %11826, label %11880, label %11827

11827:                                            ; preds = %11875, %11822
  %11828 = phi i16 [ %11876, %11875 ], [ %11825, %11822 ]
  %11829 = phi i32 [ %11877, %11875 ], [ 0, %11822 ]
  %11830 = getelementptr %struct.mxl5005s_state, ptr %11823, i32 0, i32 21, i32 %11829
  %11831 = load i16, ptr %11830, align 2
  %11832 = icmp eq i16 %11831, 82
  br i1 %11832, label %11833, label %11875

11833:                                            ; preds = %11827
  %11834 = getelementptr %struct.mxl5005s_state, ptr %11823, i32 0, i32 21, i32 %11829, i32 1
  %11835 = load i16, ptr %11834, align 2
  %11836 = icmp eq i16 %11835, 0
  br i1 %11836, label %11875, label %11837

11837:                                            ; preds = %11868, %11833
  %11838 = phi i32 [ %11869, %11868 ], [ 0, %11833 ]
  %11839 = getelementptr %struct.mxl5005s_state, ptr %11823, i32 0, i32 21, i32 %11829, i32 4, i32 %11838
  store i16 0, ptr %11839, align 2
  %11840 = getelementptr %struct.mxl5005s_state, ptr %11823, i32 0, i32 21, i32 %11829, i32 3, i32 %11838
  %11841 = load i16, ptr %11840, align 2
  %11842 = load ptr, ptr %3, align 4
  %11843 = getelementptr inbounds %struct.mxl5005s_state, ptr %11842, i32 0, i32 24
  %11844 = load i16, ptr %11843, align 4
  %11845 = zext i16 %11844 to i32
  %11846 = icmp eq i16 %11844, 0
  br i1 %11846, label %11868, label %11847

11847:                                            ; preds = %11837
  %11848 = getelementptr %struct.mxl5005s_state, ptr %11823, i32 0, i32 21, i32 %11829, i32 2, i32 %11838
  %11849 = load i16, ptr %11848, align 2
  %11850 = and i16 %11849, 255
  br label %11851

11851:                                            ; preds = %11865, %11847
  %11852 = phi i32 [ 0, %11847 ], [ %11866, %11865 ]
  %11853 = getelementptr %struct.mxl5005s_state, ptr %11842, i32 0, i32 25, i32 %11852
  %11854 = load i16, ptr %11853, align 2
  %11855 = icmp eq i16 %11854, %11850
  br i1 %11855, label %11856, label %11865

11856:                                            ; preds = %11851
  %11857 = and i16 %11841, 255
  %11858 = zext i16 %11857 to i32
  %11859 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11858
  %11860 = load i8, ptr %11859, align 1
  %11861 = zext i8 %11860 to i16
  %11862 = getelementptr %struct.mxl5005s_state, ptr %11842, i32 0, i32 25, i32 %11852, i32 1
  %11863 = load i16, ptr %11862, align 2
  %11864 = and i16 %11863, %11861
  store i16 %11864, ptr %11862, align 2
  br label %11868

11865:                                            ; preds = %11851
  %11866 = add nuw nsw i32 %11852, 1
  %11867 = icmp eq i32 %11866, %11845
  br i1 %11867, label %11868, label %11851

11868:                                            ; preds = %11865, %11856, %11837
  %11869 = add nuw nsw i32 %11838, 1
  %11870 = load i16, ptr %11834, align 2
  %11871 = zext i16 %11870 to i32
  %11872 = icmp ult i32 %11869, %11871
  br i1 %11872, label %11837, label %11873

11873:                                            ; preds = %11868
  %11874 = load i16, ptr %11824, align 2
  br label %11875

11875:                                            ; preds = %11873, %11833, %11827
  %11876 = phi i16 [ %11874, %11873 ], [ %11828, %11833 ], [ %11828, %11827 ]
  %11877 = add nuw nsw i32 %11829, 1
  %11878 = zext i16 %11876 to i32
  %11879 = icmp ult i32 %11877, %11878
  br i1 %11879, label %11827, label %11880

11880:                                            ; preds = %11875, %11822
  %11881 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %11882 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %11883 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %11884 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %11885 = load i32, ptr %5, align 4
  br label %11886

11886:                                            ; preds = %11880, %11639
  %11887 = phi i32 [ %11885, %11880 ], [ %11640, %11639 ]
  %11888 = add i32 %11887, -470000000
  %11889 = icmp ult i32 %11888, 170000000
  br i1 %11889, label %11890, label %12017

11890:                                            ; preds = %11886
  %11891 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %11892 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %11893 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %11894 = load ptr, ptr %3, align 4
  %11895 = getelementptr inbounds %struct.mxl5005s_state, ptr %11894, i32 0, i32 18
  %11896 = load i16, ptr %11895, align 4
  %11897 = icmp eq i16 %11896, 0
  br i1 %11897, label %11953, label %11898

11898:                                            ; preds = %11946, %11890
  %11899 = phi i16 [ %11947, %11946 ], [ %11896, %11890 ]
  %11900 = phi i32 [ %11948, %11946 ], [ 0, %11890 ]
  %11901 = getelementptr %struct.mxl5005s_state, ptr %11894, i32 0, i32 19, i32 %11900
  %11902 = load i16, ptr %11901, align 2
  %11903 = icmp eq i16 %11902, 82
  br i1 %11903, label %11904, label %11946

11904:                                            ; preds = %11898
  %11905 = getelementptr %struct.mxl5005s_state, ptr %11894, i32 0, i32 19, i32 %11900, i32 1
  %11906 = load i16, ptr %11905, align 2
  %11907 = icmp eq i16 %11906, 0
  br i1 %11907, label %11946, label %11908

11908:                                            ; preds = %11939, %11904
  %11909 = phi i32 [ %11940, %11939 ], [ 0, %11904 ]
  %11910 = getelementptr %struct.mxl5005s_state, ptr %11894, i32 0, i32 19, i32 %11900, i32 4, i32 %11909
  store i16 0, ptr %11910, align 2
  %11911 = getelementptr %struct.mxl5005s_state, ptr %11894, i32 0, i32 19, i32 %11900, i32 3, i32 %11909
  %11912 = load i16, ptr %11911, align 2
  %11913 = load ptr, ptr %3, align 4
  %11914 = getelementptr inbounds %struct.mxl5005s_state, ptr %11913, i32 0, i32 24
  %11915 = load i16, ptr %11914, align 4
  %11916 = zext i16 %11915 to i32
  %11917 = icmp eq i16 %11915, 0
  br i1 %11917, label %11939, label %11918

11918:                                            ; preds = %11908
  %11919 = getelementptr %struct.mxl5005s_state, ptr %11894, i32 0, i32 19, i32 %11900, i32 2, i32 %11909
  %11920 = load i16, ptr %11919, align 2
  %11921 = and i16 %11920, 255
  br label %11922

11922:                                            ; preds = %11936, %11918
  %11923 = phi i32 [ 0, %11918 ], [ %11937, %11936 ]
  %11924 = getelementptr %struct.mxl5005s_state, ptr %11913, i32 0, i32 25, i32 %11923
  %11925 = load i16, ptr %11924, align 2
  %11926 = icmp eq i16 %11925, %11921
  br i1 %11926, label %11927, label %11936

11927:                                            ; preds = %11922
  %11928 = and i16 %11912, 255
  %11929 = zext i16 %11928 to i32
  %11930 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11929
  %11931 = load i8, ptr %11930, align 1
  %11932 = zext i8 %11931 to i16
  %11933 = getelementptr %struct.mxl5005s_state, ptr %11913, i32 0, i32 25, i32 %11923, i32 1
  %11934 = load i16, ptr %11933, align 2
  %11935 = and i16 %11934, %11932
  store i16 %11935, ptr %11933, align 2
  br label %11939

11936:                                            ; preds = %11922
  %11937 = add nuw nsw i32 %11923, 1
  %11938 = icmp eq i32 %11937, %11916
  br i1 %11938, label %11939, label %11922

11939:                                            ; preds = %11936, %11927, %11908
  %11940 = add nuw nsw i32 %11909, 1
  %11941 = load i16, ptr %11905, align 2
  %11942 = zext i16 %11941 to i32
  %11943 = icmp ult i32 %11940, %11942
  br i1 %11943, label %11908, label %11944

11944:                                            ; preds = %11939
  %11945 = load i16, ptr %11895, align 4
  br label %11946

11946:                                            ; preds = %11944, %11904, %11898
  %11947 = phi i16 [ %11945, %11944 ], [ %11899, %11904 ], [ %11899, %11898 ]
  %11948 = add nuw nsw i32 %11900, 1
  %11949 = zext i16 %11947 to i32
  %11950 = icmp ult i32 %11948, %11949
  br i1 %11950, label %11898, label %11951

11951:                                            ; preds = %11946
  %11952 = load ptr, ptr %3, align 4
  br label %11953

11953:                                            ; preds = %11951, %11890
  %11954 = phi ptr [ %11952, %11951 ], [ %11894, %11890 ]
  %11955 = getelementptr inbounds %struct.mxl5005s_state, ptr %11954, i32 0, i32 20
  %11956 = load i16, ptr %11955, align 2
  %11957 = icmp eq i16 %11956, 0
  br i1 %11957, label %12011, label %11958

11958:                                            ; preds = %12006, %11953
  %11959 = phi i16 [ %12007, %12006 ], [ %11956, %11953 ]
  %11960 = phi i32 [ %12008, %12006 ], [ 0, %11953 ]
  %11961 = getelementptr %struct.mxl5005s_state, ptr %11954, i32 0, i32 21, i32 %11960
  %11962 = load i16, ptr %11961, align 2
  %11963 = icmp eq i16 %11962, 82
  br i1 %11963, label %11964, label %12006

11964:                                            ; preds = %11958
  %11965 = getelementptr %struct.mxl5005s_state, ptr %11954, i32 0, i32 21, i32 %11960, i32 1
  %11966 = load i16, ptr %11965, align 2
  %11967 = icmp eq i16 %11966, 0
  br i1 %11967, label %12006, label %11968

11968:                                            ; preds = %11999, %11964
  %11969 = phi i32 [ %12000, %11999 ], [ 0, %11964 ]
  %11970 = getelementptr %struct.mxl5005s_state, ptr %11954, i32 0, i32 21, i32 %11960, i32 4, i32 %11969
  store i16 0, ptr %11970, align 2
  %11971 = getelementptr %struct.mxl5005s_state, ptr %11954, i32 0, i32 21, i32 %11960, i32 3, i32 %11969
  %11972 = load i16, ptr %11971, align 2
  %11973 = load ptr, ptr %3, align 4
  %11974 = getelementptr inbounds %struct.mxl5005s_state, ptr %11973, i32 0, i32 24
  %11975 = load i16, ptr %11974, align 4
  %11976 = zext i16 %11975 to i32
  %11977 = icmp eq i16 %11975, 0
  br i1 %11977, label %11999, label %11978

11978:                                            ; preds = %11968
  %11979 = getelementptr %struct.mxl5005s_state, ptr %11954, i32 0, i32 21, i32 %11960, i32 2, i32 %11969
  %11980 = load i16, ptr %11979, align 2
  %11981 = and i16 %11980, 255
  br label %11982

11982:                                            ; preds = %11996, %11978
  %11983 = phi i32 [ 0, %11978 ], [ %11997, %11996 ]
  %11984 = getelementptr %struct.mxl5005s_state, ptr %11973, i32 0, i32 25, i32 %11983
  %11985 = load i16, ptr %11984, align 2
  %11986 = icmp eq i16 %11985, %11981
  br i1 %11986, label %11987, label %11996

11987:                                            ; preds = %11982
  %11988 = and i16 %11972, 255
  %11989 = zext i16 %11988 to i32
  %11990 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %11989
  %11991 = load i8, ptr %11990, align 1
  %11992 = zext i8 %11991 to i16
  %11993 = getelementptr %struct.mxl5005s_state, ptr %11973, i32 0, i32 25, i32 %11983, i32 1
  %11994 = load i16, ptr %11993, align 2
  %11995 = and i16 %11994, %11992
  store i16 %11995, ptr %11993, align 2
  br label %11999

11996:                                            ; preds = %11982
  %11997 = add nuw nsw i32 %11983, 1
  %11998 = icmp eq i32 %11997, %11976
  br i1 %11998, label %11999, label %11982

11999:                                            ; preds = %11996, %11987, %11968
  %12000 = add nuw nsw i32 %11969, 1
  %12001 = load i16, ptr %11965, align 2
  %12002 = zext i16 %12001 to i32
  %12003 = icmp ult i32 %12000, %12002
  br i1 %12003, label %11968, label %12004

12004:                                            ; preds = %11999
  %12005 = load i16, ptr %11955, align 2
  br label %12006

12006:                                            ; preds = %12004, %11964, %11958
  %12007 = phi i16 [ %12005, %12004 ], [ %11959, %11964 ], [ %11959, %11958 ]
  %12008 = add nuw nsw i32 %11960, 1
  %12009 = zext i16 %12007 to i32
  %12010 = icmp ult i32 %12008, %12009
  br i1 %12010, label %11958, label %12011

12011:                                            ; preds = %12006, %11953
  %12012 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %12013 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %12014 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %12015 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %12016 = load i32, ptr %5, align 4
  br label %12017

12017:                                            ; preds = %12011, %11886
  %12018 = phi i32 [ %12016, %12011 ], [ %11887, %11886 ]
  %12019 = add i32 %12018, -640000000
  %12020 = icmp ult i32 %12019, 260000001
  br i1 %12020, label %12021, label %12144

12021:                                            ; preds = %12017
  %12022 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %12023 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %12024 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %12025 = load ptr, ptr %3, align 4
  %12026 = getelementptr inbounds %struct.mxl5005s_state, ptr %12025, i32 0, i32 18
  %12027 = load i16, ptr %12026, align 4
  %12028 = icmp eq i16 %12027, 0
  br i1 %12028, label %12084, label %12029

12029:                                            ; preds = %12077, %12021
  %12030 = phi i16 [ %12078, %12077 ], [ %12027, %12021 ]
  %12031 = phi i32 [ %12079, %12077 ], [ 0, %12021 ]
  %12032 = getelementptr %struct.mxl5005s_state, ptr %12025, i32 0, i32 19, i32 %12031
  %12033 = load i16, ptr %12032, align 2
  %12034 = icmp eq i16 %12033, 82
  br i1 %12034, label %12035, label %12077

12035:                                            ; preds = %12029
  %12036 = getelementptr %struct.mxl5005s_state, ptr %12025, i32 0, i32 19, i32 %12031, i32 1
  %12037 = load i16, ptr %12036, align 2
  %12038 = icmp eq i16 %12037, 0
  br i1 %12038, label %12077, label %12039

12039:                                            ; preds = %12070, %12035
  %12040 = phi i32 [ %12071, %12070 ], [ 0, %12035 ]
  %12041 = getelementptr %struct.mxl5005s_state, ptr %12025, i32 0, i32 19, i32 %12031, i32 4, i32 %12040
  store i16 0, ptr %12041, align 2
  %12042 = getelementptr %struct.mxl5005s_state, ptr %12025, i32 0, i32 19, i32 %12031, i32 3, i32 %12040
  %12043 = load i16, ptr %12042, align 2
  %12044 = load ptr, ptr %3, align 4
  %12045 = getelementptr inbounds %struct.mxl5005s_state, ptr %12044, i32 0, i32 24
  %12046 = load i16, ptr %12045, align 4
  %12047 = zext i16 %12046 to i32
  %12048 = icmp eq i16 %12046, 0
  br i1 %12048, label %12070, label %12049

12049:                                            ; preds = %12039
  %12050 = getelementptr %struct.mxl5005s_state, ptr %12025, i32 0, i32 19, i32 %12031, i32 2, i32 %12040
  %12051 = load i16, ptr %12050, align 2
  %12052 = and i16 %12051, 255
  br label %12053

12053:                                            ; preds = %12067, %12049
  %12054 = phi i32 [ 0, %12049 ], [ %12068, %12067 ]
  %12055 = getelementptr %struct.mxl5005s_state, ptr %12044, i32 0, i32 25, i32 %12054
  %12056 = load i16, ptr %12055, align 2
  %12057 = icmp eq i16 %12056, %12052
  br i1 %12057, label %12058, label %12067

12058:                                            ; preds = %12053
  %12059 = and i16 %12043, 255
  %12060 = zext i16 %12059 to i32
  %12061 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12060
  %12062 = load i8, ptr %12061, align 1
  %12063 = zext i8 %12062 to i16
  %12064 = getelementptr %struct.mxl5005s_state, ptr %12044, i32 0, i32 25, i32 %12054, i32 1
  %12065 = load i16, ptr %12064, align 2
  %12066 = and i16 %12065, %12063
  store i16 %12066, ptr %12064, align 2
  br label %12070

12067:                                            ; preds = %12053
  %12068 = add nuw nsw i32 %12054, 1
  %12069 = icmp eq i32 %12068, %12047
  br i1 %12069, label %12070, label %12053

12070:                                            ; preds = %12067, %12058, %12039
  %12071 = add nuw nsw i32 %12040, 1
  %12072 = load i16, ptr %12036, align 2
  %12073 = zext i16 %12072 to i32
  %12074 = icmp ult i32 %12071, %12073
  br i1 %12074, label %12039, label %12075

12075:                                            ; preds = %12070
  %12076 = load i16, ptr %12026, align 4
  br label %12077

12077:                                            ; preds = %12075, %12035, %12029
  %12078 = phi i16 [ %12076, %12075 ], [ %12030, %12035 ], [ %12030, %12029 ]
  %12079 = add nuw nsw i32 %12031, 1
  %12080 = zext i16 %12078 to i32
  %12081 = icmp ult i32 %12079, %12080
  br i1 %12081, label %12029, label %12082

12082:                                            ; preds = %12077
  %12083 = load ptr, ptr %3, align 4
  br label %12084

12084:                                            ; preds = %12082, %12021
  %12085 = phi ptr [ %12083, %12082 ], [ %12025, %12021 ]
  %12086 = getelementptr inbounds %struct.mxl5005s_state, ptr %12085, i32 0, i32 20
  %12087 = load i16, ptr %12086, align 2
  %12088 = icmp eq i16 %12087, 0
  br i1 %12088, label %12142, label %12089

12089:                                            ; preds = %12137, %12084
  %12090 = phi i16 [ %12138, %12137 ], [ %12087, %12084 ]
  %12091 = phi i32 [ %12139, %12137 ], [ 0, %12084 ]
  %12092 = getelementptr %struct.mxl5005s_state, ptr %12085, i32 0, i32 21, i32 %12091
  %12093 = load i16, ptr %12092, align 2
  %12094 = icmp eq i16 %12093, 82
  br i1 %12094, label %12095, label %12137

12095:                                            ; preds = %12089
  %12096 = getelementptr %struct.mxl5005s_state, ptr %12085, i32 0, i32 21, i32 %12091, i32 1
  %12097 = load i16, ptr %12096, align 2
  %12098 = icmp eq i16 %12097, 0
  br i1 %12098, label %12137, label %12099

12099:                                            ; preds = %12130, %12095
  %12100 = phi i32 [ %12131, %12130 ], [ 0, %12095 ]
  %12101 = getelementptr %struct.mxl5005s_state, ptr %12085, i32 0, i32 21, i32 %12091, i32 4, i32 %12100
  store i16 0, ptr %12101, align 2
  %12102 = getelementptr %struct.mxl5005s_state, ptr %12085, i32 0, i32 21, i32 %12091, i32 3, i32 %12100
  %12103 = load i16, ptr %12102, align 2
  %12104 = load ptr, ptr %3, align 4
  %12105 = getelementptr inbounds %struct.mxl5005s_state, ptr %12104, i32 0, i32 24
  %12106 = load i16, ptr %12105, align 4
  %12107 = zext i16 %12106 to i32
  %12108 = icmp eq i16 %12106, 0
  br i1 %12108, label %12130, label %12109

12109:                                            ; preds = %12099
  %12110 = getelementptr %struct.mxl5005s_state, ptr %12085, i32 0, i32 21, i32 %12091, i32 2, i32 %12100
  %12111 = load i16, ptr %12110, align 2
  %12112 = and i16 %12111, 255
  br label %12113

12113:                                            ; preds = %12127, %12109
  %12114 = phi i32 [ 0, %12109 ], [ %12128, %12127 ]
  %12115 = getelementptr %struct.mxl5005s_state, ptr %12104, i32 0, i32 25, i32 %12114
  %12116 = load i16, ptr %12115, align 2
  %12117 = icmp eq i16 %12116, %12112
  br i1 %12117, label %12118, label %12127

12118:                                            ; preds = %12113
  %12119 = and i16 %12103, 255
  %12120 = zext i16 %12119 to i32
  %12121 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12120
  %12122 = load i8, ptr %12121, align 1
  %12123 = zext i8 %12122 to i16
  %12124 = getelementptr %struct.mxl5005s_state, ptr %12104, i32 0, i32 25, i32 %12114, i32 1
  %12125 = load i16, ptr %12124, align 2
  %12126 = and i16 %12125, %12123
  store i16 %12126, ptr %12124, align 2
  br label %12130

12127:                                            ; preds = %12113
  %12128 = add nuw nsw i32 %12114, 1
  %12129 = icmp eq i32 %12128, %12107
  br i1 %12129, label %12130, label %12113

12130:                                            ; preds = %12127, %12118, %12099
  %12131 = add nuw nsw i32 %12100, 1
  %12132 = load i16, ptr %12096, align 2
  %12133 = zext i16 %12132 to i32
  %12134 = icmp ult i32 %12131, %12133
  br i1 %12134, label %12099, label %12135

12135:                                            ; preds = %12130
  %12136 = load i16, ptr %12086, align 2
  br label %12137

12137:                                            ; preds = %12135, %12095, %12089
  %12138 = phi i16 [ %12136, %12135 ], [ %12090, %12095 ], [ %12090, %12089 ]
  %12139 = add nuw nsw i32 %12091, 1
  %12140 = zext i16 %12138 to i32
  %12141 = icmp ult i32 %12139, %12140
  br i1 %12141, label %12089, label %12142

12142:                                            ; preds = %12137, %12084
  %12143 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %12144

12144:                                            ; preds = %12142, %12017, %10881
  %12145 = load i8, ptr %7001, align 1
  %12146 = icmp eq i8 %12145, 5
  br i1 %12146, label %12147, label %13805

12147:                                            ; preds = %12144
  %12148 = load ptr, ptr %3, align 4
  %12149 = getelementptr inbounds %struct.mxl5005s_state, ptr %12148, i32 0, i32 18
  %12150 = load i16, ptr %12149, align 4
  %12151 = icmp eq i16 %12150, 0
  br i1 %12151, label %12207, label %12152

12152:                                            ; preds = %12200, %12147
  %12153 = phi i16 [ %12201, %12200 ], [ %12150, %12147 ]
  %12154 = phi i32 [ %12202, %12200 ], [ 0, %12147 ]
  %12155 = getelementptr %struct.mxl5005s_state, ptr %12148, i32 0, i32 19, i32 %12154
  %12156 = load i16, ptr %12155, align 2
  %12157 = icmp eq i16 %12156, 85
  br i1 %12157, label %12158, label %12200

12158:                                            ; preds = %12152
  %12159 = getelementptr %struct.mxl5005s_state, ptr %12148, i32 0, i32 19, i32 %12154, i32 1
  %12160 = load i16, ptr %12159, align 2
  %12161 = icmp eq i16 %12160, 0
  br i1 %12161, label %12200, label %12162

12162:                                            ; preds = %12193, %12158
  %12163 = phi i32 [ %12194, %12193 ], [ 0, %12158 ]
  %12164 = getelementptr %struct.mxl5005s_state, ptr %12148, i32 0, i32 19, i32 %12154, i32 4, i32 %12163
  store i16 0, ptr %12164, align 2
  %12165 = getelementptr %struct.mxl5005s_state, ptr %12148, i32 0, i32 19, i32 %12154, i32 3, i32 %12163
  %12166 = load i16, ptr %12165, align 2
  %12167 = load ptr, ptr %3, align 4
  %12168 = getelementptr inbounds %struct.mxl5005s_state, ptr %12167, i32 0, i32 24
  %12169 = load i16, ptr %12168, align 4
  %12170 = zext i16 %12169 to i32
  %12171 = icmp eq i16 %12169, 0
  br i1 %12171, label %12193, label %12172

12172:                                            ; preds = %12162
  %12173 = getelementptr %struct.mxl5005s_state, ptr %12148, i32 0, i32 19, i32 %12154, i32 2, i32 %12163
  %12174 = load i16, ptr %12173, align 2
  %12175 = and i16 %12174, 255
  br label %12176

12176:                                            ; preds = %12190, %12172
  %12177 = phi i32 [ 0, %12172 ], [ %12191, %12190 ]
  %12178 = getelementptr %struct.mxl5005s_state, ptr %12167, i32 0, i32 25, i32 %12177
  %12179 = load i16, ptr %12178, align 2
  %12180 = icmp eq i16 %12179, %12175
  br i1 %12180, label %12181, label %12190

12181:                                            ; preds = %12176
  %12182 = and i16 %12166, 255
  %12183 = zext i16 %12182 to i32
  %12184 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12183
  %12185 = load i8, ptr %12184, align 1
  %12186 = zext i8 %12185 to i16
  %12187 = getelementptr %struct.mxl5005s_state, ptr %12167, i32 0, i32 25, i32 %12177, i32 1
  %12188 = load i16, ptr %12187, align 2
  %12189 = and i16 %12188, %12186
  store i16 %12189, ptr %12187, align 2
  br label %12193

12190:                                            ; preds = %12176
  %12191 = add nuw nsw i32 %12177, 1
  %12192 = icmp eq i32 %12191, %12170
  br i1 %12192, label %12193, label %12176

12193:                                            ; preds = %12190, %12181, %12162
  %12194 = add nuw nsw i32 %12163, 1
  %12195 = load i16, ptr %12159, align 2
  %12196 = zext i16 %12195 to i32
  %12197 = icmp ult i32 %12194, %12196
  br i1 %12197, label %12162, label %12198

12198:                                            ; preds = %12193
  %12199 = load i16, ptr %12149, align 4
  br label %12200

12200:                                            ; preds = %12198, %12158, %12152
  %12201 = phi i16 [ %12199, %12198 ], [ %12153, %12158 ], [ %12153, %12152 ]
  %12202 = add nuw nsw i32 %12154, 1
  %12203 = zext i16 %12201 to i32
  %12204 = icmp ult i32 %12202, %12203
  br i1 %12204, label %12152, label %12205

12205:                                            ; preds = %12200
  %12206 = load ptr, ptr %3, align 4
  br label %12207

12207:                                            ; preds = %12205, %12147
  %12208 = phi ptr [ %12206, %12205 ], [ %12148, %12147 ]
  %12209 = getelementptr inbounds %struct.mxl5005s_state, ptr %12208, i32 0, i32 20
  %12210 = load i16, ptr %12209, align 2
  %12211 = icmp eq i16 %12210, 0
  br i1 %12211, label %12265, label %12212

12212:                                            ; preds = %12260, %12207
  %12213 = phi i16 [ %12261, %12260 ], [ %12210, %12207 ]
  %12214 = phi i32 [ %12262, %12260 ], [ 0, %12207 ]
  %12215 = getelementptr %struct.mxl5005s_state, ptr %12208, i32 0, i32 21, i32 %12214
  %12216 = load i16, ptr %12215, align 2
  %12217 = icmp eq i16 %12216, 85
  br i1 %12217, label %12218, label %12260

12218:                                            ; preds = %12212
  %12219 = getelementptr %struct.mxl5005s_state, ptr %12208, i32 0, i32 21, i32 %12214, i32 1
  %12220 = load i16, ptr %12219, align 2
  %12221 = icmp eq i16 %12220, 0
  br i1 %12221, label %12260, label %12222

12222:                                            ; preds = %12253, %12218
  %12223 = phi i32 [ %12254, %12253 ], [ 0, %12218 ]
  %12224 = getelementptr %struct.mxl5005s_state, ptr %12208, i32 0, i32 21, i32 %12214, i32 4, i32 %12223
  store i16 0, ptr %12224, align 2
  %12225 = getelementptr %struct.mxl5005s_state, ptr %12208, i32 0, i32 21, i32 %12214, i32 3, i32 %12223
  %12226 = load i16, ptr %12225, align 2
  %12227 = load ptr, ptr %3, align 4
  %12228 = getelementptr inbounds %struct.mxl5005s_state, ptr %12227, i32 0, i32 24
  %12229 = load i16, ptr %12228, align 4
  %12230 = zext i16 %12229 to i32
  %12231 = icmp eq i16 %12229, 0
  br i1 %12231, label %12253, label %12232

12232:                                            ; preds = %12222
  %12233 = getelementptr %struct.mxl5005s_state, ptr %12208, i32 0, i32 21, i32 %12214, i32 2, i32 %12223
  %12234 = load i16, ptr %12233, align 2
  %12235 = and i16 %12234, 255
  br label %12236

12236:                                            ; preds = %12250, %12232
  %12237 = phi i32 [ 0, %12232 ], [ %12251, %12250 ]
  %12238 = getelementptr %struct.mxl5005s_state, ptr %12227, i32 0, i32 25, i32 %12237
  %12239 = load i16, ptr %12238, align 2
  %12240 = icmp eq i16 %12239, %12235
  br i1 %12240, label %12241, label %12250

12241:                                            ; preds = %12236
  %12242 = and i16 %12226, 255
  %12243 = zext i16 %12242 to i32
  %12244 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12243
  %12245 = load i8, ptr %12244, align 1
  %12246 = zext i8 %12245 to i16
  %12247 = getelementptr %struct.mxl5005s_state, ptr %12227, i32 0, i32 25, i32 %12237, i32 1
  %12248 = load i16, ptr %12247, align 2
  %12249 = and i16 %12248, %12246
  store i16 %12249, ptr %12247, align 2
  br label %12253

12250:                                            ; preds = %12236
  %12251 = add nuw nsw i32 %12237, 1
  %12252 = icmp eq i32 %12251, %12230
  br i1 %12252, label %12253, label %12236

12253:                                            ; preds = %12250, %12241, %12222
  %12254 = add nuw nsw i32 %12223, 1
  %12255 = load i16, ptr %12219, align 2
  %12256 = zext i16 %12255 to i32
  %12257 = icmp ult i32 %12254, %12256
  br i1 %12257, label %12222, label %12258

12258:                                            ; preds = %12253
  %12259 = load i16, ptr %12209, align 2
  br label %12260

12260:                                            ; preds = %12258, %12218, %12212
  %12261 = phi i16 [ %12259, %12258 ], [ %12213, %12218 ], [ %12213, %12212 ]
  %12262 = add nuw nsw i32 %12214, 1
  %12263 = zext i16 %12261 to i32
  %12264 = icmp ult i32 %12262, %12263
  br i1 %12264, label %12212, label %12265

12265:                                            ; preds = %12260, %12207
  %12266 = load i32, ptr %5, align 4
  %12267 = icmp ugt i32 %12266, 470999999
  br i1 %12267, label %12268, label %12513

12268:                                            ; preds = %12265
  %12269 = add i32 %12266, -471000000
  %12270 = urem i32 %12269, 6000000
  %12271 = icmp eq i32 %12270, 0
  br i1 %12271, label %12759, label %12272

12272:                                            ; preds = %12268
  %12273 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %12274 = load ptr, ptr %3, align 4
  %12275 = getelementptr inbounds %struct.mxl5005s_state, ptr %12274, i32 0, i32 18
  %12276 = load i16, ptr %12275, align 4
  %12277 = icmp eq i16 %12276, 0
  br i1 %12277, label %12333, label %12278

12278:                                            ; preds = %12326, %12272
  %12279 = phi i16 [ %12327, %12326 ], [ %12276, %12272 ]
  %12280 = phi i32 [ %12328, %12326 ], [ 0, %12272 ]
  %12281 = getelementptr %struct.mxl5005s_state, ptr %12274, i32 0, i32 19, i32 %12280
  %12282 = load i16, ptr %12281, align 2
  %12283 = icmp eq i16 %12282, 82
  br i1 %12283, label %12284, label %12326

12284:                                            ; preds = %12278
  %12285 = getelementptr %struct.mxl5005s_state, ptr %12274, i32 0, i32 19, i32 %12280, i32 1
  %12286 = load i16, ptr %12285, align 2
  %12287 = icmp eq i16 %12286, 0
  br i1 %12287, label %12326, label %12288

12288:                                            ; preds = %12319, %12284
  %12289 = phi i32 [ %12320, %12319 ], [ 0, %12284 ]
  %12290 = getelementptr %struct.mxl5005s_state, ptr %12274, i32 0, i32 19, i32 %12280, i32 4, i32 %12289
  store i16 0, ptr %12290, align 2
  %12291 = getelementptr %struct.mxl5005s_state, ptr %12274, i32 0, i32 19, i32 %12280, i32 3, i32 %12289
  %12292 = load i16, ptr %12291, align 2
  %12293 = load ptr, ptr %3, align 4
  %12294 = getelementptr inbounds %struct.mxl5005s_state, ptr %12293, i32 0, i32 24
  %12295 = load i16, ptr %12294, align 4
  %12296 = zext i16 %12295 to i32
  %12297 = icmp eq i16 %12295, 0
  br i1 %12297, label %12319, label %12298

12298:                                            ; preds = %12288
  %12299 = getelementptr %struct.mxl5005s_state, ptr %12274, i32 0, i32 19, i32 %12280, i32 2, i32 %12289
  %12300 = load i16, ptr %12299, align 2
  %12301 = and i16 %12300, 255
  br label %12302

12302:                                            ; preds = %12316, %12298
  %12303 = phi i32 [ 0, %12298 ], [ %12317, %12316 ]
  %12304 = getelementptr %struct.mxl5005s_state, ptr %12293, i32 0, i32 25, i32 %12303
  %12305 = load i16, ptr %12304, align 2
  %12306 = icmp eq i16 %12305, %12301
  br i1 %12306, label %12307, label %12316

12307:                                            ; preds = %12302
  %12308 = and i16 %12292, 255
  %12309 = zext i16 %12308 to i32
  %12310 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12309
  %12311 = load i8, ptr %12310, align 1
  %12312 = zext i8 %12311 to i16
  %12313 = getelementptr %struct.mxl5005s_state, ptr %12293, i32 0, i32 25, i32 %12303, i32 1
  %12314 = load i16, ptr %12313, align 2
  %12315 = and i16 %12314, %12312
  store i16 %12315, ptr %12313, align 2
  br label %12319

12316:                                            ; preds = %12302
  %12317 = add nuw nsw i32 %12303, 1
  %12318 = icmp eq i32 %12317, %12296
  br i1 %12318, label %12319, label %12302

12319:                                            ; preds = %12316, %12307, %12288
  %12320 = add nuw nsw i32 %12289, 1
  %12321 = load i16, ptr %12285, align 2
  %12322 = zext i16 %12321 to i32
  %12323 = icmp ult i32 %12320, %12322
  br i1 %12323, label %12288, label %12324

12324:                                            ; preds = %12319
  %12325 = load i16, ptr %12275, align 4
  br label %12326

12326:                                            ; preds = %12324, %12284, %12278
  %12327 = phi i16 [ %12325, %12324 ], [ %12279, %12284 ], [ %12279, %12278 ]
  %12328 = add nuw nsw i32 %12280, 1
  %12329 = zext i16 %12327 to i32
  %12330 = icmp ult i32 %12328, %12329
  br i1 %12330, label %12278, label %12331

12331:                                            ; preds = %12326
  %12332 = load ptr, ptr %3, align 4
  br label %12333

12333:                                            ; preds = %12331, %12272
  %12334 = phi ptr [ %12332, %12331 ], [ %12274, %12272 ]
  %12335 = getelementptr inbounds %struct.mxl5005s_state, ptr %12334, i32 0, i32 20
  %12336 = load i16, ptr %12335, align 2
  %12337 = icmp eq i16 %12336, 0
  br i1 %12337, label %12391, label %12338

12338:                                            ; preds = %12386, %12333
  %12339 = phi i16 [ %12387, %12386 ], [ %12336, %12333 ]
  %12340 = phi i32 [ %12388, %12386 ], [ 0, %12333 ]
  %12341 = getelementptr %struct.mxl5005s_state, ptr %12334, i32 0, i32 21, i32 %12340
  %12342 = load i16, ptr %12341, align 2
  %12343 = icmp eq i16 %12342, 82
  br i1 %12343, label %12344, label %12386

12344:                                            ; preds = %12338
  %12345 = getelementptr %struct.mxl5005s_state, ptr %12334, i32 0, i32 21, i32 %12340, i32 1
  %12346 = load i16, ptr %12345, align 2
  %12347 = icmp eq i16 %12346, 0
  br i1 %12347, label %12386, label %12348

12348:                                            ; preds = %12379, %12344
  %12349 = phi i32 [ %12380, %12379 ], [ 0, %12344 ]
  %12350 = getelementptr %struct.mxl5005s_state, ptr %12334, i32 0, i32 21, i32 %12340, i32 4, i32 %12349
  store i16 0, ptr %12350, align 2
  %12351 = getelementptr %struct.mxl5005s_state, ptr %12334, i32 0, i32 21, i32 %12340, i32 3, i32 %12349
  %12352 = load i16, ptr %12351, align 2
  %12353 = load ptr, ptr %3, align 4
  %12354 = getelementptr inbounds %struct.mxl5005s_state, ptr %12353, i32 0, i32 24
  %12355 = load i16, ptr %12354, align 4
  %12356 = zext i16 %12355 to i32
  %12357 = icmp eq i16 %12355, 0
  br i1 %12357, label %12379, label %12358

12358:                                            ; preds = %12348
  %12359 = getelementptr %struct.mxl5005s_state, ptr %12334, i32 0, i32 21, i32 %12340, i32 2, i32 %12349
  %12360 = load i16, ptr %12359, align 2
  %12361 = and i16 %12360, 255
  br label %12362

12362:                                            ; preds = %12376, %12358
  %12363 = phi i32 [ 0, %12358 ], [ %12377, %12376 ]
  %12364 = getelementptr %struct.mxl5005s_state, ptr %12353, i32 0, i32 25, i32 %12363
  %12365 = load i16, ptr %12364, align 2
  %12366 = icmp eq i16 %12365, %12361
  br i1 %12366, label %12367, label %12376

12367:                                            ; preds = %12362
  %12368 = and i16 %12352, 255
  %12369 = zext i16 %12368 to i32
  %12370 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12369
  %12371 = load i8, ptr %12370, align 1
  %12372 = zext i8 %12371 to i16
  %12373 = getelementptr %struct.mxl5005s_state, ptr %12353, i32 0, i32 25, i32 %12363, i32 1
  %12374 = load i16, ptr %12373, align 2
  %12375 = and i16 %12374, %12372
  store i16 %12375, ptr %12373, align 2
  br label %12379

12376:                                            ; preds = %12362
  %12377 = add nuw nsw i32 %12363, 1
  %12378 = icmp eq i32 %12377, %12356
  br i1 %12378, label %12379, label %12362

12379:                                            ; preds = %12376, %12367, %12348
  %12380 = add nuw nsw i32 %12349, 1
  %12381 = load i16, ptr %12345, align 2
  %12382 = zext i16 %12381 to i32
  %12383 = icmp ult i32 %12380, %12382
  br i1 %12383, label %12348, label %12384

12384:                                            ; preds = %12379
  %12385 = load i16, ptr %12335, align 2
  br label %12386

12386:                                            ; preds = %12384, %12344, %12338
  %12387 = phi i16 [ %12385, %12384 ], [ %12339, %12344 ], [ %12339, %12338 ]
  %12388 = add nuw nsw i32 %12340, 1
  %12389 = zext i16 %12387 to i32
  %12390 = icmp ult i32 %12388, %12389
  br i1 %12390, label %12338, label %12391

12391:                                            ; preds = %12386, %12333
  %12392 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %12393 = load ptr, ptr %3, align 4
  %12394 = getelementptr inbounds %struct.mxl5005s_state, ptr %12393, i32 0, i32 18
  %12395 = load i16, ptr %12394, align 4
  %12396 = icmp eq i16 %12395, 0
  br i1 %12396, label %12452, label %12397

12397:                                            ; preds = %12445, %12391
  %12398 = phi i16 [ %12446, %12445 ], [ %12395, %12391 ]
  %12399 = phi i32 [ %12447, %12445 ], [ 0, %12391 ]
  %12400 = getelementptr %struct.mxl5005s_state, ptr %12393, i32 0, i32 19, i32 %12399
  %12401 = load i16, ptr %12400, align 2
  %12402 = icmp eq i16 %12401, 83
  br i1 %12402, label %12403, label %12445

12403:                                            ; preds = %12397
  %12404 = getelementptr %struct.mxl5005s_state, ptr %12393, i32 0, i32 19, i32 %12399, i32 1
  %12405 = load i16, ptr %12404, align 2
  %12406 = icmp eq i16 %12405, 0
  br i1 %12406, label %12445, label %12407

12407:                                            ; preds = %12438, %12403
  %12408 = phi i32 [ %12439, %12438 ], [ 0, %12403 ]
  %12409 = getelementptr %struct.mxl5005s_state, ptr %12393, i32 0, i32 19, i32 %12399, i32 4, i32 %12408
  store i16 0, ptr %12409, align 2
  %12410 = getelementptr %struct.mxl5005s_state, ptr %12393, i32 0, i32 19, i32 %12399, i32 3, i32 %12408
  %12411 = load i16, ptr %12410, align 2
  %12412 = load ptr, ptr %3, align 4
  %12413 = getelementptr inbounds %struct.mxl5005s_state, ptr %12412, i32 0, i32 24
  %12414 = load i16, ptr %12413, align 4
  %12415 = zext i16 %12414 to i32
  %12416 = icmp eq i16 %12414, 0
  br i1 %12416, label %12438, label %12417

12417:                                            ; preds = %12407
  %12418 = getelementptr %struct.mxl5005s_state, ptr %12393, i32 0, i32 19, i32 %12399, i32 2, i32 %12408
  %12419 = load i16, ptr %12418, align 2
  %12420 = and i16 %12419, 255
  br label %12421

12421:                                            ; preds = %12435, %12417
  %12422 = phi i32 [ 0, %12417 ], [ %12436, %12435 ]
  %12423 = getelementptr %struct.mxl5005s_state, ptr %12412, i32 0, i32 25, i32 %12422
  %12424 = load i16, ptr %12423, align 2
  %12425 = icmp eq i16 %12424, %12420
  br i1 %12425, label %12426, label %12435

12426:                                            ; preds = %12421
  %12427 = and i16 %12411, 255
  %12428 = zext i16 %12427 to i32
  %12429 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12428
  %12430 = load i8, ptr %12429, align 1
  %12431 = zext i8 %12430 to i16
  %12432 = getelementptr %struct.mxl5005s_state, ptr %12412, i32 0, i32 25, i32 %12422, i32 1
  %12433 = load i16, ptr %12432, align 2
  %12434 = and i16 %12433, %12431
  store i16 %12434, ptr %12432, align 2
  br label %12438

12435:                                            ; preds = %12421
  %12436 = add nuw nsw i32 %12422, 1
  %12437 = icmp eq i32 %12436, %12415
  br i1 %12437, label %12438, label %12421

12438:                                            ; preds = %12435, %12426, %12407
  %12439 = add nuw nsw i32 %12408, 1
  %12440 = load i16, ptr %12404, align 2
  %12441 = zext i16 %12440 to i32
  %12442 = icmp ult i32 %12439, %12441
  br i1 %12442, label %12407, label %12443

12443:                                            ; preds = %12438
  %12444 = load i16, ptr %12394, align 4
  br label %12445

12445:                                            ; preds = %12443, %12403, %12397
  %12446 = phi i16 [ %12444, %12443 ], [ %12398, %12403 ], [ %12398, %12397 ]
  %12447 = add nuw nsw i32 %12399, 1
  %12448 = zext i16 %12446 to i32
  %12449 = icmp ult i32 %12447, %12448
  br i1 %12449, label %12397, label %12450

12450:                                            ; preds = %12445
  %12451 = load ptr, ptr %3, align 4
  br label %12452

12452:                                            ; preds = %12450, %12391
  %12453 = phi ptr [ %12451, %12450 ], [ %12393, %12391 ]
  %12454 = getelementptr inbounds %struct.mxl5005s_state, ptr %12453, i32 0, i32 20
  %12455 = load i16, ptr %12454, align 2
  %12456 = icmp eq i16 %12455, 0
  br i1 %12456, label %12510, label %12457

12457:                                            ; preds = %12505, %12452
  %12458 = phi i16 [ %12506, %12505 ], [ %12455, %12452 ]
  %12459 = phi i32 [ %12507, %12505 ], [ 0, %12452 ]
  %12460 = getelementptr %struct.mxl5005s_state, ptr %12453, i32 0, i32 21, i32 %12459
  %12461 = load i16, ptr %12460, align 2
  %12462 = icmp eq i16 %12461, 83
  br i1 %12462, label %12463, label %12505

12463:                                            ; preds = %12457
  %12464 = getelementptr %struct.mxl5005s_state, ptr %12453, i32 0, i32 21, i32 %12459, i32 1
  %12465 = load i16, ptr %12464, align 2
  %12466 = icmp eq i16 %12465, 0
  br i1 %12466, label %12505, label %12467

12467:                                            ; preds = %12498, %12463
  %12468 = phi i32 [ %12499, %12498 ], [ 0, %12463 ]
  %12469 = getelementptr %struct.mxl5005s_state, ptr %12453, i32 0, i32 21, i32 %12459, i32 4, i32 %12468
  store i16 0, ptr %12469, align 2
  %12470 = getelementptr %struct.mxl5005s_state, ptr %12453, i32 0, i32 21, i32 %12459, i32 3, i32 %12468
  %12471 = load i16, ptr %12470, align 2
  %12472 = load ptr, ptr %3, align 4
  %12473 = getelementptr inbounds %struct.mxl5005s_state, ptr %12472, i32 0, i32 24
  %12474 = load i16, ptr %12473, align 4
  %12475 = zext i16 %12474 to i32
  %12476 = icmp eq i16 %12474, 0
  br i1 %12476, label %12498, label %12477

12477:                                            ; preds = %12467
  %12478 = getelementptr %struct.mxl5005s_state, ptr %12453, i32 0, i32 21, i32 %12459, i32 2, i32 %12468
  %12479 = load i16, ptr %12478, align 2
  %12480 = and i16 %12479, 255
  br label %12481

12481:                                            ; preds = %12495, %12477
  %12482 = phi i32 [ 0, %12477 ], [ %12496, %12495 ]
  %12483 = getelementptr %struct.mxl5005s_state, ptr %12472, i32 0, i32 25, i32 %12482
  %12484 = load i16, ptr %12483, align 2
  %12485 = icmp eq i16 %12484, %12480
  br i1 %12485, label %12486, label %12495

12486:                                            ; preds = %12481
  %12487 = and i16 %12471, 255
  %12488 = zext i16 %12487 to i32
  %12489 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12488
  %12490 = load i8, ptr %12489, align 1
  %12491 = zext i8 %12490 to i16
  %12492 = getelementptr %struct.mxl5005s_state, ptr %12472, i32 0, i32 25, i32 %12482, i32 1
  %12493 = load i16, ptr %12492, align 2
  %12494 = and i16 %12493, %12491
  store i16 %12494, ptr %12492, align 2
  br label %12498

12495:                                            ; preds = %12481
  %12496 = add nuw nsw i32 %12482, 1
  %12497 = icmp eq i32 %12496, %12475
  br i1 %12497, label %12498, label %12481

12498:                                            ; preds = %12495, %12486, %12467
  %12499 = add nuw nsw i32 %12468, 1
  %12500 = load i16, ptr %12464, align 2
  %12501 = zext i16 %12500 to i32
  %12502 = icmp ult i32 %12499, %12501
  br i1 %12502, label %12467, label %12503

12503:                                            ; preds = %12498
  %12504 = load i16, ptr %12454, align 2
  br label %12505

12505:                                            ; preds = %12503, %12463, %12457
  %12506 = phi i16 [ %12504, %12503 ], [ %12458, %12463 ], [ %12458, %12457 ]
  %12507 = add nuw nsw i32 %12459, 1
  %12508 = zext i16 %12506 to i32
  %12509 = icmp ult i32 %12507, %12508
  br i1 %12509, label %12457, label %12510

12510:                                            ; preds = %12505, %12452
  %12511 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 10, i16 noundef zeroext 1) #12
  %12512 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 10, i32 noundef 10, i16 noundef zeroext 2) #12
  br label %13803

12513:                                            ; preds = %12265
  %12514 = add nsw i32 %12266, -43000000
  %12515 = icmp ult i32 %12514, 97000000
  br i1 %12515, label %12516, label %12759

12516:                                            ; preds = %12513
  %12517 = load ptr, ptr %3, align 4
  %12518 = getelementptr inbounds %struct.mxl5005s_state, ptr %12517, i32 0, i32 18
  %12519 = load i16, ptr %12518, align 4
  %12520 = icmp eq i16 %12519, 0
  br i1 %12520, label %12576, label %12521

12521:                                            ; preds = %12569, %12516
  %12522 = phi i16 [ %12570, %12569 ], [ %12519, %12516 ]
  %12523 = phi i32 [ %12571, %12569 ], [ 0, %12516 ]
  %12524 = getelementptr %struct.mxl5005s_state, ptr %12517, i32 0, i32 19, i32 %12523
  %12525 = load i16, ptr %12524, align 2
  %12526 = icmp eq i16 %12525, 83
  br i1 %12526, label %12527, label %12569

12527:                                            ; preds = %12521
  %12528 = getelementptr %struct.mxl5005s_state, ptr %12517, i32 0, i32 19, i32 %12523, i32 1
  %12529 = load i16, ptr %12528, align 2
  %12530 = icmp eq i16 %12529, 0
  br i1 %12530, label %12569, label %12531

12531:                                            ; preds = %12562, %12527
  %12532 = phi i32 [ %12563, %12562 ], [ 0, %12527 ]
  %12533 = getelementptr %struct.mxl5005s_state, ptr %12517, i32 0, i32 19, i32 %12523, i32 4, i32 %12532
  store i16 0, ptr %12533, align 2
  %12534 = getelementptr %struct.mxl5005s_state, ptr %12517, i32 0, i32 19, i32 %12523, i32 3, i32 %12532
  %12535 = load i16, ptr %12534, align 2
  %12536 = load ptr, ptr %3, align 4
  %12537 = getelementptr inbounds %struct.mxl5005s_state, ptr %12536, i32 0, i32 24
  %12538 = load i16, ptr %12537, align 4
  %12539 = zext i16 %12538 to i32
  %12540 = icmp eq i16 %12538, 0
  br i1 %12540, label %12562, label %12541

12541:                                            ; preds = %12531
  %12542 = getelementptr %struct.mxl5005s_state, ptr %12517, i32 0, i32 19, i32 %12523, i32 2, i32 %12532
  %12543 = load i16, ptr %12542, align 2
  %12544 = and i16 %12543, 255
  br label %12545

12545:                                            ; preds = %12559, %12541
  %12546 = phi i32 [ 0, %12541 ], [ %12560, %12559 ]
  %12547 = getelementptr %struct.mxl5005s_state, ptr %12536, i32 0, i32 25, i32 %12546
  %12548 = load i16, ptr %12547, align 2
  %12549 = icmp eq i16 %12548, %12544
  br i1 %12549, label %12550, label %12559

12550:                                            ; preds = %12545
  %12551 = and i16 %12535, 255
  %12552 = zext i16 %12551 to i32
  %12553 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12552
  %12554 = load i8, ptr %12553, align 1
  %12555 = zext i8 %12554 to i16
  %12556 = getelementptr %struct.mxl5005s_state, ptr %12536, i32 0, i32 25, i32 %12546, i32 1
  %12557 = load i16, ptr %12556, align 2
  %12558 = and i16 %12557, %12555
  store i16 %12558, ptr %12556, align 2
  br label %12562

12559:                                            ; preds = %12545
  %12560 = add nuw nsw i32 %12546, 1
  %12561 = icmp eq i32 %12560, %12539
  br i1 %12561, label %12562, label %12545

12562:                                            ; preds = %12559, %12550, %12531
  %12563 = add nuw nsw i32 %12532, 1
  %12564 = load i16, ptr %12528, align 2
  %12565 = zext i16 %12564 to i32
  %12566 = icmp ult i32 %12563, %12565
  br i1 %12566, label %12531, label %12567

12567:                                            ; preds = %12562
  %12568 = load i16, ptr %12518, align 4
  br label %12569

12569:                                            ; preds = %12567, %12527, %12521
  %12570 = phi i16 [ %12568, %12567 ], [ %12522, %12527 ], [ %12522, %12521 ]
  %12571 = add nuw nsw i32 %12523, 1
  %12572 = zext i16 %12570 to i32
  %12573 = icmp ult i32 %12571, %12572
  br i1 %12573, label %12521, label %12574

12574:                                            ; preds = %12569
  %12575 = load ptr, ptr %3, align 4
  br label %12576

12576:                                            ; preds = %12574, %12516
  %12577 = phi ptr [ %12575, %12574 ], [ %12517, %12516 ]
  %12578 = getelementptr inbounds %struct.mxl5005s_state, ptr %12577, i32 0, i32 20
  %12579 = load i16, ptr %12578, align 2
  %12580 = icmp eq i16 %12579, 0
  br i1 %12580, label %12634, label %12581

12581:                                            ; preds = %12629, %12576
  %12582 = phi i16 [ %12630, %12629 ], [ %12579, %12576 ]
  %12583 = phi i32 [ %12631, %12629 ], [ 0, %12576 ]
  %12584 = getelementptr %struct.mxl5005s_state, ptr %12577, i32 0, i32 21, i32 %12583
  %12585 = load i16, ptr %12584, align 2
  %12586 = icmp eq i16 %12585, 83
  br i1 %12586, label %12587, label %12629

12587:                                            ; preds = %12581
  %12588 = getelementptr %struct.mxl5005s_state, ptr %12577, i32 0, i32 21, i32 %12583, i32 1
  %12589 = load i16, ptr %12588, align 2
  %12590 = icmp eq i16 %12589, 0
  br i1 %12590, label %12629, label %12591

12591:                                            ; preds = %12622, %12587
  %12592 = phi i32 [ %12623, %12622 ], [ 0, %12587 ]
  %12593 = getelementptr %struct.mxl5005s_state, ptr %12577, i32 0, i32 21, i32 %12583, i32 4, i32 %12592
  store i16 0, ptr %12593, align 2
  %12594 = getelementptr %struct.mxl5005s_state, ptr %12577, i32 0, i32 21, i32 %12583, i32 3, i32 %12592
  %12595 = load i16, ptr %12594, align 2
  %12596 = load ptr, ptr %3, align 4
  %12597 = getelementptr inbounds %struct.mxl5005s_state, ptr %12596, i32 0, i32 24
  %12598 = load i16, ptr %12597, align 4
  %12599 = zext i16 %12598 to i32
  %12600 = icmp eq i16 %12598, 0
  br i1 %12600, label %12622, label %12601

12601:                                            ; preds = %12591
  %12602 = getelementptr %struct.mxl5005s_state, ptr %12577, i32 0, i32 21, i32 %12583, i32 2, i32 %12592
  %12603 = load i16, ptr %12602, align 2
  %12604 = and i16 %12603, 255
  br label %12605

12605:                                            ; preds = %12619, %12601
  %12606 = phi i32 [ 0, %12601 ], [ %12620, %12619 ]
  %12607 = getelementptr %struct.mxl5005s_state, ptr %12596, i32 0, i32 25, i32 %12606
  %12608 = load i16, ptr %12607, align 2
  %12609 = icmp eq i16 %12608, %12604
  br i1 %12609, label %12610, label %12619

12610:                                            ; preds = %12605
  %12611 = and i16 %12595, 255
  %12612 = zext i16 %12611 to i32
  %12613 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12612
  %12614 = load i8, ptr %12613, align 1
  %12615 = zext i8 %12614 to i16
  %12616 = getelementptr %struct.mxl5005s_state, ptr %12596, i32 0, i32 25, i32 %12606, i32 1
  %12617 = load i16, ptr %12616, align 2
  %12618 = and i16 %12617, %12615
  store i16 %12618, ptr %12616, align 2
  br label %12622

12619:                                            ; preds = %12605
  %12620 = add nuw nsw i32 %12606, 1
  %12621 = icmp eq i32 %12620, %12599
  br i1 %12621, label %12622, label %12605

12622:                                            ; preds = %12619, %12610, %12591
  %12623 = add nuw nsw i32 %12592, 1
  %12624 = load i16, ptr %12588, align 2
  %12625 = zext i16 %12624 to i32
  %12626 = icmp ult i32 %12623, %12625
  br i1 %12626, label %12591, label %12627

12627:                                            ; preds = %12622
  %12628 = load i16, ptr %12578, align 2
  br label %12629

12629:                                            ; preds = %12627, %12587, %12581
  %12630 = phi i16 [ %12628, %12627 ], [ %12582, %12587 ], [ %12582, %12581 ]
  %12631 = add nuw nsw i32 %12583, 1
  %12632 = zext i16 %12630 to i32
  %12633 = icmp ult i32 %12631, %12632
  br i1 %12633, label %12581, label %12634

12634:                                            ; preds = %12629, %12576
  %12635 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %12636 = load ptr, ptr %3, align 4
  %12637 = getelementptr inbounds %struct.mxl5005s_state, ptr %12636, i32 0, i32 18
  %12638 = load i16, ptr %12637, align 4
  %12639 = icmp eq i16 %12638, 0
  br i1 %12639, label %12695, label %12640

12640:                                            ; preds = %12688, %12634
  %12641 = phi i16 [ %12689, %12688 ], [ %12638, %12634 ]
  %12642 = phi i32 [ %12690, %12688 ], [ 0, %12634 ]
  %12643 = getelementptr %struct.mxl5005s_state, ptr %12636, i32 0, i32 19, i32 %12642
  %12644 = load i16, ptr %12643, align 2
  %12645 = icmp eq i16 %12644, 82
  br i1 %12645, label %12646, label %12688

12646:                                            ; preds = %12640
  %12647 = getelementptr %struct.mxl5005s_state, ptr %12636, i32 0, i32 19, i32 %12642, i32 1
  %12648 = load i16, ptr %12647, align 2
  %12649 = icmp eq i16 %12648, 0
  br i1 %12649, label %12688, label %12650

12650:                                            ; preds = %12681, %12646
  %12651 = phi i32 [ %12682, %12681 ], [ 0, %12646 ]
  %12652 = getelementptr %struct.mxl5005s_state, ptr %12636, i32 0, i32 19, i32 %12642, i32 4, i32 %12651
  store i16 0, ptr %12652, align 2
  %12653 = getelementptr %struct.mxl5005s_state, ptr %12636, i32 0, i32 19, i32 %12642, i32 3, i32 %12651
  %12654 = load i16, ptr %12653, align 2
  %12655 = load ptr, ptr %3, align 4
  %12656 = getelementptr inbounds %struct.mxl5005s_state, ptr %12655, i32 0, i32 24
  %12657 = load i16, ptr %12656, align 4
  %12658 = zext i16 %12657 to i32
  %12659 = icmp eq i16 %12657, 0
  br i1 %12659, label %12681, label %12660

12660:                                            ; preds = %12650
  %12661 = getelementptr %struct.mxl5005s_state, ptr %12636, i32 0, i32 19, i32 %12642, i32 2, i32 %12651
  %12662 = load i16, ptr %12661, align 2
  %12663 = and i16 %12662, 255
  br label %12664

12664:                                            ; preds = %12678, %12660
  %12665 = phi i32 [ 0, %12660 ], [ %12679, %12678 ]
  %12666 = getelementptr %struct.mxl5005s_state, ptr %12655, i32 0, i32 25, i32 %12665
  %12667 = load i16, ptr %12666, align 2
  %12668 = icmp eq i16 %12667, %12663
  br i1 %12668, label %12669, label %12678

12669:                                            ; preds = %12664
  %12670 = and i16 %12654, 255
  %12671 = zext i16 %12670 to i32
  %12672 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12671
  %12673 = load i8, ptr %12672, align 1
  %12674 = zext i8 %12673 to i16
  %12675 = getelementptr %struct.mxl5005s_state, ptr %12655, i32 0, i32 25, i32 %12665, i32 1
  %12676 = load i16, ptr %12675, align 2
  %12677 = and i16 %12676, %12674
  store i16 %12677, ptr %12675, align 2
  br label %12681

12678:                                            ; preds = %12664
  %12679 = add nuw nsw i32 %12665, 1
  %12680 = icmp eq i32 %12679, %12658
  br i1 %12680, label %12681, label %12664

12681:                                            ; preds = %12678, %12669, %12650
  %12682 = add nuw nsw i32 %12651, 1
  %12683 = load i16, ptr %12647, align 2
  %12684 = zext i16 %12683 to i32
  %12685 = icmp ult i32 %12682, %12684
  br i1 %12685, label %12650, label %12686

12686:                                            ; preds = %12681
  %12687 = load i16, ptr %12637, align 4
  br label %12688

12688:                                            ; preds = %12686, %12646, %12640
  %12689 = phi i16 [ %12687, %12686 ], [ %12641, %12646 ], [ %12641, %12640 ]
  %12690 = add nuw nsw i32 %12642, 1
  %12691 = zext i16 %12689 to i32
  %12692 = icmp ult i32 %12690, %12691
  br i1 %12692, label %12640, label %12693

12693:                                            ; preds = %12688
  %12694 = load ptr, ptr %3, align 4
  br label %12695

12695:                                            ; preds = %12693, %12634
  %12696 = phi ptr [ %12694, %12693 ], [ %12636, %12634 ]
  %12697 = getelementptr inbounds %struct.mxl5005s_state, ptr %12696, i32 0, i32 20
  %12698 = load i16, ptr %12697, align 2
  %12699 = icmp eq i16 %12698, 0
  br i1 %12699, label %12753, label %12700

12700:                                            ; preds = %12748, %12695
  %12701 = phi i16 [ %12749, %12748 ], [ %12698, %12695 ]
  %12702 = phi i32 [ %12750, %12748 ], [ 0, %12695 ]
  %12703 = getelementptr %struct.mxl5005s_state, ptr %12696, i32 0, i32 21, i32 %12702
  %12704 = load i16, ptr %12703, align 2
  %12705 = icmp eq i16 %12704, 82
  br i1 %12705, label %12706, label %12748

12706:                                            ; preds = %12700
  %12707 = getelementptr %struct.mxl5005s_state, ptr %12696, i32 0, i32 21, i32 %12702, i32 1
  %12708 = load i16, ptr %12707, align 2
  %12709 = icmp eq i16 %12708, 0
  br i1 %12709, label %12748, label %12710

12710:                                            ; preds = %12741, %12706
  %12711 = phi i32 [ %12742, %12741 ], [ 0, %12706 ]
  %12712 = getelementptr %struct.mxl5005s_state, ptr %12696, i32 0, i32 21, i32 %12702, i32 4, i32 %12711
  store i16 0, ptr %12712, align 2
  %12713 = getelementptr %struct.mxl5005s_state, ptr %12696, i32 0, i32 21, i32 %12702, i32 3, i32 %12711
  %12714 = load i16, ptr %12713, align 2
  %12715 = load ptr, ptr %3, align 4
  %12716 = getelementptr inbounds %struct.mxl5005s_state, ptr %12715, i32 0, i32 24
  %12717 = load i16, ptr %12716, align 4
  %12718 = zext i16 %12717 to i32
  %12719 = icmp eq i16 %12717, 0
  br i1 %12719, label %12741, label %12720

12720:                                            ; preds = %12710
  %12721 = getelementptr %struct.mxl5005s_state, ptr %12696, i32 0, i32 21, i32 %12702, i32 2, i32 %12711
  %12722 = load i16, ptr %12721, align 2
  %12723 = and i16 %12722, 255
  br label %12724

12724:                                            ; preds = %12738, %12720
  %12725 = phi i32 [ 0, %12720 ], [ %12739, %12738 ]
  %12726 = getelementptr %struct.mxl5005s_state, ptr %12715, i32 0, i32 25, i32 %12725
  %12727 = load i16, ptr %12726, align 2
  %12728 = icmp eq i16 %12727, %12723
  br i1 %12728, label %12729, label %12738

12729:                                            ; preds = %12724
  %12730 = and i16 %12714, 255
  %12731 = zext i16 %12730 to i32
  %12732 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12731
  %12733 = load i8, ptr %12732, align 1
  %12734 = zext i8 %12733 to i16
  %12735 = getelementptr %struct.mxl5005s_state, ptr %12715, i32 0, i32 25, i32 %12725, i32 1
  %12736 = load i16, ptr %12735, align 2
  %12737 = and i16 %12736, %12734
  store i16 %12737, ptr %12735, align 2
  br label %12741

12738:                                            ; preds = %12724
  %12739 = add nuw nsw i32 %12725, 1
  %12740 = icmp eq i32 %12739, %12718
  br i1 %12740, label %12741, label %12724

12741:                                            ; preds = %12738, %12729, %12710
  %12742 = add nuw nsw i32 %12711, 1
  %12743 = load i16, ptr %12707, align 2
  %12744 = zext i16 %12743 to i32
  %12745 = icmp ult i32 %12742, %12744
  br i1 %12745, label %12710, label %12746

12746:                                            ; preds = %12741
  %12747 = load i16, ptr %12697, align 2
  br label %12748

12748:                                            ; preds = %12746, %12706, %12700
  %12749 = phi i16 [ %12747, %12746 ], [ %12701, %12706 ], [ %12701, %12700 ]
  %12750 = add nuw nsw i32 %12702, 1
  %12751 = zext i16 %12749 to i32
  %12752 = icmp ult i32 %12750, %12751
  br i1 %12752, label %12700, label %12753

12753:                                            ; preds = %12748, %12695
  %12754 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %12755 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %12756 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %12757 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %12758 = load i32, ptr %5, align 4
  br label %12759

12759:                                            ; preds = %12753, %12513, %12268
  %12760 = phi i32 [ %12266, %12268 ], [ %12758, %12753 ], [ %12266, %12513 ]
  %12761 = add i32 %12760, -140000000
  %12762 = icmp ult i32 %12761, 100000000
  br i1 %12762, label %12763, label %12890

12763:                                            ; preds = %12759
  %12764 = load ptr, ptr %3, align 4
  %12765 = getelementptr inbounds %struct.mxl5005s_state, ptr %12764, i32 0, i32 18
  %12766 = load i16, ptr %12765, align 4
  %12767 = icmp eq i16 %12766, 0
  br i1 %12767, label %12823, label %12768

12768:                                            ; preds = %12816, %12763
  %12769 = phi i16 [ %12817, %12816 ], [ %12766, %12763 ]
  %12770 = phi i32 [ %12818, %12816 ], [ 0, %12763 ]
  %12771 = getelementptr %struct.mxl5005s_state, ptr %12764, i32 0, i32 19, i32 %12770
  %12772 = load i16, ptr %12771, align 2
  %12773 = icmp eq i16 %12772, 83
  br i1 %12773, label %12774, label %12816

12774:                                            ; preds = %12768
  %12775 = getelementptr %struct.mxl5005s_state, ptr %12764, i32 0, i32 19, i32 %12770, i32 1
  %12776 = load i16, ptr %12775, align 2
  %12777 = icmp eq i16 %12776, 0
  br i1 %12777, label %12816, label %12778

12778:                                            ; preds = %12809, %12774
  %12779 = phi i32 [ %12810, %12809 ], [ 0, %12774 ]
  %12780 = getelementptr %struct.mxl5005s_state, ptr %12764, i32 0, i32 19, i32 %12770, i32 4, i32 %12779
  store i16 0, ptr %12780, align 2
  %12781 = getelementptr %struct.mxl5005s_state, ptr %12764, i32 0, i32 19, i32 %12770, i32 3, i32 %12779
  %12782 = load i16, ptr %12781, align 2
  %12783 = load ptr, ptr %3, align 4
  %12784 = getelementptr inbounds %struct.mxl5005s_state, ptr %12783, i32 0, i32 24
  %12785 = load i16, ptr %12784, align 4
  %12786 = zext i16 %12785 to i32
  %12787 = icmp eq i16 %12785, 0
  br i1 %12787, label %12809, label %12788

12788:                                            ; preds = %12778
  %12789 = getelementptr %struct.mxl5005s_state, ptr %12764, i32 0, i32 19, i32 %12770, i32 2, i32 %12779
  %12790 = load i16, ptr %12789, align 2
  %12791 = and i16 %12790, 255
  br label %12792

12792:                                            ; preds = %12806, %12788
  %12793 = phi i32 [ 0, %12788 ], [ %12807, %12806 ]
  %12794 = getelementptr %struct.mxl5005s_state, ptr %12783, i32 0, i32 25, i32 %12793
  %12795 = load i16, ptr %12794, align 2
  %12796 = icmp eq i16 %12795, %12791
  br i1 %12796, label %12797, label %12806

12797:                                            ; preds = %12792
  %12798 = and i16 %12782, 255
  %12799 = zext i16 %12798 to i32
  %12800 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12799
  %12801 = load i8, ptr %12800, align 1
  %12802 = zext i8 %12801 to i16
  %12803 = getelementptr %struct.mxl5005s_state, ptr %12783, i32 0, i32 25, i32 %12793, i32 1
  %12804 = load i16, ptr %12803, align 2
  %12805 = and i16 %12804, %12802
  store i16 %12805, ptr %12803, align 2
  br label %12809

12806:                                            ; preds = %12792
  %12807 = add nuw nsw i32 %12793, 1
  %12808 = icmp eq i32 %12807, %12786
  br i1 %12808, label %12809, label %12792

12809:                                            ; preds = %12806, %12797, %12778
  %12810 = add nuw nsw i32 %12779, 1
  %12811 = load i16, ptr %12775, align 2
  %12812 = zext i16 %12811 to i32
  %12813 = icmp ult i32 %12810, %12812
  br i1 %12813, label %12778, label %12814

12814:                                            ; preds = %12809
  %12815 = load i16, ptr %12765, align 4
  br label %12816

12816:                                            ; preds = %12814, %12774, %12768
  %12817 = phi i16 [ %12815, %12814 ], [ %12769, %12774 ], [ %12769, %12768 ]
  %12818 = add nuw nsw i32 %12770, 1
  %12819 = zext i16 %12817 to i32
  %12820 = icmp ult i32 %12818, %12819
  br i1 %12820, label %12768, label %12821

12821:                                            ; preds = %12816
  %12822 = load ptr, ptr %3, align 4
  br label %12823

12823:                                            ; preds = %12821, %12763
  %12824 = phi ptr [ %12822, %12821 ], [ %12764, %12763 ]
  %12825 = getelementptr inbounds %struct.mxl5005s_state, ptr %12824, i32 0, i32 20
  %12826 = load i16, ptr %12825, align 2
  %12827 = icmp eq i16 %12826, 0
  br i1 %12827, label %12881, label %12828

12828:                                            ; preds = %12876, %12823
  %12829 = phi i16 [ %12877, %12876 ], [ %12826, %12823 ]
  %12830 = phi i32 [ %12878, %12876 ], [ 0, %12823 ]
  %12831 = getelementptr %struct.mxl5005s_state, ptr %12824, i32 0, i32 21, i32 %12830
  %12832 = load i16, ptr %12831, align 2
  %12833 = icmp eq i16 %12832, 83
  br i1 %12833, label %12834, label %12876

12834:                                            ; preds = %12828
  %12835 = getelementptr %struct.mxl5005s_state, ptr %12824, i32 0, i32 21, i32 %12830, i32 1
  %12836 = load i16, ptr %12835, align 2
  %12837 = icmp eq i16 %12836, 0
  br i1 %12837, label %12876, label %12838

12838:                                            ; preds = %12869, %12834
  %12839 = phi i32 [ %12870, %12869 ], [ 0, %12834 ]
  %12840 = getelementptr %struct.mxl5005s_state, ptr %12824, i32 0, i32 21, i32 %12830, i32 4, i32 %12839
  store i16 0, ptr %12840, align 2
  %12841 = getelementptr %struct.mxl5005s_state, ptr %12824, i32 0, i32 21, i32 %12830, i32 3, i32 %12839
  %12842 = load i16, ptr %12841, align 2
  %12843 = load ptr, ptr %3, align 4
  %12844 = getelementptr inbounds %struct.mxl5005s_state, ptr %12843, i32 0, i32 24
  %12845 = load i16, ptr %12844, align 4
  %12846 = zext i16 %12845 to i32
  %12847 = icmp eq i16 %12845, 0
  br i1 %12847, label %12869, label %12848

12848:                                            ; preds = %12838
  %12849 = getelementptr %struct.mxl5005s_state, ptr %12824, i32 0, i32 21, i32 %12830, i32 2, i32 %12839
  %12850 = load i16, ptr %12849, align 2
  %12851 = and i16 %12850, 255
  br label %12852

12852:                                            ; preds = %12866, %12848
  %12853 = phi i32 [ 0, %12848 ], [ %12867, %12866 ]
  %12854 = getelementptr %struct.mxl5005s_state, ptr %12843, i32 0, i32 25, i32 %12853
  %12855 = load i16, ptr %12854, align 2
  %12856 = icmp eq i16 %12855, %12851
  br i1 %12856, label %12857, label %12866

12857:                                            ; preds = %12852
  %12858 = and i16 %12842, 255
  %12859 = zext i16 %12858 to i32
  %12860 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12859
  %12861 = load i8, ptr %12860, align 1
  %12862 = zext i8 %12861 to i16
  %12863 = getelementptr %struct.mxl5005s_state, ptr %12843, i32 0, i32 25, i32 %12853, i32 1
  %12864 = load i16, ptr %12863, align 2
  %12865 = and i16 %12864, %12862
  store i16 %12865, ptr %12863, align 2
  br label %12869

12866:                                            ; preds = %12852
  %12867 = add nuw nsw i32 %12853, 1
  %12868 = icmp eq i32 %12867, %12846
  br i1 %12868, label %12869, label %12852

12869:                                            ; preds = %12866, %12857, %12838
  %12870 = add nuw nsw i32 %12839, 1
  %12871 = load i16, ptr %12835, align 2
  %12872 = zext i16 %12871 to i32
  %12873 = icmp ult i32 %12870, %12872
  br i1 %12873, label %12838, label %12874

12874:                                            ; preds = %12869
  %12875 = load i16, ptr %12825, align 2
  br label %12876

12876:                                            ; preds = %12874, %12834, %12828
  %12877 = phi i16 [ %12875, %12874 ], [ %12829, %12834 ], [ %12829, %12828 ]
  %12878 = add nuw nsw i32 %12830, 1
  %12879 = zext i16 %12877 to i32
  %12880 = icmp ult i32 %12878, %12879
  br i1 %12880, label %12828, label %12881

12881:                                            ; preds = %12876, %12823
  %12882 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %12883 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %12884 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %12885 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %12886 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %12887 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %12888 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %12889 = load i32, ptr %5, align 4
  br label %12890

12890:                                            ; preds = %12881, %12759
  %12891 = phi i32 [ %12889, %12881 ], [ %12760, %12759 ]
  %12892 = add i32 %12891, -240000000
  %12893 = icmp ult i32 %12892, 100000000
  br i1 %12893, label %12894, label %13140

12894:                                            ; preds = %12890
  %12895 = load ptr, ptr %3, align 4
  %12896 = getelementptr inbounds %struct.mxl5005s_state, ptr %12895, i32 0, i32 18
  %12897 = load i16, ptr %12896, align 4
  %12898 = icmp eq i16 %12897, 0
  br i1 %12898, label %12954, label %12899

12899:                                            ; preds = %12947, %12894
  %12900 = phi i16 [ %12948, %12947 ], [ %12897, %12894 ]
  %12901 = phi i32 [ %12949, %12947 ], [ 0, %12894 ]
  %12902 = getelementptr %struct.mxl5005s_state, ptr %12895, i32 0, i32 19, i32 %12901
  %12903 = load i16, ptr %12902, align 2
  %12904 = icmp eq i16 %12903, 83
  br i1 %12904, label %12905, label %12947

12905:                                            ; preds = %12899
  %12906 = getelementptr %struct.mxl5005s_state, ptr %12895, i32 0, i32 19, i32 %12901, i32 1
  %12907 = load i16, ptr %12906, align 2
  %12908 = icmp eq i16 %12907, 0
  br i1 %12908, label %12947, label %12909

12909:                                            ; preds = %12940, %12905
  %12910 = phi i32 [ %12941, %12940 ], [ 0, %12905 ]
  %12911 = getelementptr %struct.mxl5005s_state, ptr %12895, i32 0, i32 19, i32 %12901, i32 4, i32 %12910
  store i16 0, ptr %12911, align 2
  %12912 = getelementptr %struct.mxl5005s_state, ptr %12895, i32 0, i32 19, i32 %12901, i32 3, i32 %12910
  %12913 = load i16, ptr %12912, align 2
  %12914 = load ptr, ptr %3, align 4
  %12915 = getelementptr inbounds %struct.mxl5005s_state, ptr %12914, i32 0, i32 24
  %12916 = load i16, ptr %12915, align 4
  %12917 = zext i16 %12916 to i32
  %12918 = icmp eq i16 %12916, 0
  br i1 %12918, label %12940, label %12919

12919:                                            ; preds = %12909
  %12920 = getelementptr %struct.mxl5005s_state, ptr %12895, i32 0, i32 19, i32 %12901, i32 2, i32 %12910
  %12921 = load i16, ptr %12920, align 2
  %12922 = and i16 %12921, 255
  br label %12923

12923:                                            ; preds = %12937, %12919
  %12924 = phi i32 [ 0, %12919 ], [ %12938, %12937 ]
  %12925 = getelementptr %struct.mxl5005s_state, ptr %12914, i32 0, i32 25, i32 %12924
  %12926 = load i16, ptr %12925, align 2
  %12927 = icmp eq i16 %12926, %12922
  br i1 %12927, label %12928, label %12937

12928:                                            ; preds = %12923
  %12929 = and i16 %12913, 255
  %12930 = zext i16 %12929 to i32
  %12931 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12930
  %12932 = load i8, ptr %12931, align 1
  %12933 = zext i8 %12932 to i16
  %12934 = getelementptr %struct.mxl5005s_state, ptr %12914, i32 0, i32 25, i32 %12924, i32 1
  %12935 = load i16, ptr %12934, align 2
  %12936 = and i16 %12935, %12933
  store i16 %12936, ptr %12934, align 2
  br label %12940

12937:                                            ; preds = %12923
  %12938 = add nuw nsw i32 %12924, 1
  %12939 = icmp eq i32 %12938, %12917
  br i1 %12939, label %12940, label %12923

12940:                                            ; preds = %12937, %12928, %12909
  %12941 = add nuw nsw i32 %12910, 1
  %12942 = load i16, ptr %12906, align 2
  %12943 = zext i16 %12942 to i32
  %12944 = icmp ult i32 %12941, %12943
  br i1 %12944, label %12909, label %12945

12945:                                            ; preds = %12940
  %12946 = load i16, ptr %12896, align 4
  br label %12947

12947:                                            ; preds = %12945, %12905, %12899
  %12948 = phi i16 [ %12946, %12945 ], [ %12900, %12905 ], [ %12900, %12899 ]
  %12949 = add nuw nsw i32 %12901, 1
  %12950 = zext i16 %12948 to i32
  %12951 = icmp ult i32 %12949, %12950
  br i1 %12951, label %12899, label %12952

12952:                                            ; preds = %12947
  %12953 = load ptr, ptr %3, align 4
  br label %12954

12954:                                            ; preds = %12952, %12894
  %12955 = phi ptr [ %12953, %12952 ], [ %12895, %12894 ]
  %12956 = getelementptr inbounds %struct.mxl5005s_state, ptr %12955, i32 0, i32 20
  %12957 = load i16, ptr %12956, align 2
  %12958 = icmp eq i16 %12957, 0
  br i1 %12958, label %13012, label %12959

12959:                                            ; preds = %13007, %12954
  %12960 = phi i16 [ %13008, %13007 ], [ %12957, %12954 ]
  %12961 = phi i32 [ %13009, %13007 ], [ 0, %12954 ]
  %12962 = getelementptr %struct.mxl5005s_state, ptr %12955, i32 0, i32 21, i32 %12961
  %12963 = load i16, ptr %12962, align 2
  %12964 = icmp eq i16 %12963, 83
  br i1 %12964, label %12965, label %13007

12965:                                            ; preds = %12959
  %12966 = getelementptr %struct.mxl5005s_state, ptr %12955, i32 0, i32 21, i32 %12961, i32 1
  %12967 = load i16, ptr %12966, align 2
  %12968 = icmp eq i16 %12967, 0
  br i1 %12968, label %13007, label %12969

12969:                                            ; preds = %13000, %12965
  %12970 = phi i32 [ %13001, %13000 ], [ 0, %12965 ]
  %12971 = getelementptr %struct.mxl5005s_state, ptr %12955, i32 0, i32 21, i32 %12961, i32 4, i32 %12970
  store i16 0, ptr %12971, align 2
  %12972 = getelementptr %struct.mxl5005s_state, ptr %12955, i32 0, i32 21, i32 %12961, i32 3, i32 %12970
  %12973 = load i16, ptr %12972, align 2
  %12974 = load ptr, ptr %3, align 4
  %12975 = getelementptr inbounds %struct.mxl5005s_state, ptr %12974, i32 0, i32 24
  %12976 = load i16, ptr %12975, align 4
  %12977 = zext i16 %12976 to i32
  %12978 = icmp eq i16 %12976, 0
  br i1 %12978, label %13000, label %12979

12979:                                            ; preds = %12969
  %12980 = getelementptr %struct.mxl5005s_state, ptr %12955, i32 0, i32 21, i32 %12961, i32 2, i32 %12970
  %12981 = load i16, ptr %12980, align 2
  %12982 = and i16 %12981, 255
  br label %12983

12983:                                            ; preds = %12997, %12979
  %12984 = phi i32 [ 0, %12979 ], [ %12998, %12997 ]
  %12985 = getelementptr %struct.mxl5005s_state, ptr %12974, i32 0, i32 25, i32 %12984
  %12986 = load i16, ptr %12985, align 2
  %12987 = icmp eq i16 %12986, %12982
  br i1 %12987, label %12988, label %12997

12988:                                            ; preds = %12983
  %12989 = and i16 %12973, 255
  %12990 = zext i16 %12989 to i32
  %12991 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %12990
  %12992 = load i8, ptr %12991, align 1
  %12993 = zext i8 %12992 to i16
  %12994 = getelementptr %struct.mxl5005s_state, ptr %12974, i32 0, i32 25, i32 %12984, i32 1
  %12995 = load i16, ptr %12994, align 2
  %12996 = and i16 %12995, %12993
  store i16 %12996, ptr %12994, align 2
  br label %13000

12997:                                            ; preds = %12983
  %12998 = add nuw nsw i32 %12984, 1
  %12999 = icmp eq i32 %12998, %12977
  br i1 %12999, label %13000, label %12983

13000:                                            ; preds = %12997, %12988, %12969
  %13001 = add nuw nsw i32 %12970, 1
  %13002 = load i16, ptr %12966, align 2
  %13003 = zext i16 %13002 to i32
  %13004 = icmp ult i32 %13001, %13003
  br i1 %13004, label %12969, label %13005

13005:                                            ; preds = %13000
  %13006 = load i16, ptr %12956, align 2
  br label %13007

13007:                                            ; preds = %13005, %12965, %12959
  %13008 = phi i16 [ %13006, %13005 ], [ %12960, %12965 ], [ %12960, %12959 ]
  %13009 = add nuw nsw i32 %12961, 1
  %13010 = zext i16 %13008 to i32
  %13011 = icmp ult i32 %13009, %13010
  br i1 %13011, label %12959, label %13012

13012:                                            ; preds = %13007, %12954
  %13013 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %13014 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %13015 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %13016 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %13017 = load ptr, ptr %3, align 4
  %13018 = getelementptr inbounds %struct.mxl5005s_state, ptr %13017, i32 0, i32 18
  %13019 = load i16, ptr %13018, align 4
  %13020 = icmp eq i16 %13019, 0
  br i1 %13020, label %13076, label %13021

13021:                                            ; preds = %13069, %13012
  %13022 = phi i16 [ %13070, %13069 ], [ %13019, %13012 ]
  %13023 = phi i32 [ %13071, %13069 ], [ 0, %13012 ]
  %13024 = getelementptr %struct.mxl5005s_state, ptr %13017, i32 0, i32 19, i32 %13023
  %13025 = load i16, ptr %13024, align 2
  %13026 = icmp eq i16 %13025, 82
  br i1 %13026, label %13027, label %13069

13027:                                            ; preds = %13021
  %13028 = getelementptr %struct.mxl5005s_state, ptr %13017, i32 0, i32 19, i32 %13023, i32 1
  %13029 = load i16, ptr %13028, align 2
  %13030 = icmp eq i16 %13029, 0
  br i1 %13030, label %13069, label %13031

13031:                                            ; preds = %13062, %13027
  %13032 = phi i32 [ %13063, %13062 ], [ 0, %13027 ]
  %13033 = getelementptr %struct.mxl5005s_state, ptr %13017, i32 0, i32 19, i32 %13023, i32 4, i32 %13032
  store i16 0, ptr %13033, align 2
  %13034 = getelementptr %struct.mxl5005s_state, ptr %13017, i32 0, i32 19, i32 %13023, i32 3, i32 %13032
  %13035 = load i16, ptr %13034, align 2
  %13036 = load ptr, ptr %3, align 4
  %13037 = getelementptr inbounds %struct.mxl5005s_state, ptr %13036, i32 0, i32 24
  %13038 = load i16, ptr %13037, align 4
  %13039 = zext i16 %13038 to i32
  %13040 = icmp eq i16 %13038, 0
  br i1 %13040, label %13062, label %13041

13041:                                            ; preds = %13031
  %13042 = getelementptr %struct.mxl5005s_state, ptr %13017, i32 0, i32 19, i32 %13023, i32 2, i32 %13032
  %13043 = load i16, ptr %13042, align 2
  %13044 = and i16 %13043, 255
  br label %13045

13045:                                            ; preds = %13059, %13041
  %13046 = phi i32 [ 0, %13041 ], [ %13060, %13059 ]
  %13047 = getelementptr %struct.mxl5005s_state, ptr %13036, i32 0, i32 25, i32 %13046
  %13048 = load i16, ptr %13047, align 2
  %13049 = icmp eq i16 %13048, %13044
  br i1 %13049, label %13050, label %13059

13050:                                            ; preds = %13045
  %13051 = and i16 %13035, 255
  %13052 = zext i16 %13051 to i32
  %13053 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13052
  %13054 = load i8, ptr %13053, align 1
  %13055 = zext i8 %13054 to i16
  %13056 = getelementptr %struct.mxl5005s_state, ptr %13036, i32 0, i32 25, i32 %13046, i32 1
  %13057 = load i16, ptr %13056, align 2
  %13058 = and i16 %13057, %13055
  store i16 %13058, ptr %13056, align 2
  br label %13062

13059:                                            ; preds = %13045
  %13060 = add nuw nsw i32 %13046, 1
  %13061 = icmp eq i32 %13060, %13039
  br i1 %13061, label %13062, label %13045

13062:                                            ; preds = %13059, %13050, %13031
  %13063 = add nuw nsw i32 %13032, 1
  %13064 = load i16, ptr %13028, align 2
  %13065 = zext i16 %13064 to i32
  %13066 = icmp ult i32 %13063, %13065
  br i1 %13066, label %13031, label %13067

13067:                                            ; preds = %13062
  %13068 = load i16, ptr %13018, align 4
  br label %13069

13069:                                            ; preds = %13067, %13027, %13021
  %13070 = phi i16 [ %13068, %13067 ], [ %13022, %13027 ], [ %13022, %13021 ]
  %13071 = add nuw nsw i32 %13023, 1
  %13072 = zext i16 %13070 to i32
  %13073 = icmp ult i32 %13071, %13072
  br i1 %13073, label %13021, label %13074

13074:                                            ; preds = %13069
  %13075 = load ptr, ptr %3, align 4
  br label %13076

13076:                                            ; preds = %13074, %13012
  %13077 = phi ptr [ %13075, %13074 ], [ %13017, %13012 ]
  %13078 = getelementptr inbounds %struct.mxl5005s_state, ptr %13077, i32 0, i32 20
  %13079 = load i16, ptr %13078, align 2
  %13080 = icmp eq i16 %13079, 0
  br i1 %13080, label %13134, label %13081

13081:                                            ; preds = %13129, %13076
  %13082 = phi i16 [ %13130, %13129 ], [ %13079, %13076 ]
  %13083 = phi i32 [ %13131, %13129 ], [ 0, %13076 ]
  %13084 = getelementptr %struct.mxl5005s_state, ptr %13077, i32 0, i32 21, i32 %13083
  %13085 = load i16, ptr %13084, align 2
  %13086 = icmp eq i16 %13085, 82
  br i1 %13086, label %13087, label %13129

13087:                                            ; preds = %13081
  %13088 = getelementptr %struct.mxl5005s_state, ptr %13077, i32 0, i32 21, i32 %13083, i32 1
  %13089 = load i16, ptr %13088, align 2
  %13090 = icmp eq i16 %13089, 0
  br i1 %13090, label %13129, label %13091

13091:                                            ; preds = %13122, %13087
  %13092 = phi i32 [ %13123, %13122 ], [ 0, %13087 ]
  %13093 = getelementptr %struct.mxl5005s_state, ptr %13077, i32 0, i32 21, i32 %13083, i32 4, i32 %13092
  store i16 0, ptr %13093, align 2
  %13094 = getelementptr %struct.mxl5005s_state, ptr %13077, i32 0, i32 21, i32 %13083, i32 3, i32 %13092
  %13095 = load i16, ptr %13094, align 2
  %13096 = load ptr, ptr %3, align 4
  %13097 = getelementptr inbounds %struct.mxl5005s_state, ptr %13096, i32 0, i32 24
  %13098 = load i16, ptr %13097, align 4
  %13099 = zext i16 %13098 to i32
  %13100 = icmp eq i16 %13098, 0
  br i1 %13100, label %13122, label %13101

13101:                                            ; preds = %13091
  %13102 = getelementptr %struct.mxl5005s_state, ptr %13077, i32 0, i32 21, i32 %13083, i32 2, i32 %13092
  %13103 = load i16, ptr %13102, align 2
  %13104 = and i16 %13103, 255
  br label %13105

13105:                                            ; preds = %13119, %13101
  %13106 = phi i32 [ 0, %13101 ], [ %13120, %13119 ]
  %13107 = getelementptr %struct.mxl5005s_state, ptr %13096, i32 0, i32 25, i32 %13106
  %13108 = load i16, ptr %13107, align 2
  %13109 = icmp eq i16 %13108, %13104
  br i1 %13109, label %13110, label %13119

13110:                                            ; preds = %13105
  %13111 = and i16 %13095, 255
  %13112 = zext i16 %13111 to i32
  %13113 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13112
  %13114 = load i8, ptr %13113, align 1
  %13115 = zext i8 %13114 to i16
  %13116 = getelementptr %struct.mxl5005s_state, ptr %13096, i32 0, i32 25, i32 %13106, i32 1
  %13117 = load i16, ptr %13116, align 2
  %13118 = and i16 %13117, %13115
  store i16 %13118, ptr %13116, align 2
  br label %13122

13119:                                            ; preds = %13105
  %13120 = add nuw nsw i32 %13106, 1
  %13121 = icmp eq i32 %13120, %13099
  br i1 %13121, label %13122, label %13105

13122:                                            ; preds = %13119, %13110, %13091
  %13123 = add nuw nsw i32 %13092, 1
  %13124 = load i16, ptr %13088, align 2
  %13125 = zext i16 %13124 to i32
  %13126 = icmp ult i32 %13123, %13125
  br i1 %13126, label %13091, label %13127

13127:                                            ; preds = %13122
  %13128 = load i16, ptr %13078, align 2
  br label %13129

13129:                                            ; preds = %13127, %13087, %13081
  %13130 = phi i16 [ %13128, %13127 ], [ %13082, %13087 ], [ %13082, %13081 ]
  %13131 = add nuw nsw i32 %13083, 1
  %13132 = zext i16 %13130 to i32
  %13133 = icmp ult i32 %13131, %13132
  br i1 %13133, label %13081, label %13134

13134:                                            ; preds = %13129, %13076
  %13135 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %13136 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %13137 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %13138 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %13139 = load i32, ptr %5, align 4
  br label %13140

13140:                                            ; preds = %13134, %12890
  %13141 = phi i32 [ %13139, %13134 ], [ %12891, %12890 ]
  %13142 = add i32 %13141, -340000000
  %13143 = icmp ult i32 %13142, 90000000
  br i1 %13143, label %13144, label %13271

13144:                                            ; preds = %13140
  %13145 = load ptr, ptr %3, align 4
  %13146 = getelementptr inbounds %struct.mxl5005s_state, ptr %13145, i32 0, i32 18
  %13147 = load i16, ptr %13146, align 4
  %13148 = icmp eq i16 %13147, 0
  br i1 %13148, label %13204, label %13149

13149:                                            ; preds = %13197, %13144
  %13150 = phi i16 [ %13198, %13197 ], [ %13147, %13144 ]
  %13151 = phi i32 [ %13199, %13197 ], [ 0, %13144 ]
  %13152 = getelementptr %struct.mxl5005s_state, ptr %13145, i32 0, i32 19, i32 %13151
  %13153 = load i16, ptr %13152, align 2
  %13154 = icmp eq i16 %13153, 83
  br i1 %13154, label %13155, label %13197

13155:                                            ; preds = %13149
  %13156 = getelementptr %struct.mxl5005s_state, ptr %13145, i32 0, i32 19, i32 %13151, i32 1
  %13157 = load i16, ptr %13156, align 2
  %13158 = icmp eq i16 %13157, 0
  br i1 %13158, label %13197, label %13159

13159:                                            ; preds = %13190, %13155
  %13160 = phi i32 [ %13191, %13190 ], [ 0, %13155 ]
  %13161 = getelementptr %struct.mxl5005s_state, ptr %13145, i32 0, i32 19, i32 %13151, i32 4, i32 %13160
  store i16 0, ptr %13161, align 2
  %13162 = getelementptr %struct.mxl5005s_state, ptr %13145, i32 0, i32 19, i32 %13151, i32 3, i32 %13160
  %13163 = load i16, ptr %13162, align 2
  %13164 = load ptr, ptr %3, align 4
  %13165 = getelementptr inbounds %struct.mxl5005s_state, ptr %13164, i32 0, i32 24
  %13166 = load i16, ptr %13165, align 4
  %13167 = zext i16 %13166 to i32
  %13168 = icmp eq i16 %13166, 0
  br i1 %13168, label %13190, label %13169

13169:                                            ; preds = %13159
  %13170 = getelementptr %struct.mxl5005s_state, ptr %13145, i32 0, i32 19, i32 %13151, i32 2, i32 %13160
  %13171 = load i16, ptr %13170, align 2
  %13172 = and i16 %13171, 255
  br label %13173

13173:                                            ; preds = %13187, %13169
  %13174 = phi i32 [ 0, %13169 ], [ %13188, %13187 ]
  %13175 = getelementptr %struct.mxl5005s_state, ptr %13164, i32 0, i32 25, i32 %13174
  %13176 = load i16, ptr %13175, align 2
  %13177 = icmp eq i16 %13176, %13172
  br i1 %13177, label %13178, label %13187

13178:                                            ; preds = %13173
  %13179 = and i16 %13163, 255
  %13180 = zext i16 %13179 to i32
  %13181 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13180
  %13182 = load i8, ptr %13181, align 1
  %13183 = zext i8 %13182 to i16
  %13184 = getelementptr %struct.mxl5005s_state, ptr %13164, i32 0, i32 25, i32 %13174, i32 1
  %13185 = load i16, ptr %13184, align 2
  %13186 = and i16 %13185, %13183
  store i16 %13186, ptr %13184, align 2
  br label %13190

13187:                                            ; preds = %13173
  %13188 = add nuw nsw i32 %13174, 1
  %13189 = icmp eq i32 %13188, %13167
  br i1 %13189, label %13190, label %13173

13190:                                            ; preds = %13187, %13178, %13159
  %13191 = add nuw nsw i32 %13160, 1
  %13192 = load i16, ptr %13156, align 2
  %13193 = zext i16 %13192 to i32
  %13194 = icmp ult i32 %13191, %13193
  br i1 %13194, label %13159, label %13195

13195:                                            ; preds = %13190
  %13196 = load i16, ptr %13146, align 4
  br label %13197

13197:                                            ; preds = %13195, %13155, %13149
  %13198 = phi i16 [ %13196, %13195 ], [ %13150, %13155 ], [ %13150, %13149 ]
  %13199 = add nuw nsw i32 %13151, 1
  %13200 = zext i16 %13198 to i32
  %13201 = icmp ult i32 %13199, %13200
  br i1 %13201, label %13149, label %13202

13202:                                            ; preds = %13197
  %13203 = load ptr, ptr %3, align 4
  br label %13204

13204:                                            ; preds = %13202, %13144
  %13205 = phi ptr [ %13203, %13202 ], [ %13145, %13144 ]
  %13206 = getelementptr inbounds %struct.mxl5005s_state, ptr %13205, i32 0, i32 20
  %13207 = load i16, ptr %13206, align 2
  %13208 = icmp eq i16 %13207, 0
  br i1 %13208, label %13262, label %13209

13209:                                            ; preds = %13257, %13204
  %13210 = phi i16 [ %13258, %13257 ], [ %13207, %13204 ]
  %13211 = phi i32 [ %13259, %13257 ], [ 0, %13204 ]
  %13212 = getelementptr %struct.mxl5005s_state, ptr %13205, i32 0, i32 21, i32 %13211
  %13213 = load i16, ptr %13212, align 2
  %13214 = icmp eq i16 %13213, 83
  br i1 %13214, label %13215, label %13257

13215:                                            ; preds = %13209
  %13216 = getelementptr %struct.mxl5005s_state, ptr %13205, i32 0, i32 21, i32 %13211, i32 1
  %13217 = load i16, ptr %13216, align 2
  %13218 = icmp eq i16 %13217, 0
  br i1 %13218, label %13257, label %13219

13219:                                            ; preds = %13250, %13215
  %13220 = phi i32 [ %13251, %13250 ], [ 0, %13215 ]
  %13221 = getelementptr %struct.mxl5005s_state, ptr %13205, i32 0, i32 21, i32 %13211, i32 4, i32 %13220
  store i16 0, ptr %13221, align 2
  %13222 = getelementptr %struct.mxl5005s_state, ptr %13205, i32 0, i32 21, i32 %13211, i32 3, i32 %13220
  %13223 = load i16, ptr %13222, align 2
  %13224 = load ptr, ptr %3, align 4
  %13225 = getelementptr inbounds %struct.mxl5005s_state, ptr %13224, i32 0, i32 24
  %13226 = load i16, ptr %13225, align 4
  %13227 = zext i16 %13226 to i32
  %13228 = icmp eq i16 %13226, 0
  br i1 %13228, label %13250, label %13229

13229:                                            ; preds = %13219
  %13230 = getelementptr %struct.mxl5005s_state, ptr %13205, i32 0, i32 21, i32 %13211, i32 2, i32 %13220
  %13231 = load i16, ptr %13230, align 2
  %13232 = and i16 %13231, 255
  br label %13233

13233:                                            ; preds = %13247, %13229
  %13234 = phi i32 [ 0, %13229 ], [ %13248, %13247 ]
  %13235 = getelementptr %struct.mxl5005s_state, ptr %13224, i32 0, i32 25, i32 %13234
  %13236 = load i16, ptr %13235, align 2
  %13237 = icmp eq i16 %13236, %13232
  br i1 %13237, label %13238, label %13247

13238:                                            ; preds = %13233
  %13239 = and i16 %13223, 255
  %13240 = zext i16 %13239 to i32
  %13241 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13240
  %13242 = load i8, ptr %13241, align 1
  %13243 = zext i8 %13242 to i16
  %13244 = getelementptr %struct.mxl5005s_state, ptr %13224, i32 0, i32 25, i32 %13234, i32 1
  %13245 = load i16, ptr %13244, align 2
  %13246 = and i16 %13245, %13243
  store i16 %13246, ptr %13244, align 2
  br label %13250

13247:                                            ; preds = %13233
  %13248 = add nuw nsw i32 %13234, 1
  %13249 = icmp eq i32 %13248, %13227
  br i1 %13249, label %13250, label %13233

13250:                                            ; preds = %13247, %13238, %13219
  %13251 = add nuw nsw i32 %13220, 1
  %13252 = load i16, ptr %13216, align 2
  %13253 = zext i16 %13252 to i32
  %13254 = icmp ult i32 %13251, %13253
  br i1 %13254, label %13219, label %13255

13255:                                            ; preds = %13250
  %13256 = load i16, ptr %13206, align 2
  br label %13257

13257:                                            ; preds = %13255, %13215, %13209
  %13258 = phi i16 [ %13256, %13255 ], [ %13210, %13215 ], [ %13210, %13209 ]
  %13259 = add nuw nsw i32 %13211, 1
  %13260 = zext i16 %13258 to i32
  %13261 = icmp ult i32 %13259, %13260
  br i1 %13261, label %13209, label %13262

13262:                                            ; preds = %13257, %13204
  %13263 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %13264 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %13265 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %13266 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %13267 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %13268 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %13269 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %13270 = load i32, ptr %5, align 4
  br label %13271

13271:                                            ; preds = %13262, %13140
  %13272 = phi i32 [ %13270, %13262 ], [ %13141, %13140 ]
  %13273 = add i32 %13272, -430000000
  %13274 = icmp ult i32 %13273, 40000000
  br i1 %13274, label %13275, label %13283

13275:                                            ; preds = %13271
  %13276 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %13277 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %13278 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %13279 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %13280 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %13281 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %13282 = load i32, ptr %5, align 4
  br label %13283

13283:                                            ; preds = %13275, %13271
  %13284 = phi i32 [ %13282, %13275 ], [ %13272, %13271 ]
  %13285 = add i32 %13284, -470000000
  %13286 = icmp ult i32 %13285, 100000000
  br i1 %13286, label %13287, label %13298

13287:                                            ; preds = %13283
  %13288 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %13289 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %13290 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %13291 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %13292 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %13293 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %13294 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %13295 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %13296 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %13297 = load i32, ptr %5, align 4
  br label %13298

13298:                                            ; preds = %13287, %13283
  %13299 = phi i32 [ %13297, %13287 ], [ %13284, %13283 ]
  %13300 = add i32 %13299, -570000000
  %13301 = icmp ult i32 %13300, 50000000
  br i1 %13301, label %13302, label %13545

13302:                                            ; preds = %13298
  %13303 = load ptr, ptr %3, align 4
  %13304 = getelementptr inbounds %struct.mxl5005s_state, ptr %13303, i32 0, i32 18
  %13305 = load i16, ptr %13304, align 4
  %13306 = icmp eq i16 %13305, 0
  br i1 %13306, label %13362, label %13307

13307:                                            ; preds = %13355, %13302
  %13308 = phi i16 [ %13356, %13355 ], [ %13305, %13302 ]
  %13309 = phi i32 [ %13357, %13355 ], [ 0, %13302 ]
  %13310 = getelementptr %struct.mxl5005s_state, ptr %13303, i32 0, i32 19, i32 %13309
  %13311 = load i16, ptr %13310, align 2
  %13312 = icmp eq i16 %13311, 83
  br i1 %13312, label %13313, label %13355

13313:                                            ; preds = %13307
  %13314 = getelementptr %struct.mxl5005s_state, ptr %13303, i32 0, i32 19, i32 %13309, i32 1
  %13315 = load i16, ptr %13314, align 2
  %13316 = icmp eq i16 %13315, 0
  br i1 %13316, label %13355, label %13317

13317:                                            ; preds = %13348, %13313
  %13318 = phi i32 [ %13349, %13348 ], [ 0, %13313 ]
  %13319 = getelementptr %struct.mxl5005s_state, ptr %13303, i32 0, i32 19, i32 %13309, i32 4, i32 %13318
  store i16 0, ptr %13319, align 2
  %13320 = getelementptr %struct.mxl5005s_state, ptr %13303, i32 0, i32 19, i32 %13309, i32 3, i32 %13318
  %13321 = load i16, ptr %13320, align 2
  %13322 = load ptr, ptr %3, align 4
  %13323 = getelementptr inbounds %struct.mxl5005s_state, ptr %13322, i32 0, i32 24
  %13324 = load i16, ptr %13323, align 4
  %13325 = zext i16 %13324 to i32
  %13326 = icmp eq i16 %13324, 0
  br i1 %13326, label %13348, label %13327

13327:                                            ; preds = %13317
  %13328 = getelementptr %struct.mxl5005s_state, ptr %13303, i32 0, i32 19, i32 %13309, i32 2, i32 %13318
  %13329 = load i16, ptr %13328, align 2
  %13330 = and i16 %13329, 255
  br label %13331

13331:                                            ; preds = %13345, %13327
  %13332 = phi i32 [ 0, %13327 ], [ %13346, %13345 ]
  %13333 = getelementptr %struct.mxl5005s_state, ptr %13322, i32 0, i32 25, i32 %13332
  %13334 = load i16, ptr %13333, align 2
  %13335 = icmp eq i16 %13334, %13330
  br i1 %13335, label %13336, label %13345

13336:                                            ; preds = %13331
  %13337 = and i16 %13321, 255
  %13338 = zext i16 %13337 to i32
  %13339 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13338
  %13340 = load i8, ptr %13339, align 1
  %13341 = zext i8 %13340 to i16
  %13342 = getelementptr %struct.mxl5005s_state, ptr %13322, i32 0, i32 25, i32 %13332, i32 1
  %13343 = load i16, ptr %13342, align 2
  %13344 = and i16 %13343, %13341
  store i16 %13344, ptr %13342, align 2
  br label %13348

13345:                                            ; preds = %13331
  %13346 = add nuw nsw i32 %13332, 1
  %13347 = icmp eq i32 %13346, %13325
  br i1 %13347, label %13348, label %13331

13348:                                            ; preds = %13345, %13336, %13317
  %13349 = add nuw nsw i32 %13318, 1
  %13350 = load i16, ptr %13314, align 2
  %13351 = zext i16 %13350 to i32
  %13352 = icmp ult i32 %13349, %13351
  br i1 %13352, label %13317, label %13353

13353:                                            ; preds = %13348
  %13354 = load i16, ptr %13304, align 4
  br label %13355

13355:                                            ; preds = %13353, %13313, %13307
  %13356 = phi i16 [ %13354, %13353 ], [ %13308, %13313 ], [ %13308, %13307 ]
  %13357 = add nuw nsw i32 %13309, 1
  %13358 = zext i16 %13356 to i32
  %13359 = icmp ult i32 %13357, %13358
  br i1 %13359, label %13307, label %13360

13360:                                            ; preds = %13355
  %13361 = load ptr, ptr %3, align 4
  br label %13362

13362:                                            ; preds = %13360, %13302
  %13363 = phi ptr [ %13361, %13360 ], [ %13303, %13302 ]
  %13364 = getelementptr inbounds %struct.mxl5005s_state, ptr %13363, i32 0, i32 20
  %13365 = load i16, ptr %13364, align 2
  %13366 = icmp eq i16 %13365, 0
  br i1 %13366, label %13420, label %13367

13367:                                            ; preds = %13415, %13362
  %13368 = phi i16 [ %13416, %13415 ], [ %13365, %13362 ]
  %13369 = phi i32 [ %13417, %13415 ], [ 0, %13362 ]
  %13370 = getelementptr %struct.mxl5005s_state, ptr %13363, i32 0, i32 21, i32 %13369
  %13371 = load i16, ptr %13370, align 2
  %13372 = icmp eq i16 %13371, 83
  br i1 %13372, label %13373, label %13415

13373:                                            ; preds = %13367
  %13374 = getelementptr %struct.mxl5005s_state, ptr %13363, i32 0, i32 21, i32 %13369, i32 1
  %13375 = load i16, ptr %13374, align 2
  %13376 = icmp eq i16 %13375, 0
  br i1 %13376, label %13415, label %13377

13377:                                            ; preds = %13408, %13373
  %13378 = phi i32 [ %13409, %13408 ], [ 0, %13373 ]
  %13379 = getelementptr %struct.mxl5005s_state, ptr %13363, i32 0, i32 21, i32 %13369, i32 4, i32 %13378
  store i16 0, ptr %13379, align 2
  %13380 = getelementptr %struct.mxl5005s_state, ptr %13363, i32 0, i32 21, i32 %13369, i32 3, i32 %13378
  %13381 = load i16, ptr %13380, align 2
  %13382 = load ptr, ptr %3, align 4
  %13383 = getelementptr inbounds %struct.mxl5005s_state, ptr %13382, i32 0, i32 24
  %13384 = load i16, ptr %13383, align 4
  %13385 = zext i16 %13384 to i32
  %13386 = icmp eq i16 %13384, 0
  br i1 %13386, label %13408, label %13387

13387:                                            ; preds = %13377
  %13388 = getelementptr %struct.mxl5005s_state, ptr %13363, i32 0, i32 21, i32 %13369, i32 2, i32 %13378
  %13389 = load i16, ptr %13388, align 2
  %13390 = and i16 %13389, 255
  br label %13391

13391:                                            ; preds = %13405, %13387
  %13392 = phi i32 [ 0, %13387 ], [ %13406, %13405 ]
  %13393 = getelementptr %struct.mxl5005s_state, ptr %13382, i32 0, i32 25, i32 %13392
  %13394 = load i16, ptr %13393, align 2
  %13395 = icmp eq i16 %13394, %13390
  br i1 %13395, label %13396, label %13405

13396:                                            ; preds = %13391
  %13397 = and i16 %13381, 255
  %13398 = zext i16 %13397 to i32
  %13399 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13398
  %13400 = load i8, ptr %13399, align 1
  %13401 = zext i8 %13400 to i16
  %13402 = getelementptr %struct.mxl5005s_state, ptr %13382, i32 0, i32 25, i32 %13392, i32 1
  %13403 = load i16, ptr %13402, align 2
  %13404 = and i16 %13403, %13401
  store i16 %13404, ptr %13402, align 2
  br label %13408

13405:                                            ; preds = %13391
  %13406 = add nuw nsw i32 %13392, 1
  %13407 = icmp eq i32 %13406, %13385
  br i1 %13407, label %13408, label %13391

13408:                                            ; preds = %13405, %13396, %13377
  %13409 = add nuw nsw i32 %13378, 1
  %13410 = load i16, ptr %13374, align 2
  %13411 = zext i16 %13410 to i32
  %13412 = icmp ult i32 %13409, %13411
  br i1 %13412, label %13377, label %13413

13413:                                            ; preds = %13408
  %13414 = load i16, ptr %13364, align 2
  br label %13415

13415:                                            ; preds = %13413, %13373, %13367
  %13416 = phi i16 [ %13414, %13413 ], [ %13368, %13373 ], [ %13368, %13367 ]
  %13417 = add nuw nsw i32 %13369, 1
  %13418 = zext i16 %13416 to i32
  %13419 = icmp ult i32 %13417, %13418
  br i1 %13419, label %13367, label %13420

13420:                                            ; preds = %13415, %13362
  %13421 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %13422 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %13423 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %13424 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %13425 = load ptr, ptr %3, align 4
  %13426 = getelementptr inbounds %struct.mxl5005s_state, ptr %13425, i32 0, i32 18
  %13427 = load i16, ptr %13426, align 4
  %13428 = icmp eq i16 %13427, 0
  br i1 %13428, label %13484, label %13429

13429:                                            ; preds = %13477, %13420
  %13430 = phi i16 [ %13478, %13477 ], [ %13427, %13420 ]
  %13431 = phi i32 [ %13479, %13477 ], [ 0, %13420 ]
  %13432 = getelementptr %struct.mxl5005s_state, ptr %13425, i32 0, i32 19, i32 %13431
  %13433 = load i16, ptr %13432, align 2
  %13434 = icmp eq i16 %13433, 82
  br i1 %13434, label %13435, label %13477

13435:                                            ; preds = %13429
  %13436 = getelementptr %struct.mxl5005s_state, ptr %13425, i32 0, i32 19, i32 %13431, i32 1
  %13437 = load i16, ptr %13436, align 2
  %13438 = icmp eq i16 %13437, 0
  br i1 %13438, label %13477, label %13439

13439:                                            ; preds = %13470, %13435
  %13440 = phi i32 [ %13471, %13470 ], [ 0, %13435 ]
  %13441 = getelementptr %struct.mxl5005s_state, ptr %13425, i32 0, i32 19, i32 %13431, i32 4, i32 %13440
  store i16 0, ptr %13441, align 2
  %13442 = getelementptr %struct.mxl5005s_state, ptr %13425, i32 0, i32 19, i32 %13431, i32 3, i32 %13440
  %13443 = load i16, ptr %13442, align 2
  %13444 = load ptr, ptr %3, align 4
  %13445 = getelementptr inbounds %struct.mxl5005s_state, ptr %13444, i32 0, i32 24
  %13446 = load i16, ptr %13445, align 4
  %13447 = zext i16 %13446 to i32
  %13448 = icmp eq i16 %13446, 0
  br i1 %13448, label %13470, label %13449

13449:                                            ; preds = %13439
  %13450 = getelementptr %struct.mxl5005s_state, ptr %13425, i32 0, i32 19, i32 %13431, i32 2, i32 %13440
  %13451 = load i16, ptr %13450, align 2
  %13452 = and i16 %13451, 255
  br label %13453

13453:                                            ; preds = %13467, %13449
  %13454 = phi i32 [ 0, %13449 ], [ %13468, %13467 ]
  %13455 = getelementptr %struct.mxl5005s_state, ptr %13444, i32 0, i32 25, i32 %13454
  %13456 = load i16, ptr %13455, align 2
  %13457 = icmp eq i16 %13456, %13452
  br i1 %13457, label %13458, label %13467

13458:                                            ; preds = %13453
  %13459 = and i16 %13443, 255
  %13460 = zext i16 %13459 to i32
  %13461 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13460
  %13462 = load i8, ptr %13461, align 1
  %13463 = zext i8 %13462 to i16
  %13464 = getelementptr %struct.mxl5005s_state, ptr %13444, i32 0, i32 25, i32 %13454, i32 1
  %13465 = load i16, ptr %13464, align 2
  %13466 = and i16 %13465, %13463
  store i16 %13466, ptr %13464, align 2
  br label %13470

13467:                                            ; preds = %13453
  %13468 = add nuw nsw i32 %13454, 1
  %13469 = icmp eq i32 %13468, %13447
  br i1 %13469, label %13470, label %13453

13470:                                            ; preds = %13467, %13458, %13439
  %13471 = add nuw nsw i32 %13440, 1
  %13472 = load i16, ptr %13436, align 2
  %13473 = zext i16 %13472 to i32
  %13474 = icmp ult i32 %13471, %13473
  br i1 %13474, label %13439, label %13475

13475:                                            ; preds = %13470
  %13476 = load i16, ptr %13426, align 4
  br label %13477

13477:                                            ; preds = %13475, %13435, %13429
  %13478 = phi i16 [ %13476, %13475 ], [ %13430, %13435 ], [ %13430, %13429 ]
  %13479 = add nuw nsw i32 %13431, 1
  %13480 = zext i16 %13478 to i32
  %13481 = icmp ult i32 %13479, %13480
  br i1 %13481, label %13429, label %13482

13482:                                            ; preds = %13477
  %13483 = load ptr, ptr %3, align 4
  br label %13484

13484:                                            ; preds = %13482, %13420
  %13485 = phi ptr [ %13483, %13482 ], [ %13425, %13420 ]
  %13486 = getelementptr inbounds %struct.mxl5005s_state, ptr %13485, i32 0, i32 20
  %13487 = load i16, ptr %13486, align 2
  %13488 = icmp eq i16 %13487, 0
  br i1 %13488, label %13542, label %13489

13489:                                            ; preds = %13537, %13484
  %13490 = phi i16 [ %13538, %13537 ], [ %13487, %13484 ]
  %13491 = phi i32 [ %13539, %13537 ], [ 0, %13484 ]
  %13492 = getelementptr %struct.mxl5005s_state, ptr %13485, i32 0, i32 21, i32 %13491
  %13493 = load i16, ptr %13492, align 2
  %13494 = icmp eq i16 %13493, 82
  br i1 %13494, label %13495, label %13537

13495:                                            ; preds = %13489
  %13496 = getelementptr %struct.mxl5005s_state, ptr %13485, i32 0, i32 21, i32 %13491, i32 1
  %13497 = load i16, ptr %13496, align 2
  %13498 = icmp eq i16 %13497, 0
  br i1 %13498, label %13537, label %13499

13499:                                            ; preds = %13530, %13495
  %13500 = phi i32 [ %13531, %13530 ], [ 0, %13495 ]
  %13501 = getelementptr %struct.mxl5005s_state, ptr %13485, i32 0, i32 21, i32 %13491, i32 4, i32 %13500
  store i16 0, ptr %13501, align 2
  %13502 = getelementptr %struct.mxl5005s_state, ptr %13485, i32 0, i32 21, i32 %13491, i32 3, i32 %13500
  %13503 = load i16, ptr %13502, align 2
  %13504 = load ptr, ptr %3, align 4
  %13505 = getelementptr inbounds %struct.mxl5005s_state, ptr %13504, i32 0, i32 24
  %13506 = load i16, ptr %13505, align 4
  %13507 = zext i16 %13506 to i32
  %13508 = icmp eq i16 %13506, 0
  br i1 %13508, label %13530, label %13509

13509:                                            ; preds = %13499
  %13510 = getelementptr %struct.mxl5005s_state, ptr %13485, i32 0, i32 21, i32 %13491, i32 2, i32 %13500
  %13511 = load i16, ptr %13510, align 2
  %13512 = and i16 %13511, 255
  br label %13513

13513:                                            ; preds = %13527, %13509
  %13514 = phi i32 [ 0, %13509 ], [ %13528, %13527 ]
  %13515 = getelementptr %struct.mxl5005s_state, ptr %13504, i32 0, i32 25, i32 %13514
  %13516 = load i16, ptr %13515, align 2
  %13517 = icmp eq i16 %13516, %13512
  br i1 %13517, label %13518, label %13527

13518:                                            ; preds = %13513
  %13519 = and i16 %13503, 255
  %13520 = zext i16 %13519 to i32
  %13521 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13520
  %13522 = load i8, ptr %13521, align 1
  %13523 = zext i8 %13522 to i16
  %13524 = getelementptr %struct.mxl5005s_state, ptr %13504, i32 0, i32 25, i32 %13514, i32 1
  %13525 = load i16, ptr %13524, align 2
  %13526 = and i16 %13525, %13523
  store i16 %13526, ptr %13524, align 2
  br label %13530

13527:                                            ; preds = %13513
  %13528 = add nuw nsw i32 %13514, 1
  %13529 = icmp eq i32 %13528, %13507
  br i1 %13529, label %13530, label %13513

13530:                                            ; preds = %13527, %13518, %13499
  %13531 = add nuw nsw i32 %13500, 1
  %13532 = load i16, ptr %13496, align 2
  %13533 = zext i16 %13532 to i32
  %13534 = icmp ult i32 %13531, %13533
  br i1 %13534, label %13499, label %13535

13535:                                            ; preds = %13530
  %13536 = load i16, ptr %13486, align 2
  br label %13537

13537:                                            ; preds = %13535, %13495, %13489
  %13538 = phi i16 [ %13536, %13535 ], [ %13490, %13495 ], [ %13490, %13489 ]
  %13539 = add nuw nsw i32 %13491, 1
  %13540 = zext i16 %13538 to i32
  %13541 = icmp ult i32 %13539, %13540
  br i1 %13541, label %13489, label %13542

13542:                                            ; preds = %13537, %13484
  %13543 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %13544 = load i32, ptr %5, align 4
  br label %13545

13545:                                            ; preds = %13542, %13298
  %13546 = phi i32 [ %13544, %13542 ], [ %13299, %13298 ]
  %13547 = add i32 %13546, -620000000
  %13548 = icmp ult i32 %13547, 140000000
  br i1 %13548, label %13549, label %13676

13549:                                            ; preds = %13545
  %13550 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %13551 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %13552 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %13553 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %13554 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %13555 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %13556 = load ptr, ptr %3, align 4
  %13557 = getelementptr inbounds %struct.mxl5005s_state, ptr %13556, i32 0, i32 18
  %13558 = load i16, ptr %13557, align 4
  %13559 = icmp eq i16 %13558, 0
  br i1 %13559, label %13615, label %13560

13560:                                            ; preds = %13608, %13549
  %13561 = phi i16 [ %13609, %13608 ], [ %13558, %13549 ]
  %13562 = phi i32 [ %13610, %13608 ], [ 0, %13549 ]
  %13563 = getelementptr %struct.mxl5005s_state, ptr %13556, i32 0, i32 19, i32 %13562
  %13564 = load i16, ptr %13563, align 2
  %13565 = icmp eq i16 %13564, 82
  br i1 %13565, label %13566, label %13608

13566:                                            ; preds = %13560
  %13567 = getelementptr %struct.mxl5005s_state, ptr %13556, i32 0, i32 19, i32 %13562, i32 1
  %13568 = load i16, ptr %13567, align 2
  %13569 = icmp eq i16 %13568, 0
  br i1 %13569, label %13608, label %13570

13570:                                            ; preds = %13601, %13566
  %13571 = phi i32 [ %13602, %13601 ], [ 0, %13566 ]
  %13572 = getelementptr %struct.mxl5005s_state, ptr %13556, i32 0, i32 19, i32 %13562, i32 4, i32 %13571
  store i16 0, ptr %13572, align 2
  %13573 = getelementptr %struct.mxl5005s_state, ptr %13556, i32 0, i32 19, i32 %13562, i32 3, i32 %13571
  %13574 = load i16, ptr %13573, align 2
  %13575 = load ptr, ptr %3, align 4
  %13576 = getelementptr inbounds %struct.mxl5005s_state, ptr %13575, i32 0, i32 24
  %13577 = load i16, ptr %13576, align 4
  %13578 = zext i16 %13577 to i32
  %13579 = icmp eq i16 %13577, 0
  br i1 %13579, label %13601, label %13580

13580:                                            ; preds = %13570
  %13581 = getelementptr %struct.mxl5005s_state, ptr %13556, i32 0, i32 19, i32 %13562, i32 2, i32 %13571
  %13582 = load i16, ptr %13581, align 2
  %13583 = and i16 %13582, 255
  br label %13584

13584:                                            ; preds = %13598, %13580
  %13585 = phi i32 [ 0, %13580 ], [ %13599, %13598 ]
  %13586 = getelementptr %struct.mxl5005s_state, ptr %13575, i32 0, i32 25, i32 %13585
  %13587 = load i16, ptr %13586, align 2
  %13588 = icmp eq i16 %13587, %13583
  br i1 %13588, label %13589, label %13598

13589:                                            ; preds = %13584
  %13590 = and i16 %13574, 255
  %13591 = zext i16 %13590 to i32
  %13592 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13591
  %13593 = load i8, ptr %13592, align 1
  %13594 = zext i8 %13593 to i16
  %13595 = getelementptr %struct.mxl5005s_state, ptr %13575, i32 0, i32 25, i32 %13585, i32 1
  %13596 = load i16, ptr %13595, align 2
  %13597 = and i16 %13596, %13594
  store i16 %13597, ptr %13595, align 2
  br label %13601

13598:                                            ; preds = %13584
  %13599 = add nuw nsw i32 %13585, 1
  %13600 = icmp eq i32 %13599, %13578
  br i1 %13600, label %13601, label %13584

13601:                                            ; preds = %13598, %13589, %13570
  %13602 = add nuw nsw i32 %13571, 1
  %13603 = load i16, ptr %13567, align 2
  %13604 = zext i16 %13603 to i32
  %13605 = icmp ult i32 %13602, %13604
  br i1 %13605, label %13570, label %13606

13606:                                            ; preds = %13601
  %13607 = load i16, ptr %13557, align 4
  br label %13608

13608:                                            ; preds = %13606, %13566, %13560
  %13609 = phi i16 [ %13607, %13606 ], [ %13561, %13566 ], [ %13561, %13560 ]
  %13610 = add nuw nsw i32 %13562, 1
  %13611 = zext i16 %13609 to i32
  %13612 = icmp ult i32 %13610, %13611
  br i1 %13612, label %13560, label %13613

13613:                                            ; preds = %13608
  %13614 = load ptr, ptr %3, align 4
  br label %13615

13615:                                            ; preds = %13613, %13549
  %13616 = phi ptr [ %13614, %13613 ], [ %13556, %13549 ]
  %13617 = getelementptr inbounds %struct.mxl5005s_state, ptr %13616, i32 0, i32 20
  %13618 = load i16, ptr %13617, align 2
  %13619 = icmp eq i16 %13618, 0
  br i1 %13619, label %13673, label %13620

13620:                                            ; preds = %13668, %13615
  %13621 = phi i16 [ %13669, %13668 ], [ %13618, %13615 ]
  %13622 = phi i32 [ %13670, %13668 ], [ 0, %13615 ]
  %13623 = getelementptr %struct.mxl5005s_state, ptr %13616, i32 0, i32 21, i32 %13622
  %13624 = load i16, ptr %13623, align 2
  %13625 = icmp eq i16 %13624, 82
  br i1 %13625, label %13626, label %13668

13626:                                            ; preds = %13620
  %13627 = getelementptr %struct.mxl5005s_state, ptr %13616, i32 0, i32 21, i32 %13622, i32 1
  %13628 = load i16, ptr %13627, align 2
  %13629 = icmp eq i16 %13628, 0
  br i1 %13629, label %13668, label %13630

13630:                                            ; preds = %13661, %13626
  %13631 = phi i32 [ %13662, %13661 ], [ 0, %13626 ]
  %13632 = getelementptr %struct.mxl5005s_state, ptr %13616, i32 0, i32 21, i32 %13622, i32 4, i32 %13631
  store i16 0, ptr %13632, align 2
  %13633 = getelementptr %struct.mxl5005s_state, ptr %13616, i32 0, i32 21, i32 %13622, i32 3, i32 %13631
  %13634 = load i16, ptr %13633, align 2
  %13635 = load ptr, ptr %3, align 4
  %13636 = getelementptr inbounds %struct.mxl5005s_state, ptr %13635, i32 0, i32 24
  %13637 = load i16, ptr %13636, align 4
  %13638 = zext i16 %13637 to i32
  %13639 = icmp eq i16 %13637, 0
  br i1 %13639, label %13661, label %13640

13640:                                            ; preds = %13630
  %13641 = getelementptr %struct.mxl5005s_state, ptr %13616, i32 0, i32 21, i32 %13622, i32 2, i32 %13631
  %13642 = load i16, ptr %13641, align 2
  %13643 = and i16 %13642, 255
  br label %13644

13644:                                            ; preds = %13658, %13640
  %13645 = phi i32 [ 0, %13640 ], [ %13659, %13658 ]
  %13646 = getelementptr %struct.mxl5005s_state, ptr %13635, i32 0, i32 25, i32 %13645
  %13647 = load i16, ptr %13646, align 2
  %13648 = icmp eq i16 %13647, %13643
  br i1 %13648, label %13649, label %13658

13649:                                            ; preds = %13644
  %13650 = and i16 %13634, 255
  %13651 = zext i16 %13650 to i32
  %13652 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13651
  %13653 = load i8, ptr %13652, align 1
  %13654 = zext i8 %13653 to i16
  %13655 = getelementptr %struct.mxl5005s_state, ptr %13635, i32 0, i32 25, i32 %13645, i32 1
  %13656 = load i16, ptr %13655, align 2
  %13657 = and i16 %13656, %13654
  store i16 %13657, ptr %13655, align 2
  br label %13661

13658:                                            ; preds = %13644
  %13659 = add nuw nsw i32 %13645, 1
  %13660 = icmp eq i32 %13659, %13638
  br i1 %13660, label %13661, label %13644

13661:                                            ; preds = %13658, %13649, %13630
  %13662 = add nuw nsw i32 %13631, 1
  %13663 = load i16, ptr %13627, align 2
  %13664 = zext i16 %13663 to i32
  %13665 = icmp ult i32 %13662, %13664
  br i1 %13665, label %13630, label %13666

13666:                                            ; preds = %13661
  %13667 = load i16, ptr %13617, align 2
  br label %13668

13668:                                            ; preds = %13666, %13626, %13620
  %13669 = phi i16 [ %13667, %13666 ], [ %13621, %13626 ], [ %13621, %13620 ]
  %13670 = add nuw nsw i32 %13622, 1
  %13671 = zext i16 %13669 to i32
  %13672 = icmp ult i32 %13670, %13671
  br i1 %13672, label %13620, label %13673

13673:                                            ; preds = %13668, %13615
  %13674 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %13675 = load i32, ptr %5, align 4
  br label %13676

13676:                                            ; preds = %13673, %13545
  %13677 = phi i32 [ %13675, %13673 ], [ %13546, %13545 ]
  %13678 = add i32 %13677, -760000000
  %13679 = icmp ult i32 %13678, 140000001
  br i1 %13679, label %13680, label %13803

13680:                                            ; preds = %13676
  %13681 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 1) #12
  %13682 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 83, i32 noundef 1, i16 noundef zeroext 2) #12
  %13683 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %13684 = load ptr, ptr %3, align 4
  %13685 = getelementptr inbounds %struct.mxl5005s_state, ptr %13684, i32 0, i32 18
  %13686 = load i16, ptr %13685, align 4
  %13687 = icmp eq i16 %13686, 0
  br i1 %13687, label %13743, label %13688

13688:                                            ; preds = %13736, %13680
  %13689 = phi i16 [ %13737, %13736 ], [ %13686, %13680 ]
  %13690 = phi i32 [ %13738, %13736 ], [ 0, %13680 ]
  %13691 = getelementptr %struct.mxl5005s_state, ptr %13684, i32 0, i32 19, i32 %13690
  %13692 = load i16, ptr %13691, align 2
  %13693 = icmp eq i16 %13692, 82
  br i1 %13693, label %13694, label %13736

13694:                                            ; preds = %13688
  %13695 = getelementptr %struct.mxl5005s_state, ptr %13684, i32 0, i32 19, i32 %13690, i32 1
  %13696 = load i16, ptr %13695, align 2
  %13697 = icmp eq i16 %13696, 0
  br i1 %13697, label %13736, label %13698

13698:                                            ; preds = %13729, %13694
  %13699 = phi i32 [ %13730, %13729 ], [ 0, %13694 ]
  %13700 = getelementptr %struct.mxl5005s_state, ptr %13684, i32 0, i32 19, i32 %13690, i32 4, i32 %13699
  store i16 0, ptr %13700, align 2
  %13701 = getelementptr %struct.mxl5005s_state, ptr %13684, i32 0, i32 19, i32 %13690, i32 3, i32 %13699
  %13702 = load i16, ptr %13701, align 2
  %13703 = load ptr, ptr %3, align 4
  %13704 = getelementptr inbounds %struct.mxl5005s_state, ptr %13703, i32 0, i32 24
  %13705 = load i16, ptr %13704, align 4
  %13706 = zext i16 %13705 to i32
  %13707 = icmp eq i16 %13705, 0
  br i1 %13707, label %13729, label %13708

13708:                                            ; preds = %13698
  %13709 = getelementptr %struct.mxl5005s_state, ptr %13684, i32 0, i32 19, i32 %13690, i32 2, i32 %13699
  %13710 = load i16, ptr %13709, align 2
  %13711 = and i16 %13710, 255
  br label %13712

13712:                                            ; preds = %13726, %13708
  %13713 = phi i32 [ 0, %13708 ], [ %13727, %13726 ]
  %13714 = getelementptr %struct.mxl5005s_state, ptr %13703, i32 0, i32 25, i32 %13713
  %13715 = load i16, ptr %13714, align 2
  %13716 = icmp eq i16 %13715, %13711
  br i1 %13716, label %13717, label %13726

13717:                                            ; preds = %13712
  %13718 = and i16 %13702, 255
  %13719 = zext i16 %13718 to i32
  %13720 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13719
  %13721 = load i8, ptr %13720, align 1
  %13722 = zext i8 %13721 to i16
  %13723 = getelementptr %struct.mxl5005s_state, ptr %13703, i32 0, i32 25, i32 %13713, i32 1
  %13724 = load i16, ptr %13723, align 2
  %13725 = and i16 %13724, %13722
  store i16 %13725, ptr %13723, align 2
  br label %13729

13726:                                            ; preds = %13712
  %13727 = add nuw nsw i32 %13713, 1
  %13728 = icmp eq i32 %13727, %13706
  br i1 %13728, label %13729, label %13712

13729:                                            ; preds = %13726, %13717, %13698
  %13730 = add nuw nsw i32 %13699, 1
  %13731 = load i16, ptr %13695, align 2
  %13732 = zext i16 %13731 to i32
  %13733 = icmp ult i32 %13730, %13732
  br i1 %13733, label %13698, label %13734

13734:                                            ; preds = %13729
  %13735 = load i16, ptr %13685, align 4
  br label %13736

13736:                                            ; preds = %13734, %13694, %13688
  %13737 = phi i16 [ %13735, %13734 ], [ %13689, %13694 ], [ %13689, %13688 ]
  %13738 = add nuw nsw i32 %13690, 1
  %13739 = zext i16 %13737 to i32
  %13740 = icmp ult i32 %13738, %13739
  br i1 %13740, label %13688, label %13741

13741:                                            ; preds = %13736
  %13742 = load ptr, ptr %3, align 4
  br label %13743

13743:                                            ; preds = %13741, %13680
  %13744 = phi ptr [ %13742, %13741 ], [ %13684, %13680 ]
  %13745 = getelementptr inbounds %struct.mxl5005s_state, ptr %13744, i32 0, i32 20
  %13746 = load i16, ptr %13745, align 2
  %13747 = icmp eq i16 %13746, 0
  br i1 %13747, label %13801, label %13748

13748:                                            ; preds = %13796, %13743
  %13749 = phi i16 [ %13797, %13796 ], [ %13746, %13743 ]
  %13750 = phi i32 [ %13798, %13796 ], [ 0, %13743 ]
  %13751 = getelementptr %struct.mxl5005s_state, ptr %13744, i32 0, i32 21, i32 %13750
  %13752 = load i16, ptr %13751, align 2
  %13753 = icmp eq i16 %13752, 82
  br i1 %13753, label %13754, label %13796

13754:                                            ; preds = %13748
  %13755 = getelementptr %struct.mxl5005s_state, ptr %13744, i32 0, i32 21, i32 %13750, i32 1
  %13756 = load i16, ptr %13755, align 2
  %13757 = icmp eq i16 %13756, 0
  br i1 %13757, label %13796, label %13758

13758:                                            ; preds = %13789, %13754
  %13759 = phi i32 [ %13790, %13789 ], [ 0, %13754 ]
  %13760 = getelementptr %struct.mxl5005s_state, ptr %13744, i32 0, i32 21, i32 %13750, i32 4, i32 %13759
  store i16 0, ptr %13760, align 2
  %13761 = getelementptr %struct.mxl5005s_state, ptr %13744, i32 0, i32 21, i32 %13750, i32 3, i32 %13759
  %13762 = load i16, ptr %13761, align 2
  %13763 = load ptr, ptr %3, align 4
  %13764 = getelementptr inbounds %struct.mxl5005s_state, ptr %13763, i32 0, i32 24
  %13765 = load i16, ptr %13764, align 4
  %13766 = zext i16 %13765 to i32
  %13767 = icmp eq i16 %13765, 0
  br i1 %13767, label %13789, label %13768

13768:                                            ; preds = %13758
  %13769 = getelementptr %struct.mxl5005s_state, ptr %13744, i32 0, i32 21, i32 %13750, i32 2, i32 %13759
  %13770 = load i16, ptr %13769, align 2
  %13771 = and i16 %13770, 255
  br label %13772

13772:                                            ; preds = %13786, %13768
  %13773 = phi i32 [ 0, %13768 ], [ %13787, %13786 ]
  %13774 = getelementptr %struct.mxl5005s_state, ptr %13763, i32 0, i32 25, i32 %13773
  %13775 = load i16, ptr %13774, align 2
  %13776 = icmp eq i16 %13775, %13771
  br i1 %13776, label %13777, label %13786

13777:                                            ; preds = %13772
  %13778 = and i16 %13762, 255
  %13779 = zext i16 %13778 to i32
  %13780 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13779
  %13781 = load i8, ptr %13780, align 1
  %13782 = zext i8 %13781 to i16
  %13783 = getelementptr %struct.mxl5005s_state, ptr %13763, i32 0, i32 25, i32 %13773, i32 1
  %13784 = load i16, ptr %13783, align 2
  %13785 = and i16 %13784, %13782
  store i16 %13785, ptr %13783, align 2
  br label %13789

13786:                                            ; preds = %13772
  %13787 = add nuw nsw i32 %13773, 1
  %13788 = icmp eq i32 %13787, %13766
  br i1 %13788, label %13789, label %13772

13789:                                            ; preds = %13786, %13777, %13758
  %13790 = add nuw nsw i32 %13759, 1
  %13791 = load i16, ptr %13755, align 2
  %13792 = zext i16 %13791 to i32
  %13793 = icmp ult i32 %13790, %13792
  br i1 %13793, label %13758, label %13794

13794:                                            ; preds = %13789
  %13795 = load i16, ptr %13745, align 2
  br label %13796

13796:                                            ; preds = %13794, %13754, %13748
  %13797 = phi i16 [ %13795, %13794 ], [ %13749, %13754 ], [ %13749, %13748 ]
  %13798 = add nuw nsw i32 %13750, 1
  %13799 = zext i16 %13797 to i32
  %13800 = icmp ult i32 %13798, %13799
  br i1 %13800, label %13748, label %13801

13801:                                            ; preds = %13796, %13743
  %13802 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %13803

13803:                                            ; preds = %13801, %13676, %12510
  %13804 = load i8, ptr %7001, align 1
  br label %13805

13805:                                            ; preds = %13803, %12144
  %13806 = phi i8 [ %13804, %13803 ], [ %12145, %12144 ]
  %13807 = icmp eq i8 %13806, 6
  br i1 %13807, label %13808, label %15068

13808:                                            ; preds = %13805
  %13809 = load ptr, ptr %3, align 4
  %13810 = getelementptr inbounds %struct.mxl5005s_state, ptr %13809, i32 0, i32 18
  %13811 = load i16, ptr %13810, align 4
  %13812 = icmp eq i16 %13811, 0
  br i1 %13812, label %13868, label %13813

13813:                                            ; preds = %13861, %13808
  %13814 = phi i16 [ %13862, %13861 ], [ %13811, %13808 ]
  %13815 = phi i32 [ %13863, %13861 ], [ 0, %13808 ]
  %13816 = getelementptr %struct.mxl5005s_state, ptr %13809, i32 0, i32 19, i32 %13815
  %13817 = load i16, ptr %13816, align 2
  %13818 = icmp eq i16 %13817, 86
  br i1 %13818, label %13819, label %13861

13819:                                            ; preds = %13813
  %13820 = getelementptr %struct.mxl5005s_state, ptr %13809, i32 0, i32 19, i32 %13815, i32 1
  %13821 = load i16, ptr %13820, align 2
  %13822 = icmp eq i16 %13821, 0
  br i1 %13822, label %13861, label %13823

13823:                                            ; preds = %13854, %13819
  %13824 = phi i32 [ %13855, %13854 ], [ 0, %13819 ]
  %13825 = getelementptr %struct.mxl5005s_state, ptr %13809, i32 0, i32 19, i32 %13815, i32 4, i32 %13824
  store i16 0, ptr %13825, align 2
  %13826 = getelementptr %struct.mxl5005s_state, ptr %13809, i32 0, i32 19, i32 %13815, i32 3, i32 %13824
  %13827 = load i16, ptr %13826, align 2
  %13828 = load ptr, ptr %3, align 4
  %13829 = getelementptr inbounds %struct.mxl5005s_state, ptr %13828, i32 0, i32 24
  %13830 = load i16, ptr %13829, align 4
  %13831 = zext i16 %13830 to i32
  %13832 = icmp eq i16 %13830, 0
  br i1 %13832, label %13854, label %13833

13833:                                            ; preds = %13823
  %13834 = getelementptr %struct.mxl5005s_state, ptr %13809, i32 0, i32 19, i32 %13815, i32 2, i32 %13824
  %13835 = load i16, ptr %13834, align 2
  %13836 = and i16 %13835, 255
  br label %13837

13837:                                            ; preds = %13851, %13833
  %13838 = phi i32 [ 0, %13833 ], [ %13852, %13851 ]
  %13839 = getelementptr %struct.mxl5005s_state, ptr %13828, i32 0, i32 25, i32 %13838
  %13840 = load i16, ptr %13839, align 2
  %13841 = icmp eq i16 %13840, %13836
  br i1 %13841, label %13842, label %13851

13842:                                            ; preds = %13837
  %13843 = and i16 %13827, 255
  %13844 = zext i16 %13843 to i32
  %13845 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13844
  %13846 = load i8, ptr %13845, align 1
  %13847 = zext i8 %13846 to i16
  %13848 = getelementptr %struct.mxl5005s_state, ptr %13828, i32 0, i32 25, i32 %13838, i32 1
  %13849 = load i16, ptr %13848, align 2
  %13850 = and i16 %13849, %13847
  store i16 %13850, ptr %13848, align 2
  br label %13854

13851:                                            ; preds = %13837
  %13852 = add nuw nsw i32 %13838, 1
  %13853 = icmp eq i32 %13852, %13831
  br i1 %13853, label %13854, label %13837

13854:                                            ; preds = %13851, %13842, %13823
  %13855 = add nuw nsw i32 %13824, 1
  %13856 = load i16, ptr %13820, align 2
  %13857 = zext i16 %13856 to i32
  %13858 = icmp ult i32 %13855, %13857
  br i1 %13858, label %13823, label %13859

13859:                                            ; preds = %13854
  %13860 = load i16, ptr %13810, align 4
  br label %13861

13861:                                            ; preds = %13859, %13819, %13813
  %13862 = phi i16 [ %13860, %13859 ], [ %13814, %13819 ], [ %13814, %13813 ]
  %13863 = add nuw nsw i32 %13815, 1
  %13864 = zext i16 %13862 to i32
  %13865 = icmp ult i32 %13863, %13864
  br i1 %13865, label %13813, label %13866

13866:                                            ; preds = %13861
  %13867 = load ptr, ptr %3, align 4
  br label %13868

13868:                                            ; preds = %13866, %13808
  %13869 = phi ptr [ %13867, %13866 ], [ %13809, %13808 ]
  %13870 = getelementptr inbounds %struct.mxl5005s_state, ptr %13869, i32 0, i32 20
  %13871 = load i16, ptr %13870, align 2
  %13872 = icmp eq i16 %13871, 0
  br i1 %13872, label %13926, label %13873

13873:                                            ; preds = %13921, %13868
  %13874 = phi i16 [ %13922, %13921 ], [ %13871, %13868 ]
  %13875 = phi i32 [ %13923, %13921 ], [ 0, %13868 ]
  %13876 = getelementptr %struct.mxl5005s_state, ptr %13869, i32 0, i32 21, i32 %13875
  %13877 = load i16, ptr %13876, align 2
  %13878 = icmp eq i16 %13877, 86
  br i1 %13878, label %13879, label %13921

13879:                                            ; preds = %13873
  %13880 = getelementptr %struct.mxl5005s_state, ptr %13869, i32 0, i32 21, i32 %13875, i32 1
  %13881 = load i16, ptr %13880, align 2
  %13882 = icmp eq i16 %13881, 0
  br i1 %13882, label %13921, label %13883

13883:                                            ; preds = %13914, %13879
  %13884 = phi i32 [ %13915, %13914 ], [ 0, %13879 ]
  %13885 = getelementptr %struct.mxl5005s_state, ptr %13869, i32 0, i32 21, i32 %13875, i32 4, i32 %13884
  store i16 0, ptr %13885, align 2
  %13886 = getelementptr %struct.mxl5005s_state, ptr %13869, i32 0, i32 21, i32 %13875, i32 3, i32 %13884
  %13887 = load i16, ptr %13886, align 2
  %13888 = load ptr, ptr %3, align 4
  %13889 = getelementptr inbounds %struct.mxl5005s_state, ptr %13888, i32 0, i32 24
  %13890 = load i16, ptr %13889, align 4
  %13891 = zext i16 %13890 to i32
  %13892 = icmp eq i16 %13890, 0
  br i1 %13892, label %13914, label %13893

13893:                                            ; preds = %13883
  %13894 = getelementptr %struct.mxl5005s_state, ptr %13869, i32 0, i32 21, i32 %13875, i32 2, i32 %13884
  %13895 = load i16, ptr %13894, align 2
  %13896 = and i16 %13895, 255
  br label %13897

13897:                                            ; preds = %13911, %13893
  %13898 = phi i32 [ 0, %13893 ], [ %13912, %13911 ]
  %13899 = getelementptr %struct.mxl5005s_state, ptr %13888, i32 0, i32 25, i32 %13898
  %13900 = load i16, ptr %13899, align 2
  %13901 = icmp eq i16 %13900, %13896
  br i1 %13901, label %13902, label %13911

13902:                                            ; preds = %13897
  %13903 = and i16 %13887, 255
  %13904 = zext i16 %13903 to i32
  %13905 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13904
  %13906 = load i8, ptr %13905, align 1
  %13907 = zext i8 %13906 to i16
  %13908 = getelementptr %struct.mxl5005s_state, ptr %13888, i32 0, i32 25, i32 %13898, i32 1
  %13909 = load i16, ptr %13908, align 2
  %13910 = and i16 %13909, %13907
  store i16 %13910, ptr %13908, align 2
  br label %13914

13911:                                            ; preds = %13897
  %13912 = add nuw nsw i32 %13898, 1
  %13913 = icmp eq i32 %13912, %13891
  br i1 %13913, label %13914, label %13897

13914:                                            ; preds = %13911, %13902, %13883
  %13915 = add nuw nsw i32 %13884, 1
  %13916 = load i16, ptr %13880, align 2
  %13917 = zext i16 %13916 to i32
  %13918 = icmp ult i32 %13915, %13917
  br i1 %13918, label %13883, label %13919

13919:                                            ; preds = %13914
  %13920 = load i16, ptr %13870, align 2
  br label %13921

13921:                                            ; preds = %13919, %13879, %13873
  %13922 = phi i16 [ %13920, %13919 ], [ %13874, %13879 ], [ %13874, %13873 ]
  %13923 = add nuw nsw i32 %13875, 1
  %13924 = zext i16 %13922 to i32
  %13925 = icmp ult i32 %13923, %13924
  br i1 %13925, label %13873, label %13926

13926:                                            ; preds = %13921, %13868
  %13927 = load i32, ptr %5, align 4
  %13928 = add i32 %13927, -43000000
  %13929 = icmp ult i32 %13928, 131000000
  br i1 %13929, label %13930, label %14173

13930:                                            ; preds = %13926
  %13931 = load ptr, ptr %3, align 4
  %13932 = getelementptr inbounds %struct.mxl5005s_state, ptr %13931, i32 0, i32 18
  %13933 = load i16, ptr %13932, align 4
  %13934 = icmp eq i16 %13933, 0
  br i1 %13934, label %13990, label %13935

13935:                                            ; preds = %13983, %13930
  %13936 = phi i16 [ %13984, %13983 ], [ %13933, %13930 ]
  %13937 = phi i32 [ %13985, %13983 ], [ 0, %13930 ]
  %13938 = getelementptr %struct.mxl5005s_state, ptr %13931, i32 0, i32 19, i32 %13937
  %13939 = load i16, ptr %13938, align 2
  %13940 = icmp eq i16 %13939, 84
  br i1 %13940, label %13941, label %13983

13941:                                            ; preds = %13935
  %13942 = getelementptr %struct.mxl5005s_state, ptr %13931, i32 0, i32 19, i32 %13937, i32 1
  %13943 = load i16, ptr %13942, align 2
  %13944 = icmp eq i16 %13943, 0
  br i1 %13944, label %13983, label %13945

13945:                                            ; preds = %13976, %13941
  %13946 = phi i32 [ %13977, %13976 ], [ 0, %13941 ]
  %13947 = getelementptr %struct.mxl5005s_state, ptr %13931, i32 0, i32 19, i32 %13937, i32 4, i32 %13946
  store i16 0, ptr %13947, align 2
  %13948 = getelementptr %struct.mxl5005s_state, ptr %13931, i32 0, i32 19, i32 %13937, i32 3, i32 %13946
  %13949 = load i16, ptr %13948, align 2
  %13950 = load ptr, ptr %3, align 4
  %13951 = getelementptr inbounds %struct.mxl5005s_state, ptr %13950, i32 0, i32 24
  %13952 = load i16, ptr %13951, align 4
  %13953 = zext i16 %13952 to i32
  %13954 = icmp eq i16 %13952, 0
  br i1 %13954, label %13976, label %13955

13955:                                            ; preds = %13945
  %13956 = getelementptr %struct.mxl5005s_state, ptr %13931, i32 0, i32 19, i32 %13937, i32 2, i32 %13946
  %13957 = load i16, ptr %13956, align 2
  %13958 = and i16 %13957, 255
  br label %13959

13959:                                            ; preds = %13973, %13955
  %13960 = phi i32 [ 0, %13955 ], [ %13974, %13973 ]
  %13961 = getelementptr %struct.mxl5005s_state, ptr %13950, i32 0, i32 25, i32 %13960
  %13962 = load i16, ptr %13961, align 2
  %13963 = icmp eq i16 %13962, %13958
  br i1 %13963, label %13964, label %13973

13964:                                            ; preds = %13959
  %13965 = and i16 %13949, 255
  %13966 = zext i16 %13965 to i32
  %13967 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %13966
  %13968 = load i8, ptr %13967, align 1
  %13969 = zext i8 %13968 to i16
  %13970 = getelementptr %struct.mxl5005s_state, ptr %13950, i32 0, i32 25, i32 %13960, i32 1
  %13971 = load i16, ptr %13970, align 2
  %13972 = and i16 %13971, %13969
  store i16 %13972, ptr %13970, align 2
  br label %13976

13973:                                            ; preds = %13959
  %13974 = add nuw nsw i32 %13960, 1
  %13975 = icmp eq i32 %13974, %13953
  br i1 %13975, label %13976, label %13959

13976:                                            ; preds = %13973, %13964, %13945
  %13977 = add nuw nsw i32 %13946, 1
  %13978 = load i16, ptr %13942, align 2
  %13979 = zext i16 %13978 to i32
  %13980 = icmp ult i32 %13977, %13979
  br i1 %13980, label %13945, label %13981

13981:                                            ; preds = %13976
  %13982 = load i16, ptr %13932, align 4
  br label %13983

13983:                                            ; preds = %13981, %13941, %13935
  %13984 = phi i16 [ %13982, %13981 ], [ %13936, %13941 ], [ %13936, %13935 ]
  %13985 = add nuw nsw i32 %13937, 1
  %13986 = zext i16 %13984 to i32
  %13987 = icmp ult i32 %13985, %13986
  br i1 %13987, label %13935, label %13988

13988:                                            ; preds = %13983
  %13989 = load ptr, ptr %3, align 4
  br label %13990

13990:                                            ; preds = %13988, %13930
  %13991 = phi ptr [ %13989, %13988 ], [ %13931, %13930 ]
  %13992 = getelementptr inbounds %struct.mxl5005s_state, ptr %13991, i32 0, i32 20
  %13993 = load i16, ptr %13992, align 2
  %13994 = icmp eq i16 %13993, 0
  br i1 %13994, label %14048, label %13995

13995:                                            ; preds = %14043, %13990
  %13996 = phi i16 [ %14044, %14043 ], [ %13993, %13990 ]
  %13997 = phi i32 [ %14045, %14043 ], [ 0, %13990 ]
  %13998 = getelementptr %struct.mxl5005s_state, ptr %13991, i32 0, i32 21, i32 %13997
  %13999 = load i16, ptr %13998, align 2
  %14000 = icmp eq i16 %13999, 84
  br i1 %14000, label %14001, label %14043

14001:                                            ; preds = %13995
  %14002 = getelementptr %struct.mxl5005s_state, ptr %13991, i32 0, i32 21, i32 %13997, i32 1
  %14003 = load i16, ptr %14002, align 2
  %14004 = icmp eq i16 %14003, 0
  br i1 %14004, label %14043, label %14005

14005:                                            ; preds = %14036, %14001
  %14006 = phi i32 [ %14037, %14036 ], [ 0, %14001 ]
  %14007 = getelementptr %struct.mxl5005s_state, ptr %13991, i32 0, i32 21, i32 %13997, i32 4, i32 %14006
  store i16 0, ptr %14007, align 2
  %14008 = getelementptr %struct.mxl5005s_state, ptr %13991, i32 0, i32 21, i32 %13997, i32 3, i32 %14006
  %14009 = load i16, ptr %14008, align 2
  %14010 = load ptr, ptr %3, align 4
  %14011 = getelementptr inbounds %struct.mxl5005s_state, ptr %14010, i32 0, i32 24
  %14012 = load i16, ptr %14011, align 4
  %14013 = zext i16 %14012 to i32
  %14014 = icmp eq i16 %14012, 0
  br i1 %14014, label %14036, label %14015

14015:                                            ; preds = %14005
  %14016 = getelementptr %struct.mxl5005s_state, ptr %13991, i32 0, i32 21, i32 %13997, i32 2, i32 %14006
  %14017 = load i16, ptr %14016, align 2
  %14018 = and i16 %14017, 255
  br label %14019

14019:                                            ; preds = %14033, %14015
  %14020 = phi i32 [ 0, %14015 ], [ %14034, %14033 ]
  %14021 = getelementptr %struct.mxl5005s_state, ptr %14010, i32 0, i32 25, i32 %14020
  %14022 = load i16, ptr %14021, align 2
  %14023 = icmp eq i16 %14022, %14018
  br i1 %14023, label %14024, label %14033

14024:                                            ; preds = %14019
  %14025 = and i16 %14009, 255
  %14026 = zext i16 %14025 to i32
  %14027 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14026
  %14028 = load i8, ptr %14027, align 1
  %14029 = zext i8 %14028 to i16
  %14030 = getelementptr %struct.mxl5005s_state, ptr %14010, i32 0, i32 25, i32 %14020, i32 1
  %14031 = load i16, ptr %14030, align 2
  %14032 = and i16 %14031, %14029
  store i16 %14032, ptr %14030, align 2
  br label %14036

14033:                                            ; preds = %14019
  %14034 = add nuw nsw i32 %14020, 1
  %14035 = icmp eq i32 %14034, %14013
  br i1 %14035, label %14036, label %14019

14036:                                            ; preds = %14033, %14024, %14005
  %14037 = add nuw nsw i32 %14006, 1
  %14038 = load i16, ptr %14002, align 2
  %14039 = zext i16 %14038 to i32
  %14040 = icmp ult i32 %14037, %14039
  br i1 %14040, label %14005, label %14041

14041:                                            ; preds = %14036
  %14042 = load i16, ptr %13992, align 2
  br label %14043

14043:                                            ; preds = %14041, %14001, %13995
  %14044 = phi i16 [ %14042, %14041 ], [ %13996, %14001 ], [ %13996, %13995 ]
  %14045 = add nuw nsw i32 %13997, 1
  %14046 = zext i16 %14044 to i32
  %14047 = icmp ult i32 %14045, %14046
  br i1 %14047, label %13995, label %14048

14048:                                            ; preds = %14043, %13990
  %14049 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %14050 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %14051 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %14052 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %14053 = load ptr, ptr %3, align 4
  %14054 = getelementptr inbounds %struct.mxl5005s_state, ptr %14053, i32 0, i32 18
  %14055 = load i16, ptr %14054, align 4
  %14056 = icmp eq i16 %14055, 0
  br i1 %14056, label %14112, label %14057

14057:                                            ; preds = %14105, %14048
  %14058 = phi i16 [ %14106, %14105 ], [ %14055, %14048 ]
  %14059 = phi i32 [ %14107, %14105 ], [ 0, %14048 ]
  %14060 = getelementptr %struct.mxl5005s_state, ptr %14053, i32 0, i32 19, i32 %14059
  %14061 = load i16, ptr %14060, align 2
  %14062 = icmp eq i16 %14061, 82
  br i1 %14062, label %14063, label %14105

14063:                                            ; preds = %14057
  %14064 = getelementptr %struct.mxl5005s_state, ptr %14053, i32 0, i32 19, i32 %14059, i32 1
  %14065 = load i16, ptr %14064, align 2
  %14066 = icmp eq i16 %14065, 0
  br i1 %14066, label %14105, label %14067

14067:                                            ; preds = %14098, %14063
  %14068 = phi i32 [ %14099, %14098 ], [ 0, %14063 ]
  %14069 = getelementptr %struct.mxl5005s_state, ptr %14053, i32 0, i32 19, i32 %14059, i32 4, i32 %14068
  store i16 0, ptr %14069, align 2
  %14070 = getelementptr %struct.mxl5005s_state, ptr %14053, i32 0, i32 19, i32 %14059, i32 3, i32 %14068
  %14071 = load i16, ptr %14070, align 2
  %14072 = load ptr, ptr %3, align 4
  %14073 = getelementptr inbounds %struct.mxl5005s_state, ptr %14072, i32 0, i32 24
  %14074 = load i16, ptr %14073, align 4
  %14075 = zext i16 %14074 to i32
  %14076 = icmp eq i16 %14074, 0
  br i1 %14076, label %14098, label %14077

14077:                                            ; preds = %14067
  %14078 = getelementptr %struct.mxl5005s_state, ptr %14053, i32 0, i32 19, i32 %14059, i32 2, i32 %14068
  %14079 = load i16, ptr %14078, align 2
  %14080 = and i16 %14079, 255
  br label %14081

14081:                                            ; preds = %14095, %14077
  %14082 = phi i32 [ 0, %14077 ], [ %14096, %14095 ]
  %14083 = getelementptr %struct.mxl5005s_state, ptr %14072, i32 0, i32 25, i32 %14082
  %14084 = load i16, ptr %14083, align 2
  %14085 = icmp eq i16 %14084, %14080
  br i1 %14085, label %14086, label %14095

14086:                                            ; preds = %14081
  %14087 = and i16 %14071, 255
  %14088 = zext i16 %14087 to i32
  %14089 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14088
  %14090 = load i8, ptr %14089, align 1
  %14091 = zext i8 %14090 to i16
  %14092 = getelementptr %struct.mxl5005s_state, ptr %14072, i32 0, i32 25, i32 %14082, i32 1
  %14093 = load i16, ptr %14092, align 2
  %14094 = and i16 %14093, %14091
  store i16 %14094, ptr %14092, align 2
  br label %14098

14095:                                            ; preds = %14081
  %14096 = add nuw nsw i32 %14082, 1
  %14097 = icmp eq i32 %14096, %14075
  br i1 %14097, label %14098, label %14081

14098:                                            ; preds = %14095, %14086, %14067
  %14099 = add nuw nsw i32 %14068, 1
  %14100 = load i16, ptr %14064, align 2
  %14101 = zext i16 %14100 to i32
  %14102 = icmp ult i32 %14099, %14101
  br i1 %14102, label %14067, label %14103

14103:                                            ; preds = %14098
  %14104 = load i16, ptr %14054, align 4
  br label %14105

14105:                                            ; preds = %14103, %14063, %14057
  %14106 = phi i16 [ %14104, %14103 ], [ %14058, %14063 ], [ %14058, %14057 ]
  %14107 = add nuw nsw i32 %14059, 1
  %14108 = zext i16 %14106 to i32
  %14109 = icmp ult i32 %14107, %14108
  br i1 %14109, label %14057, label %14110

14110:                                            ; preds = %14105
  %14111 = load ptr, ptr %3, align 4
  br label %14112

14112:                                            ; preds = %14110, %14048
  %14113 = phi ptr [ %14111, %14110 ], [ %14053, %14048 ]
  %14114 = getelementptr inbounds %struct.mxl5005s_state, ptr %14113, i32 0, i32 20
  %14115 = load i16, ptr %14114, align 2
  %14116 = icmp eq i16 %14115, 0
  br i1 %14116, label %14170, label %14117

14117:                                            ; preds = %14165, %14112
  %14118 = phi i16 [ %14166, %14165 ], [ %14115, %14112 ]
  %14119 = phi i32 [ %14167, %14165 ], [ 0, %14112 ]
  %14120 = getelementptr %struct.mxl5005s_state, ptr %14113, i32 0, i32 21, i32 %14119
  %14121 = load i16, ptr %14120, align 2
  %14122 = icmp eq i16 %14121, 82
  br i1 %14122, label %14123, label %14165

14123:                                            ; preds = %14117
  %14124 = getelementptr %struct.mxl5005s_state, ptr %14113, i32 0, i32 21, i32 %14119, i32 1
  %14125 = load i16, ptr %14124, align 2
  %14126 = icmp eq i16 %14125, 0
  br i1 %14126, label %14165, label %14127

14127:                                            ; preds = %14158, %14123
  %14128 = phi i32 [ %14159, %14158 ], [ 0, %14123 ]
  %14129 = getelementptr %struct.mxl5005s_state, ptr %14113, i32 0, i32 21, i32 %14119, i32 4, i32 %14128
  store i16 0, ptr %14129, align 2
  %14130 = getelementptr %struct.mxl5005s_state, ptr %14113, i32 0, i32 21, i32 %14119, i32 3, i32 %14128
  %14131 = load i16, ptr %14130, align 2
  %14132 = load ptr, ptr %3, align 4
  %14133 = getelementptr inbounds %struct.mxl5005s_state, ptr %14132, i32 0, i32 24
  %14134 = load i16, ptr %14133, align 4
  %14135 = zext i16 %14134 to i32
  %14136 = icmp eq i16 %14134, 0
  br i1 %14136, label %14158, label %14137

14137:                                            ; preds = %14127
  %14138 = getelementptr %struct.mxl5005s_state, ptr %14113, i32 0, i32 21, i32 %14119, i32 2, i32 %14128
  %14139 = load i16, ptr %14138, align 2
  %14140 = and i16 %14139, 255
  br label %14141

14141:                                            ; preds = %14155, %14137
  %14142 = phi i32 [ 0, %14137 ], [ %14156, %14155 ]
  %14143 = getelementptr %struct.mxl5005s_state, ptr %14132, i32 0, i32 25, i32 %14142
  %14144 = load i16, ptr %14143, align 2
  %14145 = icmp eq i16 %14144, %14140
  br i1 %14145, label %14146, label %14155

14146:                                            ; preds = %14141
  %14147 = and i16 %14131, 255
  %14148 = zext i16 %14147 to i32
  %14149 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14148
  %14150 = load i8, ptr %14149, align 1
  %14151 = zext i8 %14150 to i16
  %14152 = getelementptr %struct.mxl5005s_state, ptr %14132, i32 0, i32 25, i32 %14142, i32 1
  %14153 = load i16, ptr %14152, align 2
  %14154 = and i16 %14153, %14151
  store i16 %14154, ptr %14152, align 2
  br label %14158

14155:                                            ; preds = %14141
  %14156 = add nuw nsw i32 %14142, 1
  %14157 = icmp eq i32 %14156, %14135
  br i1 %14157, label %14158, label %14141

14158:                                            ; preds = %14155, %14146, %14127
  %14159 = add nuw nsw i32 %14128, 1
  %14160 = load i16, ptr %14124, align 2
  %14161 = zext i16 %14160 to i32
  %14162 = icmp ult i32 %14159, %14161
  br i1 %14162, label %14127, label %14163

14163:                                            ; preds = %14158
  %14164 = load i16, ptr %14114, align 2
  br label %14165

14165:                                            ; preds = %14163, %14123, %14117
  %14166 = phi i16 [ %14164, %14163 ], [ %14118, %14123 ], [ %14118, %14117 ]
  %14167 = add nuw nsw i32 %14119, 1
  %14168 = zext i16 %14166 to i32
  %14169 = icmp ult i32 %14167, %14168
  br i1 %14169, label %14117, label %14170

14170:                                            ; preds = %14165, %14112
  %14171 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %14172 = load i32, ptr %5, align 4
  br label %14173

14173:                                            ; preds = %14170, %13926
  %14174 = phi i32 [ %14172, %14170 ], [ %13927, %13926 ]
  %14175 = add i32 %14174, -174000000
  %14176 = icmp ult i32 %14175, 76000000
  br i1 %14176, label %14177, label %14304

14177:                                            ; preds = %14173
  %14178 = load ptr, ptr %3, align 4
  %14179 = getelementptr inbounds %struct.mxl5005s_state, ptr %14178, i32 0, i32 18
  %14180 = load i16, ptr %14179, align 4
  %14181 = icmp eq i16 %14180, 0
  br i1 %14181, label %14237, label %14182

14182:                                            ; preds = %14230, %14177
  %14183 = phi i16 [ %14231, %14230 ], [ %14180, %14177 ]
  %14184 = phi i32 [ %14232, %14230 ], [ 0, %14177 ]
  %14185 = getelementptr %struct.mxl5005s_state, ptr %14178, i32 0, i32 19, i32 %14184
  %14186 = load i16, ptr %14185, align 2
  %14187 = icmp eq i16 %14186, 84
  br i1 %14187, label %14188, label %14230

14188:                                            ; preds = %14182
  %14189 = getelementptr %struct.mxl5005s_state, ptr %14178, i32 0, i32 19, i32 %14184, i32 1
  %14190 = load i16, ptr %14189, align 2
  %14191 = icmp eq i16 %14190, 0
  br i1 %14191, label %14230, label %14192

14192:                                            ; preds = %14223, %14188
  %14193 = phi i32 [ %14224, %14223 ], [ 0, %14188 ]
  %14194 = getelementptr %struct.mxl5005s_state, ptr %14178, i32 0, i32 19, i32 %14184, i32 4, i32 %14193
  store i16 0, ptr %14194, align 2
  %14195 = getelementptr %struct.mxl5005s_state, ptr %14178, i32 0, i32 19, i32 %14184, i32 3, i32 %14193
  %14196 = load i16, ptr %14195, align 2
  %14197 = load ptr, ptr %3, align 4
  %14198 = getelementptr inbounds %struct.mxl5005s_state, ptr %14197, i32 0, i32 24
  %14199 = load i16, ptr %14198, align 4
  %14200 = zext i16 %14199 to i32
  %14201 = icmp eq i16 %14199, 0
  br i1 %14201, label %14223, label %14202

14202:                                            ; preds = %14192
  %14203 = getelementptr %struct.mxl5005s_state, ptr %14178, i32 0, i32 19, i32 %14184, i32 2, i32 %14193
  %14204 = load i16, ptr %14203, align 2
  %14205 = and i16 %14204, 255
  br label %14206

14206:                                            ; preds = %14220, %14202
  %14207 = phi i32 [ 0, %14202 ], [ %14221, %14220 ]
  %14208 = getelementptr %struct.mxl5005s_state, ptr %14197, i32 0, i32 25, i32 %14207
  %14209 = load i16, ptr %14208, align 2
  %14210 = icmp eq i16 %14209, %14205
  br i1 %14210, label %14211, label %14220

14211:                                            ; preds = %14206
  %14212 = and i16 %14196, 255
  %14213 = zext i16 %14212 to i32
  %14214 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14213
  %14215 = load i8, ptr %14214, align 1
  %14216 = zext i8 %14215 to i16
  %14217 = getelementptr %struct.mxl5005s_state, ptr %14197, i32 0, i32 25, i32 %14207, i32 1
  %14218 = load i16, ptr %14217, align 2
  %14219 = and i16 %14218, %14216
  store i16 %14219, ptr %14217, align 2
  br label %14223

14220:                                            ; preds = %14206
  %14221 = add nuw nsw i32 %14207, 1
  %14222 = icmp eq i32 %14221, %14200
  br i1 %14222, label %14223, label %14206

14223:                                            ; preds = %14220, %14211, %14192
  %14224 = add nuw nsw i32 %14193, 1
  %14225 = load i16, ptr %14189, align 2
  %14226 = zext i16 %14225 to i32
  %14227 = icmp ult i32 %14224, %14226
  br i1 %14227, label %14192, label %14228

14228:                                            ; preds = %14223
  %14229 = load i16, ptr %14179, align 4
  br label %14230

14230:                                            ; preds = %14228, %14188, %14182
  %14231 = phi i16 [ %14229, %14228 ], [ %14183, %14188 ], [ %14183, %14182 ]
  %14232 = add nuw nsw i32 %14184, 1
  %14233 = zext i16 %14231 to i32
  %14234 = icmp ult i32 %14232, %14233
  br i1 %14234, label %14182, label %14235

14235:                                            ; preds = %14230
  %14236 = load ptr, ptr %3, align 4
  br label %14237

14237:                                            ; preds = %14235, %14177
  %14238 = phi ptr [ %14236, %14235 ], [ %14178, %14177 ]
  %14239 = getelementptr inbounds %struct.mxl5005s_state, ptr %14238, i32 0, i32 20
  %14240 = load i16, ptr %14239, align 2
  %14241 = icmp eq i16 %14240, 0
  br i1 %14241, label %14295, label %14242

14242:                                            ; preds = %14290, %14237
  %14243 = phi i16 [ %14291, %14290 ], [ %14240, %14237 ]
  %14244 = phi i32 [ %14292, %14290 ], [ 0, %14237 ]
  %14245 = getelementptr %struct.mxl5005s_state, ptr %14238, i32 0, i32 21, i32 %14244
  %14246 = load i16, ptr %14245, align 2
  %14247 = icmp eq i16 %14246, 84
  br i1 %14247, label %14248, label %14290

14248:                                            ; preds = %14242
  %14249 = getelementptr %struct.mxl5005s_state, ptr %14238, i32 0, i32 21, i32 %14244, i32 1
  %14250 = load i16, ptr %14249, align 2
  %14251 = icmp eq i16 %14250, 0
  br i1 %14251, label %14290, label %14252

14252:                                            ; preds = %14283, %14248
  %14253 = phi i32 [ %14284, %14283 ], [ 0, %14248 ]
  %14254 = getelementptr %struct.mxl5005s_state, ptr %14238, i32 0, i32 21, i32 %14244, i32 4, i32 %14253
  store i16 0, ptr %14254, align 2
  %14255 = getelementptr %struct.mxl5005s_state, ptr %14238, i32 0, i32 21, i32 %14244, i32 3, i32 %14253
  %14256 = load i16, ptr %14255, align 2
  %14257 = load ptr, ptr %3, align 4
  %14258 = getelementptr inbounds %struct.mxl5005s_state, ptr %14257, i32 0, i32 24
  %14259 = load i16, ptr %14258, align 4
  %14260 = zext i16 %14259 to i32
  %14261 = icmp eq i16 %14259, 0
  br i1 %14261, label %14283, label %14262

14262:                                            ; preds = %14252
  %14263 = getelementptr %struct.mxl5005s_state, ptr %14238, i32 0, i32 21, i32 %14244, i32 2, i32 %14253
  %14264 = load i16, ptr %14263, align 2
  %14265 = and i16 %14264, 255
  br label %14266

14266:                                            ; preds = %14280, %14262
  %14267 = phi i32 [ 0, %14262 ], [ %14281, %14280 ]
  %14268 = getelementptr %struct.mxl5005s_state, ptr %14257, i32 0, i32 25, i32 %14267
  %14269 = load i16, ptr %14268, align 2
  %14270 = icmp eq i16 %14269, %14265
  br i1 %14270, label %14271, label %14280

14271:                                            ; preds = %14266
  %14272 = and i16 %14256, 255
  %14273 = zext i16 %14272 to i32
  %14274 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14273
  %14275 = load i8, ptr %14274, align 1
  %14276 = zext i8 %14275 to i16
  %14277 = getelementptr %struct.mxl5005s_state, ptr %14257, i32 0, i32 25, i32 %14267, i32 1
  %14278 = load i16, ptr %14277, align 2
  %14279 = and i16 %14278, %14276
  store i16 %14279, ptr %14277, align 2
  br label %14283

14280:                                            ; preds = %14266
  %14281 = add nuw nsw i32 %14267, 1
  %14282 = icmp eq i32 %14281, %14260
  br i1 %14282, label %14283, label %14266

14283:                                            ; preds = %14280, %14271, %14252
  %14284 = add nuw nsw i32 %14253, 1
  %14285 = load i16, ptr %14249, align 2
  %14286 = zext i16 %14285 to i32
  %14287 = icmp ult i32 %14284, %14286
  br i1 %14287, label %14252, label %14288

14288:                                            ; preds = %14283
  %14289 = load i16, ptr %14239, align 2
  br label %14290

14290:                                            ; preds = %14288, %14248, %14242
  %14291 = phi i16 [ %14289, %14288 ], [ %14243, %14248 ], [ %14243, %14242 ]
  %14292 = add nuw nsw i32 %14244, 1
  %14293 = zext i16 %14291 to i32
  %14294 = icmp ult i32 %14292, %14293
  br i1 %14294, label %14242, label %14295

14295:                                            ; preds = %14290, %14237
  %14296 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %14297 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %14298 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %14299 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %14300 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %14301 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %14302 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %14303 = load i32, ptr %5, align 4
  br label %14304

14304:                                            ; preds = %14295, %14173
  %14305 = phi i32 [ %14303, %14295 ], [ %14174, %14173 ]
  %14306 = add i32 %14305, -250000000
  %14307 = icmp ult i32 %14306, 60000000
  br i1 %14307, label %14308, label %14432

14308:                                            ; preds = %14304
  %14309 = load ptr, ptr %3, align 4
  %14310 = getelementptr inbounds %struct.mxl5005s_state, ptr %14309, i32 0, i32 18
  %14311 = load i16, ptr %14310, align 4
  %14312 = icmp eq i16 %14311, 0
  br i1 %14312, label %14368, label %14313

14313:                                            ; preds = %14361, %14308
  %14314 = phi i16 [ %14362, %14361 ], [ %14311, %14308 ]
  %14315 = phi i32 [ %14363, %14361 ], [ 0, %14308 ]
  %14316 = getelementptr %struct.mxl5005s_state, ptr %14309, i32 0, i32 19, i32 %14315
  %14317 = load i16, ptr %14316, align 2
  %14318 = icmp eq i16 %14317, 84
  br i1 %14318, label %14319, label %14361

14319:                                            ; preds = %14313
  %14320 = getelementptr %struct.mxl5005s_state, ptr %14309, i32 0, i32 19, i32 %14315, i32 1
  %14321 = load i16, ptr %14320, align 2
  %14322 = icmp eq i16 %14321, 0
  br i1 %14322, label %14361, label %14323

14323:                                            ; preds = %14354, %14319
  %14324 = phi i32 [ %14355, %14354 ], [ 0, %14319 ]
  %14325 = getelementptr %struct.mxl5005s_state, ptr %14309, i32 0, i32 19, i32 %14315, i32 4, i32 %14324
  store i16 0, ptr %14325, align 2
  %14326 = getelementptr %struct.mxl5005s_state, ptr %14309, i32 0, i32 19, i32 %14315, i32 3, i32 %14324
  %14327 = load i16, ptr %14326, align 2
  %14328 = load ptr, ptr %3, align 4
  %14329 = getelementptr inbounds %struct.mxl5005s_state, ptr %14328, i32 0, i32 24
  %14330 = load i16, ptr %14329, align 4
  %14331 = zext i16 %14330 to i32
  %14332 = icmp eq i16 %14330, 0
  br i1 %14332, label %14354, label %14333

14333:                                            ; preds = %14323
  %14334 = getelementptr %struct.mxl5005s_state, ptr %14309, i32 0, i32 19, i32 %14315, i32 2, i32 %14324
  %14335 = load i16, ptr %14334, align 2
  %14336 = and i16 %14335, 255
  br label %14337

14337:                                            ; preds = %14351, %14333
  %14338 = phi i32 [ 0, %14333 ], [ %14352, %14351 ]
  %14339 = getelementptr %struct.mxl5005s_state, ptr %14328, i32 0, i32 25, i32 %14338
  %14340 = load i16, ptr %14339, align 2
  %14341 = icmp eq i16 %14340, %14336
  br i1 %14341, label %14342, label %14351

14342:                                            ; preds = %14337
  %14343 = and i16 %14327, 255
  %14344 = zext i16 %14343 to i32
  %14345 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14344
  %14346 = load i8, ptr %14345, align 1
  %14347 = zext i8 %14346 to i16
  %14348 = getelementptr %struct.mxl5005s_state, ptr %14328, i32 0, i32 25, i32 %14338, i32 1
  %14349 = load i16, ptr %14348, align 2
  %14350 = and i16 %14349, %14347
  store i16 %14350, ptr %14348, align 2
  br label %14354

14351:                                            ; preds = %14337
  %14352 = add nuw nsw i32 %14338, 1
  %14353 = icmp eq i32 %14352, %14331
  br i1 %14353, label %14354, label %14337

14354:                                            ; preds = %14351, %14342, %14323
  %14355 = add nuw nsw i32 %14324, 1
  %14356 = load i16, ptr %14320, align 2
  %14357 = zext i16 %14356 to i32
  %14358 = icmp ult i32 %14355, %14357
  br i1 %14358, label %14323, label %14359

14359:                                            ; preds = %14354
  %14360 = load i16, ptr %14310, align 4
  br label %14361

14361:                                            ; preds = %14359, %14319, %14313
  %14362 = phi i16 [ %14360, %14359 ], [ %14314, %14319 ], [ %14314, %14313 ]
  %14363 = add nuw nsw i32 %14315, 1
  %14364 = zext i16 %14362 to i32
  %14365 = icmp ult i32 %14363, %14364
  br i1 %14365, label %14313, label %14366

14366:                                            ; preds = %14361
  %14367 = load ptr, ptr %3, align 4
  br label %14368

14368:                                            ; preds = %14366, %14308
  %14369 = phi ptr [ %14367, %14366 ], [ %14309, %14308 ]
  %14370 = getelementptr inbounds %struct.mxl5005s_state, ptr %14369, i32 0, i32 20
  %14371 = load i16, ptr %14370, align 2
  %14372 = icmp eq i16 %14371, 0
  br i1 %14372, label %14426, label %14373

14373:                                            ; preds = %14421, %14368
  %14374 = phi i16 [ %14422, %14421 ], [ %14371, %14368 ]
  %14375 = phi i32 [ %14423, %14421 ], [ 0, %14368 ]
  %14376 = getelementptr %struct.mxl5005s_state, ptr %14369, i32 0, i32 21, i32 %14375
  %14377 = load i16, ptr %14376, align 2
  %14378 = icmp eq i16 %14377, 84
  br i1 %14378, label %14379, label %14421

14379:                                            ; preds = %14373
  %14380 = getelementptr %struct.mxl5005s_state, ptr %14369, i32 0, i32 21, i32 %14375, i32 1
  %14381 = load i16, ptr %14380, align 2
  %14382 = icmp eq i16 %14381, 0
  br i1 %14382, label %14421, label %14383

14383:                                            ; preds = %14414, %14379
  %14384 = phi i32 [ %14415, %14414 ], [ 0, %14379 ]
  %14385 = getelementptr %struct.mxl5005s_state, ptr %14369, i32 0, i32 21, i32 %14375, i32 4, i32 %14384
  store i16 0, ptr %14385, align 2
  %14386 = getelementptr %struct.mxl5005s_state, ptr %14369, i32 0, i32 21, i32 %14375, i32 3, i32 %14384
  %14387 = load i16, ptr %14386, align 2
  %14388 = load ptr, ptr %3, align 4
  %14389 = getelementptr inbounds %struct.mxl5005s_state, ptr %14388, i32 0, i32 24
  %14390 = load i16, ptr %14389, align 4
  %14391 = zext i16 %14390 to i32
  %14392 = icmp eq i16 %14390, 0
  br i1 %14392, label %14414, label %14393

14393:                                            ; preds = %14383
  %14394 = getelementptr %struct.mxl5005s_state, ptr %14369, i32 0, i32 21, i32 %14375, i32 2, i32 %14384
  %14395 = load i16, ptr %14394, align 2
  %14396 = and i16 %14395, 255
  br label %14397

14397:                                            ; preds = %14411, %14393
  %14398 = phi i32 [ 0, %14393 ], [ %14412, %14411 ]
  %14399 = getelementptr %struct.mxl5005s_state, ptr %14388, i32 0, i32 25, i32 %14398
  %14400 = load i16, ptr %14399, align 2
  %14401 = icmp eq i16 %14400, %14396
  br i1 %14401, label %14402, label %14411

14402:                                            ; preds = %14397
  %14403 = and i16 %14387, 255
  %14404 = zext i16 %14403 to i32
  %14405 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14404
  %14406 = load i8, ptr %14405, align 1
  %14407 = zext i8 %14406 to i16
  %14408 = getelementptr %struct.mxl5005s_state, ptr %14388, i32 0, i32 25, i32 %14398, i32 1
  %14409 = load i16, ptr %14408, align 2
  %14410 = and i16 %14409, %14407
  store i16 %14410, ptr %14408, align 2
  br label %14414

14411:                                            ; preds = %14397
  %14412 = add nuw nsw i32 %14398, 1
  %14413 = icmp eq i32 %14412, %14391
  br i1 %14413, label %14414, label %14397

14414:                                            ; preds = %14411, %14402, %14383
  %14415 = add nuw nsw i32 %14384, 1
  %14416 = load i16, ptr %14380, align 2
  %14417 = zext i16 %14416 to i32
  %14418 = icmp ult i32 %14415, %14417
  br i1 %14418, label %14383, label %14419

14419:                                            ; preds = %14414
  %14420 = load i16, ptr %14370, align 2
  br label %14421

14421:                                            ; preds = %14419, %14379, %14373
  %14422 = phi i16 [ %14420, %14419 ], [ %14374, %14379 ], [ %14374, %14373 ]
  %14423 = add nuw nsw i32 %14375, 1
  %14424 = zext i16 %14422 to i32
  %14425 = icmp ult i32 %14423, %14424
  br i1 %14425, label %14373, label %14426

14426:                                            ; preds = %14421, %14368
  %14427 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %14428 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %14429 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %14430 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %14431 = load i32, ptr %5, align 4
  br label %14432

14432:                                            ; preds = %14426, %14304
  %14433 = phi i32 [ %14431, %14426 ], [ %14305, %14304 ]
  %14434 = add i32 %14433, -310000000
  %14435 = icmp ult i32 %14434, 50000000
  br i1 %14435, label %14436, label %14563

14436:                                            ; preds = %14432
  %14437 = load ptr, ptr %3, align 4
  %14438 = getelementptr inbounds %struct.mxl5005s_state, ptr %14437, i32 0, i32 18
  %14439 = load i16, ptr %14438, align 4
  %14440 = icmp eq i16 %14439, 0
  br i1 %14440, label %14496, label %14441

14441:                                            ; preds = %14489, %14436
  %14442 = phi i16 [ %14490, %14489 ], [ %14439, %14436 ]
  %14443 = phi i32 [ %14491, %14489 ], [ 0, %14436 ]
  %14444 = getelementptr %struct.mxl5005s_state, ptr %14437, i32 0, i32 19, i32 %14443
  %14445 = load i16, ptr %14444, align 2
  %14446 = icmp eq i16 %14445, 84
  br i1 %14446, label %14447, label %14489

14447:                                            ; preds = %14441
  %14448 = getelementptr %struct.mxl5005s_state, ptr %14437, i32 0, i32 19, i32 %14443, i32 1
  %14449 = load i16, ptr %14448, align 2
  %14450 = icmp eq i16 %14449, 0
  br i1 %14450, label %14489, label %14451

14451:                                            ; preds = %14482, %14447
  %14452 = phi i32 [ %14483, %14482 ], [ 0, %14447 ]
  %14453 = getelementptr %struct.mxl5005s_state, ptr %14437, i32 0, i32 19, i32 %14443, i32 4, i32 %14452
  store i16 0, ptr %14453, align 2
  %14454 = getelementptr %struct.mxl5005s_state, ptr %14437, i32 0, i32 19, i32 %14443, i32 3, i32 %14452
  %14455 = load i16, ptr %14454, align 2
  %14456 = load ptr, ptr %3, align 4
  %14457 = getelementptr inbounds %struct.mxl5005s_state, ptr %14456, i32 0, i32 24
  %14458 = load i16, ptr %14457, align 4
  %14459 = zext i16 %14458 to i32
  %14460 = icmp eq i16 %14458, 0
  br i1 %14460, label %14482, label %14461

14461:                                            ; preds = %14451
  %14462 = getelementptr %struct.mxl5005s_state, ptr %14437, i32 0, i32 19, i32 %14443, i32 2, i32 %14452
  %14463 = load i16, ptr %14462, align 2
  %14464 = and i16 %14463, 255
  br label %14465

14465:                                            ; preds = %14479, %14461
  %14466 = phi i32 [ 0, %14461 ], [ %14480, %14479 ]
  %14467 = getelementptr %struct.mxl5005s_state, ptr %14456, i32 0, i32 25, i32 %14466
  %14468 = load i16, ptr %14467, align 2
  %14469 = icmp eq i16 %14468, %14464
  br i1 %14469, label %14470, label %14479

14470:                                            ; preds = %14465
  %14471 = and i16 %14455, 255
  %14472 = zext i16 %14471 to i32
  %14473 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14472
  %14474 = load i8, ptr %14473, align 1
  %14475 = zext i8 %14474 to i16
  %14476 = getelementptr %struct.mxl5005s_state, ptr %14456, i32 0, i32 25, i32 %14466, i32 1
  %14477 = load i16, ptr %14476, align 2
  %14478 = and i16 %14477, %14475
  store i16 %14478, ptr %14476, align 2
  br label %14482

14479:                                            ; preds = %14465
  %14480 = add nuw nsw i32 %14466, 1
  %14481 = icmp eq i32 %14480, %14459
  br i1 %14481, label %14482, label %14465

14482:                                            ; preds = %14479, %14470, %14451
  %14483 = add nuw nsw i32 %14452, 1
  %14484 = load i16, ptr %14448, align 2
  %14485 = zext i16 %14484 to i32
  %14486 = icmp ult i32 %14483, %14485
  br i1 %14486, label %14451, label %14487

14487:                                            ; preds = %14482
  %14488 = load i16, ptr %14438, align 4
  br label %14489

14489:                                            ; preds = %14487, %14447, %14441
  %14490 = phi i16 [ %14488, %14487 ], [ %14442, %14447 ], [ %14442, %14441 ]
  %14491 = add nuw nsw i32 %14443, 1
  %14492 = zext i16 %14490 to i32
  %14493 = icmp ult i32 %14491, %14492
  br i1 %14493, label %14441, label %14494

14494:                                            ; preds = %14489
  %14495 = load ptr, ptr %3, align 4
  br label %14496

14496:                                            ; preds = %14494, %14436
  %14497 = phi ptr [ %14495, %14494 ], [ %14437, %14436 ]
  %14498 = getelementptr inbounds %struct.mxl5005s_state, ptr %14497, i32 0, i32 20
  %14499 = load i16, ptr %14498, align 2
  %14500 = icmp eq i16 %14499, 0
  br i1 %14500, label %14554, label %14501

14501:                                            ; preds = %14549, %14496
  %14502 = phi i16 [ %14550, %14549 ], [ %14499, %14496 ]
  %14503 = phi i32 [ %14551, %14549 ], [ 0, %14496 ]
  %14504 = getelementptr %struct.mxl5005s_state, ptr %14497, i32 0, i32 21, i32 %14503
  %14505 = load i16, ptr %14504, align 2
  %14506 = icmp eq i16 %14505, 84
  br i1 %14506, label %14507, label %14549

14507:                                            ; preds = %14501
  %14508 = getelementptr %struct.mxl5005s_state, ptr %14497, i32 0, i32 21, i32 %14503, i32 1
  %14509 = load i16, ptr %14508, align 2
  %14510 = icmp eq i16 %14509, 0
  br i1 %14510, label %14549, label %14511

14511:                                            ; preds = %14542, %14507
  %14512 = phi i32 [ %14543, %14542 ], [ 0, %14507 ]
  %14513 = getelementptr %struct.mxl5005s_state, ptr %14497, i32 0, i32 21, i32 %14503, i32 4, i32 %14512
  store i16 0, ptr %14513, align 2
  %14514 = getelementptr %struct.mxl5005s_state, ptr %14497, i32 0, i32 21, i32 %14503, i32 3, i32 %14512
  %14515 = load i16, ptr %14514, align 2
  %14516 = load ptr, ptr %3, align 4
  %14517 = getelementptr inbounds %struct.mxl5005s_state, ptr %14516, i32 0, i32 24
  %14518 = load i16, ptr %14517, align 4
  %14519 = zext i16 %14518 to i32
  %14520 = icmp eq i16 %14518, 0
  br i1 %14520, label %14542, label %14521

14521:                                            ; preds = %14511
  %14522 = getelementptr %struct.mxl5005s_state, ptr %14497, i32 0, i32 21, i32 %14503, i32 2, i32 %14512
  %14523 = load i16, ptr %14522, align 2
  %14524 = and i16 %14523, 255
  br label %14525

14525:                                            ; preds = %14539, %14521
  %14526 = phi i32 [ 0, %14521 ], [ %14540, %14539 ]
  %14527 = getelementptr %struct.mxl5005s_state, ptr %14516, i32 0, i32 25, i32 %14526
  %14528 = load i16, ptr %14527, align 2
  %14529 = icmp eq i16 %14528, %14524
  br i1 %14529, label %14530, label %14539

14530:                                            ; preds = %14525
  %14531 = and i16 %14515, 255
  %14532 = zext i16 %14531 to i32
  %14533 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14532
  %14534 = load i8, ptr %14533, align 1
  %14535 = zext i8 %14534 to i16
  %14536 = getelementptr %struct.mxl5005s_state, ptr %14516, i32 0, i32 25, i32 %14526, i32 1
  %14537 = load i16, ptr %14536, align 2
  %14538 = and i16 %14537, %14535
  store i16 %14538, ptr %14536, align 2
  br label %14542

14539:                                            ; preds = %14525
  %14540 = add nuw nsw i32 %14526, 1
  %14541 = icmp eq i32 %14540, %14519
  br i1 %14541, label %14542, label %14525

14542:                                            ; preds = %14539, %14530, %14511
  %14543 = add nuw nsw i32 %14512, 1
  %14544 = load i16, ptr %14508, align 2
  %14545 = zext i16 %14544 to i32
  %14546 = icmp ult i32 %14543, %14545
  br i1 %14546, label %14511, label %14547

14547:                                            ; preds = %14542
  %14548 = load i16, ptr %14498, align 2
  br label %14549

14549:                                            ; preds = %14547, %14507, %14501
  %14550 = phi i16 [ %14548, %14547 ], [ %14502, %14507 ], [ %14502, %14501 ]
  %14551 = add nuw nsw i32 %14503, 1
  %14552 = zext i16 %14550 to i32
  %14553 = icmp ult i32 %14551, %14552
  br i1 %14553, label %14501, label %14554

14554:                                            ; preds = %14549, %14496
  %14555 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %14556 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %14557 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %14558 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %14559 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %14560 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %14561 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %14562 = load i32, ptr %5, align 4
  br label %14563

14563:                                            ; preds = %14554, %14432
  %14564 = phi i32 [ %14562, %14554 ], [ %14433, %14432 ]
  %14565 = add i32 %14564, -360000000
  %14566 = icmp ult i32 %14565, 110000000
  br i1 %14566, label %14567, label %14810

14567:                                            ; preds = %14563
  %14568 = load ptr, ptr %3, align 4
  %14569 = getelementptr inbounds %struct.mxl5005s_state, ptr %14568, i32 0, i32 18
  %14570 = load i16, ptr %14569, align 4
  %14571 = icmp eq i16 %14570, 0
  br i1 %14571, label %14627, label %14572

14572:                                            ; preds = %14620, %14567
  %14573 = phi i16 [ %14621, %14620 ], [ %14570, %14567 ]
  %14574 = phi i32 [ %14622, %14620 ], [ 0, %14567 ]
  %14575 = getelementptr %struct.mxl5005s_state, ptr %14568, i32 0, i32 19, i32 %14574
  %14576 = load i16, ptr %14575, align 2
  %14577 = icmp eq i16 %14576, 84
  br i1 %14577, label %14578, label %14620

14578:                                            ; preds = %14572
  %14579 = getelementptr %struct.mxl5005s_state, ptr %14568, i32 0, i32 19, i32 %14574, i32 1
  %14580 = load i16, ptr %14579, align 2
  %14581 = icmp eq i16 %14580, 0
  br i1 %14581, label %14620, label %14582

14582:                                            ; preds = %14613, %14578
  %14583 = phi i32 [ %14614, %14613 ], [ 0, %14578 ]
  %14584 = getelementptr %struct.mxl5005s_state, ptr %14568, i32 0, i32 19, i32 %14574, i32 4, i32 %14583
  store i16 0, ptr %14584, align 2
  %14585 = getelementptr %struct.mxl5005s_state, ptr %14568, i32 0, i32 19, i32 %14574, i32 3, i32 %14583
  %14586 = load i16, ptr %14585, align 2
  %14587 = load ptr, ptr %3, align 4
  %14588 = getelementptr inbounds %struct.mxl5005s_state, ptr %14587, i32 0, i32 24
  %14589 = load i16, ptr %14588, align 4
  %14590 = zext i16 %14589 to i32
  %14591 = icmp eq i16 %14589, 0
  br i1 %14591, label %14613, label %14592

14592:                                            ; preds = %14582
  %14593 = getelementptr %struct.mxl5005s_state, ptr %14568, i32 0, i32 19, i32 %14574, i32 2, i32 %14583
  %14594 = load i16, ptr %14593, align 2
  %14595 = and i16 %14594, 255
  br label %14596

14596:                                            ; preds = %14610, %14592
  %14597 = phi i32 [ 0, %14592 ], [ %14611, %14610 ]
  %14598 = getelementptr %struct.mxl5005s_state, ptr %14587, i32 0, i32 25, i32 %14597
  %14599 = load i16, ptr %14598, align 2
  %14600 = icmp eq i16 %14599, %14595
  br i1 %14600, label %14601, label %14610

14601:                                            ; preds = %14596
  %14602 = and i16 %14586, 255
  %14603 = zext i16 %14602 to i32
  %14604 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14603
  %14605 = load i8, ptr %14604, align 1
  %14606 = zext i8 %14605 to i16
  %14607 = getelementptr %struct.mxl5005s_state, ptr %14587, i32 0, i32 25, i32 %14597, i32 1
  %14608 = load i16, ptr %14607, align 2
  %14609 = and i16 %14608, %14606
  store i16 %14609, ptr %14607, align 2
  br label %14613

14610:                                            ; preds = %14596
  %14611 = add nuw nsw i32 %14597, 1
  %14612 = icmp eq i32 %14611, %14590
  br i1 %14612, label %14613, label %14596

14613:                                            ; preds = %14610, %14601, %14582
  %14614 = add nuw nsw i32 %14583, 1
  %14615 = load i16, ptr %14579, align 2
  %14616 = zext i16 %14615 to i32
  %14617 = icmp ult i32 %14614, %14616
  br i1 %14617, label %14582, label %14618

14618:                                            ; preds = %14613
  %14619 = load i16, ptr %14569, align 4
  br label %14620

14620:                                            ; preds = %14618, %14578, %14572
  %14621 = phi i16 [ %14619, %14618 ], [ %14573, %14578 ], [ %14573, %14572 ]
  %14622 = add nuw nsw i32 %14574, 1
  %14623 = zext i16 %14621 to i32
  %14624 = icmp ult i32 %14622, %14623
  br i1 %14624, label %14572, label %14625

14625:                                            ; preds = %14620
  %14626 = load ptr, ptr %3, align 4
  br label %14627

14627:                                            ; preds = %14625, %14567
  %14628 = phi ptr [ %14626, %14625 ], [ %14568, %14567 ]
  %14629 = getelementptr inbounds %struct.mxl5005s_state, ptr %14628, i32 0, i32 20
  %14630 = load i16, ptr %14629, align 2
  %14631 = icmp eq i16 %14630, 0
  br i1 %14631, label %14685, label %14632

14632:                                            ; preds = %14680, %14627
  %14633 = phi i16 [ %14681, %14680 ], [ %14630, %14627 ]
  %14634 = phi i32 [ %14682, %14680 ], [ 0, %14627 ]
  %14635 = getelementptr %struct.mxl5005s_state, ptr %14628, i32 0, i32 21, i32 %14634
  %14636 = load i16, ptr %14635, align 2
  %14637 = icmp eq i16 %14636, 84
  br i1 %14637, label %14638, label %14680

14638:                                            ; preds = %14632
  %14639 = getelementptr %struct.mxl5005s_state, ptr %14628, i32 0, i32 21, i32 %14634, i32 1
  %14640 = load i16, ptr %14639, align 2
  %14641 = icmp eq i16 %14640, 0
  br i1 %14641, label %14680, label %14642

14642:                                            ; preds = %14673, %14638
  %14643 = phi i32 [ %14674, %14673 ], [ 0, %14638 ]
  %14644 = getelementptr %struct.mxl5005s_state, ptr %14628, i32 0, i32 21, i32 %14634, i32 4, i32 %14643
  store i16 0, ptr %14644, align 2
  %14645 = getelementptr %struct.mxl5005s_state, ptr %14628, i32 0, i32 21, i32 %14634, i32 3, i32 %14643
  %14646 = load i16, ptr %14645, align 2
  %14647 = load ptr, ptr %3, align 4
  %14648 = getelementptr inbounds %struct.mxl5005s_state, ptr %14647, i32 0, i32 24
  %14649 = load i16, ptr %14648, align 4
  %14650 = zext i16 %14649 to i32
  %14651 = icmp eq i16 %14649, 0
  br i1 %14651, label %14673, label %14652

14652:                                            ; preds = %14642
  %14653 = getelementptr %struct.mxl5005s_state, ptr %14628, i32 0, i32 21, i32 %14634, i32 2, i32 %14643
  %14654 = load i16, ptr %14653, align 2
  %14655 = and i16 %14654, 255
  br label %14656

14656:                                            ; preds = %14670, %14652
  %14657 = phi i32 [ 0, %14652 ], [ %14671, %14670 ]
  %14658 = getelementptr %struct.mxl5005s_state, ptr %14647, i32 0, i32 25, i32 %14657
  %14659 = load i16, ptr %14658, align 2
  %14660 = icmp eq i16 %14659, %14655
  br i1 %14660, label %14661, label %14670

14661:                                            ; preds = %14656
  %14662 = and i16 %14646, 255
  %14663 = zext i16 %14662 to i32
  %14664 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14663
  %14665 = load i8, ptr %14664, align 1
  %14666 = zext i8 %14665 to i16
  %14667 = getelementptr %struct.mxl5005s_state, ptr %14647, i32 0, i32 25, i32 %14657, i32 1
  %14668 = load i16, ptr %14667, align 2
  %14669 = and i16 %14668, %14666
  store i16 %14669, ptr %14667, align 2
  br label %14673

14670:                                            ; preds = %14656
  %14671 = add nuw nsw i32 %14657, 1
  %14672 = icmp eq i32 %14671, %14650
  br i1 %14672, label %14673, label %14656

14673:                                            ; preds = %14670, %14661, %14642
  %14674 = add nuw nsw i32 %14643, 1
  %14675 = load i16, ptr %14639, align 2
  %14676 = zext i16 %14675 to i32
  %14677 = icmp ult i32 %14674, %14676
  br i1 %14677, label %14642, label %14678

14678:                                            ; preds = %14673
  %14679 = load i16, ptr %14629, align 2
  br label %14680

14680:                                            ; preds = %14678, %14638, %14632
  %14681 = phi i16 [ %14679, %14678 ], [ %14633, %14638 ], [ %14633, %14632 ]
  %14682 = add nuw nsw i32 %14634, 1
  %14683 = zext i16 %14681 to i32
  %14684 = icmp ult i32 %14682, %14683
  br i1 %14684, label %14632, label %14685

14685:                                            ; preds = %14680, %14627
  %14686 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %14687 = load ptr, ptr %3, align 4
  %14688 = getelementptr inbounds %struct.mxl5005s_state, ptr %14687, i32 0, i32 18
  %14689 = load i16, ptr %14688, align 4
  %14690 = icmp eq i16 %14689, 0
  br i1 %14690, label %14746, label %14691

14691:                                            ; preds = %14739, %14685
  %14692 = phi i16 [ %14740, %14739 ], [ %14689, %14685 ]
  %14693 = phi i32 [ %14741, %14739 ], [ 0, %14685 ]
  %14694 = getelementptr %struct.mxl5005s_state, ptr %14687, i32 0, i32 19, i32 %14693
  %14695 = load i16, ptr %14694, align 2
  %14696 = icmp eq i16 %14695, 82
  br i1 %14696, label %14697, label %14739

14697:                                            ; preds = %14691
  %14698 = getelementptr %struct.mxl5005s_state, ptr %14687, i32 0, i32 19, i32 %14693, i32 1
  %14699 = load i16, ptr %14698, align 2
  %14700 = icmp eq i16 %14699, 0
  br i1 %14700, label %14739, label %14701

14701:                                            ; preds = %14732, %14697
  %14702 = phi i32 [ %14733, %14732 ], [ 0, %14697 ]
  %14703 = getelementptr %struct.mxl5005s_state, ptr %14687, i32 0, i32 19, i32 %14693, i32 4, i32 %14702
  store i16 0, ptr %14703, align 2
  %14704 = getelementptr %struct.mxl5005s_state, ptr %14687, i32 0, i32 19, i32 %14693, i32 3, i32 %14702
  %14705 = load i16, ptr %14704, align 2
  %14706 = load ptr, ptr %3, align 4
  %14707 = getelementptr inbounds %struct.mxl5005s_state, ptr %14706, i32 0, i32 24
  %14708 = load i16, ptr %14707, align 4
  %14709 = zext i16 %14708 to i32
  %14710 = icmp eq i16 %14708, 0
  br i1 %14710, label %14732, label %14711

14711:                                            ; preds = %14701
  %14712 = getelementptr %struct.mxl5005s_state, ptr %14687, i32 0, i32 19, i32 %14693, i32 2, i32 %14702
  %14713 = load i16, ptr %14712, align 2
  %14714 = and i16 %14713, 255
  br label %14715

14715:                                            ; preds = %14729, %14711
  %14716 = phi i32 [ 0, %14711 ], [ %14730, %14729 ]
  %14717 = getelementptr %struct.mxl5005s_state, ptr %14706, i32 0, i32 25, i32 %14716
  %14718 = load i16, ptr %14717, align 2
  %14719 = icmp eq i16 %14718, %14714
  br i1 %14719, label %14720, label %14729

14720:                                            ; preds = %14715
  %14721 = and i16 %14705, 255
  %14722 = zext i16 %14721 to i32
  %14723 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14722
  %14724 = load i8, ptr %14723, align 1
  %14725 = zext i8 %14724 to i16
  %14726 = getelementptr %struct.mxl5005s_state, ptr %14706, i32 0, i32 25, i32 %14716, i32 1
  %14727 = load i16, ptr %14726, align 2
  %14728 = and i16 %14727, %14725
  store i16 %14728, ptr %14726, align 2
  br label %14732

14729:                                            ; preds = %14715
  %14730 = add nuw nsw i32 %14716, 1
  %14731 = icmp eq i32 %14730, %14709
  br i1 %14731, label %14732, label %14715

14732:                                            ; preds = %14729, %14720, %14701
  %14733 = add nuw nsw i32 %14702, 1
  %14734 = load i16, ptr %14698, align 2
  %14735 = zext i16 %14734 to i32
  %14736 = icmp ult i32 %14733, %14735
  br i1 %14736, label %14701, label %14737

14737:                                            ; preds = %14732
  %14738 = load i16, ptr %14688, align 4
  br label %14739

14739:                                            ; preds = %14737, %14697, %14691
  %14740 = phi i16 [ %14738, %14737 ], [ %14692, %14697 ], [ %14692, %14691 ]
  %14741 = add nuw nsw i32 %14693, 1
  %14742 = zext i16 %14740 to i32
  %14743 = icmp ult i32 %14741, %14742
  br i1 %14743, label %14691, label %14744

14744:                                            ; preds = %14739
  %14745 = load ptr, ptr %3, align 4
  br label %14746

14746:                                            ; preds = %14744, %14685
  %14747 = phi ptr [ %14745, %14744 ], [ %14687, %14685 ]
  %14748 = getelementptr inbounds %struct.mxl5005s_state, ptr %14747, i32 0, i32 20
  %14749 = load i16, ptr %14748, align 2
  %14750 = icmp eq i16 %14749, 0
  br i1 %14750, label %14804, label %14751

14751:                                            ; preds = %14799, %14746
  %14752 = phi i16 [ %14800, %14799 ], [ %14749, %14746 ]
  %14753 = phi i32 [ %14801, %14799 ], [ 0, %14746 ]
  %14754 = getelementptr %struct.mxl5005s_state, ptr %14747, i32 0, i32 21, i32 %14753
  %14755 = load i16, ptr %14754, align 2
  %14756 = icmp eq i16 %14755, 82
  br i1 %14756, label %14757, label %14799

14757:                                            ; preds = %14751
  %14758 = getelementptr %struct.mxl5005s_state, ptr %14747, i32 0, i32 21, i32 %14753, i32 1
  %14759 = load i16, ptr %14758, align 2
  %14760 = icmp eq i16 %14759, 0
  br i1 %14760, label %14799, label %14761

14761:                                            ; preds = %14792, %14757
  %14762 = phi i32 [ %14793, %14792 ], [ 0, %14757 ]
  %14763 = getelementptr %struct.mxl5005s_state, ptr %14747, i32 0, i32 21, i32 %14753, i32 4, i32 %14762
  store i16 0, ptr %14763, align 2
  %14764 = getelementptr %struct.mxl5005s_state, ptr %14747, i32 0, i32 21, i32 %14753, i32 3, i32 %14762
  %14765 = load i16, ptr %14764, align 2
  %14766 = load ptr, ptr %3, align 4
  %14767 = getelementptr inbounds %struct.mxl5005s_state, ptr %14766, i32 0, i32 24
  %14768 = load i16, ptr %14767, align 4
  %14769 = zext i16 %14768 to i32
  %14770 = icmp eq i16 %14768, 0
  br i1 %14770, label %14792, label %14771

14771:                                            ; preds = %14761
  %14772 = getelementptr %struct.mxl5005s_state, ptr %14747, i32 0, i32 21, i32 %14753, i32 2, i32 %14762
  %14773 = load i16, ptr %14772, align 2
  %14774 = and i16 %14773, 255
  br label %14775

14775:                                            ; preds = %14789, %14771
  %14776 = phi i32 [ 0, %14771 ], [ %14790, %14789 ]
  %14777 = getelementptr %struct.mxl5005s_state, ptr %14766, i32 0, i32 25, i32 %14776
  %14778 = load i16, ptr %14777, align 2
  %14779 = icmp eq i16 %14778, %14774
  br i1 %14779, label %14780, label %14789

14780:                                            ; preds = %14775
  %14781 = and i16 %14765, 255
  %14782 = zext i16 %14781 to i32
  %14783 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14782
  %14784 = load i8, ptr %14783, align 1
  %14785 = zext i8 %14784 to i16
  %14786 = getelementptr %struct.mxl5005s_state, ptr %14766, i32 0, i32 25, i32 %14776, i32 1
  %14787 = load i16, ptr %14786, align 2
  %14788 = and i16 %14787, %14785
  store i16 %14788, ptr %14786, align 2
  br label %14792

14789:                                            ; preds = %14775
  %14790 = add nuw nsw i32 %14776, 1
  %14791 = icmp eq i32 %14790, %14769
  br i1 %14791, label %14792, label %14775

14792:                                            ; preds = %14789, %14780, %14761
  %14793 = add nuw nsw i32 %14762, 1
  %14794 = load i16, ptr %14758, align 2
  %14795 = zext i16 %14794 to i32
  %14796 = icmp ult i32 %14793, %14795
  br i1 %14796, label %14761, label %14797

14797:                                            ; preds = %14792
  %14798 = load i16, ptr %14748, align 2
  br label %14799

14799:                                            ; preds = %14797, %14757, %14751
  %14800 = phi i16 [ %14798, %14797 ], [ %14752, %14757 ], [ %14752, %14751 ]
  %14801 = add nuw nsw i32 %14753, 1
  %14802 = zext i16 %14800 to i32
  %14803 = icmp ult i32 %14801, %14802
  br i1 %14803, label %14751, label %14804

14804:                                            ; preds = %14799, %14746
  %14805 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %14806 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %14807 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %14808 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %14809 = load i32, ptr %5, align 4
  br label %14810

14810:                                            ; preds = %14804, %14563
  %14811 = phi i32 [ %14809, %14804 ], [ %14564, %14563 ]
  %14812 = add i32 %14811, -470000000
  %14813 = icmp ult i32 %14812, 170000000
  br i1 %14813, label %14814, label %14941

14814:                                            ; preds = %14810
  %14815 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %14816 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %14817 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %14818 = load ptr, ptr %3, align 4
  %14819 = getelementptr inbounds %struct.mxl5005s_state, ptr %14818, i32 0, i32 18
  %14820 = load i16, ptr %14819, align 4
  %14821 = icmp eq i16 %14820, 0
  br i1 %14821, label %14877, label %14822

14822:                                            ; preds = %14870, %14814
  %14823 = phi i16 [ %14871, %14870 ], [ %14820, %14814 ]
  %14824 = phi i32 [ %14872, %14870 ], [ 0, %14814 ]
  %14825 = getelementptr %struct.mxl5005s_state, ptr %14818, i32 0, i32 19, i32 %14824
  %14826 = load i16, ptr %14825, align 2
  %14827 = icmp eq i16 %14826, 82
  br i1 %14827, label %14828, label %14870

14828:                                            ; preds = %14822
  %14829 = getelementptr %struct.mxl5005s_state, ptr %14818, i32 0, i32 19, i32 %14824, i32 1
  %14830 = load i16, ptr %14829, align 2
  %14831 = icmp eq i16 %14830, 0
  br i1 %14831, label %14870, label %14832

14832:                                            ; preds = %14863, %14828
  %14833 = phi i32 [ %14864, %14863 ], [ 0, %14828 ]
  %14834 = getelementptr %struct.mxl5005s_state, ptr %14818, i32 0, i32 19, i32 %14824, i32 4, i32 %14833
  store i16 0, ptr %14834, align 2
  %14835 = getelementptr %struct.mxl5005s_state, ptr %14818, i32 0, i32 19, i32 %14824, i32 3, i32 %14833
  %14836 = load i16, ptr %14835, align 2
  %14837 = load ptr, ptr %3, align 4
  %14838 = getelementptr inbounds %struct.mxl5005s_state, ptr %14837, i32 0, i32 24
  %14839 = load i16, ptr %14838, align 4
  %14840 = zext i16 %14839 to i32
  %14841 = icmp eq i16 %14839, 0
  br i1 %14841, label %14863, label %14842

14842:                                            ; preds = %14832
  %14843 = getelementptr %struct.mxl5005s_state, ptr %14818, i32 0, i32 19, i32 %14824, i32 2, i32 %14833
  %14844 = load i16, ptr %14843, align 2
  %14845 = and i16 %14844, 255
  br label %14846

14846:                                            ; preds = %14860, %14842
  %14847 = phi i32 [ 0, %14842 ], [ %14861, %14860 ]
  %14848 = getelementptr %struct.mxl5005s_state, ptr %14837, i32 0, i32 25, i32 %14847
  %14849 = load i16, ptr %14848, align 2
  %14850 = icmp eq i16 %14849, %14845
  br i1 %14850, label %14851, label %14860

14851:                                            ; preds = %14846
  %14852 = and i16 %14836, 255
  %14853 = zext i16 %14852 to i32
  %14854 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14853
  %14855 = load i8, ptr %14854, align 1
  %14856 = zext i8 %14855 to i16
  %14857 = getelementptr %struct.mxl5005s_state, ptr %14837, i32 0, i32 25, i32 %14847, i32 1
  %14858 = load i16, ptr %14857, align 2
  %14859 = and i16 %14858, %14856
  store i16 %14859, ptr %14857, align 2
  br label %14863

14860:                                            ; preds = %14846
  %14861 = add nuw nsw i32 %14847, 1
  %14862 = icmp eq i32 %14861, %14840
  br i1 %14862, label %14863, label %14846

14863:                                            ; preds = %14860, %14851, %14832
  %14864 = add nuw nsw i32 %14833, 1
  %14865 = load i16, ptr %14829, align 2
  %14866 = zext i16 %14865 to i32
  %14867 = icmp ult i32 %14864, %14866
  br i1 %14867, label %14832, label %14868

14868:                                            ; preds = %14863
  %14869 = load i16, ptr %14819, align 4
  br label %14870

14870:                                            ; preds = %14868, %14828, %14822
  %14871 = phi i16 [ %14869, %14868 ], [ %14823, %14828 ], [ %14823, %14822 ]
  %14872 = add nuw nsw i32 %14824, 1
  %14873 = zext i16 %14871 to i32
  %14874 = icmp ult i32 %14872, %14873
  br i1 %14874, label %14822, label %14875

14875:                                            ; preds = %14870
  %14876 = load ptr, ptr %3, align 4
  br label %14877

14877:                                            ; preds = %14875, %14814
  %14878 = phi ptr [ %14876, %14875 ], [ %14818, %14814 ]
  %14879 = getelementptr inbounds %struct.mxl5005s_state, ptr %14878, i32 0, i32 20
  %14880 = load i16, ptr %14879, align 2
  %14881 = icmp eq i16 %14880, 0
  br i1 %14881, label %14935, label %14882

14882:                                            ; preds = %14930, %14877
  %14883 = phi i16 [ %14931, %14930 ], [ %14880, %14877 ]
  %14884 = phi i32 [ %14932, %14930 ], [ 0, %14877 ]
  %14885 = getelementptr %struct.mxl5005s_state, ptr %14878, i32 0, i32 21, i32 %14884
  %14886 = load i16, ptr %14885, align 2
  %14887 = icmp eq i16 %14886, 82
  br i1 %14887, label %14888, label %14930

14888:                                            ; preds = %14882
  %14889 = getelementptr %struct.mxl5005s_state, ptr %14878, i32 0, i32 21, i32 %14884, i32 1
  %14890 = load i16, ptr %14889, align 2
  %14891 = icmp eq i16 %14890, 0
  br i1 %14891, label %14930, label %14892

14892:                                            ; preds = %14923, %14888
  %14893 = phi i32 [ %14924, %14923 ], [ 0, %14888 ]
  %14894 = getelementptr %struct.mxl5005s_state, ptr %14878, i32 0, i32 21, i32 %14884, i32 4, i32 %14893
  store i16 0, ptr %14894, align 2
  %14895 = getelementptr %struct.mxl5005s_state, ptr %14878, i32 0, i32 21, i32 %14884, i32 3, i32 %14893
  %14896 = load i16, ptr %14895, align 2
  %14897 = load ptr, ptr %3, align 4
  %14898 = getelementptr inbounds %struct.mxl5005s_state, ptr %14897, i32 0, i32 24
  %14899 = load i16, ptr %14898, align 4
  %14900 = zext i16 %14899 to i32
  %14901 = icmp eq i16 %14899, 0
  br i1 %14901, label %14923, label %14902

14902:                                            ; preds = %14892
  %14903 = getelementptr %struct.mxl5005s_state, ptr %14878, i32 0, i32 21, i32 %14884, i32 2, i32 %14893
  %14904 = load i16, ptr %14903, align 2
  %14905 = and i16 %14904, 255
  br label %14906

14906:                                            ; preds = %14920, %14902
  %14907 = phi i32 [ 0, %14902 ], [ %14921, %14920 ]
  %14908 = getelementptr %struct.mxl5005s_state, ptr %14897, i32 0, i32 25, i32 %14907
  %14909 = load i16, ptr %14908, align 2
  %14910 = icmp eq i16 %14909, %14905
  br i1 %14910, label %14911, label %14920

14911:                                            ; preds = %14906
  %14912 = and i16 %14896, 255
  %14913 = zext i16 %14912 to i32
  %14914 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14913
  %14915 = load i8, ptr %14914, align 1
  %14916 = zext i8 %14915 to i16
  %14917 = getelementptr %struct.mxl5005s_state, ptr %14897, i32 0, i32 25, i32 %14907, i32 1
  %14918 = load i16, ptr %14917, align 2
  %14919 = and i16 %14918, %14916
  store i16 %14919, ptr %14917, align 2
  br label %14923

14920:                                            ; preds = %14906
  %14921 = add nuw nsw i32 %14907, 1
  %14922 = icmp eq i32 %14921, %14900
  br i1 %14922, label %14923, label %14906

14923:                                            ; preds = %14920, %14911, %14892
  %14924 = add nuw nsw i32 %14893, 1
  %14925 = load i16, ptr %14889, align 2
  %14926 = zext i16 %14925 to i32
  %14927 = icmp ult i32 %14924, %14926
  br i1 %14927, label %14892, label %14928

14928:                                            ; preds = %14923
  %14929 = load i16, ptr %14879, align 2
  br label %14930

14930:                                            ; preds = %14928, %14888, %14882
  %14931 = phi i16 [ %14929, %14928 ], [ %14883, %14888 ], [ %14883, %14882 ]
  %14932 = add nuw nsw i32 %14884, 1
  %14933 = zext i16 %14931 to i32
  %14934 = icmp ult i32 %14932, %14933
  br i1 %14934, label %14882, label %14935

14935:                                            ; preds = %14930, %14877
  %14936 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %14937 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %14938 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %14939 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %14940 = load i32, ptr %5, align 4
  br label %14941

14941:                                            ; preds = %14935, %14810
  %14942 = phi i32 [ %14940, %14935 ], [ %14811, %14810 ]
  %14943 = add i32 %14942, -640000000
  %14944 = icmp ult i32 %14943, 260000001
  br i1 %14944, label %14945, label %15068

14945:                                            ; preds = %14941
  %14946 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %14947 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %14948 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %14949 = load ptr, ptr %3, align 4
  %14950 = getelementptr inbounds %struct.mxl5005s_state, ptr %14949, i32 0, i32 18
  %14951 = load i16, ptr %14950, align 4
  %14952 = icmp eq i16 %14951, 0
  br i1 %14952, label %15008, label %14953

14953:                                            ; preds = %15001, %14945
  %14954 = phi i16 [ %15002, %15001 ], [ %14951, %14945 ]
  %14955 = phi i32 [ %15003, %15001 ], [ 0, %14945 ]
  %14956 = getelementptr %struct.mxl5005s_state, ptr %14949, i32 0, i32 19, i32 %14955
  %14957 = load i16, ptr %14956, align 2
  %14958 = icmp eq i16 %14957, 82
  br i1 %14958, label %14959, label %15001

14959:                                            ; preds = %14953
  %14960 = getelementptr %struct.mxl5005s_state, ptr %14949, i32 0, i32 19, i32 %14955, i32 1
  %14961 = load i16, ptr %14960, align 2
  %14962 = icmp eq i16 %14961, 0
  br i1 %14962, label %15001, label %14963

14963:                                            ; preds = %14994, %14959
  %14964 = phi i32 [ %14995, %14994 ], [ 0, %14959 ]
  %14965 = getelementptr %struct.mxl5005s_state, ptr %14949, i32 0, i32 19, i32 %14955, i32 4, i32 %14964
  store i16 0, ptr %14965, align 2
  %14966 = getelementptr %struct.mxl5005s_state, ptr %14949, i32 0, i32 19, i32 %14955, i32 3, i32 %14964
  %14967 = load i16, ptr %14966, align 2
  %14968 = load ptr, ptr %3, align 4
  %14969 = getelementptr inbounds %struct.mxl5005s_state, ptr %14968, i32 0, i32 24
  %14970 = load i16, ptr %14969, align 4
  %14971 = zext i16 %14970 to i32
  %14972 = icmp eq i16 %14970, 0
  br i1 %14972, label %14994, label %14973

14973:                                            ; preds = %14963
  %14974 = getelementptr %struct.mxl5005s_state, ptr %14949, i32 0, i32 19, i32 %14955, i32 2, i32 %14964
  %14975 = load i16, ptr %14974, align 2
  %14976 = and i16 %14975, 255
  br label %14977

14977:                                            ; preds = %14991, %14973
  %14978 = phi i32 [ 0, %14973 ], [ %14992, %14991 ]
  %14979 = getelementptr %struct.mxl5005s_state, ptr %14968, i32 0, i32 25, i32 %14978
  %14980 = load i16, ptr %14979, align 2
  %14981 = icmp eq i16 %14980, %14976
  br i1 %14981, label %14982, label %14991

14982:                                            ; preds = %14977
  %14983 = and i16 %14967, 255
  %14984 = zext i16 %14983 to i32
  %14985 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %14984
  %14986 = load i8, ptr %14985, align 1
  %14987 = zext i8 %14986 to i16
  %14988 = getelementptr %struct.mxl5005s_state, ptr %14968, i32 0, i32 25, i32 %14978, i32 1
  %14989 = load i16, ptr %14988, align 2
  %14990 = and i16 %14989, %14987
  store i16 %14990, ptr %14988, align 2
  br label %14994

14991:                                            ; preds = %14977
  %14992 = add nuw nsw i32 %14978, 1
  %14993 = icmp eq i32 %14992, %14971
  br i1 %14993, label %14994, label %14977

14994:                                            ; preds = %14991, %14982, %14963
  %14995 = add nuw nsw i32 %14964, 1
  %14996 = load i16, ptr %14960, align 2
  %14997 = zext i16 %14996 to i32
  %14998 = icmp ult i32 %14995, %14997
  br i1 %14998, label %14963, label %14999

14999:                                            ; preds = %14994
  %15000 = load i16, ptr %14950, align 4
  br label %15001

15001:                                            ; preds = %14999, %14959, %14953
  %15002 = phi i16 [ %15000, %14999 ], [ %14954, %14959 ], [ %14954, %14953 ]
  %15003 = add nuw nsw i32 %14955, 1
  %15004 = zext i16 %15002 to i32
  %15005 = icmp ult i32 %15003, %15004
  br i1 %15005, label %14953, label %15006

15006:                                            ; preds = %15001
  %15007 = load ptr, ptr %3, align 4
  br label %15008

15008:                                            ; preds = %15006, %14945
  %15009 = phi ptr [ %15007, %15006 ], [ %14949, %14945 ]
  %15010 = getelementptr inbounds %struct.mxl5005s_state, ptr %15009, i32 0, i32 20
  %15011 = load i16, ptr %15010, align 2
  %15012 = icmp eq i16 %15011, 0
  br i1 %15012, label %15066, label %15013

15013:                                            ; preds = %15061, %15008
  %15014 = phi i16 [ %15062, %15061 ], [ %15011, %15008 ]
  %15015 = phi i32 [ %15063, %15061 ], [ 0, %15008 ]
  %15016 = getelementptr %struct.mxl5005s_state, ptr %15009, i32 0, i32 21, i32 %15015
  %15017 = load i16, ptr %15016, align 2
  %15018 = icmp eq i16 %15017, 82
  br i1 %15018, label %15019, label %15061

15019:                                            ; preds = %15013
  %15020 = getelementptr %struct.mxl5005s_state, ptr %15009, i32 0, i32 21, i32 %15015, i32 1
  %15021 = load i16, ptr %15020, align 2
  %15022 = icmp eq i16 %15021, 0
  br i1 %15022, label %15061, label %15023

15023:                                            ; preds = %15054, %15019
  %15024 = phi i32 [ %15055, %15054 ], [ 0, %15019 ]
  %15025 = getelementptr %struct.mxl5005s_state, ptr %15009, i32 0, i32 21, i32 %15015, i32 4, i32 %15024
  store i16 0, ptr %15025, align 2
  %15026 = getelementptr %struct.mxl5005s_state, ptr %15009, i32 0, i32 21, i32 %15015, i32 3, i32 %15024
  %15027 = load i16, ptr %15026, align 2
  %15028 = load ptr, ptr %3, align 4
  %15029 = getelementptr inbounds %struct.mxl5005s_state, ptr %15028, i32 0, i32 24
  %15030 = load i16, ptr %15029, align 4
  %15031 = zext i16 %15030 to i32
  %15032 = icmp eq i16 %15030, 0
  br i1 %15032, label %15054, label %15033

15033:                                            ; preds = %15023
  %15034 = getelementptr %struct.mxl5005s_state, ptr %15009, i32 0, i32 21, i32 %15015, i32 2, i32 %15024
  %15035 = load i16, ptr %15034, align 2
  %15036 = and i16 %15035, 255
  br label %15037

15037:                                            ; preds = %15051, %15033
  %15038 = phi i32 [ 0, %15033 ], [ %15052, %15051 ]
  %15039 = getelementptr %struct.mxl5005s_state, ptr %15028, i32 0, i32 25, i32 %15038
  %15040 = load i16, ptr %15039, align 2
  %15041 = icmp eq i16 %15040, %15036
  br i1 %15041, label %15042, label %15051

15042:                                            ; preds = %15037
  %15043 = and i16 %15027, 255
  %15044 = zext i16 %15043 to i32
  %15045 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15044
  %15046 = load i8, ptr %15045, align 1
  %15047 = zext i8 %15046 to i16
  %15048 = getelementptr %struct.mxl5005s_state, ptr %15028, i32 0, i32 25, i32 %15038, i32 1
  %15049 = load i16, ptr %15048, align 2
  %15050 = and i16 %15049, %15047
  store i16 %15050, ptr %15048, align 2
  br label %15054

15051:                                            ; preds = %15037
  %15052 = add nuw nsw i32 %15038, 1
  %15053 = icmp eq i32 %15052, %15031
  br i1 %15053, label %15054, label %15037

15054:                                            ; preds = %15051, %15042, %15023
  %15055 = add nuw nsw i32 %15024, 1
  %15056 = load i16, ptr %15020, align 2
  %15057 = zext i16 %15056 to i32
  %15058 = icmp ult i32 %15055, %15057
  br i1 %15058, label %15023, label %15059

15059:                                            ; preds = %15054
  %15060 = load i16, ptr %15010, align 2
  br label %15061

15061:                                            ; preds = %15059, %15019, %15013
  %15062 = phi i16 [ %15060, %15059 ], [ %15014, %15019 ], [ %15014, %15013 ]
  %15063 = add nuw nsw i32 %15015, 1
  %15064 = zext i16 %15062 to i32
  %15065 = icmp ult i32 %15063, %15064
  br i1 %15065, label %15013, label %15066

15066:                                            ; preds = %15061, %15008
  %15067 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %15068

15068:                                            ; preds = %15066, %14941, %13805
  %15069 = load i8, ptr %7001, align 1
  %15070 = icmp eq i8 %15069, 7
  br i1 %15070, label %15071, label %16333

15071:                                            ; preds = %15068
  %15072 = load ptr, ptr %3, align 4
  %15073 = getelementptr inbounds %struct.mxl5005s_state, ptr %15072, i32 0, i32 18
  %15074 = load i16, ptr %15073, align 4
  %15075 = icmp eq i16 %15074, 0
  br i1 %15075, label %15131, label %15076

15076:                                            ; preds = %15124, %15071
  %15077 = phi i16 [ %15125, %15124 ], [ %15074, %15071 ]
  %15078 = phi i32 [ %15126, %15124 ], [ 0, %15071 ]
  %15079 = getelementptr %struct.mxl5005s_state, ptr %15072, i32 0, i32 19, i32 %15078
  %15080 = load i16, ptr %15079, align 2
  %15081 = icmp eq i16 %15080, 86
  br i1 %15081, label %15082, label %15124

15082:                                            ; preds = %15076
  %15083 = getelementptr %struct.mxl5005s_state, ptr %15072, i32 0, i32 19, i32 %15078, i32 1
  %15084 = load i16, ptr %15083, align 2
  %15085 = icmp eq i16 %15084, 0
  br i1 %15085, label %15124, label %15086

15086:                                            ; preds = %15117, %15082
  %15087 = phi i32 [ %15118, %15117 ], [ 0, %15082 ]
  %15088 = getelementptr %struct.mxl5005s_state, ptr %15072, i32 0, i32 19, i32 %15078, i32 4, i32 %15087
  store i16 0, ptr %15088, align 2
  %15089 = getelementptr %struct.mxl5005s_state, ptr %15072, i32 0, i32 19, i32 %15078, i32 3, i32 %15087
  %15090 = load i16, ptr %15089, align 2
  %15091 = load ptr, ptr %3, align 4
  %15092 = getelementptr inbounds %struct.mxl5005s_state, ptr %15091, i32 0, i32 24
  %15093 = load i16, ptr %15092, align 4
  %15094 = zext i16 %15093 to i32
  %15095 = icmp eq i16 %15093, 0
  br i1 %15095, label %15117, label %15096

15096:                                            ; preds = %15086
  %15097 = getelementptr %struct.mxl5005s_state, ptr %15072, i32 0, i32 19, i32 %15078, i32 2, i32 %15087
  %15098 = load i16, ptr %15097, align 2
  %15099 = and i16 %15098, 255
  br label %15100

15100:                                            ; preds = %15114, %15096
  %15101 = phi i32 [ 0, %15096 ], [ %15115, %15114 ]
  %15102 = getelementptr %struct.mxl5005s_state, ptr %15091, i32 0, i32 25, i32 %15101
  %15103 = load i16, ptr %15102, align 2
  %15104 = icmp eq i16 %15103, %15099
  br i1 %15104, label %15105, label %15114

15105:                                            ; preds = %15100
  %15106 = and i16 %15090, 255
  %15107 = zext i16 %15106 to i32
  %15108 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15107
  %15109 = load i8, ptr %15108, align 1
  %15110 = zext i8 %15109 to i16
  %15111 = getelementptr %struct.mxl5005s_state, ptr %15091, i32 0, i32 25, i32 %15101, i32 1
  %15112 = load i16, ptr %15111, align 2
  %15113 = and i16 %15112, %15110
  store i16 %15113, ptr %15111, align 2
  br label %15117

15114:                                            ; preds = %15100
  %15115 = add nuw nsw i32 %15101, 1
  %15116 = icmp eq i32 %15115, %15094
  br i1 %15116, label %15117, label %15100

15117:                                            ; preds = %15114, %15105, %15086
  %15118 = add nuw nsw i32 %15087, 1
  %15119 = load i16, ptr %15083, align 2
  %15120 = zext i16 %15119 to i32
  %15121 = icmp ult i32 %15118, %15120
  br i1 %15121, label %15086, label %15122

15122:                                            ; preds = %15117
  %15123 = load i16, ptr %15073, align 4
  br label %15124

15124:                                            ; preds = %15122, %15082, %15076
  %15125 = phi i16 [ %15123, %15122 ], [ %15077, %15082 ], [ %15077, %15076 ]
  %15126 = add nuw nsw i32 %15078, 1
  %15127 = zext i16 %15125 to i32
  %15128 = icmp ult i32 %15126, %15127
  br i1 %15128, label %15076, label %15129

15129:                                            ; preds = %15124
  %15130 = load ptr, ptr %3, align 4
  br label %15131

15131:                                            ; preds = %15129, %15071
  %15132 = phi ptr [ %15130, %15129 ], [ %15072, %15071 ]
  %15133 = getelementptr inbounds %struct.mxl5005s_state, ptr %15132, i32 0, i32 20
  %15134 = load i16, ptr %15133, align 2
  %15135 = icmp eq i16 %15134, 0
  br i1 %15135, label %15189, label %15136

15136:                                            ; preds = %15184, %15131
  %15137 = phi i16 [ %15185, %15184 ], [ %15134, %15131 ]
  %15138 = phi i32 [ %15186, %15184 ], [ 0, %15131 ]
  %15139 = getelementptr %struct.mxl5005s_state, ptr %15132, i32 0, i32 21, i32 %15138
  %15140 = load i16, ptr %15139, align 2
  %15141 = icmp eq i16 %15140, 86
  br i1 %15141, label %15142, label %15184

15142:                                            ; preds = %15136
  %15143 = getelementptr %struct.mxl5005s_state, ptr %15132, i32 0, i32 21, i32 %15138, i32 1
  %15144 = load i16, ptr %15143, align 2
  %15145 = icmp eq i16 %15144, 0
  br i1 %15145, label %15184, label %15146

15146:                                            ; preds = %15177, %15142
  %15147 = phi i32 [ %15178, %15177 ], [ 0, %15142 ]
  %15148 = getelementptr %struct.mxl5005s_state, ptr %15132, i32 0, i32 21, i32 %15138, i32 4, i32 %15147
  store i16 0, ptr %15148, align 2
  %15149 = getelementptr %struct.mxl5005s_state, ptr %15132, i32 0, i32 21, i32 %15138, i32 3, i32 %15147
  %15150 = load i16, ptr %15149, align 2
  %15151 = load ptr, ptr %3, align 4
  %15152 = getelementptr inbounds %struct.mxl5005s_state, ptr %15151, i32 0, i32 24
  %15153 = load i16, ptr %15152, align 4
  %15154 = zext i16 %15153 to i32
  %15155 = icmp eq i16 %15153, 0
  br i1 %15155, label %15177, label %15156

15156:                                            ; preds = %15146
  %15157 = getelementptr %struct.mxl5005s_state, ptr %15132, i32 0, i32 21, i32 %15138, i32 2, i32 %15147
  %15158 = load i16, ptr %15157, align 2
  %15159 = and i16 %15158, 255
  br label %15160

15160:                                            ; preds = %15174, %15156
  %15161 = phi i32 [ 0, %15156 ], [ %15175, %15174 ]
  %15162 = getelementptr %struct.mxl5005s_state, ptr %15151, i32 0, i32 25, i32 %15161
  %15163 = load i16, ptr %15162, align 2
  %15164 = icmp eq i16 %15163, %15159
  br i1 %15164, label %15165, label %15174

15165:                                            ; preds = %15160
  %15166 = and i16 %15150, 255
  %15167 = zext i16 %15166 to i32
  %15168 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15167
  %15169 = load i8, ptr %15168, align 1
  %15170 = zext i8 %15169 to i16
  %15171 = getelementptr %struct.mxl5005s_state, ptr %15151, i32 0, i32 25, i32 %15161, i32 1
  %15172 = load i16, ptr %15171, align 2
  %15173 = and i16 %15172, %15170
  store i16 %15173, ptr %15171, align 2
  br label %15177

15174:                                            ; preds = %15160
  %15175 = add nuw nsw i32 %15161, 1
  %15176 = icmp eq i32 %15175, %15154
  br i1 %15176, label %15177, label %15160

15177:                                            ; preds = %15174, %15165, %15146
  %15178 = add nuw nsw i32 %15147, 1
  %15179 = load i16, ptr %15143, align 2
  %15180 = zext i16 %15179 to i32
  %15181 = icmp ult i32 %15178, %15180
  br i1 %15181, label %15146, label %15182

15182:                                            ; preds = %15177
  %15183 = load i16, ptr %15133, align 2
  br label %15184

15184:                                            ; preds = %15182, %15142, %15136
  %15185 = phi i16 [ %15183, %15182 ], [ %15137, %15142 ], [ %15137, %15136 ]
  %15186 = add nuw nsw i32 %15138, 1
  %15187 = zext i16 %15185 to i32
  %15188 = icmp ult i32 %15186, %15187
  br i1 %15188, label %15136, label %15189

15189:                                            ; preds = %15184, %15131
  %15190 = load i32, ptr %5, align 4
  %15191 = add i32 %15190, -43000000
  %15192 = icmp ult i32 %15191, 117000000
  br i1 %15192, label %15193, label %15436

15193:                                            ; preds = %15189
  %15194 = load ptr, ptr %3, align 4
  %15195 = getelementptr inbounds %struct.mxl5005s_state, ptr %15194, i32 0, i32 18
  %15196 = load i16, ptr %15195, align 4
  %15197 = icmp eq i16 %15196, 0
  br i1 %15197, label %15253, label %15198

15198:                                            ; preds = %15246, %15193
  %15199 = phi i16 [ %15247, %15246 ], [ %15196, %15193 ]
  %15200 = phi i32 [ %15248, %15246 ], [ 0, %15193 ]
  %15201 = getelementptr %struct.mxl5005s_state, ptr %15194, i32 0, i32 19, i32 %15200
  %15202 = load i16, ptr %15201, align 2
  %15203 = icmp eq i16 %15202, 84
  br i1 %15203, label %15204, label %15246

15204:                                            ; preds = %15198
  %15205 = getelementptr %struct.mxl5005s_state, ptr %15194, i32 0, i32 19, i32 %15200, i32 1
  %15206 = load i16, ptr %15205, align 2
  %15207 = icmp eq i16 %15206, 0
  br i1 %15207, label %15246, label %15208

15208:                                            ; preds = %15239, %15204
  %15209 = phi i32 [ %15240, %15239 ], [ 0, %15204 ]
  %15210 = getelementptr %struct.mxl5005s_state, ptr %15194, i32 0, i32 19, i32 %15200, i32 4, i32 %15209
  store i16 0, ptr %15210, align 2
  %15211 = getelementptr %struct.mxl5005s_state, ptr %15194, i32 0, i32 19, i32 %15200, i32 3, i32 %15209
  %15212 = load i16, ptr %15211, align 2
  %15213 = load ptr, ptr %3, align 4
  %15214 = getelementptr inbounds %struct.mxl5005s_state, ptr %15213, i32 0, i32 24
  %15215 = load i16, ptr %15214, align 4
  %15216 = zext i16 %15215 to i32
  %15217 = icmp eq i16 %15215, 0
  br i1 %15217, label %15239, label %15218

15218:                                            ; preds = %15208
  %15219 = getelementptr %struct.mxl5005s_state, ptr %15194, i32 0, i32 19, i32 %15200, i32 2, i32 %15209
  %15220 = load i16, ptr %15219, align 2
  %15221 = and i16 %15220, 255
  br label %15222

15222:                                            ; preds = %15236, %15218
  %15223 = phi i32 [ 0, %15218 ], [ %15237, %15236 ]
  %15224 = getelementptr %struct.mxl5005s_state, ptr %15213, i32 0, i32 25, i32 %15223
  %15225 = load i16, ptr %15224, align 2
  %15226 = icmp eq i16 %15225, %15221
  br i1 %15226, label %15227, label %15236

15227:                                            ; preds = %15222
  %15228 = and i16 %15212, 255
  %15229 = zext i16 %15228 to i32
  %15230 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15229
  %15231 = load i8, ptr %15230, align 1
  %15232 = zext i8 %15231 to i16
  %15233 = getelementptr %struct.mxl5005s_state, ptr %15213, i32 0, i32 25, i32 %15223, i32 1
  %15234 = load i16, ptr %15233, align 2
  %15235 = and i16 %15234, %15232
  store i16 %15235, ptr %15233, align 2
  br label %15239

15236:                                            ; preds = %15222
  %15237 = add nuw nsw i32 %15223, 1
  %15238 = icmp eq i32 %15237, %15216
  br i1 %15238, label %15239, label %15222

15239:                                            ; preds = %15236, %15227, %15208
  %15240 = add nuw nsw i32 %15209, 1
  %15241 = load i16, ptr %15205, align 2
  %15242 = zext i16 %15241 to i32
  %15243 = icmp ult i32 %15240, %15242
  br i1 %15243, label %15208, label %15244

15244:                                            ; preds = %15239
  %15245 = load i16, ptr %15195, align 4
  br label %15246

15246:                                            ; preds = %15244, %15204, %15198
  %15247 = phi i16 [ %15245, %15244 ], [ %15199, %15204 ], [ %15199, %15198 ]
  %15248 = add nuw nsw i32 %15200, 1
  %15249 = zext i16 %15247 to i32
  %15250 = icmp ult i32 %15248, %15249
  br i1 %15250, label %15198, label %15251

15251:                                            ; preds = %15246
  %15252 = load ptr, ptr %3, align 4
  br label %15253

15253:                                            ; preds = %15251, %15193
  %15254 = phi ptr [ %15252, %15251 ], [ %15194, %15193 ]
  %15255 = getelementptr inbounds %struct.mxl5005s_state, ptr %15254, i32 0, i32 20
  %15256 = load i16, ptr %15255, align 2
  %15257 = icmp eq i16 %15256, 0
  br i1 %15257, label %15311, label %15258

15258:                                            ; preds = %15306, %15253
  %15259 = phi i16 [ %15307, %15306 ], [ %15256, %15253 ]
  %15260 = phi i32 [ %15308, %15306 ], [ 0, %15253 ]
  %15261 = getelementptr %struct.mxl5005s_state, ptr %15254, i32 0, i32 21, i32 %15260
  %15262 = load i16, ptr %15261, align 2
  %15263 = icmp eq i16 %15262, 84
  br i1 %15263, label %15264, label %15306

15264:                                            ; preds = %15258
  %15265 = getelementptr %struct.mxl5005s_state, ptr %15254, i32 0, i32 21, i32 %15260, i32 1
  %15266 = load i16, ptr %15265, align 2
  %15267 = icmp eq i16 %15266, 0
  br i1 %15267, label %15306, label %15268

15268:                                            ; preds = %15299, %15264
  %15269 = phi i32 [ %15300, %15299 ], [ 0, %15264 ]
  %15270 = getelementptr %struct.mxl5005s_state, ptr %15254, i32 0, i32 21, i32 %15260, i32 4, i32 %15269
  store i16 0, ptr %15270, align 2
  %15271 = getelementptr %struct.mxl5005s_state, ptr %15254, i32 0, i32 21, i32 %15260, i32 3, i32 %15269
  %15272 = load i16, ptr %15271, align 2
  %15273 = load ptr, ptr %3, align 4
  %15274 = getelementptr inbounds %struct.mxl5005s_state, ptr %15273, i32 0, i32 24
  %15275 = load i16, ptr %15274, align 4
  %15276 = zext i16 %15275 to i32
  %15277 = icmp eq i16 %15275, 0
  br i1 %15277, label %15299, label %15278

15278:                                            ; preds = %15268
  %15279 = getelementptr %struct.mxl5005s_state, ptr %15254, i32 0, i32 21, i32 %15260, i32 2, i32 %15269
  %15280 = load i16, ptr %15279, align 2
  %15281 = and i16 %15280, 255
  br label %15282

15282:                                            ; preds = %15296, %15278
  %15283 = phi i32 [ 0, %15278 ], [ %15297, %15296 ]
  %15284 = getelementptr %struct.mxl5005s_state, ptr %15273, i32 0, i32 25, i32 %15283
  %15285 = load i16, ptr %15284, align 2
  %15286 = icmp eq i16 %15285, %15281
  br i1 %15286, label %15287, label %15296

15287:                                            ; preds = %15282
  %15288 = and i16 %15272, 255
  %15289 = zext i16 %15288 to i32
  %15290 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15289
  %15291 = load i8, ptr %15290, align 1
  %15292 = zext i8 %15291 to i16
  %15293 = getelementptr %struct.mxl5005s_state, ptr %15273, i32 0, i32 25, i32 %15283, i32 1
  %15294 = load i16, ptr %15293, align 2
  %15295 = and i16 %15294, %15292
  store i16 %15295, ptr %15293, align 2
  br label %15299

15296:                                            ; preds = %15282
  %15297 = add nuw nsw i32 %15283, 1
  %15298 = icmp eq i32 %15297, %15276
  br i1 %15298, label %15299, label %15282

15299:                                            ; preds = %15296, %15287, %15268
  %15300 = add nuw nsw i32 %15269, 1
  %15301 = load i16, ptr %15265, align 2
  %15302 = zext i16 %15301 to i32
  %15303 = icmp ult i32 %15300, %15302
  br i1 %15303, label %15268, label %15304

15304:                                            ; preds = %15299
  %15305 = load i16, ptr %15255, align 2
  br label %15306

15306:                                            ; preds = %15304, %15264, %15258
  %15307 = phi i16 [ %15305, %15304 ], [ %15259, %15264 ], [ %15259, %15258 ]
  %15308 = add nuw nsw i32 %15260, 1
  %15309 = zext i16 %15307 to i32
  %15310 = icmp ult i32 %15308, %15309
  br i1 %15310, label %15258, label %15311

15311:                                            ; preds = %15306, %15253
  %15312 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %15313 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %15314 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %15315 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %15316 = load ptr, ptr %3, align 4
  %15317 = getelementptr inbounds %struct.mxl5005s_state, ptr %15316, i32 0, i32 18
  %15318 = load i16, ptr %15317, align 4
  %15319 = icmp eq i16 %15318, 0
  br i1 %15319, label %15375, label %15320

15320:                                            ; preds = %15368, %15311
  %15321 = phi i16 [ %15369, %15368 ], [ %15318, %15311 ]
  %15322 = phi i32 [ %15370, %15368 ], [ 0, %15311 ]
  %15323 = getelementptr %struct.mxl5005s_state, ptr %15316, i32 0, i32 19, i32 %15322
  %15324 = load i16, ptr %15323, align 2
  %15325 = icmp eq i16 %15324, 82
  br i1 %15325, label %15326, label %15368

15326:                                            ; preds = %15320
  %15327 = getelementptr %struct.mxl5005s_state, ptr %15316, i32 0, i32 19, i32 %15322, i32 1
  %15328 = load i16, ptr %15327, align 2
  %15329 = icmp eq i16 %15328, 0
  br i1 %15329, label %15368, label %15330

15330:                                            ; preds = %15361, %15326
  %15331 = phi i32 [ %15362, %15361 ], [ 0, %15326 ]
  %15332 = getelementptr %struct.mxl5005s_state, ptr %15316, i32 0, i32 19, i32 %15322, i32 4, i32 %15331
  store i16 0, ptr %15332, align 2
  %15333 = getelementptr %struct.mxl5005s_state, ptr %15316, i32 0, i32 19, i32 %15322, i32 3, i32 %15331
  %15334 = load i16, ptr %15333, align 2
  %15335 = load ptr, ptr %3, align 4
  %15336 = getelementptr inbounds %struct.mxl5005s_state, ptr %15335, i32 0, i32 24
  %15337 = load i16, ptr %15336, align 4
  %15338 = zext i16 %15337 to i32
  %15339 = icmp eq i16 %15337, 0
  br i1 %15339, label %15361, label %15340

15340:                                            ; preds = %15330
  %15341 = getelementptr %struct.mxl5005s_state, ptr %15316, i32 0, i32 19, i32 %15322, i32 2, i32 %15331
  %15342 = load i16, ptr %15341, align 2
  %15343 = and i16 %15342, 255
  br label %15344

15344:                                            ; preds = %15358, %15340
  %15345 = phi i32 [ 0, %15340 ], [ %15359, %15358 ]
  %15346 = getelementptr %struct.mxl5005s_state, ptr %15335, i32 0, i32 25, i32 %15345
  %15347 = load i16, ptr %15346, align 2
  %15348 = icmp eq i16 %15347, %15343
  br i1 %15348, label %15349, label %15358

15349:                                            ; preds = %15344
  %15350 = and i16 %15334, 255
  %15351 = zext i16 %15350 to i32
  %15352 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15351
  %15353 = load i8, ptr %15352, align 1
  %15354 = zext i8 %15353 to i16
  %15355 = getelementptr %struct.mxl5005s_state, ptr %15335, i32 0, i32 25, i32 %15345, i32 1
  %15356 = load i16, ptr %15355, align 2
  %15357 = and i16 %15356, %15354
  store i16 %15357, ptr %15355, align 2
  br label %15361

15358:                                            ; preds = %15344
  %15359 = add nuw nsw i32 %15345, 1
  %15360 = icmp eq i32 %15359, %15338
  br i1 %15360, label %15361, label %15344

15361:                                            ; preds = %15358, %15349, %15330
  %15362 = add nuw nsw i32 %15331, 1
  %15363 = load i16, ptr %15327, align 2
  %15364 = zext i16 %15363 to i32
  %15365 = icmp ult i32 %15362, %15364
  br i1 %15365, label %15330, label %15366

15366:                                            ; preds = %15361
  %15367 = load i16, ptr %15317, align 4
  br label %15368

15368:                                            ; preds = %15366, %15326, %15320
  %15369 = phi i16 [ %15367, %15366 ], [ %15321, %15326 ], [ %15321, %15320 ]
  %15370 = add nuw nsw i32 %15322, 1
  %15371 = zext i16 %15369 to i32
  %15372 = icmp ult i32 %15370, %15371
  br i1 %15372, label %15320, label %15373

15373:                                            ; preds = %15368
  %15374 = load ptr, ptr %3, align 4
  br label %15375

15375:                                            ; preds = %15373, %15311
  %15376 = phi ptr [ %15374, %15373 ], [ %15316, %15311 ]
  %15377 = getelementptr inbounds %struct.mxl5005s_state, ptr %15376, i32 0, i32 20
  %15378 = load i16, ptr %15377, align 2
  %15379 = icmp eq i16 %15378, 0
  br i1 %15379, label %15433, label %15380

15380:                                            ; preds = %15428, %15375
  %15381 = phi i16 [ %15429, %15428 ], [ %15378, %15375 ]
  %15382 = phi i32 [ %15430, %15428 ], [ 0, %15375 ]
  %15383 = getelementptr %struct.mxl5005s_state, ptr %15376, i32 0, i32 21, i32 %15382
  %15384 = load i16, ptr %15383, align 2
  %15385 = icmp eq i16 %15384, 82
  br i1 %15385, label %15386, label %15428

15386:                                            ; preds = %15380
  %15387 = getelementptr %struct.mxl5005s_state, ptr %15376, i32 0, i32 21, i32 %15382, i32 1
  %15388 = load i16, ptr %15387, align 2
  %15389 = icmp eq i16 %15388, 0
  br i1 %15389, label %15428, label %15390

15390:                                            ; preds = %15421, %15386
  %15391 = phi i32 [ %15422, %15421 ], [ 0, %15386 ]
  %15392 = getelementptr %struct.mxl5005s_state, ptr %15376, i32 0, i32 21, i32 %15382, i32 4, i32 %15391
  store i16 0, ptr %15392, align 2
  %15393 = getelementptr %struct.mxl5005s_state, ptr %15376, i32 0, i32 21, i32 %15382, i32 3, i32 %15391
  %15394 = load i16, ptr %15393, align 2
  %15395 = load ptr, ptr %3, align 4
  %15396 = getelementptr inbounds %struct.mxl5005s_state, ptr %15395, i32 0, i32 24
  %15397 = load i16, ptr %15396, align 4
  %15398 = zext i16 %15397 to i32
  %15399 = icmp eq i16 %15397, 0
  br i1 %15399, label %15421, label %15400

15400:                                            ; preds = %15390
  %15401 = getelementptr %struct.mxl5005s_state, ptr %15376, i32 0, i32 21, i32 %15382, i32 2, i32 %15391
  %15402 = load i16, ptr %15401, align 2
  %15403 = and i16 %15402, 255
  br label %15404

15404:                                            ; preds = %15418, %15400
  %15405 = phi i32 [ 0, %15400 ], [ %15419, %15418 ]
  %15406 = getelementptr %struct.mxl5005s_state, ptr %15395, i32 0, i32 25, i32 %15405
  %15407 = load i16, ptr %15406, align 2
  %15408 = icmp eq i16 %15407, %15403
  br i1 %15408, label %15409, label %15418

15409:                                            ; preds = %15404
  %15410 = and i16 %15394, 255
  %15411 = zext i16 %15410 to i32
  %15412 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15411
  %15413 = load i8, ptr %15412, align 1
  %15414 = zext i8 %15413 to i16
  %15415 = getelementptr %struct.mxl5005s_state, ptr %15395, i32 0, i32 25, i32 %15405, i32 1
  %15416 = load i16, ptr %15415, align 2
  %15417 = and i16 %15416, %15414
  store i16 %15417, ptr %15415, align 2
  br label %15421

15418:                                            ; preds = %15404
  %15419 = add nuw nsw i32 %15405, 1
  %15420 = icmp eq i32 %15419, %15398
  br i1 %15420, label %15421, label %15404

15421:                                            ; preds = %15418, %15409, %15390
  %15422 = add nuw nsw i32 %15391, 1
  %15423 = load i16, ptr %15387, align 2
  %15424 = zext i16 %15423 to i32
  %15425 = icmp ult i32 %15422, %15424
  br i1 %15425, label %15390, label %15426

15426:                                            ; preds = %15421
  %15427 = load i16, ptr %15377, align 2
  br label %15428

15428:                                            ; preds = %15426, %15386, %15380
  %15429 = phi i16 [ %15427, %15426 ], [ %15381, %15386 ], [ %15381, %15380 ]
  %15430 = add nuw nsw i32 %15382, 1
  %15431 = zext i16 %15429 to i32
  %15432 = icmp ult i32 %15430, %15431
  br i1 %15432, label %15380, label %15433

15433:                                            ; preds = %15428, %15375
  %15434 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %15435 = load i32, ptr %5, align 4
  br label %15436

15436:                                            ; preds = %15433, %15189
  %15437 = phi i32 [ %15435, %15433 ], [ %15190, %15189 ]
  %15438 = add i32 %15437, -160000000
  %15439 = icmp ult i32 %15438, 50000000
  br i1 %15439, label %15440, label %15567

15440:                                            ; preds = %15436
  %15441 = load ptr, ptr %3, align 4
  %15442 = getelementptr inbounds %struct.mxl5005s_state, ptr %15441, i32 0, i32 18
  %15443 = load i16, ptr %15442, align 4
  %15444 = icmp eq i16 %15443, 0
  br i1 %15444, label %15500, label %15445

15445:                                            ; preds = %15493, %15440
  %15446 = phi i16 [ %15494, %15493 ], [ %15443, %15440 ]
  %15447 = phi i32 [ %15495, %15493 ], [ 0, %15440 ]
  %15448 = getelementptr %struct.mxl5005s_state, ptr %15441, i32 0, i32 19, i32 %15447
  %15449 = load i16, ptr %15448, align 2
  %15450 = icmp eq i16 %15449, 84
  br i1 %15450, label %15451, label %15493

15451:                                            ; preds = %15445
  %15452 = getelementptr %struct.mxl5005s_state, ptr %15441, i32 0, i32 19, i32 %15447, i32 1
  %15453 = load i16, ptr %15452, align 2
  %15454 = icmp eq i16 %15453, 0
  br i1 %15454, label %15493, label %15455

15455:                                            ; preds = %15486, %15451
  %15456 = phi i32 [ %15487, %15486 ], [ 0, %15451 ]
  %15457 = getelementptr %struct.mxl5005s_state, ptr %15441, i32 0, i32 19, i32 %15447, i32 4, i32 %15456
  store i16 0, ptr %15457, align 2
  %15458 = getelementptr %struct.mxl5005s_state, ptr %15441, i32 0, i32 19, i32 %15447, i32 3, i32 %15456
  %15459 = load i16, ptr %15458, align 2
  %15460 = load ptr, ptr %3, align 4
  %15461 = getelementptr inbounds %struct.mxl5005s_state, ptr %15460, i32 0, i32 24
  %15462 = load i16, ptr %15461, align 4
  %15463 = zext i16 %15462 to i32
  %15464 = icmp eq i16 %15462, 0
  br i1 %15464, label %15486, label %15465

15465:                                            ; preds = %15455
  %15466 = getelementptr %struct.mxl5005s_state, ptr %15441, i32 0, i32 19, i32 %15447, i32 2, i32 %15456
  %15467 = load i16, ptr %15466, align 2
  %15468 = and i16 %15467, 255
  br label %15469

15469:                                            ; preds = %15483, %15465
  %15470 = phi i32 [ 0, %15465 ], [ %15484, %15483 ]
  %15471 = getelementptr %struct.mxl5005s_state, ptr %15460, i32 0, i32 25, i32 %15470
  %15472 = load i16, ptr %15471, align 2
  %15473 = icmp eq i16 %15472, %15468
  br i1 %15473, label %15474, label %15483

15474:                                            ; preds = %15469
  %15475 = and i16 %15459, 255
  %15476 = zext i16 %15475 to i32
  %15477 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15476
  %15478 = load i8, ptr %15477, align 1
  %15479 = zext i8 %15478 to i16
  %15480 = getelementptr %struct.mxl5005s_state, ptr %15460, i32 0, i32 25, i32 %15470, i32 1
  %15481 = load i16, ptr %15480, align 2
  %15482 = and i16 %15481, %15479
  store i16 %15482, ptr %15480, align 2
  br label %15486

15483:                                            ; preds = %15469
  %15484 = add nuw nsw i32 %15470, 1
  %15485 = icmp eq i32 %15484, %15463
  br i1 %15485, label %15486, label %15469

15486:                                            ; preds = %15483, %15474, %15455
  %15487 = add nuw nsw i32 %15456, 1
  %15488 = load i16, ptr %15452, align 2
  %15489 = zext i16 %15488 to i32
  %15490 = icmp ult i32 %15487, %15489
  br i1 %15490, label %15455, label %15491

15491:                                            ; preds = %15486
  %15492 = load i16, ptr %15442, align 4
  br label %15493

15493:                                            ; preds = %15491, %15451, %15445
  %15494 = phi i16 [ %15492, %15491 ], [ %15446, %15451 ], [ %15446, %15445 ]
  %15495 = add nuw nsw i32 %15447, 1
  %15496 = zext i16 %15494 to i32
  %15497 = icmp ult i32 %15495, %15496
  br i1 %15497, label %15445, label %15498

15498:                                            ; preds = %15493
  %15499 = load ptr, ptr %3, align 4
  br label %15500

15500:                                            ; preds = %15498, %15440
  %15501 = phi ptr [ %15499, %15498 ], [ %15441, %15440 ]
  %15502 = getelementptr inbounds %struct.mxl5005s_state, ptr %15501, i32 0, i32 20
  %15503 = load i16, ptr %15502, align 2
  %15504 = icmp eq i16 %15503, 0
  br i1 %15504, label %15558, label %15505

15505:                                            ; preds = %15553, %15500
  %15506 = phi i16 [ %15554, %15553 ], [ %15503, %15500 ]
  %15507 = phi i32 [ %15555, %15553 ], [ 0, %15500 ]
  %15508 = getelementptr %struct.mxl5005s_state, ptr %15501, i32 0, i32 21, i32 %15507
  %15509 = load i16, ptr %15508, align 2
  %15510 = icmp eq i16 %15509, 84
  br i1 %15510, label %15511, label %15553

15511:                                            ; preds = %15505
  %15512 = getelementptr %struct.mxl5005s_state, ptr %15501, i32 0, i32 21, i32 %15507, i32 1
  %15513 = load i16, ptr %15512, align 2
  %15514 = icmp eq i16 %15513, 0
  br i1 %15514, label %15553, label %15515

15515:                                            ; preds = %15546, %15511
  %15516 = phi i32 [ %15547, %15546 ], [ 0, %15511 ]
  %15517 = getelementptr %struct.mxl5005s_state, ptr %15501, i32 0, i32 21, i32 %15507, i32 4, i32 %15516
  store i16 0, ptr %15517, align 2
  %15518 = getelementptr %struct.mxl5005s_state, ptr %15501, i32 0, i32 21, i32 %15507, i32 3, i32 %15516
  %15519 = load i16, ptr %15518, align 2
  %15520 = load ptr, ptr %3, align 4
  %15521 = getelementptr inbounds %struct.mxl5005s_state, ptr %15520, i32 0, i32 24
  %15522 = load i16, ptr %15521, align 4
  %15523 = zext i16 %15522 to i32
  %15524 = icmp eq i16 %15522, 0
  br i1 %15524, label %15546, label %15525

15525:                                            ; preds = %15515
  %15526 = getelementptr %struct.mxl5005s_state, ptr %15501, i32 0, i32 21, i32 %15507, i32 2, i32 %15516
  %15527 = load i16, ptr %15526, align 2
  %15528 = and i16 %15527, 255
  br label %15529

15529:                                            ; preds = %15543, %15525
  %15530 = phi i32 [ 0, %15525 ], [ %15544, %15543 ]
  %15531 = getelementptr %struct.mxl5005s_state, ptr %15520, i32 0, i32 25, i32 %15530
  %15532 = load i16, ptr %15531, align 2
  %15533 = icmp eq i16 %15532, %15528
  br i1 %15533, label %15534, label %15543

15534:                                            ; preds = %15529
  %15535 = and i16 %15519, 255
  %15536 = zext i16 %15535 to i32
  %15537 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15536
  %15538 = load i8, ptr %15537, align 1
  %15539 = zext i8 %15538 to i16
  %15540 = getelementptr %struct.mxl5005s_state, ptr %15520, i32 0, i32 25, i32 %15530, i32 1
  %15541 = load i16, ptr %15540, align 2
  %15542 = and i16 %15541, %15539
  store i16 %15542, ptr %15540, align 2
  br label %15546

15543:                                            ; preds = %15529
  %15544 = add nuw nsw i32 %15530, 1
  %15545 = icmp eq i32 %15544, %15523
  br i1 %15545, label %15546, label %15529

15546:                                            ; preds = %15543, %15534, %15515
  %15547 = add nuw nsw i32 %15516, 1
  %15548 = load i16, ptr %15512, align 2
  %15549 = zext i16 %15548 to i32
  %15550 = icmp ult i32 %15547, %15549
  br i1 %15550, label %15515, label %15551

15551:                                            ; preds = %15546
  %15552 = load i16, ptr %15502, align 2
  br label %15553

15553:                                            ; preds = %15551, %15511, %15505
  %15554 = phi i16 [ %15552, %15551 ], [ %15506, %15511 ], [ %15506, %15505 ]
  %15555 = add nuw nsw i32 %15507, 1
  %15556 = zext i16 %15554 to i32
  %15557 = icmp ult i32 %15555, %15556
  br i1 %15557, label %15505, label %15558

15558:                                            ; preds = %15553, %15500
  %15559 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %15560 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %15561 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %15562 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %15563 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %15564 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %15565 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %15566 = load i32, ptr %5, align 4
  br label %15567

15567:                                            ; preds = %15558, %15436
  %15568 = phi i32 [ %15566, %15558 ], [ %15437, %15436 ]
  %15569 = add i32 %15568, -210000000
  %15570 = icmp ult i32 %15569, 90000000
  br i1 %15570, label %15571, label %15695

15571:                                            ; preds = %15567
  %15572 = load ptr, ptr %3, align 4
  %15573 = getelementptr inbounds %struct.mxl5005s_state, ptr %15572, i32 0, i32 18
  %15574 = load i16, ptr %15573, align 4
  %15575 = icmp eq i16 %15574, 0
  br i1 %15575, label %15631, label %15576

15576:                                            ; preds = %15624, %15571
  %15577 = phi i16 [ %15625, %15624 ], [ %15574, %15571 ]
  %15578 = phi i32 [ %15626, %15624 ], [ 0, %15571 ]
  %15579 = getelementptr %struct.mxl5005s_state, ptr %15572, i32 0, i32 19, i32 %15578
  %15580 = load i16, ptr %15579, align 2
  %15581 = icmp eq i16 %15580, 84
  br i1 %15581, label %15582, label %15624

15582:                                            ; preds = %15576
  %15583 = getelementptr %struct.mxl5005s_state, ptr %15572, i32 0, i32 19, i32 %15578, i32 1
  %15584 = load i16, ptr %15583, align 2
  %15585 = icmp eq i16 %15584, 0
  br i1 %15585, label %15624, label %15586

15586:                                            ; preds = %15617, %15582
  %15587 = phi i32 [ %15618, %15617 ], [ 0, %15582 ]
  %15588 = getelementptr %struct.mxl5005s_state, ptr %15572, i32 0, i32 19, i32 %15578, i32 4, i32 %15587
  store i16 0, ptr %15588, align 2
  %15589 = getelementptr %struct.mxl5005s_state, ptr %15572, i32 0, i32 19, i32 %15578, i32 3, i32 %15587
  %15590 = load i16, ptr %15589, align 2
  %15591 = load ptr, ptr %3, align 4
  %15592 = getelementptr inbounds %struct.mxl5005s_state, ptr %15591, i32 0, i32 24
  %15593 = load i16, ptr %15592, align 4
  %15594 = zext i16 %15593 to i32
  %15595 = icmp eq i16 %15593, 0
  br i1 %15595, label %15617, label %15596

15596:                                            ; preds = %15586
  %15597 = getelementptr %struct.mxl5005s_state, ptr %15572, i32 0, i32 19, i32 %15578, i32 2, i32 %15587
  %15598 = load i16, ptr %15597, align 2
  %15599 = and i16 %15598, 255
  br label %15600

15600:                                            ; preds = %15614, %15596
  %15601 = phi i32 [ 0, %15596 ], [ %15615, %15614 ]
  %15602 = getelementptr %struct.mxl5005s_state, ptr %15591, i32 0, i32 25, i32 %15601
  %15603 = load i16, ptr %15602, align 2
  %15604 = icmp eq i16 %15603, %15599
  br i1 %15604, label %15605, label %15614

15605:                                            ; preds = %15600
  %15606 = and i16 %15590, 255
  %15607 = zext i16 %15606 to i32
  %15608 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15607
  %15609 = load i8, ptr %15608, align 1
  %15610 = zext i8 %15609 to i16
  %15611 = getelementptr %struct.mxl5005s_state, ptr %15591, i32 0, i32 25, i32 %15601, i32 1
  %15612 = load i16, ptr %15611, align 2
  %15613 = and i16 %15612, %15610
  store i16 %15613, ptr %15611, align 2
  br label %15617

15614:                                            ; preds = %15600
  %15615 = add nuw nsw i32 %15601, 1
  %15616 = icmp eq i32 %15615, %15594
  br i1 %15616, label %15617, label %15600

15617:                                            ; preds = %15614, %15605, %15586
  %15618 = add nuw nsw i32 %15587, 1
  %15619 = load i16, ptr %15583, align 2
  %15620 = zext i16 %15619 to i32
  %15621 = icmp ult i32 %15618, %15620
  br i1 %15621, label %15586, label %15622

15622:                                            ; preds = %15617
  %15623 = load i16, ptr %15573, align 4
  br label %15624

15624:                                            ; preds = %15622, %15582, %15576
  %15625 = phi i16 [ %15623, %15622 ], [ %15577, %15582 ], [ %15577, %15576 ]
  %15626 = add nuw nsw i32 %15578, 1
  %15627 = zext i16 %15625 to i32
  %15628 = icmp ult i32 %15626, %15627
  br i1 %15628, label %15576, label %15629

15629:                                            ; preds = %15624
  %15630 = load ptr, ptr %3, align 4
  br label %15631

15631:                                            ; preds = %15629, %15571
  %15632 = phi ptr [ %15630, %15629 ], [ %15572, %15571 ]
  %15633 = getelementptr inbounds %struct.mxl5005s_state, ptr %15632, i32 0, i32 20
  %15634 = load i16, ptr %15633, align 2
  %15635 = icmp eq i16 %15634, 0
  br i1 %15635, label %15689, label %15636

15636:                                            ; preds = %15684, %15631
  %15637 = phi i16 [ %15685, %15684 ], [ %15634, %15631 ]
  %15638 = phi i32 [ %15686, %15684 ], [ 0, %15631 ]
  %15639 = getelementptr %struct.mxl5005s_state, ptr %15632, i32 0, i32 21, i32 %15638
  %15640 = load i16, ptr %15639, align 2
  %15641 = icmp eq i16 %15640, 84
  br i1 %15641, label %15642, label %15684

15642:                                            ; preds = %15636
  %15643 = getelementptr %struct.mxl5005s_state, ptr %15632, i32 0, i32 21, i32 %15638, i32 1
  %15644 = load i16, ptr %15643, align 2
  %15645 = icmp eq i16 %15644, 0
  br i1 %15645, label %15684, label %15646

15646:                                            ; preds = %15677, %15642
  %15647 = phi i32 [ %15678, %15677 ], [ 0, %15642 ]
  %15648 = getelementptr %struct.mxl5005s_state, ptr %15632, i32 0, i32 21, i32 %15638, i32 4, i32 %15647
  store i16 0, ptr %15648, align 2
  %15649 = getelementptr %struct.mxl5005s_state, ptr %15632, i32 0, i32 21, i32 %15638, i32 3, i32 %15647
  %15650 = load i16, ptr %15649, align 2
  %15651 = load ptr, ptr %3, align 4
  %15652 = getelementptr inbounds %struct.mxl5005s_state, ptr %15651, i32 0, i32 24
  %15653 = load i16, ptr %15652, align 4
  %15654 = zext i16 %15653 to i32
  %15655 = icmp eq i16 %15653, 0
  br i1 %15655, label %15677, label %15656

15656:                                            ; preds = %15646
  %15657 = getelementptr %struct.mxl5005s_state, ptr %15632, i32 0, i32 21, i32 %15638, i32 2, i32 %15647
  %15658 = load i16, ptr %15657, align 2
  %15659 = and i16 %15658, 255
  br label %15660

15660:                                            ; preds = %15674, %15656
  %15661 = phi i32 [ 0, %15656 ], [ %15675, %15674 ]
  %15662 = getelementptr %struct.mxl5005s_state, ptr %15651, i32 0, i32 25, i32 %15661
  %15663 = load i16, ptr %15662, align 2
  %15664 = icmp eq i16 %15663, %15659
  br i1 %15664, label %15665, label %15674

15665:                                            ; preds = %15660
  %15666 = and i16 %15650, 255
  %15667 = zext i16 %15666 to i32
  %15668 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15667
  %15669 = load i8, ptr %15668, align 1
  %15670 = zext i8 %15669 to i16
  %15671 = getelementptr %struct.mxl5005s_state, ptr %15651, i32 0, i32 25, i32 %15661, i32 1
  %15672 = load i16, ptr %15671, align 2
  %15673 = and i16 %15672, %15670
  store i16 %15673, ptr %15671, align 2
  br label %15677

15674:                                            ; preds = %15660
  %15675 = add nuw nsw i32 %15661, 1
  %15676 = icmp eq i32 %15675, %15654
  br i1 %15676, label %15677, label %15660

15677:                                            ; preds = %15674, %15665, %15646
  %15678 = add nuw nsw i32 %15647, 1
  %15679 = load i16, ptr %15643, align 2
  %15680 = zext i16 %15679 to i32
  %15681 = icmp ult i32 %15678, %15680
  br i1 %15681, label %15646, label %15682

15682:                                            ; preds = %15677
  %15683 = load i16, ptr %15633, align 2
  br label %15684

15684:                                            ; preds = %15682, %15642, %15636
  %15685 = phi i16 [ %15683, %15682 ], [ %15637, %15642 ], [ %15637, %15636 ]
  %15686 = add nuw nsw i32 %15638, 1
  %15687 = zext i16 %15685 to i32
  %15688 = icmp ult i32 %15686, %15687
  br i1 %15688, label %15636, label %15689

15689:                                            ; preds = %15684, %15631
  %15690 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %15691 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %15692 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %15693 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %15694 = load i32, ptr %5, align 4
  br label %15695

15695:                                            ; preds = %15689, %15567
  %15696 = phi i32 [ %15694, %15689 ], [ %15568, %15567 ]
  %15697 = add i32 %15696, -300000000
  %15698 = icmp ult i32 %15697, 90000000
  br i1 %15698, label %15699, label %15826

15699:                                            ; preds = %15695
  %15700 = load ptr, ptr %3, align 4
  %15701 = getelementptr inbounds %struct.mxl5005s_state, ptr %15700, i32 0, i32 18
  %15702 = load i16, ptr %15701, align 4
  %15703 = icmp eq i16 %15702, 0
  br i1 %15703, label %15759, label %15704

15704:                                            ; preds = %15752, %15699
  %15705 = phi i16 [ %15753, %15752 ], [ %15702, %15699 ]
  %15706 = phi i32 [ %15754, %15752 ], [ 0, %15699 ]
  %15707 = getelementptr %struct.mxl5005s_state, ptr %15700, i32 0, i32 19, i32 %15706
  %15708 = load i16, ptr %15707, align 2
  %15709 = icmp eq i16 %15708, 84
  br i1 %15709, label %15710, label %15752

15710:                                            ; preds = %15704
  %15711 = getelementptr %struct.mxl5005s_state, ptr %15700, i32 0, i32 19, i32 %15706, i32 1
  %15712 = load i16, ptr %15711, align 2
  %15713 = icmp eq i16 %15712, 0
  br i1 %15713, label %15752, label %15714

15714:                                            ; preds = %15745, %15710
  %15715 = phi i32 [ %15746, %15745 ], [ 0, %15710 ]
  %15716 = getelementptr %struct.mxl5005s_state, ptr %15700, i32 0, i32 19, i32 %15706, i32 4, i32 %15715
  store i16 0, ptr %15716, align 2
  %15717 = getelementptr %struct.mxl5005s_state, ptr %15700, i32 0, i32 19, i32 %15706, i32 3, i32 %15715
  %15718 = load i16, ptr %15717, align 2
  %15719 = load ptr, ptr %3, align 4
  %15720 = getelementptr inbounds %struct.mxl5005s_state, ptr %15719, i32 0, i32 24
  %15721 = load i16, ptr %15720, align 4
  %15722 = zext i16 %15721 to i32
  %15723 = icmp eq i16 %15721, 0
  br i1 %15723, label %15745, label %15724

15724:                                            ; preds = %15714
  %15725 = getelementptr %struct.mxl5005s_state, ptr %15700, i32 0, i32 19, i32 %15706, i32 2, i32 %15715
  %15726 = load i16, ptr %15725, align 2
  %15727 = and i16 %15726, 255
  br label %15728

15728:                                            ; preds = %15742, %15724
  %15729 = phi i32 [ 0, %15724 ], [ %15743, %15742 ]
  %15730 = getelementptr %struct.mxl5005s_state, ptr %15719, i32 0, i32 25, i32 %15729
  %15731 = load i16, ptr %15730, align 2
  %15732 = icmp eq i16 %15731, %15727
  br i1 %15732, label %15733, label %15742

15733:                                            ; preds = %15728
  %15734 = and i16 %15718, 255
  %15735 = zext i16 %15734 to i32
  %15736 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15735
  %15737 = load i8, ptr %15736, align 1
  %15738 = zext i8 %15737 to i16
  %15739 = getelementptr %struct.mxl5005s_state, ptr %15719, i32 0, i32 25, i32 %15729, i32 1
  %15740 = load i16, ptr %15739, align 2
  %15741 = and i16 %15740, %15738
  store i16 %15741, ptr %15739, align 2
  br label %15745

15742:                                            ; preds = %15728
  %15743 = add nuw nsw i32 %15729, 1
  %15744 = icmp eq i32 %15743, %15722
  br i1 %15744, label %15745, label %15728

15745:                                            ; preds = %15742, %15733, %15714
  %15746 = add nuw nsw i32 %15715, 1
  %15747 = load i16, ptr %15711, align 2
  %15748 = zext i16 %15747 to i32
  %15749 = icmp ult i32 %15746, %15748
  br i1 %15749, label %15714, label %15750

15750:                                            ; preds = %15745
  %15751 = load i16, ptr %15701, align 4
  br label %15752

15752:                                            ; preds = %15750, %15710, %15704
  %15753 = phi i16 [ %15751, %15750 ], [ %15705, %15710 ], [ %15705, %15704 ]
  %15754 = add nuw nsw i32 %15706, 1
  %15755 = zext i16 %15753 to i32
  %15756 = icmp ult i32 %15754, %15755
  br i1 %15756, label %15704, label %15757

15757:                                            ; preds = %15752
  %15758 = load ptr, ptr %3, align 4
  br label %15759

15759:                                            ; preds = %15757, %15699
  %15760 = phi ptr [ %15758, %15757 ], [ %15700, %15699 ]
  %15761 = getelementptr inbounds %struct.mxl5005s_state, ptr %15760, i32 0, i32 20
  %15762 = load i16, ptr %15761, align 2
  %15763 = icmp eq i16 %15762, 0
  br i1 %15763, label %15817, label %15764

15764:                                            ; preds = %15812, %15759
  %15765 = phi i16 [ %15813, %15812 ], [ %15762, %15759 ]
  %15766 = phi i32 [ %15814, %15812 ], [ 0, %15759 ]
  %15767 = getelementptr %struct.mxl5005s_state, ptr %15760, i32 0, i32 21, i32 %15766
  %15768 = load i16, ptr %15767, align 2
  %15769 = icmp eq i16 %15768, 84
  br i1 %15769, label %15770, label %15812

15770:                                            ; preds = %15764
  %15771 = getelementptr %struct.mxl5005s_state, ptr %15760, i32 0, i32 21, i32 %15766, i32 1
  %15772 = load i16, ptr %15771, align 2
  %15773 = icmp eq i16 %15772, 0
  br i1 %15773, label %15812, label %15774

15774:                                            ; preds = %15805, %15770
  %15775 = phi i32 [ %15806, %15805 ], [ 0, %15770 ]
  %15776 = getelementptr %struct.mxl5005s_state, ptr %15760, i32 0, i32 21, i32 %15766, i32 4, i32 %15775
  store i16 0, ptr %15776, align 2
  %15777 = getelementptr %struct.mxl5005s_state, ptr %15760, i32 0, i32 21, i32 %15766, i32 3, i32 %15775
  %15778 = load i16, ptr %15777, align 2
  %15779 = load ptr, ptr %3, align 4
  %15780 = getelementptr inbounds %struct.mxl5005s_state, ptr %15779, i32 0, i32 24
  %15781 = load i16, ptr %15780, align 4
  %15782 = zext i16 %15781 to i32
  %15783 = icmp eq i16 %15781, 0
  br i1 %15783, label %15805, label %15784

15784:                                            ; preds = %15774
  %15785 = getelementptr %struct.mxl5005s_state, ptr %15760, i32 0, i32 21, i32 %15766, i32 2, i32 %15775
  %15786 = load i16, ptr %15785, align 2
  %15787 = and i16 %15786, 255
  br label %15788

15788:                                            ; preds = %15802, %15784
  %15789 = phi i32 [ 0, %15784 ], [ %15803, %15802 ]
  %15790 = getelementptr %struct.mxl5005s_state, ptr %15779, i32 0, i32 25, i32 %15789
  %15791 = load i16, ptr %15790, align 2
  %15792 = icmp eq i16 %15791, %15787
  br i1 %15792, label %15793, label %15802

15793:                                            ; preds = %15788
  %15794 = and i16 %15778, 255
  %15795 = zext i16 %15794 to i32
  %15796 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15795
  %15797 = load i8, ptr %15796, align 1
  %15798 = zext i8 %15797 to i16
  %15799 = getelementptr %struct.mxl5005s_state, ptr %15779, i32 0, i32 25, i32 %15789, i32 1
  %15800 = load i16, ptr %15799, align 2
  %15801 = and i16 %15800, %15798
  store i16 %15801, ptr %15799, align 2
  br label %15805

15802:                                            ; preds = %15788
  %15803 = add nuw nsw i32 %15789, 1
  %15804 = icmp eq i32 %15803, %15782
  br i1 %15804, label %15805, label %15788

15805:                                            ; preds = %15802, %15793, %15774
  %15806 = add nuw nsw i32 %15775, 1
  %15807 = load i16, ptr %15771, align 2
  %15808 = zext i16 %15807 to i32
  %15809 = icmp ult i32 %15806, %15808
  br i1 %15809, label %15774, label %15810

15810:                                            ; preds = %15805
  %15811 = load i16, ptr %15761, align 2
  br label %15812

15812:                                            ; preds = %15810, %15770, %15764
  %15813 = phi i16 [ %15811, %15810 ], [ %15765, %15770 ], [ %15765, %15764 ]
  %15814 = add nuw nsw i32 %15766, 1
  %15815 = zext i16 %15813 to i32
  %15816 = icmp ult i32 %15814, %15815
  br i1 %15816, label %15764, label %15817

15817:                                            ; preds = %15812, %15759
  %15818 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %15819 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %15820 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %15821 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %15822 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %15823 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %15824 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %15825 = load i32, ptr %5, align 4
  br label %15826

15826:                                            ; preds = %15817, %15695
  %15827 = phi i32 [ %15825, %15817 ], [ %15696, %15695 ]
  %15828 = add i32 %15827, -390000000
  %15829 = icmp ult i32 %15828, 125000000
  br i1 %15829, label %15830, label %16073

15830:                                            ; preds = %15826
  %15831 = load ptr, ptr %3, align 4
  %15832 = getelementptr inbounds %struct.mxl5005s_state, ptr %15831, i32 0, i32 18
  %15833 = load i16, ptr %15832, align 4
  %15834 = icmp eq i16 %15833, 0
  br i1 %15834, label %15890, label %15835

15835:                                            ; preds = %15883, %15830
  %15836 = phi i16 [ %15884, %15883 ], [ %15833, %15830 ]
  %15837 = phi i32 [ %15885, %15883 ], [ 0, %15830 ]
  %15838 = getelementptr %struct.mxl5005s_state, ptr %15831, i32 0, i32 19, i32 %15837
  %15839 = load i16, ptr %15838, align 2
  %15840 = icmp eq i16 %15839, 84
  br i1 %15840, label %15841, label %15883

15841:                                            ; preds = %15835
  %15842 = getelementptr %struct.mxl5005s_state, ptr %15831, i32 0, i32 19, i32 %15837, i32 1
  %15843 = load i16, ptr %15842, align 2
  %15844 = icmp eq i16 %15843, 0
  br i1 %15844, label %15883, label %15845

15845:                                            ; preds = %15876, %15841
  %15846 = phi i32 [ %15877, %15876 ], [ 0, %15841 ]
  %15847 = getelementptr %struct.mxl5005s_state, ptr %15831, i32 0, i32 19, i32 %15837, i32 4, i32 %15846
  store i16 0, ptr %15847, align 2
  %15848 = getelementptr %struct.mxl5005s_state, ptr %15831, i32 0, i32 19, i32 %15837, i32 3, i32 %15846
  %15849 = load i16, ptr %15848, align 2
  %15850 = load ptr, ptr %3, align 4
  %15851 = getelementptr inbounds %struct.mxl5005s_state, ptr %15850, i32 0, i32 24
  %15852 = load i16, ptr %15851, align 4
  %15853 = zext i16 %15852 to i32
  %15854 = icmp eq i16 %15852, 0
  br i1 %15854, label %15876, label %15855

15855:                                            ; preds = %15845
  %15856 = getelementptr %struct.mxl5005s_state, ptr %15831, i32 0, i32 19, i32 %15837, i32 2, i32 %15846
  %15857 = load i16, ptr %15856, align 2
  %15858 = and i16 %15857, 255
  br label %15859

15859:                                            ; preds = %15873, %15855
  %15860 = phi i32 [ 0, %15855 ], [ %15874, %15873 ]
  %15861 = getelementptr %struct.mxl5005s_state, ptr %15850, i32 0, i32 25, i32 %15860
  %15862 = load i16, ptr %15861, align 2
  %15863 = icmp eq i16 %15862, %15858
  br i1 %15863, label %15864, label %15873

15864:                                            ; preds = %15859
  %15865 = and i16 %15849, 255
  %15866 = zext i16 %15865 to i32
  %15867 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15866
  %15868 = load i8, ptr %15867, align 1
  %15869 = zext i8 %15868 to i16
  %15870 = getelementptr %struct.mxl5005s_state, ptr %15850, i32 0, i32 25, i32 %15860, i32 1
  %15871 = load i16, ptr %15870, align 2
  %15872 = and i16 %15871, %15869
  store i16 %15872, ptr %15870, align 2
  br label %15876

15873:                                            ; preds = %15859
  %15874 = add nuw nsw i32 %15860, 1
  %15875 = icmp eq i32 %15874, %15853
  br i1 %15875, label %15876, label %15859

15876:                                            ; preds = %15873, %15864, %15845
  %15877 = add nuw nsw i32 %15846, 1
  %15878 = load i16, ptr %15842, align 2
  %15879 = zext i16 %15878 to i32
  %15880 = icmp ult i32 %15877, %15879
  br i1 %15880, label %15845, label %15881

15881:                                            ; preds = %15876
  %15882 = load i16, ptr %15832, align 4
  br label %15883

15883:                                            ; preds = %15881, %15841, %15835
  %15884 = phi i16 [ %15882, %15881 ], [ %15836, %15841 ], [ %15836, %15835 ]
  %15885 = add nuw nsw i32 %15837, 1
  %15886 = zext i16 %15884 to i32
  %15887 = icmp ult i32 %15885, %15886
  br i1 %15887, label %15835, label %15888

15888:                                            ; preds = %15883
  %15889 = load ptr, ptr %3, align 4
  br label %15890

15890:                                            ; preds = %15888, %15830
  %15891 = phi ptr [ %15889, %15888 ], [ %15831, %15830 ]
  %15892 = getelementptr inbounds %struct.mxl5005s_state, ptr %15891, i32 0, i32 20
  %15893 = load i16, ptr %15892, align 2
  %15894 = icmp eq i16 %15893, 0
  br i1 %15894, label %15948, label %15895

15895:                                            ; preds = %15943, %15890
  %15896 = phi i16 [ %15944, %15943 ], [ %15893, %15890 ]
  %15897 = phi i32 [ %15945, %15943 ], [ 0, %15890 ]
  %15898 = getelementptr %struct.mxl5005s_state, ptr %15891, i32 0, i32 21, i32 %15897
  %15899 = load i16, ptr %15898, align 2
  %15900 = icmp eq i16 %15899, 84
  br i1 %15900, label %15901, label %15943

15901:                                            ; preds = %15895
  %15902 = getelementptr %struct.mxl5005s_state, ptr %15891, i32 0, i32 21, i32 %15897, i32 1
  %15903 = load i16, ptr %15902, align 2
  %15904 = icmp eq i16 %15903, 0
  br i1 %15904, label %15943, label %15905

15905:                                            ; preds = %15936, %15901
  %15906 = phi i32 [ %15937, %15936 ], [ 0, %15901 ]
  %15907 = getelementptr %struct.mxl5005s_state, ptr %15891, i32 0, i32 21, i32 %15897, i32 4, i32 %15906
  store i16 0, ptr %15907, align 2
  %15908 = getelementptr %struct.mxl5005s_state, ptr %15891, i32 0, i32 21, i32 %15897, i32 3, i32 %15906
  %15909 = load i16, ptr %15908, align 2
  %15910 = load ptr, ptr %3, align 4
  %15911 = getelementptr inbounds %struct.mxl5005s_state, ptr %15910, i32 0, i32 24
  %15912 = load i16, ptr %15911, align 4
  %15913 = zext i16 %15912 to i32
  %15914 = icmp eq i16 %15912, 0
  br i1 %15914, label %15936, label %15915

15915:                                            ; preds = %15905
  %15916 = getelementptr %struct.mxl5005s_state, ptr %15891, i32 0, i32 21, i32 %15897, i32 2, i32 %15906
  %15917 = load i16, ptr %15916, align 2
  %15918 = and i16 %15917, 255
  br label %15919

15919:                                            ; preds = %15933, %15915
  %15920 = phi i32 [ 0, %15915 ], [ %15934, %15933 ]
  %15921 = getelementptr %struct.mxl5005s_state, ptr %15910, i32 0, i32 25, i32 %15920
  %15922 = load i16, ptr %15921, align 2
  %15923 = icmp eq i16 %15922, %15918
  br i1 %15923, label %15924, label %15933

15924:                                            ; preds = %15919
  %15925 = and i16 %15909, 255
  %15926 = zext i16 %15925 to i32
  %15927 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15926
  %15928 = load i8, ptr %15927, align 1
  %15929 = zext i8 %15928 to i16
  %15930 = getelementptr %struct.mxl5005s_state, ptr %15910, i32 0, i32 25, i32 %15920, i32 1
  %15931 = load i16, ptr %15930, align 2
  %15932 = and i16 %15931, %15929
  store i16 %15932, ptr %15930, align 2
  br label %15936

15933:                                            ; preds = %15919
  %15934 = add nuw nsw i32 %15920, 1
  %15935 = icmp eq i32 %15934, %15913
  br i1 %15935, label %15936, label %15919

15936:                                            ; preds = %15933, %15924, %15905
  %15937 = add nuw nsw i32 %15906, 1
  %15938 = load i16, ptr %15902, align 2
  %15939 = zext i16 %15938 to i32
  %15940 = icmp ult i32 %15937, %15939
  br i1 %15940, label %15905, label %15941

15941:                                            ; preds = %15936
  %15942 = load i16, ptr %15892, align 2
  br label %15943

15943:                                            ; preds = %15941, %15901, %15895
  %15944 = phi i16 [ %15942, %15941 ], [ %15896, %15901 ], [ %15896, %15895 ]
  %15945 = add nuw nsw i32 %15897, 1
  %15946 = zext i16 %15944 to i32
  %15947 = icmp ult i32 %15945, %15946
  br i1 %15947, label %15895, label %15948

15948:                                            ; preds = %15943, %15890
  %15949 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %15950 = load ptr, ptr %3, align 4
  %15951 = getelementptr inbounds %struct.mxl5005s_state, ptr %15950, i32 0, i32 18
  %15952 = load i16, ptr %15951, align 4
  %15953 = icmp eq i16 %15952, 0
  br i1 %15953, label %16009, label %15954

15954:                                            ; preds = %16002, %15948
  %15955 = phi i16 [ %16003, %16002 ], [ %15952, %15948 ]
  %15956 = phi i32 [ %16004, %16002 ], [ 0, %15948 ]
  %15957 = getelementptr %struct.mxl5005s_state, ptr %15950, i32 0, i32 19, i32 %15956
  %15958 = load i16, ptr %15957, align 2
  %15959 = icmp eq i16 %15958, 82
  br i1 %15959, label %15960, label %16002

15960:                                            ; preds = %15954
  %15961 = getelementptr %struct.mxl5005s_state, ptr %15950, i32 0, i32 19, i32 %15956, i32 1
  %15962 = load i16, ptr %15961, align 2
  %15963 = icmp eq i16 %15962, 0
  br i1 %15963, label %16002, label %15964

15964:                                            ; preds = %15995, %15960
  %15965 = phi i32 [ %15996, %15995 ], [ 0, %15960 ]
  %15966 = getelementptr %struct.mxl5005s_state, ptr %15950, i32 0, i32 19, i32 %15956, i32 4, i32 %15965
  store i16 0, ptr %15966, align 2
  %15967 = getelementptr %struct.mxl5005s_state, ptr %15950, i32 0, i32 19, i32 %15956, i32 3, i32 %15965
  %15968 = load i16, ptr %15967, align 2
  %15969 = load ptr, ptr %3, align 4
  %15970 = getelementptr inbounds %struct.mxl5005s_state, ptr %15969, i32 0, i32 24
  %15971 = load i16, ptr %15970, align 4
  %15972 = zext i16 %15971 to i32
  %15973 = icmp eq i16 %15971, 0
  br i1 %15973, label %15995, label %15974

15974:                                            ; preds = %15964
  %15975 = getelementptr %struct.mxl5005s_state, ptr %15950, i32 0, i32 19, i32 %15956, i32 2, i32 %15965
  %15976 = load i16, ptr %15975, align 2
  %15977 = and i16 %15976, 255
  br label %15978

15978:                                            ; preds = %15992, %15974
  %15979 = phi i32 [ 0, %15974 ], [ %15993, %15992 ]
  %15980 = getelementptr %struct.mxl5005s_state, ptr %15969, i32 0, i32 25, i32 %15979
  %15981 = load i16, ptr %15980, align 2
  %15982 = icmp eq i16 %15981, %15977
  br i1 %15982, label %15983, label %15992

15983:                                            ; preds = %15978
  %15984 = and i16 %15968, 255
  %15985 = zext i16 %15984 to i32
  %15986 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %15985
  %15987 = load i8, ptr %15986, align 1
  %15988 = zext i8 %15987 to i16
  %15989 = getelementptr %struct.mxl5005s_state, ptr %15969, i32 0, i32 25, i32 %15979, i32 1
  %15990 = load i16, ptr %15989, align 2
  %15991 = and i16 %15990, %15988
  store i16 %15991, ptr %15989, align 2
  br label %15995

15992:                                            ; preds = %15978
  %15993 = add nuw nsw i32 %15979, 1
  %15994 = icmp eq i32 %15993, %15972
  br i1 %15994, label %15995, label %15978

15995:                                            ; preds = %15992, %15983, %15964
  %15996 = add nuw nsw i32 %15965, 1
  %15997 = load i16, ptr %15961, align 2
  %15998 = zext i16 %15997 to i32
  %15999 = icmp ult i32 %15996, %15998
  br i1 %15999, label %15964, label %16000

16000:                                            ; preds = %15995
  %16001 = load i16, ptr %15951, align 4
  br label %16002

16002:                                            ; preds = %16000, %15960, %15954
  %16003 = phi i16 [ %16001, %16000 ], [ %15955, %15960 ], [ %15955, %15954 ]
  %16004 = add nuw nsw i32 %15956, 1
  %16005 = zext i16 %16003 to i32
  %16006 = icmp ult i32 %16004, %16005
  br i1 %16006, label %15954, label %16007

16007:                                            ; preds = %16002
  %16008 = load ptr, ptr %3, align 4
  br label %16009

16009:                                            ; preds = %16007, %15948
  %16010 = phi ptr [ %16008, %16007 ], [ %15950, %15948 ]
  %16011 = getelementptr inbounds %struct.mxl5005s_state, ptr %16010, i32 0, i32 20
  %16012 = load i16, ptr %16011, align 2
  %16013 = icmp eq i16 %16012, 0
  br i1 %16013, label %16067, label %16014

16014:                                            ; preds = %16062, %16009
  %16015 = phi i16 [ %16063, %16062 ], [ %16012, %16009 ]
  %16016 = phi i32 [ %16064, %16062 ], [ 0, %16009 ]
  %16017 = getelementptr %struct.mxl5005s_state, ptr %16010, i32 0, i32 21, i32 %16016
  %16018 = load i16, ptr %16017, align 2
  %16019 = icmp eq i16 %16018, 82
  br i1 %16019, label %16020, label %16062

16020:                                            ; preds = %16014
  %16021 = getelementptr %struct.mxl5005s_state, ptr %16010, i32 0, i32 21, i32 %16016, i32 1
  %16022 = load i16, ptr %16021, align 2
  %16023 = icmp eq i16 %16022, 0
  br i1 %16023, label %16062, label %16024

16024:                                            ; preds = %16055, %16020
  %16025 = phi i32 [ %16056, %16055 ], [ 0, %16020 ]
  %16026 = getelementptr %struct.mxl5005s_state, ptr %16010, i32 0, i32 21, i32 %16016, i32 4, i32 %16025
  store i16 0, ptr %16026, align 2
  %16027 = getelementptr %struct.mxl5005s_state, ptr %16010, i32 0, i32 21, i32 %16016, i32 3, i32 %16025
  %16028 = load i16, ptr %16027, align 2
  %16029 = load ptr, ptr %3, align 4
  %16030 = getelementptr inbounds %struct.mxl5005s_state, ptr %16029, i32 0, i32 24
  %16031 = load i16, ptr %16030, align 4
  %16032 = zext i16 %16031 to i32
  %16033 = icmp eq i16 %16031, 0
  br i1 %16033, label %16055, label %16034

16034:                                            ; preds = %16024
  %16035 = getelementptr %struct.mxl5005s_state, ptr %16010, i32 0, i32 21, i32 %16016, i32 2, i32 %16025
  %16036 = load i16, ptr %16035, align 2
  %16037 = and i16 %16036, 255
  br label %16038

16038:                                            ; preds = %16052, %16034
  %16039 = phi i32 [ 0, %16034 ], [ %16053, %16052 ]
  %16040 = getelementptr %struct.mxl5005s_state, ptr %16029, i32 0, i32 25, i32 %16039
  %16041 = load i16, ptr %16040, align 2
  %16042 = icmp eq i16 %16041, %16037
  br i1 %16042, label %16043, label %16052

16043:                                            ; preds = %16038
  %16044 = and i16 %16028, 255
  %16045 = zext i16 %16044 to i32
  %16046 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16045
  %16047 = load i8, ptr %16046, align 1
  %16048 = zext i8 %16047 to i16
  %16049 = getelementptr %struct.mxl5005s_state, ptr %16029, i32 0, i32 25, i32 %16039, i32 1
  %16050 = load i16, ptr %16049, align 2
  %16051 = and i16 %16050, %16048
  store i16 %16051, ptr %16049, align 2
  br label %16055

16052:                                            ; preds = %16038
  %16053 = add nuw nsw i32 %16039, 1
  %16054 = icmp eq i32 %16053, %16032
  br i1 %16054, label %16055, label %16038

16055:                                            ; preds = %16052, %16043, %16024
  %16056 = add nuw nsw i32 %16025, 1
  %16057 = load i16, ptr %16021, align 2
  %16058 = zext i16 %16057 to i32
  %16059 = icmp ult i32 %16056, %16058
  br i1 %16059, label %16024, label %16060

16060:                                            ; preds = %16055
  %16061 = load i16, ptr %16011, align 2
  br label %16062

16062:                                            ; preds = %16060, %16020, %16014
  %16063 = phi i16 [ %16061, %16060 ], [ %16015, %16020 ], [ %16015, %16014 ]
  %16064 = add nuw nsw i32 %16016, 1
  %16065 = zext i16 %16063 to i32
  %16066 = icmp ult i32 %16064, %16065
  br i1 %16066, label %16014, label %16067

16067:                                            ; preds = %16062, %16009
  %16068 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %16069 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %16070 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %16071 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %16072 = load i32, ptr %5, align 4
  br label %16073

16073:                                            ; preds = %16067, %15826
  %16074 = phi i32 [ %16072, %16067 ], [ %15827, %15826 ]
  %16075 = add i32 %16074, -515000000
  %16076 = icmp ult i32 %16075, 135000000
  br i1 %16076, label %16077, label %16204

16077:                                            ; preds = %16073
  %16078 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %16079 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %16080 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %16081 = load ptr, ptr %3, align 4
  %16082 = getelementptr inbounds %struct.mxl5005s_state, ptr %16081, i32 0, i32 18
  %16083 = load i16, ptr %16082, align 4
  %16084 = icmp eq i16 %16083, 0
  br i1 %16084, label %16140, label %16085

16085:                                            ; preds = %16133, %16077
  %16086 = phi i16 [ %16134, %16133 ], [ %16083, %16077 ]
  %16087 = phi i32 [ %16135, %16133 ], [ 0, %16077 ]
  %16088 = getelementptr %struct.mxl5005s_state, ptr %16081, i32 0, i32 19, i32 %16087
  %16089 = load i16, ptr %16088, align 2
  %16090 = icmp eq i16 %16089, 82
  br i1 %16090, label %16091, label %16133

16091:                                            ; preds = %16085
  %16092 = getelementptr %struct.mxl5005s_state, ptr %16081, i32 0, i32 19, i32 %16087, i32 1
  %16093 = load i16, ptr %16092, align 2
  %16094 = icmp eq i16 %16093, 0
  br i1 %16094, label %16133, label %16095

16095:                                            ; preds = %16126, %16091
  %16096 = phi i32 [ %16127, %16126 ], [ 0, %16091 ]
  %16097 = getelementptr %struct.mxl5005s_state, ptr %16081, i32 0, i32 19, i32 %16087, i32 4, i32 %16096
  store i16 0, ptr %16097, align 2
  %16098 = getelementptr %struct.mxl5005s_state, ptr %16081, i32 0, i32 19, i32 %16087, i32 3, i32 %16096
  %16099 = load i16, ptr %16098, align 2
  %16100 = load ptr, ptr %3, align 4
  %16101 = getelementptr inbounds %struct.mxl5005s_state, ptr %16100, i32 0, i32 24
  %16102 = load i16, ptr %16101, align 4
  %16103 = zext i16 %16102 to i32
  %16104 = icmp eq i16 %16102, 0
  br i1 %16104, label %16126, label %16105

16105:                                            ; preds = %16095
  %16106 = getelementptr %struct.mxl5005s_state, ptr %16081, i32 0, i32 19, i32 %16087, i32 2, i32 %16096
  %16107 = load i16, ptr %16106, align 2
  %16108 = and i16 %16107, 255
  br label %16109

16109:                                            ; preds = %16123, %16105
  %16110 = phi i32 [ 0, %16105 ], [ %16124, %16123 ]
  %16111 = getelementptr %struct.mxl5005s_state, ptr %16100, i32 0, i32 25, i32 %16110
  %16112 = load i16, ptr %16111, align 2
  %16113 = icmp eq i16 %16112, %16108
  br i1 %16113, label %16114, label %16123

16114:                                            ; preds = %16109
  %16115 = and i16 %16099, 255
  %16116 = zext i16 %16115 to i32
  %16117 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16116
  %16118 = load i8, ptr %16117, align 1
  %16119 = zext i8 %16118 to i16
  %16120 = getelementptr %struct.mxl5005s_state, ptr %16100, i32 0, i32 25, i32 %16110, i32 1
  %16121 = load i16, ptr %16120, align 2
  %16122 = and i16 %16121, %16119
  store i16 %16122, ptr %16120, align 2
  br label %16126

16123:                                            ; preds = %16109
  %16124 = add nuw nsw i32 %16110, 1
  %16125 = icmp eq i32 %16124, %16103
  br i1 %16125, label %16126, label %16109

16126:                                            ; preds = %16123, %16114, %16095
  %16127 = add nuw nsw i32 %16096, 1
  %16128 = load i16, ptr %16092, align 2
  %16129 = zext i16 %16128 to i32
  %16130 = icmp ult i32 %16127, %16129
  br i1 %16130, label %16095, label %16131

16131:                                            ; preds = %16126
  %16132 = load i16, ptr %16082, align 4
  br label %16133

16133:                                            ; preds = %16131, %16091, %16085
  %16134 = phi i16 [ %16132, %16131 ], [ %16086, %16091 ], [ %16086, %16085 ]
  %16135 = add nuw nsw i32 %16087, 1
  %16136 = zext i16 %16134 to i32
  %16137 = icmp ult i32 %16135, %16136
  br i1 %16137, label %16085, label %16138

16138:                                            ; preds = %16133
  %16139 = load ptr, ptr %3, align 4
  br label %16140

16140:                                            ; preds = %16138, %16077
  %16141 = phi ptr [ %16139, %16138 ], [ %16081, %16077 ]
  %16142 = getelementptr inbounds %struct.mxl5005s_state, ptr %16141, i32 0, i32 20
  %16143 = load i16, ptr %16142, align 2
  %16144 = icmp eq i16 %16143, 0
  br i1 %16144, label %16198, label %16145

16145:                                            ; preds = %16193, %16140
  %16146 = phi i16 [ %16194, %16193 ], [ %16143, %16140 ]
  %16147 = phi i32 [ %16195, %16193 ], [ 0, %16140 ]
  %16148 = getelementptr %struct.mxl5005s_state, ptr %16141, i32 0, i32 21, i32 %16147
  %16149 = load i16, ptr %16148, align 2
  %16150 = icmp eq i16 %16149, 82
  br i1 %16150, label %16151, label %16193

16151:                                            ; preds = %16145
  %16152 = getelementptr %struct.mxl5005s_state, ptr %16141, i32 0, i32 21, i32 %16147, i32 1
  %16153 = load i16, ptr %16152, align 2
  %16154 = icmp eq i16 %16153, 0
  br i1 %16154, label %16193, label %16155

16155:                                            ; preds = %16186, %16151
  %16156 = phi i32 [ %16187, %16186 ], [ 0, %16151 ]
  %16157 = getelementptr %struct.mxl5005s_state, ptr %16141, i32 0, i32 21, i32 %16147, i32 4, i32 %16156
  store i16 0, ptr %16157, align 2
  %16158 = getelementptr %struct.mxl5005s_state, ptr %16141, i32 0, i32 21, i32 %16147, i32 3, i32 %16156
  %16159 = load i16, ptr %16158, align 2
  %16160 = load ptr, ptr %3, align 4
  %16161 = getelementptr inbounds %struct.mxl5005s_state, ptr %16160, i32 0, i32 24
  %16162 = load i16, ptr %16161, align 4
  %16163 = zext i16 %16162 to i32
  %16164 = icmp eq i16 %16162, 0
  br i1 %16164, label %16186, label %16165

16165:                                            ; preds = %16155
  %16166 = getelementptr %struct.mxl5005s_state, ptr %16141, i32 0, i32 21, i32 %16147, i32 2, i32 %16156
  %16167 = load i16, ptr %16166, align 2
  %16168 = and i16 %16167, 255
  br label %16169

16169:                                            ; preds = %16183, %16165
  %16170 = phi i32 [ 0, %16165 ], [ %16184, %16183 ]
  %16171 = getelementptr %struct.mxl5005s_state, ptr %16160, i32 0, i32 25, i32 %16170
  %16172 = load i16, ptr %16171, align 2
  %16173 = icmp eq i16 %16172, %16168
  br i1 %16173, label %16174, label %16183

16174:                                            ; preds = %16169
  %16175 = and i16 %16159, 255
  %16176 = zext i16 %16175 to i32
  %16177 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16176
  %16178 = load i8, ptr %16177, align 1
  %16179 = zext i8 %16178 to i16
  %16180 = getelementptr %struct.mxl5005s_state, ptr %16160, i32 0, i32 25, i32 %16170, i32 1
  %16181 = load i16, ptr %16180, align 2
  %16182 = and i16 %16181, %16179
  store i16 %16182, ptr %16180, align 2
  br label %16186

16183:                                            ; preds = %16169
  %16184 = add nuw nsw i32 %16170, 1
  %16185 = icmp eq i32 %16184, %16163
  br i1 %16185, label %16186, label %16169

16186:                                            ; preds = %16183, %16174, %16155
  %16187 = add nuw nsw i32 %16156, 1
  %16188 = load i16, ptr %16152, align 2
  %16189 = zext i16 %16188 to i32
  %16190 = icmp ult i32 %16187, %16189
  br i1 %16190, label %16155, label %16191

16191:                                            ; preds = %16186
  %16192 = load i16, ptr %16142, align 2
  br label %16193

16193:                                            ; preds = %16191, %16151, %16145
  %16194 = phi i16 [ %16192, %16191 ], [ %16146, %16151 ], [ %16146, %16145 ]
  %16195 = add nuw nsw i32 %16147, 1
  %16196 = zext i16 %16194 to i32
  %16197 = icmp ult i32 %16195, %16196
  br i1 %16197, label %16145, label %16198

16198:                                            ; preds = %16193, %16140
  %16199 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %16200 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %16201 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %16202 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %16203 = load i32, ptr %5, align 4
  br label %16204

16204:                                            ; preds = %16198, %16073
  %16205 = phi i32 [ %16203, %16198 ], [ %16074, %16073 ]
  %16206 = add i32 %16205, -650000000
  %16207 = icmp ult i32 %16206, 250000001
  br i1 %16207, label %16208, label %16331

16208:                                            ; preds = %16204
  %16209 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %16210 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %16211 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %16212 = load ptr, ptr %3, align 4
  %16213 = getelementptr inbounds %struct.mxl5005s_state, ptr %16212, i32 0, i32 18
  %16214 = load i16, ptr %16213, align 4
  %16215 = icmp eq i16 %16214, 0
  br i1 %16215, label %16271, label %16216

16216:                                            ; preds = %16264, %16208
  %16217 = phi i16 [ %16265, %16264 ], [ %16214, %16208 ]
  %16218 = phi i32 [ %16266, %16264 ], [ 0, %16208 ]
  %16219 = getelementptr %struct.mxl5005s_state, ptr %16212, i32 0, i32 19, i32 %16218
  %16220 = load i16, ptr %16219, align 2
  %16221 = icmp eq i16 %16220, 82
  br i1 %16221, label %16222, label %16264

16222:                                            ; preds = %16216
  %16223 = getelementptr %struct.mxl5005s_state, ptr %16212, i32 0, i32 19, i32 %16218, i32 1
  %16224 = load i16, ptr %16223, align 2
  %16225 = icmp eq i16 %16224, 0
  br i1 %16225, label %16264, label %16226

16226:                                            ; preds = %16257, %16222
  %16227 = phi i32 [ %16258, %16257 ], [ 0, %16222 ]
  %16228 = getelementptr %struct.mxl5005s_state, ptr %16212, i32 0, i32 19, i32 %16218, i32 4, i32 %16227
  store i16 0, ptr %16228, align 2
  %16229 = getelementptr %struct.mxl5005s_state, ptr %16212, i32 0, i32 19, i32 %16218, i32 3, i32 %16227
  %16230 = load i16, ptr %16229, align 2
  %16231 = load ptr, ptr %3, align 4
  %16232 = getelementptr inbounds %struct.mxl5005s_state, ptr %16231, i32 0, i32 24
  %16233 = load i16, ptr %16232, align 4
  %16234 = zext i16 %16233 to i32
  %16235 = icmp eq i16 %16233, 0
  br i1 %16235, label %16257, label %16236

16236:                                            ; preds = %16226
  %16237 = getelementptr %struct.mxl5005s_state, ptr %16212, i32 0, i32 19, i32 %16218, i32 2, i32 %16227
  %16238 = load i16, ptr %16237, align 2
  %16239 = and i16 %16238, 255
  br label %16240

16240:                                            ; preds = %16254, %16236
  %16241 = phi i32 [ 0, %16236 ], [ %16255, %16254 ]
  %16242 = getelementptr %struct.mxl5005s_state, ptr %16231, i32 0, i32 25, i32 %16241
  %16243 = load i16, ptr %16242, align 2
  %16244 = icmp eq i16 %16243, %16239
  br i1 %16244, label %16245, label %16254

16245:                                            ; preds = %16240
  %16246 = and i16 %16230, 255
  %16247 = zext i16 %16246 to i32
  %16248 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16247
  %16249 = load i8, ptr %16248, align 1
  %16250 = zext i8 %16249 to i16
  %16251 = getelementptr %struct.mxl5005s_state, ptr %16231, i32 0, i32 25, i32 %16241, i32 1
  %16252 = load i16, ptr %16251, align 2
  %16253 = and i16 %16252, %16250
  store i16 %16253, ptr %16251, align 2
  br label %16257

16254:                                            ; preds = %16240
  %16255 = add nuw nsw i32 %16241, 1
  %16256 = icmp eq i32 %16255, %16234
  br i1 %16256, label %16257, label %16240

16257:                                            ; preds = %16254, %16245, %16226
  %16258 = add nuw nsw i32 %16227, 1
  %16259 = load i16, ptr %16223, align 2
  %16260 = zext i16 %16259 to i32
  %16261 = icmp ult i32 %16258, %16260
  br i1 %16261, label %16226, label %16262

16262:                                            ; preds = %16257
  %16263 = load i16, ptr %16213, align 4
  br label %16264

16264:                                            ; preds = %16262, %16222, %16216
  %16265 = phi i16 [ %16263, %16262 ], [ %16217, %16222 ], [ %16217, %16216 ]
  %16266 = add nuw nsw i32 %16218, 1
  %16267 = zext i16 %16265 to i32
  %16268 = icmp ult i32 %16266, %16267
  br i1 %16268, label %16216, label %16269

16269:                                            ; preds = %16264
  %16270 = load ptr, ptr %3, align 4
  br label %16271

16271:                                            ; preds = %16269, %16208
  %16272 = phi ptr [ %16270, %16269 ], [ %16212, %16208 ]
  %16273 = getelementptr inbounds %struct.mxl5005s_state, ptr %16272, i32 0, i32 20
  %16274 = load i16, ptr %16273, align 2
  %16275 = icmp eq i16 %16274, 0
  br i1 %16275, label %16329, label %16276

16276:                                            ; preds = %16324, %16271
  %16277 = phi i16 [ %16325, %16324 ], [ %16274, %16271 ]
  %16278 = phi i32 [ %16326, %16324 ], [ 0, %16271 ]
  %16279 = getelementptr %struct.mxl5005s_state, ptr %16272, i32 0, i32 21, i32 %16278
  %16280 = load i16, ptr %16279, align 2
  %16281 = icmp eq i16 %16280, 82
  br i1 %16281, label %16282, label %16324

16282:                                            ; preds = %16276
  %16283 = getelementptr %struct.mxl5005s_state, ptr %16272, i32 0, i32 21, i32 %16278, i32 1
  %16284 = load i16, ptr %16283, align 2
  %16285 = icmp eq i16 %16284, 0
  br i1 %16285, label %16324, label %16286

16286:                                            ; preds = %16317, %16282
  %16287 = phi i32 [ %16318, %16317 ], [ 0, %16282 ]
  %16288 = getelementptr %struct.mxl5005s_state, ptr %16272, i32 0, i32 21, i32 %16278, i32 4, i32 %16287
  store i16 0, ptr %16288, align 2
  %16289 = getelementptr %struct.mxl5005s_state, ptr %16272, i32 0, i32 21, i32 %16278, i32 3, i32 %16287
  %16290 = load i16, ptr %16289, align 2
  %16291 = load ptr, ptr %3, align 4
  %16292 = getelementptr inbounds %struct.mxl5005s_state, ptr %16291, i32 0, i32 24
  %16293 = load i16, ptr %16292, align 4
  %16294 = zext i16 %16293 to i32
  %16295 = icmp eq i16 %16293, 0
  br i1 %16295, label %16317, label %16296

16296:                                            ; preds = %16286
  %16297 = getelementptr %struct.mxl5005s_state, ptr %16272, i32 0, i32 21, i32 %16278, i32 2, i32 %16287
  %16298 = load i16, ptr %16297, align 2
  %16299 = and i16 %16298, 255
  br label %16300

16300:                                            ; preds = %16314, %16296
  %16301 = phi i32 [ 0, %16296 ], [ %16315, %16314 ]
  %16302 = getelementptr %struct.mxl5005s_state, ptr %16291, i32 0, i32 25, i32 %16301
  %16303 = load i16, ptr %16302, align 2
  %16304 = icmp eq i16 %16303, %16299
  br i1 %16304, label %16305, label %16314

16305:                                            ; preds = %16300
  %16306 = and i16 %16290, 255
  %16307 = zext i16 %16306 to i32
  %16308 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16307
  %16309 = load i8, ptr %16308, align 1
  %16310 = zext i8 %16309 to i16
  %16311 = getelementptr %struct.mxl5005s_state, ptr %16291, i32 0, i32 25, i32 %16301, i32 1
  %16312 = load i16, ptr %16311, align 2
  %16313 = and i16 %16312, %16310
  store i16 %16313, ptr %16311, align 2
  br label %16317

16314:                                            ; preds = %16300
  %16315 = add nuw nsw i32 %16301, 1
  %16316 = icmp eq i32 %16315, %16294
  br i1 %16316, label %16317, label %16300

16317:                                            ; preds = %16314, %16305, %16286
  %16318 = add nuw nsw i32 %16287, 1
  %16319 = load i16, ptr %16283, align 2
  %16320 = zext i16 %16319 to i32
  %16321 = icmp ult i32 %16318, %16320
  br i1 %16321, label %16286, label %16322

16322:                                            ; preds = %16317
  %16323 = load i16, ptr %16273, align 2
  br label %16324

16324:                                            ; preds = %16322, %16282, %16276
  %16325 = phi i16 [ %16323, %16322 ], [ %16277, %16282 ], [ %16277, %16276 ]
  %16326 = add nuw nsw i32 %16278, 1
  %16327 = zext i16 %16325 to i32
  %16328 = icmp ult i32 %16326, %16327
  br i1 %16328, label %16276, label %16329

16329:                                            ; preds = %16324, %16271
  %16330 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %16331

16331:                                            ; preds = %16329, %16204
  %16332 = load i8, ptr %7001, align 1
  br label %16333

16333:                                            ; preds = %16331, %15068
  %16334 = phi i8 [ %16332, %16331 ], [ %15069, %15068 ]
  %16335 = icmp eq i8 %16334, 8
  br i1 %16335, label %16336, label %17596

16336:                                            ; preds = %16333
  %16337 = load ptr, ptr %3, align 4
  %16338 = getelementptr inbounds %struct.mxl5005s_state, ptr %16337, i32 0, i32 18
  %16339 = load i16, ptr %16338, align 4
  %16340 = icmp eq i16 %16339, 0
  br i1 %16340, label %16396, label %16341

16341:                                            ; preds = %16389, %16336
  %16342 = phi i16 [ %16390, %16389 ], [ %16339, %16336 ]
  %16343 = phi i32 [ %16391, %16389 ], [ 0, %16336 ]
  %16344 = getelementptr %struct.mxl5005s_state, ptr %16337, i32 0, i32 19, i32 %16343
  %16345 = load i16, ptr %16344, align 2
  %16346 = icmp eq i16 %16345, 86
  br i1 %16346, label %16347, label %16389

16347:                                            ; preds = %16341
  %16348 = getelementptr %struct.mxl5005s_state, ptr %16337, i32 0, i32 19, i32 %16343, i32 1
  %16349 = load i16, ptr %16348, align 2
  %16350 = icmp eq i16 %16349, 0
  br i1 %16350, label %16389, label %16351

16351:                                            ; preds = %16382, %16347
  %16352 = phi i32 [ %16383, %16382 ], [ 0, %16347 ]
  %16353 = getelementptr %struct.mxl5005s_state, ptr %16337, i32 0, i32 19, i32 %16343, i32 4, i32 %16352
  store i16 0, ptr %16353, align 2
  %16354 = getelementptr %struct.mxl5005s_state, ptr %16337, i32 0, i32 19, i32 %16343, i32 3, i32 %16352
  %16355 = load i16, ptr %16354, align 2
  %16356 = load ptr, ptr %3, align 4
  %16357 = getelementptr inbounds %struct.mxl5005s_state, ptr %16356, i32 0, i32 24
  %16358 = load i16, ptr %16357, align 4
  %16359 = zext i16 %16358 to i32
  %16360 = icmp eq i16 %16358, 0
  br i1 %16360, label %16382, label %16361

16361:                                            ; preds = %16351
  %16362 = getelementptr %struct.mxl5005s_state, ptr %16337, i32 0, i32 19, i32 %16343, i32 2, i32 %16352
  %16363 = load i16, ptr %16362, align 2
  %16364 = and i16 %16363, 255
  br label %16365

16365:                                            ; preds = %16379, %16361
  %16366 = phi i32 [ 0, %16361 ], [ %16380, %16379 ]
  %16367 = getelementptr %struct.mxl5005s_state, ptr %16356, i32 0, i32 25, i32 %16366
  %16368 = load i16, ptr %16367, align 2
  %16369 = icmp eq i16 %16368, %16364
  br i1 %16369, label %16370, label %16379

16370:                                            ; preds = %16365
  %16371 = and i16 %16355, 255
  %16372 = zext i16 %16371 to i32
  %16373 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16372
  %16374 = load i8, ptr %16373, align 1
  %16375 = zext i8 %16374 to i16
  %16376 = getelementptr %struct.mxl5005s_state, ptr %16356, i32 0, i32 25, i32 %16366, i32 1
  %16377 = load i16, ptr %16376, align 2
  %16378 = and i16 %16377, %16375
  store i16 %16378, ptr %16376, align 2
  br label %16382

16379:                                            ; preds = %16365
  %16380 = add nuw nsw i32 %16366, 1
  %16381 = icmp eq i32 %16380, %16359
  br i1 %16381, label %16382, label %16365

16382:                                            ; preds = %16379, %16370, %16351
  %16383 = add nuw nsw i32 %16352, 1
  %16384 = load i16, ptr %16348, align 2
  %16385 = zext i16 %16384 to i32
  %16386 = icmp ult i32 %16383, %16385
  br i1 %16386, label %16351, label %16387

16387:                                            ; preds = %16382
  %16388 = load i16, ptr %16338, align 4
  br label %16389

16389:                                            ; preds = %16387, %16347, %16341
  %16390 = phi i16 [ %16388, %16387 ], [ %16342, %16347 ], [ %16342, %16341 ]
  %16391 = add nuw nsw i32 %16343, 1
  %16392 = zext i16 %16390 to i32
  %16393 = icmp ult i32 %16391, %16392
  br i1 %16393, label %16341, label %16394

16394:                                            ; preds = %16389
  %16395 = load ptr, ptr %3, align 4
  br label %16396

16396:                                            ; preds = %16394, %16336
  %16397 = phi ptr [ %16395, %16394 ], [ %16337, %16336 ]
  %16398 = getelementptr inbounds %struct.mxl5005s_state, ptr %16397, i32 0, i32 20
  %16399 = load i16, ptr %16398, align 2
  %16400 = icmp eq i16 %16399, 0
  br i1 %16400, label %16454, label %16401

16401:                                            ; preds = %16449, %16396
  %16402 = phi i16 [ %16450, %16449 ], [ %16399, %16396 ]
  %16403 = phi i32 [ %16451, %16449 ], [ 0, %16396 ]
  %16404 = getelementptr %struct.mxl5005s_state, ptr %16397, i32 0, i32 21, i32 %16403
  %16405 = load i16, ptr %16404, align 2
  %16406 = icmp eq i16 %16405, 86
  br i1 %16406, label %16407, label %16449

16407:                                            ; preds = %16401
  %16408 = getelementptr %struct.mxl5005s_state, ptr %16397, i32 0, i32 21, i32 %16403, i32 1
  %16409 = load i16, ptr %16408, align 2
  %16410 = icmp eq i16 %16409, 0
  br i1 %16410, label %16449, label %16411

16411:                                            ; preds = %16442, %16407
  %16412 = phi i32 [ %16443, %16442 ], [ 0, %16407 ]
  %16413 = getelementptr %struct.mxl5005s_state, ptr %16397, i32 0, i32 21, i32 %16403, i32 4, i32 %16412
  store i16 0, ptr %16413, align 2
  %16414 = getelementptr %struct.mxl5005s_state, ptr %16397, i32 0, i32 21, i32 %16403, i32 3, i32 %16412
  %16415 = load i16, ptr %16414, align 2
  %16416 = load ptr, ptr %3, align 4
  %16417 = getelementptr inbounds %struct.mxl5005s_state, ptr %16416, i32 0, i32 24
  %16418 = load i16, ptr %16417, align 4
  %16419 = zext i16 %16418 to i32
  %16420 = icmp eq i16 %16418, 0
  br i1 %16420, label %16442, label %16421

16421:                                            ; preds = %16411
  %16422 = getelementptr %struct.mxl5005s_state, ptr %16397, i32 0, i32 21, i32 %16403, i32 2, i32 %16412
  %16423 = load i16, ptr %16422, align 2
  %16424 = and i16 %16423, 255
  br label %16425

16425:                                            ; preds = %16439, %16421
  %16426 = phi i32 [ 0, %16421 ], [ %16440, %16439 ]
  %16427 = getelementptr %struct.mxl5005s_state, ptr %16416, i32 0, i32 25, i32 %16426
  %16428 = load i16, ptr %16427, align 2
  %16429 = icmp eq i16 %16428, %16424
  br i1 %16429, label %16430, label %16439

16430:                                            ; preds = %16425
  %16431 = and i16 %16415, 255
  %16432 = zext i16 %16431 to i32
  %16433 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16432
  %16434 = load i8, ptr %16433, align 1
  %16435 = zext i8 %16434 to i16
  %16436 = getelementptr %struct.mxl5005s_state, ptr %16416, i32 0, i32 25, i32 %16426, i32 1
  %16437 = load i16, ptr %16436, align 2
  %16438 = and i16 %16437, %16435
  store i16 %16438, ptr %16436, align 2
  br label %16442

16439:                                            ; preds = %16425
  %16440 = add nuw nsw i32 %16426, 1
  %16441 = icmp eq i32 %16440, %16419
  br i1 %16441, label %16442, label %16425

16442:                                            ; preds = %16439, %16430, %16411
  %16443 = add nuw nsw i32 %16412, 1
  %16444 = load i16, ptr %16408, align 2
  %16445 = zext i16 %16444 to i32
  %16446 = icmp ult i32 %16443, %16445
  br i1 %16446, label %16411, label %16447

16447:                                            ; preds = %16442
  %16448 = load i16, ptr %16398, align 2
  br label %16449

16449:                                            ; preds = %16447, %16407, %16401
  %16450 = phi i16 [ %16448, %16447 ], [ %16402, %16407 ], [ %16402, %16401 ]
  %16451 = add nuw nsw i32 %16403, 1
  %16452 = zext i16 %16450 to i32
  %16453 = icmp ult i32 %16451, %16452
  br i1 %16453, label %16401, label %16454

16454:                                            ; preds = %16449, %16396
  %16455 = load i32, ptr %5, align 4
  %16456 = add i32 %16455, -43000000
  %16457 = icmp ult i32 %16456, 131000000
  br i1 %16457, label %16458, label %16701

16458:                                            ; preds = %16454
  %16459 = load ptr, ptr %3, align 4
  %16460 = getelementptr inbounds %struct.mxl5005s_state, ptr %16459, i32 0, i32 18
  %16461 = load i16, ptr %16460, align 4
  %16462 = icmp eq i16 %16461, 0
  br i1 %16462, label %16518, label %16463

16463:                                            ; preds = %16511, %16458
  %16464 = phi i16 [ %16512, %16511 ], [ %16461, %16458 ]
  %16465 = phi i32 [ %16513, %16511 ], [ 0, %16458 ]
  %16466 = getelementptr %struct.mxl5005s_state, ptr %16459, i32 0, i32 19, i32 %16465
  %16467 = load i16, ptr %16466, align 2
  %16468 = icmp eq i16 %16467, 84
  br i1 %16468, label %16469, label %16511

16469:                                            ; preds = %16463
  %16470 = getelementptr %struct.mxl5005s_state, ptr %16459, i32 0, i32 19, i32 %16465, i32 1
  %16471 = load i16, ptr %16470, align 2
  %16472 = icmp eq i16 %16471, 0
  br i1 %16472, label %16511, label %16473

16473:                                            ; preds = %16504, %16469
  %16474 = phi i32 [ %16505, %16504 ], [ 0, %16469 ]
  %16475 = getelementptr %struct.mxl5005s_state, ptr %16459, i32 0, i32 19, i32 %16465, i32 4, i32 %16474
  store i16 0, ptr %16475, align 2
  %16476 = getelementptr %struct.mxl5005s_state, ptr %16459, i32 0, i32 19, i32 %16465, i32 3, i32 %16474
  %16477 = load i16, ptr %16476, align 2
  %16478 = load ptr, ptr %3, align 4
  %16479 = getelementptr inbounds %struct.mxl5005s_state, ptr %16478, i32 0, i32 24
  %16480 = load i16, ptr %16479, align 4
  %16481 = zext i16 %16480 to i32
  %16482 = icmp eq i16 %16480, 0
  br i1 %16482, label %16504, label %16483

16483:                                            ; preds = %16473
  %16484 = getelementptr %struct.mxl5005s_state, ptr %16459, i32 0, i32 19, i32 %16465, i32 2, i32 %16474
  %16485 = load i16, ptr %16484, align 2
  %16486 = and i16 %16485, 255
  br label %16487

16487:                                            ; preds = %16501, %16483
  %16488 = phi i32 [ 0, %16483 ], [ %16502, %16501 ]
  %16489 = getelementptr %struct.mxl5005s_state, ptr %16478, i32 0, i32 25, i32 %16488
  %16490 = load i16, ptr %16489, align 2
  %16491 = icmp eq i16 %16490, %16486
  br i1 %16491, label %16492, label %16501

16492:                                            ; preds = %16487
  %16493 = and i16 %16477, 255
  %16494 = zext i16 %16493 to i32
  %16495 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16494
  %16496 = load i8, ptr %16495, align 1
  %16497 = zext i8 %16496 to i16
  %16498 = getelementptr %struct.mxl5005s_state, ptr %16478, i32 0, i32 25, i32 %16488, i32 1
  %16499 = load i16, ptr %16498, align 2
  %16500 = and i16 %16499, %16497
  store i16 %16500, ptr %16498, align 2
  br label %16504

16501:                                            ; preds = %16487
  %16502 = add nuw nsw i32 %16488, 1
  %16503 = icmp eq i32 %16502, %16481
  br i1 %16503, label %16504, label %16487

16504:                                            ; preds = %16501, %16492, %16473
  %16505 = add nuw nsw i32 %16474, 1
  %16506 = load i16, ptr %16470, align 2
  %16507 = zext i16 %16506 to i32
  %16508 = icmp ult i32 %16505, %16507
  br i1 %16508, label %16473, label %16509

16509:                                            ; preds = %16504
  %16510 = load i16, ptr %16460, align 4
  br label %16511

16511:                                            ; preds = %16509, %16469, %16463
  %16512 = phi i16 [ %16510, %16509 ], [ %16464, %16469 ], [ %16464, %16463 ]
  %16513 = add nuw nsw i32 %16465, 1
  %16514 = zext i16 %16512 to i32
  %16515 = icmp ult i32 %16513, %16514
  br i1 %16515, label %16463, label %16516

16516:                                            ; preds = %16511
  %16517 = load ptr, ptr %3, align 4
  br label %16518

16518:                                            ; preds = %16516, %16458
  %16519 = phi ptr [ %16517, %16516 ], [ %16459, %16458 ]
  %16520 = getelementptr inbounds %struct.mxl5005s_state, ptr %16519, i32 0, i32 20
  %16521 = load i16, ptr %16520, align 2
  %16522 = icmp eq i16 %16521, 0
  br i1 %16522, label %16576, label %16523

16523:                                            ; preds = %16571, %16518
  %16524 = phi i16 [ %16572, %16571 ], [ %16521, %16518 ]
  %16525 = phi i32 [ %16573, %16571 ], [ 0, %16518 ]
  %16526 = getelementptr %struct.mxl5005s_state, ptr %16519, i32 0, i32 21, i32 %16525
  %16527 = load i16, ptr %16526, align 2
  %16528 = icmp eq i16 %16527, 84
  br i1 %16528, label %16529, label %16571

16529:                                            ; preds = %16523
  %16530 = getelementptr %struct.mxl5005s_state, ptr %16519, i32 0, i32 21, i32 %16525, i32 1
  %16531 = load i16, ptr %16530, align 2
  %16532 = icmp eq i16 %16531, 0
  br i1 %16532, label %16571, label %16533

16533:                                            ; preds = %16564, %16529
  %16534 = phi i32 [ %16565, %16564 ], [ 0, %16529 ]
  %16535 = getelementptr %struct.mxl5005s_state, ptr %16519, i32 0, i32 21, i32 %16525, i32 4, i32 %16534
  store i16 0, ptr %16535, align 2
  %16536 = getelementptr %struct.mxl5005s_state, ptr %16519, i32 0, i32 21, i32 %16525, i32 3, i32 %16534
  %16537 = load i16, ptr %16536, align 2
  %16538 = load ptr, ptr %3, align 4
  %16539 = getelementptr inbounds %struct.mxl5005s_state, ptr %16538, i32 0, i32 24
  %16540 = load i16, ptr %16539, align 4
  %16541 = zext i16 %16540 to i32
  %16542 = icmp eq i16 %16540, 0
  br i1 %16542, label %16564, label %16543

16543:                                            ; preds = %16533
  %16544 = getelementptr %struct.mxl5005s_state, ptr %16519, i32 0, i32 21, i32 %16525, i32 2, i32 %16534
  %16545 = load i16, ptr %16544, align 2
  %16546 = and i16 %16545, 255
  br label %16547

16547:                                            ; preds = %16561, %16543
  %16548 = phi i32 [ 0, %16543 ], [ %16562, %16561 ]
  %16549 = getelementptr %struct.mxl5005s_state, ptr %16538, i32 0, i32 25, i32 %16548
  %16550 = load i16, ptr %16549, align 2
  %16551 = icmp eq i16 %16550, %16546
  br i1 %16551, label %16552, label %16561

16552:                                            ; preds = %16547
  %16553 = and i16 %16537, 255
  %16554 = zext i16 %16553 to i32
  %16555 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16554
  %16556 = load i8, ptr %16555, align 1
  %16557 = zext i8 %16556 to i16
  %16558 = getelementptr %struct.mxl5005s_state, ptr %16538, i32 0, i32 25, i32 %16548, i32 1
  %16559 = load i16, ptr %16558, align 2
  %16560 = and i16 %16559, %16557
  store i16 %16560, ptr %16558, align 2
  br label %16564

16561:                                            ; preds = %16547
  %16562 = add nuw nsw i32 %16548, 1
  %16563 = icmp eq i32 %16562, %16541
  br i1 %16563, label %16564, label %16547

16564:                                            ; preds = %16561, %16552, %16533
  %16565 = add nuw nsw i32 %16534, 1
  %16566 = load i16, ptr %16530, align 2
  %16567 = zext i16 %16566 to i32
  %16568 = icmp ult i32 %16565, %16567
  br i1 %16568, label %16533, label %16569

16569:                                            ; preds = %16564
  %16570 = load i16, ptr %16520, align 2
  br label %16571

16571:                                            ; preds = %16569, %16529, %16523
  %16572 = phi i16 [ %16570, %16569 ], [ %16524, %16529 ], [ %16524, %16523 ]
  %16573 = add nuw nsw i32 %16525, 1
  %16574 = zext i16 %16572 to i32
  %16575 = icmp ult i32 %16573, %16574
  br i1 %16575, label %16523, label %16576

16576:                                            ; preds = %16571, %16518
  %16577 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %16578 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %16579 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %16580 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %16581 = load ptr, ptr %3, align 4
  %16582 = getelementptr inbounds %struct.mxl5005s_state, ptr %16581, i32 0, i32 18
  %16583 = load i16, ptr %16582, align 4
  %16584 = icmp eq i16 %16583, 0
  br i1 %16584, label %16640, label %16585

16585:                                            ; preds = %16633, %16576
  %16586 = phi i16 [ %16634, %16633 ], [ %16583, %16576 ]
  %16587 = phi i32 [ %16635, %16633 ], [ 0, %16576 ]
  %16588 = getelementptr %struct.mxl5005s_state, ptr %16581, i32 0, i32 19, i32 %16587
  %16589 = load i16, ptr %16588, align 2
  %16590 = icmp eq i16 %16589, 82
  br i1 %16590, label %16591, label %16633

16591:                                            ; preds = %16585
  %16592 = getelementptr %struct.mxl5005s_state, ptr %16581, i32 0, i32 19, i32 %16587, i32 1
  %16593 = load i16, ptr %16592, align 2
  %16594 = icmp eq i16 %16593, 0
  br i1 %16594, label %16633, label %16595

16595:                                            ; preds = %16626, %16591
  %16596 = phi i32 [ %16627, %16626 ], [ 0, %16591 ]
  %16597 = getelementptr %struct.mxl5005s_state, ptr %16581, i32 0, i32 19, i32 %16587, i32 4, i32 %16596
  store i16 0, ptr %16597, align 2
  %16598 = getelementptr %struct.mxl5005s_state, ptr %16581, i32 0, i32 19, i32 %16587, i32 3, i32 %16596
  %16599 = load i16, ptr %16598, align 2
  %16600 = load ptr, ptr %3, align 4
  %16601 = getelementptr inbounds %struct.mxl5005s_state, ptr %16600, i32 0, i32 24
  %16602 = load i16, ptr %16601, align 4
  %16603 = zext i16 %16602 to i32
  %16604 = icmp eq i16 %16602, 0
  br i1 %16604, label %16626, label %16605

16605:                                            ; preds = %16595
  %16606 = getelementptr %struct.mxl5005s_state, ptr %16581, i32 0, i32 19, i32 %16587, i32 2, i32 %16596
  %16607 = load i16, ptr %16606, align 2
  %16608 = and i16 %16607, 255
  br label %16609

16609:                                            ; preds = %16623, %16605
  %16610 = phi i32 [ 0, %16605 ], [ %16624, %16623 ]
  %16611 = getelementptr %struct.mxl5005s_state, ptr %16600, i32 0, i32 25, i32 %16610
  %16612 = load i16, ptr %16611, align 2
  %16613 = icmp eq i16 %16612, %16608
  br i1 %16613, label %16614, label %16623

16614:                                            ; preds = %16609
  %16615 = and i16 %16599, 255
  %16616 = zext i16 %16615 to i32
  %16617 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16616
  %16618 = load i8, ptr %16617, align 1
  %16619 = zext i8 %16618 to i16
  %16620 = getelementptr %struct.mxl5005s_state, ptr %16600, i32 0, i32 25, i32 %16610, i32 1
  %16621 = load i16, ptr %16620, align 2
  %16622 = and i16 %16621, %16619
  store i16 %16622, ptr %16620, align 2
  br label %16626

16623:                                            ; preds = %16609
  %16624 = add nuw nsw i32 %16610, 1
  %16625 = icmp eq i32 %16624, %16603
  br i1 %16625, label %16626, label %16609

16626:                                            ; preds = %16623, %16614, %16595
  %16627 = add nuw nsw i32 %16596, 1
  %16628 = load i16, ptr %16592, align 2
  %16629 = zext i16 %16628 to i32
  %16630 = icmp ult i32 %16627, %16629
  br i1 %16630, label %16595, label %16631

16631:                                            ; preds = %16626
  %16632 = load i16, ptr %16582, align 4
  br label %16633

16633:                                            ; preds = %16631, %16591, %16585
  %16634 = phi i16 [ %16632, %16631 ], [ %16586, %16591 ], [ %16586, %16585 ]
  %16635 = add nuw nsw i32 %16587, 1
  %16636 = zext i16 %16634 to i32
  %16637 = icmp ult i32 %16635, %16636
  br i1 %16637, label %16585, label %16638

16638:                                            ; preds = %16633
  %16639 = load ptr, ptr %3, align 4
  br label %16640

16640:                                            ; preds = %16638, %16576
  %16641 = phi ptr [ %16639, %16638 ], [ %16581, %16576 ]
  %16642 = getelementptr inbounds %struct.mxl5005s_state, ptr %16641, i32 0, i32 20
  %16643 = load i16, ptr %16642, align 2
  %16644 = icmp eq i16 %16643, 0
  br i1 %16644, label %16698, label %16645

16645:                                            ; preds = %16693, %16640
  %16646 = phi i16 [ %16694, %16693 ], [ %16643, %16640 ]
  %16647 = phi i32 [ %16695, %16693 ], [ 0, %16640 ]
  %16648 = getelementptr %struct.mxl5005s_state, ptr %16641, i32 0, i32 21, i32 %16647
  %16649 = load i16, ptr %16648, align 2
  %16650 = icmp eq i16 %16649, 82
  br i1 %16650, label %16651, label %16693

16651:                                            ; preds = %16645
  %16652 = getelementptr %struct.mxl5005s_state, ptr %16641, i32 0, i32 21, i32 %16647, i32 1
  %16653 = load i16, ptr %16652, align 2
  %16654 = icmp eq i16 %16653, 0
  br i1 %16654, label %16693, label %16655

16655:                                            ; preds = %16686, %16651
  %16656 = phi i32 [ %16687, %16686 ], [ 0, %16651 ]
  %16657 = getelementptr %struct.mxl5005s_state, ptr %16641, i32 0, i32 21, i32 %16647, i32 4, i32 %16656
  store i16 0, ptr %16657, align 2
  %16658 = getelementptr %struct.mxl5005s_state, ptr %16641, i32 0, i32 21, i32 %16647, i32 3, i32 %16656
  %16659 = load i16, ptr %16658, align 2
  %16660 = load ptr, ptr %3, align 4
  %16661 = getelementptr inbounds %struct.mxl5005s_state, ptr %16660, i32 0, i32 24
  %16662 = load i16, ptr %16661, align 4
  %16663 = zext i16 %16662 to i32
  %16664 = icmp eq i16 %16662, 0
  br i1 %16664, label %16686, label %16665

16665:                                            ; preds = %16655
  %16666 = getelementptr %struct.mxl5005s_state, ptr %16641, i32 0, i32 21, i32 %16647, i32 2, i32 %16656
  %16667 = load i16, ptr %16666, align 2
  %16668 = and i16 %16667, 255
  br label %16669

16669:                                            ; preds = %16683, %16665
  %16670 = phi i32 [ 0, %16665 ], [ %16684, %16683 ]
  %16671 = getelementptr %struct.mxl5005s_state, ptr %16660, i32 0, i32 25, i32 %16670
  %16672 = load i16, ptr %16671, align 2
  %16673 = icmp eq i16 %16672, %16668
  br i1 %16673, label %16674, label %16683

16674:                                            ; preds = %16669
  %16675 = and i16 %16659, 255
  %16676 = zext i16 %16675 to i32
  %16677 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16676
  %16678 = load i8, ptr %16677, align 1
  %16679 = zext i8 %16678 to i16
  %16680 = getelementptr %struct.mxl5005s_state, ptr %16660, i32 0, i32 25, i32 %16670, i32 1
  %16681 = load i16, ptr %16680, align 2
  %16682 = and i16 %16681, %16679
  store i16 %16682, ptr %16680, align 2
  br label %16686

16683:                                            ; preds = %16669
  %16684 = add nuw nsw i32 %16670, 1
  %16685 = icmp eq i32 %16684, %16663
  br i1 %16685, label %16686, label %16669

16686:                                            ; preds = %16683, %16674, %16655
  %16687 = add nuw nsw i32 %16656, 1
  %16688 = load i16, ptr %16652, align 2
  %16689 = zext i16 %16688 to i32
  %16690 = icmp ult i32 %16687, %16689
  br i1 %16690, label %16655, label %16691

16691:                                            ; preds = %16686
  %16692 = load i16, ptr %16642, align 2
  br label %16693

16693:                                            ; preds = %16691, %16651, %16645
  %16694 = phi i16 [ %16692, %16691 ], [ %16646, %16651 ], [ %16646, %16645 ]
  %16695 = add nuw nsw i32 %16647, 1
  %16696 = zext i16 %16694 to i32
  %16697 = icmp ult i32 %16695, %16696
  br i1 %16697, label %16645, label %16698

16698:                                            ; preds = %16693, %16640
  %16699 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %16700 = load i32, ptr %5, align 4
  br label %16701

16701:                                            ; preds = %16698, %16454
  %16702 = phi i32 [ %16700, %16698 ], [ %16455, %16454 ]
  %16703 = add i32 %16702, -174000000
  %16704 = icmp ult i32 %16703, 76000000
  br i1 %16704, label %16705, label %16832

16705:                                            ; preds = %16701
  %16706 = load ptr, ptr %3, align 4
  %16707 = getelementptr inbounds %struct.mxl5005s_state, ptr %16706, i32 0, i32 18
  %16708 = load i16, ptr %16707, align 4
  %16709 = icmp eq i16 %16708, 0
  br i1 %16709, label %16765, label %16710

16710:                                            ; preds = %16758, %16705
  %16711 = phi i16 [ %16759, %16758 ], [ %16708, %16705 ]
  %16712 = phi i32 [ %16760, %16758 ], [ 0, %16705 ]
  %16713 = getelementptr %struct.mxl5005s_state, ptr %16706, i32 0, i32 19, i32 %16712
  %16714 = load i16, ptr %16713, align 2
  %16715 = icmp eq i16 %16714, 84
  br i1 %16715, label %16716, label %16758

16716:                                            ; preds = %16710
  %16717 = getelementptr %struct.mxl5005s_state, ptr %16706, i32 0, i32 19, i32 %16712, i32 1
  %16718 = load i16, ptr %16717, align 2
  %16719 = icmp eq i16 %16718, 0
  br i1 %16719, label %16758, label %16720

16720:                                            ; preds = %16751, %16716
  %16721 = phi i32 [ %16752, %16751 ], [ 0, %16716 ]
  %16722 = getelementptr %struct.mxl5005s_state, ptr %16706, i32 0, i32 19, i32 %16712, i32 4, i32 %16721
  store i16 0, ptr %16722, align 2
  %16723 = getelementptr %struct.mxl5005s_state, ptr %16706, i32 0, i32 19, i32 %16712, i32 3, i32 %16721
  %16724 = load i16, ptr %16723, align 2
  %16725 = load ptr, ptr %3, align 4
  %16726 = getelementptr inbounds %struct.mxl5005s_state, ptr %16725, i32 0, i32 24
  %16727 = load i16, ptr %16726, align 4
  %16728 = zext i16 %16727 to i32
  %16729 = icmp eq i16 %16727, 0
  br i1 %16729, label %16751, label %16730

16730:                                            ; preds = %16720
  %16731 = getelementptr %struct.mxl5005s_state, ptr %16706, i32 0, i32 19, i32 %16712, i32 2, i32 %16721
  %16732 = load i16, ptr %16731, align 2
  %16733 = and i16 %16732, 255
  br label %16734

16734:                                            ; preds = %16748, %16730
  %16735 = phi i32 [ 0, %16730 ], [ %16749, %16748 ]
  %16736 = getelementptr %struct.mxl5005s_state, ptr %16725, i32 0, i32 25, i32 %16735
  %16737 = load i16, ptr %16736, align 2
  %16738 = icmp eq i16 %16737, %16733
  br i1 %16738, label %16739, label %16748

16739:                                            ; preds = %16734
  %16740 = and i16 %16724, 255
  %16741 = zext i16 %16740 to i32
  %16742 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16741
  %16743 = load i8, ptr %16742, align 1
  %16744 = zext i8 %16743 to i16
  %16745 = getelementptr %struct.mxl5005s_state, ptr %16725, i32 0, i32 25, i32 %16735, i32 1
  %16746 = load i16, ptr %16745, align 2
  %16747 = and i16 %16746, %16744
  store i16 %16747, ptr %16745, align 2
  br label %16751

16748:                                            ; preds = %16734
  %16749 = add nuw nsw i32 %16735, 1
  %16750 = icmp eq i32 %16749, %16728
  br i1 %16750, label %16751, label %16734

16751:                                            ; preds = %16748, %16739, %16720
  %16752 = add nuw nsw i32 %16721, 1
  %16753 = load i16, ptr %16717, align 2
  %16754 = zext i16 %16753 to i32
  %16755 = icmp ult i32 %16752, %16754
  br i1 %16755, label %16720, label %16756

16756:                                            ; preds = %16751
  %16757 = load i16, ptr %16707, align 4
  br label %16758

16758:                                            ; preds = %16756, %16716, %16710
  %16759 = phi i16 [ %16757, %16756 ], [ %16711, %16716 ], [ %16711, %16710 ]
  %16760 = add nuw nsw i32 %16712, 1
  %16761 = zext i16 %16759 to i32
  %16762 = icmp ult i32 %16760, %16761
  br i1 %16762, label %16710, label %16763

16763:                                            ; preds = %16758
  %16764 = load ptr, ptr %3, align 4
  br label %16765

16765:                                            ; preds = %16763, %16705
  %16766 = phi ptr [ %16764, %16763 ], [ %16706, %16705 ]
  %16767 = getelementptr inbounds %struct.mxl5005s_state, ptr %16766, i32 0, i32 20
  %16768 = load i16, ptr %16767, align 2
  %16769 = icmp eq i16 %16768, 0
  br i1 %16769, label %16823, label %16770

16770:                                            ; preds = %16818, %16765
  %16771 = phi i16 [ %16819, %16818 ], [ %16768, %16765 ]
  %16772 = phi i32 [ %16820, %16818 ], [ 0, %16765 ]
  %16773 = getelementptr %struct.mxl5005s_state, ptr %16766, i32 0, i32 21, i32 %16772
  %16774 = load i16, ptr %16773, align 2
  %16775 = icmp eq i16 %16774, 84
  br i1 %16775, label %16776, label %16818

16776:                                            ; preds = %16770
  %16777 = getelementptr %struct.mxl5005s_state, ptr %16766, i32 0, i32 21, i32 %16772, i32 1
  %16778 = load i16, ptr %16777, align 2
  %16779 = icmp eq i16 %16778, 0
  br i1 %16779, label %16818, label %16780

16780:                                            ; preds = %16811, %16776
  %16781 = phi i32 [ %16812, %16811 ], [ 0, %16776 ]
  %16782 = getelementptr %struct.mxl5005s_state, ptr %16766, i32 0, i32 21, i32 %16772, i32 4, i32 %16781
  store i16 0, ptr %16782, align 2
  %16783 = getelementptr %struct.mxl5005s_state, ptr %16766, i32 0, i32 21, i32 %16772, i32 3, i32 %16781
  %16784 = load i16, ptr %16783, align 2
  %16785 = load ptr, ptr %3, align 4
  %16786 = getelementptr inbounds %struct.mxl5005s_state, ptr %16785, i32 0, i32 24
  %16787 = load i16, ptr %16786, align 4
  %16788 = zext i16 %16787 to i32
  %16789 = icmp eq i16 %16787, 0
  br i1 %16789, label %16811, label %16790

16790:                                            ; preds = %16780
  %16791 = getelementptr %struct.mxl5005s_state, ptr %16766, i32 0, i32 21, i32 %16772, i32 2, i32 %16781
  %16792 = load i16, ptr %16791, align 2
  %16793 = and i16 %16792, 255
  br label %16794

16794:                                            ; preds = %16808, %16790
  %16795 = phi i32 [ 0, %16790 ], [ %16809, %16808 ]
  %16796 = getelementptr %struct.mxl5005s_state, ptr %16785, i32 0, i32 25, i32 %16795
  %16797 = load i16, ptr %16796, align 2
  %16798 = icmp eq i16 %16797, %16793
  br i1 %16798, label %16799, label %16808

16799:                                            ; preds = %16794
  %16800 = and i16 %16784, 255
  %16801 = zext i16 %16800 to i32
  %16802 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16801
  %16803 = load i8, ptr %16802, align 1
  %16804 = zext i8 %16803 to i16
  %16805 = getelementptr %struct.mxl5005s_state, ptr %16785, i32 0, i32 25, i32 %16795, i32 1
  %16806 = load i16, ptr %16805, align 2
  %16807 = and i16 %16806, %16804
  store i16 %16807, ptr %16805, align 2
  br label %16811

16808:                                            ; preds = %16794
  %16809 = add nuw nsw i32 %16795, 1
  %16810 = icmp eq i32 %16809, %16788
  br i1 %16810, label %16811, label %16794

16811:                                            ; preds = %16808, %16799, %16780
  %16812 = add nuw nsw i32 %16781, 1
  %16813 = load i16, ptr %16777, align 2
  %16814 = zext i16 %16813 to i32
  %16815 = icmp ult i32 %16812, %16814
  br i1 %16815, label %16780, label %16816

16816:                                            ; preds = %16811
  %16817 = load i16, ptr %16767, align 2
  br label %16818

16818:                                            ; preds = %16816, %16776, %16770
  %16819 = phi i16 [ %16817, %16816 ], [ %16771, %16776 ], [ %16771, %16770 ]
  %16820 = add nuw nsw i32 %16772, 1
  %16821 = zext i16 %16819 to i32
  %16822 = icmp ult i32 %16820, %16821
  br i1 %16822, label %16770, label %16823

16823:                                            ; preds = %16818, %16765
  %16824 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %16825 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %16826 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %16827 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %16828 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %16829 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %16830 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %16831 = load i32, ptr %5, align 4
  br label %16832

16832:                                            ; preds = %16823, %16701
  %16833 = phi i32 [ %16831, %16823 ], [ %16702, %16701 ]
  %16834 = add i32 %16833, -250000000
  %16835 = icmp ult i32 %16834, 100000000
  br i1 %16835, label %16836, label %16960

16836:                                            ; preds = %16832
  %16837 = load ptr, ptr %3, align 4
  %16838 = getelementptr inbounds %struct.mxl5005s_state, ptr %16837, i32 0, i32 18
  %16839 = load i16, ptr %16838, align 4
  %16840 = icmp eq i16 %16839, 0
  br i1 %16840, label %16896, label %16841

16841:                                            ; preds = %16889, %16836
  %16842 = phi i16 [ %16890, %16889 ], [ %16839, %16836 ]
  %16843 = phi i32 [ %16891, %16889 ], [ 0, %16836 ]
  %16844 = getelementptr %struct.mxl5005s_state, ptr %16837, i32 0, i32 19, i32 %16843
  %16845 = load i16, ptr %16844, align 2
  %16846 = icmp eq i16 %16845, 84
  br i1 %16846, label %16847, label %16889

16847:                                            ; preds = %16841
  %16848 = getelementptr %struct.mxl5005s_state, ptr %16837, i32 0, i32 19, i32 %16843, i32 1
  %16849 = load i16, ptr %16848, align 2
  %16850 = icmp eq i16 %16849, 0
  br i1 %16850, label %16889, label %16851

16851:                                            ; preds = %16882, %16847
  %16852 = phi i32 [ %16883, %16882 ], [ 0, %16847 ]
  %16853 = getelementptr %struct.mxl5005s_state, ptr %16837, i32 0, i32 19, i32 %16843, i32 4, i32 %16852
  store i16 0, ptr %16853, align 2
  %16854 = getelementptr %struct.mxl5005s_state, ptr %16837, i32 0, i32 19, i32 %16843, i32 3, i32 %16852
  %16855 = load i16, ptr %16854, align 2
  %16856 = load ptr, ptr %3, align 4
  %16857 = getelementptr inbounds %struct.mxl5005s_state, ptr %16856, i32 0, i32 24
  %16858 = load i16, ptr %16857, align 4
  %16859 = zext i16 %16858 to i32
  %16860 = icmp eq i16 %16858, 0
  br i1 %16860, label %16882, label %16861

16861:                                            ; preds = %16851
  %16862 = getelementptr %struct.mxl5005s_state, ptr %16837, i32 0, i32 19, i32 %16843, i32 2, i32 %16852
  %16863 = load i16, ptr %16862, align 2
  %16864 = and i16 %16863, 255
  br label %16865

16865:                                            ; preds = %16879, %16861
  %16866 = phi i32 [ 0, %16861 ], [ %16880, %16879 ]
  %16867 = getelementptr %struct.mxl5005s_state, ptr %16856, i32 0, i32 25, i32 %16866
  %16868 = load i16, ptr %16867, align 2
  %16869 = icmp eq i16 %16868, %16864
  br i1 %16869, label %16870, label %16879

16870:                                            ; preds = %16865
  %16871 = and i16 %16855, 255
  %16872 = zext i16 %16871 to i32
  %16873 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16872
  %16874 = load i8, ptr %16873, align 1
  %16875 = zext i8 %16874 to i16
  %16876 = getelementptr %struct.mxl5005s_state, ptr %16856, i32 0, i32 25, i32 %16866, i32 1
  %16877 = load i16, ptr %16876, align 2
  %16878 = and i16 %16877, %16875
  store i16 %16878, ptr %16876, align 2
  br label %16882

16879:                                            ; preds = %16865
  %16880 = add nuw nsw i32 %16866, 1
  %16881 = icmp eq i32 %16880, %16859
  br i1 %16881, label %16882, label %16865

16882:                                            ; preds = %16879, %16870, %16851
  %16883 = add nuw nsw i32 %16852, 1
  %16884 = load i16, ptr %16848, align 2
  %16885 = zext i16 %16884 to i32
  %16886 = icmp ult i32 %16883, %16885
  br i1 %16886, label %16851, label %16887

16887:                                            ; preds = %16882
  %16888 = load i16, ptr %16838, align 4
  br label %16889

16889:                                            ; preds = %16887, %16847, %16841
  %16890 = phi i16 [ %16888, %16887 ], [ %16842, %16847 ], [ %16842, %16841 ]
  %16891 = add nuw nsw i32 %16843, 1
  %16892 = zext i16 %16890 to i32
  %16893 = icmp ult i32 %16891, %16892
  br i1 %16893, label %16841, label %16894

16894:                                            ; preds = %16889
  %16895 = load ptr, ptr %3, align 4
  br label %16896

16896:                                            ; preds = %16894, %16836
  %16897 = phi ptr [ %16895, %16894 ], [ %16837, %16836 ]
  %16898 = getelementptr inbounds %struct.mxl5005s_state, ptr %16897, i32 0, i32 20
  %16899 = load i16, ptr %16898, align 2
  %16900 = icmp eq i16 %16899, 0
  br i1 %16900, label %16954, label %16901

16901:                                            ; preds = %16949, %16896
  %16902 = phi i16 [ %16950, %16949 ], [ %16899, %16896 ]
  %16903 = phi i32 [ %16951, %16949 ], [ 0, %16896 ]
  %16904 = getelementptr %struct.mxl5005s_state, ptr %16897, i32 0, i32 21, i32 %16903
  %16905 = load i16, ptr %16904, align 2
  %16906 = icmp eq i16 %16905, 84
  br i1 %16906, label %16907, label %16949

16907:                                            ; preds = %16901
  %16908 = getelementptr %struct.mxl5005s_state, ptr %16897, i32 0, i32 21, i32 %16903, i32 1
  %16909 = load i16, ptr %16908, align 2
  %16910 = icmp eq i16 %16909, 0
  br i1 %16910, label %16949, label %16911

16911:                                            ; preds = %16942, %16907
  %16912 = phi i32 [ %16943, %16942 ], [ 0, %16907 ]
  %16913 = getelementptr %struct.mxl5005s_state, ptr %16897, i32 0, i32 21, i32 %16903, i32 4, i32 %16912
  store i16 0, ptr %16913, align 2
  %16914 = getelementptr %struct.mxl5005s_state, ptr %16897, i32 0, i32 21, i32 %16903, i32 3, i32 %16912
  %16915 = load i16, ptr %16914, align 2
  %16916 = load ptr, ptr %3, align 4
  %16917 = getelementptr inbounds %struct.mxl5005s_state, ptr %16916, i32 0, i32 24
  %16918 = load i16, ptr %16917, align 4
  %16919 = zext i16 %16918 to i32
  %16920 = icmp eq i16 %16918, 0
  br i1 %16920, label %16942, label %16921

16921:                                            ; preds = %16911
  %16922 = getelementptr %struct.mxl5005s_state, ptr %16897, i32 0, i32 21, i32 %16903, i32 2, i32 %16912
  %16923 = load i16, ptr %16922, align 2
  %16924 = and i16 %16923, 255
  br label %16925

16925:                                            ; preds = %16939, %16921
  %16926 = phi i32 [ 0, %16921 ], [ %16940, %16939 ]
  %16927 = getelementptr %struct.mxl5005s_state, ptr %16916, i32 0, i32 25, i32 %16926
  %16928 = load i16, ptr %16927, align 2
  %16929 = icmp eq i16 %16928, %16924
  br i1 %16929, label %16930, label %16939

16930:                                            ; preds = %16925
  %16931 = and i16 %16915, 255
  %16932 = zext i16 %16931 to i32
  %16933 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %16932
  %16934 = load i8, ptr %16933, align 1
  %16935 = zext i8 %16934 to i16
  %16936 = getelementptr %struct.mxl5005s_state, ptr %16916, i32 0, i32 25, i32 %16926, i32 1
  %16937 = load i16, ptr %16936, align 2
  %16938 = and i16 %16937, %16935
  store i16 %16938, ptr %16936, align 2
  br label %16942

16939:                                            ; preds = %16925
  %16940 = add nuw nsw i32 %16926, 1
  %16941 = icmp eq i32 %16940, %16919
  br i1 %16941, label %16942, label %16925

16942:                                            ; preds = %16939, %16930, %16911
  %16943 = add nuw nsw i32 %16912, 1
  %16944 = load i16, ptr %16908, align 2
  %16945 = zext i16 %16944 to i32
  %16946 = icmp ult i32 %16943, %16945
  br i1 %16946, label %16911, label %16947

16947:                                            ; preds = %16942
  %16948 = load i16, ptr %16898, align 2
  br label %16949

16949:                                            ; preds = %16947, %16907, %16901
  %16950 = phi i16 [ %16948, %16947 ], [ %16902, %16907 ], [ %16902, %16901 ]
  %16951 = add nuw nsw i32 %16903, 1
  %16952 = zext i16 %16950 to i32
  %16953 = icmp ult i32 %16951, %16952
  br i1 %16953, label %16901, label %16954

16954:                                            ; preds = %16949, %16896
  %16955 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %16956 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %16957 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %16958 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %16959 = load i32, ptr %5, align 4
  br label %16960

16960:                                            ; preds = %16954, %16832
  %16961 = phi i32 [ %16959, %16954 ], [ %16833, %16832 ]
  %16962 = add i32 %16961, -350000000
  %16963 = icmp ult i32 %16962, 50000000
  br i1 %16963, label %16964, label %17091

16964:                                            ; preds = %16960
  %16965 = load ptr, ptr %3, align 4
  %16966 = getelementptr inbounds %struct.mxl5005s_state, ptr %16965, i32 0, i32 18
  %16967 = load i16, ptr %16966, align 4
  %16968 = icmp eq i16 %16967, 0
  br i1 %16968, label %17024, label %16969

16969:                                            ; preds = %17017, %16964
  %16970 = phi i16 [ %17018, %17017 ], [ %16967, %16964 ]
  %16971 = phi i32 [ %17019, %17017 ], [ 0, %16964 ]
  %16972 = getelementptr %struct.mxl5005s_state, ptr %16965, i32 0, i32 19, i32 %16971
  %16973 = load i16, ptr %16972, align 2
  %16974 = icmp eq i16 %16973, 84
  br i1 %16974, label %16975, label %17017

16975:                                            ; preds = %16969
  %16976 = getelementptr %struct.mxl5005s_state, ptr %16965, i32 0, i32 19, i32 %16971, i32 1
  %16977 = load i16, ptr %16976, align 2
  %16978 = icmp eq i16 %16977, 0
  br i1 %16978, label %17017, label %16979

16979:                                            ; preds = %17010, %16975
  %16980 = phi i32 [ %17011, %17010 ], [ 0, %16975 ]
  %16981 = getelementptr %struct.mxl5005s_state, ptr %16965, i32 0, i32 19, i32 %16971, i32 4, i32 %16980
  store i16 0, ptr %16981, align 2
  %16982 = getelementptr %struct.mxl5005s_state, ptr %16965, i32 0, i32 19, i32 %16971, i32 3, i32 %16980
  %16983 = load i16, ptr %16982, align 2
  %16984 = load ptr, ptr %3, align 4
  %16985 = getelementptr inbounds %struct.mxl5005s_state, ptr %16984, i32 0, i32 24
  %16986 = load i16, ptr %16985, align 4
  %16987 = zext i16 %16986 to i32
  %16988 = icmp eq i16 %16986, 0
  br i1 %16988, label %17010, label %16989

16989:                                            ; preds = %16979
  %16990 = getelementptr %struct.mxl5005s_state, ptr %16965, i32 0, i32 19, i32 %16971, i32 2, i32 %16980
  %16991 = load i16, ptr %16990, align 2
  %16992 = and i16 %16991, 255
  br label %16993

16993:                                            ; preds = %17007, %16989
  %16994 = phi i32 [ 0, %16989 ], [ %17008, %17007 ]
  %16995 = getelementptr %struct.mxl5005s_state, ptr %16984, i32 0, i32 25, i32 %16994
  %16996 = load i16, ptr %16995, align 2
  %16997 = icmp eq i16 %16996, %16992
  br i1 %16997, label %16998, label %17007

16998:                                            ; preds = %16993
  %16999 = and i16 %16983, 255
  %17000 = zext i16 %16999 to i32
  %17001 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17000
  %17002 = load i8, ptr %17001, align 1
  %17003 = zext i8 %17002 to i16
  %17004 = getelementptr %struct.mxl5005s_state, ptr %16984, i32 0, i32 25, i32 %16994, i32 1
  %17005 = load i16, ptr %17004, align 2
  %17006 = and i16 %17005, %17003
  store i16 %17006, ptr %17004, align 2
  br label %17010

17007:                                            ; preds = %16993
  %17008 = add nuw nsw i32 %16994, 1
  %17009 = icmp eq i32 %17008, %16987
  br i1 %17009, label %17010, label %16993

17010:                                            ; preds = %17007, %16998, %16979
  %17011 = add nuw nsw i32 %16980, 1
  %17012 = load i16, ptr %16976, align 2
  %17013 = zext i16 %17012 to i32
  %17014 = icmp ult i32 %17011, %17013
  br i1 %17014, label %16979, label %17015

17015:                                            ; preds = %17010
  %17016 = load i16, ptr %16966, align 4
  br label %17017

17017:                                            ; preds = %17015, %16975, %16969
  %17018 = phi i16 [ %17016, %17015 ], [ %16970, %16975 ], [ %16970, %16969 ]
  %17019 = add nuw nsw i32 %16971, 1
  %17020 = zext i16 %17018 to i32
  %17021 = icmp ult i32 %17019, %17020
  br i1 %17021, label %16969, label %17022

17022:                                            ; preds = %17017
  %17023 = load ptr, ptr %3, align 4
  br label %17024

17024:                                            ; preds = %17022, %16964
  %17025 = phi ptr [ %17023, %17022 ], [ %16965, %16964 ]
  %17026 = getelementptr inbounds %struct.mxl5005s_state, ptr %17025, i32 0, i32 20
  %17027 = load i16, ptr %17026, align 2
  %17028 = icmp eq i16 %17027, 0
  br i1 %17028, label %17082, label %17029

17029:                                            ; preds = %17077, %17024
  %17030 = phi i16 [ %17078, %17077 ], [ %17027, %17024 ]
  %17031 = phi i32 [ %17079, %17077 ], [ 0, %17024 ]
  %17032 = getelementptr %struct.mxl5005s_state, ptr %17025, i32 0, i32 21, i32 %17031
  %17033 = load i16, ptr %17032, align 2
  %17034 = icmp eq i16 %17033, 84
  br i1 %17034, label %17035, label %17077

17035:                                            ; preds = %17029
  %17036 = getelementptr %struct.mxl5005s_state, ptr %17025, i32 0, i32 21, i32 %17031, i32 1
  %17037 = load i16, ptr %17036, align 2
  %17038 = icmp eq i16 %17037, 0
  br i1 %17038, label %17077, label %17039

17039:                                            ; preds = %17070, %17035
  %17040 = phi i32 [ %17071, %17070 ], [ 0, %17035 ]
  %17041 = getelementptr %struct.mxl5005s_state, ptr %17025, i32 0, i32 21, i32 %17031, i32 4, i32 %17040
  store i16 0, ptr %17041, align 2
  %17042 = getelementptr %struct.mxl5005s_state, ptr %17025, i32 0, i32 21, i32 %17031, i32 3, i32 %17040
  %17043 = load i16, ptr %17042, align 2
  %17044 = load ptr, ptr %3, align 4
  %17045 = getelementptr inbounds %struct.mxl5005s_state, ptr %17044, i32 0, i32 24
  %17046 = load i16, ptr %17045, align 4
  %17047 = zext i16 %17046 to i32
  %17048 = icmp eq i16 %17046, 0
  br i1 %17048, label %17070, label %17049

17049:                                            ; preds = %17039
  %17050 = getelementptr %struct.mxl5005s_state, ptr %17025, i32 0, i32 21, i32 %17031, i32 2, i32 %17040
  %17051 = load i16, ptr %17050, align 2
  %17052 = and i16 %17051, 255
  br label %17053

17053:                                            ; preds = %17067, %17049
  %17054 = phi i32 [ 0, %17049 ], [ %17068, %17067 ]
  %17055 = getelementptr %struct.mxl5005s_state, ptr %17044, i32 0, i32 25, i32 %17054
  %17056 = load i16, ptr %17055, align 2
  %17057 = icmp eq i16 %17056, %17052
  br i1 %17057, label %17058, label %17067

17058:                                            ; preds = %17053
  %17059 = and i16 %17043, 255
  %17060 = zext i16 %17059 to i32
  %17061 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17060
  %17062 = load i8, ptr %17061, align 1
  %17063 = zext i8 %17062 to i16
  %17064 = getelementptr %struct.mxl5005s_state, ptr %17044, i32 0, i32 25, i32 %17054, i32 1
  %17065 = load i16, ptr %17064, align 2
  %17066 = and i16 %17065, %17063
  store i16 %17066, ptr %17064, align 2
  br label %17070

17067:                                            ; preds = %17053
  %17068 = add nuw nsw i32 %17054, 1
  %17069 = icmp eq i32 %17068, %17047
  br i1 %17069, label %17070, label %17053

17070:                                            ; preds = %17067, %17058, %17039
  %17071 = add nuw nsw i32 %17040, 1
  %17072 = load i16, ptr %17036, align 2
  %17073 = zext i16 %17072 to i32
  %17074 = icmp ult i32 %17071, %17073
  br i1 %17074, label %17039, label %17075

17075:                                            ; preds = %17070
  %17076 = load i16, ptr %17026, align 2
  br label %17077

17077:                                            ; preds = %17075, %17035, %17029
  %17078 = phi i16 [ %17076, %17075 ], [ %17030, %17035 ], [ %17030, %17029 ]
  %17079 = add nuw nsw i32 %17031, 1
  %17080 = zext i16 %17078 to i32
  %17081 = icmp ult i32 %17079, %17080
  br i1 %17081, label %17029, label %17082

17082:                                            ; preds = %17077, %17024
  %17083 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %17084 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %17085 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %17086 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %17087 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %17088 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %17089 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %17090 = load i32, ptr %5, align 4
  br label %17091

17091:                                            ; preds = %17082, %16960
  %17092 = phi i32 [ %17090, %17082 ], [ %16961, %16960 ]
  %17093 = add i32 %17092, -400000000
  %17094 = icmp ult i32 %17093, 170000000
  br i1 %17094, label %17095, label %17338

17095:                                            ; preds = %17091
  %17096 = load ptr, ptr %3, align 4
  %17097 = getelementptr inbounds %struct.mxl5005s_state, ptr %17096, i32 0, i32 18
  %17098 = load i16, ptr %17097, align 4
  %17099 = icmp eq i16 %17098, 0
  br i1 %17099, label %17155, label %17100

17100:                                            ; preds = %17148, %17095
  %17101 = phi i16 [ %17149, %17148 ], [ %17098, %17095 ]
  %17102 = phi i32 [ %17150, %17148 ], [ 0, %17095 ]
  %17103 = getelementptr %struct.mxl5005s_state, ptr %17096, i32 0, i32 19, i32 %17102
  %17104 = load i16, ptr %17103, align 2
  %17105 = icmp eq i16 %17104, 84
  br i1 %17105, label %17106, label %17148

17106:                                            ; preds = %17100
  %17107 = getelementptr %struct.mxl5005s_state, ptr %17096, i32 0, i32 19, i32 %17102, i32 1
  %17108 = load i16, ptr %17107, align 2
  %17109 = icmp eq i16 %17108, 0
  br i1 %17109, label %17148, label %17110

17110:                                            ; preds = %17141, %17106
  %17111 = phi i32 [ %17142, %17141 ], [ 0, %17106 ]
  %17112 = getelementptr %struct.mxl5005s_state, ptr %17096, i32 0, i32 19, i32 %17102, i32 4, i32 %17111
  store i16 0, ptr %17112, align 2
  %17113 = getelementptr %struct.mxl5005s_state, ptr %17096, i32 0, i32 19, i32 %17102, i32 3, i32 %17111
  %17114 = load i16, ptr %17113, align 2
  %17115 = load ptr, ptr %3, align 4
  %17116 = getelementptr inbounds %struct.mxl5005s_state, ptr %17115, i32 0, i32 24
  %17117 = load i16, ptr %17116, align 4
  %17118 = zext i16 %17117 to i32
  %17119 = icmp eq i16 %17117, 0
  br i1 %17119, label %17141, label %17120

17120:                                            ; preds = %17110
  %17121 = getelementptr %struct.mxl5005s_state, ptr %17096, i32 0, i32 19, i32 %17102, i32 2, i32 %17111
  %17122 = load i16, ptr %17121, align 2
  %17123 = and i16 %17122, 255
  br label %17124

17124:                                            ; preds = %17138, %17120
  %17125 = phi i32 [ 0, %17120 ], [ %17139, %17138 ]
  %17126 = getelementptr %struct.mxl5005s_state, ptr %17115, i32 0, i32 25, i32 %17125
  %17127 = load i16, ptr %17126, align 2
  %17128 = icmp eq i16 %17127, %17123
  br i1 %17128, label %17129, label %17138

17129:                                            ; preds = %17124
  %17130 = and i16 %17114, 255
  %17131 = zext i16 %17130 to i32
  %17132 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17131
  %17133 = load i8, ptr %17132, align 1
  %17134 = zext i8 %17133 to i16
  %17135 = getelementptr %struct.mxl5005s_state, ptr %17115, i32 0, i32 25, i32 %17125, i32 1
  %17136 = load i16, ptr %17135, align 2
  %17137 = and i16 %17136, %17134
  store i16 %17137, ptr %17135, align 2
  br label %17141

17138:                                            ; preds = %17124
  %17139 = add nuw nsw i32 %17125, 1
  %17140 = icmp eq i32 %17139, %17118
  br i1 %17140, label %17141, label %17124

17141:                                            ; preds = %17138, %17129, %17110
  %17142 = add nuw nsw i32 %17111, 1
  %17143 = load i16, ptr %17107, align 2
  %17144 = zext i16 %17143 to i32
  %17145 = icmp ult i32 %17142, %17144
  br i1 %17145, label %17110, label %17146

17146:                                            ; preds = %17141
  %17147 = load i16, ptr %17097, align 4
  br label %17148

17148:                                            ; preds = %17146, %17106, %17100
  %17149 = phi i16 [ %17147, %17146 ], [ %17101, %17106 ], [ %17101, %17100 ]
  %17150 = add nuw nsw i32 %17102, 1
  %17151 = zext i16 %17149 to i32
  %17152 = icmp ult i32 %17150, %17151
  br i1 %17152, label %17100, label %17153

17153:                                            ; preds = %17148
  %17154 = load ptr, ptr %3, align 4
  br label %17155

17155:                                            ; preds = %17153, %17095
  %17156 = phi ptr [ %17154, %17153 ], [ %17096, %17095 ]
  %17157 = getelementptr inbounds %struct.mxl5005s_state, ptr %17156, i32 0, i32 20
  %17158 = load i16, ptr %17157, align 2
  %17159 = icmp eq i16 %17158, 0
  br i1 %17159, label %17213, label %17160

17160:                                            ; preds = %17208, %17155
  %17161 = phi i16 [ %17209, %17208 ], [ %17158, %17155 ]
  %17162 = phi i32 [ %17210, %17208 ], [ 0, %17155 ]
  %17163 = getelementptr %struct.mxl5005s_state, ptr %17156, i32 0, i32 21, i32 %17162
  %17164 = load i16, ptr %17163, align 2
  %17165 = icmp eq i16 %17164, 84
  br i1 %17165, label %17166, label %17208

17166:                                            ; preds = %17160
  %17167 = getelementptr %struct.mxl5005s_state, ptr %17156, i32 0, i32 21, i32 %17162, i32 1
  %17168 = load i16, ptr %17167, align 2
  %17169 = icmp eq i16 %17168, 0
  br i1 %17169, label %17208, label %17170

17170:                                            ; preds = %17201, %17166
  %17171 = phi i32 [ %17202, %17201 ], [ 0, %17166 ]
  %17172 = getelementptr %struct.mxl5005s_state, ptr %17156, i32 0, i32 21, i32 %17162, i32 4, i32 %17171
  store i16 0, ptr %17172, align 2
  %17173 = getelementptr %struct.mxl5005s_state, ptr %17156, i32 0, i32 21, i32 %17162, i32 3, i32 %17171
  %17174 = load i16, ptr %17173, align 2
  %17175 = load ptr, ptr %3, align 4
  %17176 = getelementptr inbounds %struct.mxl5005s_state, ptr %17175, i32 0, i32 24
  %17177 = load i16, ptr %17176, align 4
  %17178 = zext i16 %17177 to i32
  %17179 = icmp eq i16 %17177, 0
  br i1 %17179, label %17201, label %17180

17180:                                            ; preds = %17170
  %17181 = getelementptr %struct.mxl5005s_state, ptr %17156, i32 0, i32 21, i32 %17162, i32 2, i32 %17171
  %17182 = load i16, ptr %17181, align 2
  %17183 = and i16 %17182, 255
  br label %17184

17184:                                            ; preds = %17198, %17180
  %17185 = phi i32 [ 0, %17180 ], [ %17199, %17198 ]
  %17186 = getelementptr %struct.mxl5005s_state, ptr %17175, i32 0, i32 25, i32 %17185
  %17187 = load i16, ptr %17186, align 2
  %17188 = icmp eq i16 %17187, %17183
  br i1 %17188, label %17189, label %17198

17189:                                            ; preds = %17184
  %17190 = and i16 %17174, 255
  %17191 = zext i16 %17190 to i32
  %17192 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17191
  %17193 = load i8, ptr %17192, align 1
  %17194 = zext i8 %17193 to i16
  %17195 = getelementptr %struct.mxl5005s_state, ptr %17175, i32 0, i32 25, i32 %17185, i32 1
  %17196 = load i16, ptr %17195, align 2
  %17197 = and i16 %17196, %17194
  store i16 %17197, ptr %17195, align 2
  br label %17201

17198:                                            ; preds = %17184
  %17199 = add nuw nsw i32 %17185, 1
  %17200 = icmp eq i32 %17199, %17178
  br i1 %17200, label %17201, label %17184

17201:                                            ; preds = %17198, %17189, %17170
  %17202 = add nuw nsw i32 %17171, 1
  %17203 = load i16, ptr %17167, align 2
  %17204 = zext i16 %17203 to i32
  %17205 = icmp ult i32 %17202, %17204
  br i1 %17205, label %17170, label %17206

17206:                                            ; preds = %17201
  %17207 = load i16, ptr %17157, align 2
  br label %17208

17208:                                            ; preds = %17206, %17166, %17160
  %17209 = phi i16 [ %17207, %17206 ], [ %17161, %17166 ], [ %17161, %17160 ]
  %17210 = add nuw nsw i32 %17162, 1
  %17211 = zext i16 %17209 to i32
  %17212 = icmp ult i32 %17210, %17211
  br i1 %17212, label %17160, label %17213

17213:                                            ; preds = %17208, %17155
  %17214 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %17215 = load ptr, ptr %3, align 4
  %17216 = getelementptr inbounds %struct.mxl5005s_state, ptr %17215, i32 0, i32 18
  %17217 = load i16, ptr %17216, align 4
  %17218 = icmp eq i16 %17217, 0
  br i1 %17218, label %17274, label %17219

17219:                                            ; preds = %17267, %17213
  %17220 = phi i16 [ %17268, %17267 ], [ %17217, %17213 ]
  %17221 = phi i32 [ %17269, %17267 ], [ 0, %17213 ]
  %17222 = getelementptr %struct.mxl5005s_state, ptr %17215, i32 0, i32 19, i32 %17221
  %17223 = load i16, ptr %17222, align 2
  %17224 = icmp eq i16 %17223, 82
  br i1 %17224, label %17225, label %17267

17225:                                            ; preds = %17219
  %17226 = getelementptr %struct.mxl5005s_state, ptr %17215, i32 0, i32 19, i32 %17221, i32 1
  %17227 = load i16, ptr %17226, align 2
  %17228 = icmp eq i16 %17227, 0
  br i1 %17228, label %17267, label %17229

17229:                                            ; preds = %17260, %17225
  %17230 = phi i32 [ %17261, %17260 ], [ 0, %17225 ]
  %17231 = getelementptr %struct.mxl5005s_state, ptr %17215, i32 0, i32 19, i32 %17221, i32 4, i32 %17230
  store i16 0, ptr %17231, align 2
  %17232 = getelementptr %struct.mxl5005s_state, ptr %17215, i32 0, i32 19, i32 %17221, i32 3, i32 %17230
  %17233 = load i16, ptr %17232, align 2
  %17234 = load ptr, ptr %3, align 4
  %17235 = getelementptr inbounds %struct.mxl5005s_state, ptr %17234, i32 0, i32 24
  %17236 = load i16, ptr %17235, align 4
  %17237 = zext i16 %17236 to i32
  %17238 = icmp eq i16 %17236, 0
  br i1 %17238, label %17260, label %17239

17239:                                            ; preds = %17229
  %17240 = getelementptr %struct.mxl5005s_state, ptr %17215, i32 0, i32 19, i32 %17221, i32 2, i32 %17230
  %17241 = load i16, ptr %17240, align 2
  %17242 = and i16 %17241, 255
  br label %17243

17243:                                            ; preds = %17257, %17239
  %17244 = phi i32 [ 0, %17239 ], [ %17258, %17257 ]
  %17245 = getelementptr %struct.mxl5005s_state, ptr %17234, i32 0, i32 25, i32 %17244
  %17246 = load i16, ptr %17245, align 2
  %17247 = icmp eq i16 %17246, %17242
  br i1 %17247, label %17248, label %17257

17248:                                            ; preds = %17243
  %17249 = and i16 %17233, 255
  %17250 = zext i16 %17249 to i32
  %17251 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17250
  %17252 = load i8, ptr %17251, align 1
  %17253 = zext i8 %17252 to i16
  %17254 = getelementptr %struct.mxl5005s_state, ptr %17234, i32 0, i32 25, i32 %17244, i32 1
  %17255 = load i16, ptr %17254, align 2
  %17256 = and i16 %17255, %17253
  store i16 %17256, ptr %17254, align 2
  br label %17260

17257:                                            ; preds = %17243
  %17258 = add nuw nsw i32 %17244, 1
  %17259 = icmp eq i32 %17258, %17237
  br i1 %17259, label %17260, label %17243

17260:                                            ; preds = %17257, %17248, %17229
  %17261 = add nuw nsw i32 %17230, 1
  %17262 = load i16, ptr %17226, align 2
  %17263 = zext i16 %17262 to i32
  %17264 = icmp ult i32 %17261, %17263
  br i1 %17264, label %17229, label %17265

17265:                                            ; preds = %17260
  %17266 = load i16, ptr %17216, align 4
  br label %17267

17267:                                            ; preds = %17265, %17225, %17219
  %17268 = phi i16 [ %17266, %17265 ], [ %17220, %17225 ], [ %17220, %17219 ]
  %17269 = add nuw nsw i32 %17221, 1
  %17270 = zext i16 %17268 to i32
  %17271 = icmp ult i32 %17269, %17270
  br i1 %17271, label %17219, label %17272

17272:                                            ; preds = %17267
  %17273 = load ptr, ptr %3, align 4
  br label %17274

17274:                                            ; preds = %17272, %17213
  %17275 = phi ptr [ %17273, %17272 ], [ %17215, %17213 ]
  %17276 = getelementptr inbounds %struct.mxl5005s_state, ptr %17275, i32 0, i32 20
  %17277 = load i16, ptr %17276, align 2
  %17278 = icmp eq i16 %17277, 0
  br i1 %17278, label %17332, label %17279

17279:                                            ; preds = %17327, %17274
  %17280 = phi i16 [ %17328, %17327 ], [ %17277, %17274 ]
  %17281 = phi i32 [ %17329, %17327 ], [ 0, %17274 ]
  %17282 = getelementptr %struct.mxl5005s_state, ptr %17275, i32 0, i32 21, i32 %17281
  %17283 = load i16, ptr %17282, align 2
  %17284 = icmp eq i16 %17283, 82
  br i1 %17284, label %17285, label %17327

17285:                                            ; preds = %17279
  %17286 = getelementptr %struct.mxl5005s_state, ptr %17275, i32 0, i32 21, i32 %17281, i32 1
  %17287 = load i16, ptr %17286, align 2
  %17288 = icmp eq i16 %17287, 0
  br i1 %17288, label %17327, label %17289

17289:                                            ; preds = %17320, %17285
  %17290 = phi i32 [ %17321, %17320 ], [ 0, %17285 ]
  %17291 = getelementptr %struct.mxl5005s_state, ptr %17275, i32 0, i32 21, i32 %17281, i32 4, i32 %17290
  store i16 0, ptr %17291, align 2
  %17292 = getelementptr %struct.mxl5005s_state, ptr %17275, i32 0, i32 21, i32 %17281, i32 3, i32 %17290
  %17293 = load i16, ptr %17292, align 2
  %17294 = load ptr, ptr %3, align 4
  %17295 = getelementptr inbounds %struct.mxl5005s_state, ptr %17294, i32 0, i32 24
  %17296 = load i16, ptr %17295, align 4
  %17297 = zext i16 %17296 to i32
  %17298 = icmp eq i16 %17296, 0
  br i1 %17298, label %17320, label %17299

17299:                                            ; preds = %17289
  %17300 = getelementptr %struct.mxl5005s_state, ptr %17275, i32 0, i32 21, i32 %17281, i32 2, i32 %17290
  %17301 = load i16, ptr %17300, align 2
  %17302 = and i16 %17301, 255
  br label %17303

17303:                                            ; preds = %17317, %17299
  %17304 = phi i32 [ 0, %17299 ], [ %17318, %17317 ]
  %17305 = getelementptr %struct.mxl5005s_state, ptr %17294, i32 0, i32 25, i32 %17304
  %17306 = load i16, ptr %17305, align 2
  %17307 = icmp eq i16 %17306, %17302
  br i1 %17307, label %17308, label %17317

17308:                                            ; preds = %17303
  %17309 = and i16 %17293, 255
  %17310 = zext i16 %17309 to i32
  %17311 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17310
  %17312 = load i8, ptr %17311, align 1
  %17313 = zext i8 %17312 to i16
  %17314 = getelementptr %struct.mxl5005s_state, ptr %17294, i32 0, i32 25, i32 %17304, i32 1
  %17315 = load i16, ptr %17314, align 2
  %17316 = and i16 %17315, %17313
  store i16 %17316, ptr %17314, align 2
  br label %17320

17317:                                            ; preds = %17303
  %17318 = add nuw nsw i32 %17304, 1
  %17319 = icmp eq i32 %17318, %17297
  br i1 %17319, label %17320, label %17303

17320:                                            ; preds = %17317, %17308, %17289
  %17321 = add nuw nsw i32 %17290, 1
  %17322 = load i16, ptr %17286, align 2
  %17323 = zext i16 %17322 to i32
  %17324 = icmp ult i32 %17321, %17323
  br i1 %17324, label %17289, label %17325

17325:                                            ; preds = %17320
  %17326 = load i16, ptr %17276, align 2
  br label %17327

17327:                                            ; preds = %17325, %17285, %17279
  %17328 = phi i16 [ %17326, %17325 ], [ %17280, %17285 ], [ %17280, %17279 ]
  %17329 = add nuw nsw i32 %17281, 1
  %17330 = zext i16 %17328 to i32
  %17331 = icmp ult i32 %17329, %17330
  br i1 %17331, label %17279, label %17332

17332:                                            ; preds = %17327, %17274
  %17333 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %17334 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %17335 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %17336 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %17337 = load i32, ptr %5, align 4
  br label %17338

17338:                                            ; preds = %17332, %17091
  %17339 = phi i32 [ %17337, %17332 ], [ %17092, %17091 ]
  %17340 = add i32 %17339, -570000000
  %17341 = icmp ult i32 %17340, 200000000
  br i1 %17341, label %17342, label %17469

17342:                                            ; preds = %17338
  %17343 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %17344 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %17345 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %17346 = load ptr, ptr %3, align 4
  %17347 = getelementptr inbounds %struct.mxl5005s_state, ptr %17346, i32 0, i32 18
  %17348 = load i16, ptr %17347, align 4
  %17349 = icmp eq i16 %17348, 0
  br i1 %17349, label %17405, label %17350

17350:                                            ; preds = %17398, %17342
  %17351 = phi i16 [ %17399, %17398 ], [ %17348, %17342 ]
  %17352 = phi i32 [ %17400, %17398 ], [ 0, %17342 ]
  %17353 = getelementptr %struct.mxl5005s_state, ptr %17346, i32 0, i32 19, i32 %17352
  %17354 = load i16, ptr %17353, align 2
  %17355 = icmp eq i16 %17354, 82
  br i1 %17355, label %17356, label %17398

17356:                                            ; preds = %17350
  %17357 = getelementptr %struct.mxl5005s_state, ptr %17346, i32 0, i32 19, i32 %17352, i32 1
  %17358 = load i16, ptr %17357, align 2
  %17359 = icmp eq i16 %17358, 0
  br i1 %17359, label %17398, label %17360

17360:                                            ; preds = %17391, %17356
  %17361 = phi i32 [ %17392, %17391 ], [ 0, %17356 ]
  %17362 = getelementptr %struct.mxl5005s_state, ptr %17346, i32 0, i32 19, i32 %17352, i32 4, i32 %17361
  store i16 0, ptr %17362, align 2
  %17363 = getelementptr %struct.mxl5005s_state, ptr %17346, i32 0, i32 19, i32 %17352, i32 3, i32 %17361
  %17364 = load i16, ptr %17363, align 2
  %17365 = load ptr, ptr %3, align 4
  %17366 = getelementptr inbounds %struct.mxl5005s_state, ptr %17365, i32 0, i32 24
  %17367 = load i16, ptr %17366, align 4
  %17368 = zext i16 %17367 to i32
  %17369 = icmp eq i16 %17367, 0
  br i1 %17369, label %17391, label %17370

17370:                                            ; preds = %17360
  %17371 = getelementptr %struct.mxl5005s_state, ptr %17346, i32 0, i32 19, i32 %17352, i32 2, i32 %17361
  %17372 = load i16, ptr %17371, align 2
  %17373 = and i16 %17372, 255
  br label %17374

17374:                                            ; preds = %17388, %17370
  %17375 = phi i32 [ 0, %17370 ], [ %17389, %17388 ]
  %17376 = getelementptr %struct.mxl5005s_state, ptr %17365, i32 0, i32 25, i32 %17375
  %17377 = load i16, ptr %17376, align 2
  %17378 = icmp eq i16 %17377, %17373
  br i1 %17378, label %17379, label %17388

17379:                                            ; preds = %17374
  %17380 = and i16 %17364, 255
  %17381 = zext i16 %17380 to i32
  %17382 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17381
  %17383 = load i8, ptr %17382, align 1
  %17384 = zext i8 %17383 to i16
  %17385 = getelementptr %struct.mxl5005s_state, ptr %17365, i32 0, i32 25, i32 %17375, i32 1
  %17386 = load i16, ptr %17385, align 2
  %17387 = and i16 %17386, %17384
  store i16 %17387, ptr %17385, align 2
  br label %17391

17388:                                            ; preds = %17374
  %17389 = add nuw nsw i32 %17375, 1
  %17390 = icmp eq i32 %17389, %17368
  br i1 %17390, label %17391, label %17374

17391:                                            ; preds = %17388, %17379, %17360
  %17392 = add nuw nsw i32 %17361, 1
  %17393 = load i16, ptr %17357, align 2
  %17394 = zext i16 %17393 to i32
  %17395 = icmp ult i32 %17392, %17394
  br i1 %17395, label %17360, label %17396

17396:                                            ; preds = %17391
  %17397 = load i16, ptr %17347, align 4
  br label %17398

17398:                                            ; preds = %17396, %17356, %17350
  %17399 = phi i16 [ %17397, %17396 ], [ %17351, %17356 ], [ %17351, %17350 ]
  %17400 = add nuw nsw i32 %17352, 1
  %17401 = zext i16 %17399 to i32
  %17402 = icmp ult i32 %17400, %17401
  br i1 %17402, label %17350, label %17403

17403:                                            ; preds = %17398
  %17404 = load ptr, ptr %3, align 4
  br label %17405

17405:                                            ; preds = %17403, %17342
  %17406 = phi ptr [ %17404, %17403 ], [ %17346, %17342 ]
  %17407 = getelementptr inbounds %struct.mxl5005s_state, ptr %17406, i32 0, i32 20
  %17408 = load i16, ptr %17407, align 2
  %17409 = icmp eq i16 %17408, 0
  br i1 %17409, label %17463, label %17410

17410:                                            ; preds = %17458, %17405
  %17411 = phi i16 [ %17459, %17458 ], [ %17408, %17405 ]
  %17412 = phi i32 [ %17460, %17458 ], [ 0, %17405 ]
  %17413 = getelementptr %struct.mxl5005s_state, ptr %17406, i32 0, i32 21, i32 %17412
  %17414 = load i16, ptr %17413, align 2
  %17415 = icmp eq i16 %17414, 82
  br i1 %17415, label %17416, label %17458

17416:                                            ; preds = %17410
  %17417 = getelementptr %struct.mxl5005s_state, ptr %17406, i32 0, i32 21, i32 %17412, i32 1
  %17418 = load i16, ptr %17417, align 2
  %17419 = icmp eq i16 %17418, 0
  br i1 %17419, label %17458, label %17420

17420:                                            ; preds = %17451, %17416
  %17421 = phi i32 [ %17452, %17451 ], [ 0, %17416 ]
  %17422 = getelementptr %struct.mxl5005s_state, ptr %17406, i32 0, i32 21, i32 %17412, i32 4, i32 %17421
  store i16 0, ptr %17422, align 2
  %17423 = getelementptr %struct.mxl5005s_state, ptr %17406, i32 0, i32 21, i32 %17412, i32 3, i32 %17421
  %17424 = load i16, ptr %17423, align 2
  %17425 = load ptr, ptr %3, align 4
  %17426 = getelementptr inbounds %struct.mxl5005s_state, ptr %17425, i32 0, i32 24
  %17427 = load i16, ptr %17426, align 4
  %17428 = zext i16 %17427 to i32
  %17429 = icmp eq i16 %17427, 0
  br i1 %17429, label %17451, label %17430

17430:                                            ; preds = %17420
  %17431 = getelementptr %struct.mxl5005s_state, ptr %17406, i32 0, i32 21, i32 %17412, i32 2, i32 %17421
  %17432 = load i16, ptr %17431, align 2
  %17433 = and i16 %17432, 255
  br label %17434

17434:                                            ; preds = %17448, %17430
  %17435 = phi i32 [ 0, %17430 ], [ %17449, %17448 ]
  %17436 = getelementptr %struct.mxl5005s_state, ptr %17425, i32 0, i32 25, i32 %17435
  %17437 = load i16, ptr %17436, align 2
  %17438 = icmp eq i16 %17437, %17433
  br i1 %17438, label %17439, label %17448

17439:                                            ; preds = %17434
  %17440 = and i16 %17424, 255
  %17441 = zext i16 %17440 to i32
  %17442 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17441
  %17443 = load i8, ptr %17442, align 1
  %17444 = zext i8 %17443 to i16
  %17445 = getelementptr %struct.mxl5005s_state, ptr %17425, i32 0, i32 25, i32 %17435, i32 1
  %17446 = load i16, ptr %17445, align 2
  %17447 = and i16 %17446, %17444
  store i16 %17447, ptr %17445, align 2
  br label %17451

17448:                                            ; preds = %17434
  %17449 = add nuw nsw i32 %17435, 1
  %17450 = icmp eq i32 %17449, %17428
  br i1 %17450, label %17451, label %17434

17451:                                            ; preds = %17448, %17439, %17420
  %17452 = add nuw nsw i32 %17421, 1
  %17453 = load i16, ptr %17417, align 2
  %17454 = zext i16 %17453 to i32
  %17455 = icmp ult i32 %17452, %17454
  br i1 %17455, label %17420, label %17456

17456:                                            ; preds = %17451
  %17457 = load i16, ptr %17407, align 2
  br label %17458

17458:                                            ; preds = %17456, %17416, %17410
  %17459 = phi i16 [ %17457, %17456 ], [ %17411, %17416 ], [ %17411, %17410 ]
  %17460 = add nuw nsw i32 %17412, 1
  %17461 = zext i16 %17459 to i32
  %17462 = icmp ult i32 %17460, %17461
  br i1 %17462, label %17410, label %17463

17463:                                            ; preds = %17458, %17405
  %17464 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %17465 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %17466 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %17467 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %17468 = load i32, ptr %5, align 4
  br label %17469

17469:                                            ; preds = %17463, %17338
  %17470 = phi i32 [ %17468, %17463 ], [ %17339, %17338 ]
  %17471 = add i32 %17470, -770000000
  %17472 = icmp ult i32 %17471, 130000001
  br i1 %17472, label %17473, label %17596

17473:                                            ; preds = %17469
  %17474 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %17475 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %17476 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %17477 = load ptr, ptr %3, align 4
  %17478 = getelementptr inbounds %struct.mxl5005s_state, ptr %17477, i32 0, i32 18
  %17479 = load i16, ptr %17478, align 4
  %17480 = icmp eq i16 %17479, 0
  br i1 %17480, label %17536, label %17481

17481:                                            ; preds = %17529, %17473
  %17482 = phi i16 [ %17530, %17529 ], [ %17479, %17473 ]
  %17483 = phi i32 [ %17531, %17529 ], [ 0, %17473 ]
  %17484 = getelementptr %struct.mxl5005s_state, ptr %17477, i32 0, i32 19, i32 %17483
  %17485 = load i16, ptr %17484, align 2
  %17486 = icmp eq i16 %17485, 82
  br i1 %17486, label %17487, label %17529

17487:                                            ; preds = %17481
  %17488 = getelementptr %struct.mxl5005s_state, ptr %17477, i32 0, i32 19, i32 %17483, i32 1
  %17489 = load i16, ptr %17488, align 2
  %17490 = icmp eq i16 %17489, 0
  br i1 %17490, label %17529, label %17491

17491:                                            ; preds = %17522, %17487
  %17492 = phi i32 [ %17523, %17522 ], [ 0, %17487 ]
  %17493 = getelementptr %struct.mxl5005s_state, ptr %17477, i32 0, i32 19, i32 %17483, i32 4, i32 %17492
  store i16 0, ptr %17493, align 2
  %17494 = getelementptr %struct.mxl5005s_state, ptr %17477, i32 0, i32 19, i32 %17483, i32 3, i32 %17492
  %17495 = load i16, ptr %17494, align 2
  %17496 = load ptr, ptr %3, align 4
  %17497 = getelementptr inbounds %struct.mxl5005s_state, ptr %17496, i32 0, i32 24
  %17498 = load i16, ptr %17497, align 4
  %17499 = zext i16 %17498 to i32
  %17500 = icmp eq i16 %17498, 0
  br i1 %17500, label %17522, label %17501

17501:                                            ; preds = %17491
  %17502 = getelementptr %struct.mxl5005s_state, ptr %17477, i32 0, i32 19, i32 %17483, i32 2, i32 %17492
  %17503 = load i16, ptr %17502, align 2
  %17504 = and i16 %17503, 255
  br label %17505

17505:                                            ; preds = %17519, %17501
  %17506 = phi i32 [ 0, %17501 ], [ %17520, %17519 ]
  %17507 = getelementptr %struct.mxl5005s_state, ptr %17496, i32 0, i32 25, i32 %17506
  %17508 = load i16, ptr %17507, align 2
  %17509 = icmp eq i16 %17508, %17504
  br i1 %17509, label %17510, label %17519

17510:                                            ; preds = %17505
  %17511 = and i16 %17495, 255
  %17512 = zext i16 %17511 to i32
  %17513 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17512
  %17514 = load i8, ptr %17513, align 1
  %17515 = zext i8 %17514 to i16
  %17516 = getelementptr %struct.mxl5005s_state, ptr %17496, i32 0, i32 25, i32 %17506, i32 1
  %17517 = load i16, ptr %17516, align 2
  %17518 = and i16 %17517, %17515
  store i16 %17518, ptr %17516, align 2
  br label %17522

17519:                                            ; preds = %17505
  %17520 = add nuw nsw i32 %17506, 1
  %17521 = icmp eq i32 %17520, %17499
  br i1 %17521, label %17522, label %17505

17522:                                            ; preds = %17519, %17510, %17491
  %17523 = add nuw nsw i32 %17492, 1
  %17524 = load i16, ptr %17488, align 2
  %17525 = zext i16 %17524 to i32
  %17526 = icmp ult i32 %17523, %17525
  br i1 %17526, label %17491, label %17527

17527:                                            ; preds = %17522
  %17528 = load i16, ptr %17478, align 4
  br label %17529

17529:                                            ; preds = %17527, %17487, %17481
  %17530 = phi i16 [ %17528, %17527 ], [ %17482, %17487 ], [ %17482, %17481 ]
  %17531 = add nuw nsw i32 %17483, 1
  %17532 = zext i16 %17530 to i32
  %17533 = icmp ult i32 %17531, %17532
  br i1 %17533, label %17481, label %17534

17534:                                            ; preds = %17529
  %17535 = load ptr, ptr %3, align 4
  br label %17536

17536:                                            ; preds = %17534, %17473
  %17537 = phi ptr [ %17535, %17534 ], [ %17477, %17473 ]
  %17538 = getelementptr inbounds %struct.mxl5005s_state, ptr %17537, i32 0, i32 20
  %17539 = load i16, ptr %17538, align 2
  %17540 = icmp eq i16 %17539, 0
  br i1 %17540, label %17594, label %17541

17541:                                            ; preds = %17589, %17536
  %17542 = phi i16 [ %17590, %17589 ], [ %17539, %17536 ]
  %17543 = phi i32 [ %17591, %17589 ], [ 0, %17536 ]
  %17544 = getelementptr %struct.mxl5005s_state, ptr %17537, i32 0, i32 21, i32 %17543
  %17545 = load i16, ptr %17544, align 2
  %17546 = icmp eq i16 %17545, 82
  br i1 %17546, label %17547, label %17589

17547:                                            ; preds = %17541
  %17548 = getelementptr %struct.mxl5005s_state, ptr %17537, i32 0, i32 21, i32 %17543, i32 1
  %17549 = load i16, ptr %17548, align 2
  %17550 = icmp eq i16 %17549, 0
  br i1 %17550, label %17589, label %17551

17551:                                            ; preds = %17582, %17547
  %17552 = phi i32 [ %17583, %17582 ], [ 0, %17547 ]
  %17553 = getelementptr %struct.mxl5005s_state, ptr %17537, i32 0, i32 21, i32 %17543, i32 4, i32 %17552
  store i16 0, ptr %17553, align 2
  %17554 = getelementptr %struct.mxl5005s_state, ptr %17537, i32 0, i32 21, i32 %17543, i32 3, i32 %17552
  %17555 = load i16, ptr %17554, align 2
  %17556 = load ptr, ptr %3, align 4
  %17557 = getelementptr inbounds %struct.mxl5005s_state, ptr %17556, i32 0, i32 24
  %17558 = load i16, ptr %17557, align 4
  %17559 = zext i16 %17558 to i32
  %17560 = icmp eq i16 %17558, 0
  br i1 %17560, label %17582, label %17561

17561:                                            ; preds = %17551
  %17562 = getelementptr %struct.mxl5005s_state, ptr %17537, i32 0, i32 21, i32 %17543, i32 2, i32 %17552
  %17563 = load i16, ptr %17562, align 2
  %17564 = and i16 %17563, 255
  br label %17565

17565:                                            ; preds = %17579, %17561
  %17566 = phi i32 [ 0, %17561 ], [ %17580, %17579 ]
  %17567 = getelementptr %struct.mxl5005s_state, ptr %17556, i32 0, i32 25, i32 %17566
  %17568 = load i16, ptr %17567, align 2
  %17569 = icmp eq i16 %17568, %17564
  br i1 %17569, label %17570, label %17579

17570:                                            ; preds = %17565
  %17571 = and i16 %17555, 255
  %17572 = zext i16 %17571 to i32
  %17573 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17572
  %17574 = load i8, ptr %17573, align 1
  %17575 = zext i8 %17574 to i16
  %17576 = getelementptr %struct.mxl5005s_state, ptr %17556, i32 0, i32 25, i32 %17566, i32 1
  %17577 = load i16, ptr %17576, align 2
  %17578 = and i16 %17577, %17575
  store i16 %17578, ptr %17576, align 2
  br label %17582

17579:                                            ; preds = %17565
  %17580 = add nuw nsw i32 %17566, 1
  %17581 = icmp eq i32 %17580, %17559
  br i1 %17581, label %17582, label %17565

17582:                                            ; preds = %17579, %17570, %17551
  %17583 = add nuw nsw i32 %17552, 1
  %17584 = load i16, ptr %17548, align 2
  %17585 = zext i16 %17584 to i32
  %17586 = icmp ult i32 %17583, %17585
  br i1 %17586, label %17551, label %17587

17587:                                            ; preds = %17582
  %17588 = load i16, ptr %17538, align 2
  br label %17589

17589:                                            ; preds = %17587, %17547, %17541
  %17590 = phi i16 [ %17588, %17587 ], [ %17542, %17547 ], [ %17542, %17541 ]
  %17591 = add nuw nsw i32 %17543, 1
  %17592 = zext i16 %17590 to i32
  %17593 = icmp ult i32 %17591, %17592
  br i1 %17593, label %17541, label %17594

17594:                                            ; preds = %17589, %17536
  %17595 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %17596

17596:                                            ; preds = %17594, %17469, %16333
  %17597 = load i8, ptr %7001, align 1
  %17598 = icmp eq i8 %17597, 10
  br i1 %17598, label %17599, label %18873

17599:                                            ; preds = %17596
  %17600 = load ptr, ptr %3, align 4
  %17601 = getelementptr inbounds %struct.mxl5005s_state, ptr %17600, i32 0, i32 18
  %17602 = load i16, ptr %17601, align 4
  %17603 = icmp eq i16 %17602, 0
  br i1 %17603, label %17659, label %17604

17604:                                            ; preds = %17652, %17599
  %17605 = phi i16 [ %17653, %17652 ], [ %17602, %17599 ]
  %17606 = phi i32 [ %17654, %17652 ], [ 0, %17599 ]
  %17607 = getelementptr %struct.mxl5005s_state, ptr %17600, i32 0, i32 19, i32 %17606
  %17608 = load i16, ptr %17607, align 2
  %17609 = icmp eq i16 %17608, 86
  br i1 %17609, label %17610, label %17652

17610:                                            ; preds = %17604
  %17611 = getelementptr %struct.mxl5005s_state, ptr %17600, i32 0, i32 19, i32 %17606, i32 1
  %17612 = load i16, ptr %17611, align 2
  %17613 = icmp eq i16 %17612, 0
  br i1 %17613, label %17652, label %17614

17614:                                            ; preds = %17645, %17610
  %17615 = phi i32 [ %17646, %17645 ], [ 0, %17610 ]
  %17616 = getelementptr %struct.mxl5005s_state, ptr %17600, i32 0, i32 19, i32 %17606, i32 4, i32 %17615
  store i16 0, ptr %17616, align 2
  %17617 = getelementptr %struct.mxl5005s_state, ptr %17600, i32 0, i32 19, i32 %17606, i32 3, i32 %17615
  %17618 = load i16, ptr %17617, align 2
  %17619 = load ptr, ptr %3, align 4
  %17620 = getelementptr inbounds %struct.mxl5005s_state, ptr %17619, i32 0, i32 24
  %17621 = load i16, ptr %17620, align 4
  %17622 = zext i16 %17621 to i32
  %17623 = icmp eq i16 %17621, 0
  br i1 %17623, label %17645, label %17624

17624:                                            ; preds = %17614
  %17625 = getelementptr %struct.mxl5005s_state, ptr %17600, i32 0, i32 19, i32 %17606, i32 2, i32 %17615
  %17626 = load i16, ptr %17625, align 2
  %17627 = and i16 %17626, 255
  br label %17628

17628:                                            ; preds = %17642, %17624
  %17629 = phi i32 [ 0, %17624 ], [ %17643, %17642 ]
  %17630 = getelementptr %struct.mxl5005s_state, ptr %17619, i32 0, i32 25, i32 %17629
  %17631 = load i16, ptr %17630, align 2
  %17632 = icmp eq i16 %17631, %17627
  br i1 %17632, label %17633, label %17642

17633:                                            ; preds = %17628
  %17634 = and i16 %17618, 255
  %17635 = zext i16 %17634 to i32
  %17636 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17635
  %17637 = load i8, ptr %17636, align 1
  %17638 = zext i8 %17637 to i16
  %17639 = getelementptr %struct.mxl5005s_state, ptr %17619, i32 0, i32 25, i32 %17629, i32 1
  %17640 = load i16, ptr %17639, align 2
  %17641 = and i16 %17640, %17638
  store i16 %17641, ptr %17639, align 2
  br label %17645

17642:                                            ; preds = %17628
  %17643 = add nuw nsw i32 %17629, 1
  %17644 = icmp eq i32 %17643, %17622
  br i1 %17644, label %17645, label %17628

17645:                                            ; preds = %17642, %17633, %17614
  %17646 = add nuw nsw i32 %17615, 1
  %17647 = load i16, ptr %17611, align 2
  %17648 = zext i16 %17647 to i32
  %17649 = icmp ult i32 %17646, %17648
  br i1 %17649, label %17614, label %17650

17650:                                            ; preds = %17645
  %17651 = load i16, ptr %17601, align 4
  br label %17652

17652:                                            ; preds = %17650, %17610, %17604
  %17653 = phi i16 [ %17651, %17650 ], [ %17605, %17610 ], [ %17605, %17604 ]
  %17654 = add nuw nsw i32 %17606, 1
  %17655 = zext i16 %17653 to i32
  %17656 = icmp ult i32 %17654, %17655
  br i1 %17656, label %17604, label %17657

17657:                                            ; preds = %17652
  %17658 = load ptr, ptr %3, align 4
  br label %17659

17659:                                            ; preds = %17657, %17599
  %17660 = phi ptr [ %17658, %17657 ], [ %17600, %17599 ]
  %17661 = getelementptr inbounds %struct.mxl5005s_state, ptr %17660, i32 0, i32 20
  %17662 = load i16, ptr %17661, align 2
  %17663 = icmp eq i16 %17662, 0
  br i1 %17663, label %17717, label %17664

17664:                                            ; preds = %17712, %17659
  %17665 = phi i16 [ %17713, %17712 ], [ %17662, %17659 ]
  %17666 = phi i32 [ %17714, %17712 ], [ 0, %17659 ]
  %17667 = getelementptr %struct.mxl5005s_state, ptr %17660, i32 0, i32 21, i32 %17666
  %17668 = load i16, ptr %17667, align 2
  %17669 = icmp eq i16 %17668, 86
  br i1 %17669, label %17670, label %17712

17670:                                            ; preds = %17664
  %17671 = getelementptr %struct.mxl5005s_state, ptr %17660, i32 0, i32 21, i32 %17666, i32 1
  %17672 = load i16, ptr %17671, align 2
  %17673 = icmp eq i16 %17672, 0
  br i1 %17673, label %17712, label %17674

17674:                                            ; preds = %17705, %17670
  %17675 = phi i32 [ %17706, %17705 ], [ 0, %17670 ]
  %17676 = getelementptr %struct.mxl5005s_state, ptr %17660, i32 0, i32 21, i32 %17666, i32 4, i32 %17675
  store i16 0, ptr %17676, align 2
  %17677 = getelementptr %struct.mxl5005s_state, ptr %17660, i32 0, i32 21, i32 %17666, i32 3, i32 %17675
  %17678 = load i16, ptr %17677, align 2
  %17679 = load ptr, ptr %3, align 4
  %17680 = getelementptr inbounds %struct.mxl5005s_state, ptr %17679, i32 0, i32 24
  %17681 = load i16, ptr %17680, align 4
  %17682 = zext i16 %17681 to i32
  %17683 = icmp eq i16 %17681, 0
  br i1 %17683, label %17705, label %17684

17684:                                            ; preds = %17674
  %17685 = getelementptr %struct.mxl5005s_state, ptr %17660, i32 0, i32 21, i32 %17666, i32 2, i32 %17675
  %17686 = load i16, ptr %17685, align 2
  %17687 = and i16 %17686, 255
  br label %17688

17688:                                            ; preds = %17702, %17684
  %17689 = phi i32 [ 0, %17684 ], [ %17703, %17702 ]
  %17690 = getelementptr %struct.mxl5005s_state, ptr %17679, i32 0, i32 25, i32 %17689
  %17691 = load i16, ptr %17690, align 2
  %17692 = icmp eq i16 %17691, %17687
  br i1 %17692, label %17693, label %17702

17693:                                            ; preds = %17688
  %17694 = and i16 %17678, 255
  %17695 = zext i16 %17694 to i32
  %17696 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17695
  %17697 = load i8, ptr %17696, align 1
  %17698 = zext i8 %17697 to i16
  %17699 = getelementptr %struct.mxl5005s_state, ptr %17679, i32 0, i32 25, i32 %17689, i32 1
  %17700 = load i16, ptr %17699, align 2
  %17701 = and i16 %17700, %17698
  store i16 %17701, ptr %17699, align 2
  br label %17705

17702:                                            ; preds = %17688
  %17703 = add nuw nsw i32 %17689, 1
  %17704 = icmp eq i32 %17703, %17682
  br i1 %17704, label %17705, label %17688

17705:                                            ; preds = %17702, %17693, %17674
  %17706 = add nuw nsw i32 %17675, 1
  %17707 = load i16, ptr %17671, align 2
  %17708 = zext i16 %17707 to i32
  %17709 = icmp ult i32 %17706, %17708
  br i1 %17709, label %17674, label %17710

17710:                                            ; preds = %17705
  %17711 = load i16, ptr %17661, align 2
  br label %17712

17712:                                            ; preds = %17710, %17670, %17664
  %17713 = phi i16 [ %17711, %17710 ], [ %17665, %17670 ], [ %17665, %17664 ]
  %17714 = add nuw nsw i32 %17666, 1
  %17715 = zext i16 %17713 to i32
  %17716 = icmp ult i32 %17714, %17715
  br i1 %17716, label %17664, label %17717

17717:                                            ; preds = %17712, %17659
  %17718 = load i32, ptr %5, align 4
  %17719 = add i32 %17718, -50000000
  %17720 = icmp ult i32 %17719, 140000000
  br i1 %17720, label %17721, label %17964

17721:                                            ; preds = %17717
  %17722 = load ptr, ptr %3, align 4
  %17723 = getelementptr inbounds %struct.mxl5005s_state, ptr %17722, i32 0, i32 18
  %17724 = load i16, ptr %17723, align 4
  %17725 = icmp eq i16 %17724, 0
  br i1 %17725, label %17781, label %17726

17726:                                            ; preds = %17774, %17721
  %17727 = phi i16 [ %17775, %17774 ], [ %17724, %17721 ]
  %17728 = phi i32 [ %17776, %17774 ], [ 0, %17721 ]
  %17729 = getelementptr %struct.mxl5005s_state, ptr %17722, i32 0, i32 19, i32 %17728
  %17730 = load i16, ptr %17729, align 2
  %17731 = icmp eq i16 %17730, 84
  br i1 %17731, label %17732, label %17774

17732:                                            ; preds = %17726
  %17733 = getelementptr %struct.mxl5005s_state, ptr %17722, i32 0, i32 19, i32 %17728, i32 1
  %17734 = load i16, ptr %17733, align 2
  %17735 = icmp eq i16 %17734, 0
  br i1 %17735, label %17774, label %17736

17736:                                            ; preds = %17767, %17732
  %17737 = phi i32 [ %17768, %17767 ], [ 0, %17732 ]
  %17738 = getelementptr %struct.mxl5005s_state, ptr %17722, i32 0, i32 19, i32 %17728, i32 4, i32 %17737
  store i16 0, ptr %17738, align 2
  %17739 = getelementptr %struct.mxl5005s_state, ptr %17722, i32 0, i32 19, i32 %17728, i32 3, i32 %17737
  %17740 = load i16, ptr %17739, align 2
  %17741 = load ptr, ptr %3, align 4
  %17742 = getelementptr inbounds %struct.mxl5005s_state, ptr %17741, i32 0, i32 24
  %17743 = load i16, ptr %17742, align 4
  %17744 = zext i16 %17743 to i32
  %17745 = icmp eq i16 %17743, 0
  br i1 %17745, label %17767, label %17746

17746:                                            ; preds = %17736
  %17747 = getelementptr %struct.mxl5005s_state, ptr %17722, i32 0, i32 19, i32 %17728, i32 2, i32 %17737
  %17748 = load i16, ptr %17747, align 2
  %17749 = and i16 %17748, 255
  br label %17750

17750:                                            ; preds = %17764, %17746
  %17751 = phi i32 [ 0, %17746 ], [ %17765, %17764 ]
  %17752 = getelementptr %struct.mxl5005s_state, ptr %17741, i32 0, i32 25, i32 %17751
  %17753 = load i16, ptr %17752, align 2
  %17754 = icmp eq i16 %17753, %17749
  br i1 %17754, label %17755, label %17764

17755:                                            ; preds = %17750
  %17756 = and i16 %17740, 255
  %17757 = zext i16 %17756 to i32
  %17758 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17757
  %17759 = load i8, ptr %17758, align 1
  %17760 = zext i8 %17759 to i16
  %17761 = getelementptr %struct.mxl5005s_state, ptr %17741, i32 0, i32 25, i32 %17751, i32 1
  %17762 = load i16, ptr %17761, align 2
  %17763 = and i16 %17762, %17760
  store i16 %17763, ptr %17761, align 2
  br label %17767

17764:                                            ; preds = %17750
  %17765 = add nuw nsw i32 %17751, 1
  %17766 = icmp eq i32 %17765, %17744
  br i1 %17766, label %17767, label %17750

17767:                                            ; preds = %17764, %17755, %17736
  %17768 = add nuw nsw i32 %17737, 1
  %17769 = load i16, ptr %17733, align 2
  %17770 = zext i16 %17769 to i32
  %17771 = icmp ult i32 %17768, %17770
  br i1 %17771, label %17736, label %17772

17772:                                            ; preds = %17767
  %17773 = load i16, ptr %17723, align 4
  br label %17774

17774:                                            ; preds = %17772, %17732, %17726
  %17775 = phi i16 [ %17773, %17772 ], [ %17727, %17732 ], [ %17727, %17726 ]
  %17776 = add nuw nsw i32 %17728, 1
  %17777 = zext i16 %17775 to i32
  %17778 = icmp ult i32 %17776, %17777
  br i1 %17778, label %17726, label %17779

17779:                                            ; preds = %17774
  %17780 = load ptr, ptr %3, align 4
  br label %17781

17781:                                            ; preds = %17779, %17721
  %17782 = phi ptr [ %17780, %17779 ], [ %17722, %17721 ]
  %17783 = getelementptr inbounds %struct.mxl5005s_state, ptr %17782, i32 0, i32 20
  %17784 = load i16, ptr %17783, align 2
  %17785 = icmp eq i16 %17784, 0
  br i1 %17785, label %17839, label %17786

17786:                                            ; preds = %17834, %17781
  %17787 = phi i16 [ %17835, %17834 ], [ %17784, %17781 ]
  %17788 = phi i32 [ %17836, %17834 ], [ 0, %17781 ]
  %17789 = getelementptr %struct.mxl5005s_state, ptr %17782, i32 0, i32 21, i32 %17788
  %17790 = load i16, ptr %17789, align 2
  %17791 = icmp eq i16 %17790, 84
  br i1 %17791, label %17792, label %17834

17792:                                            ; preds = %17786
  %17793 = getelementptr %struct.mxl5005s_state, ptr %17782, i32 0, i32 21, i32 %17788, i32 1
  %17794 = load i16, ptr %17793, align 2
  %17795 = icmp eq i16 %17794, 0
  br i1 %17795, label %17834, label %17796

17796:                                            ; preds = %17827, %17792
  %17797 = phi i32 [ %17828, %17827 ], [ 0, %17792 ]
  %17798 = getelementptr %struct.mxl5005s_state, ptr %17782, i32 0, i32 21, i32 %17788, i32 4, i32 %17797
  store i16 0, ptr %17798, align 2
  %17799 = getelementptr %struct.mxl5005s_state, ptr %17782, i32 0, i32 21, i32 %17788, i32 3, i32 %17797
  %17800 = load i16, ptr %17799, align 2
  %17801 = load ptr, ptr %3, align 4
  %17802 = getelementptr inbounds %struct.mxl5005s_state, ptr %17801, i32 0, i32 24
  %17803 = load i16, ptr %17802, align 4
  %17804 = zext i16 %17803 to i32
  %17805 = icmp eq i16 %17803, 0
  br i1 %17805, label %17827, label %17806

17806:                                            ; preds = %17796
  %17807 = getelementptr %struct.mxl5005s_state, ptr %17782, i32 0, i32 21, i32 %17788, i32 2, i32 %17797
  %17808 = load i16, ptr %17807, align 2
  %17809 = and i16 %17808, 255
  br label %17810

17810:                                            ; preds = %17824, %17806
  %17811 = phi i32 [ 0, %17806 ], [ %17825, %17824 ]
  %17812 = getelementptr %struct.mxl5005s_state, ptr %17801, i32 0, i32 25, i32 %17811
  %17813 = load i16, ptr %17812, align 2
  %17814 = icmp eq i16 %17813, %17809
  br i1 %17814, label %17815, label %17824

17815:                                            ; preds = %17810
  %17816 = and i16 %17800, 255
  %17817 = zext i16 %17816 to i32
  %17818 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17817
  %17819 = load i8, ptr %17818, align 1
  %17820 = zext i8 %17819 to i16
  %17821 = getelementptr %struct.mxl5005s_state, ptr %17801, i32 0, i32 25, i32 %17811, i32 1
  %17822 = load i16, ptr %17821, align 2
  %17823 = and i16 %17822, %17820
  store i16 %17823, ptr %17821, align 2
  br label %17827

17824:                                            ; preds = %17810
  %17825 = add nuw nsw i32 %17811, 1
  %17826 = icmp eq i32 %17825, %17804
  br i1 %17826, label %17827, label %17810

17827:                                            ; preds = %17824, %17815, %17796
  %17828 = add nuw nsw i32 %17797, 1
  %17829 = load i16, ptr %17793, align 2
  %17830 = zext i16 %17829 to i32
  %17831 = icmp ult i32 %17828, %17830
  br i1 %17831, label %17796, label %17832

17832:                                            ; preds = %17827
  %17833 = load i16, ptr %17783, align 2
  br label %17834

17834:                                            ; preds = %17832, %17792, %17786
  %17835 = phi i16 [ %17833, %17832 ], [ %17787, %17792 ], [ %17787, %17786 ]
  %17836 = add nuw nsw i32 %17788, 1
  %17837 = zext i16 %17835 to i32
  %17838 = icmp ult i32 %17836, %17837
  br i1 %17838, label %17786, label %17839

17839:                                            ; preds = %17834, %17781
  %17840 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %17841 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %17842 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %17843 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %17844 = load ptr, ptr %3, align 4
  %17845 = getelementptr inbounds %struct.mxl5005s_state, ptr %17844, i32 0, i32 18
  %17846 = load i16, ptr %17845, align 4
  %17847 = icmp eq i16 %17846, 0
  br i1 %17847, label %17903, label %17848

17848:                                            ; preds = %17896, %17839
  %17849 = phi i16 [ %17897, %17896 ], [ %17846, %17839 ]
  %17850 = phi i32 [ %17898, %17896 ], [ 0, %17839 ]
  %17851 = getelementptr %struct.mxl5005s_state, ptr %17844, i32 0, i32 19, i32 %17850
  %17852 = load i16, ptr %17851, align 2
  %17853 = icmp eq i16 %17852, 82
  br i1 %17853, label %17854, label %17896

17854:                                            ; preds = %17848
  %17855 = getelementptr %struct.mxl5005s_state, ptr %17844, i32 0, i32 19, i32 %17850, i32 1
  %17856 = load i16, ptr %17855, align 2
  %17857 = icmp eq i16 %17856, 0
  br i1 %17857, label %17896, label %17858

17858:                                            ; preds = %17889, %17854
  %17859 = phi i32 [ %17890, %17889 ], [ 0, %17854 ]
  %17860 = getelementptr %struct.mxl5005s_state, ptr %17844, i32 0, i32 19, i32 %17850, i32 4, i32 %17859
  store i16 0, ptr %17860, align 2
  %17861 = getelementptr %struct.mxl5005s_state, ptr %17844, i32 0, i32 19, i32 %17850, i32 3, i32 %17859
  %17862 = load i16, ptr %17861, align 2
  %17863 = load ptr, ptr %3, align 4
  %17864 = getelementptr inbounds %struct.mxl5005s_state, ptr %17863, i32 0, i32 24
  %17865 = load i16, ptr %17864, align 4
  %17866 = zext i16 %17865 to i32
  %17867 = icmp eq i16 %17865, 0
  br i1 %17867, label %17889, label %17868

17868:                                            ; preds = %17858
  %17869 = getelementptr %struct.mxl5005s_state, ptr %17844, i32 0, i32 19, i32 %17850, i32 2, i32 %17859
  %17870 = load i16, ptr %17869, align 2
  %17871 = and i16 %17870, 255
  br label %17872

17872:                                            ; preds = %17886, %17868
  %17873 = phi i32 [ 0, %17868 ], [ %17887, %17886 ]
  %17874 = getelementptr %struct.mxl5005s_state, ptr %17863, i32 0, i32 25, i32 %17873
  %17875 = load i16, ptr %17874, align 2
  %17876 = icmp eq i16 %17875, %17871
  br i1 %17876, label %17877, label %17886

17877:                                            ; preds = %17872
  %17878 = and i16 %17862, 255
  %17879 = zext i16 %17878 to i32
  %17880 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17879
  %17881 = load i8, ptr %17880, align 1
  %17882 = zext i8 %17881 to i16
  %17883 = getelementptr %struct.mxl5005s_state, ptr %17863, i32 0, i32 25, i32 %17873, i32 1
  %17884 = load i16, ptr %17883, align 2
  %17885 = and i16 %17884, %17882
  store i16 %17885, ptr %17883, align 2
  br label %17889

17886:                                            ; preds = %17872
  %17887 = add nuw nsw i32 %17873, 1
  %17888 = icmp eq i32 %17887, %17866
  br i1 %17888, label %17889, label %17872

17889:                                            ; preds = %17886, %17877, %17858
  %17890 = add nuw nsw i32 %17859, 1
  %17891 = load i16, ptr %17855, align 2
  %17892 = zext i16 %17891 to i32
  %17893 = icmp ult i32 %17890, %17892
  br i1 %17893, label %17858, label %17894

17894:                                            ; preds = %17889
  %17895 = load i16, ptr %17845, align 4
  br label %17896

17896:                                            ; preds = %17894, %17854, %17848
  %17897 = phi i16 [ %17895, %17894 ], [ %17849, %17854 ], [ %17849, %17848 ]
  %17898 = add nuw nsw i32 %17850, 1
  %17899 = zext i16 %17897 to i32
  %17900 = icmp ult i32 %17898, %17899
  br i1 %17900, label %17848, label %17901

17901:                                            ; preds = %17896
  %17902 = load ptr, ptr %3, align 4
  br label %17903

17903:                                            ; preds = %17901, %17839
  %17904 = phi ptr [ %17902, %17901 ], [ %17844, %17839 ]
  %17905 = getelementptr inbounds %struct.mxl5005s_state, ptr %17904, i32 0, i32 20
  %17906 = load i16, ptr %17905, align 2
  %17907 = icmp eq i16 %17906, 0
  br i1 %17907, label %17961, label %17908

17908:                                            ; preds = %17956, %17903
  %17909 = phi i16 [ %17957, %17956 ], [ %17906, %17903 ]
  %17910 = phi i32 [ %17958, %17956 ], [ 0, %17903 ]
  %17911 = getelementptr %struct.mxl5005s_state, ptr %17904, i32 0, i32 21, i32 %17910
  %17912 = load i16, ptr %17911, align 2
  %17913 = icmp eq i16 %17912, 82
  br i1 %17913, label %17914, label %17956

17914:                                            ; preds = %17908
  %17915 = getelementptr %struct.mxl5005s_state, ptr %17904, i32 0, i32 21, i32 %17910, i32 1
  %17916 = load i16, ptr %17915, align 2
  %17917 = icmp eq i16 %17916, 0
  br i1 %17917, label %17956, label %17918

17918:                                            ; preds = %17949, %17914
  %17919 = phi i32 [ %17950, %17949 ], [ 0, %17914 ]
  %17920 = getelementptr %struct.mxl5005s_state, ptr %17904, i32 0, i32 21, i32 %17910, i32 4, i32 %17919
  store i16 0, ptr %17920, align 2
  %17921 = getelementptr %struct.mxl5005s_state, ptr %17904, i32 0, i32 21, i32 %17910, i32 3, i32 %17919
  %17922 = load i16, ptr %17921, align 2
  %17923 = load ptr, ptr %3, align 4
  %17924 = getelementptr inbounds %struct.mxl5005s_state, ptr %17923, i32 0, i32 24
  %17925 = load i16, ptr %17924, align 4
  %17926 = zext i16 %17925 to i32
  %17927 = icmp eq i16 %17925, 0
  br i1 %17927, label %17949, label %17928

17928:                                            ; preds = %17918
  %17929 = getelementptr %struct.mxl5005s_state, ptr %17904, i32 0, i32 21, i32 %17910, i32 2, i32 %17919
  %17930 = load i16, ptr %17929, align 2
  %17931 = and i16 %17930, 255
  br label %17932

17932:                                            ; preds = %17946, %17928
  %17933 = phi i32 [ 0, %17928 ], [ %17947, %17946 ]
  %17934 = getelementptr %struct.mxl5005s_state, ptr %17923, i32 0, i32 25, i32 %17933
  %17935 = load i16, ptr %17934, align 2
  %17936 = icmp eq i16 %17935, %17931
  br i1 %17936, label %17937, label %17946

17937:                                            ; preds = %17932
  %17938 = and i16 %17922, 255
  %17939 = zext i16 %17938 to i32
  %17940 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %17939
  %17941 = load i8, ptr %17940, align 1
  %17942 = zext i8 %17941 to i16
  %17943 = getelementptr %struct.mxl5005s_state, ptr %17923, i32 0, i32 25, i32 %17933, i32 1
  %17944 = load i16, ptr %17943, align 2
  %17945 = and i16 %17944, %17942
  store i16 %17945, ptr %17943, align 2
  br label %17949

17946:                                            ; preds = %17932
  %17947 = add nuw nsw i32 %17933, 1
  %17948 = icmp eq i32 %17947, %17926
  br i1 %17948, label %17949, label %17932

17949:                                            ; preds = %17946, %17937, %17918
  %17950 = add nuw nsw i32 %17919, 1
  %17951 = load i16, ptr %17915, align 2
  %17952 = zext i16 %17951 to i32
  %17953 = icmp ult i32 %17950, %17952
  br i1 %17953, label %17918, label %17954

17954:                                            ; preds = %17949
  %17955 = load i16, ptr %17905, align 2
  br label %17956

17956:                                            ; preds = %17954, %17914, %17908
  %17957 = phi i16 [ %17955, %17954 ], [ %17909, %17914 ], [ %17909, %17908 ]
  %17958 = add nuw nsw i32 %17910, 1
  %17959 = zext i16 %17957 to i32
  %17960 = icmp ult i32 %17958, %17959
  br i1 %17960, label %17908, label %17961

17961:                                            ; preds = %17956, %17903
  %17962 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %17963 = load i32, ptr %5, align 4
  br label %17964

17964:                                            ; preds = %17961, %17717
  %17965 = phi i32 [ %17963, %17961 ], [ %17718, %17717 ]
  %17966 = add i32 %17965, -190000000
  %17967 = icmp ult i32 %17966, 90000000
  br i1 %17967, label %17968, label %18095

17968:                                            ; preds = %17964
  %17969 = load ptr, ptr %3, align 4
  %17970 = getelementptr inbounds %struct.mxl5005s_state, ptr %17969, i32 0, i32 18
  %17971 = load i16, ptr %17970, align 4
  %17972 = icmp eq i16 %17971, 0
  br i1 %17972, label %18028, label %17973

17973:                                            ; preds = %18021, %17968
  %17974 = phi i16 [ %18022, %18021 ], [ %17971, %17968 ]
  %17975 = phi i32 [ %18023, %18021 ], [ 0, %17968 ]
  %17976 = getelementptr %struct.mxl5005s_state, ptr %17969, i32 0, i32 19, i32 %17975
  %17977 = load i16, ptr %17976, align 2
  %17978 = icmp eq i16 %17977, 84
  br i1 %17978, label %17979, label %18021

17979:                                            ; preds = %17973
  %17980 = getelementptr %struct.mxl5005s_state, ptr %17969, i32 0, i32 19, i32 %17975, i32 1
  %17981 = load i16, ptr %17980, align 2
  %17982 = icmp eq i16 %17981, 0
  br i1 %17982, label %18021, label %17983

17983:                                            ; preds = %18014, %17979
  %17984 = phi i32 [ %18015, %18014 ], [ 0, %17979 ]
  %17985 = getelementptr %struct.mxl5005s_state, ptr %17969, i32 0, i32 19, i32 %17975, i32 4, i32 %17984
  store i16 0, ptr %17985, align 2
  %17986 = getelementptr %struct.mxl5005s_state, ptr %17969, i32 0, i32 19, i32 %17975, i32 3, i32 %17984
  %17987 = load i16, ptr %17986, align 2
  %17988 = load ptr, ptr %3, align 4
  %17989 = getelementptr inbounds %struct.mxl5005s_state, ptr %17988, i32 0, i32 24
  %17990 = load i16, ptr %17989, align 4
  %17991 = zext i16 %17990 to i32
  %17992 = icmp eq i16 %17990, 0
  br i1 %17992, label %18014, label %17993

17993:                                            ; preds = %17983
  %17994 = getelementptr %struct.mxl5005s_state, ptr %17969, i32 0, i32 19, i32 %17975, i32 2, i32 %17984
  %17995 = load i16, ptr %17994, align 2
  %17996 = and i16 %17995, 255
  br label %17997

17997:                                            ; preds = %18011, %17993
  %17998 = phi i32 [ 0, %17993 ], [ %18012, %18011 ]
  %17999 = getelementptr %struct.mxl5005s_state, ptr %17988, i32 0, i32 25, i32 %17998
  %18000 = load i16, ptr %17999, align 2
  %18001 = icmp eq i16 %18000, %17996
  br i1 %18001, label %18002, label %18011

18002:                                            ; preds = %17997
  %18003 = and i16 %17987, 255
  %18004 = zext i16 %18003 to i32
  %18005 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18004
  %18006 = load i8, ptr %18005, align 1
  %18007 = zext i8 %18006 to i16
  %18008 = getelementptr %struct.mxl5005s_state, ptr %17988, i32 0, i32 25, i32 %17998, i32 1
  %18009 = load i16, ptr %18008, align 2
  %18010 = and i16 %18009, %18007
  store i16 %18010, ptr %18008, align 2
  br label %18014

18011:                                            ; preds = %17997
  %18012 = add nuw nsw i32 %17998, 1
  %18013 = icmp eq i32 %18012, %17991
  br i1 %18013, label %18014, label %17997

18014:                                            ; preds = %18011, %18002, %17983
  %18015 = add nuw nsw i32 %17984, 1
  %18016 = load i16, ptr %17980, align 2
  %18017 = zext i16 %18016 to i32
  %18018 = icmp ult i32 %18015, %18017
  br i1 %18018, label %17983, label %18019

18019:                                            ; preds = %18014
  %18020 = load i16, ptr %17970, align 4
  br label %18021

18021:                                            ; preds = %18019, %17979, %17973
  %18022 = phi i16 [ %18020, %18019 ], [ %17974, %17979 ], [ %17974, %17973 ]
  %18023 = add nuw nsw i32 %17975, 1
  %18024 = zext i16 %18022 to i32
  %18025 = icmp ult i32 %18023, %18024
  br i1 %18025, label %17973, label %18026

18026:                                            ; preds = %18021
  %18027 = load ptr, ptr %3, align 4
  br label %18028

18028:                                            ; preds = %18026, %17968
  %18029 = phi ptr [ %18027, %18026 ], [ %17969, %17968 ]
  %18030 = getelementptr inbounds %struct.mxl5005s_state, ptr %18029, i32 0, i32 20
  %18031 = load i16, ptr %18030, align 2
  %18032 = icmp eq i16 %18031, 0
  br i1 %18032, label %18086, label %18033

18033:                                            ; preds = %18081, %18028
  %18034 = phi i16 [ %18082, %18081 ], [ %18031, %18028 ]
  %18035 = phi i32 [ %18083, %18081 ], [ 0, %18028 ]
  %18036 = getelementptr %struct.mxl5005s_state, ptr %18029, i32 0, i32 21, i32 %18035
  %18037 = load i16, ptr %18036, align 2
  %18038 = icmp eq i16 %18037, 84
  br i1 %18038, label %18039, label %18081

18039:                                            ; preds = %18033
  %18040 = getelementptr %struct.mxl5005s_state, ptr %18029, i32 0, i32 21, i32 %18035, i32 1
  %18041 = load i16, ptr %18040, align 2
  %18042 = icmp eq i16 %18041, 0
  br i1 %18042, label %18081, label %18043

18043:                                            ; preds = %18074, %18039
  %18044 = phi i32 [ %18075, %18074 ], [ 0, %18039 ]
  %18045 = getelementptr %struct.mxl5005s_state, ptr %18029, i32 0, i32 21, i32 %18035, i32 4, i32 %18044
  store i16 0, ptr %18045, align 2
  %18046 = getelementptr %struct.mxl5005s_state, ptr %18029, i32 0, i32 21, i32 %18035, i32 3, i32 %18044
  %18047 = load i16, ptr %18046, align 2
  %18048 = load ptr, ptr %3, align 4
  %18049 = getelementptr inbounds %struct.mxl5005s_state, ptr %18048, i32 0, i32 24
  %18050 = load i16, ptr %18049, align 4
  %18051 = zext i16 %18050 to i32
  %18052 = icmp eq i16 %18050, 0
  br i1 %18052, label %18074, label %18053

18053:                                            ; preds = %18043
  %18054 = getelementptr %struct.mxl5005s_state, ptr %18029, i32 0, i32 21, i32 %18035, i32 2, i32 %18044
  %18055 = load i16, ptr %18054, align 2
  %18056 = and i16 %18055, 255
  br label %18057

18057:                                            ; preds = %18071, %18053
  %18058 = phi i32 [ 0, %18053 ], [ %18072, %18071 ]
  %18059 = getelementptr %struct.mxl5005s_state, ptr %18048, i32 0, i32 25, i32 %18058
  %18060 = load i16, ptr %18059, align 2
  %18061 = icmp eq i16 %18060, %18056
  br i1 %18061, label %18062, label %18071

18062:                                            ; preds = %18057
  %18063 = and i16 %18047, 255
  %18064 = zext i16 %18063 to i32
  %18065 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18064
  %18066 = load i8, ptr %18065, align 1
  %18067 = zext i8 %18066 to i16
  %18068 = getelementptr %struct.mxl5005s_state, ptr %18048, i32 0, i32 25, i32 %18058, i32 1
  %18069 = load i16, ptr %18068, align 2
  %18070 = and i16 %18069, %18067
  store i16 %18070, ptr %18068, align 2
  br label %18074

18071:                                            ; preds = %18057
  %18072 = add nuw nsw i32 %18058, 1
  %18073 = icmp eq i32 %18072, %18051
  br i1 %18073, label %18074, label %18057

18074:                                            ; preds = %18071, %18062, %18043
  %18075 = add nuw nsw i32 %18044, 1
  %18076 = load i16, ptr %18040, align 2
  %18077 = zext i16 %18076 to i32
  %18078 = icmp ult i32 %18075, %18077
  br i1 %18078, label %18043, label %18079

18079:                                            ; preds = %18074
  %18080 = load i16, ptr %18030, align 2
  br label %18081

18081:                                            ; preds = %18079, %18039, %18033
  %18082 = phi i16 [ %18080, %18079 ], [ %18034, %18039 ], [ %18034, %18033 ]
  %18083 = add nuw nsw i32 %18035, 1
  %18084 = zext i16 %18082 to i32
  %18085 = icmp ult i32 %18083, %18084
  br i1 %18085, label %18033, label %18086

18086:                                            ; preds = %18081, %18028
  %18087 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %18088 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %18089 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %18090 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %18091 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %18092 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %18093 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %18094 = load i32, ptr %5, align 4
  br label %18095

18095:                                            ; preds = %18086, %17964
  %18096 = phi i32 [ %18094, %18086 ], [ %17965, %17964 ]
  %18097 = add i32 %18096, -280000000
  %18098 = icmp ult i32 %18097, 70000000
  br i1 %18098, label %18099, label %18223

18099:                                            ; preds = %18095
  %18100 = load ptr, ptr %3, align 4
  %18101 = getelementptr inbounds %struct.mxl5005s_state, ptr %18100, i32 0, i32 18
  %18102 = load i16, ptr %18101, align 4
  %18103 = icmp eq i16 %18102, 0
  br i1 %18103, label %18159, label %18104

18104:                                            ; preds = %18152, %18099
  %18105 = phi i16 [ %18153, %18152 ], [ %18102, %18099 ]
  %18106 = phi i32 [ %18154, %18152 ], [ 0, %18099 ]
  %18107 = getelementptr %struct.mxl5005s_state, ptr %18100, i32 0, i32 19, i32 %18106
  %18108 = load i16, ptr %18107, align 2
  %18109 = icmp eq i16 %18108, 84
  br i1 %18109, label %18110, label %18152

18110:                                            ; preds = %18104
  %18111 = getelementptr %struct.mxl5005s_state, ptr %18100, i32 0, i32 19, i32 %18106, i32 1
  %18112 = load i16, ptr %18111, align 2
  %18113 = icmp eq i16 %18112, 0
  br i1 %18113, label %18152, label %18114

18114:                                            ; preds = %18145, %18110
  %18115 = phi i32 [ %18146, %18145 ], [ 0, %18110 ]
  %18116 = getelementptr %struct.mxl5005s_state, ptr %18100, i32 0, i32 19, i32 %18106, i32 4, i32 %18115
  store i16 0, ptr %18116, align 2
  %18117 = getelementptr %struct.mxl5005s_state, ptr %18100, i32 0, i32 19, i32 %18106, i32 3, i32 %18115
  %18118 = load i16, ptr %18117, align 2
  %18119 = load ptr, ptr %3, align 4
  %18120 = getelementptr inbounds %struct.mxl5005s_state, ptr %18119, i32 0, i32 24
  %18121 = load i16, ptr %18120, align 4
  %18122 = zext i16 %18121 to i32
  %18123 = icmp eq i16 %18121, 0
  br i1 %18123, label %18145, label %18124

18124:                                            ; preds = %18114
  %18125 = getelementptr %struct.mxl5005s_state, ptr %18100, i32 0, i32 19, i32 %18106, i32 2, i32 %18115
  %18126 = load i16, ptr %18125, align 2
  %18127 = and i16 %18126, 255
  br label %18128

18128:                                            ; preds = %18142, %18124
  %18129 = phi i32 [ 0, %18124 ], [ %18143, %18142 ]
  %18130 = getelementptr %struct.mxl5005s_state, ptr %18119, i32 0, i32 25, i32 %18129
  %18131 = load i16, ptr %18130, align 2
  %18132 = icmp eq i16 %18131, %18127
  br i1 %18132, label %18133, label %18142

18133:                                            ; preds = %18128
  %18134 = and i16 %18118, 255
  %18135 = zext i16 %18134 to i32
  %18136 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18135
  %18137 = load i8, ptr %18136, align 1
  %18138 = zext i8 %18137 to i16
  %18139 = getelementptr %struct.mxl5005s_state, ptr %18119, i32 0, i32 25, i32 %18129, i32 1
  %18140 = load i16, ptr %18139, align 2
  %18141 = and i16 %18140, %18138
  store i16 %18141, ptr %18139, align 2
  br label %18145

18142:                                            ; preds = %18128
  %18143 = add nuw nsw i32 %18129, 1
  %18144 = icmp eq i32 %18143, %18122
  br i1 %18144, label %18145, label %18128

18145:                                            ; preds = %18142, %18133, %18114
  %18146 = add nuw nsw i32 %18115, 1
  %18147 = load i16, ptr %18111, align 2
  %18148 = zext i16 %18147 to i32
  %18149 = icmp ult i32 %18146, %18148
  br i1 %18149, label %18114, label %18150

18150:                                            ; preds = %18145
  %18151 = load i16, ptr %18101, align 4
  br label %18152

18152:                                            ; preds = %18150, %18110, %18104
  %18153 = phi i16 [ %18151, %18150 ], [ %18105, %18110 ], [ %18105, %18104 ]
  %18154 = add nuw nsw i32 %18106, 1
  %18155 = zext i16 %18153 to i32
  %18156 = icmp ult i32 %18154, %18155
  br i1 %18156, label %18104, label %18157

18157:                                            ; preds = %18152
  %18158 = load ptr, ptr %3, align 4
  br label %18159

18159:                                            ; preds = %18157, %18099
  %18160 = phi ptr [ %18158, %18157 ], [ %18100, %18099 ]
  %18161 = getelementptr inbounds %struct.mxl5005s_state, ptr %18160, i32 0, i32 20
  %18162 = load i16, ptr %18161, align 2
  %18163 = icmp eq i16 %18162, 0
  br i1 %18163, label %18217, label %18164

18164:                                            ; preds = %18212, %18159
  %18165 = phi i16 [ %18213, %18212 ], [ %18162, %18159 ]
  %18166 = phi i32 [ %18214, %18212 ], [ 0, %18159 ]
  %18167 = getelementptr %struct.mxl5005s_state, ptr %18160, i32 0, i32 21, i32 %18166
  %18168 = load i16, ptr %18167, align 2
  %18169 = icmp eq i16 %18168, 84
  br i1 %18169, label %18170, label %18212

18170:                                            ; preds = %18164
  %18171 = getelementptr %struct.mxl5005s_state, ptr %18160, i32 0, i32 21, i32 %18166, i32 1
  %18172 = load i16, ptr %18171, align 2
  %18173 = icmp eq i16 %18172, 0
  br i1 %18173, label %18212, label %18174

18174:                                            ; preds = %18205, %18170
  %18175 = phi i32 [ %18206, %18205 ], [ 0, %18170 ]
  %18176 = getelementptr %struct.mxl5005s_state, ptr %18160, i32 0, i32 21, i32 %18166, i32 4, i32 %18175
  store i16 0, ptr %18176, align 2
  %18177 = getelementptr %struct.mxl5005s_state, ptr %18160, i32 0, i32 21, i32 %18166, i32 3, i32 %18175
  %18178 = load i16, ptr %18177, align 2
  %18179 = load ptr, ptr %3, align 4
  %18180 = getelementptr inbounds %struct.mxl5005s_state, ptr %18179, i32 0, i32 24
  %18181 = load i16, ptr %18180, align 4
  %18182 = zext i16 %18181 to i32
  %18183 = icmp eq i16 %18181, 0
  br i1 %18183, label %18205, label %18184

18184:                                            ; preds = %18174
  %18185 = getelementptr %struct.mxl5005s_state, ptr %18160, i32 0, i32 21, i32 %18166, i32 2, i32 %18175
  %18186 = load i16, ptr %18185, align 2
  %18187 = and i16 %18186, 255
  br label %18188

18188:                                            ; preds = %18202, %18184
  %18189 = phi i32 [ 0, %18184 ], [ %18203, %18202 ]
  %18190 = getelementptr %struct.mxl5005s_state, ptr %18179, i32 0, i32 25, i32 %18189
  %18191 = load i16, ptr %18190, align 2
  %18192 = icmp eq i16 %18191, %18187
  br i1 %18192, label %18193, label %18202

18193:                                            ; preds = %18188
  %18194 = and i16 %18178, 255
  %18195 = zext i16 %18194 to i32
  %18196 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18195
  %18197 = load i8, ptr %18196, align 1
  %18198 = zext i8 %18197 to i16
  %18199 = getelementptr %struct.mxl5005s_state, ptr %18179, i32 0, i32 25, i32 %18189, i32 1
  %18200 = load i16, ptr %18199, align 2
  %18201 = and i16 %18200, %18198
  store i16 %18201, ptr %18199, align 2
  br label %18205

18202:                                            ; preds = %18188
  %18203 = add nuw nsw i32 %18189, 1
  %18204 = icmp eq i32 %18203, %18182
  br i1 %18204, label %18205, label %18188

18205:                                            ; preds = %18202, %18193, %18174
  %18206 = add nuw nsw i32 %18175, 1
  %18207 = load i16, ptr %18171, align 2
  %18208 = zext i16 %18207 to i32
  %18209 = icmp ult i32 %18206, %18208
  br i1 %18209, label %18174, label %18210

18210:                                            ; preds = %18205
  %18211 = load i16, ptr %18161, align 2
  br label %18212

18212:                                            ; preds = %18210, %18170, %18164
  %18213 = phi i16 [ %18211, %18210 ], [ %18165, %18170 ], [ %18165, %18164 ]
  %18214 = add nuw nsw i32 %18166, 1
  %18215 = zext i16 %18213 to i32
  %18216 = icmp ult i32 %18214, %18215
  br i1 %18216, label %18164, label %18217

18217:                                            ; preds = %18212, %18159
  %18218 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %18219 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %18220 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %18221 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %18222 = load i32, ptr %5, align 4
  br label %18223

18223:                                            ; preds = %18217, %18095
  %18224 = phi i32 [ %18222, %18217 ], [ %18096, %18095 ]
  %18225 = add i32 %18224, -350000000
  %18226 = icmp ult i32 %18225, 50000000
  br i1 %18226, label %18227, label %18354

18227:                                            ; preds = %18223
  %18228 = load ptr, ptr %3, align 4
  %18229 = getelementptr inbounds %struct.mxl5005s_state, ptr %18228, i32 0, i32 18
  %18230 = load i16, ptr %18229, align 4
  %18231 = icmp eq i16 %18230, 0
  br i1 %18231, label %18287, label %18232

18232:                                            ; preds = %18280, %18227
  %18233 = phi i16 [ %18281, %18280 ], [ %18230, %18227 ]
  %18234 = phi i32 [ %18282, %18280 ], [ 0, %18227 ]
  %18235 = getelementptr %struct.mxl5005s_state, ptr %18228, i32 0, i32 19, i32 %18234
  %18236 = load i16, ptr %18235, align 2
  %18237 = icmp eq i16 %18236, 84
  br i1 %18237, label %18238, label %18280

18238:                                            ; preds = %18232
  %18239 = getelementptr %struct.mxl5005s_state, ptr %18228, i32 0, i32 19, i32 %18234, i32 1
  %18240 = load i16, ptr %18239, align 2
  %18241 = icmp eq i16 %18240, 0
  br i1 %18241, label %18280, label %18242

18242:                                            ; preds = %18273, %18238
  %18243 = phi i32 [ %18274, %18273 ], [ 0, %18238 ]
  %18244 = getelementptr %struct.mxl5005s_state, ptr %18228, i32 0, i32 19, i32 %18234, i32 4, i32 %18243
  store i16 0, ptr %18244, align 2
  %18245 = getelementptr %struct.mxl5005s_state, ptr %18228, i32 0, i32 19, i32 %18234, i32 3, i32 %18243
  %18246 = load i16, ptr %18245, align 2
  %18247 = load ptr, ptr %3, align 4
  %18248 = getelementptr inbounds %struct.mxl5005s_state, ptr %18247, i32 0, i32 24
  %18249 = load i16, ptr %18248, align 4
  %18250 = zext i16 %18249 to i32
  %18251 = icmp eq i16 %18249, 0
  br i1 %18251, label %18273, label %18252

18252:                                            ; preds = %18242
  %18253 = getelementptr %struct.mxl5005s_state, ptr %18228, i32 0, i32 19, i32 %18234, i32 2, i32 %18243
  %18254 = load i16, ptr %18253, align 2
  %18255 = and i16 %18254, 255
  br label %18256

18256:                                            ; preds = %18270, %18252
  %18257 = phi i32 [ 0, %18252 ], [ %18271, %18270 ]
  %18258 = getelementptr %struct.mxl5005s_state, ptr %18247, i32 0, i32 25, i32 %18257
  %18259 = load i16, ptr %18258, align 2
  %18260 = icmp eq i16 %18259, %18255
  br i1 %18260, label %18261, label %18270

18261:                                            ; preds = %18256
  %18262 = and i16 %18246, 255
  %18263 = zext i16 %18262 to i32
  %18264 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18263
  %18265 = load i8, ptr %18264, align 1
  %18266 = zext i8 %18265 to i16
  %18267 = getelementptr %struct.mxl5005s_state, ptr %18247, i32 0, i32 25, i32 %18257, i32 1
  %18268 = load i16, ptr %18267, align 2
  %18269 = and i16 %18268, %18266
  store i16 %18269, ptr %18267, align 2
  br label %18273

18270:                                            ; preds = %18256
  %18271 = add nuw nsw i32 %18257, 1
  %18272 = icmp eq i32 %18271, %18250
  br i1 %18272, label %18273, label %18256

18273:                                            ; preds = %18270, %18261, %18242
  %18274 = add nuw nsw i32 %18243, 1
  %18275 = load i16, ptr %18239, align 2
  %18276 = zext i16 %18275 to i32
  %18277 = icmp ult i32 %18274, %18276
  br i1 %18277, label %18242, label %18278

18278:                                            ; preds = %18273
  %18279 = load i16, ptr %18229, align 4
  br label %18280

18280:                                            ; preds = %18278, %18238, %18232
  %18281 = phi i16 [ %18279, %18278 ], [ %18233, %18238 ], [ %18233, %18232 ]
  %18282 = add nuw nsw i32 %18234, 1
  %18283 = zext i16 %18281 to i32
  %18284 = icmp ult i32 %18282, %18283
  br i1 %18284, label %18232, label %18285

18285:                                            ; preds = %18280
  %18286 = load ptr, ptr %3, align 4
  br label %18287

18287:                                            ; preds = %18285, %18227
  %18288 = phi ptr [ %18286, %18285 ], [ %18228, %18227 ]
  %18289 = getelementptr inbounds %struct.mxl5005s_state, ptr %18288, i32 0, i32 20
  %18290 = load i16, ptr %18289, align 2
  %18291 = icmp eq i16 %18290, 0
  br i1 %18291, label %18345, label %18292

18292:                                            ; preds = %18340, %18287
  %18293 = phi i16 [ %18341, %18340 ], [ %18290, %18287 ]
  %18294 = phi i32 [ %18342, %18340 ], [ 0, %18287 ]
  %18295 = getelementptr %struct.mxl5005s_state, ptr %18288, i32 0, i32 21, i32 %18294
  %18296 = load i16, ptr %18295, align 2
  %18297 = icmp eq i16 %18296, 84
  br i1 %18297, label %18298, label %18340

18298:                                            ; preds = %18292
  %18299 = getelementptr %struct.mxl5005s_state, ptr %18288, i32 0, i32 21, i32 %18294, i32 1
  %18300 = load i16, ptr %18299, align 2
  %18301 = icmp eq i16 %18300, 0
  br i1 %18301, label %18340, label %18302

18302:                                            ; preds = %18333, %18298
  %18303 = phi i32 [ %18334, %18333 ], [ 0, %18298 ]
  %18304 = getelementptr %struct.mxl5005s_state, ptr %18288, i32 0, i32 21, i32 %18294, i32 4, i32 %18303
  store i16 0, ptr %18304, align 2
  %18305 = getelementptr %struct.mxl5005s_state, ptr %18288, i32 0, i32 21, i32 %18294, i32 3, i32 %18303
  %18306 = load i16, ptr %18305, align 2
  %18307 = load ptr, ptr %3, align 4
  %18308 = getelementptr inbounds %struct.mxl5005s_state, ptr %18307, i32 0, i32 24
  %18309 = load i16, ptr %18308, align 4
  %18310 = zext i16 %18309 to i32
  %18311 = icmp eq i16 %18309, 0
  br i1 %18311, label %18333, label %18312

18312:                                            ; preds = %18302
  %18313 = getelementptr %struct.mxl5005s_state, ptr %18288, i32 0, i32 21, i32 %18294, i32 2, i32 %18303
  %18314 = load i16, ptr %18313, align 2
  %18315 = and i16 %18314, 255
  br label %18316

18316:                                            ; preds = %18330, %18312
  %18317 = phi i32 [ 0, %18312 ], [ %18331, %18330 ]
  %18318 = getelementptr %struct.mxl5005s_state, ptr %18307, i32 0, i32 25, i32 %18317
  %18319 = load i16, ptr %18318, align 2
  %18320 = icmp eq i16 %18319, %18315
  br i1 %18320, label %18321, label %18330

18321:                                            ; preds = %18316
  %18322 = and i16 %18306, 255
  %18323 = zext i16 %18322 to i32
  %18324 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18323
  %18325 = load i8, ptr %18324, align 1
  %18326 = zext i8 %18325 to i16
  %18327 = getelementptr %struct.mxl5005s_state, ptr %18307, i32 0, i32 25, i32 %18317, i32 1
  %18328 = load i16, ptr %18327, align 2
  %18329 = and i16 %18328, %18326
  store i16 %18329, ptr %18327, align 2
  br label %18333

18330:                                            ; preds = %18316
  %18331 = add nuw nsw i32 %18317, 1
  %18332 = icmp eq i32 %18331, %18310
  br i1 %18332, label %18333, label %18316

18333:                                            ; preds = %18330, %18321, %18302
  %18334 = add nuw nsw i32 %18303, 1
  %18335 = load i16, ptr %18299, align 2
  %18336 = zext i16 %18335 to i32
  %18337 = icmp ult i32 %18334, %18336
  br i1 %18337, label %18302, label %18338

18338:                                            ; preds = %18333
  %18339 = load i16, ptr %18289, align 2
  br label %18340

18340:                                            ; preds = %18338, %18298, %18292
  %18341 = phi i16 [ %18339, %18338 ], [ %18293, %18298 ], [ %18293, %18292 ]
  %18342 = add nuw nsw i32 %18294, 1
  %18343 = zext i16 %18341 to i32
  %18344 = icmp ult i32 %18342, %18343
  br i1 %18344, label %18292, label %18345

18345:                                            ; preds = %18340, %18287
  %18346 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %18347 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %18348 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %18349 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %18350 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %18351 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %18352 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %18353 = load i32, ptr %5, align 4
  br label %18354

18354:                                            ; preds = %18345, %18223
  %18355 = phi i32 [ %18353, %18345 ], [ %18224, %18223 ]
  %18356 = add i32 %18355, -400000000
  %18357 = icmp ult i32 %18356, 70000000
  br i1 %18357, label %18358, label %18366

18358:                                            ; preds = %18354
  %18359 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %18360 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %18361 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %18362 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %18363 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %18364 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %18365 = load i32, ptr %5, align 4
  br label %18366

18366:                                            ; preds = %18358, %18354
  %18367 = phi i32 [ %18365, %18358 ], [ %18355, %18354 ]
  %18368 = add i32 %18367, -470000000
  %18369 = icmp ult i32 %18368, 170000000
  br i1 %18369, label %18370, label %18613

18370:                                            ; preds = %18366
  %18371 = load ptr, ptr %3, align 4
  %18372 = getelementptr inbounds %struct.mxl5005s_state, ptr %18371, i32 0, i32 18
  %18373 = load i16, ptr %18372, align 4
  %18374 = icmp eq i16 %18373, 0
  br i1 %18374, label %18430, label %18375

18375:                                            ; preds = %18423, %18370
  %18376 = phi i16 [ %18424, %18423 ], [ %18373, %18370 ]
  %18377 = phi i32 [ %18425, %18423 ], [ 0, %18370 ]
  %18378 = getelementptr %struct.mxl5005s_state, ptr %18371, i32 0, i32 19, i32 %18377
  %18379 = load i16, ptr %18378, align 2
  %18380 = icmp eq i16 %18379, 84
  br i1 %18380, label %18381, label %18423

18381:                                            ; preds = %18375
  %18382 = getelementptr %struct.mxl5005s_state, ptr %18371, i32 0, i32 19, i32 %18377, i32 1
  %18383 = load i16, ptr %18382, align 2
  %18384 = icmp eq i16 %18383, 0
  br i1 %18384, label %18423, label %18385

18385:                                            ; preds = %18416, %18381
  %18386 = phi i32 [ %18417, %18416 ], [ 0, %18381 ]
  %18387 = getelementptr %struct.mxl5005s_state, ptr %18371, i32 0, i32 19, i32 %18377, i32 4, i32 %18386
  store i16 0, ptr %18387, align 2
  %18388 = getelementptr %struct.mxl5005s_state, ptr %18371, i32 0, i32 19, i32 %18377, i32 3, i32 %18386
  %18389 = load i16, ptr %18388, align 2
  %18390 = load ptr, ptr %3, align 4
  %18391 = getelementptr inbounds %struct.mxl5005s_state, ptr %18390, i32 0, i32 24
  %18392 = load i16, ptr %18391, align 4
  %18393 = zext i16 %18392 to i32
  %18394 = icmp eq i16 %18392, 0
  br i1 %18394, label %18416, label %18395

18395:                                            ; preds = %18385
  %18396 = getelementptr %struct.mxl5005s_state, ptr %18371, i32 0, i32 19, i32 %18377, i32 2, i32 %18386
  %18397 = load i16, ptr %18396, align 2
  %18398 = and i16 %18397, 255
  br label %18399

18399:                                            ; preds = %18413, %18395
  %18400 = phi i32 [ 0, %18395 ], [ %18414, %18413 ]
  %18401 = getelementptr %struct.mxl5005s_state, ptr %18390, i32 0, i32 25, i32 %18400
  %18402 = load i16, ptr %18401, align 2
  %18403 = icmp eq i16 %18402, %18398
  br i1 %18403, label %18404, label %18413

18404:                                            ; preds = %18399
  %18405 = and i16 %18389, 255
  %18406 = zext i16 %18405 to i32
  %18407 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18406
  %18408 = load i8, ptr %18407, align 1
  %18409 = zext i8 %18408 to i16
  %18410 = getelementptr %struct.mxl5005s_state, ptr %18390, i32 0, i32 25, i32 %18400, i32 1
  %18411 = load i16, ptr %18410, align 2
  %18412 = and i16 %18411, %18409
  store i16 %18412, ptr %18410, align 2
  br label %18416

18413:                                            ; preds = %18399
  %18414 = add nuw nsw i32 %18400, 1
  %18415 = icmp eq i32 %18414, %18393
  br i1 %18415, label %18416, label %18399

18416:                                            ; preds = %18413, %18404, %18385
  %18417 = add nuw nsw i32 %18386, 1
  %18418 = load i16, ptr %18382, align 2
  %18419 = zext i16 %18418 to i32
  %18420 = icmp ult i32 %18417, %18419
  br i1 %18420, label %18385, label %18421

18421:                                            ; preds = %18416
  %18422 = load i16, ptr %18372, align 4
  br label %18423

18423:                                            ; preds = %18421, %18381, %18375
  %18424 = phi i16 [ %18422, %18421 ], [ %18376, %18381 ], [ %18376, %18375 ]
  %18425 = add nuw nsw i32 %18377, 1
  %18426 = zext i16 %18424 to i32
  %18427 = icmp ult i32 %18425, %18426
  br i1 %18427, label %18375, label %18428

18428:                                            ; preds = %18423
  %18429 = load ptr, ptr %3, align 4
  br label %18430

18430:                                            ; preds = %18428, %18370
  %18431 = phi ptr [ %18429, %18428 ], [ %18371, %18370 ]
  %18432 = getelementptr inbounds %struct.mxl5005s_state, ptr %18431, i32 0, i32 20
  %18433 = load i16, ptr %18432, align 2
  %18434 = icmp eq i16 %18433, 0
  br i1 %18434, label %18488, label %18435

18435:                                            ; preds = %18483, %18430
  %18436 = phi i16 [ %18484, %18483 ], [ %18433, %18430 ]
  %18437 = phi i32 [ %18485, %18483 ], [ 0, %18430 ]
  %18438 = getelementptr %struct.mxl5005s_state, ptr %18431, i32 0, i32 21, i32 %18437
  %18439 = load i16, ptr %18438, align 2
  %18440 = icmp eq i16 %18439, 84
  br i1 %18440, label %18441, label %18483

18441:                                            ; preds = %18435
  %18442 = getelementptr %struct.mxl5005s_state, ptr %18431, i32 0, i32 21, i32 %18437, i32 1
  %18443 = load i16, ptr %18442, align 2
  %18444 = icmp eq i16 %18443, 0
  br i1 %18444, label %18483, label %18445

18445:                                            ; preds = %18476, %18441
  %18446 = phi i32 [ %18477, %18476 ], [ 0, %18441 ]
  %18447 = getelementptr %struct.mxl5005s_state, ptr %18431, i32 0, i32 21, i32 %18437, i32 4, i32 %18446
  store i16 0, ptr %18447, align 2
  %18448 = getelementptr %struct.mxl5005s_state, ptr %18431, i32 0, i32 21, i32 %18437, i32 3, i32 %18446
  %18449 = load i16, ptr %18448, align 2
  %18450 = load ptr, ptr %3, align 4
  %18451 = getelementptr inbounds %struct.mxl5005s_state, ptr %18450, i32 0, i32 24
  %18452 = load i16, ptr %18451, align 4
  %18453 = zext i16 %18452 to i32
  %18454 = icmp eq i16 %18452, 0
  br i1 %18454, label %18476, label %18455

18455:                                            ; preds = %18445
  %18456 = getelementptr %struct.mxl5005s_state, ptr %18431, i32 0, i32 21, i32 %18437, i32 2, i32 %18446
  %18457 = load i16, ptr %18456, align 2
  %18458 = and i16 %18457, 255
  br label %18459

18459:                                            ; preds = %18473, %18455
  %18460 = phi i32 [ 0, %18455 ], [ %18474, %18473 ]
  %18461 = getelementptr %struct.mxl5005s_state, ptr %18450, i32 0, i32 25, i32 %18460
  %18462 = load i16, ptr %18461, align 2
  %18463 = icmp eq i16 %18462, %18458
  br i1 %18463, label %18464, label %18473

18464:                                            ; preds = %18459
  %18465 = and i16 %18449, 255
  %18466 = zext i16 %18465 to i32
  %18467 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18466
  %18468 = load i8, ptr %18467, align 1
  %18469 = zext i8 %18468 to i16
  %18470 = getelementptr %struct.mxl5005s_state, ptr %18450, i32 0, i32 25, i32 %18460, i32 1
  %18471 = load i16, ptr %18470, align 2
  %18472 = and i16 %18471, %18469
  store i16 %18472, ptr %18470, align 2
  br label %18476

18473:                                            ; preds = %18459
  %18474 = add nuw nsw i32 %18460, 1
  %18475 = icmp eq i32 %18474, %18453
  br i1 %18475, label %18476, label %18459

18476:                                            ; preds = %18473, %18464, %18445
  %18477 = add nuw nsw i32 %18446, 1
  %18478 = load i16, ptr %18442, align 2
  %18479 = zext i16 %18478 to i32
  %18480 = icmp ult i32 %18477, %18479
  br i1 %18480, label %18445, label %18481

18481:                                            ; preds = %18476
  %18482 = load i16, ptr %18432, align 2
  br label %18483

18483:                                            ; preds = %18481, %18441, %18435
  %18484 = phi i16 [ %18482, %18481 ], [ %18436, %18441 ], [ %18436, %18435 ]
  %18485 = add nuw nsw i32 %18437, 1
  %18486 = zext i16 %18484 to i32
  %18487 = icmp ult i32 %18485, %18486
  br i1 %18487, label %18435, label %18488

18488:                                            ; preds = %18483, %18430
  %18489 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %18490 = load ptr, ptr %3, align 4
  %18491 = getelementptr inbounds %struct.mxl5005s_state, ptr %18490, i32 0, i32 18
  %18492 = load i16, ptr %18491, align 4
  %18493 = icmp eq i16 %18492, 0
  br i1 %18493, label %18549, label %18494

18494:                                            ; preds = %18542, %18488
  %18495 = phi i16 [ %18543, %18542 ], [ %18492, %18488 ]
  %18496 = phi i32 [ %18544, %18542 ], [ 0, %18488 ]
  %18497 = getelementptr %struct.mxl5005s_state, ptr %18490, i32 0, i32 19, i32 %18496
  %18498 = load i16, ptr %18497, align 2
  %18499 = icmp eq i16 %18498, 82
  br i1 %18499, label %18500, label %18542

18500:                                            ; preds = %18494
  %18501 = getelementptr %struct.mxl5005s_state, ptr %18490, i32 0, i32 19, i32 %18496, i32 1
  %18502 = load i16, ptr %18501, align 2
  %18503 = icmp eq i16 %18502, 0
  br i1 %18503, label %18542, label %18504

18504:                                            ; preds = %18535, %18500
  %18505 = phi i32 [ %18536, %18535 ], [ 0, %18500 ]
  %18506 = getelementptr %struct.mxl5005s_state, ptr %18490, i32 0, i32 19, i32 %18496, i32 4, i32 %18505
  store i16 0, ptr %18506, align 2
  %18507 = getelementptr %struct.mxl5005s_state, ptr %18490, i32 0, i32 19, i32 %18496, i32 3, i32 %18505
  %18508 = load i16, ptr %18507, align 2
  %18509 = load ptr, ptr %3, align 4
  %18510 = getelementptr inbounds %struct.mxl5005s_state, ptr %18509, i32 0, i32 24
  %18511 = load i16, ptr %18510, align 4
  %18512 = zext i16 %18511 to i32
  %18513 = icmp eq i16 %18511, 0
  br i1 %18513, label %18535, label %18514

18514:                                            ; preds = %18504
  %18515 = getelementptr %struct.mxl5005s_state, ptr %18490, i32 0, i32 19, i32 %18496, i32 2, i32 %18505
  %18516 = load i16, ptr %18515, align 2
  %18517 = and i16 %18516, 255
  br label %18518

18518:                                            ; preds = %18532, %18514
  %18519 = phi i32 [ 0, %18514 ], [ %18533, %18532 ]
  %18520 = getelementptr %struct.mxl5005s_state, ptr %18509, i32 0, i32 25, i32 %18519
  %18521 = load i16, ptr %18520, align 2
  %18522 = icmp eq i16 %18521, %18517
  br i1 %18522, label %18523, label %18532

18523:                                            ; preds = %18518
  %18524 = and i16 %18508, 255
  %18525 = zext i16 %18524 to i32
  %18526 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18525
  %18527 = load i8, ptr %18526, align 1
  %18528 = zext i8 %18527 to i16
  %18529 = getelementptr %struct.mxl5005s_state, ptr %18509, i32 0, i32 25, i32 %18519, i32 1
  %18530 = load i16, ptr %18529, align 2
  %18531 = and i16 %18530, %18528
  store i16 %18531, ptr %18529, align 2
  br label %18535

18532:                                            ; preds = %18518
  %18533 = add nuw nsw i32 %18519, 1
  %18534 = icmp eq i32 %18533, %18512
  br i1 %18534, label %18535, label %18518

18535:                                            ; preds = %18532, %18523, %18504
  %18536 = add nuw nsw i32 %18505, 1
  %18537 = load i16, ptr %18501, align 2
  %18538 = zext i16 %18537 to i32
  %18539 = icmp ult i32 %18536, %18538
  br i1 %18539, label %18504, label %18540

18540:                                            ; preds = %18535
  %18541 = load i16, ptr %18491, align 4
  br label %18542

18542:                                            ; preds = %18540, %18500, %18494
  %18543 = phi i16 [ %18541, %18540 ], [ %18495, %18500 ], [ %18495, %18494 ]
  %18544 = add nuw nsw i32 %18496, 1
  %18545 = zext i16 %18543 to i32
  %18546 = icmp ult i32 %18544, %18545
  br i1 %18546, label %18494, label %18547

18547:                                            ; preds = %18542
  %18548 = load ptr, ptr %3, align 4
  br label %18549

18549:                                            ; preds = %18547, %18488
  %18550 = phi ptr [ %18548, %18547 ], [ %18490, %18488 ]
  %18551 = getelementptr inbounds %struct.mxl5005s_state, ptr %18550, i32 0, i32 20
  %18552 = load i16, ptr %18551, align 2
  %18553 = icmp eq i16 %18552, 0
  br i1 %18553, label %18607, label %18554

18554:                                            ; preds = %18602, %18549
  %18555 = phi i16 [ %18603, %18602 ], [ %18552, %18549 ]
  %18556 = phi i32 [ %18604, %18602 ], [ 0, %18549 ]
  %18557 = getelementptr %struct.mxl5005s_state, ptr %18550, i32 0, i32 21, i32 %18556
  %18558 = load i16, ptr %18557, align 2
  %18559 = icmp eq i16 %18558, 82
  br i1 %18559, label %18560, label %18602

18560:                                            ; preds = %18554
  %18561 = getelementptr %struct.mxl5005s_state, ptr %18550, i32 0, i32 21, i32 %18556, i32 1
  %18562 = load i16, ptr %18561, align 2
  %18563 = icmp eq i16 %18562, 0
  br i1 %18563, label %18602, label %18564

18564:                                            ; preds = %18595, %18560
  %18565 = phi i32 [ %18596, %18595 ], [ 0, %18560 ]
  %18566 = getelementptr %struct.mxl5005s_state, ptr %18550, i32 0, i32 21, i32 %18556, i32 4, i32 %18565
  store i16 0, ptr %18566, align 2
  %18567 = getelementptr %struct.mxl5005s_state, ptr %18550, i32 0, i32 21, i32 %18556, i32 3, i32 %18565
  %18568 = load i16, ptr %18567, align 2
  %18569 = load ptr, ptr %3, align 4
  %18570 = getelementptr inbounds %struct.mxl5005s_state, ptr %18569, i32 0, i32 24
  %18571 = load i16, ptr %18570, align 4
  %18572 = zext i16 %18571 to i32
  %18573 = icmp eq i16 %18571, 0
  br i1 %18573, label %18595, label %18574

18574:                                            ; preds = %18564
  %18575 = getelementptr %struct.mxl5005s_state, ptr %18550, i32 0, i32 21, i32 %18556, i32 2, i32 %18565
  %18576 = load i16, ptr %18575, align 2
  %18577 = and i16 %18576, 255
  br label %18578

18578:                                            ; preds = %18592, %18574
  %18579 = phi i32 [ 0, %18574 ], [ %18593, %18592 ]
  %18580 = getelementptr %struct.mxl5005s_state, ptr %18569, i32 0, i32 25, i32 %18579
  %18581 = load i16, ptr %18580, align 2
  %18582 = icmp eq i16 %18581, %18577
  br i1 %18582, label %18583, label %18592

18583:                                            ; preds = %18578
  %18584 = and i16 %18568, 255
  %18585 = zext i16 %18584 to i32
  %18586 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18585
  %18587 = load i8, ptr %18586, align 1
  %18588 = zext i8 %18587 to i16
  %18589 = getelementptr %struct.mxl5005s_state, ptr %18569, i32 0, i32 25, i32 %18579, i32 1
  %18590 = load i16, ptr %18589, align 2
  %18591 = and i16 %18590, %18588
  store i16 %18591, ptr %18589, align 2
  br label %18595

18592:                                            ; preds = %18578
  %18593 = add nuw nsw i32 %18579, 1
  %18594 = icmp eq i32 %18593, %18572
  br i1 %18594, label %18595, label %18578

18595:                                            ; preds = %18592, %18583, %18564
  %18596 = add nuw nsw i32 %18565, 1
  %18597 = load i16, ptr %18561, align 2
  %18598 = zext i16 %18597 to i32
  %18599 = icmp ult i32 %18596, %18598
  br i1 %18599, label %18564, label %18600

18600:                                            ; preds = %18595
  %18601 = load i16, ptr %18551, align 2
  br label %18602

18602:                                            ; preds = %18600, %18560, %18554
  %18603 = phi i16 [ %18601, %18600 ], [ %18555, %18560 ], [ %18555, %18554 ]
  %18604 = add nuw nsw i32 %18556, 1
  %18605 = zext i16 %18603 to i32
  %18606 = icmp ult i32 %18604, %18605
  br i1 %18606, label %18554, label %18607

18607:                                            ; preds = %18602, %18549
  %18608 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %18609 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %18610 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %18611 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %18612 = load i32, ptr %5, align 4
  br label %18613

18613:                                            ; preds = %18607, %18366
  %18614 = phi i32 [ %18612, %18607 ], [ %18367, %18366 ]
  %18615 = add i32 %18614, -640000000
  %18616 = icmp ult i32 %18615, 180000000
  br i1 %18616, label %18617, label %18744

18617:                                            ; preds = %18613
  %18618 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %18619 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %18620 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %18621 = load ptr, ptr %3, align 4
  %18622 = getelementptr inbounds %struct.mxl5005s_state, ptr %18621, i32 0, i32 18
  %18623 = load i16, ptr %18622, align 4
  %18624 = icmp eq i16 %18623, 0
  br i1 %18624, label %18680, label %18625

18625:                                            ; preds = %18673, %18617
  %18626 = phi i16 [ %18674, %18673 ], [ %18623, %18617 ]
  %18627 = phi i32 [ %18675, %18673 ], [ 0, %18617 ]
  %18628 = getelementptr %struct.mxl5005s_state, ptr %18621, i32 0, i32 19, i32 %18627
  %18629 = load i16, ptr %18628, align 2
  %18630 = icmp eq i16 %18629, 82
  br i1 %18630, label %18631, label %18673

18631:                                            ; preds = %18625
  %18632 = getelementptr %struct.mxl5005s_state, ptr %18621, i32 0, i32 19, i32 %18627, i32 1
  %18633 = load i16, ptr %18632, align 2
  %18634 = icmp eq i16 %18633, 0
  br i1 %18634, label %18673, label %18635

18635:                                            ; preds = %18666, %18631
  %18636 = phi i32 [ %18667, %18666 ], [ 0, %18631 ]
  %18637 = getelementptr %struct.mxl5005s_state, ptr %18621, i32 0, i32 19, i32 %18627, i32 4, i32 %18636
  store i16 0, ptr %18637, align 2
  %18638 = getelementptr %struct.mxl5005s_state, ptr %18621, i32 0, i32 19, i32 %18627, i32 3, i32 %18636
  %18639 = load i16, ptr %18638, align 2
  %18640 = load ptr, ptr %3, align 4
  %18641 = getelementptr inbounds %struct.mxl5005s_state, ptr %18640, i32 0, i32 24
  %18642 = load i16, ptr %18641, align 4
  %18643 = zext i16 %18642 to i32
  %18644 = icmp eq i16 %18642, 0
  br i1 %18644, label %18666, label %18645

18645:                                            ; preds = %18635
  %18646 = getelementptr %struct.mxl5005s_state, ptr %18621, i32 0, i32 19, i32 %18627, i32 2, i32 %18636
  %18647 = load i16, ptr %18646, align 2
  %18648 = and i16 %18647, 255
  br label %18649

18649:                                            ; preds = %18663, %18645
  %18650 = phi i32 [ 0, %18645 ], [ %18664, %18663 ]
  %18651 = getelementptr %struct.mxl5005s_state, ptr %18640, i32 0, i32 25, i32 %18650
  %18652 = load i16, ptr %18651, align 2
  %18653 = icmp eq i16 %18652, %18648
  br i1 %18653, label %18654, label %18663

18654:                                            ; preds = %18649
  %18655 = and i16 %18639, 255
  %18656 = zext i16 %18655 to i32
  %18657 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18656
  %18658 = load i8, ptr %18657, align 1
  %18659 = zext i8 %18658 to i16
  %18660 = getelementptr %struct.mxl5005s_state, ptr %18640, i32 0, i32 25, i32 %18650, i32 1
  %18661 = load i16, ptr %18660, align 2
  %18662 = and i16 %18661, %18659
  store i16 %18662, ptr %18660, align 2
  br label %18666

18663:                                            ; preds = %18649
  %18664 = add nuw nsw i32 %18650, 1
  %18665 = icmp eq i32 %18664, %18643
  br i1 %18665, label %18666, label %18649

18666:                                            ; preds = %18663, %18654, %18635
  %18667 = add nuw nsw i32 %18636, 1
  %18668 = load i16, ptr %18632, align 2
  %18669 = zext i16 %18668 to i32
  %18670 = icmp ult i32 %18667, %18669
  br i1 %18670, label %18635, label %18671

18671:                                            ; preds = %18666
  %18672 = load i16, ptr %18622, align 4
  br label %18673

18673:                                            ; preds = %18671, %18631, %18625
  %18674 = phi i16 [ %18672, %18671 ], [ %18626, %18631 ], [ %18626, %18625 ]
  %18675 = add nuw nsw i32 %18627, 1
  %18676 = zext i16 %18674 to i32
  %18677 = icmp ult i32 %18675, %18676
  br i1 %18677, label %18625, label %18678

18678:                                            ; preds = %18673
  %18679 = load ptr, ptr %3, align 4
  br label %18680

18680:                                            ; preds = %18678, %18617
  %18681 = phi ptr [ %18679, %18678 ], [ %18621, %18617 ]
  %18682 = getelementptr inbounds %struct.mxl5005s_state, ptr %18681, i32 0, i32 20
  %18683 = load i16, ptr %18682, align 2
  %18684 = icmp eq i16 %18683, 0
  br i1 %18684, label %18738, label %18685

18685:                                            ; preds = %18733, %18680
  %18686 = phi i16 [ %18734, %18733 ], [ %18683, %18680 ]
  %18687 = phi i32 [ %18735, %18733 ], [ 0, %18680 ]
  %18688 = getelementptr %struct.mxl5005s_state, ptr %18681, i32 0, i32 21, i32 %18687
  %18689 = load i16, ptr %18688, align 2
  %18690 = icmp eq i16 %18689, 82
  br i1 %18690, label %18691, label %18733

18691:                                            ; preds = %18685
  %18692 = getelementptr %struct.mxl5005s_state, ptr %18681, i32 0, i32 21, i32 %18687, i32 1
  %18693 = load i16, ptr %18692, align 2
  %18694 = icmp eq i16 %18693, 0
  br i1 %18694, label %18733, label %18695

18695:                                            ; preds = %18726, %18691
  %18696 = phi i32 [ %18727, %18726 ], [ 0, %18691 ]
  %18697 = getelementptr %struct.mxl5005s_state, ptr %18681, i32 0, i32 21, i32 %18687, i32 4, i32 %18696
  store i16 0, ptr %18697, align 2
  %18698 = getelementptr %struct.mxl5005s_state, ptr %18681, i32 0, i32 21, i32 %18687, i32 3, i32 %18696
  %18699 = load i16, ptr %18698, align 2
  %18700 = load ptr, ptr %3, align 4
  %18701 = getelementptr inbounds %struct.mxl5005s_state, ptr %18700, i32 0, i32 24
  %18702 = load i16, ptr %18701, align 4
  %18703 = zext i16 %18702 to i32
  %18704 = icmp eq i16 %18702, 0
  br i1 %18704, label %18726, label %18705

18705:                                            ; preds = %18695
  %18706 = getelementptr %struct.mxl5005s_state, ptr %18681, i32 0, i32 21, i32 %18687, i32 2, i32 %18696
  %18707 = load i16, ptr %18706, align 2
  %18708 = and i16 %18707, 255
  br label %18709

18709:                                            ; preds = %18723, %18705
  %18710 = phi i32 [ 0, %18705 ], [ %18724, %18723 ]
  %18711 = getelementptr %struct.mxl5005s_state, ptr %18700, i32 0, i32 25, i32 %18710
  %18712 = load i16, ptr %18711, align 2
  %18713 = icmp eq i16 %18712, %18708
  br i1 %18713, label %18714, label %18723

18714:                                            ; preds = %18709
  %18715 = and i16 %18699, 255
  %18716 = zext i16 %18715 to i32
  %18717 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18716
  %18718 = load i8, ptr %18717, align 1
  %18719 = zext i8 %18718 to i16
  %18720 = getelementptr %struct.mxl5005s_state, ptr %18700, i32 0, i32 25, i32 %18710, i32 1
  %18721 = load i16, ptr %18720, align 2
  %18722 = and i16 %18721, %18719
  store i16 %18722, ptr %18720, align 2
  br label %18726

18723:                                            ; preds = %18709
  %18724 = add nuw nsw i32 %18710, 1
  %18725 = icmp eq i32 %18724, %18703
  br i1 %18725, label %18726, label %18709

18726:                                            ; preds = %18723, %18714, %18695
  %18727 = add nuw nsw i32 %18696, 1
  %18728 = load i16, ptr %18692, align 2
  %18729 = zext i16 %18728 to i32
  %18730 = icmp ult i32 %18727, %18729
  br i1 %18730, label %18695, label %18731

18731:                                            ; preds = %18726
  %18732 = load i16, ptr %18682, align 2
  br label %18733

18733:                                            ; preds = %18731, %18691, %18685
  %18734 = phi i16 [ %18732, %18731 ], [ %18686, %18691 ], [ %18686, %18685 ]
  %18735 = add nuw nsw i32 %18687, 1
  %18736 = zext i16 %18734 to i32
  %18737 = icmp ult i32 %18735, %18736
  br i1 %18737, label %18685, label %18738

18738:                                            ; preds = %18733, %18680
  %18739 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %18740 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %18741 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %18742 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %18743 = load i32, ptr %5, align 4
  br label %18744

18744:                                            ; preds = %18738, %18613
  %18745 = phi i32 [ %18743, %18738 ], [ %18614, %18613 ]
  %18746 = add i32 %18745, -820000000
  %18747 = icmp ult i32 %18746, 80000001
  br i1 %18747, label %18748, label %18871

18748:                                            ; preds = %18744
  %18749 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %18750 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %18751 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %18752 = load ptr, ptr %3, align 4
  %18753 = getelementptr inbounds %struct.mxl5005s_state, ptr %18752, i32 0, i32 18
  %18754 = load i16, ptr %18753, align 4
  %18755 = icmp eq i16 %18754, 0
  br i1 %18755, label %18811, label %18756

18756:                                            ; preds = %18804, %18748
  %18757 = phi i16 [ %18805, %18804 ], [ %18754, %18748 ]
  %18758 = phi i32 [ %18806, %18804 ], [ 0, %18748 ]
  %18759 = getelementptr %struct.mxl5005s_state, ptr %18752, i32 0, i32 19, i32 %18758
  %18760 = load i16, ptr %18759, align 2
  %18761 = icmp eq i16 %18760, 82
  br i1 %18761, label %18762, label %18804

18762:                                            ; preds = %18756
  %18763 = getelementptr %struct.mxl5005s_state, ptr %18752, i32 0, i32 19, i32 %18758, i32 1
  %18764 = load i16, ptr %18763, align 2
  %18765 = icmp eq i16 %18764, 0
  br i1 %18765, label %18804, label %18766

18766:                                            ; preds = %18797, %18762
  %18767 = phi i32 [ %18798, %18797 ], [ 0, %18762 ]
  %18768 = getelementptr %struct.mxl5005s_state, ptr %18752, i32 0, i32 19, i32 %18758, i32 4, i32 %18767
  store i16 0, ptr %18768, align 2
  %18769 = getelementptr %struct.mxl5005s_state, ptr %18752, i32 0, i32 19, i32 %18758, i32 3, i32 %18767
  %18770 = load i16, ptr %18769, align 2
  %18771 = load ptr, ptr %3, align 4
  %18772 = getelementptr inbounds %struct.mxl5005s_state, ptr %18771, i32 0, i32 24
  %18773 = load i16, ptr %18772, align 4
  %18774 = zext i16 %18773 to i32
  %18775 = icmp eq i16 %18773, 0
  br i1 %18775, label %18797, label %18776

18776:                                            ; preds = %18766
  %18777 = getelementptr %struct.mxl5005s_state, ptr %18752, i32 0, i32 19, i32 %18758, i32 2, i32 %18767
  %18778 = load i16, ptr %18777, align 2
  %18779 = and i16 %18778, 255
  br label %18780

18780:                                            ; preds = %18794, %18776
  %18781 = phi i32 [ 0, %18776 ], [ %18795, %18794 ]
  %18782 = getelementptr %struct.mxl5005s_state, ptr %18771, i32 0, i32 25, i32 %18781
  %18783 = load i16, ptr %18782, align 2
  %18784 = icmp eq i16 %18783, %18779
  br i1 %18784, label %18785, label %18794

18785:                                            ; preds = %18780
  %18786 = and i16 %18770, 255
  %18787 = zext i16 %18786 to i32
  %18788 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18787
  %18789 = load i8, ptr %18788, align 1
  %18790 = zext i8 %18789 to i16
  %18791 = getelementptr %struct.mxl5005s_state, ptr %18771, i32 0, i32 25, i32 %18781, i32 1
  %18792 = load i16, ptr %18791, align 2
  %18793 = and i16 %18792, %18790
  store i16 %18793, ptr %18791, align 2
  br label %18797

18794:                                            ; preds = %18780
  %18795 = add nuw nsw i32 %18781, 1
  %18796 = icmp eq i32 %18795, %18774
  br i1 %18796, label %18797, label %18780

18797:                                            ; preds = %18794, %18785, %18766
  %18798 = add nuw nsw i32 %18767, 1
  %18799 = load i16, ptr %18763, align 2
  %18800 = zext i16 %18799 to i32
  %18801 = icmp ult i32 %18798, %18800
  br i1 %18801, label %18766, label %18802

18802:                                            ; preds = %18797
  %18803 = load i16, ptr %18753, align 4
  br label %18804

18804:                                            ; preds = %18802, %18762, %18756
  %18805 = phi i16 [ %18803, %18802 ], [ %18757, %18762 ], [ %18757, %18756 ]
  %18806 = add nuw nsw i32 %18758, 1
  %18807 = zext i16 %18805 to i32
  %18808 = icmp ult i32 %18806, %18807
  br i1 %18808, label %18756, label %18809

18809:                                            ; preds = %18804
  %18810 = load ptr, ptr %3, align 4
  br label %18811

18811:                                            ; preds = %18809, %18748
  %18812 = phi ptr [ %18810, %18809 ], [ %18752, %18748 ]
  %18813 = getelementptr inbounds %struct.mxl5005s_state, ptr %18812, i32 0, i32 20
  %18814 = load i16, ptr %18813, align 2
  %18815 = icmp eq i16 %18814, 0
  br i1 %18815, label %18869, label %18816

18816:                                            ; preds = %18864, %18811
  %18817 = phi i16 [ %18865, %18864 ], [ %18814, %18811 ]
  %18818 = phi i32 [ %18866, %18864 ], [ 0, %18811 ]
  %18819 = getelementptr %struct.mxl5005s_state, ptr %18812, i32 0, i32 21, i32 %18818
  %18820 = load i16, ptr %18819, align 2
  %18821 = icmp eq i16 %18820, 82
  br i1 %18821, label %18822, label %18864

18822:                                            ; preds = %18816
  %18823 = getelementptr %struct.mxl5005s_state, ptr %18812, i32 0, i32 21, i32 %18818, i32 1
  %18824 = load i16, ptr %18823, align 2
  %18825 = icmp eq i16 %18824, 0
  br i1 %18825, label %18864, label %18826

18826:                                            ; preds = %18857, %18822
  %18827 = phi i32 [ %18858, %18857 ], [ 0, %18822 ]
  %18828 = getelementptr %struct.mxl5005s_state, ptr %18812, i32 0, i32 21, i32 %18818, i32 4, i32 %18827
  store i16 0, ptr %18828, align 2
  %18829 = getelementptr %struct.mxl5005s_state, ptr %18812, i32 0, i32 21, i32 %18818, i32 3, i32 %18827
  %18830 = load i16, ptr %18829, align 2
  %18831 = load ptr, ptr %3, align 4
  %18832 = getelementptr inbounds %struct.mxl5005s_state, ptr %18831, i32 0, i32 24
  %18833 = load i16, ptr %18832, align 4
  %18834 = zext i16 %18833 to i32
  %18835 = icmp eq i16 %18833, 0
  br i1 %18835, label %18857, label %18836

18836:                                            ; preds = %18826
  %18837 = getelementptr %struct.mxl5005s_state, ptr %18812, i32 0, i32 21, i32 %18818, i32 2, i32 %18827
  %18838 = load i16, ptr %18837, align 2
  %18839 = and i16 %18838, 255
  br label %18840

18840:                                            ; preds = %18854, %18836
  %18841 = phi i32 [ 0, %18836 ], [ %18855, %18854 ]
  %18842 = getelementptr %struct.mxl5005s_state, ptr %18831, i32 0, i32 25, i32 %18841
  %18843 = load i16, ptr %18842, align 2
  %18844 = icmp eq i16 %18843, %18839
  br i1 %18844, label %18845, label %18854

18845:                                            ; preds = %18840
  %18846 = and i16 %18830, 255
  %18847 = zext i16 %18846 to i32
  %18848 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18847
  %18849 = load i8, ptr %18848, align 1
  %18850 = zext i8 %18849 to i16
  %18851 = getelementptr %struct.mxl5005s_state, ptr %18831, i32 0, i32 25, i32 %18841, i32 1
  %18852 = load i16, ptr %18851, align 2
  %18853 = and i16 %18852, %18850
  store i16 %18853, ptr %18851, align 2
  br label %18857

18854:                                            ; preds = %18840
  %18855 = add nuw nsw i32 %18841, 1
  %18856 = icmp eq i32 %18855, %18834
  br i1 %18856, label %18857, label %18840

18857:                                            ; preds = %18854, %18845, %18826
  %18858 = add nuw nsw i32 %18827, 1
  %18859 = load i16, ptr %18823, align 2
  %18860 = zext i16 %18859 to i32
  %18861 = icmp ult i32 %18858, %18860
  br i1 %18861, label %18826, label %18862

18862:                                            ; preds = %18857
  %18863 = load i16, ptr %18813, align 2
  br label %18864

18864:                                            ; preds = %18862, %18822, %18816
  %18865 = phi i16 [ %18863, %18862 ], [ %18817, %18822 ], [ %18817, %18816 ]
  %18866 = add nuw nsw i32 %18818, 1
  %18867 = zext i16 %18865 to i32
  %18868 = icmp ult i32 %18866, %18867
  br i1 %18868, label %18816, label %18869

18869:                                            ; preds = %18864, %18811
  %18870 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %18871

18871:                                            ; preds = %18869, %18744
  %18872 = load i8, ptr %7001, align 1
  br label %18873

18873:                                            ; preds = %18871, %17596
  %18874 = phi i8 [ %18872, %18871 ], [ %17597, %17596 ]
  %18875 = icmp eq i8 %18874, 9
  br i1 %18875, label %18876, label %20518

18876:                                            ; preds = %18873
  %18877 = load ptr, ptr %3, align 4
  %18878 = getelementptr inbounds %struct.mxl5005s_state, ptr %18877, i32 0, i32 18
  %18879 = load i16, ptr %18878, align 4
  %18880 = icmp eq i16 %18879, 0
  br i1 %18880, label %18936, label %18881

18881:                                            ; preds = %18929, %18876
  %18882 = phi i16 [ %18930, %18929 ], [ %18879, %18876 ]
  %18883 = phi i32 [ %18931, %18929 ], [ 0, %18876 ]
  %18884 = getelementptr %struct.mxl5005s_state, ptr %18877, i32 0, i32 19, i32 %18883
  %18885 = load i16, ptr %18884, align 2
  %18886 = icmp eq i16 %18885, 86
  br i1 %18886, label %18887, label %18929

18887:                                            ; preds = %18881
  %18888 = getelementptr %struct.mxl5005s_state, ptr %18877, i32 0, i32 19, i32 %18883, i32 1
  %18889 = load i16, ptr %18888, align 2
  %18890 = icmp eq i16 %18889, 0
  br i1 %18890, label %18929, label %18891

18891:                                            ; preds = %18922, %18887
  %18892 = phi i32 [ %18923, %18922 ], [ 0, %18887 ]
  %18893 = getelementptr %struct.mxl5005s_state, ptr %18877, i32 0, i32 19, i32 %18883, i32 4, i32 %18892
  store i16 0, ptr %18893, align 2
  %18894 = getelementptr %struct.mxl5005s_state, ptr %18877, i32 0, i32 19, i32 %18883, i32 3, i32 %18892
  %18895 = load i16, ptr %18894, align 2
  %18896 = load ptr, ptr %3, align 4
  %18897 = getelementptr inbounds %struct.mxl5005s_state, ptr %18896, i32 0, i32 24
  %18898 = load i16, ptr %18897, align 4
  %18899 = zext i16 %18898 to i32
  %18900 = icmp eq i16 %18898, 0
  br i1 %18900, label %18922, label %18901

18901:                                            ; preds = %18891
  %18902 = getelementptr %struct.mxl5005s_state, ptr %18877, i32 0, i32 19, i32 %18883, i32 2, i32 %18892
  %18903 = load i16, ptr %18902, align 2
  %18904 = and i16 %18903, 255
  br label %18905

18905:                                            ; preds = %18919, %18901
  %18906 = phi i32 [ 0, %18901 ], [ %18920, %18919 ]
  %18907 = getelementptr %struct.mxl5005s_state, ptr %18896, i32 0, i32 25, i32 %18906
  %18908 = load i16, ptr %18907, align 2
  %18909 = icmp eq i16 %18908, %18904
  br i1 %18909, label %18910, label %18919

18910:                                            ; preds = %18905
  %18911 = and i16 %18895, 255
  %18912 = zext i16 %18911 to i32
  %18913 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18912
  %18914 = load i8, ptr %18913, align 1
  %18915 = zext i8 %18914 to i16
  %18916 = getelementptr %struct.mxl5005s_state, ptr %18896, i32 0, i32 25, i32 %18906, i32 1
  %18917 = load i16, ptr %18916, align 2
  %18918 = and i16 %18917, %18915
  store i16 %18918, ptr %18916, align 2
  br label %18922

18919:                                            ; preds = %18905
  %18920 = add nuw nsw i32 %18906, 1
  %18921 = icmp eq i32 %18920, %18899
  br i1 %18921, label %18922, label %18905

18922:                                            ; preds = %18919, %18910, %18891
  %18923 = add nuw nsw i32 %18892, 1
  %18924 = load i16, ptr %18888, align 2
  %18925 = zext i16 %18924 to i32
  %18926 = icmp ult i32 %18923, %18925
  br i1 %18926, label %18891, label %18927

18927:                                            ; preds = %18922
  %18928 = load i16, ptr %18878, align 4
  br label %18929

18929:                                            ; preds = %18927, %18887, %18881
  %18930 = phi i16 [ %18928, %18927 ], [ %18882, %18887 ], [ %18882, %18881 ]
  %18931 = add nuw nsw i32 %18883, 1
  %18932 = zext i16 %18930 to i32
  %18933 = icmp ult i32 %18931, %18932
  br i1 %18933, label %18881, label %18934

18934:                                            ; preds = %18929
  %18935 = load ptr, ptr %3, align 4
  br label %18936

18936:                                            ; preds = %18934, %18876
  %18937 = phi ptr [ %18935, %18934 ], [ %18877, %18876 ]
  %18938 = getelementptr inbounds %struct.mxl5005s_state, ptr %18937, i32 0, i32 20
  %18939 = load i16, ptr %18938, align 2
  %18940 = icmp eq i16 %18939, 0
  br i1 %18940, label %18994, label %18941

18941:                                            ; preds = %18989, %18936
  %18942 = phi i16 [ %18990, %18989 ], [ %18939, %18936 ]
  %18943 = phi i32 [ %18991, %18989 ], [ 0, %18936 ]
  %18944 = getelementptr %struct.mxl5005s_state, ptr %18937, i32 0, i32 21, i32 %18943
  %18945 = load i16, ptr %18944, align 2
  %18946 = icmp eq i16 %18945, 86
  br i1 %18946, label %18947, label %18989

18947:                                            ; preds = %18941
  %18948 = getelementptr %struct.mxl5005s_state, ptr %18937, i32 0, i32 21, i32 %18943, i32 1
  %18949 = load i16, ptr %18948, align 2
  %18950 = icmp eq i16 %18949, 0
  br i1 %18950, label %18989, label %18951

18951:                                            ; preds = %18982, %18947
  %18952 = phi i32 [ %18983, %18982 ], [ 0, %18947 ]
  %18953 = getelementptr %struct.mxl5005s_state, ptr %18937, i32 0, i32 21, i32 %18943, i32 4, i32 %18952
  store i16 0, ptr %18953, align 2
  %18954 = getelementptr %struct.mxl5005s_state, ptr %18937, i32 0, i32 21, i32 %18943, i32 3, i32 %18952
  %18955 = load i16, ptr %18954, align 2
  %18956 = load ptr, ptr %3, align 4
  %18957 = getelementptr inbounds %struct.mxl5005s_state, ptr %18956, i32 0, i32 24
  %18958 = load i16, ptr %18957, align 4
  %18959 = zext i16 %18958 to i32
  %18960 = icmp eq i16 %18958, 0
  br i1 %18960, label %18982, label %18961

18961:                                            ; preds = %18951
  %18962 = getelementptr %struct.mxl5005s_state, ptr %18937, i32 0, i32 21, i32 %18943, i32 2, i32 %18952
  %18963 = load i16, ptr %18962, align 2
  %18964 = and i16 %18963, 255
  br label %18965

18965:                                            ; preds = %18979, %18961
  %18966 = phi i32 [ 0, %18961 ], [ %18980, %18979 ]
  %18967 = getelementptr %struct.mxl5005s_state, ptr %18956, i32 0, i32 25, i32 %18966
  %18968 = load i16, ptr %18967, align 2
  %18969 = icmp eq i16 %18968, %18964
  br i1 %18969, label %18970, label %18979

18970:                                            ; preds = %18965
  %18971 = and i16 %18955, 255
  %18972 = zext i16 %18971 to i32
  %18973 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %18972
  %18974 = load i8, ptr %18973, align 1
  %18975 = zext i8 %18974 to i16
  %18976 = getelementptr %struct.mxl5005s_state, ptr %18956, i32 0, i32 25, i32 %18966, i32 1
  %18977 = load i16, ptr %18976, align 2
  %18978 = and i16 %18977, %18975
  store i16 %18978, ptr %18976, align 2
  br label %18982

18979:                                            ; preds = %18965
  %18980 = add nuw nsw i32 %18966, 1
  %18981 = icmp eq i32 %18980, %18959
  br i1 %18981, label %18982, label %18965

18982:                                            ; preds = %18979, %18970, %18951
  %18983 = add nuw nsw i32 %18952, 1
  %18984 = load i16, ptr %18948, align 2
  %18985 = zext i16 %18984 to i32
  %18986 = icmp ult i32 %18983, %18985
  br i1 %18986, label %18951, label %18987

18987:                                            ; preds = %18982
  %18988 = load i16, ptr %18938, align 2
  br label %18989

18989:                                            ; preds = %18987, %18947, %18941
  %18990 = phi i16 [ %18988, %18987 ], [ %18942, %18947 ], [ %18942, %18941 ]
  %18991 = add nuw nsw i32 %18943, 1
  %18992 = zext i16 %18990 to i32
  %18993 = icmp ult i32 %18991, %18992
  br i1 %18993, label %18941, label %18994

18994:                                            ; preds = %18989, %18936
  %18995 = load i32, ptr %5, align 4
  %18996 = icmp ugt i32 %18995, 470999999
  br i1 %18996, label %18997, label %19256

18997:                                            ; preds = %18994
  %18998 = add i32 %18995, -471000000
  %18999 = urem i32 %18998, 6000000
  %19000 = icmp eq i32 %18999, 0
  br i1 %19000, label %19256, label %19001

19001:                                            ; preds = %18997
  %19002 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %19003 = load ptr, ptr %3, align 4
  %19004 = getelementptr inbounds %struct.mxl5005s_state, ptr %19003, i32 0, i32 18
  %19005 = load i16, ptr %19004, align 4
  %19006 = icmp eq i16 %19005, 0
  br i1 %19006, label %19062, label %19007

19007:                                            ; preds = %19055, %19001
  %19008 = phi i16 [ %19056, %19055 ], [ %19005, %19001 ]
  %19009 = phi i32 [ %19057, %19055 ], [ 0, %19001 ]
  %19010 = getelementptr %struct.mxl5005s_state, ptr %19003, i32 0, i32 19, i32 %19009
  %19011 = load i16, ptr %19010, align 2
  %19012 = icmp eq i16 %19011, 82
  br i1 %19012, label %19013, label %19055

19013:                                            ; preds = %19007
  %19014 = getelementptr %struct.mxl5005s_state, ptr %19003, i32 0, i32 19, i32 %19009, i32 1
  %19015 = load i16, ptr %19014, align 2
  %19016 = icmp eq i16 %19015, 0
  br i1 %19016, label %19055, label %19017

19017:                                            ; preds = %19048, %19013
  %19018 = phi i32 [ %19049, %19048 ], [ 0, %19013 ]
  %19019 = getelementptr %struct.mxl5005s_state, ptr %19003, i32 0, i32 19, i32 %19009, i32 4, i32 %19018
  store i16 0, ptr %19019, align 2
  %19020 = getelementptr %struct.mxl5005s_state, ptr %19003, i32 0, i32 19, i32 %19009, i32 3, i32 %19018
  %19021 = load i16, ptr %19020, align 2
  %19022 = load ptr, ptr %3, align 4
  %19023 = getelementptr inbounds %struct.mxl5005s_state, ptr %19022, i32 0, i32 24
  %19024 = load i16, ptr %19023, align 4
  %19025 = zext i16 %19024 to i32
  %19026 = icmp eq i16 %19024, 0
  br i1 %19026, label %19048, label %19027

19027:                                            ; preds = %19017
  %19028 = getelementptr %struct.mxl5005s_state, ptr %19003, i32 0, i32 19, i32 %19009, i32 2, i32 %19018
  %19029 = load i16, ptr %19028, align 2
  %19030 = and i16 %19029, 255
  br label %19031

19031:                                            ; preds = %19045, %19027
  %19032 = phi i32 [ 0, %19027 ], [ %19046, %19045 ]
  %19033 = getelementptr %struct.mxl5005s_state, ptr %19022, i32 0, i32 25, i32 %19032
  %19034 = load i16, ptr %19033, align 2
  %19035 = icmp eq i16 %19034, %19030
  br i1 %19035, label %19036, label %19045

19036:                                            ; preds = %19031
  %19037 = and i16 %19021, 255
  %19038 = zext i16 %19037 to i32
  %19039 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19038
  %19040 = load i8, ptr %19039, align 1
  %19041 = zext i8 %19040 to i16
  %19042 = getelementptr %struct.mxl5005s_state, ptr %19022, i32 0, i32 25, i32 %19032, i32 1
  %19043 = load i16, ptr %19042, align 2
  %19044 = and i16 %19043, %19041
  store i16 %19044, ptr %19042, align 2
  br label %19048

19045:                                            ; preds = %19031
  %19046 = add nuw nsw i32 %19032, 1
  %19047 = icmp eq i32 %19046, %19025
  br i1 %19047, label %19048, label %19031

19048:                                            ; preds = %19045, %19036, %19017
  %19049 = add nuw nsw i32 %19018, 1
  %19050 = load i16, ptr %19014, align 2
  %19051 = zext i16 %19050 to i32
  %19052 = icmp ult i32 %19049, %19051
  br i1 %19052, label %19017, label %19053

19053:                                            ; preds = %19048
  %19054 = load i16, ptr %19004, align 4
  br label %19055

19055:                                            ; preds = %19053, %19013, %19007
  %19056 = phi i16 [ %19054, %19053 ], [ %19008, %19013 ], [ %19008, %19007 ]
  %19057 = add nuw nsw i32 %19009, 1
  %19058 = zext i16 %19056 to i32
  %19059 = icmp ult i32 %19057, %19058
  br i1 %19059, label %19007, label %19060

19060:                                            ; preds = %19055
  %19061 = load ptr, ptr %3, align 4
  br label %19062

19062:                                            ; preds = %19060, %19001
  %19063 = phi ptr [ %19061, %19060 ], [ %19003, %19001 ]
  %19064 = getelementptr inbounds %struct.mxl5005s_state, ptr %19063, i32 0, i32 20
  %19065 = load i16, ptr %19064, align 2
  %19066 = icmp eq i16 %19065, 0
  br i1 %19066, label %19120, label %19067

19067:                                            ; preds = %19115, %19062
  %19068 = phi i16 [ %19116, %19115 ], [ %19065, %19062 ]
  %19069 = phi i32 [ %19117, %19115 ], [ 0, %19062 ]
  %19070 = getelementptr %struct.mxl5005s_state, ptr %19063, i32 0, i32 21, i32 %19069
  %19071 = load i16, ptr %19070, align 2
  %19072 = icmp eq i16 %19071, 82
  br i1 %19072, label %19073, label %19115

19073:                                            ; preds = %19067
  %19074 = getelementptr %struct.mxl5005s_state, ptr %19063, i32 0, i32 21, i32 %19069, i32 1
  %19075 = load i16, ptr %19074, align 2
  %19076 = icmp eq i16 %19075, 0
  br i1 %19076, label %19115, label %19077

19077:                                            ; preds = %19108, %19073
  %19078 = phi i32 [ %19109, %19108 ], [ 0, %19073 ]
  %19079 = getelementptr %struct.mxl5005s_state, ptr %19063, i32 0, i32 21, i32 %19069, i32 4, i32 %19078
  store i16 0, ptr %19079, align 2
  %19080 = getelementptr %struct.mxl5005s_state, ptr %19063, i32 0, i32 21, i32 %19069, i32 3, i32 %19078
  %19081 = load i16, ptr %19080, align 2
  %19082 = load ptr, ptr %3, align 4
  %19083 = getelementptr inbounds %struct.mxl5005s_state, ptr %19082, i32 0, i32 24
  %19084 = load i16, ptr %19083, align 4
  %19085 = zext i16 %19084 to i32
  %19086 = icmp eq i16 %19084, 0
  br i1 %19086, label %19108, label %19087

19087:                                            ; preds = %19077
  %19088 = getelementptr %struct.mxl5005s_state, ptr %19063, i32 0, i32 21, i32 %19069, i32 2, i32 %19078
  %19089 = load i16, ptr %19088, align 2
  %19090 = and i16 %19089, 255
  br label %19091

19091:                                            ; preds = %19105, %19087
  %19092 = phi i32 [ 0, %19087 ], [ %19106, %19105 ]
  %19093 = getelementptr %struct.mxl5005s_state, ptr %19082, i32 0, i32 25, i32 %19092
  %19094 = load i16, ptr %19093, align 2
  %19095 = icmp eq i16 %19094, %19090
  br i1 %19095, label %19096, label %19105

19096:                                            ; preds = %19091
  %19097 = and i16 %19081, 255
  %19098 = zext i16 %19097 to i32
  %19099 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19098
  %19100 = load i8, ptr %19099, align 1
  %19101 = zext i8 %19100 to i16
  %19102 = getelementptr %struct.mxl5005s_state, ptr %19082, i32 0, i32 25, i32 %19092, i32 1
  %19103 = load i16, ptr %19102, align 2
  %19104 = and i16 %19103, %19101
  store i16 %19104, ptr %19102, align 2
  br label %19108

19105:                                            ; preds = %19091
  %19106 = add nuw nsw i32 %19092, 1
  %19107 = icmp eq i32 %19106, %19085
  br i1 %19107, label %19108, label %19091

19108:                                            ; preds = %19105, %19096, %19077
  %19109 = add nuw nsw i32 %19078, 1
  %19110 = load i16, ptr %19074, align 2
  %19111 = zext i16 %19110 to i32
  %19112 = icmp ult i32 %19109, %19111
  br i1 %19112, label %19077, label %19113

19113:                                            ; preds = %19108
  %19114 = load i16, ptr %19064, align 2
  br label %19115

19115:                                            ; preds = %19113, %19073, %19067
  %19116 = phi i16 [ %19114, %19113 ], [ %19068, %19073 ], [ %19068, %19067 ]
  %19117 = add nuw nsw i32 %19069, 1
  %19118 = zext i16 %19116 to i32
  %19119 = icmp ult i32 %19117, %19118
  br i1 %19119, label %19067, label %19120

19120:                                            ; preds = %19115, %19062
  %19121 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %19122 = load ptr, ptr %3, align 4
  %19123 = getelementptr inbounds %struct.mxl5005s_state, ptr %19122, i32 0, i32 18
  %19124 = load i16, ptr %19123, align 4
  %19125 = icmp eq i16 %19124, 0
  br i1 %19125, label %19181, label %19126

19126:                                            ; preds = %19174, %19120
  %19127 = phi i16 [ %19175, %19174 ], [ %19124, %19120 ]
  %19128 = phi i32 [ %19176, %19174 ], [ 0, %19120 ]
  %19129 = getelementptr %struct.mxl5005s_state, ptr %19122, i32 0, i32 19, i32 %19128
  %19130 = load i16, ptr %19129, align 2
  %19131 = icmp eq i16 %19130, 84
  br i1 %19131, label %19132, label %19174

19132:                                            ; preds = %19126
  %19133 = getelementptr %struct.mxl5005s_state, ptr %19122, i32 0, i32 19, i32 %19128, i32 1
  %19134 = load i16, ptr %19133, align 2
  %19135 = icmp eq i16 %19134, 0
  br i1 %19135, label %19174, label %19136

19136:                                            ; preds = %19167, %19132
  %19137 = phi i32 [ %19168, %19167 ], [ 0, %19132 ]
  %19138 = getelementptr %struct.mxl5005s_state, ptr %19122, i32 0, i32 19, i32 %19128, i32 4, i32 %19137
  store i16 0, ptr %19138, align 2
  %19139 = getelementptr %struct.mxl5005s_state, ptr %19122, i32 0, i32 19, i32 %19128, i32 3, i32 %19137
  %19140 = load i16, ptr %19139, align 2
  %19141 = load ptr, ptr %3, align 4
  %19142 = getelementptr inbounds %struct.mxl5005s_state, ptr %19141, i32 0, i32 24
  %19143 = load i16, ptr %19142, align 4
  %19144 = zext i16 %19143 to i32
  %19145 = icmp eq i16 %19143, 0
  br i1 %19145, label %19167, label %19146

19146:                                            ; preds = %19136
  %19147 = getelementptr %struct.mxl5005s_state, ptr %19122, i32 0, i32 19, i32 %19128, i32 2, i32 %19137
  %19148 = load i16, ptr %19147, align 2
  %19149 = and i16 %19148, 255
  br label %19150

19150:                                            ; preds = %19164, %19146
  %19151 = phi i32 [ 0, %19146 ], [ %19165, %19164 ]
  %19152 = getelementptr %struct.mxl5005s_state, ptr %19141, i32 0, i32 25, i32 %19151
  %19153 = load i16, ptr %19152, align 2
  %19154 = icmp eq i16 %19153, %19149
  br i1 %19154, label %19155, label %19164

19155:                                            ; preds = %19150
  %19156 = and i16 %19140, 255
  %19157 = zext i16 %19156 to i32
  %19158 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19157
  %19159 = load i8, ptr %19158, align 1
  %19160 = zext i8 %19159 to i16
  %19161 = getelementptr %struct.mxl5005s_state, ptr %19141, i32 0, i32 25, i32 %19151, i32 1
  %19162 = load i16, ptr %19161, align 2
  %19163 = and i16 %19162, %19160
  store i16 %19163, ptr %19161, align 2
  br label %19167

19164:                                            ; preds = %19150
  %19165 = add nuw nsw i32 %19151, 1
  %19166 = icmp eq i32 %19165, %19144
  br i1 %19166, label %19167, label %19150

19167:                                            ; preds = %19164, %19155, %19136
  %19168 = add nuw nsw i32 %19137, 1
  %19169 = load i16, ptr %19133, align 2
  %19170 = zext i16 %19169 to i32
  %19171 = icmp ult i32 %19168, %19170
  br i1 %19171, label %19136, label %19172

19172:                                            ; preds = %19167
  %19173 = load i16, ptr %19123, align 4
  br label %19174

19174:                                            ; preds = %19172, %19132, %19126
  %19175 = phi i16 [ %19173, %19172 ], [ %19127, %19132 ], [ %19127, %19126 ]
  %19176 = add nuw nsw i32 %19128, 1
  %19177 = zext i16 %19175 to i32
  %19178 = icmp ult i32 %19176, %19177
  br i1 %19178, label %19126, label %19179

19179:                                            ; preds = %19174
  %19180 = load ptr, ptr %3, align 4
  br label %19181

19181:                                            ; preds = %19179, %19120
  %19182 = phi ptr [ %19180, %19179 ], [ %19122, %19120 ]
  %19183 = getelementptr inbounds %struct.mxl5005s_state, ptr %19182, i32 0, i32 20
  %19184 = load i16, ptr %19183, align 2
  %19185 = icmp eq i16 %19184, 0
  br i1 %19185, label %19239, label %19186

19186:                                            ; preds = %19234, %19181
  %19187 = phi i16 [ %19235, %19234 ], [ %19184, %19181 ]
  %19188 = phi i32 [ %19236, %19234 ], [ 0, %19181 ]
  %19189 = getelementptr %struct.mxl5005s_state, ptr %19182, i32 0, i32 21, i32 %19188
  %19190 = load i16, ptr %19189, align 2
  %19191 = icmp eq i16 %19190, 84
  br i1 %19191, label %19192, label %19234

19192:                                            ; preds = %19186
  %19193 = getelementptr %struct.mxl5005s_state, ptr %19182, i32 0, i32 21, i32 %19188, i32 1
  %19194 = load i16, ptr %19193, align 2
  %19195 = icmp eq i16 %19194, 0
  br i1 %19195, label %19234, label %19196

19196:                                            ; preds = %19227, %19192
  %19197 = phi i32 [ %19228, %19227 ], [ 0, %19192 ]
  %19198 = getelementptr %struct.mxl5005s_state, ptr %19182, i32 0, i32 21, i32 %19188, i32 4, i32 %19197
  store i16 0, ptr %19198, align 2
  %19199 = getelementptr %struct.mxl5005s_state, ptr %19182, i32 0, i32 21, i32 %19188, i32 3, i32 %19197
  %19200 = load i16, ptr %19199, align 2
  %19201 = load ptr, ptr %3, align 4
  %19202 = getelementptr inbounds %struct.mxl5005s_state, ptr %19201, i32 0, i32 24
  %19203 = load i16, ptr %19202, align 4
  %19204 = zext i16 %19203 to i32
  %19205 = icmp eq i16 %19203, 0
  br i1 %19205, label %19227, label %19206

19206:                                            ; preds = %19196
  %19207 = getelementptr %struct.mxl5005s_state, ptr %19182, i32 0, i32 21, i32 %19188, i32 2, i32 %19197
  %19208 = load i16, ptr %19207, align 2
  %19209 = and i16 %19208, 255
  br label %19210

19210:                                            ; preds = %19224, %19206
  %19211 = phi i32 [ 0, %19206 ], [ %19225, %19224 ]
  %19212 = getelementptr %struct.mxl5005s_state, ptr %19201, i32 0, i32 25, i32 %19211
  %19213 = load i16, ptr %19212, align 2
  %19214 = icmp eq i16 %19213, %19209
  br i1 %19214, label %19215, label %19224

19215:                                            ; preds = %19210
  %19216 = and i16 %19200, 255
  %19217 = zext i16 %19216 to i32
  %19218 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19217
  %19219 = load i8, ptr %19218, align 1
  %19220 = zext i8 %19219 to i16
  %19221 = getelementptr %struct.mxl5005s_state, ptr %19201, i32 0, i32 25, i32 %19211, i32 1
  %19222 = load i16, ptr %19221, align 2
  %19223 = and i16 %19222, %19220
  store i16 %19223, ptr %19221, align 2
  br label %19227

19224:                                            ; preds = %19210
  %19225 = add nuw nsw i32 %19211, 1
  %19226 = icmp eq i32 %19225, %19204
  br i1 %19226, label %19227, label %19210

19227:                                            ; preds = %19224, %19215, %19196
  %19228 = add nuw nsw i32 %19197, 1
  %19229 = load i16, ptr %19193, align 2
  %19230 = zext i16 %19229 to i32
  %19231 = icmp ult i32 %19228, %19230
  br i1 %19231, label %19196, label %19232

19232:                                            ; preds = %19227
  %19233 = load i16, ptr %19183, align 2
  br label %19234

19234:                                            ; preds = %19232, %19192, %19186
  %19235 = phi i16 [ %19233, %19232 ], [ %19187, %19192 ], [ %19187, %19186 ]
  %19236 = add nuw nsw i32 %19188, 1
  %19237 = zext i16 %19235 to i32
  %19238 = icmp ult i32 %19236, %19237
  br i1 %19238, label %19186, label %19239

19239:                                            ; preds = %19234, %19181
  %19240 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 1) #12
  %19241 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 27, i32 noundef 1, i16 noundef zeroext 2) #12
  %19242 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 1) #12
  %19243 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 28, i32 noundef 1, i16 noundef zeroext 2) #12
  %19244 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 1) #12
  %19245 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 29, i32 noundef 1, i16 noundef zeroext 2) #12
  %19246 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 1) #12
  %19247 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 30, i32 noundef 1, i16 noundef zeroext 2) #12
  %19248 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 1) #12
  %19249 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 31, i32 noundef 5, i16 noundef zeroext 2) #12
  %19250 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 1) #12
  %19251 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 32, i32 noundef 3, i16 noundef zeroext 2) #12
  %19252 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 2, i16 noundef zeroext 1) #12
  %19253 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 33, i32 noundef 2, i16 noundef zeroext 2) #12
  %19254 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 3, i16 noundef zeroext 1) #12
  %19255 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 3, i16 noundef zeroext 2) #12
  br label %20518

19256:                                            ; preds = %18997, %18994
  %19257 = load ptr, ptr %3, align 4
  %19258 = getelementptr inbounds %struct.mxl5005s_state, ptr %19257, i32 0, i32 18
  %19259 = load i16, ptr %19258, align 4
  %19260 = icmp eq i16 %19259, 0
  br i1 %19260, label %19316, label %19261

19261:                                            ; preds = %19309, %19256
  %19262 = phi i16 [ %19310, %19309 ], [ %19259, %19256 ]
  %19263 = phi i32 [ %19311, %19309 ], [ 0, %19256 ]
  %19264 = getelementptr %struct.mxl5005s_state, ptr %19257, i32 0, i32 19, i32 %19263
  %19265 = load i16, ptr %19264, align 2
  %19266 = icmp eq i16 %19265, 29
  br i1 %19266, label %19267, label %19309

19267:                                            ; preds = %19261
  %19268 = getelementptr %struct.mxl5005s_state, ptr %19257, i32 0, i32 19, i32 %19263, i32 1
  %19269 = load i16, ptr %19268, align 2
  %19270 = icmp eq i16 %19269, 0
  br i1 %19270, label %19309, label %19271

19271:                                            ; preds = %19302, %19267
  %19272 = phi i32 [ %19303, %19302 ], [ 0, %19267 ]
  %19273 = getelementptr %struct.mxl5005s_state, ptr %19257, i32 0, i32 19, i32 %19263, i32 4, i32 %19272
  store i16 0, ptr %19273, align 2
  %19274 = getelementptr %struct.mxl5005s_state, ptr %19257, i32 0, i32 19, i32 %19263, i32 3, i32 %19272
  %19275 = load i16, ptr %19274, align 2
  %19276 = load ptr, ptr %3, align 4
  %19277 = getelementptr inbounds %struct.mxl5005s_state, ptr %19276, i32 0, i32 24
  %19278 = load i16, ptr %19277, align 4
  %19279 = zext i16 %19278 to i32
  %19280 = icmp eq i16 %19278, 0
  br i1 %19280, label %19302, label %19281

19281:                                            ; preds = %19271
  %19282 = getelementptr %struct.mxl5005s_state, ptr %19257, i32 0, i32 19, i32 %19263, i32 2, i32 %19272
  %19283 = load i16, ptr %19282, align 2
  %19284 = and i16 %19283, 255
  br label %19285

19285:                                            ; preds = %19299, %19281
  %19286 = phi i32 [ 0, %19281 ], [ %19300, %19299 ]
  %19287 = getelementptr %struct.mxl5005s_state, ptr %19276, i32 0, i32 25, i32 %19286
  %19288 = load i16, ptr %19287, align 2
  %19289 = icmp eq i16 %19288, %19284
  br i1 %19289, label %19290, label %19299

19290:                                            ; preds = %19285
  %19291 = and i16 %19275, 255
  %19292 = zext i16 %19291 to i32
  %19293 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19292
  %19294 = load i8, ptr %19293, align 1
  %19295 = zext i8 %19294 to i16
  %19296 = getelementptr %struct.mxl5005s_state, ptr %19276, i32 0, i32 25, i32 %19286, i32 1
  %19297 = load i16, ptr %19296, align 2
  %19298 = and i16 %19297, %19295
  store i16 %19298, ptr %19296, align 2
  br label %19302

19299:                                            ; preds = %19285
  %19300 = add nuw nsw i32 %19286, 1
  %19301 = icmp eq i32 %19300, %19279
  br i1 %19301, label %19302, label %19285

19302:                                            ; preds = %19299, %19290, %19271
  %19303 = add nuw nsw i32 %19272, 1
  %19304 = load i16, ptr %19268, align 2
  %19305 = zext i16 %19304 to i32
  %19306 = icmp ult i32 %19303, %19305
  br i1 %19306, label %19271, label %19307

19307:                                            ; preds = %19302
  %19308 = load i16, ptr %19258, align 4
  br label %19309

19309:                                            ; preds = %19307, %19267, %19261
  %19310 = phi i16 [ %19308, %19307 ], [ %19262, %19267 ], [ %19262, %19261 ]
  %19311 = add nuw nsw i32 %19263, 1
  %19312 = zext i16 %19310 to i32
  %19313 = icmp ult i32 %19311, %19312
  br i1 %19313, label %19261, label %19314

19314:                                            ; preds = %19309
  %19315 = load ptr, ptr %3, align 4
  br label %19316

19316:                                            ; preds = %19314, %19256
  %19317 = phi ptr [ %19315, %19314 ], [ %19257, %19256 ]
  %19318 = getelementptr inbounds %struct.mxl5005s_state, ptr %19317, i32 0, i32 20
  %19319 = load i16, ptr %19318, align 2
  %19320 = icmp eq i16 %19319, 0
  br i1 %19320, label %19374, label %19321

19321:                                            ; preds = %19369, %19316
  %19322 = phi i16 [ %19370, %19369 ], [ %19319, %19316 ]
  %19323 = phi i32 [ %19371, %19369 ], [ 0, %19316 ]
  %19324 = getelementptr %struct.mxl5005s_state, ptr %19317, i32 0, i32 21, i32 %19323
  %19325 = load i16, ptr %19324, align 2
  %19326 = icmp eq i16 %19325, 29
  br i1 %19326, label %19327, label %19369

19327:                                            ; preds = %19321
  %19328 = getelementptr %struct.mxl5005s_state, ptr %19317, i32 0, i32 21, i32 %19323, i32 1
  %19329 = load i16, ptr %19328, align 2
  %19330 = icmp eq i16 %19329, 0
  br i1 %19330, label %19369, label %19331

19331:                                            ; preds = %19362, %19327
  %19332 = phi i32 [ %19363, %19362 ], [ 0, %19327 ]
  %19333 = getelementptr %struct.mxl5005s_state, ptr %19317, i32 0, i32 21, i32 %19323, i32 4, i32 %19332
  store i16 0, ptr %19333, align 2
  %19334 = getelementptr %struct.mxl5005s_state, ptr %19317, i32 0, i32 21, i32 %19323, i32 3, i32 %19332
  %19335 = load i16, ptr %19334, align 2
  %19336 = load ptr, ptr %3, align 4
  %19337 = getelementptr inbounds %struct.mxl5005s_state, ptr %19336, i32 0, i32 24
  %19338 = load i16, ptr %19337, align 4
  %19339 = zext i16 %19338 to i32
  %19340 = icmp eq i16 %19338, 0
  br i1 %19340, label %19362, label %19341

19341:                                            ; preds = %19331
  %19342 = getelementptr %struct.mxl5005s_state, ptr %19317, i32 0, i32 21, i32 %19323, i32 2, i32 %19332
  %19343 = load i16, ptr %19342, align 2
  %19344 = and i16 %19343, 255
  br label %19345

19345:                                            ; preds = %19359, %19341
  %19346 = phi i32 [ 0, %19341 ], [ %19360, %19359 ]
  %19347 = getelementptr %struct.mxl5005s_state, ptr %19336, i32 0, i32 25, i32 %19346
  %19348 = load i16, ptr %19347, align 2
  %19349 = icmp eq i16 %19348, %19344
  br i1 %19349, label %19350, label %19359

19350:                                            ; preds = %19345
  %19351 = and i16 %19335, 255
  %19352 = zext i16 %19351 to i32
  %19353 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19352
  %19354 = load i8, ptr %19353, align 1
  %19355 = zext i8 %19354 to i16
  %19356 = getelementptr %struct.mxl5005s_state, ptr %19336, i32 0, i32 25, i32 %19346, i32 1
  %19357 = load i16, ptr %19356, align 2
  %19358 = and i16 %19357, %19355
  store i16 %19358, ptr %19356, align 2
  br label %19362

19359:                                            ; preds = %19345
  %19360 = add nuw nsw i32 %19346, 1
  %19361 = icmp eq i32 %19360, %19339
  br i1 %19361, label %19362, label %19345

19362:                                            ; preds = %19359, %19350, %19331
  %19363 = add nuw nsw i32 %19332, 1
  %19364 = load i16, ptr %19328, align 2
  %19365 = zext i16 %19364 to i32
  %19366 = icmp ult i32 %19363, %19365
  br i1 %19366, label %19331, label %19367

19367:                                            ; preds = %19362
  %19368 = load i16, ptr %19318, align 2
  br label %19369

19369:                                            ; preds = %19367, %19327, %19321
  %19370 = phi i16 [ %19368, %19367 ], [ %19322, %19327 ], [ %19322, %19321 ]
  %19371 = add nuw nsw i32 %19323, 1
  %19372 = zext i16 %19370 to i32
  %19373 = icmp ult i32 %19371, %19372
  br i1 %19373, label %19321, label %19374

19374:                                            ; preds = %19369, %19316
  %19375 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 5, i16 noundef zeroext 1) #12
  %19376 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 8, i32 noundef 5, i16 noundef zeroext 2) #12
  %19377 = load i32, ptr %5, align 4
  %19378 = add i32 %19377, -43000000
  %19379 = icmp ult i32 %19378, 131000000
  br i1 %19379, label %19380, label %19623

19380:                                            ; preds = %19374
  %19381 = load ptr, ptr %3, align 4
  %19382 = getelementptr inbounds %struct.mxl5005s_state, ptr %19381, i32 0, i32 18
  %19383 = load i16, ptr %19382, align 4
  %19384 = icmp eq i16 %19383, 0
  br i1 %19384, label %19440, label %19385

19385:                                            ; preds = %19433, %19380
  %19386 = phi i16 [ %19434, %19433 ], [ %19383, %19380 ]
  %19387 = phi i32 [ %19435, %19433 ], [ 0, %19380 ]
  %19388 = getelementptr %struct.mxl5005s_state, ptr %19381, i32 0, i32 19, i32 %19387
  %19389 = load i16, ptr %19388, align 2
  %19390 = icmp eq i16 %19389, 84
  br i1 %19390, label %19391, label %19433

19391:                                            ; preds = %19385
  %19392 = getelementptr %struct.mxl5005s_state, ptr %19381, i32 0, i32 19, i32 %19387, i32 1
  %19393 = load i16, ptr %19392, align 2
  %19394 = icmp eq i16 %19393, 0
  br i1 %19394, label %19433, label %19395

19395:                                            ; preds = %19426, %19391
  %19396 = phi i32 [ %19427, %19426 ], [ 0, %19391 ]
  %19397 = getelementptr %struct.mxl5005s_state, ptr %19381, i32 0, i32 19, i32 %19387, i32 4, i32 %19396
  store i16 0, ptr %19397, align 2
  %19398 = getelementptr %struct.mxl5005s_state, ptr %19381, i32 0, i32 19, i32 %19387, i32 3, i32 %19396
  %19399 = load i16, ptr %19398, align 2
  %19400 = load ptr, ptr %3, align 4
  %19401 = getelementptr inbounds %struct.mxl5005s_state, ptr %19400, i32 0, i32 24
  %19402 = load i16, ptr %19401, align 4
  %19403 = zext i16 %19402 to i32
  %19404 = icmp eq i16 %19402, 0
  br i1 %19404, label %19426, label %19405

19405:                                            ; preds = %19395
  %19406 = getelementptr %struct.mxl5005s_state, ptr %19381, i32 0, i32 19, i32 %19387, i32 2, i32 %19396
  %19407 = load i16, ptr %19406, align 2
  %19408 = and i16 %19407, 255
  br label %19409

19409:                                            ; preds = %19423, %19405
  %19410 = phi i32 [ 0, %19405 ], [ %19424, %19423 ]
  %19411 = getelementptr %struct.mxl5005s_state, ptr %19400, i32 0, i32 25, i32 %19410
  %19412 = load i16, ptr %19411, align 2
  %19413 = icmp eq i16 %19412, %19408
  br i1 %19413, label %19414, label %19423

19414:                                            ; preds = %19409
  %19415 = and i16 %19399, 255
  %19416 = zext i16 %19415 to i32
  %19417 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19416
  %19418 = load i8, ptr %19417, align 1
  %19419 = zext i8 %19418 to i16
  %19420 = getelementptr %struct.mxl5005s_state, ptr %19400, i32 0, i32 25, i32 %19410, i32 1
  %19421 = load i16, ptr %19420, align 2
  %19422 = and i16 %19421, %19419
  store i16 %19422, ptr %19420, align 2
  br label %19426

19423:                                            ; preds = %19409
  %19424 = add nuw nsw i32 %19410, 1
  %19425 = icmp eq i32 %19424, %19403
  br i1 %19425, label %19426, label %19409

19426:                                            ; preds = %19423, %19414, %19395
  %19427 = add nuw nsw i32 %19396, 1
  %19428 = load i16, ptr %19392, align 2
  %19429 = zext i16 %19428 to i32
  %19430 = icmp ult i32 %19427, %19429
  br i1 %19430, label %19395, label %19431

19431:                                            ; preds = %19426
  %19432 = load i16, ptr %19382, align 4
  br label %19433

19433:                                            ; preds = %19431, %19391, %19385
  %19434 = phi i16 [ %19432, %19431 ], [ %19386, %19391 ], [ %19386, %19385 ]
  %19435 = add nuw nsw i32 %19387, 1
  %19436 = zext i16 %19434 to i32
  %19437 = icmp ult i32 %19435, %19436
  br i1 %19437, label %19385, label %19438

19438:                                            ; preds = %19433
  %19439 = load ptr, ptr %3, align 4
  br label %19440

19440:                                            ; preds = %19438, %19380
  %19441 = phi ptr [ %19439, %19438 ], [ %19381, %19380 ]
  %19442 = getelementptr inbounds %struct.mxl5005s_state, ptr %19441, i32 0, i32 20
  %19443 = load i16, ptr %19442, align 2
  %19444 = icmp eq i16 %19443, 0
  br i1 %19444, label %19498, label %19445

19445:                                            ; preds = %19493, %19440
  %19446 = phi i16 [ %19494, %19493 ], [ %19443, %19440 ]
  %19447 = phi i32 [ %19495, %19493 ], [ 0, %19440 ]
  %19448 = getelementptr %struct.mxl5005s_state, ptr %19441, i32 0, i32 21, i32 %19447
  %19449 = load i16, ptr %19448, align 2
  %19450 = icmp eq i16 %19449, 84
  br i1 %19450, label %19451, label %19493

19451:                                            ; preds = %19445
  %19452 = getelementptr %struct.mxl5005s_state, ptr %19441, i32 0, i32 21, i32 %19447, i32 1
  %19453 = load i16, ptr %19452, align 2
  %19454 = icmp eq i16 %19453, 0
  br i1 %19454, label %19493, label %19455

19455:                                            ; preds = %19486, %19451
  %19456 = phi i32 [ %19487, %19486 ], [ 0, %19451 ]
  %19457 = getelementptr %struct.mxl5005s_state, ptr %19441, i32 0, i32 21, i32 %19447, i32 4, i32 %19456
  store i16 0, ptr %19457, align 2
  %19458 = getelementptr %struct.mxl5005s_state, ptr %19441, i32 0, i32 21, i32 %19447, i32 3, i32 %19456
  %19459 = load i16, ptr %19458, align 2
  %19460 = load ptr, ptr %3, align 4
  %19461 = getelementptr inbounds %struct.mxl5005s_state, ptr %19460, i32 0, i32 24
  %19462 = load i16, ptr %19461, align 4
  %19463 = zext i16 %19462 to i32
  %19464 = icmp eq i16 %19462, 0
  br i1 %19464, label %19486, label %19465

19465:                                            ; preds = %19455
  %19466 = getelementptr %struct.mxl5005s_state, ptr %19441, i32 0, i32 21, i32 %19447, i32 2, i32 %19456
  %19467 = load i16, ptr %19466, align 2
  %19468 = and i16 %19467, 255
  br label %19469

19469:                                            ; preds = %19483, %19465
  %19470 = phi i32 [ 0, %19465 ], [ %19484, %19483 ]
  %19471 = getelementptr %struct.mxl5005s_state, ptr %19460, i32 0, i32 25, i32 %19470
  %19472 = load i16, ptr %19471, align 2
  %19473 = icmp eq i16 %19472, %19468
  br i1 %19473, label %19474, label %19483

19474:                                            ; preds = %19469
  %19475 = and i16 %19459, 255
  %19476 = zext i16 %19475 to i32
  %19477 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19476
  %19478 = load i8, ptr %19477, align 1
  %19479 = zext i8 %19478 to i16
  %19480 = getelementptr %struct.mxl5005s_state, ptr %19460, i32 0, i32 25, i32 %19470, i32 1
  %19481 = load i16, ptr %19480, align 2
  %19482 = and i16 %19481, %19479
  store i16 %19482, ptr %19480, align 2
  br label %19486

19483:                                            ; preds = %19469
  %19484 = add nuw nsw i32 %19470, 1
  %19485 = icmp eq i32 %19484, %19463
  br i1 %19485, label %19486, label %19469

19486:                                            ; preds = %19483, %19474, %19455
  %19487 = add nuw nsw i32 %19456, 1
  %19488 = load i16, ptr %19452, align 2
  %19489 = zext i16 %19488 to i32
  %19490 = icmp ult i32 %19487, %19489
  br i1 %19490, label %19455, label %19491

19491:                                            ; preds = %19486
  %19492 = load i16, ptr %19442, align 2
  br label %19493

19493:                                            ; preds = %19491, %19451, %19445
  %19494 = phi i16 [ %19492, %19491 ], [ %19446, %19451 ], [ %19446, %19445 ]
  %19495 = add nuw nsw i32 %19447, 1
  %19496 = zext i16 %19494 to i32
  %19497 = icmp ult i32 %19495, %19496
  br i1 %19497, label %19445, label %19498

19498:                                            ; preds = %19493, %19440
  %19499 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %19500 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %19501 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %19502 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %19503 = load ptr, ptr %3, align 4
  %19504 = getelementptr inbounds %struct.mxl5005s_state, ptr %19503, i32 0, i32 18
  %19505 = load i16, ptr %19504, align 4
  %19506 = icmp eq i16 %19505, 0
  br i1 %19506, label %19562, label %19507

19507:                                            ; preds = %19555, %19498
  %19508 = phi i16 [ %19556, %19555 ], [ %19505, %19498 ]
  %19509 = phi i32 [ %19557, %19555 ], [ 0, %19498 ]
  %19510 = getelementptr %struct.mxl5005s_state, ptr %19503, i32 0, i32 19, i32 %19509
  %19511 = load i16, ptr %19510, align 2
  %19512 = icmp eq i16 %19511, 82
  br i1 %19512, label %19513, label %19555

19513:                                            ; preds = %19507
  %19514 = getelementptr %struct.mxl5005s_state, ptr %19503, i32 0, i32 19, i32 %19509, i32 1
  %19515 = load i16, ptr %19514, align 2
  %19516 = icmp eq i16 %19515, 0
  br i1 %19516, label %19555, label %19517

19517:                                            ; preds = %19548, %19513
  %19518 = phi i32 [ %19549, %19548 ], [ 0, %19513 ]
  %19519 = getelementptr %struct.mxl5005s_state, ptr %19503, i32 0, i32 19, i32 %19509, i32 4, i32 %19518
  store i16 0, ptr %19519, align 2
  %19520 = getelementptr %struct.mxl5005s_state, ptr %19503, i32 0, i32 19, i32 %19509, i32 3, i32 %19518
  %19521 = load i16, ptr %19520, align 2
  %19522 = load ptr, ptr %3, align 4
  %19523 = getelementptr inbounds %struct.mxl5005s_state, ptr %19522, i32 0, i32 24
  %19524 = load i16, ptr %19523, align 4
  %19525 = zext i16 %19524 to i32
  %19526 = icmp eq i16 %19524, 0
  br i1 %19526, label %19548, label %19527

19527:                                            ; preds = %19517
  %19528 = getelementptr %struct.mxl5005s_state, ptr %19503, i32 0, i32 19, i32 %19509, i32 2, i32 %19518
  %19529 = load i16, ptr %19528, align 2
  %19530 = and i16 %19529, 255
  br label %19531

19531:                                            ; preds = %19545, %19527
  %19532 = phi i32 [ 0, %19527 ], [ %19546, %19545 ]
  %19533 = getelementptr %struct.mxl5005s_state, ptr %19522, i32 0, i32 25, i32 %19532
  %19534 = load i16, ptr %19533, align 2
  %19535 = icmp eq i16 %19534, %19530
  br i1 %19535, label %19536, label %19545

19536:                                            ; preds = %19531
  %19537 = and i16 %19521, 255
  %19538 = zext i16 %19537 to i32
  %19539 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19538
  %19540 = load i8, ptr %19539, align 1
  %19541 = zext i8 %19540 to i16
  %19542 = getelementptr %struct.mxl5005s_state, ptr %19522, i32 0, i32 25, i32 %19532, i32 1
  %19543 = load i16, ptr %19542, align 2
  %19544 = and i16 %19543, %19541
  store i16 %19544, ptr %19542, align 2
  br label %19548

19545:                                            ; preds = %19531
  %19546 = add nuw nsw i32 %19532, 1
  %19547 = icmp eq i32 %19546, %19525
  br i1 %19547, label %19548, label %19531

19548:                                            ; preds = %19545, %19536, %19517
  %19549 = add nuw nsw i32 %19518, 1
  %19550 = load i16, ptr %19514, align 2
  %19551 = zext i16 %19550 to i32
  %19552 = icmp ult i32 %19549, %19551
  br i1 %19552, label %19517, label %19553

19553:                                            ; preds = %19548
  %19554 = load i16, ptr %19504, align 4
  br label %19555

19555:                                            ; preds = %19553, %19513, %19507
  %19556 = phi i16 [ %19554, %19553 ], [ %19508, %19513 ], [ %19508, %19507 ]
  %19557 = add nuw nsw i32 %19509, 1
  %19558 = zext i16 %19556 to i32
  %19559 = icmp ult i32 %19557, %19558
  br i1 %19559, label %19507, label %19560

19560:                                            ; preds = %19555
  %19561 = load ptr, ptr %3, align 4
  br label %19562

19562:                                            ; preds = %19560, %19498
  %19563 = phi ptr [ %19561, %19560 ], [ %19503, %19498 ]
  %19564 = getelementptr inbounds %struct.mxl5005s_state, ptr %19563, i32 0, i32 20
  %19565 = load i16, ptr %19564, align 2
  %19566 = icmp eq i16 %19565, 0
  br i1 %19566, label %19620, label %19567

19567:                                            ; preds = %19615, %19562
  %19568 = phi i16 [ %19616, %19615 ], [ %19565, %19562 ]
  %19569 = phi i32 [ %19617, %19615 ], [ 0, %19562 ]
  %19570 = getelementptr %struct.mxl5005s_state, ptr %19563, i32 0, i32 21, i32 %19569
  %19571 = load i16, ptr %19570, align 2
  %19572 = icmp eq i16 %19571, 82
  br i1 %19572, label %19573, label %19615

19573:                                            ; preds = %19567
  %19574 = getelementptr %struct.mxl5005s_state, ptr %19563, i32 0, i32 21, i32 %19569, i32 1
  %19575 = load i16, ptr %19574, align 2
  %19576 = icmp eq i16 %19575, 0
  br i1 %19576, label %19615, label %19577

19577:                                            ; preds = %19608, %19573
  %19578 = phi i32 [ %19609, %19608 ], [ 0, %19573 ]
  %19579 = getelementptr %struct.mxl5005s_state, ptr %19563, i32 0, i32 21, i32 %19569, i32 4, i32 %19578
  store i16 0, ptr %19579, align 2
  %19580 = getelementptr %struct.mxl5005s_state, ptr %19563, i32 0, i32 21, i32 %19569, i32 3, i32 %19578
  %19581 = load i16, ptr %19580, align 2
  %19582 = load ptr, ptr %3, align 4
  %19583 = getelementptr inbounds %struct.mxl5005s_state, ptr %19582, i32 0, i32 24
  %19584 = load i16, ptr %19583, align 4
  %19585 = zext i16 %19584 to i32
  %19586 = icmp eq i16 %19584, 0
  br i1 %19586, label %19608, label %19587

19587:                                            ; preds = %19577
  %19588 = getelementptr %struct.mxl5005s_state, ptr %19563, i32 0, i32 21, i32 %19569, i32 2, i32 %19578
  %19589 = load i16, ptr %19588, align 2
  %19590 = and i16 %19589, 255
  br label %19591

19591:                                            ; preds = %19605, %19587
  %19592 = phi i32 [ 0, %19587 ], [ %19606, %19605 ]
  %19593 = getelementptr %struct.mxl5005s_state, ptr %19582, i32 0, i32 25, i32 %19592
  %19594 = load i16, ptr %19593, align 2
  %19595 = icmp eq i16 %19594, %19590
  br i1 %19595, label %19596, label %19605

19596:                                            ; preds = %19591
  %19597 = and i16 %19581, 255
  %19598 = zext i16 %19597 to i32
  %19599 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19598
  %19600 = load i8, ptr %19599, align 1
  %19601 = zext i8 %19600 to i16
  %19602 = getelementptr %struct.mxl5005s_state, ptr %19582, i32 0, i32 25, i32 %19592, i32 1
  %19603 = load i16, ptr %19602, align 2
  %19604 = and i16 %19603, %19601
  store i16 %19604, ptr %19602, align 2
  br label %19608

19605:                                            ; preds = %19591
  %19606 = add nuw nsw i32 %19592, 1
  %19607 = icmp eq i32 %19606, %19585
  br i1 %19607, label %19608, label %19591

19608:                                            ; preds = %19605, %19596, %19577
  %19609 = add nuw nsw i32 %19578, 1
  %19610 = load i16, ptr %19574, align 2
  %19611 = zext i16 %19610 to i32
  %19612 = icmp ult i32 %19609, %19611
  br i1 %19612, label %19577, label %19613

19613:                                            ; preds = %19608
  %19614 = load i16, ptr %19564, align 2
  br label %19615

19615:                                            ; preds = %19613, %19573, %19567
  %19616 = phi i16 [ %19614, %19613 ], [ %19568, %19573 ], [ %19568, %19567 ]
  %19617 = add nuw nsw i32 %19569, 1
  %19618 = zext i16 %19616 to i32
  %19619 = icmp ult i32 %19617, %19618
  br i1 %19619, label %19567, label %19620

19620:                                            ; preds = %19615, %19562
  %19621 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %19622 = load i32, ptr %5, align 4
  br label %19623

19623:                                            ; preds = %19620, %19374
  %19624 = phi i32 [ %19622, %19620 ], [ %19377, %19374 ]
  %19625 = add i32 %19624, -174000000
  %19626 = icmp ult i32 %19625, 76000000
  br i1 %19626, label %19627, label %19754

19627:                                            ; preds = %19623
  %19628 = load ptr, ptr %3, align 4
  %19629 = getelementptr inbounds %struct.mxl5005s_state, ptr %19628, i32 0, i32 18
  %19630 = load i16, ptr %19629, align 4
  %19631 = icmp eq i16 %19630, 0
  br i1 %19631, label %19687, label %19632

19632:                                            ; preds = %19680, %19627
  %19633 = phi i16 [ %19681, %19680 ], [ %19630, %19627 ]
  %19634 = phi i32 [ %19682, %19680 ], [ 0, %19627 ]
  %19635 = getelementptr %struct.mxl5005s_state, ptr %19628, i32 0, i32 19, i32 %19634
  %19636 = load i16, ptr %19635, align 2
  %19637 = icmp eq i16 %19636, 84
  br i1 %19637, label %19638, label %19680

19638:                                            ; preds = %19632
  %19639 = getelementptr %struct.mxl5005s_state, ptr %19628, i32 0, i32 19, i32 %19634, i32 1
  %19640 = load i16, ptr %19639, align 2
  %19641 = icmp eq i16 %19640, 0
  br i1 %19641, label %19680, label %19642

19642:                                            ; preds = %19673, %19638
  %19643 = phi i32 [ %19674, %19673 ], [ 0, %19638 ]
  %19644 = getelementptr %struct.mxl5005s_state, ptr %19628, i32 0, i32 19, i32 %19634, i32 4, i32 %19643
  store i16 0, ptr %19644, align 2
  %19645 = getelementptr %struct.mxl5005s_state, ptr %19628, i32 0, i32 19, i32 %19634, i32 3, i32 %19643
  %19646 = load i16, ptr %19645, align 2
  %19647 = load ptr, ptr %3, align 4
  %19648 = getelementptr inbounds %struct.mxl5005s_state, ptr %19647, i32 0, i32 24
  %19649 = load i16, ptr %19648, align 4
  %19650 = zext i16 %19649 to i32
  %19651 = icmp eq i16 %19649, 0
  br i1 %19651, label %19673, label %19652

19652:                                            ; preds = %19642
  %19653 = getelementptr %struct.mxl5005s_state, ptr %19628, i32 0, i32 19, i32 %19634, i32 2, i32 %19643
  %19654 = load i16, ptr %19653, align 2
  %19655 = and i16 %19654, 255
  br label %19656

19656:                                            ; preds = %19670, %19652
  %19657 = phi i32 [ 0, %19652 ], [ %19671, %19670 ]
  %19658 = getelementptr %struct.mxl5005s_state, ptr %19647, i32 0, i32 25, i32 %19657
  %19659 = load i16, ptr %19658, align 2
  %19660 = icmp eq i16 %19659, %19655
  br i1 %19660, label %19661, label %19670

19661:                                            ; preds = %19656
  %19662 = and i16 %19646, 255
  %19663 = zext i16 %19662 to i32
  %19664 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19663
  %19665 = load i8, ptr %19664, align 1
  %19666 = zext i8 %19665 to i16
  %19667 = getelementptr %struct.mxl5005s_state, ptr %19647, i32 0, i32 25, i32 %19657, i32 1
  %19668 = load i16, ptr %19667, align 2
  %19669 = and i16 %19668, %19666
  store i16 %19669, ptr %19667, align 2
  br label %19673

19670:                                            ; preds = %19656
  %19671 = add nuw nsw i32 %19657, 1
  %19672 = icmp eq i32 %19671, %19650
  br i1 %19672, label %19673, label %19656

19673:                                            ; preds = %19670, %19661, %19642
  %19674 = add nuw nsw i32 %19643, 1
  %19675 = load i16, ptr %19639, align 2
  %19676 = zext i16 %19675 to i32
  %19677 = icmp ult i32 %19674, %19676
  br i1 %19677, label %19642, label %19678

19678:                                            ; preds = %19673
  %19679 = load i16, ptr %19629, align 4
  br label %19680

19680:                                            ; preds = %19678, %19638, %19632
  %19681 = phi i16 [ %19679, %19678 ], [ %19633, %19638 ], [ %19633, %19632 ]
  %19682 = add nuw nsw i32 %19634, 1
  %19683 = zext i16 %19681 to i32
  %19684 = icmp ult i32 %19682, %19683
  br i1 %19684, label %19632, label %19685

19685:                                            ; preds = %19680
  %19686 = load ptr, ptr %3, align 4
  br label %19687

19687:                                            ; preds = %19685, %19627
  %19688 = phi ptr [ %19686, %19685 ], [ %19628, %19627 ]
  %19689 = getelementptr inbounds %struct.mxl5005s_state, ptr %19688, i32 0, i32 20
  %19690 = load i16, ptr %19689, align 2
  %19691 = icmp eq i16 %19690, 0
  br i1 %19691, label %19745, label %19692

19692:                                            ; preds = %19740, %19687
  %19693 = phi i16 [ %19741, %19740 ], [ %19690, %19687 ]
  %19694 = phi i32 [ %19742, %19740 ], [ 0, %19687 ]
  %19695 = getelementptr %struct.mxl5005s_state, ptr %19688, i32 0, i32 21, i32 %19694
  %19696 = load i16, ptr %19695, align 2
  %19697 = icmp eq i16 %19696, 84
  br i1 %19697, label %19698, label %19740

19698:                                            ; preds = %19692
  %19699 = getelementptr %struct.mxl5005s_state, ptr %19688, i32 0, i32 21, i32 %19694, i32 1
  %19700 = load i16, ptr %19699, align 2
  %19701 = icmp eq i16 %19700, 0
  br i1 %19701, label %19740, label %19702

19702:                                            ; preds = %19733, %19698
  %19703 = phi i32 [ %19734, %19733 ], [ 0, %19698 ]
  %19704 = getelementptr %struct.mxl5005s_state, ptr %19688, i32 0, i32 21, i32 %19694, i32 4, i32 %19703
  store i16 0, ptr %19704, align 2
  %19705 = getelementptr %struct.mxl5005s_state, ptr %19688, i32 0, i32 21, i32 %19694, i32 3, i32 %19703
  %19706 = load i16, ptr %19705, align 2
  %19707 = load ptr, ptr %3, align 4
  %19708 = getelementptr inbounds %struct.mxl5005s_state, ptr %19707, i32 0, i32 24
  %19709 = load i16, ptr %19708, align 4
  %19710 = zext i16 %19709 to i32
  %19711 = icmp eq i16 %19709, 0
  br i1 %19711, label %19733, label %19712

19712:                                            ; preds = %19702
  %19713 = getelementptr %struct.mxl5005s_state, ptr %19688, i32 0, i32 21, i32 %19694, i32 2, i32 %19703
  %19714 = load i16, ptr %19713, align 2
  %19715 = and i16 %19714, 255
  br label %19716

19716:                                            ; preds = %19730, %19712
  %19717 = phi i32 [ 0, %19712 ], [ %19731, %19730 ]
  %19718 = getelementptr %struct.mxl5005s_state, ptr %19707, i32 0, i32 25, i32 %19717
  %19719 = load i16, ptr %19718, align 2
  %19720 = icmp eq i16 %19719, %19715
  br i1 %19720, label %19721, label %19730

19721:                                            ; preds = %19716
  %19722 = and i16 %19706, 255
  %19723 = zext i16 %19722 to i32
  %19724 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19723
  %19725 = load i8, ptr %19724, align 1
  %19726 = zext i8 %19725 to i16
  %19727 = getelementptr %struct.mxl5005s_state, ptr %19707, i32 0, i32 25, i32 %19717, i32 1
  %19728 = load i16, ptr %19727, align 2
  %19729 = and i16 %19728, %19726
  store i16 %19729, ptr %19727, align 2
  br label %19733

19730:                                            ; preds = %19716
  %19731 = add nuw nsw i32 %19717, 1
  %19732 = icmp eq i32 %19731, %19710
  br i1 %19732, label %19733, label %19716

19733:                                            ; preds = %19730, %19721, %19702
  %19734 = add nuw nsw i32 %19703, 1
  %19735 = load i16, ptr %19699, align 2
  %19736 = zext i16 %19735 to i32
  %19737 = icmp ult i32 %19734, %19736
  br i1 %19737, label %19702, label %19738

19738:                                            ; preds = %19733
  %19739 = load i16, ptr %19689, align 2
  br label %19740

19740:                                            ; preds = %19738, %19698, %19692
  %19741 = phi i16 [ %19739, %19738 ], [ %19693, %19698 ], [ %19693, %19692 ]
  %19742 = add nuw nsw i32 %19694, 1
  %19743 = zext i16 %19741 to i32
  %19744 = icmp ult i32 %19742, %19743
  br i1 %19744, label %19692, label %19745

19745:                                            ; preds = %19740, %19687
  %19746 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %19747 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %19748 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %19749 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %19750 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %19751 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %19752 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %19753 = load i32, ptr %5, align 4
  br label %19754

19754:                                            ; preds = %19745, %19623
  %19755 = phi i32 [ %19753, %19745 ], [ %19624, %19623 ]
  %19756 = add i32 %19755, -250000000
  %19757 = icmp ult i32 %19756, 100000000
  br i1 %19757, label %19758, label %19882

19758:                                            ; preds = %19754
  %19759 = load ptr, ptr %3, align 4
  %19760 = getelementptr inbounds %struct.mxl5005s_state, ptr %19759, i32 0, i32 18
  %19761 = load i16, ptr %19760, align 4
  %19762 = icmp eq i16 %19761, 0
  br i1 %19762, label %19818, label %19763

19763:                                            ; preds = %19811, %19758
  %19764 = phi i16 [ %19812, %19811 ], [ %19761, %19758 ]
  %19765 = phi i32 [ %19813, %19811 ], [ 0, %19758 ]
  %19766 = getelementptr %struct.mxl5005s_state, ptr %19759, i32 0, i32 19, i32 %19765
  %19767 = load i16, ptr %19766, align 2
  %19768 = icmp eq i16 %19767, 84
  br i1 %19768, label %19769, label %19811

19769:                                            ; preds = %19763
  %19770 = getelementptr %struct.mxl5005s_state, ptr %19759, i32 0, i32 19, i32 %19765, i32 1
  %19771 = load i16, ptr %19770, align 2
  %19772 = icmp eq i16 %19771, 0
  br i1 %19772, label %19811, label %19773

19773:                                            ; preds = %19804, %19769
  %19774 = phi i32 [ %19805, %19804 ], [ 0, %19769 ]
  %19775 = getelementptr %struct.mxl5005s_state, ptr %19759, i32 0, i32 19, i32 %19765, i32 4, i32 %19774
  store i16 0, ptr %19775, align 2
  %19776 = getelementptr %struct.mxl5005s_state, ptr %19759, i32 0, i32 19, i32 %19765, i32 3, i32 %19774
  %19777 = load i16, ptr %19776, align 2
  %19778 = load ptr, ptr %3, align 4
  %19779 = getelementptr inbounds %struct.mxl5005s_state, ptr %19778, i32 0, i32 24
  %19780 = load i16, ptr %19779, align 4
  %19781 = zext i16 %19780 to i32
  %19782 = icmp eq i16 %19780, 0
  br i1 %19782, label %19804, label %19783

19783:                                            ; preds = %19773
  %19784 = getelementptr %struct.mxl5005s_state, ptr %19759, i32 0, i32 19, i32 %19765, i32 2, i32 %19774
  %19785 = load i16, ptr %19784, align 2
  %19786 = and i16 %19785, 255
  br label %19787

19787:                                            ; preds = %19801, %19783
  %19788 = phi i32 [ 0, %19783 ], [ %19802, %19801 ]
  %19789 = getelementptr %struct.mxl5005s_state, ptr %19778, i32 0, i32 25, i32 %19788
  %19790 = load i16, ptr %19789, align 2
  %19791 = icmp eq i16 %19790, %19786
  br i1 %19791, label %19792, label %19801

19792:                                            ; preds = %19787
  %19793 = and i16 %19777, 255
  %19794 = zext i16 %19793 to i32
  %19795 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19794
  %19796 = load i8, ptr %19795, align 1
  %19797 = zext i8 %19796 to i16
  %19798 = getelementptr %struct.mxl5005s_state, ptr %19778, i32 0, i32 25, i32 %19788, i32 1
  %19799 = load i16, ptr %19798, align 2
  %19800 = and i16 %19799, %19797
  store i16 %19800, ptr %19798, align 2
  br label %19804

19801:                                            ; preds = %19787
  %19802 = add nuw nsw i32 %19788, 1
  %19803 = icmp eq i32 %19802, %19781
  br i1 %19803, label %19804, label %19787

19804:                                            ; preds = %19801, %19792, %19773
  %19805 = add nuw nsw i32 %19774, 1
  %19806 = load i16, ptr %19770, align 2
  %19807 = zext i16 %19806 to i32
  %19808 = icmp ult i32 %19805, %19807
  br i1 %19808, label %19773, label %19809

19809:                                            ; preds = %19804
  %19810 = load i16, ptr %19760, align 4
  br label %19811

19811:                                            ; preds = %19809, %19769, %19763
  %19812 = phi i16 [ %19810, %19809 ], [ %19764, %19769 ], [ %19764, %19763 ]
  %19813 = add nuw nsw i32 %19765, 1
  %19814 = zext i16 %19812 to i32
  %19815 = icmp ult i32 %19813, %19814
  br i1 %19815, label %19763, label %19816

19816:                                            ; preds = %19811
  %19817 = load ptr, ptr %3, align 4
  br label %19818

19818:                                            ; preds = %19816, %19758
  %19819 = phi ptr [ %19817, %19816 ], [ %19759, %19758 ]
  %19820 = getelementptr inbounds %struct.mxl5005s_state, ptr %19819, i32 0, i32 20
  %19821 = load i16, ptr %19820, align 2
  %19822 = icmp eq i16 %19821, 0
  br i1 %19822, label %19876, label %19823

19823:                                            ; preds = %19871, %19818
  %19824 = phi i16 [ %19872, %19871 ], [ %19821, %19818 ]
  %19825 = phi i32 [ %19873, %19871 ], [ 0, %19818 ]
  %19826 = getelementptr %struct.mxl5005s_state, ptr %19819, i32 0, i32 21, i32 %19825
  %19827 = load i16, ptr %19826, align 2
  %19828 = icmp eq i16 %19827, 84
  br i1 %19828, label %19829, label %19871

19829:                                            ; preds = %19823
  %19830 = getelementptr %struct.mxl5005s_state, ptr %19819, i32 0, i32 21, i32 %19825, i32 1
  %19831 = load i16, ptr %19830, align 2
  %19832 = icmp eq i16 %19831, 0
  br i1 %19832, label %19871, label %19833

19833:                                            ; preds = %19864, %19829
  %19834 = phi i32 [ %19865, %19864 ], [ 0, %19829 ]
  %19835 = getelementptr %struct.mxl5005s_state, ptr %19819, i32 0, i32 21, i32 %19825, i32 4, i32 %19834
  store i16 0, ptr %19835, align 2
  %19836 = getelementptr %struct.mxl5005s_state, ptr %19819, i32 0, i32 21, i32 %19825, i32 3, i32 %19834
  %19837 = load i16, ptr %19836, align 2
  %19838 = load ptr, ptr %3, align 4
  %19839 = getelementptr inbounds %struct.mxl5005s_state, ptr %19838, i32 0, i32 24
  %19840 = load i16, ptr %19839, align 4
  %19841 = zext i16 %19840 to i32
  %19842 = icmp eq i16 %19840, 0
  br i1 %19842, label %19864, label %19843

19843:                                            ; preds = %19833
  %19844 = getelementptr %struct.mxl5005s_state, ptr %19819, i32 0, i32 21, i32 %19825, i32 2, i32 %19834
  %19845 = load i16, ptr %19844, align 2
  %19846 = and i16 %19845, 255
  br label %19847

19847:                                            ; preds = %19861, %19843
  %19848 = phi i32 [ 0, %19843 ], [ %19862, %19861 ]
  %19849 = getelementptr %struct.mxl5005s_state, ptr %19838, i32 0, i32 25, i32 %19848
  %19850 = load i16, ptr %19849, align 2
  %19851 = icmp eq i16 %19850, %19846
  br i1 %19851, label %19852, label %19861

19852:                                            ; preds = %19847
  %19853 = and i16 %19837, 255
  %19854 = zext i16 %19853 to i32
  %19855 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19854
  %19856 = load i8, ptr %19855, align 1
  %19857 = zext i8 %19856 to i16
  %19858 = getelementptr %struct.mxl5005s_state, ptr %19838, i32 0, i32 25, i32 %19848, i32 1
  %19859 = load i16, ptr %19858, align 2
  %19860 = and i16 %19859, %19857
  store i16 %19860, ptr %19858, align 2
  br label %19864

19861:                                            ; preds = %19847
  %19862 = add nuw nsw i32 %19848, 1
  %19863 = icmp eq i32 %19862, %19841
  br i1 %19863, label %19864, label %19847

19864:                                            ; preds = %19861, %19852, %19833
  %19865 = add nuw nsw i32 %19834, 1
  %19866 = load i16, ptr %19830, align 2
  %19867 = zext i16 %19866 to i32
  %19868 = icmp ult i32 %19865, %19867
  br i1 %19868, label %19833, label %19869

19869:                                            ; preds = %19864
  %19870 = load i16, ptr %19820, align 2
  br label %19871

19871:                                            ; preds = %19869, %19829, %19823
  %19872 = phi i16 [ %19870, %19869 ], [ %19824, %19829 ], [ %19824, %19823 ]
  %19873 = add nuw nsw i32 %19825, 1
  %19874 = zext i16 %19872 to i32
  %19875 = icmp ult i32 %19873, %19874
  br i1 %19875, label %19823, label %19876

19876:                                            ; preds = %19871, %19818
  %19877 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %19878 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %19879 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %19880 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  %19881 = load i32, ptr %5, align 4
  br label %19882

19882:                                            ; preds = %19876, %19754
  %19883 = phi i32 [ %19881, %19876 ], [ %19755, %19754 ]
  %19884 = add i32 %19883, -350000000
  %19885 = icmp ult i32 %19884, 50000000
  br i1 %19885, label %19886, label %20013

19886:                                            ; preds = %19882
  %19887 = load ptr, ptr %3, align 4
  %19888 = getelementptr inbounds %struct.mxl5005s_state, ptr %19887, i32 0, i32 18
  %19889 = load i16, ptr %19888, align 4
  %19890 = icmp eq i16 %19889, 0
  br i1 %19890, label %19946, label %19891

19891:                                            ; preds = %19939, %19886
  %19892 = phi i16 [ %19940, %19939 ], [ %19889, %19886 ]
  %19893 = phi i32 [ %19941, %19939 ], [ 0, %19886 ]
  %19894 = getelementptr %struct.mxl5005s_state, ptr %19887, i32 0, i32 19, i32 %19893
  %19895 = load i16, ptr %19894, align 2
  %19896 = icmp eq i16 %19895, 84
  br i1 %19896, label %19897, label %19939

19897:                                            ; preds = %19891
  %19898 = getelementptr %struct.mxl5005s_state, ptr %19887, i32 0, i32 19, i32 %19893, i32 1
  %19899 = load i16, ptr %19898, align 2
  %19900 = icmp eq i16 %19899, 0
  br i1 %19900, label %19939, label %19901

19901:                                            ; preds = %19932, %19897
  %19902 = phi i32 [ %19933, %19932 ], [ 0, %19897 ]
  %19903 = getelementptr %struct.mxl5005s_state, ptr %19887, i32 0, i32 19, i32 %19893, i32 4, i32 %19902
  store i16 0, ptr %19903, align 2
  %19904 = getelementptr %struct.mxl5005s_state, ptr %19887, i32 0, i32 19, i32 %19893, i32 3, i32 %19902
  %19905 = load i16, ptr %19904, align 2
  %19906 = load ptr, ptr %3, align 4
  %19907 = getelementptr inbounds %struct.mxl5005s_state, ptr %19906, i32 0, i32 24
  %19908 = load i16, ptr %19907, align 4
  %19909 = zext i16 %19908 to i32
  %19910 = icmp eq i16 %19908, 0
  br i1 %19910, label %19932, label %19911

19911:                                            ; preds = %19901
  %19912 = getelementptr %struct.mxl5005s_state, ptr %19887, i32 0, i32 19, i32 %19893, i32 2, i32 %19902
  %19913 = load i16, ptr %19912, align 2
  %19914 = and i16 %19913, 255
  br label %19915

19915:                                            ; preds = %19929, %19911
  %19916 = phi i32 [ 0, %19911 ], [ %19930, %19929 ]
  %19917 = getelementptr %struct.mxl5005s_state, ptr %19906, i32 0, i32 25, i32 %19916
  %19918 = load i16, ptr %19917, align 2
  %19919 = icmp eq i16 %19918, %19914
  br i1 %19919, label %19920, label %19929

19920:                                            ; preds = %19915
  %19921 = and i16 %19905, 255
  %19922 = zext i16 %19921 to i32
  %19923 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19922
  %19924 = load i8, ptr %19923, align 1
  %19925 = zext i8 %19924 to i16
  %19926 = getelementptr %struct.mxl5005s_state, ptr %19906, i32 0, i32 25, i32 %19916, i32 1
  %19927 = load i16, ptr %19926, align 2
  %19928 = and i16 %19927, %19925
  store i16 %19928, ptr %19926, align 2
  br label %19932

19929:                                            ; preds = %19915
  %19930 = add nuw nsw i32 %19916, 1
  %19931 = icmp eq i32 %19930, %19909
  br i1 %19931, label %19932, label %19915

19932:                                            ; preds = %19929, %19920, %19901
  %19933 = add nuw nsw i32 %19902, 1
  %19934 = load i16, ptr %19898, align 2
  %19935 = zext i16 %19934 to i32
  %19936 = icmp ult i32 %19933, %19935
  br i1 %19936, label %19901, label %19937

19937:                                            ; preds = %19932
  %19938 = load i16, ptr %19888, align 4
  br label %19939

19939:                                            ; preds = %19937, %19897, %19891
  %19940 = phi i16 [ %19938, %19937 ], [ %19892, %19897 ], [ %19892, %19891 ]
  %19941 = add nuw nsw i32 %19893, 1
  %19942 = zext i16 %19940 to i32
  %19943 = icmp ult i32 %19941, %19942
  br i1 %19943, label %19891, label %19944

19944:                                            ; preds = %19939
  %19945 = load ptr, ptr %3, align 4
  br label %19946

19946:                                            ; preds = %19944, %19886
  %19947 = phi ptr [ %19945, %19944 ], [ %19887, %19886 ]
  %19948 = getelementptr inbounds %struct.mxl5005s_state, ptr %19947, i32 0, i32 20
  %19949 = load i16, ptr %19948, align 2
  %19950 = icmp eq i16 %19949, 0
  br i1 %19950, label %20004, label %19951

19951:                                            ; preds = %19999, %19946
  %19952 = phi i16 [ %20000, %19999 ], [ %19949, %19946 ]
  %19953 = phi i32 [ %20001, %19999 ], [ 0, %19946 ]
  %19954 = getelementptr %struct.mxl5005s_state, ptr %19947, i32 0, i32 21, i32 %19953
  %19955 = load i16, ptr %19954, align 2
  %19956 = icmp eq i16 %19955, 84
  br i1 %19956, label %19957, label %19999

19957:                                            ; preds = %19951
  %19958 = getelementptr %struct.mxl5005s_state, ptr %19947, i32 0, i32 21, i32 %19953, i32 1
  %19959 = load i16, ptr %19958, align 2
  %19960 = icmp eq i16 %19959, 0
  br i1 %19960, label %19999, label %19961

19961:                                            ; preds = %19992, %19957
  %19962 = phi i32 [ %19993, %19992 ], [ 0, %19957 ]
  %19963 = getelementptr %struct.mxl5005s_state, ptr %19947, i32 0, i32 21, i32 %19953, i32 4, i32 %19962
  store i16 0, ptr %19963, align 2
  %19964 = getelementptr %struct.mxl5005s_state, ptr %19947, i32 0, i32 21, i32 %19953, i32 3, i32 %19962
  %19965 = load i16, ptr %19964, align 2
  %19966 = load ptr, ptr %3, align 4
  %19967 = getelementptr inbounds %struct.mxl5005s_state, ptr %19966, i32 0, i32 24
  %19968 = load i16, ptr %19967, align 4
  %19969 = zext i16 %19968 to i32
  %19970 = icmp eq i16 %19968, 0
  br i1 %19970, label %19992, label %19971

19971:                                            ; preds = %19961
  %19972 = getelementptr %struct.mxl5005s_state, ptr %19947, i32 0, i32 21, i32 %19953, i32 2, i32 %19962
  %19973 = load i16, ptr %19972, align 2
  %19974 = and i16 %19973, 255
  br label %19975

19975:                                            ; preds = %19989, %19971
  %19976 = phi i32 [ 0, %19971 ], [ %19990, %19989 ]
  %19977 = getelementptr %struct.mxl5005s_state, ptr %19966, i32 0, i32 25, i32 %19976
  %19978 = load i16, ptr %19977, align 2
  %19979 = icmp eq i16 %19978, %19974
  br i1 %19979, label %19980, label %19989

19980:                                            ; preds = %19975
  %19981 = and i16 %19965, 255
  %19982 = zext i16 %19981 to i32
  %19983 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %19982
  %19984 = load i8, ptr %19983, align 1
  %19985 = zext i8 %19984 to i16
  %19986 = getelementptr %struct.mxl5005s_state, ptr %19966, i32 0, i32 25, i32 %19976, i32 1
  %19987 = load i16, ptr %19986, align 2
  %19988 = and i16 %19987, %19985
  store i16 %19988, ptr %19986, align 2
  br label %19992

19989:                                            ; preds = %19975
  %19990 = add nuw nsw i32 %19976, 1
  %19991 = icmp eq i32 %19990, %19969
  br i1 %19991, label %19992, label %19975

19992:                                            ; preds = %19989, %19980, %19961
  %19993 = add nuw nsw i32 %19962, 1
  %19994 = load i16, ptr %19958, align 2
  %19995 = zext i16 %19994 to i32
  %19996 = icmp ult i32 %19993, %19995
  br i1 %19996, label %19961, label %19997

19997:                                            ; preds = %19992
  %19998 = load i16, ptr %19948, align 2
  br label %19999

19999:                                            ; preds = %19997, %19957, %19951
  %20000 = phi i16 [ %19998, %19997 ], [ %19952, %19957 ], [ %19952, %19951 ]
  %20001 = add nuw nsw i32 %19953, 1
  %20002 = zext i16 %20000 to i32
  %20003 = icmp ult i32 %20001, %20002
  br i1 %20003, label %19951, label %20004

20004:                                            ; preds = %19999, %19946
  %20005 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %20006 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 1) #12
  %20007 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef 1, i16 noundef zeroext 2) #12
  %20008 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %20009 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %20010 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %20011 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %20012 = load i32, ptr %5, align 4
  br label %20013

20013:                                            ; preds = %20004, %19882
  %20014 = phi i32 [ %20012, %20004 ], [ %19883, %19882 ]
  %20015 = add i32 %20014, -400000000
  %20016 = icmp ult i32 %20015, 170000000
  br i1 %20016, label %20017, label %20260

20017:                                            ; preds = %20013
  %20018 = load ptr, ptr %3, align 4
  %20019 = getelementptr inbounds %struct.mxl5005s_state, ptr %20018, i32 0, i32 18
  %20020 = load i16, ptr %20019, align 4
  %20021 = icmp eq i16 %20020, 0
  br i1 %20021, label %20077, label %20022

20022:                                            ; preds = %20070, %20017
  %20023 = phi i16 [ %20071, %20070 ], [ %20020, %20017 ]
  %20024 = phi i32 [ %20072, %20070 ], [ 0, %20017 ]
  %20025 = getelementptr %struct.mxl5005s_state, ptr %20018, i32 0, i32 19, i32 %20024
  %20026 = load i16, ptr %20025, align 2
  %20027 = icmp eq i16 %20026, 84
  br i1 %20027, label %20028, label %20070

20028:                                            ; preds = %20022
  %20029 = getelementptr %struct.mxl5005s_state, ptr %20018, i32 0, i32 19, i32 %20024, i32 1
  %20030 = load i16, ptr %20029, align 2
  %20031 = icmp eq i16 %20030, 0
  br i1 %20031, label %20070, label %20032

20032:                                            ; preds = %20063, %20028
  %20033 = phi i32 [ %20064, %20063 ], [ 0, %20028 ]
  %20034 = getelementptr %struct.mxl5005s_state, ptr %20018, i32 0, i32 19, i32 %20024, i32 4, i32 %20033
  store i16 0, ptr %20034, align 2
  %20035 = getelementptr %struct.mxl5005s_state, ptr %20018, i32 0, i32 19, i32 %20024, i32 3, i32 %20033
  %20036 = load i16, ptr %20035, align 2
  %20037 = load ptr, ptr %3, align 4
  %20038 = getelementptr inbounds %struct.mxl5005s_state, ptr %20037, i32 0, i32 24
  %20039 = load i16, ptr %20038, align 4
  %20040 = zext i16 %20039 to i32
  %20041 = icmp eq i16 %20039, 0
  br i1 %20041, label %20063, label %20042

20042:                                            ; preds = %20032
  %20043 = getelementptr %struct.mxl5005s_state, ptr %20018, i32 0, i32 19, i32 %20024, i32 2, i32 %20033
  %20044 = load i16, ptr %20043, align 2
  %20045 = and i16 %20044, 255
  br label %20046

20046:                                            ; preds = %20060, %20042
  %20047 = phi i32 [ 0, %20042 ], [ %20061, %20060 ]
  %20048 = getelementptr %struct.mxl5005s_state, ptr %20037, i32 0, i32 25, i32 %20047
  %20049 = load i16, ptr %20048, align 2
  %20050 = icmp eq i16 %20049, %20045
  br i1 %20050, label %20051, label %20060

20051:                                            ; preds = %20046
  %20052 = and i16 %20036, 255
  %20053 = zext i16 %20052 to i32
  %20054 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20053
  %20055 = load i8, ptr %20054, align 1
  %20056 = zext i8 %20055 to i16
  %20057 = getelementptr %struct.mxl5005s_state, ptr %20037, i32 0, i32 25, i32 %20047, i32 1
  %20058 = load i16, ptr %20057, align 2
  %20059 = and i16 %20058, %20056
  store i16 %20059, ptr %20057, align 2
  br label %20063

20060:                                            ; preds = %20046
  %20061 = add nuw nsw i32 %20047, 1
  %20062 = icmp eq i32 %20061, %20040
  br i1 %20062, label %20063, label %20046

20063:                                            ; preds = %20060, %20051, %20032
  %20064 = add nuw nsw i32 %20033, 1
  %20065 = load i16, ptr %20029, align 2
  %20066 = zext i16 %20065 to i32
  %20067 = icmp ult i32 %20064, %20066
  br i1 %20067, label %20032, label %20068

20068:                                            ; preds = %20063
  %20069 = load i16, ptr %20019, align 4
  br label %20070

20070:                                            ; preds = %20068, %20028, %20022
  %20071 = phi i16 [ %20069, %20068 ], [ %20023, %20028 ], [ %20023, %20022 ]
  %20072 = add nuw nsw i32 %20024, 1
  %20073 = zext i16 %20071 to i32
  %20074 = icmp ult i32 %20072, %20073
  br i1 %20074, label %20022, label %20075

20075:                                            ; preds = %20070
  %20076 = load ptr, ptr %3, align 4
  br label %20077

20077:                                            ; preds = %20075, %20017
  %20078 = phi ptr [ %20076, %20075 ], [ %20018, %20017 ]
  %20079 = getelementptr inbounds %struct.mxl5005s_state, ptr %20078, i32 0, i32 20
  %20080 = load i16, ptr %20079, align 2
  %20081 = icmp eq i16 %20080, 0
  br i1 %20081, label %20135, label %20082

20082:                                            ; preds = %20130, %20077
  %20083 = phi i16 [ %20131, %20130 ], [ %20080, %20077 ]
  %20084 = phi i32 [ %20132, %20130 ], [ 0, %20077 ]
  %20085 = getelementptr %struct.mxl5005s_state, ptr %20078, i32 0, i32 21, i32 %20084
  %20086 = load i16, ptr %20085, align 2
  %20087 = icmp eq i16 %20086, 84
  br i1 %20087, label %20088, label %20130

20088:                                            ; preds = %20082
  %20089 = getelementptr %struct.mxl5005s_state, ptr %20078, i32 0, i32 21, i32 %20084, i32 1
  %20090 = load i16, ptr %20089, align 2
  %20091 = icmp eq i16 %20090, 0
  br i1 %20091, label %20130, label %20092

20092:                                            ; preds = %20123, %20088
  %20093 = phi i32 [ %20124, %20123 ], [ 0, %20088 ]
  %20094 = getelementptr %struct.mxl5005s_state, ptr %20078, i32 0, i32 21, i32 %20084, i32 4, i32 %20093
  store i16 0, ptr %20094, align 2
  %20095 = getelementptr %struct.mxl5005s_state, ptr %20078, i32 0, i32 21, i32 %20084, i32 3, i32 %20093
  %20096 = load i16, ptr %20095, align 2
  %20097 = load ptr, ptr %3, align 4
  %20098 = getelementptr inbounds %struct.mxl5005s_state, ptr %20097, i32 0, i32 24
  %20099 = load i16, ptr %20098, align 4
  %20100 = zext i16 %20099 to i32
  %20101 = icmp eq i16 %20099, 0
  br i1 %20101, label %20123, label %20102

20102:                                            ; preds = %20092
  %20103 = getelementptr %struct.mxl5005s_state, ptr %20078, i32 0, i32 21, i32 %20084, i32 2, i32 %20093
  %20104 = load i16, ptr %20103, align 2
  %20105 = and i16 %20104, 255
  br label %20106

20106:                                            ; preds = %20120, %20102
  %20107 = phi i32 [ 0, %20102 ], [ %20121, %20120 ]
  %20108 = getelementptr %struct.mxl5005s_state, ptr %20097, i32 0, i32 25, i32 %20107
  %20109 = load i16, ptr %20108, align 2
  %20110 = icmp eq i16 %20109, %20105
  br i1 %20110, label %20111, label %20120

20111:                                            ; preds = %20106
  %20112 = and i16 %20096, 255
  %20113 = zext i16 %20112 to i32
  %20114 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20113
  %20115 = load i8, ptr %20114, align 1
  %20116 = zext i8 %20115 to i16
  %20117 = getelementptr %struct.mxl5005s_state, ptr %20097, i32 0, i32 25, i32 %20107, i32 1
  %20118 = load i16, ptr %20117, align 2
  %20119 = and i16 %20118, %20116
  store i16 %20119, ptr %20117, align 2
  br label %20123

20120:                                            ; preds = %20106
  %20121 = add nuw nsw i32 %20107, 1
  %20122 = icmp eq i32 %20121, %20100
  br i1 %20122, label %20123, label %20106

20123:                                            ; preds = %20120, %20111, %20092
  %20124 = add nuw nsw i32 %20093, 1
  %20125 = load i16, ptr %20089, align 2
  %20126 = zext i16 %20125 to i32
  %20127 = icmp ult i32 %20124, %20126
  br i1 %20127, label %20092, label %20128

20128:                                            ; preds = %20123
  %20129 = load i16, ptr %20079, align 2
  br label %20130

20130:                                            ; preds = %20128, %20088, %20082
  %20131 = phi i16 [ %20129, %20128 ], [ %20083, %20088 ], [ %20083, %20082 ]
  %20132 = add nuw nsw i32 %20084, 1
  %20133 = zext i16 %20131 to i32
  %20134 = icmp ult i32 %20132, %20133
  br i1 %20134, label %20082, label %20135

20135:                                            ; preds = %20130, %20077
  %20136 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %20137 = load ptr, ptr %3, align 4
  %20138 = getelementptr inbounds %struct.mxl5005s_state, ptr %20137, i32 0, i32 18
  %20139 = load i16, ptr %20138, align 4
  %20140 = icmp eq i16 %20139, 0
  br i1 %20140, label %20196, label %20141

20141:                                            ; preds = %20189, %20135
  %20142 = phi i16 [ %20190, %20189 ], [ %20139, %20135 ]
  %20143 = phi i32 [ %20191, %20189 ], [ 0, %20135 ]
  %20144 = getelementptr %struct.mxl5005s_state, ptr %20137, i32 0, i32 19, i32 %20143
  %20145 = load i16, ptr %20144, align 2
  %20146 = icmp eq i16 %20145, 82
  br i1 %20146, label %20147, label %20189

20147:                                            ; preds = %20141
  %20148 = getelementptr %struct.mxl5005s_state, ptr %20137, i32 0, i32 19, i32 %20143, i32 1
  %20149 = load i16, ptr %20148, align 2
  %20150 = icmp eq i16 %20149, 0
  br i1 %20150, label %20189, label %20151

20151:                                            ; preds = %20182, %20147
  %20152 = phi i32 [ %20183, %20182 ], [ 0, %20147 ]
  %20153 = getelementptr %struct.mxl5005s_state, ptr %20137, i32 0, i32 19, i32 %20143, i32 4, i32 %20152
  store i16 0, ptr %20153, align 2
  %20154 = getelementptr %struct.mxl5005s_state, ptr %20137, i32 0, i32 19, i32 %20143, i32 3, i32 %20152
  %20155 = load i16, ptr %20154, align 2
  %20156 = load ptr, ptr %3, align 4
  %20157 = getelementptr inbounds %struct.mxl5005s_state, ptr %20156, i32 0, i32 24
  %20158 = load i16, ptr %20157, align 4
  %20159 = zext i16 %20158 to i32
  %20160 = icmp eq i16 %20158, 0
  br i1 %20160, label %20182, label %20161

20161:                                            ; preds = %20151
  %20162 = getelementptr %struct.mxl5005s_state, ptr %20137, i32 0, i32 19, i32 %20143, i32 2, i32 %20152
  %20163 = load i16, ptr %20162, align 2
  %20164 = and i16 %20163, 255
  br label %20165

20165:                                            ; preds = %20179, %20161
  %20166 = phi i32 [ 0, %20161 ], [ %20180, %20179 ]
  %20167 = getelementptr %struct.mxl5005s_state, ptr %20156, i32 0, i32 25, i32 %20166
  %20168 = load i16, ptr %20167, align 2
  %20169 = icmp eq i16 %20168, %20164
  br i1 %20169, label %20170, label %20179

20170:                                            ; preds = %20165
  %20171 = and i16 %20155, 255
  %20172 = zext i16 %20171 to i32
  %20173 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20172
  %20174 = load i8, ptr %20173, align 1
  %20175 = zext i8 %20174 to i16
  %20176 = getelementptr %struct.mxl5005s_state, ptr %20156, i32 0, i32 25, i32 %20166, i32 1
  %20177 = load i16, ptr %20176, align 2
  %20178 = and i16 %20177, %20175
  store i16 %20178, ptr %20176, align 2
  br label %20182

20179:                                            ; preds = %20165
  %20180 = add nuw nsw i32 %20166, 1
  %20181 = icmp eq i32 %20180, %20159
  br i1 %20181, label %20182, label %20165

20182:                                            ; preds = %20179, %20170, %20151
  %20183 = add nuw nsw i32 %20152, 1
  %20184 = load i16, ptr %20148, align 2
  %20185 = zext i16 %20184 to i32
  %20186 = icmp ult i32 %20183, %20185
  br i1 %20186, label %20151, label %20187

20187:                                            ; preds = %20182
  %20188 = load i16, ptr %20138, align 4
  br label %20189

20189:                                            ; preds = %20187, %20147, %20141
  %20190 = phi i16 [ %20188, %20187 ], [ %20142, %20147 ], [ %20142, %20141 ]
  %20191 = add nuw nsw i32 %20143, 1
  %20192 = zext i16 %20190 to i32
  %20193 = icmp ult i32 %20191, %20192
  br i1 %20193, label %20141, label %20194

20194:                                            ; preds = %20189
  %20195 = load ptr, ptr %3, align 4
  br label %20196

20196:                                            ; preds = %20194, %20135
  %20197 = phi ptr [ %20195, %20194 ], [ %20137, %20135 ]
  %20198 = getelementptr inbounds %struct.mxl5005s_state, ptr %20197, i32 0, i32 20
  %20199 = load i16, ptr %20198, align 2
  %20200 = icmp eq i16 %20199, 0
  br i1 %20200, label %20254, label %20201

20201:                                            ; preds = %20249, %20196
  %20202 = phi i16 [ %20250, %20249 ], [ %20199, %20196 ]
  %20203 = phi i32 [ %20251, %20249 ], [ 0, %20196 ]
  %20204 = getelementptr %struct.mxl5005s_state, ptr %20197, i32 0, i32 21, i32 %20203
  %20205 = load i16, ptr %20204, align 2
  %20206 = icmp eq i16 %20205, 82
  br i1 %20206, label %20207, label %20249

20207:                                            ; preds = %20201
  %20208 = getelementptr %struct.mxl5005s_state, ptr %20197, i32 0, i32 21, i32 %20203, i32 1
  %20209 = load i16, ptr %20208, align 2
  %20210 = icmp eq i16 %20209, 0
  br i1 %20210, label %20249, label %20211

20211:                                            ; preds = %20242, %20207
  %20212 = phi i32 [ %20243, %20242 ], [ 0, %20207 ]
  %20213 = getelementptr %struct.mxl5005s_state, ptr %20197, i32 0, i32 21, i32 %20203, i32 4, i32 %20212
  store i16 0, ptr %20213, align 2
  %20214 = getelementptr %struct.mxl5005s_state, ptr %20197, i32 0, i32 21, i32 %20203, i32 3, i32 %20212
  %20215 = load i16, ptr %20214, align 2
  %20216 = load ptr, ptr %3, align 4
  %20217 = getelementptr inbounds %struct.mxl5005s_state, ptr %20216, i32 0, i32 24
  %20218 = load i16, ptr %20217, align 4
  %20219 = zext i16 %20218 to i32
  %20220 = icmp eq i16 %20218, 0
  br i1 %20220, label %20242, label %20221

20221:                                            ; preds = %20211
  %20222 = getelementptr %struct.mxl5005s_state, ptr %20197, i32 0, i32 21, i32 %20203, i32 2, i32 %20212
  %20223 = load i16, ptr %20222, align 2
  %20224 = and i16 %20223, 255
  br label %20225

20225:                                            ; preds = %20239, %20221
  %20226 = phi i32 [ 0, %20221 ], [ %20240, %20239 ]
  %20227 = getelementptr %struct.mxl5005s_state, ptr %20216, i32 0, i32 25, i32 %20226
  %20228 = load i16, ptr %20227, align 2
  %20229 = icmp eq i16 %20228, %20224
  br i1 %20229, label %20230, label %20239

20230:                                            ; preds = %20225
  %20231 = and i16 %20215, 255
  %20232 = zext i16 %20231 to i32
  %20233 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20232
  %20234 = load i8, ptr %20233, align 1
  %20235 = zext i8 %20234 to i16
  %20236 = getelementptr %struct.mxl5005s_state, ptr %20216, i32 0, i32 25, i32 %20226, i32 1
  %20237 = load i16, ptr %20236, align 2
  %20238 = and i16 %20237, %20235
  store i16 %20238, ptr %20236, align 2
  br label %20242

20239:                                            ; preds = %20225
  %20240 = add nuw nsw i32 %20226, 1
  %20241 = icmp eq i32 %20240, %20219
  br i1 %20241, label %20242, label %20225

20242:                                            ; preds = %20239, %20230, %20211
  %20243 = add nuw nsw i32 %20212, 1
  %20244 = load i16, ptr %20208, align 2
  %20245 = zext i16 %20244 to i32
  %20246 = icmp ult i32 %20243, %20245
  br i1 %20246, label %20211, label %20247

20247:                                            ; preds = %20242
  %20248 = load i16, ptr %20198, align 2
  br label %20249

20249:                                            ; preds = %20247, %20207, %20201
  %20250 = phi i16 [ %20248, %20247 ], [ %20202, %20207 ], [ %20202, %20201 ]
  %20251 = add nuw nsw i32 %20203, 1
  %20252 = zext i16 %20250 to i32
  %20253 = icmp ult i32 %20251, %20252
  br i1 %20253, label %20201, label %20254

20254:                                            ; preds = %20249, %20196
  %20255 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %20256 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %20257 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %20258 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %20259 = load i32, ptr %5, align 4
  br label %20260

20260:                                            ; preds = %20254, %20013
  %20261 = phi i32 [ %20259, %20254 ], [ %20014, %20013 ]
  %20262 = add i32 %20261, -570000000
  %20263 = icmp ult i32 %20262, 200000000
  br i1 %20263, label %20264, label %20391

20264:                                            ; preds = %20260
  %20265 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %20266 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %20267 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %20268 = load ptr, ptr %3, align 4
  %20269 = getelementptr inbounds %struct.mxl5005s_state, ptr %20268, i32 0, i32 18
  %20270 = load i16, ptr %20269, align 4
  %20271 = icmp eq i16 %20270, 0
  br i1 %20271, label %20327, label %20272

20272:                                            ; preds = %20320, %20264
  %20273 = phi i16 [ %20321, %20320 ], [ %20270, %20264 ]
  %20274 = phi i32 [ %20322, %20320 ], [ 0, %20264 ]
  %20275 = getelementptr %struct.mxl5005s_state, ptr %20268, i32 0, i32 19, i32 %20274
  %20276 = load i16, ptr %20275, align 2
  %20277 = icmp eq i16 %20276, 82
  br i1 %20277, label %20278, label %20320

20278:                                            ; preds = %20272
  %20279 = getelementptr %struct.mxl5005s_state, ptr %20268, i32 0, i32 19, i32 %20274, i32 1
  %20280 = load i16, ptr %20279, align 2
  %20281 = icmp eq i16 %20280, 0
  br i1 %20281, label %20320, label %20282

20282:                                            ; preds = %20313, %20278
  %20283 = phi i32 [ %20314, %20313 ], [ 0, %20278 ]
  %20284 = getelementptr %struct.mxl5005s_state, ptr %20268, i32 0, i32 19, i32 %20274, i32 4, i32 %20283
  store i16 0, ptr %20284, align 2
  %20285 = getelementptr %struct.mxl5005s_state, ptr %20268, i32 0, i32 19, i32 %20274, i32 3, i32 %20283
  %20286 = load i16, ptr %20285, align 2
  %20287 = load ptr, ptr %3, align 4
  %20288 = getelementptr inbounds %struct.mxl5005s_state, ptr %20287, i32 0, i32 24
  %20289 = load i16, ptr %20288, align 4
  %20290 = zext i16 %20289 to i32
  %20291 = icmp eq i16 %20289, 0
  br i1 %20291, label %20313, label %20292

20292:                                            ; preds = %20282
  %20293 = getelementptr %struct.mxl5005s_state, ptr %20268, i32 0, i32 19, i32 %20274, i32 2, i32 %20283
  %20294 = load i16, ptr %20293, align 2
  %20295 = and i16 %20294, 255
  br label %20296

20296:                                            ; preds = %20310, %20292
  %20297 = phi i32 [ 0, %20292 ], [ %20311, %20310 ]
  %20298 = getelementptr %struct.mxl5005s_state, ptr %20287, i32 0, i32 25, i32 %20297
  %20299 = load i16, ptr %20298, align 2
  %20300 = icmp eq i16 %20299, %20295
  br i1 %20300, label %20301, label %20310

20301:                                            ; preds = %20296
  %20302 = and i16 %20286, 255
  %20303 = zext i16 %20302 to i32
  %20304 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20303
  %20305 = load i8, ptr %20304, align 1
  %20306 = zext i8 %20305 to i16
  %20307 = getelementptr %struct.mxl5005s_state, ptr %20287, i32 0, i32 25, i32 %20297, i32 1
  %20308 = load i16, ptr %20307, align 2
  %20309 = and i16 %20308, %20306
  store i16 %20309, ptr %20307, align 2
  br label %20313

20310:                                            ; preds = %20296
  %20311 = add nuw nsw i32 %20297, 1
  %20312 = icmp eq i32 %20311, %20290
  br i1 %20312, label %20313, label %20296

20313:                                            ; preds = %20310, %20301, %20282
  %20314 = add nuw nsw i32 %20283, 1
  %20315 = load i16, ptr %20279, align 2
  %20316 = zext i16 %20315 to i32
  %20317 = icmp ult i32 %20314, %20316
  br i1 %20317, label %20282, label %20318

20318:                                            ; preds = %20313
  %20319 = load i16, ptr %20269, align 4
  br label %20320

20320:                                            ; preds = %20318, %20278, %20272
  %20321 = phi i16 [ %20319, %20318 ], [ %20273, %20278 ], [ %20273, %20272 ]
  %20322 = add nuw nsw i32 %20274, 1
  %20323 = zext i16 %20321 to i32
  %20324 = icmp ult i32 %20322, %20323
  br i1 %20324, label %20272, label %20325

20325:                                            ; preds = %20320
  %20326 = load ptr, ptr %3, align 4
  br label %20327

20327:                                            ; preds = %20325, %20264
  %20328 = phi ptr [ %20326, %20325 ], [ %20268, %20264 ]
  %20329 = getelementptr inbounds %struct.mxl5005s_state, ptr %20328, i32 0, i32 20
  %20330 = load i16, ptr %20329, align 2
  %20331 = icmp eq i16 %20330, 0
  br i1 %20331, label %20385, label %20332

20332:                                            ; preds = %20380, %20327
  %20333 = phi i16 [ %20381, %20380 ], [ %20330, %20327 ]
  %20334 = phi i32 [ %20382, %20380 ], [ 0, %20327 ]
  %20335 = getelementptr %struct.mxl5005s_state, ptr %20328, i32 0, i32 21, i32 %20334
  %20336 = load i16, ptr %20335, align 2
  %20337 = icmp eq i16 %20336, 82
  br i1 %20337, label %20338, label %20380

20338:                                            ; preds = %20332
  %20339 = getelementptr %struct.mxl5005s_state, ptr %20328, i32 0, i32 21, i32 %20334, i32 1
  %20340 = load i16, ptr %20339, align 2
  %20341 = icmp eq i16 %20340, 0
  br i1 %20341, label %20380, label %20342

20342:                                            ; preds = %20373, %20338
  %20343 = phi i32 [ %20374, %20373 ], [ 0, %20338 ]
  %20344 = getelementptr %struct.mxl5005s_state, ptr %20328, i32 0, i32 21, i32 %20334, i32 4, i32 %20343
  store i16 0, ptr %20344, align 2
  %20345 = getelementptr %struct.mxl5005s_state, ptr %20328, i32 0, i32 21, i32 %20334, i32 3, i32 %20343
  %20346 = load i16, ptr %20345, align 2
  %20347 = load ptr, ptr %3, align 4
  %20348 = getelementptr inbounds %struct.mxl5005s_state, ptr %20347, i32 0, i32 24
  %20349 = load i16, ptr %20348, align 4
  %20350 = zext i16 %20349 to i32
  %20351 = icmp eq i16 %20349, 0
  br i1 %20351, label %20373, label %20352

20352:                                            ; preds = %20342
  %20353 = getelementptr %struct.mxl5005s_state, ptr %20328, i32 0, i32 21, i32 %20334, i32 2, i32 %20343
  %20354 = load i16, ptr %20353, align 2
  %20355 = and i16 %20354, 255
  br label %20356

20356:                                            ; preds = %20370, %20352
  %20357 = phi i32 [ 0, %20352 ], [ %20371, %20370 ]
  %20358 = getelementptr %struct.mxl5005s_state, ptr %20347, i32 0, i32 25, i32 %20357
  %20359 = load i16, ptr %20358, align 2
  %20360 = icmp eq i16 %20359, %20355
  br i1 %20360, label %20361, label %20370

20361:                                            ; preds = %20356
  %20362 = and i16 %20346, 255
  %20363 = zext i16 %20362 to i32
  %20364 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20363
  %20365 = load i8, ptr %20364, align 1
  %20366 = zext i8 %20365 to i16
  %20367 = getelementptr %struct.mxl5005s_state, ptr %20347, i32 0, i32 25, i32 %20357, i32 1
  %20368 = load i16, ptr %20367, align 2
  %20369 = and i16 %20368, %20366
  store i16 %20369, ptr %20367, align 2
  br label %20373

20370:                                            ; preds = %20356
  %20371 = add nuw nsw i32 %20357, 1
  %20372 = icmp eq i32 %20371, %20350
  br i1 %20372, label %20373, label %20356

20373:                                            ; preds = %20370, %20361, %20342
  %20374 = add nuw nsw i32 %20343, 1
  %20375 = load i16, ptr %20339, align 2
  %20376 = zext i16 %20375 to i32
  %20377 = icmp ult i32 %20374, %20376
  br i1 %20377, label %20342, label %20378

20378:                                            ; preds = %20373
  %20379 = load i16, ptr %20329, align 2
  br label %20380

20380:                                            ; preds = %20378, %20338, %20332
  %20381 = phi i16 [ %20379, %20378 ], [ %20333, %20338 ], [ %20333, %20332 ]
  %20382 = add nuw nsw i32 %20334, 1
  %20383 = zext i16 %20381 to i32
  %20384 = icmp ult i32 %20382, %20383
  br i1 %20384, label %20332, label %20385

20385:                                            ; preds = %20380, %20327
  %20386 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %20387 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %20388 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %20389 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %20390 = load i32, ptr %5, align 4
  br label %20391

20391:                                            ; preds = %20385, %20260
  %20392 = phi i32 [ %20390, %20385 ], [ %20261, %20260 ]
  %20393 = add i32 %20392, -770000000
  %20394 = icmp ult i32 %20393, 130000001
  br i1 %20394, label %20395, label %20518

20395:                                            ; preds = %20391
  %20396 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 1) #12
  %20397 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 84, i32 noundef 1, i16 noundef zeroext 2) #12
  %20398 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 4, i8 noundef zeroext 1)
  %20399 = load ptr, ptr %3, align 4
  %20400 = getelementptr inbounds %struct.mxl5005s_state, ptr %20399, i32 0, i32 18
  %20401 = load i16, ptr %20400, align 4
  %20402 = icmp eq i16 %20401, 0
  br i1 %20402, label %20458, label %20403

20403:                                            ; preds = %20451, %20395
  %20404 = phi i16 [ %20452, %20451 ], [ %20401, %20395 ]
  %20405 = phi i32 [ %20453, %20451 ], [ 0, %20395 ]
  %20406 = getelementptr %struct.mxl5005s_state, ptr %20399, i32 0, i32 19, i32 %20405
  %20407 = load i16, ptr %20406, align 2
  %20408 = icmp eq i16 %20407, 82
  br i1 %20408, label %20409, label %20451

20409:                                            ; preds = %20403
  %20410 = getelementptr %struct.mxl5005s_state, ptr %20399, i32 0, i32 19, i32 %20405, i32 1
  %20411 = load i16, ptr %20410, align 2
  %20412 = icmp eq i16 %20411, 0
  br i1 %20412, label %20451, label %20413

20413:                                            ; preds = %20444, %20409
  %20414 = phi i32 [ %20445, %20444 ], [ 0, %20409 ]
  %20415 = getelementptr %struct.mxl5005s_state, ptr %20399, i32 0, i32 19, i32 %20405, i32 4, i32 %20414
  store i16 0, ptr %20415, align 2
  %20416 = getelementptr %struct.mxl5005s_state, ptr %20399, i32 0, i32 19, i32 %20405, i32 3, i32 %20414
  %20417 = load i16, ptr %20416, align 2
  %20418 = load ptr, ptr %3, align 4
  %20419 = getelementptr inbounds %struct.mxl5005s_state, ptr %20418, i32 0, i32 24
  %20420 = load i16, ptr %20419, align 4
  %20421 = zext i16 %20420 to i32
  %20422 = icmp eq i16 %20420, 0
  br i1 %20422, label %20444, label %20423

20423:                                            ; preds = %20413
  %20424 = getelementptr %struct.mxl5005s_state, ptr %20399, i32 0, i32 19, i32 %20405, i32 2, i32 %20414
  %20425 = load i16, ptr %20424, align 2
  %20426 = and i16 %20425, 255
  br label %20427

20427:                                            ; preds = %20441, %20423
  %20428 = phi i32 [ 0, %20423 ], [ %20442, %20441 ]
  %20429 = getelementptr %struct.mxl5005s_state, ptr %20418, i32 0, i32 25, i32 %20428
  %20430 = load i16, ptr %20429, align 2
  %20431 = icmp eq i16 %20430, %20426
  br i1 %20431, label %20432, label %20441

20432:                                            ; preds = %20427
  %20433 = and i16 %20417, 255
  %20434 = zext i16 %20433 to i32
  %20435 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20434
  %20436 = load i8, ptr %20435, align 1
  %20437 = zext i8 %20436 to i16
  %20438 = getelementptr %struct.mxl5005s_state, ptr %20418, i32 0, i32 25, i32 %20428, i32 1
  %20439 = load i16, ptr %20438, align 2
  %20440 = and i16 %20439, %20437
  store i16 %20440, ptr %20438, align 2
  br label %20444

20441:                                            ; preds = %20427
  %20442 = add nuw nsw i32 %20428, 1
  %20443 = icmp eq i32 %20442, %20421
  br i1 %20443, label %20444, label %20427

20444:                                            ; preds = %20441, %20432, %20413
  %20445 = add nuw nsw i32 %20414, 1
  %20446 = load i16, ptr %20410, align 2
  %20447 = zext i16 %20446 to i32
  %20448 = icmp ult i32 %20445, %20447
  br i1 %20448, label %20413, label %20449

20449:                                            ; preds = %20444
  %20450 = load i16, ptr %20400, align 4
  br label %20451

20451:                                            ; preds = %20449, %20409, %20403
  %20452 = phi i16 [ %20450, %20449 ], [ %20404, %20409 ], [ %20404, %20403 ]
  %20453 = add nuw nsw i32 %20405, 1
  %20454 = zext i16 %20452 to i32
  %20455 = icmp ult i32 %20453, %20454
  br i1 %20455, label %20403, label %20456

20456:                                            ; preds = %20451
  %20457 = load ptr, ptr %3, align 4
  br label %20458

20458:                                            ; preds = %20456, %20395
  %20459 = phi ptr [ %20457, %20456 ], [ %20399, %20395 ]
  %20460 = getelementptr inbounds %struct.mxl5005s_state, ptr %20459, i32 0, i32 20
  %20461 = load i16, ptr %20460, align 2
  %20462 = icmp eq i16 %20461, 0
  br i1 %20462, label %20516, label %20463

20463:                                            ; preds = %20511, %20458
  %20464 = phi i16 [ %20512, %20511 ], [ %20461, %20458 ]
  %20465 = phi i32 [ %20513, %20511 ], [ 0, %20458 ]
  %20466 = getelementptr %struct.mxl5005s_state, ptr %20459, i32 0, i32 21, i32 %20465
  %20467 = load i16, ptr %20466, align 2
  %20468 = icmp eq i16 %20467, 82
  br i1 %20468, label %20469, label %20511

20469:                                            ; preds = %20463
  %20470 = getelementptr %struct.mxl5005s_state, ptr %20459, i32 0, i32 21, i32 %20465, i32 1
  %20471 = load i16, ptr %20470, align 2
  %20472 = icmp eq i16 %20471, 0
  br i1 %20472, label %20511, label %20473

20473:                                            ; preds = %20504, %20469
  %20474 = phi i32 [ %20505, %20504 ], [ 0, %20469 ]
  %20475 = getelementptr %struct.mxl5005s_state, ptr %20459, i32 0, i32 21, i32 %20465, i32 4, i32 %20474
  store i16 0, ptr %20475, align 2
  %20476 = getelementptr %struct.mxl5005s_state, ptr %20459, i32 0, i32 21, i32 %20465, i32 3, i32 %20474
  %20477 = load i16, ptr %20476, align 2
  %20478 = load ptr, ptr %3, align 4
  %20479 = getelementptr inbounds %struct.mxl5005s_state, ptr %20478, i32 0, i32 24
  %20480 = load i16, ptr %20479, align 4
  %20481 = zext i16 %20480 to i32
  %20482 = icmp eq i16 %20480, 0
  br i1 %20482, label %20504, label %20483

20483:                                            ; preds = %20473
  %20484 = getelementptr %struct.mxl5005s_state, ptr %20459, i32 0, i32 21, i32 %20465, i32 2, i32 %20474
  %20485 = load i16, ptr %20484, align 2
  %20486 = and i16 %20485, 255
  br label %20487

20487:                                            ; preds = %20501, %20483
  %20488 = phi i32 [ 0, %20483 ], [ %20502, %20501 ]
  %20489 = getelementptr %struct.mxl5005s_state, ptr %20478, i32 0, i32 25, i32 %20488
  %20490 = load i16, ptr %20489, align 2
  %20491 = icmp eq i16 %20490, %20486
  br i1 %20491, label %20492, label %20501

20492:                                            ; preds = %20487
  %20493 = and i16 %20477, 255
  %20494 = zext i16 %20493 to i32
  %20495 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %20494
  %20496 = load i8, ptr %20495, align 1
  %20497 = zext i8 %20496 to i16
  %20498 = getelementptr %struct.mxl5005s_state, ptr %20478, i32 0, i32 25, i32 %20488, i32 1
  %20499 = load i16, ptr %20498, align 2
  %20500 = and i16 %20499, %20497
  store i16 %20500, ptr %20498, align 2
  br label %20504

20501:                                            ; preds = %20487
  %20502 = add nuw nsw i32 %20488, 1
  %20503 = icmp eq i32 %20502, %20481
  br i1 %20503, label %20504, label %20487

20504:                                            ; preds = %20501, %20492, %20473
  %20505 = add nuw nsw i32 %20474, 1
  %20506 = load i16, ptr %20470, align 2
  %20507 = zext i16 %20506 to i32
  %20508 = icmp ult i32 %20505, %20507
  br i1 %20508, label %20473, label %20509

20509:                                            ; preds = %20504
  %20510 = load i16, ptr %20460, align 2
  br label %20511

20511:                                            ; preds = %20509, %20469, %20463
  %20512 = phi i16 [ %20510, %20509 ], [ %20464, %20469 ], [ %20464, %20463 ]
  %20513 = add nuw nsw i32 %20465, 1
  %20514 = zext i16 %20512 to i32
  %20515 = icmp ult i32 %20513, %20514
  br i1 %20515, label %20463, label %20516

20516:                                            ; preds = %20511, %20458
  %20517 = tail call fastcc zeroext i16 @MXL_SetGPIO(ptr noundef %0, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %20518

20518:                                            ; preds = %20516, %20391, %19239, %18873, %6209, %737, %32
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #7

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i16 @MXL_SetGPIO(ptr nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #9 {
  switch i8 %1, label %506 [
    i8 1, label %4
    i8 3, label %10
    i8 4, label %258
  ]

4:                                                ; preds = %3
  %5 = icmp eq i8 %2, 0
  %6 = zext i1 %5 to i32
  %7 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef %6, i16 noundef zeroext 1) #12
  %8 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 82, i32 noundef %6, i16 noundef zeroext 2) #12
  %9 = add i16 %8, %7
  br label %506

10:                                               ; preds = %3
  switch i8 %2, label %506 [
    i8 1, label %11
    i8 0, label %250
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.mxl5005s_state, ptr %13, i32 0, i32 18
  %15 = load i16, ptr %14, align 4
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %72, label %17

17:                                               ; preds = %65, %11
  %18 = phi i16 [ %66, %65 ], [ %15, %11 ]
  %19 = phi i32 [ %67, %65 ], [ 0, %11 ]
  %20 = getelementptr %struct.mxl5005s_state, ptr %13, i32 0, i32 19, i32 %19
  %21 = load i16, ptr %20, align 2
  %22 = icmp eq i16 %21, 81
  br i1 %22, label %23, label %65

23:                                               ; preds = %17
  %24 = getelementptr %struct.mxl5005s_state, ptr %13, i32 0, i32 19, i32 %19, i32 1
  %25 = load i16, ptr %24, align 2
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %65, label %27

27:                                               ; preds = %58, %23
  %28 = phi i32 [ %59, %58 ], [ 0, %23 ]
  %29 = getelementptr %struct.mxl5005s_state, ptr %13, i32 0, i32 19, i32 %19, i32 4, i32 %28
  store i16 0, ptr %29, align 2
  %30 = getelementptr %struct.mxl5005s_state, ptr %13, i32 0, i32 19, i32 %19, i32 3, i32 %28
  %31 = load i16, ptr %30, align 2
  %32 = load ptr, ptr %12, align 4
  %33 = getelementptr inbounds %struct.mxl5005s_state, ptr %32, i32 0, i32 24
  %34 = load i16, ptr %33, align 4
  %35 = zext i16 %34 to i32
  %36 = icmp eq i16 %34, 0
  br i1 %36, label %58, label %37

37:                                               ; preds = %27
  %38 = getelementptr %struct.mxl5005s_state, ptr %13, i32 0, i32 19, i32 %19, i32 2, i32 %28
  %39 = load i16, ptr %38, align 2
  %40 = and i16 %39, 255
  br label %41

41:                                               ; preds = %55, %37
  %42 = phi i32 [ 0, %37 ], [ %56, %55 ]
  %43 = getelementptr %struct.mxl5005s_state, ptr %32, i32 0, i32 25, i32 %42
  %44 = load i16, ptr %43, align 2
  %45 = icmp eq i16 %44, %40
  br i1 %45, label %46, label %55

46:                                               ; preds = %41
  %47 = and i16 %31, 255
  %48 = zext i16 %47 to i32
  %49 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %48
  %50 = load i8, ptr %49, align 1
  %51 = zext i8 %50 to i16
  %52 = getelementptr %struct.mxl5005s_state, ptr %32, i32 0, i32 25, i32 %42, i32 1
  %53 = load i16, ptr %52, align 2
  %54 = and i16 %53, %51
  store i16 %54, ptr %52, align 2
  br label %58

55:                                               ; preds = %41
  %56 = add nuw nsw i32 %42, 1
  %57 = icmp eq i32 %56, %35
  br i1 %57, label %58, label %41

58:                                               ; preds = %55, %46, %27
  %59 = add nuw nsw i32 %28, 1
  %60 = load i16, ptr %24, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp ult i32 %59, %61
  br i1 %62, label %27, label %63

63:                                               ; preds = %58
  %64 = load i16, ptr %14, align 4
  br label %65

65:                                               ; preds = %63, %23, %17
  %66 = phi i16 [ %64, %63 ], [ %18, %23 ], [ %18, %17 ]
  %67 = add nuw nsw i32 %19, 1
  %68 = zext i16 %66 to i32
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %17, label %70

70:                                               ; preds = %65
  %71 = load ptr, ptr %12, align 4
  br label %72

72:                                               ; preds = %70, %11
  %73 = phi ptr [ %71, %70 ], [ %13, %11 ]
  %74 = getelementptr inbounds %struct.mxl5005s_state, ptr %73, i32 0, i32 20
  %75 = load i16, ptr %74, align 2
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %132, label %77

77:                                               ; preds = %125, %72
  %78 = phi i16 [ %126, %125 ], [ %75, %72 ]
  %79 = phi i32 [ %127, %125 ], [ 0, %72 ]
  %80 = getelementptr %struct.mxl5005s_state, ptr %73, i32 0, i32 21, i32 %79
  %81 = load i16, ptr %80, align 2
  %82 = icmp eq i16 %81, 81
  br i1 %82, label %83, label %125

83:                                               ; preds = %77
  %84 = getelementptr %struct.mxl5005s_state, ptr %73, i32 0, i32 21, i32 %79, i32 1
  %85 = load i16, ptr %84, align 2
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %125, label %87

87:                                               ; preds = %118, %83
  %88 = phi i32 [ %119, %118 ], [ 0, %83 ]
  %89 = getelementptr %struct.mxl5005s_state, ptr %73, i32 0, i32 21, i32 %79, i32 4, i32 %88
  store i16 0, ptr %89, align 2
  %90 = getelementptr %struct.mxl5005s_state, ptr %73, i32 0, i32 21, i32 %79, i32 3, i32 %88
  %91 = load i16, ptr %90, align 2
  %92 = load ptr, ptr %12, align 4
  %93 = getelementptr inbounds %struct.mxl5005s_state, ptr %92, i32 0, i32 24
  %94 = load i16, ptr %93, align 4
  %95 = zext i16 %94 to i32
  %96 = icmp eq i16 %94, 0
  br i1 %96, label %118, label %97

97:                                               ; preds = %87
  %98 = getelementptr %struct.mxl5005s_state, ptr %73, i32 0, i32 21, i32 %79, i32 2, i32 %88
  %99 = load i16, ptr %98, align 2
  %100 = and i16 %99, 255
  br label %101

101:                                              ; preds = %115, %97
  %102 = phi i32 [ 0, %97 ], [ %116, %115 ]
  %103 = getelementptr %struct.mxl5005s_state, ptr %92, i32 0, i32 25, i32 %102
  %104 = load i16, ptr %103, align 2
  %105 = icmp eq i16 %104, %100
  br i1 %105, label %106, label %115

106:                                              ; preds = %101
  %107 = and i16 %91, 255
  %108 = zext i16 %107 to i32
  %109 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %108
  %110 = load i8, ptr %109, align 1
  %111 = zext i8 %110 to i16
  %112 = getelementptr %struct.mxl5005s_state, ptr %92, i32 0, i32 25, i32 %102, i32 1
  %113 = load i16, ptr %112, align 2
  %114 = and i16 %113, %111
  store i16 %114, ptr %112, align 2
  br label %118

115:                                              ; preds = %101
  %116 = add nuw nsw i32 %102, 1
  %117 = icmp eq i32 %116, %95
  br i1 %117, label %118, label %101

118:                                              ; preds = %115, %106, %87
  %119 = add nuw nsw i32 %88, 1
  %120 = load i16, ptr %84, align 2
  %121 = zext i16 %120 to i32
  %122 = icmp ult i32 %119, %121
  br i1 %122, label %87, label %123

123:                                              ; preds = %118
  %124 = load i16, ptr %74, align 2
  br label %125

125:                                              ; preds = %123, %83, %77
  %126 = phi i16 [ %124, %123 ], [ %78, %83 ], [ %78, %77 ]
  %127 = add nuw nsw i32 %79, 1
  %128 = zext i16 %126 to i32
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %77, label %130

130:                                              ; preds = %125
  %131 = load ptr, ptr %12, align 4
  br label %132

132:                                              ; preds = %130, %72
  %133 = phi ptr [ %131, %130 ], [ %73, %72 ]
  %134 = getelementptr inbounds %struct.mxl5005s_state, ptr %133, i32 0, i32 18
  %135 = load i16, ptr %134, align 4
  %136 = icmp eq i16 %135, 0
  br i1 %136, label %192, label %137

137:                                              ; preds = %185, %132
  %138 = phi i16 [ %186, %185 ], [ %135, %132 ]
  %139 = phi i32 [ %187, %185 ], [ 0, %132 ]
  %140 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 19, i32 %139
  %141 = load i16, ptr %140, align 2
  %142 = icmp eq i16 %141, 79
  br i1 %142, label %143, label %185

143:                                              ; preds = %137
  %144 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 19, i32 %139, i32 1
  %145 = load i16, ptr %144, align 2
  %146 = icmp eq i16 %145, 0
  br i1 %146, label %185, label %147

147:                                              ; preds = %178, %143
  %148 = phi i32 [ %179, %178 ], [ 0, %143 ]
  %149 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 19, i32 %139, i32 4, i32 %148
  store i16 0, ptr %149, align 2
  %150 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 19, i32 %139, i32 3, i32 %148
  %151 = load i16, ptr %150, align 2
  %152 = load ptr, ptr %12, align 4
  %153 = getelementptr inbounds %struct.mxl5005s_state, ptr %152, i32 0, i32 24
  %154 = load i16, ptr %153, align 4
  %155 = zext i16 %154 to i32
  %156 = icmp eq i16 %154, 0
  br i1 %156, label %178, label %157

157:                                              ; preds = %147
  %158 = getelementptr %struct.mxl5005s_state, ptr %133, i32 0, i32 19, i32 %139, i32 2, i32 %148
  %159 = load i16, ptr %158, align 2
  %160 = and i16 %159, 255
  br label %161

161:                                              ; preds = %175, %157
  %162 = phi i32 [ 0, %157 ], [ %176, %175 ]
  %163 = getelementptr %struct.mxl5005s_state, ptr %152, i32 0, i32 25, i32 %162
  %164 = load i16, ptr %163, align 2
  %165 = icmp eq i16 %164, %160
  br i1 %165, label %166, label %175

166:                                              ; preds = %161
  %167 = and i16 %151, 255
  %168 = zext i16 %167 to i32
  %169 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %168
  %170 = load i8, ptr %169, align 1
  %171 = zext i8 %170 to i16
  %172 = getelementptr %struct.mxl5005s_state, ptr %152, i32 0, i32 25, i32 %162, i32 1
  %173 = load i16, ptr %172, align 2
  %174 = and i16 %173, %171
  store i16 %174, ptr %172, align 2
  br label %178

175:                                              ; preds = %161
  %176 = add nuw nsw i32 %162, 1
  %177 = icmp eq i32 %176, %155
  br i1 %177, label %178, label %161

178:                                              ; preds = %175, %166, %147
  %179 = add nuw nsw i32 %148, 1
  %180 = load i16, ptr %144, align 2
  %181 = zext i16 %180 to i32
  %182 = icmp ult i32 %179, %181
  br i1 %182, label %147, label %183

183:                                              ; preds = %178
  %184 = load i16, ptr %134, align 4
  br label %185

185:                                              ; preds = %183, %143, %137
  %186 = phi i16 [ %184, %183 ], [ %138, %143 ], [ %138, %137 ]
  %187 = add nuw nsw i32 %139, 1
  %188 = zext i16 %186 to i32
  %189 = icmp ult i32 %187, %188
  br i1 %189, label %137, label %190

190:                                              ; preds = %185
  %191 = load ptr, ptr %12, align 4
  br label %192

192:                                              ; preds = %190, %132
  %193 = phi ptr [ %191, %190 ], [ %133, %132 ]
  %194 = getelementptr inbounds %struct.mxl5005s_state, ptr %193, i32 0, i32 20
  %195 = load i16, ptr %194, align 2
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %506, label %197

197:                                              ; preds = %245, %192
  %198 = phi i16 [ %246, %245 ], [ %195, %192 ]
  %199 = phi i32 [ %247, %245 ], [ 0, %192 ]
  %200 = getelementptr %struct.mxl5005s_state, ptr %193, i32 0, i32 21, i32 %199
  %201 = load i16, ptr %200, align 2
  %202 = icmp eq i16 %201, 79
  br i1 %202, label %203, label %245

203:                                              ; preds = %197
  %204 = getelementptr %struct.mxl5005s_state, ptr %193, i32 0, i32 21, i32 %199, i32 1
  %205 = load i16, ptr %204, align 2
  %206 = icmp eq i16 %205, 0
  br i1 %206, label %245, label %207

207:                                              ; preds = %238, %203
  %208 = phi i32 [ %239, %238 ], [ 0, %203 ]
  %209 = getelementptr %struct.mxl5005s_state, ptr %193, i32 0, i32 21, i32 %199, i32 4, i32 %208
  store i16 0, ptr %209, align 2
  %210 = getelementptr %struct.mxl5005s_state, ptr %193, i32 0, i32 21, i32 %199, i32 3, i32 %208
  %211 = load i16, ptr %210, align 2
  %212 = load ptr, ptr %12, align 4
  %213 = getelementptr inbounds %struct.mxl5005s_state, ptr %212, i32 0, i32 24
  %214 = load i16, ptr %213, align 4
  %215 = zext i16 %214 to i32
  %216 = icmp eq i16 %214, 0
  br i1 %216, label %238, label %217

217:                                              ; preds = %207
  %218 = getelementptr %struct.mxl5005s_state, ptr %193, i32 0, i32 21, i32 %199, i32 2, i32 %208
  %219 = load i16, ptr %218, align 2
  %220 = and i16 %219, 255
  br label %221

221:                                              ; preds = %235, %217
  %222 = phi i32 [ 0, %217 ], [ %236, %235 ]
  %223 = getelementptr %struct.mxl5005s_state, ptr %212, i32 0, i32 25, i32 %222
  %224 = load i16, ptr %223, align 2
  %225 = icmp eq i16 %224, %220
  br i1 %225, label %226, label %235

226:                                              ; preds = %221
  %227 = and i16 %211, 255
  %228 = zext i16 %227 to i32
  %229 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %228
  %230 = load i8, ptr %229, align 1
  %231 = zext i8 %230 to i16
  %232 = getelementptr %struct.mxl5005s_state, ptr %212, i32 0, i32 25, i32 %222, i32 1
  %233 = load i16, ptr %232, align 2
  %234 = and i16 %233, %231
  store i16 %234, ptr %232, align 2
  br label %238

235:                                              ; preds = %221
  %236 = add nuw nsw i32 %222, 1
  %237 = icmp eq i32 %236, %215
  br i1 %237, label %238, label %221

238:                                              ; preds = %235, %226, %207
  %239 = add nuw nsw i32 %208, 1
  %240 = load i16, ptr %204, align 2
  %241 = zext i16 %240 to i32
  %242 = icmp ult i32 %239, %241
  br i1 %242, label %207, label %243

243:                                              ; preds = %238
  %244 = load i16, ptr %194, align 2
  br label %245

245:                                              ; preds = %243, %203, %197
  %246 = phi i16 [ %244, %243 ], [ %198, %203 ], [ %198, %197 ]
  %247 = add nuw nsw i32 %199, 1
  %248 = zext i16 %246 to i32
  %249 = icmp ult i32 %247, %248
  br i1 %249, label %197, label %506

250:                                              ; preds = %10
  %251 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 1) #12
  %252 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 81, i32 noundef 1, i16 noundef zeroext 2) #12
  %253 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 1) #12
  %254 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 79, i32 noundef 1, i16 noundef zeroext 2) #12
  %255 = add i16 %252, %251
  %256 = add i16 %255, %253
  %257 = add i16 %256, %254
  br label %506

258:                                              ; preds = %3
  switch i8 %2, label %506 [
    i8 1, label %259
    i8 0, label %498
  ]

259:                                              ; preds = %258
  %260 = getelementptr inbounds %struct.dvb_frontend, ptr %0, i32 0, i32 4
  %261 = load ptr, ptr %260, align 4
  %262 = getelementptr inbounds %struct.mxl5005s_state, ptr %261, i32 0, i32 18
  %263 = load i16, ptr %262, align 4
  %264 = icmp eq i16 %263, 0
  br i1 %264, label %320, label %265

265:                                              ; preds = %313, %259
  %266 = phi i16 [ %314, %313 ], [ %263, %259 ]
  %267 = phi i32 [ %315, %313 ], [ 0, %259 ]
  %268 = getelementptr %struct.mxl5005s_state, ptr %261, i32 0, i32 19, i32 %267
  %269 = load i16, ptr %268, align 2
  %270 = icmp eq i16 %269, 80
  br i1 %270, label %271, label %313

271:                                              ; preds = %265
  %272 = getelementptr %struct.mxl5005s_state, ptr %261, i32 0, i32 19, i32 %267, i32 1
  %273 = load i16, ptr %272, align 2
  %274 = icmp eq i16 %273, 0
  br i1 %274, label %313, label %275

275:                                              ; preds = %306, %271
  %276 = phi i32 [ %307, %306 ], [ 0, %271 ]
  %277 = getelementptr %struct.mxl5005s_state, ptr %261, i32 0, i32 19, i32 %267, i32 4, i32 %276
  store i16 0, ptr %277, align 2
  %278 = getelementptr %struct.mxl5005s_state, ptr %261, i32 0, i32 19, i32 %267, i32 3, i32 %276
  %279 = load i16, ptr %278, align 2
  %280 = load ptr, ptr %260, align 4
  %281 = getelementptr inbounds %struct.mxl5005s_state, ptr %280, i32 0, i32 24
  %282 = load i16, ptr %281, align 4
  %283 = zext i16 %282 to i32
  %284 = icmp eq i16 %282, 0
  br i1 %284, label %306, label %285

285:                                              ; preds = %275
  %286 = getelementptr %struct.mxl5005s_state, ptr %261, i32 0, i32 19, i32 %267, i32 2, i32 %276
  %287 = load i16, ptr %286, align 2
  %288 = and i16 %287, 255
  br label %289

289:                                              ; preds = %303, %285
  %290 = phi i32 [ 0, %285 ], [ %304, %303 ]
  %291 = getelementptr %struct.mxl5005s_state, ptr %280, i32 0, i32 25, i32 %290
  %292 = load i16, ptr %291, align 2
  %293 = icmp eq i16 %292, %288
  br i1 %293, label %294, label %303

294:                                              ; preds = %289
  %295 = and i16 %279, 255
  %296 = zext i16 %295 to i32
  %297 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %296
  %298 = load i8, ptr %297, align 1
  %299 = zext i8 %298 to i16
  %300 = getelementptr %struct.mxl5005s_state, ptr %280, i32 0, i32 25, i32 %290, i32 1
  %301 = load i16, ptr %300, align 2
  %302 = and i16 %301, %299
  store i16 %302, ptr %300, align 2
  br label %306

303:                                              ; preds = %289
  %304 = add nuw nsw i32 %290, 1
  %305 = icmp eq i32 %304, %283
  br i1 %305, label %306, label %289

306:                                              ; preds = %303, %294, %275
  %307 = add nuw nsw i32 %276, 1
  %308 = load i16, ptr %272, align 2
  %309 = zext i16 %308 to i32
  %310 = icmp ult i32 %307, %309
  br i1 %310, label %275, label %311

311:                                              ; preds = %306
  %312 = load i16, ptr %262, align 4
  br label %313

313:                                              ; preds = %311, %271, %265
  %314 = phi i16 [ %312, %311 ], [ %266, %271 ], [ %266, %265 ]
  %315 = add nuw nsw i32 %267, 1
  %316 = zext i16 %314 to i32
  %317 = icmp ult i32 %315, %316
  br i1 %317, label %265, label %318

318:                                              ; preds = %313
  %319 = load ptr, ptr %260, align 4
  br label %320

320:                                              ; preds = %318, %259
  %321 = phi ptr [ %319, %318 ], [ %261, %259 ]
  %322 = getelementptr inbounds %struct.mxl5005s_state, ptr %321, i32 0, i32 20
  %323 = load i16, ptr %322, align 2
  %324 = icmp eq i16 %323, 0
  br i1 %324, label %380, label %325

325:                                              ; preds = %373, %320
  %326 = phi i16 [ %374, %373 ], [ %323, %320 ]
  %327 = phi i32 [ %375, %373 ], [ 0, %320 ]
  %328 = getelementptr %struct.mxl5005s_state, ptr %321, i32 0, i32 21, i32 %327
  %329 = load i16, ptr %328, align 2
  %330 = icmp eq i16 %329, 80
  br i1 %330, label %331, label %373

331:                                              ; preds = %325
  %332 = getelementptr %struct.mxl5005s_state, ptr %321, i32 0, i32 21, i32 %327, i32 1
  %333 = load i16, ptr %332, align 2
  %334 = icmp eq i16 %333, 0
  br i1 %334, label %373, label %335

335:                                              ; preds = %366, %331
  %336 = phi i32 [ %367, %366 ], [ 0, %331 ]
  %337 = getelementptr %struct.mxl5005s_state, ptr %321, i32 0, i32 21, i32 %327, i32 4, i32 %336
  store i16 0, ptr %337, align 2
  %338 = getelementptr %struct.mxl5005s_state, ptr %321, i32 0, i32 21, i32 %327, i32 3, i32 %336
  %339 = load i16, ptr %338, align 2
  %340 = load ptr, ptr %260, align 4
  %341 = getelementptr inbounds %struct.mxl5005s_state, ptr %340, i32 0, i32 24
  %342 = load i16, ptr %341, align 4
  %343 = zext i16 %342 to i32
  %344 = icmp eq i16 %342, 0
  br i1 %344, label %366, label %345

345:                                              ; preds = %335
  %346 = getelementptr %struct.mxl5005s_state, ptr %321, i32 0, i32 21, i32 %327, i32 2, i32 %336
  %347 = load i16, ptr %346, align 2
  %348 = and i16 %347, 255
  br label %349

349:                                              ; preds = %363, %345
  %350 = phi i32 [ 0, %345 ], [ %364, %363 ]
  %351 = getelementptr %struct.mxl5005s_state, ptr %340, i32 0, i32 25, i32 %350
  %352 = load i16, ptr %351, align 2
  %353 = icmp eq i16 %352, %348
  br i1 %353, label %354, label %363

354:                                              ; preds = %349
  %355 = and i16 %339, 255
  %356 = zext i16 %355 to i32
  %357 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %356
  %358 = load i8, ptr %357, align 1
  %359 = zext i8 %358 to i16
  %360 = getelementptr %struct.mxl5005s_state, ptr %340, i32 0, i32 25, i32 %350, i32 1
  %361 = load i16, ptr %360, align 2
  %362 = and i16 %361, %359
  store i16 %362, ptr %360, align 2
  br label %366

363:                                              ; preds = %349
  %364 = add nuw nsw i32 %350, 1
  %365 = icmp eq i32 %364, %343
  br i1 %365, label %366, label %349

366:                                              ; preds = %363, %354, %335
  %367 = add nuw nsw i32 %336, 1
  %368 = load i16, ptr %332, align 2
  %369 = zext i16 %368 to i32
  %370 = icmp ult i32 %367, %369
  br i1 %370, label %335, label %371

371:                                              ; preds = %366
  %372 = load i16, ptr %322, align 2
  br label %373

373:                                              ; preds = %371, %331, %325
  %374 = phi i16 [ %372, %371 ], [ %326, %331 ], [ %326, %325 ]
  %375 = add nuw nsw i32 %327, 1
  %376 = zext i16 %374 to i32
  %377 = icmp ult i32 %375, %376
  br i1 %377, label %325, label %378

378:                                              ; preds = %373
  %379 = load ptr, ptr %260, align 4
  br label %380

380:                                              ; preds = %378, %320
  %381 = phi ptr [ %379, %378 ], [ %321, %320 ]
  %382 = getelementptr inbounds %struct.mxl5005s_state, ptr %381, i32 0, i32 18
  %383 = load i16, ptr %382, align 4
  %384 = icmp eq i16 %383, 0
  br i1 %384, label %440, label %385

385:                                              ; preds = %433, %380
  %386 = phi i16 [ %434, %433 ], [ %383, %380 ]
  %387 = phi i32 [ %435, %433 ], [ 0, %380 ]
  %388 = getelementptr %struct.mxl5005s_state, ptr %381, i32 0, i32 19, i32 %387
  %389 = load i16, ptr %388, align 2
  %390 = icmp eq i16 %389, 78
  br i1 %390, label %391, label %433

391:                                              ; preds = %385
  %392 = getelementptr %struct.mxl5005s_state, ptr %381, i32 0, i32 19, i32 %387, i32 1
  %393 = load i16, ptr %392, align 2
  %394 = icmp eq i16 %393, 0
  br i1 %394, label %433, label %395

395:                                              ; preds = %426, %391
  %396 = phi i32 [ %427, %426 ], [ 0, %391 ]
  %397 = getelementptr %struct.mxl5005s_state, ptr %381, i32 0, i32 19, i32 %387, i32 4, i32 %396
  store i16 0, ptr %397, align 2
  %398 = getelementptr %struct.mxl5005s_state, ptr %381, i32 0, i32 19, i32 %387, i32 3, i32 %396
  %399 = load i16, ptr %398, align 2
  %400 = load ptr, ptr %260, align 4
  %401 = getelementptr inbounds %struct.mxl5005s_state, ptr %400, i32 0, i32 24
  %402 = load i16, ptr %401, align 4
  %403 = zext i16 %402 to i32
  %404 = icmp eq i16 %402, 0
  br i1 %404, label %426, label %405

405:                                              ; preds = %395
  %406 = getelementptr %struct.mxl5005s_state, ptr %381, i32 0, i32 19, i32 %387, i32 2, i32 %396
  %407 = load i16, ptr %406, align 2
  %408 = and i16 %407, 255
  br label %409

409:                                              ; preds = %423, %405
  %410 = phi i32 [ 0, %405 ], [ %424, %423 ]
  %411 = getelementptr %struct.mxl5005s_state, ptr %400, i32 0, i32 25, i32 %410
  %412 = load i16, ptr %411, align 2
  %413 = icmp eq i16 %412, %408
  br i1 %413, label %414, label %423

414:                                              ; preds = %409
  %415 = and i16 %399, 255
  %416 = zext i16 %415 to i32
  %417 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %416
  %418 = load i8, ptr %417, align 1
  %419 = zext i8 %418 to i16
  %420 = getelementptr %struct.mxl5005s_state, ptr %400, i32 0, i32 25, i32 %410, i32 1
  %421 = load i16, ptr %420, align 2
  %422 = and i16 %421, %419
  store i16 %422, ptr %420, align 2
  br label %426

423:                                              ; preds = %409
  %424 = add nuw nsw i32 %410, 1
  %425 = icmp eq i32 %424, %403
  br i1 %425, label %426, label %409

426:                                              ; preds = %423, %414, %395
  %427 = add nuw nsw i32 %396, 1
  %428 = load i16, ptr %392, align 2
  %429 = zext i16 %428 to i32
  %430 = icmp ult i32 %427, %429
  br i1 %430, label %395, label %431

431:                                              ; preds = %426
  %432 = load i16, ptr %382, align 4
  br label %433

433:                                              ; preds = %431, %391, %385
  %434 = phi i16 [ %432, %431 ], [ %386, %391 ], [ %386, %385 ]
  %435 = add nuw nsw i32 %387, 1
  %436 = zext i16 %434 to i32
  %437 = icmp ult i32 %435, %436
  br i1 %437, label %385, label %438

438:                                              ; preds = %433
  %439 = load ptr, ptr %260, align 4
  br label %440

440:                                              ; preds = %438, %380
  %441 = phi ptr [ %439, %438 ], [ %381, %380 ]
  %442 = getelementptr inbounds %struct.mxl5005s_state, ptr %441, i32 0, i32 20
  %443 = load i16, ptr %442, align 2
  %444 = icmp eq i16 %443, 0
  br i1 %444, label %506, label %445

445:                                              ; preds = %493, %440
  %446 = phi i16 [ %494, %493 ], [ %443, %440 ]
  %447 = phi i32 [ %495, %493 ], [ 0, %440 ]
  %448 = getelementptr %struct.mxl5005s_state, ptr %441, i32 0, i32 21, i32 %447
  %449 = load i16, ptr %448, align 2
  %450 = icmp eq i16 %449, 78
  br i1 %450, label %451, label %493

451:                                              ; preds = %445
  %452 = getelementptr %struct.mxl5005s_state, ptr %441, i32 0, i32 21, i32 %447, i32 1
  %453 = load i16, ptr %452, align 2
  %454 = icmp eq i16 %453, 0
  br i1 %454, label %493, label %455

455:                                              ; preds = %486, %451
  %456 = phi i32 [ %487, %486 ], [ 0, %451 ]
  %457 = getelementptr %struct.mxl5005s_state, ptr %441, i32 0, i32 21, i32 %447, i32 4, i32 %456
  store i16 0, ptr %457, align 2
  %458 = getelementptr %struct.mxl5005s_state, ptr %441, i32 0, i32 21, i32 %447, i32 3, i32 %456
  %459 = load i16, ptr %458, align 2
  %460 = load ptr, ptr %260, align 4
  %461 = getelementptr inbounds %struct.mxl5005s_state, ptr %460, i32 0, i32 24
  %462 = load i16, ptr %461, align 4
  %463 = zext i16 %462 to i32
  %464 = icmp eq i16 %462, 0
  br i1 %464, label %486, label %465

465:                                              ; preds = %455
  %466 = getelementptr %struct.mxl5005s_state, ptr %441, i32 0, i32 21, i32 %447, i32 2, i32 %456
  %467 = load i16, ptr %466, align 2
  %468 = and i16 %467, 255
  br label %469

469:                                              ; preds = %483, %465
  %470 = phi i32 [ 0, %465 ], [ %484, %483 ]
  %471 = getelementptr %struct.mxl5005s_state, ptr %460, i32 0, i32 25, i32 %470
  %472 = load i16, ptr %471, align 2
  %473 = icmp eq i16 %472, %468
  br i1 %473, label %474, label %483

474:                                              ; preds = %469
  %475 = and i16 %459, 255
  %476 = zext i16 %475 to i32
  %477 = getelementptr [8 x i8], ptr @__const.MXL_RegWriteBit.AND_MAP, i32 0, i32 %476
  %478 = load i8, ptr %477, align 1
  %479 = zext i8 %478 to i16
  %480 = getelementptr %struct.mxl5005s_state, ptr %460, i32 0, i32 25, i32 %470, i32 1
  %481 = load i16, ptr %480, align 2
  %482 = and i16 %481, %479
  store i16 %482, ptr %480, align 2
  br label %486

483:                                              ; preds = %469
  %484 = add nuw nsw i32 %470, 1
  %485 = icmp eq i32 %484, %463
  br i1 %485, label %486, label %469

486:                                              ; preds = %483, %474, %455
  %487 = add nuw nsw i32 %456, 1
  %488 = load i16, ptr %452, align 2
  %489 = zext i16 %488 to i32
  %490 = icmp ult i32 %487, %489
  br i1 %490, label %455, label %491

491:                                              ; preds = %486
  %492 = load i16, ptr %442, align 2
  br label %493

493:                                              ; preds = %491, %451, %445
  %494 = phi i16 [ %492, %491 ], [ %446, %451 ], [ %446, %445 ]
  %495 = add nuw nsw i32 %447, 1
  %496 = zext i16 %494 to i32
  %497 = icmp ult i32 %495, %496
  br i1 %497, label %445, label %506

498:                                              ; preds = %258
  %499 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 1) #12
  %500 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 80, i32 noundef 1, i16 noundef zeroext 2) #12
  %501 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 1) #12
  %502 = tail call fastcc zeroext i16 @MXL_ControlWrite_Group(ptr noundef %0, i16 noundef zeroext 78, i32 noundef 1, i16 noundef zeroext 2) #12
  %503 = add i16 %499, %500
  %504 = add i16 %503, %501
  %505 = add i16 %504, %502
  br label %506

506:                                              ; preds = %498, %493, %440, %258, %250, %245, %192, %10, %4, %3
  %507 = phi i16 [ %505, %498 ], [ %9, %4 ], [ %257, %250 ], [ 0, %3 ], [ 0, %258 ], [ 0, %192 ], [ 0, %10 ], [ 0, %440 ], [ 0, %245 ], [ 0, %493 ]
  ret i16 %507
}

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly nofree nounwind willreturn }
attributes #4 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly nofree nounwind willreturn writeonly }
attributes #9 = { nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { cold nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind allocsize(2) }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 1, !"min_enum_size", i32 4}
!2 = !{i32 8, !"branch-target-enforcement", i32 0}
!3 = !{i32 8, !"sign-return-address", i32 0}
!4 = !{i32 8, !"sign-return-address-all", i32 0}
!5 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!6 = !{i32 7, !"uwtable", i32 1}
!7 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!8 = !{!"auto-init"}
