; ModuleID = '/llk/IR/drivers/soc/samsung/exynos5422-asv.c_pt.bc'
source_filename = "../drivers/soc/samsung/exynos5422-asv.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_exynos5422_asv_init:\09\09\09\09\09"
module asm "\09.asciz \09\22exynos5422_asv_init\22\09\09\09\09\09"
module asm "__kstrtabns_exynos5422_asv_init:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.exynos_asv = type { ptr, ptr, [2 x %struct.exynos_asv_subsys], ptr, i32, i32, i8, i32 }
%struct.exynos_asv_subsys = type { ptr, ptr, i32, %struct.exynos_asv_table, i32, i32, i32 }
%struct.exynos_asv_table = type { i32, i32, ptr }

@.str = private unnamed_addr constant [15 x i8] c"arm,cortex-a15\00", align 1
@asv_arm_table = internal constant [4 x [20 x [15 x i32]]] [[20 x [15 x i32]] [[15 x i32] [i32 2100, i32 1362500, i32 1362500, i32 1350000, i32 1337500, i32 1325000, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000], [15 x i32] [i32 2000, i32 1312500, i32 1312500, i32 1300000, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1900, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1800, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1700, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000], [15 x i32] [i32 1600, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500], [15 x i32] [i32 1500, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000], [15 x i32] [i32 1400, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000], [15 x i32] [i32 1300, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500], [15 x i32] [i32 1200, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 1100, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 1000, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [20 x [15 x i32]] [[15 x i32] [i32 2100, i32 1362500, i32 1362500, i32 1350000, i32 1337500, i32 1325000, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000], [15 x i32] [i32 2000, i32 1312500, i32 1312500, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1900, i32 1262500, i32 1250000, i32 1250000, i32 1237500, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000], [15 x i32] [i32 1800, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000], [15 x i32] [i32 1700, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500], [15 x i32] [i32 1600, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000], [15 x i32] [i32 1500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 1400, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 1300, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500], [15 x i32] [i32 1200, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 1100, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 1000, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [20 x [15 x i32]] [[15 x i32] [i32 2100, i32 1362500, i32 1362500, i32 1350000, i32 1337500, i32 1325000, i32 1312500, i32 1300000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000], [15 x i32] [i32 2000, i32 1312500, i32 1312500, i32 1300000, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1900, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000], [15 x i32] [i32 1800, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000], [15 x i32] [i32 1700, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500], [15 x i32] [i32 1600, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000], [15 x i32] [i32 1500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 1400, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 1300, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500], [15 x i32] [i32 1200, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 1100, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 1000, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [20 x [15 x i32]] [[15 x i32] [i32 1800, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000], [15 x i32] [i32 1700, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1600, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000], [15 x i32] [i32 1500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500], [15 x i32] [i32 1400, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 1300, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000], [15 x i32] [i32 1200, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000], [15 x i32] [i32 1100, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 1000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 900, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 800, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] zeroinitializer, [15 x i32] zeroinitializer, [15 x i32] zeroinitializer]], align 4
@.str.1 = private unnamed_addr constant [14 x i8] c"arm,cortex-a7\00", align 1
@asv_kfc_table = internal constant [4 x [14 x [15 x i32]]] [[14 x [15 x i32]] [[15 x i32] [i32 1500000, i32 1300000, i32 1300000, i32 1300000, i32 1287500, i32 1287500, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1400000, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1300000, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1200000, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500], [15 x i32] [i32 1100000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000], [15 x i32] [i32 1000000, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 900000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 800000, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600000, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [14 x [15 x i32]] [[15 x i32] [i32 1500, i32 1300000, i32 1300000, i32 1300000, i32 1287500, i32 1287500, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1400, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1300, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1200, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500], [15 x i32] [i32 1100, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000], [15 x i32] [i32 1000, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 900, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 800, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [14 x [15 x i32]] [[15 x i32] [i32 1500, i32 1300000, i32 1300000, i32 1300000, i32 1287500, i32 1287500, i32 1287500, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500], [15 x i32] [i32 1400, i32 1275000, i32 1262500, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500], [15 x i32] [i32 1300, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500], [15 x i32] [i32 1200, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500], [15 x i32] [i32 1100, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000], [15 x i32] [i32 1000, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500], [15 x i32] [i32 900, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000], [15 x i32] [i32 800, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 700, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000]], [14 x [15 x i32]] [[15 x i32] [i32 1300, i32 1250000, i32 1237500, i32 1225000, i32 1212500, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500], [15 x i32] [i32 1200, i32 1200000, i32 1187500, i32 1175000, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500], [15 x i32] [i32 1100, i32 1162500, i32 1150000, i32 1137500, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000], [15 x i32] [i32 1000, i32 1125000, i32 1112500, i32 1100000, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500], [15 x i32] [i32 900, i32 1087500, i32 1075000, i32 1062500, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000], [15 x i32] [i32 800, i32 1050000, i32 1037500, i32 1025000, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000], [15 x i32] [i32 700, i32 1012500, i32 1000000, i32 987500, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 600, i32 975000, i32 962500, i32 950000, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 500, i32 937500, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 400, i32 925000, i32 912500, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 300, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] [i32 200, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000, i32 900000], [15 x i32] zeroinitializer, [15 x i32] zeroinitializer]], align 4
@__kstrtab_exynos5422_asv_init = external dso_local constant [0 x i8], align 1
@__kstrtabns_exynos5422_asv_init = external dso_local constant [0 x i8], align 1
@__ksymtab_exynos5422_asv_init = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @exynos5422_asv_init to i32), ptr @__kstrtab_exynos5422_asv_init, ptr @__kstrtabns_exynos5422_asv_init }, section "___ksymtab_gpl+exynos5422_asv_init", align 4
@llvm.compiler.used = appending global [1 x ptr] [ptr @__ksymtab_exynos5422_asv_init], section "llvm.metadata"
@switch.table.exynos5422_asv_init.4 = private unnamed_addr constant [3 x i32] [i32 12500, i32 50000, i32 25000], align 4

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @exynos5422_asv_init(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #4
  store i32 0, ptr %5, align 4, !annotation !8
  %6 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 4
  %8 = call i32 @regmap_read(ptr noundef %7, i32 noundef 4, ptr noundef nonnull %5) #4
  %9 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 7
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, 2
  %12 = load i32, ptr %5, align 4
  %13 = trunc i32 %12 to i8
  %14 = lshr i8 %13, 3
  %15 = and i8 %14, 1
  %16 = and i32 %12, 4096
  %17 = icmp ne i32 %16, 0
  %18 = select i1 %11, i8 0, i8 %15
  %19 = select i1 %11, i1 true, i1 %17
  %20 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 6
  store i8 %18, ptr %20, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #4
  store i32 0, ptr %3, align 4, !annotation !8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #4
  store i32 0, ptr %4, align 4, !annotation !8
  %21 = load ptr, ptr %6, align 4
  %22 = call i32 @regmap_read(ptr noundef %21, i32 noundef 4, ptr noundef nonnull %3) #4
  %23 = load ptr, ptr %6, align 4
  %24 = call i32 @regmap_read(ptr noundef %23, i32 noundef 28, ptr noundef nonnull %4) #4
  %25 = load i8, ptr %20, align 4, !range !9
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %1
  %28 = load i32, ptr %3, align 4
  %29 = lshr i32 %28, 17
  %30 = and i32 %29, 15
  %31 = lshr i32 %28, 21
  %32 = and i32 %31, 3
  %33 = and i32 %28, 8388608
  %34 = icmp eq i32 %33, 0
  %35 = sub nsw i32 0, %32
  %36 = select i1 %34, i32 %35, i32 %32
  %37 = add nsw i32 %36, %30
  br label %86

38:                                               ; preds = %1
  %39 = load i32, ptr %4, align 4
  %40 = and i32 %39, 127
  %41 = load i32, ptr %3, align 4
  %42 = icmp ugt i32 %41, 939524095
  %43 = icmp ugt i32 %40, 13
  %44 = select i1 %42, i1 %43, i1 false
  br i1 %44, label %45, label %86

45:                                               ; preds = %38
  %46 = icmp ugt i32 %41, 1107296255
  %47 = icmp ugt i32 %40, 21
  %48 = select i1 %46, i1 %47, i1 false
  br i1 %48, label %49, label %86

49:                                               ; preds = %45
  %50 = icmp ugt i32 %41, 1174405119
  %51 = icmp ugt i32 %40, 25
  %52 = select i1 %50, i1 %51, i1 false
  br i1 %52, label %53, label %86

53:                                               ; preds = %49
  %54 = icmp ugt i32 %41, 1224736767
  %55 = icmp ugt i32 %40, 30
  %56 = select i1 %54, i1 %55, i1 false
  br i1 %56, label %57, label %86

57:                                               ; preds = %53
  %58 = icmp ugt i32 %41, 1258291199
  %59 = icmp ugt i32 %40, 36
  %60 = select i1 %58, i1 %59, i1 false
  br i1 %60, label %61, label %86

61:                                               ; preds = %57
  %62 = icmp ugt i32 %41, 1291845631
  %63 = icmp ugt i32 %40, 43
  %64 = select i1 %62, i1 %63, i1 false
  br i1 %64, label %65, label %86

65:                                               ; preds = %61
  %66 = icmp ugt i32 %41, 1325400063
  %67 = icmp ugt i32 %40, 51
  %68 = select i1 %66, i1 %67, i1 false
  br i1 %68, label %69, label %86

69:                                               ; preds = %65
  %70 = icmp ugt i32 %41, 1358954495
  %71 = icmp ugt i32 %40, 65
  %72 = select i1 %70, i1 %71, i1 false
  br i1 %72, label %73, label %86

73:                                               ; preds = %69
  %74 = icmp ugt i32 %41, 1392508927
  %75 = icmp ugt i32 %40, 81
  %76 = select i1 %74, i1 %75, i1 false
  br i1 %76, label %77, label %86

77:                                               ; preds = %73
  %78 = icmp ugt i32 %41, 1426063359
  %79 = icmp ugt i32 %40, 98
  %80 = select i1 %78, i1 %79, i1 false
  br i1 %80, label %81, label %86

81:                                               ; preds = %77
  %82 = icmp ugt i32 %41, 1476395007
  %83 = icmp ugt i32 %40, 119
  %84 = select i1 %82, i1 %83, i1 false
  %85 = select i1 %84, i32 11, i32 10
  br label %86

86:                                               ; preds = %81, %77, %73, %69, %65, %61, %57, %53, %49, %45, %38, %27
  %87 = phi i32 [ %37, %27 ], [ 0, %38 ], [ 1, %45 ], [ 2, %49 ], [ 3, %53 ], [ 4, %57 ], [ 5, %61 ], [ 6, %65 ], [ 7, %69 ], [ 8, %73 ], [ 9, %77 ], [ %85, %81 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #4
  %88 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 4
  store i32 %87, ptr %88, align 4
  %89 = load i32, ptr %5, align 4
  %90 = lshr i32 %89, 8
  %91 = and i32 %90, 3
  %92 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 5
  store i32 %91, ptr %92, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #4
  store i32 0, ptr %2, align 4, !annotation !8
  %93 = load ptr, ptr %6, align 4
  %94 = call i32 @regmap_read(ptr noundef %93, i32 noundef 28, ptr noundef nonnull %2) #4
  %95 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 0, i32 4
  store i32 1000000, ptr %95, align 4
  %96 = load i32, ptr %2, align 4
  %97 = lshr i32 %96, 8
  %98 = and i32 %97, 3
  %99 = add nsw i32 %98, -1
  %100 = icmp ult i32 %99, 3
  br i1 %100, label %101, label %104

101:                                              ; preds = %86
  %102 = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init.4, i32 0, i32 %99
  %103 = load i32, ptr %102, align 4
  br label %104

104:                                              ; preds = %101, %86
  %105 = phi i32 [ %103, %101 ], [ 0, %86 ]
  %106 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 0, i32 5
  store i32 %105, ptr %106, align 4
  %107 = lshr i32 %96, 10
  %108 = and i32 %107, 3
  %109 = add nsw i32 %108, -1
  %110 = icmp ult i32 %109, 3
  br i1 %110, label %111, label %114

111:                                              ; preds = %104
  %112 = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init.4, i32 0, i32 %109
  %113 = load i32, ptr %112, align 4
  br label %114

114:                                              ; preds = %111, %104
  %115 = phi i32 [ %113, %111 ], [ 0, %104 ]
  %116 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 0, i32 6
  store i32 %115, ptr %116, align 4
  %117 = getelementptr %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 1, i32 4
  store i32 1000000, ptr %117, align 4
  %118 = lshr i32 %96, 12
  %119 = and i32 %118, 3
  %120 = add nsw i32 %119, -1
  %121 = icmp ult i32 %120, 3
  br i1 %121, label %122, label %125

122:                                              ; preds = %114
  %123 = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init.4, i32 0, i32 %120
  %124 = load i32, ptr %123, align 4
  br label %125

125:                                              ; preds = %122, %114
  %126 = phi i32 [ %124, %122 ], [ 0, %114 ]
  %127 = getelementptr %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 1, i32 5
  store i32 %126, ptr %127, align 4
  %128 = lshr i32 %96, 14
  %129 = and i32 %128, 3
  %130 = add nsw i32 %129, -1
  %131 = icmp ult i32 %130, 3
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = getelementptr inbounds [3 x i32], ptr @switch.table.exynos5422_asv_init.4, i32 0, i32 %130
  %134 = load i32, ptr %133, align 4
  br label %135

135:                                              ; preds = %132, %125
  %136 = phi i32 [ %134, %132 ], [ 0, %125 ]
  %137 = getelementptr %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 1, i32 6
  store i32 %136, ptr %137, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #4
  br i1 %19, label %145, label %138

138:                                              ; preds = %135
  %139 = load i32, ptr %92, align 4
  %140 = and i32 %139, -2
  %141 = icmp eq i32 %140, 2
  %142 = add nsw i32 %139, -1
  %143 = select i1 %141, i32 %142, i32 0
  %144 = getelementptr [4 x [20 x [15 x i32]]], ptr @asv_arm_table, i32 0, i32 %143
  br label %145

145:                                              ; preds = %138, %135
  %146 = phi i32 [ 20, %138 ], [ 17, %135 ]
  %147 = phi ptr [ %144, %138 ], [ getelementptr inbounds ([4 x [20 x [15 x i32]]], ptr @asv_arm_table, i32 0, i32 3), %135 ]
  %148 = phi i32 [ 14, %138 ], [ 12, %135 ]
  %149 = phi i32 [ %143, %138 ], [ 3, %135 ]
  %150 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 0, i32 1
  store ptr @.str, ptr %150, align 4
  %151 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 0, i32 3
  store i32 %146, ptr %151, align 4
  %152 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 0, i32 3, i32 1
  store i32 15, ptr %152, align 4
  %153 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 0, i32 3, i32 2
  store ptr %147, ptr %153, align 4
  %154 = getelementptr %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 1, i32 1
  store ptr @.str.1, ptr %154, align 4
  %155 = getelementptr %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 1, i32 3
  store i32 %148, ptr %155, align 4
  %156 = getelementptr %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 1, i32 3, i32 1
  store i32 15, ptr %156, align 4
  %157 = getelementptr [4 x [14 x [15 x i32]]], ptr @asv_kfc_table, i32 0, i32 %149
  %158 = getelementptr %struct.exynos_asv, ptr %0, i32 0, i32 2, i32 1, i32 3, i32 2
  store ptr %157, ptr %158, align 4
  %159 = getelementptr inbounds %struct.exynos_asv, ptr %0, i32 0, i32 3
  store ptr @exynos5422_asv_opp_get_voltage, ptr %159, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #4
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @regmap_read(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define internal i32 @exynos5422_asv_opp_get_voltage(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #3 {
  %4 = getelementptr inbounds %struct.exynos_asv_subsys, ptr %0, i32 0, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %7, label %28

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 4
  %9 = getelementptr inbounds %struct.exynos_asv, ptr %8, i32 0, i32 4
  %10 = load i32, ptr %9, align 4
  %11 = add i32 %10, 1
  %12 = getelementptr inbounds %struct.exynos_asv_subsys, ptr %0, i32 0, i32 3, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.exynos_asv_subsys, ptr %0, i32 0, i32 3, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = mul i32 %15, %1
  %17 = add i32 %11, %16
  %18 = getelementptr i32, ptr %13, i32 %17
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.exynos_asv_subsys, ptr %0, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = icmp ult i32 %21, %2
  %23 = getelementptr inbounds %struct.exynos_asv_subsys, ptr %0, i32 0, i32 5
  %24 = getelementptr inbounds %struct.exynos_asv_subsys, ptr %0, i32 0, i32 6
  %25 = select i1 %22, ptr %23, ptr %24
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, %19
  br label %28

28:                                               ; preds = %7, %3
  %29 = phi i32 [ %27, %7 ], [ %2, %3 ]
  ret i32 %29
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 1, !"min_enum_size", i32 4}
!2 = !{i32 8, !"branch-target-enforcement", i32 0}
!3 = !{i32 8, !"sign-return-address", i32 0}
!4 = !{i32 8, !"sign-return-address-all", i32 0}
!5 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!6 = !{i32 7, !"uwtable", i32 1}
!7 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!8 = !{!"auto-init"}
!9 = !{i8 0, i8 2}
