; ModuleID = '/llk/IR/net/sunrpc/sched.c_pt.bc'
source_filename = "../net/sunrpc/sched.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_xprtiod_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22xprtiod_workqueue\22\09\09\09\09\09"
module asm "__kstrtabns_xprtiod_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_task_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_task_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_task_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_init_priority_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_init_priority_wait_queue\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_init_priority_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_init_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_init_wait_queue\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_init_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_destroy_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_destroy_wait_queue\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_destroy_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___rpc_wait_for_completion_task:\09\09\09\09\09"
module asm "\09.asciz \09\22__rpc_wait_for_completion_task\22\09\09\09\09\09"
module asm "__kstrtabns___rpc_wait_for_completion_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on_priority_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on_priority_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on_priority_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on_priority:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on_priority\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on_priority:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_queued_task:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_queued_task\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_queued_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_first:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_first\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_first:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_next:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_next\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_next:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_status:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_status\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_status:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_delay:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_delay\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_delay:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_exit\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_malloc:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_malloc\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_malloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_free:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_free\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_put_task:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_put_task\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_put_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_put_task_async:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_put_task_async\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_put_task_async:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.167 }
%union.anon.167 = type { %struct.anon.168 }
%struct.anon.168 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.169, %struct.trace_event, ptr, ptr, %union.anon.170, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.169 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.170 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.rpc_wait_queue = type { %struct.spinlock, [4 x %struct.list_head], i8, i8, i8, i16, %struct.rpc_timer, ptr }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.rpc_timer = type { %struct.list_head, i32, %struct.delayed_work }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.rpc_task = type { %struct.atomic_t, i32, %struct.list_head, ptr, ptr, i32, i32, ptr, %union.anon.1, i32, %struct.rpc_message, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i32, i16, i16, i16, i8 }
%union.anon.1 = type { %struct.rpc_wait }
%struct.rpc_wait = type { %struct.list_head, %struct.list_head, %struct.list_head }
%struct.rpc_message = type { ptr, ptr, ptr, ptr }
%struct.trace_event_raw_rpc_xdr_buf_class = type { %struct.trace_entry, i32, i32, ptr, i32, ptr, i32, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.rpc_clnt = type { %struct.refcount_struct, i32, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.spinlock, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i8, ptr, ptr, %struct.atomic_t, i32, [65 x i8], %struct.rpc_pipe_dir_head, ptr, %struct.rpc_rtt, %struct.rpc_timeout, ptr, ptr, ptr, %union.anon.141, ptr, i32 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.rpc_pipe_dir_head = type { %struct.list_head, ptr }
%struct.rpc_rtt = type { i32, [5 x i32], [5 x i32], [5 x i32] }
%struct.rpc_timeout = type { i32, i32, i32, i32, i8 }
%union.anon.141 = type { %struct.work_struct }
%struct.kvec = type { ptr, i32 }
%struct.xdr_buf = type { [1 x %struct.kvec], [1 x %struct.kvec], ptr, ptr, i32, i32, i32, i32, i32 }
%struct.trace_event_raw_rpc_clnt_class = type { %struct.trace_entry, i32, [0 x i8] }
%struct.rpc_xprt = type { %struct.kref, ptr, i32, ptr, %struct.__kernel_sockaddr_storage, i32, i32, i32, i32, i32, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.list_head, i32, i32, i32, i32, i8, %struct.atomic_t, i32, %struct.list_head, i32, i32, i32, %struct.work_struct, %struct.timer_list, i32, i32, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.spinlock, %struct.spinlock, i32, ptr, %struct.list_head, %struct.atomic_t, ptr, ptr, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.rb_root, %struct.anon.140, ptr, ptr, [6 x ptr], %struct.callback_head, ptr, ptr, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.__kernel_sockaddr_storage = type { %union.anon.136 }
%union.anon.136 = type { ptr, [124 x i8] }
%struct.rb_root = type { ptr }
%struct.anon.140 = type { i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.callback_head = type { ptr, ptr }
%struct.trace_event_raw_rpc_clnt_new = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_clnt_new_err = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_clnt_clone_err = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_task_status = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_request = type { %struct.trace_entry, i32, i32, i32, i8, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_task_running = type { %struct.trace_entry, i32, i32, ptr, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_rpc_task_queued = type { %struct.trace_entry, i32, i32, i32, i32, i32, i16, i32, [0 x i8] }
%struct.trace_event_raw_rpc_failure = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_reply_event = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.rpc_rqst = type { ptr, %struct.xdr_buf, %struct.xdr_buf, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.anon.142, %struct.list_head, %struct.list_head, ptr, i32, ptr, i32, i32, i32, %struct.xdr_buf, i32, i32, i32, i64, i32, i32, %struct.atomic_t, i32, i64, i32, %struct.list_head, i32, %struct.list_head }
%union.anon.142 = type { %struct.rb_node }
%struct.rb_node = type { i32, ptr, ptr }
%struct.trace_event_raw_rpc_buf_alloc = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_call_rpcerror = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_stats_latency = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.xdr_stream = type { ptr, ptr, ptr, ptr, %struct.kvec, ptr, i32, ptr }
%struct.rpc_procinfo = type { i32, ptr, ptr, i32, i32, i32, i32, ptr }
%struct.trace_event_raw_rpc_xdr_overflow = type { %struct.trace_entry, i32, i32, i32, i32, ptr, ptr, ptr, i32, ptr, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_xdr_alignment = type { %struct.trace_entry, i32, i32, i32, i32, i32, ptr, i32, ptr, i32, i32, i32, i32, i32, [0 x i8] }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [40 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [36 x i8] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.trace_event_raw_xs_socket_event = type { %struct.trace_entry, i32, i32, i64, [28 x i8], [28 x i8], [0 x i8] }
%struct.sock_common = type { %union.anon.35, %union.anon.37, %union.anon.38, i16, i8, i8, i32, %union.anon.40, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.64, [0 x i32], %union.anon.65, i16, i16, %union.anon.66, %struct.refcount_struct, [0 x i32], %union.anon.67 }
%union.anon.35 = type { i64 }
%union.anon.37 = type { i32 }
%union.anon.38 = type { i32 }
%union.anon.40 = type { %struct.hlist_node }
%struct.possible_net_t = type {}
%struct.in6_addr = type { %union.anon.63 }
%union.anon.63 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.64 = type { i32 }
%union.anon.65 = type { %struct.hlist_node }
%union.anon.66 = type { i32 }
%union.anon.67 = type { i32 }
%struct.inet_sock = type { %struct.sock, ptr, i32, i16, i16, ptr, i16, i16, i8, i8, i8, i8, i16, i8, i8, i32, i32, i32, ptr, %struct.inet_cork_full }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.72, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.73, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.74, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, %struct.netns_tracker }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.72 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.73 = type { ptr }
%union.anon.74 = type { ptr }
%struct.sk_buff_head = type { %union.anon.70, i32, %struct.spinlock }
%union.anon.70 = type { %struct.anon.71 }
%struct.anon.71 = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type { i32 }
%struct.kuid_t = type { i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.sock_cgroup_data = type {}
%struct.netns_tracker = type {}
%struct.inet_cork_full = type { %struct.inet_cork, %struct.flowi }
%struct.inet_cork = type { i32, i32, ptr, i32, i32, ptr, i8, i8, i16, i8, i16, i64, i32 }
%struct.flowi = type { %union.anon.102 }
%union.anon.102 = type { %struct.flowi6 }
%struct.flowi6 = type { %struct.flowi_common, %struct.in6_addr, %struct.in6_addr, i32, %union.flowi_uli, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%union.flowi_uli = type { i32 }
%struct.socket_alloc = type { %struct.socket, %struct.inode, [56 x i8] }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.126, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.127, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.128, ptr, %struct.address_space, %struct.list_head, %union.anon.131, i32, i32, ptr, ptr }
%struct.kgid_t = type { i32 }
%union.anon.126 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%union.anon.127 = type { %struct.callback_head }
%union.anon.128 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.131 = type { ptr }
%struct.trace_event_raw_xs_socket_event_done = type { %struct.trace_entry, i32, i32, i32, i64, [28 x i8], [28 x i8], [0 x i8] }
%struct.trace_event_raw_rpc_socket_nospace = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.sock_xprt = type { %struct.rpc_xprt, ptr, ptr, ptr, %struct.anon.143, %struct.anon.145, i32, %struct.delayed_work, %struct.work_struct, %struct.work_struct, %struct.mutex, %struct.__kernel_sockaddr_storage, i16, i32, i32, i32, %struct.rpc_timeout, ptr, ptr, ptr, ptr }
%struct.anon.143 = type { %struct.anon.144, i32, i32, i32 }
%struct.anon.144 = type { i32, i32, i32 }
%struct.anon.145 = type { i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.trace_event_raw_rpc_xprt_lifetime_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_xprt_event = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_transmit = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_retransmit = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_ping = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_writelock_event = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_cong_event = type { %struct.trace_entry, i32, i32, i32, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_xprt_reserve = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xs_stream_read_data = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xs_stream_read_request = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_getport = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_setport = type { %struct.trace_entry, i32, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_pmap_register = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_register = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_unregister = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xdr_msg_class = type { %struct.trace_entry, i32, ptr, i32, ptr, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xdr_buf_class = type { %struct.trace_entry, i32, ptr, i32, ptr, i32, i32, i32, i32, [0 x i8] }
%struct.svc_rqst = type { %struct.list_head, %struct.callback_head, ptr, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, ptr, ptr, ptr, ptr, %struct.svc_cred, ptr, ptr, i32, %struct.xdr_buf, %struct.xdr_stream, %struct.xdr_stream, ptr, %struct.xdr_buf, [260 x ptr], ptr, ptr, ptr, %struct.pagevec, [259 x %struct.kvec], [259 x %struct.bio_vec], i32, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, i32, i32, i32, i64, %struct.cache_req, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr }
%struct.svc_cred = type { %struct.kuid_t, %struct.kgid_t, ptr, i32, ptr, ptr, ptr, ptr }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.cache_req = type { ptr, i32 }
%struct.trace_event_raw_svc_authenticate = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.svc_xprt = type { ptr, ptr, %struct.kref, %struct.list_head, %struct.list_head, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.spinlock, ptr, %struct.list_head, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, [58 x i8], %struct.list_head, ptr, ptr, ptr, ptr }
%struct.trace_event_raw_svc_process = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_rqst_event = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_rqst_status = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xprt_create_err = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.trace_event_raw_svc_xprt_enqueue = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.task_struct = type { %struct.thread_info, i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [32 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, [36 x i8], %struct.sched_statistics, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i8, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.122, ptr, %struct.page_frag, i32, i32, i32, i64, i64, i32, i32, ptr, %struct.kmap_ctrl, i32, ptr, %struct.refcount_struct, %struct.thread_struct, [16 x i8] }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.80 }
%struct.llist_node = type { ptr }
%union.anon.80 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, [56 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [8 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.sched_statistics = type {}
%struct.sched_info = type {}
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.81 }
%union.anon.81 = type { %struct.anon.82 }
%struct.anon.82 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.task_io_accounting = type {}
%struct.tlbflush_unmap_batch = type {}
%union.anon.122 = type { %struct.callback_head }
%struct.kmap_ctrl = type { i32, [16 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.trace_event_raw_svc_xprt_event = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xprt_accept = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xprt_dequeue = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_wake_up = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_svc_alloc_arg_err = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_svc_stats_latency = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.svc_deferred_req = type { i32, ptr, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, %struct.cache_deferred_req, i32, i32, [0 x i32] }
%struct.cache_deferred_req = type { %struct.hlist_node, %struct.list_head, ptr, ptr, ptr }
%struct.trace_event_raw_svc_deferred_event = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_new_socket = type { %struct.trace_entry, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_svcsock_marker = type { %struct.trace_entry, i32, i8, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_tcp_recv_short = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_tcp_state = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_accept_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [40 x i8], %struct.netns_ipv4, %struct.netns_ipv6, ptr, %struct.netns_bpf, [28 x i8], %struct.netns_xfrm, i64, %struct.netns_can, ptr, ptr, [32 x i8] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type {}
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.14, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [40 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [60 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.107, ptr, [60 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [32 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.anon.107 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [36 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex, [28 x i8] }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.cache_detail = type { ptr, i32, ptr, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.list_head, i64, i32, %struct.list_head, %struct.atomic_t, i64, i64, %union.anon.146, ptr }
%union.anon.146 = type { ptr }
%struct.trace_event_raw_cache_event = type { %struct.trace_entry, ptr, i32, [0 x i8] }
%struct.trace_event_raw_register_class = type { %struct.trace_entry, i32, i32, i16, i16, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_unregister = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.rpc_call_ops = type { ptr, ptr, ptr, ptr }
%struct.wait_bit_key = type { ptr, i32, i32 }
%struct.rpc_buffer = type { i32, [0 x i8] }
%struct.rpc_task_setup = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i8 }
%struct.rpc_cred = type { %struct.hlist_node, %struct.list_head, %struct.callback_head, ptr, ptr, i32, i32, %struct.refcount_struct, ptr }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, [1 x %struct.cpumask], i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_rpc_xdr_sendto = internal constant [15 x i8] c"rpc_xdr_sendto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_sendto = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_sendto }, align 4
@__tracepoint_rpc_xdr_sendto = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_xdr_sendto, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_sendto, ptr null, ptr @__traceiter_rpc_xdr_sendto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_sendto = internal constant ptr @__tracepoint_rpc_xdr_sendto, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_recvfrom = internal constant [17 x i8] c"rpc_xdr_recvfrom\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_recvfrom = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_recvfrom }, align 4
@__tracepoint_rpc_xdr_recvfrom = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_xdr_recvfrom, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_recvfrom, ptr null, ptr @__traceiter_rpc_xdr_recvfrom, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_recvfrom = internal constant ptr @__tracepoint_rpc_xdr_recvfrom, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_reply_pages = internal constant [20 x i8] c"rpc_xdr_reply_pages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_reply_pages = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_reply_pages }, align 4
@__tracepoint_rpc_xdr_reply_pages = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_xdr_reply_pages, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_reply_pages, ptr null, ptr @__traceiter_rpc_xdr_reply_pages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_reply_pages = internal constant ptr @__tracepoint_rpc_xdr_reply_pages, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_free = internal constant [14 x i8] c"rpc_clnt_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_free = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_free }, align 4
@__tracepoint_rpc_clnt_free = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_free, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_free, ptr null, ptr @__traceiter_rpc_clnt_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_free = internal constant ptr @__tracepoint_rpc_clnt_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_killall = internal constant [17 x i8] c"rpc_clnt_killall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_killall = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_killall }, align 4
@__tracepoint_rpc_clnt_killall = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_killall, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_killall, ptr null, ptr @__traceiter_rpc_clnt_killall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_killall = internal constant ptr @__tracepoint_rpc_clnt_killall, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_shutdown = internal constant [18 x i8] c"rpc_clnt_shutdown\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_shutdown = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_shutdown }, align 4
@__tracepoint_rpc_clnt_shutdown = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_shutdown, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_shutdown, ptr null, ptr @__traceiter_rpc_clnt_shutdown, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_shutdown = internal constant ptr @__tracepoint_rpc_clnt_shutdown, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_release = internal constant [17 x i8] c"rpc_clnt_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_release = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_release }, align 4
@__tracepoint_rpc_clnt_release = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_release, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_release, ptr null, ptr @__traceiter_rpc_clnt_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_release = internal constant ptr @__tracepoint_rpc_clnt_release, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_replace_xprt = internal constant [22 x i8] c"rpc_clnt_replace_xprt\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_replace_xprt = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_replace_xprt }, align 4
@__tracepoint_rpc_clnt_replace_xprt = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_replace_xprt, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_replace_xprt, ptr null, ptr @__traceiter_rpc_clnt_replace_xprt, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_replace_xprt = internal constant ptr @__tracepoint_rpc_clnt_replace_xprt, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_replace_xprt_err = internal constant [26 x i8] c"rpc_clnt_replace_xprt_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_replace_xprt_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_replace_xprt_err }, align 4
@__tracepoint_rpc_clnt_replace_xprt_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_replace_xprt_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_replace_xprt_err, ptr null, ptr @__traceiter_rpc_clnt_replace_xprt_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_replace_xprt_err = internal constant ptr @__tracepoint_rpc_clnt_replace_xprt_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_new = internal constant [13 x i8] c"rpc_clnt_new\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_new = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_new }, align 4
@__tracepoint_rpc_clnt_new = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_new, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_new, ptr null, ptr @__traceiter_rpc_clnt_new, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_new = internal constant ptr @__tracepoint_rpc_clnt_new, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_new_err = internal constant [17 x i8] c"rpc_clnt_new_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_new_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_new_err }, align 4
@__tracepoint_rpc_clnt_new_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_new_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_new_err, ptr null, ptr @__traceiter_rpc_clnt_new_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_new_err = internal constant ptr @__tracepoint_rpc_clnt_new_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_clone_err = internal constant [19 x i8] c"rpc_clnt_clone_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_clone_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_clone_err }, align 4
@__tracepoint_rpc_clnt_clone_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_clnt_clone_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_clone_err, ptr null, ptr @__traceiter_rpc_clnt_clone_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_clone_err = internal constant ptr @__tracepoint_rpc_clnt_clone_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_call_status = internal constant [16 x i8] c"rpc_call_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_call_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_call_status }, align 4
@__tracepoint_rpc_call_status = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_call_status, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_call_status, ptr null, ptr @__traceiter_rpc_call_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_call_status = internal constant ptr @__tracepoint_rpc_call_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_connect_status = internal constant [19 x i8] c"rpc_connect_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_connect_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_connect_status }, align 4
@__tracepoint_rpc_connect_status = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_connect_status, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_connect_status, ptr null, ptr @__traceiter_rpc_connect_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_connect_status = internal constant ptr @__tracepoint_rpc_connect_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_timeout_status = internal constant [19 x i8] c"rpc_timeout_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_timeout_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_timeout_status }, align 4
@__tracepoint_rpc_timeout_status = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_timeout_status, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_timeout_status, ptr null, ptr @__traceiter_rpc_timeout_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_timeout_status = internal constant ptr @__tracepoint_rpc_timeout_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_retry_refresh_status = internal constant [25 x i8] c"rpc_retry_refresh_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_retry_refresh_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_retry_refresh_status }, align 4
@__tracepoint_rpc_retry_refresh_status = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_retry_refresh_status, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_retry_refresh_status, ptr null, ptr @__traceiter_rpc_retry_refresh_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_retry_refresh_status = internal constant ptr @__tracepoint_rpc_retry_refresh_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_refresh_status = internal constant [19 x i8] c"rpc_refresh_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_refresh_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_refresh_status }, align 4
@__tracepoint_rpc_refresh_status = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_refresh_status, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_refresh_status, ptr null, ptr @__traceiter_rpc_refresh_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_refresh_status = internal constant ptr @__tracepoint_rpc_refresh_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_request = internal constant [12 x i8] c"rpc_request\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_request = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_request }, align 4
@__tracepoint_rpc_request = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_request, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_request, ptr null, ptr @__traceiter_rpc_request, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_request = internal constant ptr @__tracepoint_rpc_request, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_begin = internal constant [15 x i8] c"rpc_task_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_begin = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_begin }, align 4
@__tracepoint_rpc_task_begin = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_begin, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_begin, ptr null, ptr @__traceiter_rpc_task_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_begin = internal constant ptr @__tracepoint_rpc_task_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_run_action = internal constant [20 x i8] c"rpc_task_run_action\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_run_action = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_run_action }, align 4
@__tracepoint_rpc_task_run_action = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_run_action, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_run_action, ptr null, ptr @__traceiter_rpc_task_run_action, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_run_action = internal constant ptr @__tracepoint_rpc_task_run_action, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_sync_sleep = internal constant [20 x i8] c"rpc_task_sync_sleep\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_sync_sleep = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_sync_sleep }, align 4
@__tracepoint_rpc_task_sync_sleep = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_sync_sleep, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_sync_sleep, ptr null, ptr @__traceiter_rpc_task_sync_sleep, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_sync_sleep = internal constant ptr @__tracepoint_rpc_task_sync_sleep, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_sync_wake = internal constant [19 x i8] c"rpc_task_sync_wake\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_sync_wake = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_sync_wake }, align 4
@__tracepoint_rpc_task_sync_wake = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_sync_wake, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_sync_wake, ptr null, ptr @__traceiter_rpc_task_sync_wake, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_sync_wake = internal constant ptr @__tracepoint_rpc_task_sync_wake, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_complete = internal constant [18 x i8] c"rpc_task_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_complete = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_complete }, align 4
@__tracepoint_rpc_task_complete = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_complete, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_complete, ptr null, ptr @__traceiter_rpc_task_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_complete = internal constant ptr @__tracepoint_rpc_task_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_timeout = internal constant [17 x i8] c"rpc_task_timeout\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_timeout = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_timeout }, align 4
@__tracepoint_rpc_task_timeout = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_timeout, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_timeout, ptr null, ptr @__traceiter_rpc_task_timeout, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_timeout = internal constant ptr @__tracepoint_rpc_task_timeout, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_signalled = internal constant [19 x i8] c"rpc_task_signalled\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_signalled = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_signalled }, align 4
@__tracepoint_rpc_task_signalled = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_signalled, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_signalled, ptr null, ptr @__traceiter_rpc_task_signalled, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_signalled = internal constant ptr @__tracepoint_rpc_task_signalled, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_end = internal constant [13 x i8] c"rpc_task_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_end = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_end }, align 4
@__tracepoint_rpc_task_end = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_end, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_end, ptr null, ptr @__traceiter_rpc_task_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_end = internal constant ptr @__tracepoint_rpc_task_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_call_done = internal constant [19 x i8] c"rpc_task_call_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_call_done = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_call_done }, align 4
@__tracepoint_rpc_task_call_done = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_call_done, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_call_done, ptr null, ptr @__traceiter_rpc_task_call_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_call_done = internal constant ptr @__tracepoint_rpc_task_call_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_sleep = internal constant [15 x i8] c"rpc_task_sleep\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_sleep = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_sleep }, align 4
@__tracepoint_rpc_task_sleep = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_sleep, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_sleep, ptr null, ptr @__traceiter_rpc_task_sleep, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_sleep = internal constant ptr @__tracepoint_rpc_task_sleep, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_wakeup = internal constant [16 x i8] c"rpc_task_wakeup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_wakeup = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_wakeup }, align 4
@__tracepoint_rpc_task_wakeup = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_task_wakeup, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_task_wakeup, ptr null, ptr @__traceiter_rpc_task_wakeup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_wakeup = internal constant ptr @__tracepoint_rpc_task_wakeup, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_bad_callhdr = internal constant [16 x i8] c"rpc_bad_callhdr\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_bad_callhdr = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_bad_callhdr }, align 4
@__tracepoint_rpc_bad_callhdr = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_bad_callhdr, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_bad_callhdr, ptr null, ptr @__traceiter_rpc_bad_callhdr, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_bad_callhdr = internal constant ptr @__tracepoint_rpc_bad_callhdr, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_bad_verifier = internal constant [17 x i8] c"rpc_bad_verifier\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_bad_verifier = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_bad_verifier }, align 4
@__tracepoint_rpc_bad_verifier = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_bad_verifier, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_bad_verifier, ptr null, ptr @__traceiter_rpc_bad_verifier, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_bad_verifier = internal constant ptr @__tracepoint_rpc_bad_verifier, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__prog_unavail = internal constant [18 x i8] c"rpc__prog_unavail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__prog_unavail = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__prog_unavail }, align 4
@__tracepoint_rpc__prog_unavail = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__prog_unavail, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__prog_unavail, ptr null, ptr @__traceiter_rpc__prog_unavail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__prog_unavail = internal constant ptr @__tracepoint_rpc__prog_unavail, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__prog_mismatch = internal constant [19 x i8] c"rpc__prog_mismatch\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__prog_mismatch = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__prog_mismatch }, align 4
@__tracepoint_rpc__prog_mismatch = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__prog_mismatch, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__prog_mismatch, ptr null, ptr @__traceiter_rpc__prog_mismatch, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__prog_mismatch = internal constant ptr @__tracepoint_rpc__prog_mismatch, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__proc_unavail = internal constant [18 x i8] c"rpc__proc_unavail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__proc_unavail = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__proc_unavail }, align 4
@__tracepoint_rpc__proc_unavail = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__proc_unavail, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__proc_unavail, ptr null, ptr @__traceiter_rpc__proc_unavail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__proc_unavail = internal constant ptr @__tracepoint_rpc__proc_unavail, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__garbage_args = internal constant [18 x i8] c"rpc__garbage_args\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__garbage_args = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__garbage_args }, align 4
@__tracepoint_rpc__garbage_args = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__garbage_args, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__garbage_args, ptr null, ptr @__traceiter_rpc__garbage_args, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__garbage_args = internal constant ptr @__tracepoint_rpc__garbage_args, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__unparsable = internal constant [16 x i8] c"rpc__unparsable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__unparsable = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__unparsable }, align 4
@__tracepoint_rpc__unparsable = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__unparsable, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__unparsable, ptr null, ptr @__traceiter_rpc__unparsable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__unparsable = internal constant ptr @__tracepoint_rpc__unparsable, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__mismatch = internal constant [14 x i8] c"rpc__mismatch\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__mismatch = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__mismatch }, align 4
@__tracepoint_rpc__mismatch = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__mismatch, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__mismatch, ptr null, ptr @__traceiter_rpc__mismatch, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__mismatch = internal constant ptr @__tracepoint_rpc__mismatch, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__stale_creds = internal constant [17 x i8] c"rpc__stale_creds\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__stale_creds = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__stale_creds }, align 4
@__tracepoint_rpc__stale_creds = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__stale_creds, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__stale_creds, ptr null, ptr @__traceiter_rpc__stale_creds, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__stale_creds = internal constant ptr @__tracepoint_rpc__stale_creds, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__bad_creds = internal constant [15 x i8] c"rpc__bad_creds\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__bad_creds = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__bad_creds }, align 4
@__tracepoint_rpc__bad_creds = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__bad_creds, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__bad_creds, ptr null, ptr @__traceiter_rpc__bad_creds, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__bad_creds = internal constant ptr @__tracepoint_rpc__bad_creds, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__auth_tooweak = internal constant [18 x i8] c"rpc__auth_tooweak\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__auth_tooweak = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__auth_tooweak }, align 4
@__tracepoint_rpc__auth_tooweak = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc__auth_tooweak, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc__auth_tooweak, ptr null, ptr @__traceiter_rpc__auth_tooweak, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__auth_tooweak = internal constant ptr @__tracepoint_rpc__auth_tooweak, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_prog_unavail_err = internal constant [22 x i8] c"rpcb_prog_unavail_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_prog_unavail_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_prog_unavail_err }, align 4
@__tracepoint_rpcb_prog_unavail_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_prog_unavail_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_prog_unavail_err, ptr null, ptr @__traceiter_rpcb_prog_unavail_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_prog_unavail_err = internal constant ptr @__tracepoint_rpcb_prog_unavail_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_timeout_err = internal constant [17 x i8] c"rpcb_timeout_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_timeout_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_timeout_err }, align 4
@__tracepoint_rpcb_timeout_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_timeout_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_timeout_err, ptr null, ptr @__traceiter_rpcb_timeout_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_timeout_err = internal constant ptr @__tracepoint_rpcb_timeout_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_bind_version_err = internal constant [22 x i8] c"rpcb_bind_version_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_bind_version_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_bind_version_err }, align 4
@__tracepoint_rpcb_bind_version_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_bind_version_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_bind_version_err, ptr null, ptr @__traceiter_rpcb_bind_version_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_bind_version_err = internal constant ptr @__tracepoint_rpcb_bind_version_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_unreachable_err = internal constant [21 x i8] c"rpcb_unreachable_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_unreachable_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_unreachable_err }, align 4
@__tracepoint_rpcb_unreachable_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_unreachable_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_unreachable_err, ptr null, ptr @__traceiter_rpcb_unreachable_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_unreachable_err = internal constant ptr @__tracepoint_rpcb_unreachable_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_unrecognized_err = internal constant [22 x i8] c"rpcb_unrecognized_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_unrecognized_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_unrecognized_err }, align 4
@__tracepoint_rpcb_unrecognized_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_unrecognized_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_unrecognized_err, ptr null, ptr @__traceiter_rpcb_unrecognized_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_unrecognized_err = internal constant ptr @__tracepoint_rpcb_unrecognized_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_buf_alloc = internal constant [14 x i8] c"rpc_buf_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_buf_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_buf_alloc }, align 4
@__tracepoint_rpc_buf_alloc = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_buf_alloc, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_buf_alloc, ptr null, ptr @__traceiter_rpc_buf_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_buf_alloc = internal constant ptr @__tracepoint_rpc_buf_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_call_rpcerror = internal constant [18 x i8] c"rpc_call_rpcerror\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_call_rpcerror = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_call_rpcerror }, align 4
@__tracepoint_rpc_call_rpcerror = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_call_rpcerror, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_call_rpcerror, ptr null, ptr @__traceiter_rpc_call_rpcerror, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_call_rpcerror = internal constant ptr @__tracepoint_rpc_call_rpcerror, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_stats_latency = internal constant [18 x i8] c"rpc_stats_latency\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_stats_latency = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_stats_latency }, align 4
@__tracepoint_rpc_stats_latency = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_stats_latency, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_stats_latency, ptr null, ptr @__traceiter_rpc_stats_latency, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_stats_latency = internal constant ptr @__tracepoint_rpc_stats_latency, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_overflow = internal constant [17 x i8] c"rpc_xdr_overflow\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_overflow = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_overflow }, align 4
@__tracepoint_rpc_xdr_overflow = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_xdr_overflow, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_overflow, ptr null, ptr @__traceiter_rpc_xdr_overflow, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_overflow = internal constant ptr @__tracepoint_rpc_xdr_overflow, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_alignment = internal constant [18 x i8] c"rpc_xdr_alignment\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_alignment = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_alignment }, align 4
@__tracepoint_rpc_xdr_alignment = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_xdr_alignment, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_alignment, ptr null, ptr @__traceiter_rpc_xdr_alignment, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_alignment = internal constant ptr @__tracepoint_rpc_xdr_alignment, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_state_change = internal constant [24 x i8] c"rpc_socket_state_change\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_state_change = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_state_change }, align 4
@__tracepoint_rpc_socket_state_change = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_socket_state_change, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_socket_state_change, ptr null, ptr @__traceiter_rpc_socket_state_change, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_state_change = internal constant ptr @__tracepoint_rpc_socket_state_change, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_connect = internal constant [19 x i8] c"rpc_socket_connect\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_connect = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_connect }, align 4
@__tracepoint_rpc_socket_connect = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_socket_connect, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_socket_connect, ptr null, ptr @__traceiter_rpc_socket_connect, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_connect = internal constant ptr @__tracepoint_rpc_socket_connect, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_error = internal constant [17 x i8] c"rpc_socket_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_error = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_error }, align 4
@__tracepoint_rpc_socket_error = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_socket_error, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_socket_error, ptr null, ptr @__traceiter_rpc_socket_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_error = internal constant ptr @__tracepoint_rpc_socket_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_reset_connection = internal constant [28 x i8] c"rpc_socket_reset_connection\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_reset_connection = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_reset_connection }, align 4
@__tracepoint_rpc_socket_reset_connection = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_socket_reset_connection, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_socket_reset_connection, ptr null, ptr @__traceiter_rpc_socket_reset_connection, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_reset_connection = internal constant ptr @__tracepoint_rpc_socket_reset_connection, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_close = internal constant [17 x i8] c"rpc_socket_close\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_close = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_close }, align 4
@__tracepoint_rpc_socket_close = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_socket_close, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_socket_close, ptr null, ptr @__traceiter_rpc_socket_close, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_close = internal constant ptr @__tracepoint_rpc_socket_close, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_shutdown = internal constant [20 x i8] c"rpc_socket_shutdown\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_shutdown = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_shutdown }, align 4
@__tracepoint_rpc_socket_shutdown = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_socket_shutdown, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_socket_shutdown, ptr null, ptr @__traceiter_rpc_socket_shutdown, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_shutdown = internal constant ptr @__tracepoint_rpc_socket_shutdown, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_nospace = internal constant [19 x i8] c"rpc_socket_nospace\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_nospace = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_nospace }, align 4
@__tracepoint_rpc_socket_nospace = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpc_socket_nospace, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpc_socket_nospace, ptr null, ptr @__traceiter_rpc_socket_nospace, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_nospace = internal constant ptr @__tracepoint_rpc_socket_nospace, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_create = internal constant [12 x i8] c"xprt_create\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_create = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_create }, align 4
@__tracepoint_xprt_create = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_create, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_create, ptr null, ptr @__traceiter_xprt_create, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_create = internal constant ptr @__tracepoint_xprt_create, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_connect = internal constant [13 x i8] c"xprt_connect\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_connect = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_connect }, align 4
@__tracepoint_xprt_connect = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_connect, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_connect, ptr null, ptr @__traceiter_xprt_connect, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_connect = internal constant ptr @__tracepoint_xprt_connect, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_auto = internal constant [21 x i8] c"xprt_disconnect_auto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_auto = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_auto }, align 4
@__tracepoint_xprt_disconnect_auto = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_disconnect_auto, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_auto, ptr null, ptr @__traceiter_xprt_disconnect_auto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_auto = internal constant ptr @__tracepoint_xprt_disconnect_auto, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_done = internal constant [21 x i8] c"xprt_disconnect_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_done = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_done }, align 4
@__tracepoint_xprt_disconnect_done = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_disconnect_done, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_done, ptr null, ptr @__traceiter_xprt_disconnect_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_done = internal constant ptr @__tracepoint_xprt_disconnect_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_force = internal constant [22 x i8] c"xprt_disconnect_force\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_force = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_force }, align 4
@__tracepoint_xprt_disconnect_force = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_disconnect_force, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_force, ptr null, ptr @__traceiter_xprt_disconnect_force, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_force = internal constant ptr @__tracepoint_xprt_disconnect_force, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_cleanup = internal constant [24 x i8] c"xprt_disconnect_cleanup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_cleanup = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_cleanup }, align 4
@__tracepoint_xprt_disconnect_cleanup = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_disconnect_cleanup, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_cleanup, ptr null, ptr @__traceiter_xprt_disconnect_cleanup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_cleanup = internal constant ptr @__tracepoint_xprt_disconnect_cleanup, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_destroy = internal constant [13 x i8] c"xprt_destroy\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_destroy = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_destroy }, align 4
@__tracepoint_xprt_destroy = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_destroy, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_destroy, ptr null, ptr @__traceiter_xprt_destroy, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_destroy = internal constant ptr @__tracepoint_xprt_destroy, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_timer = internal constant [11 x i8] c"xprt_timer\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_timer = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_timer }, align 4
@__tracepoint_xprt_timer = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_timer, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_timer, ptr null, ptr @__traceiter_xprt_timer, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_timer = internal constant ptr @__tracepoint_xprt_timer, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_lookup_rqst = internal constant [17 x i8] c"xprt_lookup_rqst\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_lookup_rqst = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_lookup_rqst }, align 4
@__tracepoint_xprt_lookup_rqst = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_lookup_rqst, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_lookup_rqst, ptr null, ptr @__traceiter_xprt_lookup_rqst, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_lookup_rqst = internal constant ptr @__tracepoint_xprt_lookup_rqst, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_transmit = internal constant [14 x i8] c"xprt_transmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_transmit = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_transmit }, align 4
@__tracepoint_xprt_transmit = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_transmit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_transmit, ptr null, ptr @__traceiter_xprt_transmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_transmit = internal constant ptr @__tracepoint_xprt_transmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_retransmit = internal constant [16 x i8] c"xprt_retransmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_retransmit = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_retransmit }, align 4
@__tracepoint_xprt_retransmit = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_retransmit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_retransmit, ptr null, ptr @__traceiter_xprt_retransmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_retransmit = internal constant ptr @__tracepoint_xprt_retransmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_ping = internal constant [10 x i8] c"xprt_ping\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_ping = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_ping }, align 4
@__tracepoint_xprt_ping = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_ping, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_ping, ptr null, ptr @__traceiter_xprt_ping, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_ping = internal constant ptr @__tracepoint_xprt_ping, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_reserve_xprt = internal constant [18 x i8] c"xprt_reserve_xprt\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_reserve_xprt = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_reserve_xprt }, align 4
@__tracepoint_xprt_reserve_xprt = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_reserve_xprt, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_reserve_xprt, ptr null, ptr @__traceiter_xprt_reserve_xprt, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_reserve_xprt = internal constant ptr @__tracepoint_xprt_reserve_xprt, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_release_xprt = internal constant [18 x i8] c"xprt_release_xprt\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_release_xprt = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_release_xprt }, align 4
@__tracepoint_xprt_release_xprt = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_release_xprt, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_release_xprt, ptr null, ptr @__traceiter_xprt_release_xprt, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_release_xprt = internal constant ptr @__tracepoint_xprt_release_xprt, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_reserve_cong = internal constant [18 x i8] c"xprt_reserve_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_reserve_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_reserve_cong }, align 4
@__tracepoint_xprt_reserve_cong = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_reserve_cong, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_reserve_cong, ptr null, ptr @__traceiter_xprt_reserve_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_reserve_cong = internal constant ptr @__tracepoint_xprt_reserve_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_release_cong = internal constant [18 x i8] c"xprt_release_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_release_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_release_cong }, align 4
@__tracepoint_xprt_release_cong = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_release_cong, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_release_cong, ptr null, ptr @__traceiter_xprt_release_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_release_cong = internal constant ptr @__tracepoint_xprt_release_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_get_cong = internal constant [14 x i8] c"xprt_get_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_get_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_get_cong }, align 4
@__tracepoint_xprt_get_cong = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_get_cong, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_get_cong, ptr null, ptr @__traceiter_xprt_get_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_get_cong = internal constant ptr @__tracepoint_xprt_get_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_put_cong = internal constant [14 x i8] c"xprt_put_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_put_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_put_cong }, align 4
@__tracepoint_xprt_put_cong = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_put_cong, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_put_cong, ptr null, ptr @__traceiter_xprt_put_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_put_cong = internal constant ptr @__tracepoint_xprt_put_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_reserve = internal constant [13 x i8] c"xprt_reserve\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_reserve = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_reserve }, align 4
@__tracepoint_xprt_reserve = dso_local global %struct.tracepoint { ptr @__tpstrtab_xprt_reserve, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xprt_reserve, ptr null, ptr @__traceiter_xprt_reserve, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_reserve = internal constant ptr @__tracepoint_xprt_reserve, section "__tracepoints_ptrs", align 4
@__tpstrtab_xs_stream_read_data = internal constant [20 x i8] c"xs_stream_read_data\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xs_stream_read_data = dso_local global %struct.static_call_key { ptr @__traceiter_xs_stream_read_data }, align 4
@__tracepoint_xs_stream_read_data = dso_local global %struct.tracepoint { ptr @__tpstrtab_xs_stream_read_data, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xs_stream_read_data, ptr null, ptr @__traceiter_xs_stream_read_data, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xs_stream_read_data = internal constant ptr @__tracepoint_xs_stream_read_data, section "__tracepoints_ptrs", align 4
@__tpstrtab_xs_stream_read_request = internal constant [23 x i8] c"xs_stream_read_request\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xs_stream_read_request = dso_local global %struct.static_call_key { ptr @__traceiter_xs_stream_read_request }, align 4
@__tracepoint_xs_stream_read_request = dso_local global %struct.tracepoint { ptr @__tpstrtab_xs_stream_read_request, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_xs_stream_read_request, ptr null, ptr @__traceiter_xs_stream_read_request, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xs_stream_read_request = internal constant ptr @__tracepoint_xs_stream_read_request, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_getport = internal constant [13 x i8] c"rpcb_getport\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_getport = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_getport }, align 4
@__tracepoint_rpcb_getport = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_getport, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_getport, ptr null, ptr @__traceiter_rpcb_getport, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_getport = internal constant ptr @__tracepoint_rpcb_getport, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_setport = internal constant [13 x i8] c"rpcb_setport\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_setport = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_setport }, align 4
@__tracepoint_rpcb_setport = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_setport, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_setport, ptr null, ptr @__traceiter_rpcb_setport, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_setport = internal constant ptr @__tracepoint_rpcb_setport, section "__tracepoints_ptrs", align 4
@__tpstrtab_pmap_register = internal constant [14 x i8] c"pmap_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_pmap_register = dso_local global %struct.static_call_key { ptr @__traceiter_pmap_register }, align 4
@__tracepoint_pmap_register = dso_local global %struct.tracepoint { ptr @__tpstrtab_pmap_register, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_pmap_register, ptr null, ptr @__traceiter_pmap_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_pmap_register = internal constant ptr @__tracepoint_pmap_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_register = internal constant [14 x i8] c"rpcb_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_register = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_register }, align 4
@__tracepoint_rpcb_register = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_register, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_register, ptr null, ptr @__traceiter_rpcb_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_register = internal constant ptr @__tracepoint_rpcb_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_unregister = internal constant [16 x i8] c"rpcb_unregister\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_unregister = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_unregister }, align 4
@__tracepoint_rpcb_unregister = dso_local global %struct.tracepoint { ptr @__tpstrtab_rpcb_unregister, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_rpcb_unregister, ptr null, ptr @__traceiter_rpcb_unregister, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_unregister = internal constant ptr @__tracepoint_rpcb_unregister, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xdr_recvfrom = internal constant [17 x i8] c"svc_xdr_recvfrom\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xdr_recvfrom = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xdr_recvfrom }, align 4
@__tracepoint_svc_xdr_recvfrom = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xdr_recvfrom, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xdr_recvfrom, ptr null, ptr @__traceiter_svc_xdr_recvfrom, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xdr_recvfrom = internal constant ptr @__tracepoint_svc_xdr_recvfrom, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xdr_sendto = internal constant [15 x i8] c"svc_xdr_sendto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xdr_sendto = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xdr_sendto }, align 4
@__tracepoint_svc_xdr_sendto = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xdr_sendto, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xdr_sendto, ptr null, ptr @__traceiter_svc_xdr_sendto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xdr_sendto = internal constant ptr @__tracepoint_svc_xdr_sendto, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_authenticate = internal constant [17 x i8] c"svc_authenticate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_authenticate = dso_local global %struct.static_call_key { ptr @__traceiter_svc_authenticate }, align 4
@__tracepoint_svc_authenticate = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_authenticate, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_authenticate, ptr null, ptr @__traceiter_svc_authenticate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_authenticate = internal constant ptr @__tracepoint_svc_authenticate, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_process = internal constant [12 x i8] c"svc_process\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_process = dso_local global %struct.static_call_key { ptr @__traceiter_svc_process }, align 4
@__tracepoint_svc_process = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_process, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_process, ptr null, ptr @__traceiter_svc_process, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_process = internal constant ptr @__tracepoint_svc_process, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer = internal constant [10 x i8] c"svc_defer\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer }, align 4
@__tracepoint_svc_defer = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_defer, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_defer, ptr null, ptr @__traceiter_svc_defer, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer = internal constant ptr @__tracepoint_svc_defer, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_drop = internal constant [9 x i8] c"svc_drop\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_drop = dso_local global %struct.static_call_key { ptr @__traceiter_svc_drop }, align 4
@__tracepoint_svc_drop = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_drop, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_drop, ptr null, ptr @__traceiter_svc_drop, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_drop = internal constant ptr @__tracepoint_svc_drop, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_send = internal constant [9 x i8] c"svc_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_send = dso_local global %struct.static_call_key { ptr @__traceiter_svc_send }, align 4
@__tracepoint_svc_send = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_send, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_send, ptr null, ptr @__traceiter_svc_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_send = internal constant ptr @__tracepoint_svc_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_create_err = internal constant [20 x i8] c"svc_xprt_create_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_create_err = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_create_err }, align 4
@__tracepoint_svc_xprt_create_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_create_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_create_err, ptr null, ptr @__traceiter_svc_xprt_create_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_create_err = internal constant ptr @__tracepoint_svc_xprt_create_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_enqueue = internal constant [17 x i8] c"svc_xprt_enqueue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_enqueue = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_enqueue }, align 4
@__tracepoint_svc_xprt_enqueue = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_enqueue, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_enqueue, ptr null, ptr @__traceiter_svc_xprt_enqueue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_enqueue = internal constant ptr @__tracepoint_svc_xprt_enqueue, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_no_write_space = internal constant [24 x i8] c"svc_xprt_no_write_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_no_write_space = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_no_write_space }, align 4
@__tracepoint_svc_xprt_no_write_space = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_no_write_space, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_no_write_space, ptr null, ptr @__traceiter_svc_xprt_no_write_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_no_write_space = internal constant ptr @__tracepoint_svc_xprt_no_write_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_close = internal constant [15 x i8] c"svc_xprt_close\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_close = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_close }, align 4
@__tracepoint_svc_xprt_close = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_close, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_close, ptr null, ptr @__traceiter_svc_xprt_close, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_close = internal constant ptr @__tracepoint_svc_xprt_close, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_detach = internal constant [16 x i8] c"svc_xprt_detach\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_detach = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_detach }, align 4
@__tracepoint_svc_xprt_detach = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_detach, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_detach, ptr null, ptr @__traceiter_svc_xprt_detach, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_detach = internal constant ptr @__tracepoint_svc_xprt_detach, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_free = internal constant [14 x i8] c"svc_xprt_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_free = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_free }, align 4
@__tracepoint_svc_xprt_free = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_free, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_free, ptr null, ptr @__traceiter_svc_xprt_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_free = internal constant ptr @__tracepoint_svc_xprt_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_accept = internal constant [16 x i8] c"svc_xprt_accept\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_accept = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_accept }, align 4
@__tracepoint_svc_xprt_accept = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_accept, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_accept, ptr null, ptr @__traceiter_svc_xprt_accept, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_accept = internal constant ptr @__tracepoint_svc_xprt_accept, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_dequeue = internal constant [17 x i8] c"svc_xprt_dequeue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_dequeue = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_dequeue }, align 4
@__tracepoint_svc_xprt_dequeue = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_xprt_dequeue, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_xprt_dequeue, ptr null, ptr @__traceiter_svc_xprt_dequeue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_dequeue = internal constant ptr @__tracepoint_svc_xprt_dequeue, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_wake_up = internal constant [12 x i8] c"svc_wake_up\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_wake_up = dso_local global %struct.static_call_key { ptr @__traceiter_svc_wake_up }, align 4
@__tracepoint_svc_wake_up = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_wake_up, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_wake_up, ptr null, ptr @__traceiter_svc_wake_up, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_wake_up = internal constant ptr @__tracepoint_svc_wake_up, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_alloc_arg_err = internal constant [18 x i8] c"svc_alloc_arg_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_alloc_arg_err = dso_local global %struct.static_call_key { ptr @__traceiter_svc_alloc_arg_err }, align 4
@__tracepoint_svc_alloc_arg_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_alloc_arg_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_alloc_arg_err, ptr null, ptr @__traceiter_svc_alloc_arg_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_alloc_arg_err = internal constant ptr @__tracepoint_svc_alloc_arg_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_stats_latency = internal constant [18 x i8] c"svc_stats_latency\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_stats_latency = dso_local global %struct.static_call_key { ptr @__traceiter_svc_stats_latency }, align 4
@__tracepoint_svc_stats_latency = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_stats_latency, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_stats_latency, ptr null, ptr @__traceiter_svc_stats_latency, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_stats_latency = internal constant ptr @__tracepoint_svc_stats_latency, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer_drop = internal constant [15 x i8] c"svc_defer_drop\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer_drop = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer_drop }, align 4
@__tracepoint_svc_defer_drop = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_defer_drop, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_defer_drop, ptr null, ptr @__traceiter_svc_defer_drop, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer_drop = internal constant ptr @__tracepoint_svc_defer_drop, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer_queue = internal constant [16 x i8] c"svc_defer_queue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer_queue = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer_queue }, align 4
@__tracepoint_svc_defer_queue = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_defer_queue, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_defer_queue, ptr null, ptr @__traceiter_svc_defer_queue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer_queue = internal constant ptr @__tracepoint_svc_defer_queue, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer_recv = internal constant [15 x i8] c"svc_defer_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer_recv }, align 4
@__tracepoint_svc_defer_recv = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_defer_recv, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_defer_recv, ptr null, ptr @__traceiter_svc_defer_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer_recv = internal constant ptr @__tracepoint_svc_defer_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_new_socket = internal constant [19 x i8] c"svcsock_new_socket\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_new_socket = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_new_socket }, align 4
@__tracepoint_svcsock_new_socket = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_new_socket, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_new_socket, ptr null, ptr @__traceiter_svcsock_new_socket, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_new_socket = internal constant ptr @__tracepoint_svcsock_new_socket, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_marker = internal constant [15 x i8] c"svcsock_marker\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_marker = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_marker }, align 4
@__tracepoint_svcsock_marker = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_marker, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_marker, ptr null, ptr @__traceiter_svcsock_marker, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_marker = internal constant ptr @__tracepoint_svcsock_marker, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_udp_send = internal constant [17 x i8] c"svcsock_udp_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_udp_send = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_udp_send }, align 4
@__tracepoint_svcsock_udp_send = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_udp_send, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_udp_send, ptr null, ptr @__traceiter_svcsock_udp_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_udp_send = internal constant ptr @__tracepoint_svcsock_udp_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_udp_recv = internal constant [17 x i8] c"svcsock_udp_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_udp_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_udp_recv }, align 4
@__tracepoint_svcsock_udp_recv = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_udp_recv, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_udp_recv, ptr null, ptr @__traceiter_svcsock_udp_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_udp_recv = internal constant ptr @__tracepoint_svcsock_udp_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_udp_recv_err = internal constant [21 x i8] c"svcsock_udp_recv_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_udp_recv_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_udp_recv_err }, align 4
@__tracepoint_svcsock_udp_recv_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_udp_recv_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_udp_recv_err, ptr null, ptr @__traceiter_svcsock_udp_recv_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_udp_recv_err = internal constant ptr @__tracepoint_svcsock_udp_recv_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_send = internal constant [17 x i8] c"svcsock_tcp_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_send = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_send }, align 4
@__tracepoint_svcsock_tcp_send = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_tcp_send, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_send, ptr null, ptr @__traceiter_svcsock_tcp_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_send = internal constant ptr @__tracepoint_svcsock_tcp_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv = internal constant [17 x i8] c"svcsock_tcp_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv }, align 4
@__tracepoint_svcsock_tcp_recv = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_tcp_recv, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv, ptr null, ptr @__traceiter_svcsock_tcp_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv = internal constant ptr @__tracepoint_svcsock_tcp_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv_eagain = internal constant [24 x i8] c"svcsock_tcp_recv_eagain\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv_eagain = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv_eagain }, align 4
@__tracepoint_svcsock_tcp_recv_eagain = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_tcp_recv_eagain, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv_eagain, ptr null, ptr @__traceiter_svcsock_tcp_recv_eagain, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv_eagain = internal constant ptr @__tracepoint_svcsock_tcp_recv_eagain, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv_err = internal constant [21 x i8] c"svcsock_tcp_recv_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv_err }, align 4
@__tracepoint_svcsock_tcp_recv_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_tcp_recv_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv_err, ptr null, ptr @__traceiter_svcsock_tcp_recv_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv_err = internal constant ptr @__tracepoint_svcsock_tcp_recv_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_data_ready = internal constant [19 x i8] c"svcsock_data_ready\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_data_ready = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_data_ready }, align 4
@__tracepoint_svcsock_data_ready = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_data_ready, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_data_ready, ptr null, ptr @__traceiter_svcsock_data_ready, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_data_ready = internal constant ptr @__tracepoint_svcsock_data_ready, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_write_space = internal constant [20 x i8] c"svcsock_write_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_write_space = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_write_space }, align 4
@__tracepoint_svcsock_write_space = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_write_space, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_write_space, ptr null, ptr @__traceiter_svcsock_write_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_write_space = internal constant ptr @__tracepoint_svcsock_write_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv_short = internal constant [23 x i8] c"svcsock_tcp_recv_short\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv_short = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv_short }, align 4
@__tracepoint_svcsock_tcp_recv_short = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_tcp_recv_short, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv_short, ptr null, ptr @__traceiter_svcsock_tcp_recv_short, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv_short = internal constant ptr @__tracepoint_svcsock_tcp_recv_short, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_state = internal constant [18 x i8] c"svcsock_tcp_state\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_state = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_state }, align 4
@__tracepoint_svcsock_tcp_state = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_tcp_state, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_state, ptr null, ptr @__traceiter_svcsock_tcp_state, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_state = internal constant ptr @__tracepoint_svcsock_tcp_state, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_accept_err = internal constant [19 x i8] c"svcsock_accept_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_accept_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_accept_err }, align 4
@__tracepoint_svcsock_accept_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_accept_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_accept_err, ptr null, ptr @__traceiter_svcsock_accept_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_accept_err = internal constant ptr @__tracepoint_svcsock_accept_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_getpeername_err = internal constant [24 x i8] c"svcsock_getpeername_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_getpeername_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_getpeername_err }, align 4
@__tracepoint_svcsock_getpeername_err = dso_local global %struct.tracepoint { ptr @__tpstrtab_svcsock_getpeername_err, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svcsock_getpeername_err, ptr null, ptr @__traceiter_svcsock_getpeername_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_getpeername_err = internal constant ptr @__tracepoint_svcsock_getpeername_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_expired = internal constant [20 x i8] c"cache_entry_expired\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_expired = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_expired }, align 4
@__tracepoint_cache_entry_expired = dso_local global %struct.tracepoint { ptr @__tpstrtab_cache_entry_expired, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_cache_entry_expired, ptr null, ptr @__traceiter_cache_entry_expired, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_expired = internal constant ptr @__tracepoint_cache_entry_expired, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_upcall = internal constant [19 x i8] c"cache_entry_upcall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_upcall = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_upcall }, align 4
@__tracepoint_cache_entry_upcall = dso_local global %struct.tracepoint { ptr @__tpstrtab_cache_entry_upcall, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_cache_entry_upcall, ptr null, ptr @__traceiter_cache_entry_upcall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_upcall = internal constant ptr @__tracepoint_cache_entry_upcall, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_update = internal constant [19 x i8] c"cache_entry_update\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_update = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_update }, align 4
@__tracepoint_cache_entry_update = dso_local global %struct.tracepoint { ptr @__tpstrtab_cache_entry_update, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_cache_entry_update, ptr null, ptr @__traceiter_cache_entry_update, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_update = internal constant ptr @__tracepoint_cache_entry_update, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_make_negative = internal constant [26 x i8] c"cache_entry_make_negative\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_make_negative = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_make_negative }, align 4
@__tracepoint_cache_entry_make_negative = dso_local global %struct.tracepoint { ptr @__tpstrtab_cache_entry_make_negative, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_cache_entry_make_negative, ptr null, ptr @__traceiter_cache_entry_make_negative, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_make_negative = internal constant ptr @__tracepoint_cache_entry_make_negative, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_no_listener = internal constant [24 x i8] c"cache_entry_no_listener\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_no_listener = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_no_listener }, align 4
@__tracepoint_cache_entry_no_listener = dso_local global %struct.tracepoint { ptr @__tpstrtab_cache_entry_no_listener, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_cache_entry_no_listener, ptr null, ptr @__traceiter_cache_entry_no_listener, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_no_listener = internal constant ptr @__tracepoint_cache_entry_no_listener, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_register = internal constant [13 x i8] c"svc_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_register = dso_local global %struct.static_call_key { ptr @__traceiter_svc_register }, align 4
@__tracepoint_svc_register = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_register, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_register, ptr null, ptr @__traceiter_svc_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_register = internal constant ptr @__tracepoint_svc_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_noregister = internal constant [15 x i8] c"svc_noregister\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_noregister = dso_local global %struct.static_call_key { ptr @__traceiter_svc_noregister }, align 4
@__tracepoint_svc_noregister = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_noregister, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_noregister, ptr null, ptr @__traceiter_svc_noregister, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_noregister = internal constant ptr @__tracepoint_svc_noregister, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_unregister = internal constant [15 x i8] c"svc_unregister\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_unregister = dso_local global %struct.static_call_key { ptr @__traceiter_svc_unregister }, align 4
@__tracepoint_svc_unregister = dso_local global %struct.tracepoint { ptr @__tpstrtab_svc_unregister, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_svc_unregister, ptr null, ptr @__traceiter_svc_unregister, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_unregister = internal constant ptr @__tracepoint_svc_unregister, section "__tracepoints_ptrs", align 4
@str__sunrpc__trace_system_name = internal constant [7 x i8] c"sunrpc\00", align 1
@.str = private unnamed_addr constant [12 x i8] c"SOCK_STREAM\00", align 1
@__TRACE_SYSTEM_SOCK_STREAM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_STREAM = internal global ptr @__TRACE_SYSTEM_SOCK_STREAM, section "_ftrace_eval_map", align 4
@.str.1 = private unnamed_addr constant [11 x i8] c"SOCK_DGRAM\00", align 1
@__TRACE_SYSTEM_SOCK_DGRAM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.1, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_DGRAM = internal global ptr @__TRACE_SYSTEM_SOCK_DGRAM, section "_ftrace_eval_map", align 4
@.str.2 = private unnamed_addr constant [9 x i8] c"SOCK_RAW\00", align 1
@__TRACE_SYSTEM_SOCK_RAW = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.2, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_RAW = internal global ptr @__TRACE_SYSTEM_SOCK_RAW, section "_ftrace_eval_map", align 4
@.str.3 = private unnamed_addr constant [9 x i8] c"SOCK_RDM\00", align 1
@__TRACE_SYSTEM_SOCK_RDM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.3, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_RDM = internal global ptr @__TRACE_SYSTEM_SOCK_RDM, section "_ftrace_eval_map", align 4
@.str.4 = private unnamed_addr constant [15 x i8] c"SOCK_SEQPACKET\00", align 1
@__TRACE_SYSTEM_SOCK_SEQPACKET = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.4, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_SEQPACKET = internal global ptr @__TRACE_SYSTEM_SOCK_SEQPACKET, section "_ftrace_eval_map", align 4
@.str.5 = private unnamed_addr constant [10 x i8] c"SOCK_DCCP\00", align 1
@__TRACE_SYSTEM_SOCK_DCCP = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.5, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_DCCP = internal global ptr @__TRACE_SYSTEM_SOCK_DCCP, section "_ftrace_eval_map", align 4
@.str.6 = private unnamed_addr constant [12 x i8] c"SOCK_PACKET\00", align 1
@__TRACE_SYSTEM_SOCK_PACKET = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.6, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_PACKET = internal global ptr @__TRACE_SYSTEM_SOCK_PACKET, section "_ftrace_eval_map", align 4
@.str.7 = private unnamed_addr constant [10 x i8] c"AF_UNSPEC\00", align 1
@__TRACE_SYSTEM_AF_UNSPEC = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.7, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_UNSPEC = internal global ptr @__TRACE_SYSTEM_AF_UNSPEC, section "_ftrace_eval_map", align 4
@.str.8 = private unnamed_addr constant [8 x i8] c"AF_UNIX\00", align 1
@__TRACE_SYSTEM_AF_UNIX = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.8, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_UNIX = internal global ptr @__TRACE_SYSTEM_AF_UNIX, section "_ftrace_eval_map", align 4
@.str.9 = private unnamed_addr constant [9 x i8] c"AF_LOCAL\00", align 1
@__TRACE_SYSTEM_AF_LOCAL = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.9, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_LOCAL = internal global ptr @__TRACE_SYSTEM_AF_LOCAL, section "_ftrace_eval_map", align 4
@.str.10 = private unnamed_addr constant [8 x i8] c"AF_INET\00", align 1
@__TRACE_SYSTEM_AF_INET = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.10, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_INET = internal global ptr @__TRACE_SYSTEM_AF_INET, section "_ftrace_eval_map", align 4
@.str.11 = private unnamed_addr constant [9 x i8] c"AF_INET6\00", align 1
@__TRACE_SYSTEM_AF_INET6 = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.11, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_INET6 = internal global ptr @__TRACE_SYSTEM_AF_INET6, section "_ftrace_eval_map", align 4
@.str.12 = private unnamed_addr constant [12 x i8] c"RPC_AUTH_OK\00", align 1
@__TRACE_SYSTEM_RPC_AUTH_OK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.12, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_OK = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_OK, section "_ftrace_eval_map", align 4
@.str.13 = private unnamed_addr constant [17 x i8] c"RPC_AUTH_BADCRED\00", align 1
@__TRACE_SYSTEM_RPC_AUTH_BADCRED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.13, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_BADCRED = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_BADCRED, section "_ftrace_eval_map", align 4
@.str.14 = private unnamed_addr constant [22 x i8] c"RPC_AUTH_REJECTEDCRED\00", align 1
@__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.14, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, section "_ftrace_eval_map", align 4
@.str.15 = private unnamed_addr constant [17 x i8] c"RPC_AUTH_BADVERF\00", align 1
@__TRACE_SYSTEM_RPC_AUTH_BADVERF = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.15, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_BADVERF = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_BADVERF, section "_ftrace_eval_map", align 4
@.str.16 = private unnamed_addr constant [22 x i8] c"RPC_AUTH_REJECTEDVERF\00", align 1
@__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.16, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, section "_ftrace_eval_map", align 4
@.str.17 = private unnamed_addr constant [17 x i8] c"RPC_AUTH_TOOWEAK\00", align 1
@__TRACE_SYSTEM_RPC_AUTH_TOOWEAK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.17, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_TOOWEAK = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_TOOWEAK, section "_ftrace_eval_map", align 4
@.str.18 = private unnamed_addr constant [23 x i8] c"RPCSEC_GSS_CREDPROBLEM\00", align 1
@__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.18, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM = internal global ptr @__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, section "_ftrace_eval_map", align 4
@.str.19 = private unnamed_addr constant [22 x i8] c"RPCSEC_GSS_CTXPROBLEM\00", align 1
@__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.19, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM = internal global ptr @__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, section "_ftrace_eval_map", align 4
@.str.20 = private unnamed_addr constant [8 x i8] c"SS_FREE\00", align 1
@__TRACE_SYSTEM_SS_FREE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.20, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_FREE = internal global ptr @__TRACE_SYSTEM_SS_FREE, section "_ftrace_eval_map", align 4
@.str.21 = private unnamed_addr constant [15 x i8] c"SS_UNCONNECTED\00", align 1
@__TRACE_SYSTEM_SS_UNCONNECTED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.21, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_UNCONNECTED = internal global ptr @__TRACE_SYSTEM_SS_UNCONNECTED, section "_ftrace_eval_map", align 4
@.str.22 = private unnamed_addr constant [14 x i8] c"SS_CONNECTING\00", align 1
@__TRACE_SYSTEM_SS_CONNECTING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.22, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_CONNECTING = internal global ptr @__TRACE_SYSTEM_SS_CONNECTING, section "_ftrace_eval_map", align 4
@.str.23 = private unnamed_addr constant [13 x i8] c"SS_CONNECTED\00", align 1
@__TRACE_SYSTEM_SS_CONNECTED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.23, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_CONNECTED = internal global ptr @__TRACE_SYSTEM_SS_CONNECTED, section "_ftrace_eval_map", align 4
@.str.24 = private unnamed_addr constant [17 x i8] c"SS_DISCONNECTING\00", align 1
@__TRACE_SYSTEM_SS_DISCONNECTING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.24, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_DISCONNECTING = internal global ptr @__TRACE_SYSTEM_SS_DISCONNECTING, section "_ftrace_eval_map", align 4
@.str.25 = private unnamed_addr constant [16 x i8] c"TCP_ESTABLISHED\00", align 1
@__TRACE_SYSTEM_TCP_ESTABLISHED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.25, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_ESTABLISHED = internal global ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, section "_ftrace_eval_map", align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"TCP_SYN_SENT\00", align 1
@__TRACE_SYSTEM_TCP_SYN_SENT = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.26, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_SYN_SENT = internal global ptr @__TRACE_SYSTEM_TCP_SYN_SENT, section "_ftrace_eval_map", align 4
@.str.27 = private unnamed_addr constant [13 x i8] c"TCP_SYN_RECV\00", align 1
@__TRACE_SYSTEM_TCP_SYN_RECV = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.27, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_SYN_RECV = internal global ptr @__TRACE_SYSTEM_TCP_SYN_RECV, section "_ftrace_eval_map", align 4
@.str.28 = private unnamed_addr constant [14 x i8] c"TCP_FIN_WAIT1\00", align 1
@__TRACE_SYSTEM_TCP_FIN_WAIT1 = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.28, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_FIN_WAIT1 = internal global ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, section "_ftrace_eval_map", align 4
@.str.29 = private unnamed_addr constant [14 x i8] c"TCP_FIN_WAIT2\00", align 1
@__TRACE_SYSTEM_TCP_FIN_WAIT2 = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.29, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_FIN_WAIT2 = internal global ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, section "_ftrace_eval_map", align 4
@.str.30 = private unnamed_addr constant [14 x i8] c"TCP_TIME_WAIT\00", align 1
@__TRACE_SYSTEM_TCP_TIME_WAIT = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.30, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_TIME_WAIT = internal global ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, section "_ftrace_eval_map", align 4
@.str.31 = private unnamed_addr constant [10 x i8] c"TCP_CLOSE\00", align 1
@__TRACE_SYSTEM_TCP_CLOSE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.31, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSE = internal global ptr @__TRACE_SYSTEM_TCP_CLOSE, section "_ftrace_eval_map", align 4
@.str.32 = private unnamed_addr constant [15 x i8] c"TCP_CLOSE_WAIT\00", align 1
@__TRACE_SYSTEM_TCP_CLOSE_WAIT = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.32, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSE_WAIT = internal global ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, section "_ftrace_eval_map", align 4
@.str.33 = private unnamed_addr constant [13 x i8] c"TCP_LAST_ACK\00", align 1
@__TRACE_SYSTEM_TCP_LAST_ACK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.33, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_LAST_ACK = internal global ptr @__TRACE_SYSTEM_TCP_LAST_ACK, section "_ftrace_eval_map", align 4
@.str.34 = private unnamed_addr constant [11 x i8] c"TCP_LISTEN\00", align 1
@__TRACE_SYSTEM_TCP_LISTEN = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.34, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_LISTEN = internal global ptr @__TRACE_SYSTEM_TCP_LISTEN, section "_ftrace_eval_map", align 4
@.str.35 = private unnamed_addr constant [12 x i8] c"TCP_CLOSING\00", align 1
@__TRACE_SYSTEM_TCP_CLOSING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.35, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSING = internal global ptr @__TRACE_SYSTEM_TCP_CLOSING, section "_ftrace_eval_map", align 4
@.str.36 = private unnamed_addr constant [10 x i8] c"RQ_SECURE\00", align 1
@__TRACE_SYSTEM_RQ_SECURE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.36, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_SECURE = internal global ptr @__TRACE_SYSTEM_RQ_SECURE, section "_ftrace_eval_map", align 4
@.str.37 = private unnamed_addr constant [9 x i8] c"RQ_LOCAL\00", align 1
@__TRACE_SYSTEM_RQ_LOCAL = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.37, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_LOCAL = internal global ptr @__TRACE_SYSTEM_RQ_LOCAL, section "_ftrace_eval_map", align 4
@.str.38 = private unnamed_addr constant [15 x i8] c"RQ_USEDEFERRAL\00", align 1
@__TRACE_SYSTEM_RQ_USEDEFERRAL = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.38, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_USEDEFERRAL = internal global ptr @__TRACE_SYSTEM_RQ_USEDEFERRAL, section "_ftrace_eval_map", align 4
@.str.39 = private unnamed_addr constant [10 x i8] c"RQ_DROPME\00", align 1
@__TRACE_SYSTEM_RQ_DROPME = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.39, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_DROPME = internal global ptr @__TRACE_SYSTEM_RQ_DROPME, section "_ftrace_eval_map", align 4
@.str.40 = private unnamed_addr constant [13 x i8] c"RQ_SPLICE_OK\00", align 1
@__TRACE_SYSTEM_RQ_SPLICE_OK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.40, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_SPLICE_OK = internal global ptr @__TRACE_SYSTEM_RQ_SPLICE_OK, section "_ftrace_eval_map", align 4
@.str.41 = private unnamed_addr constant [10 x i8] c"RQ_VICTIM\00", align 1
@__TRACE_SYSTEM_RQ_VICTIM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.41, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_VICTIM = internal global ptr @__TRACE_SYSTEM_RQ_VICTIM, section "_ftrace_eval_map", align 4
@.str.42 = private unnamed_addr constant [8 x i8] c"RQ_BUSY\00", align 1
@__TRACE_SYSTEM_RQ_BUSY = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.42, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_BUSY = internal global ptr @__TRACE_SYSTEM_RQ_BUSY, section "_ftrace_eval_map", align 4
@.str.43 = private unnamed_addr constant [8 x i8] c"RQ_DATA\00", align 1
@__TRACE_SYSTEM_RQ_DATA = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.43, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_DATA = internal global ptr @__TRACE_SYSTEM_RQ_DATA, section "_ftrace_eval_map", align 4
@.str.44 = private unnamed_addr constant [12 x i8] c"SVC_GARBAGE\00", align 1
@__TRACE_SYSTEM_SVC_GARBAGE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.44, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_GARBAGE = internal global ptr @__TRACE_SYSTEM_SVC_GARBAGE, section "_ftrace_eval_map", align 4
@.str.45 = private unnamed_addr constant [11 x i8] c"SVC_SYSERR\00", align 1
@__TRACE_SYSTEM_SVC_SYSERR = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.45, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_SYSERR = internal global ptr @__TRACE_SYSTEM_SVC_SYSERR, section "_ftrace_eval_map", align 4
@.str.46 = private unnamed_addr constant [10 x i8] c"SVC_VALID\00", align 1
@__TRACE_SYSTEM_SVC_VALID = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.46, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_VALID = internal global ptr @__TRACE_SYSTEM_SVC_VALID, section "_ftrace_eval_map", align 4
@.str.47 = private unnamed_addr constant [13 x i8] c"SVC_NEGATIVE\00", align 1
@__TRACE_SYSTEM_SVC_NEGATIVE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.47, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_NEGATIVE = internal global ptr @__TRACE_SYSTEM_SVC_NEGATIVE, section "_ftrace_eval_map", align 4
@.str.48 = private unnamed_addr constant [7 x i8] c"SVC_OK\00", align 1
@__TRACE_SYSTEM_SVC_OK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.48, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_OK = internal global ptr @__TRACE_SYSTEM_SVC_OK, section "_ftrace_eval_map", align 4
@.str.49 = private unnamed_addr constant [9 x i8] c"SVC_DROP\00", align 1
@__TRACE_SYSTEM_SVC_DROP = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.49, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_DROP = internal global ptr @__TRACE_SYSTEM_SVC_DROP, section "_ftrace_eval_map", align 4
@.str.50 = private unnamed_addr constant [10 x i8] c"SVC_CLOSE\00", align 1
@__TRACE_SYSTEM_SVC_CLOSE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.50, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_CLOSE = internal global ptr @__TRACE_SYSTEM_SVC_CLOSE, section "_ftrace_eval_map", align 4
@.str.51 = private unnamed_addr constant [11 x i8] c"SVC_DENIED\00", align 1
@__TRACE_SYSTEM_SVC_DENIED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.51, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_DENIED = internal global ptr @__TRACE_SYSTEM_SVC_DENIED, section "_ftrace_eval_map", align 4
@.str.52 = private unnamed_addr constant [12 x i8] c"SVC_PENDING\00", align 1
@__TRACE_SYSTEM_SVC_PENDING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.52, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_PENDING = internal global ptr @__TRACE_SYSTEM_SVC_PENDING, section "_ftrace_eval_map", align 4
@.str.53 = private unnamed_addr constant [13 x i8] c"SVC_COMPLETE\00", align 1
@__TRACE_SYSTEM_SVC_COMPLETE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.53, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_COMPLETE = internal global ptr @__TRACE_SYSTEM_SVC_COMPLETE, section "_ftrace_eval_map", align 4
@trace_event_fields_rpc_xdr_buf_class = internal global [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_xdr_buf_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xdr_buf_class, ptr @perf_trace_rpc_xdr_buf_class, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xdr_buf_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xdr_buf_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xdr_buf_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xdr_buf_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_xdr_buf_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_xdr_buf_class = internal global [201 x i8] c"\22task:%08x@%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\22, REC->task_id, REC->client_id, REC->head_base, REC->head_len, REC->page_len, REC->page_base, REC->tail_base, REC->tail_len, REC->msg_len\00", align 1
@event_rpc_xdr_sendto = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_buf_class, %union.anon.169 { ptr @__tracepoint_rpc_xdr_sendto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_buf_class }, ptr @print_fmt_rpc_xdr_buf_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_xdr_sendto = internal global ptr @event_rpc_xdr_sendto, section "_ftrace_events", align 4
@event_rpc_xdr_recvfrom = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_buf_class, %union.anon.169 { ptr @__tracepoint_rpc_xdr_recvfrom }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_buf_class }, ptr @print_fmt_rpc_xdr_buf_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_xdr_recvfrom = internal global ptr @event_rpc_xdr_recvfrom, section "_ftrace_events", align 4
@event_rpc_xdr_reply_pages = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_buf_class, %union.anon.169 { ptr @__tracepoint_rpc_xdr_reply_pages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_buf_class }, ptr @print_fmt_rpc_xdr_buf_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_xdr_reply_pages = internal global ptr @event_rpc_xdr_reply_pages, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_class = internal global [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_clnt_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_class, ptr @perf_trace_rpc_clnt_class, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_clnt_class = internal global [30 x i8] c"\22client=%08x\22, REC->client_id\00", align 1
@event_rpc_clnt_free = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.169 { ptr @__tracepoint_rpc_clnt_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_free = internal global ptr @event_rpc_clnt_free, section "_ftrace_events", align 4
@event_rpc_clnt_killall = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.169 { ptr @__tracepoint_rpc_clnt_killall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_killall = internal global ptr @event_rpc_clnt_killall, section "_ftrace_events", align 4
@event_rpc_clnt_shutdown = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.169 { ptr @__tracepoint_rpc_clnt_shutdown }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_shutdown = internal global ptr @event_rpc_clnt_shutdown, section "_ftrace_events", align 4
@event_rpc_clnt_release = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.169 { ptr @__tracepoint_rpc_clnt_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_release = internal global ptr @event_rpc_clnt_release, section "_ftrace_events", align 4
@event_rpc_clnt_replace_xprt = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.169 { ptr @__tracepoint_rpc_clnt_replace_xprt }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_replace_xprt = internal global ptr @event_rpc_clnt_replace_xprt, section "_ftrace_events", align 4
@event_rpc_clnt_replace_xprt_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.169 { ptr @__tracepoint_rpc_clnt_replace_xprt_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_replace_xprt_err = internal global ptr @event_rpc_clnt_replace_xprt_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_new = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.77, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_clnt_new = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_new, ptr @perf_trace_rpc_clnt_new, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_new, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_new, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_new, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_new = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_new, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_clnt_new = internal global [137 x i8] c"\22client=%08x peer=[%s]:%s program=%s server=%s\22, REC->client_id, __get_str(addr), __get_str(port), __get_str(program), __get_str(server)\00", align 1
@event_rpc_clnt_new = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_new, %union.anon.169 { ptr @__tracepoint_rpc_clnt_new }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_new }, ptr @print_fmt_rpc_clnt_new, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_new = internal global ptr @event_rpc_clnt_new, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_new_err = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.77, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_clnt_new_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_new_err, ptr @perf_trace_rpc_clnt_new_err, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_new_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_new_err, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_new_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_new_err = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_new_err, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_clnt_new_err = internal global [83 x i8] c"\22program=%s server=%s error=%d\22, __get_str(program), __get_str(server), REC->error\00", align 1
@event_rpc_clnt_new_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_new_err, %union.anon.169 { ptr @__tracepoint_rpc_clnt_new_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_new_err }, ptr @print_fmt_rpc_clnt_new_err, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_new_err = internal global ptr @event_rpc_clnt_new_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_clone_err = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_clnt_clone_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_clone_err, ptr @perf_trace_rpc_clnt_clone_err, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_clone_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_clone_err, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_clone_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_clone_err = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_clone_err, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_clnt_clone_err = internal global [51 x i8] c"\22client=%08x error=%d\22, REC->client_id, REC->error\00", align 1
@event_rpc_clnt_clone_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_clone_err, %union.anon.169 { ptr @__tracepoint_rpc_clnt_clone_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_clone_err }, ptr @print_fmt_rpc_clnt_clone_err, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_clnt_clone_err = internal global ptr @event_rpc_clnt_clone_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_task_status = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_task_status = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_task_status, ptr @perf_trace_rpc_task_status, ptr @trace_event_reg, ptr @trace_event_fields_rpc_task_status, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_task_status, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_task_status, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_task_status = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_task_status, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_task_status = internal global [70 x i8] c"\22task:%08x@%08x status=%d\22, REC->task_id, REC->client_id, REC->status\00", align 1
@event_rpc_call_status = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.169 { ptr @__tracepoint_rpc_call_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_call_status = internal global ptr @event_rpc_call_status, section "_ftrace_events", align 4
@event_rpc_connect_status = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.169 { ptr @__tracepoint_rpc_connect_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_connect_status = internal global ptr @event_rpc_connect_status, section "_ftrace_events", align 4
@event_rpc_timeout_status = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.169 { ptr @__tracepoint_rpc_timeout_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_timeout_status = internal global ptr @event_rpc_timeout_status, section "_ftrace_events", align 4
@event_rpc_retry_refresh_status = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.169 { ptr @__tracepoint_rpc_retry_refresh_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_retry_refresh_status = internal global ptr @event_rpc_retry_refresh_status, section "_ftrace_events", align 4
@event_rpc_refresh_status = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.169 { ptr @__tracepoint_rpc_refresh_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_refresh_status = internal global ptr @event_rpc_refresh_status, section "_ftrace_events", align 4
@trace_event_fields_rpc_request = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.167 { %struct.anon.168 { ptr @.str.87, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_request = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_request, ptr @perf_trace_rpc_request, ptr @trace_event_reg, ptr @trace_event_fields_rpc_request, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_request, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_request, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_request = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_request, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_request = internal global [143 x i8] c"\22task:%08x@%08x %sv%d %s (%ssync)\22, REC->task_id, REC->client_id, __get_str(progname), REC->version, __get_str(procname), REC->async ? \22a\22: \22\22\00", align 1
@event_rpc_request = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_request, %union.anon.169 { ptr @__tracepoint_rpc_request }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_request }, ptr @print_fmt_rpc_request, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_request = internal global ptr @event_rpc_request, section "_ftrace_events", align 4
@trace_event_fields_rpc_task_running = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_task_running = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_task_running, ptr @perf_trace_rpc_task_running, ptr @trace_event_reg, ptr @trace_event_fields_rpc_task_running, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_task_running, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_task_running, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_task_running = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_task_running, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_task_running = internal global [735 x i8] c"\22task:%08x@%08x flags=%s runstate=%s status=%d action=%ps\22, REC->task_id, REC->client_id, __print_flags(REC->flags, \22|\22, { 0x0001, \22ASYNC\22 }, { 0x0002, \22SWAPPER\22 }, { 0x0004, \22MOVEABLE\22 }, { 0x0010, \22NULLCREDS\22 }, { 0x0020, \22MAJORSEEN\22 }, { 0x0040, \22ROOTCREDS\22 }, { 0x0080, \22DYNAMIC\22 }, { 0x0100, \22NO_ROUND_ROBIN\22 }, { 0x0200, \22SOFT\22 }, { 0x0400, \22SOFTCONN\22 }, { 0x0800, \22SENT\22 }, { 0x1000, \22TIMEOUT\22 }, { 0x2000, \22NOCONNECT\22 }, { 0x4000, \22NORTO\22 }, { 0x8000, \22CRED_NOREF\22 }), __print_flags(REC->runstate, \22|\22, { (1UL << 0), \22RUNNING\22 }, { (1UL << 1), \22QUEUED\22 }, { (1UL << 2), \22ACTIVE\22 }, { (1UL << 3), \22NEED_XMIT\22 }, { (1UL << 4), \22NEED_RECV\22 }, { (1UL << 5), \22MSG_PIN_WAIT\22 }, { (1UL << 6), \22SIGNALLED\22 }), REC->status, REC->action\00", align 1
@event_rpc_task_begin = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_begin = internal global ptr @event_rpc_task_begin, section "_ftrace_events", align 4
@event_rpc_task_run_action = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_run_action }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_run_action = internal global ptr @event_rpc_task_run_action, section "_ftrace_events", align 4
@event_rpc_task_sync_sleep = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_sync_sleep }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_sync_sleep = internal global ptr @event_rpc_task_sync_sleep, section "_ftrace_events", align 4
@event_rpc_task_sync_wake = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_sync_wake }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_sync_wake = internal global ptr @event_rpc_task_sync_wake, section "_ftrace_events", align 4
@event_rpc_task_complete = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_complete = internal global ptr @event_rpc_task_complete, section "_ftrace_events", align 4
@event_rpc_task_timeout = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_timeout }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_timeout = internal global ptr @event_rpc_task_timeout, section "_ftrace_events", align 4
@event_rpc_task_signalled = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_signalled }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_signalled = internal global ptr @event_rpc_task_signalled, section "_ftrace_events", align 4
@event_rpc_task_end = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_end = internal global ptr @event_rpc_task_end, section "_ftrace_events", align 4
@event_rpc_task_call_done = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.169 { ptr @__tracepoint_rpc_task_call_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_call_done = internal global ptr @event_rpc_task_call_done, section "_ftrace_events", align 4
@trace_event_fields_rpc_task_queued = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.124, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.125, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_task_queued = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_task_queued, ptr @perf_trace_rpc_task_queued, ptr @trace_event_reg, ptr @trace_event_fields_rpc_task_queued, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_task_queued, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_task_queued, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_task_queued = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_task_queued, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_task_queued = internal global [765 x i8] c"\22task:%08x@%08x flags=%s runstate=%s status=%d timeout=%lu queue=%s\22, REC->task_id, REC->client_id, __print_flags(REC->flags, \22|\22, { 0x0001, \22ASYNC\22 }, { 0x0002, \22SWAPPER\22 }, { 0x0004, \22MOVEABLE\22 }, { 0x0010, \22NULLCREDS\22 }, { 0x0020, \22MAJORSEEN\22 }, { 0x0040, \22ROOTCREDS\22 }, { 0x0080, \22DYNAMIC\22 }, { 0x0100, \22NO_ROUND_ROBIN\22 }, { 0x0200, \22SOFT\22 }, { 0x0400, \22SOFTCONN\22 }, { 0x0800, \22SENT\22 }, { 0x1000, \22TIMEOUT\22 }, { 0x2000, \22NOCONNECT\22 }, { 0x4000, \22NORTO\22 }, { 0x8000, \22CRED_NOREF\22 }), __print_flags(REC->runstate, \22|\22, { (1UL << 0), \22RUNNING\22 }, { (1UL << 1), \22QUEUED\22 }, { (1UL << 2), \22ACTIVE\22 }, { (1UL << 3), \22NEED_XMIT\22 }, { (1UL << 4), \22NEED_RECV\22 }, { (1UL << 5), \22MSG_PIN_WAIT\22 }, { (1UL << 6), \22SIGNALLED\22 }), REC->status, REC->timeout, __get_str(q_name)\00", align 1
@event_rpc_task_sleep = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_queued, %union.anon.169 { ptr @__tracepoint_rpc_task_sleep }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_queued }, ptr @print_fmt_rpc_task_queued, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_sleep = internal global ptr @event_rpc_task_sleep, section "_ftrace_events", align 4
@event_rpc_task_wakeup = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_queued, %union.anon.169 { ptr @__tracepoint_rpc_task_wakeup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_queued }, ptr @print_fmt_rpc_task_queued, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_task_wakeup = internal global ptr @event_rpc_task_wakeup, section "_ftrace_events", align 4
@trace_event_fields_rpc_failure = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_failure = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_failure, ptr @perf_trace_rpc_failure, ptr @trace_event_reg, ptr @trace_event_fields_rpc_failure, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_failure, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_failure, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_failure = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_failure, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_failure = internal global [47 x i8] c"\22task:%08x@%08x\22, REC->task_id, REC->client_id\00", align 1
@event_rpc_bad_callhdr = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_failure, %union.anon.169 { ptr @__tracepoint_rpc_bad_callhdr }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_failure }, ptr @print_fmt_rpc_failure, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_bad_callhdr = internal global ptr @event_rpc_bad_callhdr, section "_ftrace_events", align 4
@event_rpc_bad_verifier = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_failure, %union.anon.169 { ptr @__tracepoint_rpc_bad_verifier }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_failure }, ptr @print_fmt_rpc_failure, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_bad_verifier = internal global ptr @event_rpc_bad_verifier, section "_ftrace_events", align 4
@trace_event_fields_rpc_reply_event = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.131, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_reply_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_reply_event, ptr @perf_trace_rpc_reply_event, ptr @trace_event_reg, ptr @trace_event_fields_rpc_reply_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_reply_event, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_reply_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_reply_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_reply_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_reply_event = internal global [166 x i8] c"\22task:%08x@%08x server=%s xid=0x%08x %sv%d %s\22, REC->task_id, REC->client_id, __get_str(servername), REC->xid, __get_str(progname), REC->version, __get_str(procname)\00", align 1
@event_rpc__prog_unavail = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__prog_unavail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__prog_unavail = internal global ptr @event_rpc__prog_unavail, section "_ftrace_events", align 4
@event_rpc__prog_mismatch = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__prog_mismatch }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__prog_mismatch = internal global ptr @event_rpc__prog_mismatch, section "_ftrace_events", align 4
@event_rpc__proc_unavail = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__proc_unavail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__proc_unavail = internal global ptr @event_rpc__proc_unavail, section "_ftrace_events", align 4
@event_rpc__garbage_args = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__garbage_args }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__garbage_args = internal global ptr @event_rpc__garbage_args, section "_ftrace_events", align 4
@event_rpc__unparsable = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__unparsable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__unparsable = internal global ptr @event_rpc__unparsable, section "_ftrace_events", align 4
@event_rpc__mismatch = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__mismatch }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__mismatch = internal global ptr @event_rpc__mismatch, section "_ftrace_events", align 4
@event_rpc__stale_creds = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__stale_creds }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__stale_creds = internal global ptr @event_rpc__stale_creds, section "_ftrace_events", align 4
@event_rpc__bad_creds = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__bad_creds }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__bad_creds = internal global ptr @event_rpc__bad_creds, section "_ftrace_events", align 4
@event_rpc__auth_tooweak = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpc__auth_tooweak }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc__auth_tooweak = internal global ptr @event_rpc__auth_tooweak, section "_ftrace_events", align 4
@event_rpcb_prog_unavail_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpcb_prog_unavail_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_prog_unavail_err = internal global ptr @event_rpcb_prog_unavail_err, section "_ftrace_events", align 4
@event_rpcb_timeout_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpcb_timeout_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_timeout_err = internal global ptr @event_rpcb_timeout_err, section "_ftrace_events", align 4
@event_rpcb_bind_version_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpcb_bind_version_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_bind_version_err = internal global ptr @event_rpcb_bind_version_err, section "_ftrace_events", align 4
@event_rpcb_unreachable_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpcb_unreachable_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_unreachable_err = internal global ptr @event_rpcb_unreachable_err, section "_ftrace_events", align 4
@event_rpcb_unrecognized_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.169 { ptr @__tracepoint_rpcb_unrecognized_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_unrecognized_err = internal global ptr @event_rpcb_unrecognized_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_buf_alloc = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.133, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.134, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_buf_alloc = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_buf_alloc, ptr @perf_trace_rpc_buf_alloc, ptr @trace_event_reg, ptr @trace_event_fields_rpc_buf_alloc, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_buf_alloc, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_buf_alloc, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_buf_alloc = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_buf_alloc, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_buf_alloc = internal global [126 x i8] c"\22task:%08x@%08x callsize=%zu recvsize=%zu status=%d\22, REC->task_id, REC->client_id, REC->callsize, REC->recvsize, REC->status\00", align 1
@event_rpc_buf_alloc = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_buf_alloc, %union.anon.169 { ptr @__tracepoint_rpc_buf_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_buf_alloc }, ptr @print_fmt_rpc_buf_alloc, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_buf_alloc = internal global ptr @event_rpc_buf_alloc, section "_ftrace_events", align 4
@trace_event_fields_rpc_call_rpcerror = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.136, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.137, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_call_rpcerror = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_call_rpcerror, ptr @perf_trace_rpc_call_rpcerror, ptr @trace_event_reg, ptr @trace_event_fields_rpc_call_rpcerror, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_call_rpcerror, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_call_rpcerror, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_call_rpcerror = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_call_rpcerror, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_call_rpcerror = internal global [107 x i8] c"\22task:%08x@%08x tk_status=%d rpc_status=%d\22, REC->task_id, REC->client_id, REC->tk_status, REC->rpc_status\00", align 1
@event_rpc_call_rpcerror = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_call_rpcerror, %union.anon.169 { ptr @__tracepoint_rpc_call_rpcerror }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_call_rpcerror }, ptr @print_fmt_rpc_call_rpcerror, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_call_rpcerror = internal global ptr @event_rpc_call_rpcerror, section "_ftrace_events", align 4
@trace_event_fields_rpc_stats_latency = internal global [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.139, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.140, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.141, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_stats_latency = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_stats_latency, ptr @perf_trace_rpc_stats_latency, ptr @trace_event_reg, ptr @trace_event_fields_rpc_stats_latency, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_stats_latency, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_stats_latency, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_stats_latency = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_stats_latency, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_stats_latency = internal global [203 x i8] c"\22task:%08x@%08x xid=0x%08x %sv%d %s backlog=%lu rtt=%lu execute=%lu\22, REC->task_id, REC->client_id, REC->xid, __get_str(progname), REC->version, __get_str(procname), REC->backlog, REC->rtt, REC->execute\00", align 1
@event_rpc_stats_latency = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_stats_latency, %union.anon.169 { ptr @__tracepoint_rpc_stats_latency }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_stats_latency }, ptr @print_fmt_rpc_stats_latency, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_stats_latency = internal global ptr @event_rpc_stats_latency, section "_ftrace_events", align 4
@trace_event_fields_rpc_xdr_overflow = internal global [15 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.143, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.144, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.145, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.146, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_xdr_overflow = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xdr_overflow, ptr @perf_trace_rpc_xdr_overflow, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xdr_overflow, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xdr_overflow, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xdr_overflow, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xdr_overflow = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_xdr_overflow, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_xdr_overflow = internal global [289 x i8] c"\22task:%08x@%08x %sv%d %s requested=%zu p=%p end=%p xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\22, REC->task_id, REC->client_id, __get_str(progname), REC->version, __get_str(procedure), REC->requested, REC->p, REC->end, REC->head_base, REC->head_len, REC->page_len, REC->tail_base, REC->tail_len, REC->len\00", align 1
@event_rpc_xdr_overflow = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_overflow, %union.anon.169 { ptr @__tracepoint_rpc_xdr_overflow }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_overflow }, ptr @print_fmt_rpc_xdr_overflow, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_xdr_overflow = internal global ptr @event_rpc_xdr_overflow, section "_ftrace_events", align 4
@trace_event_fields_rpc_xdr_alignment = internal global [14 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.149, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.150, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.146, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_xdr_alignment = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xdr_alignment, ptr @perf_trace_rpc_xdr_alignment, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xdr_alignment, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xdr_alignment, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xdr_alignment, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xdr_alignment = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_xdr_alignment, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_xdr_alignment = internal global [276 x i8] c"\22task:%08x@%08x %sv%d %s offset=%zu copied=%u xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\22, REC->task_id, REC->client_id, __get_str(progname), REC->version, __get_str(procedure), REC->offset, REC->copied, REC->head_base, REC->head_len, REC->page_len, REC->tail_base, REC->tail_len, REC->len\00", align 1
@event_rpc_xdr_alignment = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_alignment, %union.anon.169 { ptr @__tracepoint_rpc_xdr_alignment }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_alignment }, ptr @print_fmt_rpc_xdr_alignment, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_xdr_alignment = internal global ptr @event_rpc_xdr_alignment, section "_ftrace_events", align 4
@trace_event_fields_xs_socket_event = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.153, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.154, %union.anon.167 { %struct.anon.168 { ptr @.str.155, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.167 { %struct.anon.168 { ptr @.str.157, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.167 { %struct.anon.168 { ptr @.str.158, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xs_socket_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_socket_event, ptr @perf_trace_xs_socket_event, ptr @trace_event_reg, ptr @trace_event_fields_xs_socket_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_socket_event, i64 24), ptr getelementptr (i8, ptr @event_class_xs_socket_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xs_socket_event_done = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.153, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.154, %union.anon.167 { %struct.anon.168 { ptr @.str.155, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.167 { %struct.anon.168 { ptr @.str.157, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.167 { %struct.anon.168 { ptr @.str.158, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xs_socket_event_done = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_socket_event_done, ptr @perf_trace_xs_socket_event_done, ptr @trace_event_reg, ptr @trace_event_fields_xs_socket_event_done, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_socket_event_done, i64 24), ptr getelementptr (i8, ptr @event_class_xs_socket_event_done, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xs_socket_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_xs_socket_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_xs_socket_event = internal global [680 x i8] c"\22socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\22, REC->ino, REC->saddr, REC->daddr, REC->socket_state, __print_symbolic(REC->socket_state, {SS_FREE, \22FREE\22}, {SS_UNCONNECTED, \22UNCONNECTED\22}, {SS_CONNECTING, \22CONNECTING\22}, {SS_CONNECTED, \22CONNECTED\22}, {SS_DISCONNECTING, \22DISCONNECTING\22}), REC->sock_state, __print_symbolic(REC->sock_state, {TCP_ESTABLISHED, \22ESTABLISHED\22}, {TCP_SYN_SENT, \22SYN_SENT\22}, {TCP_SYN_RECV, \22SYN_RECV\22}, {TCP_FIN_WAIT1, \22FIN_WAIT1\22}, {TCP_FIN_WAIT2, \22FIN_WAIT2\22}, {TCP_TIME_WAIT, \22TIME_WAIT\22}, {TCP_CLOSE, \22CLOSE\22}, {TCP_CLOSE_WAIT, \22CLOSE_WAIT\22}, {TCP_LAST_ACK, \22LAST_ACK\22}, {TCP_LISTEN, \22LISTEN\22}, {TCP_CLOSING, \22CLOSING\22})\00", align 1
@event_rpc_socket_state_change = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event, %union.anon.169 { ptr @__tracepoint_rpc_socket_state_change }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event }, ptr @print_fmt_xs_socket_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_socket_state_change = internal global ptr @event_rpc_socket_state_change, section "_ftrace_events", align 4
@trace_event_type_funcs_xs_socket_event_done = internal global %struct.trace_event_functions { ptr @trace_raw_output_xs_socket_event_done, ptr null, ptr null, ptr null }, align 4
@print_fmt_xs_socket_event_done = internal global [701 x i8] c"\22error=%d socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\22, REC->error, REC->ino, REC->saddr, REC->daddr, REC->socket_state, __print_symbolic(REC->socket_state, {SS_FREE, \22FREE\22}, {SS_UNCONNECTED, \22UNCONNECTED\22}, {SS_CONNECTING, \22CONNECTING\22}, {SS_CONNECTED, \22CONNECTED\22}, {SS_DISCONNECTING, \22DISCONNECTING\22}), REC->sock_state, __print_symbolic(REC->sock_state, {TCP_ESTABLISHED, \22ESTABLISHED\22}, {TCP_SYN_SENT, \22SYN_SENT\22}, {TCP_SYN_RECV, \22SYN_RECV\22}, {TCP_FIN_WAIT1, \22FIN_WAIT1\22}, {TCP_FIN_WAIT2, \22FIN_WAIT2\22}, {TCP_TIME_WAIT, \22TIME_WAIT\22}, {TCP_CLOSE, \22CLOSE\22}, {TCP_CLOSE_WAIT, \22CLOSE_WAIT\22}, {TCP_LAST_ACK, \22LAST_ACK\22}, {TCP_LISTEN, \22LISTEN\22}, {TCP_CLOSING, \22CLOSING\22})\00", align 1
@event_rpc_socket_connect = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event_done, %union.anon.169 { ptr @__tracepoint_rpc_socket_connect }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event_done }, ptr @print_fmt_xs_socket_event_done, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_socket_connect = internal global ptr @event_rpc_socket_connect, section "_ftrace_events", align 4
@event_rpc_socket_error = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event_done, %union.anon.169 { ptr @__tracepoint_rpc_socket_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event_done }, ptr @print_fmt_xs_socket_event_done, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_socket_error = internal global ptr @event_rpc_socket_error, section "_ftrace_events", align 4
@event_rpc_socket_reset_connection = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event_done, %union.anon.169 { ptr @__tracepoint_rpc_socket_reset_connection }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event_done }, ptr @print_fmt_xs_socket_event_done, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_socket_reset_connection = internal global ptr @event_rpc_socket_reset_connection, section "_ftrace_events", align 4
@event_rpc_socket_close = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event, %union.anon.169 { ptr @__tracepoint_rpc_socket_close }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event }, ptr @print_fmt_xs_socket_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_socket_close = internal global ptr @event_rpc_socket_close, section "_ftrace_events", align 4
@event_rpc_socket_shutdown = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event, %union.anon.169 { ptr @__tracepoint_rpc_socket_shutdown }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event }, ptr @print_fmt_xs_socket_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_socket_shutdown = internal global ptr @event_rpc_socket_shutdown, section "_ftrace_events", align 4
@trace_event_fields_rpc_socket_nospace = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.179, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.180, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_socket_nospace = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_socket_nospace, ptr @perf_trace_rpc_socket_nospace, ptr @trace_event_reg, ptr @trace_event_fields_rpc_socket_nospace, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_socket_nospace, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_socket_nospace, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_socket_nospace = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_socket_nospace, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_socket_nospace = internal global [97 x i8] c"\22task:%08x@%08x total=%u remaining=%u\22, REC->task_id, REC->client_id, REC->total, REC->remaining\00", align 1
@event_rpc_socket_nospace = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_socket_nospace, %union.anon.169 { ptr @__tracepoint_rpc_socket_nospace }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_socket_nospace }, ptr @print_fmt_rpc_socket_nospace, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpc_socket_nospace = internal global ptr @event_rpc_socket_nospace, section "_ftrace_events", align 4
@trace_event_fields_rpc_xprt_lifetime_class = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.182, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_xprt_lifetime_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xprt_lifetime_class, ptr @perf_trace_rpc_xprt_lifetime_class, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xprt_lifetime_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xprt_lifetime_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xprt_lifetime_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xprt_lifetime_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_xprt_lifetime_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_xprt_lifetime_class = internal global [592 x i8] c"\22peer=[%s]:%s state=%s\22, __get_str(addr), __get_str(port), __print_flags(REC->state, \22|\22, { ((((1UL))) << ((0))), \22LOCKED\22 }, { ((((1UL))) << ((1))), \22CONNECTED\22 }, { ((((1UL))) << ((2))), \22CONNECTING\22 }, { ((((1UL))) << ((3))), \22CLOSE_WAIT\22 }, { ((((1UL))) << ((4))), \22BOUND\22 }, { ((((1UL))) << ((5))), \22BINDING\22 }, { ((((1UL))) << ((6))), \22CLOSING\22 }, { ((((1UL))) << ((7))), \22OFFLINE\22 }, { ((((1UL))) << ((8))), \22REMOVE\22 }, { ((((1UL))) << ((9))), \22CONGESTED\22 }, { ((((1UL))) << ((10))), \22CWND_WAIT\22 }, { ((((1UL))) << ((11))), \22WRITE_SPACE\22 }, { ((((1UL))) << ((12))), \22SND_IS_COOKIE\22 })\00", align 1
@event_xprt_create = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.169 { ptr @__tracepoint_xprt_create }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_create = internal global ptr @event_xprt_create, section "_ftrace_events", align 4
@event_xprt_connect = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.169 { ptr @__tracepoint_xprt_connect }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_connect = internal global ptr @event_xprt_connect, section "_ftrace_events", align 4
@event_xprt_disconnect_auto = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.169 { ptr @__tracepoint_xprt_disconnect_auto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_disconnect_auto = internal global ptr @event_xprt_disconnect_auto, section "_ftrace_events", align 4
@event_xprt_disconnect_done = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.169 { ptr @__tracepoint_xprt_disconnect_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_disconnect_done = internal global ptr @event_xprt_disconnect_done, section "_ftrace_events", align 4
@event_xprt_disconnect_force = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.169 { ptr @__tracepoint_xprt_disconnect_force }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_disconnect_force = internal global ptr @event_xprt_disconnect_force, section "_ftrace_events", align 4
@event_xprt_disconnect_cleanup = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.169 { ptr @__tracepoint_xprt_disconnect_cleanup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_disconnect_cleanup = internal global ptr @event_xprt_disconnect_cleanup, section "_ftrace_events", align 4
@event_xprt_destroy = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.169 { ptr @__tracepoint_xprt_destroy }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_destroy = internal global ptr @event_xprt_destroy, section "_ftrace_events", align 4
@trace_event_fields_rpc_xprt_event = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpc_xprt_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xprt_event, ptr @perf_trace_rpc_xprt_event, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xprt_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xprt_event, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xprt_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xprt_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpc_xprt_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpc_xprt_event = internal global [93 x i8] c"\22peer=[%s]:%s xid=0x%08x status=%d\22, __get_str(addr), __get_str(port), REC->xid, REC->status\00", align 1
@event_xprt_timer = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_event, %union.anon.169 { ptr @__tracepoint_xprt_timer }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_event }, ptr @print_fmt_rpc_xprt_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_timer = internal global ptr @event_xprt_timer, section "_ftrace_events", align 4
@event_xprt_lookup_rqst = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_event, %union.anon.169 { ptr @__tracepoint_xprt_lookup_rqst }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_event }, ptr @print_fmt_rpc_xprt_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_lookup_rqst = internal global ptr @event_xprt_lookup_rqst, section "_ftrace_events", align 4
@trace_event_fields_xprt_transmit = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.194, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xprt_transmit = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_transmit, ptr @perf_trace_xprt_transmit, ptr @trace_event_reg, ptr @trace_event_fields_xprt_transmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_transmit, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_transmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_transmit = internal global %struct.trace_event_functions { ptr @trace_raw_output_xprt_transmit, ptr null, ptr null, ptr null }, align 4
@print_fmt_xprt_transmit = internal global [112 x i8] c"\22task:%08x@%08x xid=0x%08x seqno=%u status=%d\22, REC->task_id, REC->client_id, REC->xid, REC->seqno, REC->status\00", align 1
@event_xprt_transmit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_transmit, %union.anon.169 { ptr @__tracepoint_xprt_transmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_transmit }, ptr @print_fmt_xprt_transmit, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_transmit = internal global ptr @event_xprt_transmit, section "_ftrace_events", align 4
@trace_event_fields_xprt_retransmit = internal global [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.196, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.124, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xprt_retransmit = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_retransmit, ptr @perf_trace_xprt_retransmit, ptr @trace_event_reg, ptr @trace_event_fields_xprt_retransmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_retransmit, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_retransmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_retransmit = internal global %struct.trace_event_functions { ptr @trace_raw_output_xprt_retransmit, ptr null, ptr null, ptr null }, align 4
@print_fmt_xprt_retransmit = internal global [182 x i8] c"\22task:%08x@%08x xid=0x%08x %sv%d %s ntrans=%d timeout=%lu\22, REC->task_id, REC->client_id, REC->xid, __get_str(progname), REC->version, __get_str(procname), REC->ntrans, REC->timeout\00", align 1
@event_xprt_retransmit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_retransmit, %union.anon.169 { ptr @__tracepoint_xprt_retransmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_retransmit }, ptr @print_fmt_xprt_retransmit, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_retransmit = internal global ptr @event_xprt_retransmit, section "_ftrace_events", align 4
@trace_event_fields_xprt_ping = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xprt_ping = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_ping, ptr @perf_trace_xprt_ping, ptr @trace_event_reg, ptr @trace_event_fields_xprt_ping, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_ping, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_ping, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_ping = internal global %struct.trace_event_functions { ptr @trace_raw_output_xprt_ping, ptr null, ptr null, ptr null }, align 4
@print_fmt_xprt_ping = internal global [72 x i8] c"\22peer=[%s]:%s status=%d\22, __get_str(addr), __get_str(port), REC->status\00", align 1
@event_xprt_ping = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_ping, %union.anon.169 { ptr @__tracepoint_xprt_ping }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_ping }, ptr @print_fmt_xprt_ping, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_ping = internal global ptr @event_xprt_ping, section "_ftrace_events", align 4
@trace_event_fields_xprt_writelock_event = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.199, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xprt_writelock_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_writelock_event, ptr @perf_trace_xprt_writelock_event, ptr @trace_event_reg, ptr @trace_event_fields_xprt_writelock_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_writelock_event, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_writelock_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_writelock_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_xprt_writelock_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_xprt_writelock_event = internal global [79 x i8] c"\22task:%08x@%08x snd_task:%08x\22, REC->task_id, REC->client_id, REC->snd_task_id\00", align 1
@event_xprt_reserve_xprt = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_writelock_event, %union.anon.169 { ptr @__tracepoint_xprt_reserve_xprt }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_writelock_event }, ptr @print_fmt_xprt_writelock_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_reserve_xprt = internal global ptr @event_xprt_reserve_xprt, section "_ftrace_events", align 4
@event_xprt_release_xprt = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_writelock_event, %union.anon.169 { ptr @__tracepoint_xprt_release_xprt }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_writelock_event }, ptr @print_fmt_xprt_writelock_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_release_xprt = internal global ptr @event_xprt_release_xprt, section "_ftrace_events", align 4
@trace_event_fields_xprt_cong_event = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.199, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.202, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.167 { %struct.anon.168 { ptr @.str.203, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xprt_cong_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_cong_event, ptr @perf_trace_xprt_cong_event, ptr @trace_event_reg, ptr @trace_event_fields_xprt_cong_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_cong_event, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_cong_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_cong_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_xprt_cong_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_xprt_cong_event = internal global [149 x i8] c"\22task:%08x@%08x snd_task:%08x cong=%lu cwnd=%lu%s\22, REC->task_id, REC->client_id, REC->snd_task_id, REC->cong, REC->cwnd, REC->wait ? \22 (wait)\22 : \22\22\00", align 1
@event_xprt_reserve_cong = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.169 { ptr @__tracepoint_xprt_reserve_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_reserve_cong = internal global ptr @event_xprt_reserve_cong, section "_ftrace_events", align 4
@event_xprt_release_cong = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.169 { ptr @__tracepoint_xprt_release_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_release_cong = internal global ptr @event_xprt_release_cong, section "_ftrace_events", align 4
@event_xprt_get_cong = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.169 { ptr @__tracepoint_xprt_get_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_get_cong = internal global ptr @event_xprt_get_cong, section "_ftrace_events", align 4
@event_xprt_put_cong = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.169 { ptr @__tracepoint_xprt_put_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_put_cong = internal global ptr @event_xprt_put_cong, section "_ftrace_events", align 4
@trace_event_fields_xprt_reserve = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xprt_reserve = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_reserve, ptr @perf_trace_xprt_reserve, ptr @trace_event_reg, ptr @trace_event_fields_xprt_reserve, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_reserve, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_reserve, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_reserve = internal global %struct.trace_event_functions { ptr @trace_raw_output_xprt_reserve, ptr null, ptr null, ptr null }, align 4
@print_fmt_xprt_reserve = internal global [68 x i8] c"\22task:%08x@%08x xid=0x%08x\22, REC->task_id, REC->client_id, REC->xid\00", align 1
@event_xprt_reserve = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_reserve, %union.anon.169 { ptr @__tracepoint_xprt_reserve }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_reserve }, ptr @print_fmt_xprt_reserve, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xprt_reserve = internal global ptr @event_xprt_reserve, section "_ftrace_events", align 4
@trace_event_fields_xs_stream_read_data = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.207, %union.anon.167 { %struct.anon.168 { ptr @.str.208, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.179, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xs_stream_read_data = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_stream_read_data, ptr @perf_trace_xs_stream_read_data, ptr @trace_event_reg, ptr @trace_event_fields_xs_stream_read_data, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_stream_read_data, i64 24), ptr getelementptr (i8, ptr @event_class_xs_stream_read_data, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xs_stream_read_data = internal global %struct.trace_event_functions { ptr @trace_raw_output_xs_stream_read_data, ptr null, ptr null, ptr null }, align 4
@print_fmt_xs_stream_read_data = internal global [89 x i8] c"\22peer=[%s]:%s err=%zd total=%zu\22, __get_str(addr), __get_str(port), REC->err, REC->total\00", align 1
@event_xs_stream_read_data = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_stream_read_data, %union.anon.169 { ptr @__tracepoint_xs_stream_read_data }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_stream_read_data }, ptr @print_fmt_xs_stream_read_data, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xs_stream_read_data = internal global ptr @event_xs_stream_read_data, section "_ftrace_events", align 4
@trace_event_fields_xs_stream_read_request = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.150, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.210, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.149, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_xs_stream_read_request = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_stream_read_request, ptr @perf_trace_xs_stream_read_request, ptr @trace_event_reg, ptr @trace_event_fields_xs_stream_read_request, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_stream_read_request, i64 24), ptr getelementptr (i8, ptr @event_class_xs_stream_read_request, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xs_stream_read_request = internal global %struct.trace_event_functions { ptr @trace_raw_output_xs_stream_read_request, ptr null, ptr null, ptr null }, align 4
@print_fmt_xs_stream_read_request = internal global [140 x i8] c"\22peer=[%s]:%s xid=0x%08x copied=%lu reclen=%u offset=%u\22, __get_str(addr), __get_str(port), REC->xid, REC->copied, REC->reclen, REC->offset\00", align 1
@event_xs_stream_read_request = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_stream_read_request, %union.anon.169 { ptr @__tracepoint_xs_stream_read_request }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_stream_read_request }, ptr @print_fmt_xs_stream_read_request, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_xs_stream_read_request = internal global ptr @event_xs_stream_read_request, section "_ftrace_events", align 4
@trace_event_fields_rpcb_getport = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.212, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.213, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.131, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpcb_getport = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_getport, ptr @perf_trace_rpcb_getport, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_getport, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_getport, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_getport, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_getport = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpcb_getport, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpcb_getport = internal global [192 x i8] c"\22task:%08x@%08x server=%s program=%u version=%u protocol=%d bind_version=%u\22, REC->task_id, REC->client_id, __get_str(servername), REC->program, REC->version, REC->protocol, REC->bind_version\00", align 1
@event_rpcb_getport = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_getport, %union.anon.169 { ptr @__tracepoint_rpcb_getport }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_getport }, ptr @print_fmt_rpcb_getport, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_getport = internal global ptr @event_rpcb_getport, section "_ftrace_events", align 4
@trace_event_fields_rpcb_setport = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpcb_setport = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_setport, ptr @perf_trace_rpcb_setport, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_setport, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_setport, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_setport, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_setport = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpcb_setport, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpcb_setport = internal global [89 x i8] c"\22task:%08x@%08x status=%d port=%u\22, REC->task_id, REC->client_id, REC->status, REC->port\00", align 1
@event_rpcb_setport = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_setport, %union.anon.169 { ptr @__tracepoint_rpcb_setport }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_setport }, ptr @print_fmt_rpcb_setport, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_setport = internal global ptr @event_rpcb_setport, section "_ftrace_events", align 4
@trace_event_fields_pmap_register = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.212, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_pmap_register = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_pmap_register, ptr @perf_trace_pmap_register, ptr @trace_event_reg, ptr @trace_event_fields_pmap_register, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_pmap_register, i64 24), ptr getelementptr (i8, ptr @event_class_pmap_register, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_pmap_register = internal global %struct.trace_event_functions { ptr @trace_raw_output_pmap_register, ptr null, ptr null, ptr null }, align 4
@print_fmt_pmap_register = internal global [98 x i8] c"\22program=%u version=%u protocol=%d port=%u\22, REC->program, REC->version, REC->protocol, REC->port\00", align 1
@event_pmap_register = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_pmap_register, %union.anon.169 { ptr @__tracepoint_pmap_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_pmap_register }, ptr @print_fmt_pmap_register, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_pmap_register = internal global ptr @event_pmap_register, section "_ftrace_events", align 4
@trace_event_fields_rpcb_register = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.217, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpcb_register = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_register, ptr @perf_trace_rpcb_register, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_register, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_register, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_register, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_register = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpcb_register, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpcb_register = internal global [104 x i8] c"\22program=%u version=%u addr=%s netid=%s\22, REC->program, REC->version, __get_str(addr), __get_str(netid)\00", align 1
@event_rpcb_register = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_register, %union.anon.169 { ptr @__tracepoint_rpcb_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_register }, ptr @print_fmt_rpcb_register, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_register = internal global ptr @event_rpcb_register, section "_ftrace_events", align 4
@trace_event_fields_rpcb_unregister = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.217, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_rpcb_unregister = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_unregister, ptr @perf_trace_rpcb_unregister, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_unregister, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_unregister, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_unregister, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_unregister = internal global %struct.trace_event_functions { ptr @trace_raw_output_rpcb_unregister, ptr null, ptr null, ptr null }, align 4
@print_fmt_rpcb_unregister = internal global [79 x i8] c"\22program=%u version=%u netid=%s\22, REC->program, REC->version, __get_str(netid)\00", align 1
@event_rpcb_unregister = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_unregister, %union.anon.169 { ptr @__tracepoint_rpcb_unregister }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_unregister }, ptr @print_fmt_rpcb_unregister, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_rpcb_unregister = internal global ptr @event_rpcb_unregister, section "_ftrace_events", align 4
@trace_event_fields_svc_xdr_msg_class = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_xdr_msg_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xdr_msg_class, ptr @perf_trace_svc_xdr_msg_class, ptr @trace_event_reg, ptr @trace_event_fields_svc_xdr_msg_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xdr_msg_class, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xdr_msg_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xdr_msg_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_xdr_msg_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_xdr_msg_class = internal global [157 x i8] c"\22xid=0x%08x head=[%p,%zu] page=%u tail=[%p,%zu] len=%u\22, REC->xid, REC->head_base, REC->head_len, REC->page_len, REC->tail_base, REC->tail_len, REC->msg_len\00", align 1
@event_svc_xdr_recvfrom = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xdr_msg_class, %union.anon.169 { ptr @__tracepoint_svc_xdr_recvfrom }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xdr_msg_class }, ptr @print_fmt_svc_xdr_msg_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xdr_recvfrom = internal global ptr @event_svc_xdr_recvfrom, section "_ftrace_events", align 4
@trace_event_fields_svc_xdr_buf_class = internal global [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.167 { %struct.anon.168 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_xdr_buf_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xdr_buf_class, ptr @perf_trace_svc_xdr_buf_class, ptr @trace_event_reg, ptr @trace_event_fields_svc_xdr_buf_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xdr_buf_class, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xdr_buf_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xdr_buf_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_xdr_buf_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_xdr_buf_class = internal global [177 x i8] c"\22xid=0x%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\22, REC->xid, REC->head_base, REC->head_len, REC->page_len, REC->page_base, REC->tail_base, REC->tail_len, REC->msg_len\00", align 1
@event_svc_xdr_sendto = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xdr_buf_class, %union.anon.169 { ptr @__tracepoint_svc_xdr_sendto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xdr_buf_class }, ptr @print_fmt_svc_xdr_buf_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xdr_sendto = internal global ptr @event_svc_xdr_sendto, section "_ftrace_events", align 4
@trace_event_fields_svc_authenticate = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.222, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.223, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_authenticate = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_authenticate, ptr @perf_trace_svc_authenticate, ptr @trace_event_reg, ptr @trace_event_fields_svc_authenticate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_authenticate, i64 24), ptr getelementptr (i8, ptr @event_class_svc_authenticate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_authenticate = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_authenticate, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_authenticate = internal global [631 x i8] c"\22xid=0x%08x auth_res=%s auth_stat=%s\22, REC->xid, __print_symbolic(REC->svc_status, { 1, \22SVC_GARBAGE\22 }, { 2, \22SVC_SYSERR\22 }, { 3, \22SVC_VALID\22 }, { 4, \22SVC_NEGATIVE\22 }, { 5, \22SVC_OK\22 }, { 6, \22SVC_DROP\22 }, { 7, \22SVC_CLOSE\22 }, { 8, \22SVC_DENIED\22 }, { 9, \22SVC_PENDING\22 }, { 10, \22SVC_COMPLETE\22 }), __print_symbolic(REC->auth_stat, { RPC_AUTH_OK, \22AUTH_OK\22 }, { RPC_AUTH_BADCRED, \22BADCRED\22 }, { RPC_AUTH_REJECTEDCRED, \22REJECTEDCRED\22 }, { RPC_AUTH_BADVERF, \22BADVERF\22 }, { RPC_AUTH_REJECTEDVERF, \22REJECTEDVERF\22 }, { RPC_AUTH_TOOWEAK, \22TOOWEAK\22 }, { RPCSEC_GSS_CREDPROBLEM, \22GSS_CREDPROBLEM\22 }, { RPCSEC_GSS_CTXPROBLEM, \22GSS_CTXPROBLEM\22 })\00", align 1
@event_svc_authenticate = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_authenticate, %union.anon.169 { ptr @__tracepoint_svc_authenticate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_authenticate }, ptr @print_fmt_svc_authenticate, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_authenticate = internal global ptr @event_svc_authenticate, section "_ftrace_events", align 4
@trace_event_fields_svc_process = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.234, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.235, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.236, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_process = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_process, ptr @perf_trace_svc_process, ptr @trace_event_reg, ptr @trace_event_fields_svc_process, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_process, i64 24), ptr getelementptr (i8, ptr @event_class_svc_process, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_process = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_process, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_process = internal global [128 x i8] c"\22addr=%s xid=0x%08x service=%s vers=%u proc=%s\22, __get_str(addr), REC->xid, __get_str(service), REC->vers, __get_str(procedure)\00", align 1
@event_svc_process = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_process, %union.anon.169 { ptr @__tracepoint_svc_process }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_process }, ptr @print_fmt_svc_process, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_process = internal global ptr @event_svc_process, section "_ftrace_events", align 4
@trace_event_fields_svc_rqst_event = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_rqst_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_rqst_event, ptr @perf_trace_svc_rqst_event, ptr @trace_event_reg, ptr @trace_event_fields_svc_rqst_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_rqst_event, i64 24), ptr getelementptr (i8, ptr @event_class_svc_rqst_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_rqst_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_rqst_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_rqst_event = internal global [380 x i8] c"\22addr=%s xid=0x%08x flags=%s\22, __get_str(addr), REC->xid, __print_flags(REC->flags, \22|\22, { ((((1UL))) << ((0))), \22SECURE\22 }, { ((((1UL))) << ((1))), \22LOCAL\22 }, { ((((1UL))) << ((2))), \22USEDEFERRAL\22 }, { ((((1UL))) << ((3))), \22DROPME\22 }, { ((((1UL))) << ((4))), \22SPLICE_OK\22 }, { ((((1UL))) << ((5))), \22VICTIM\22 }, { ((((1UL))) << ((6))), \22BUSY\22 }, { ((((1UL))) << ((7))), \22DATA\22 })\00", align 1
@event_svc_defer = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_rqst_event, %union.anon.169 { ptr @__tracepoint_svc_defer }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_rqst_event }, ptr @print_fmt_svc_rqst_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_defer = internal global ptr @event_svc_defer, section "_ftrace_events", align 4
@event_svc_drop = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_rqst_event, %union.anon.169 { ptr @__tracepoint_svc_drop }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_rqst_event }, ptr @print_fmt_svc_rqst_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_drop = internal global ptr @event_svc_drop, section "_ftrace_events", align 4
@trace_event_fields_svc_rqst_status = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_rqst_status = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_rqst_status, ptr @perf_trace_svc_rqst_status, ptr @trace_event_reg, ptr @trace_event_fields_svc_rqst_status, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_rqst_status, i64 24), ptr getelementptr (i8, ptr @event_class_svc_rqst_status, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_rqst_status = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_rqst_status, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_rqst_status = internal global [403 x i8] c"\22addr=%s xid=0x%08x status=%d flags=%s\22, __get_str(addr), REC->xid, REC->status, __print_flags(REC->flags, \22|\22, { ((((1UL))) << ((0))), \22SECURE\22 }, { ((((1UL))) << ((1))), \22LOCAL\22 }, { ((((1UL))) << ((2))), \22USEDEFERRAL\22 }, { ((((1UL))) << ((3))), \22DROPME\22 }, { ((((1UL))) << ((4))), \22SPLICE_OK\22 }, { ((((1UL))) << ((5))), \22VICTIM\22 }, { ((((1UL))) << ((6))), \22BUSY\22 }, { ((((1UL))) << ((7))), \22DATA\22 })\00", align 1
@event_svc_send = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_rqst_status, %union.anon.169 { ptr @__tracepoint_svc_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_rqst_status }, ptr @print_fmt_svc_rqst_status, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_send = internal global ptr @event_svc_send, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_create_err = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.248, %union.anon.167 { %struct.anon.168 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.212, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.249, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_xprt_create_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_create_err, ptr @perf_trace_svc_xprt_create_err, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_create_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_create_err, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_create_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_create_err = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_create_err, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_xprt_create_err = internal global [111 x i8] c"\22addr=%pISpc program=%s protocol=%s error=%ld\22, REC->addr, __get_str(program), __get_str(protocol), REC->error\00", align 1
@event_svc_xprt_create_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_create_err, %union.anon.169 { ptr @__tracepoint_svc_xprt_create_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_create_err }, ptr @print_fmt_svc_xprt_create_err, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_create_err = internal global ptr @event_svc_xprt_create_err, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_enqueue = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.251, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_xprt_enqueue = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_enqueue, ptr @perf_trace_svc_xprt_enqueue, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_enqueue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_enqueue, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_enqueue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_enqueue = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_enqueue, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_xprt_enqueue = internal global [496 x i8] c"\22addr=%s pid=%d flags=%s\22, __get_str(addr), REC->pid, __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", align 1
@event_svc_xprt_enqueue = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_enqueue, %union.anon.169 { ptr @__tracepoint_svc_xprt_enqueue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_enqueue }, ptr @print_fmt_svc_xprt_enqueue, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_enqueue = internal global ptr @event_svc_xprt_enqueue, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_event = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_xprt_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_event, ptr @perf_trace_svc_xprt_event, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_event, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_xprt_event = internal global [479 x i8] c"\22addr=%s flags=%s\22, __get_str(addr), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", align 1
@event_svc_xprt_no_write_space = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.169 { ptr @__tracepoint_svc_xprt_no_write_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_no_write_space = internal global ptr @event_svc_xprt_no_write_space, section "_ftrace_events", align 4
@event_svc_xprt_close = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.169 { ptr @__tracepoint_svc_xprt_close }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_close = internal global ptr @event_svc_xprt_close, section "_ftrace_events", align 4
@event_svc_xprt_detach = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.169 { ptr @__tracepoint_svc_xprt_detach }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_detach = internal global ptr @event_svc_xprt_detach, section "_ftrace_events", align 4
@event_svc_xprt_free = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.169 { ptr @__tracepoint_svc_xprt_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_free = internal global ptr @event_svc_xprt_free, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_accept = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.212, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.236, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_xprt_accept = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_accept, ptr @perf_trace_svc_xprt_accept, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_accept, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_accept, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_accept, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_accept = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_accept, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_xprt_accept = internal global [91 x i8] c"\22addr=%s protocol=%s service=%s\22, __get_str(addr), __get_str(protocol), __get_str(service)\00", align 1
@event_svc_xprt_accept = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_accept, %union.anon.169 { ptr @__tracepoint_svc_xprt_accept }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_accept }, ptr @print_fmt_svc_xprt_accept, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_accept = internal global ptr @event_svc_xprt_accept, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_dequeue = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.269, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_xprt_dequeue = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_dequeue, ptr @perf_trace_svc_xprt_dequeue, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_dequeue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_dequeue, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_dequeue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_dequeue = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_dequeue, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_xprt_dequeue = internal global [506 x i8] c"\22addr=%s flags=%s wakeup-us=%lu\22, __get_str(addr), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22}), REC->wakeup\00", align 1
@event_svc_xprt_dequeue = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_dequeue, %union.anon.169 { ptr @__tracepoint_svc_xprt_dequeue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_dequeue }, ptr @print_fmt_svc_xprt_dequeue, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_xprt_dequeue = internal global ptr @event_svc_xprt_dequeue, section "_ftrace_events", align 4
@trace_event_fields_svc_wake_up = internal global [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.251, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_wake_up = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_wake_up, ptr @perf_trace_svc_wake_up, ptr @trace_event_reg, ptr @trace_event_fields_svc_wake_up, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_wake_up, i64 24), ptr getelementptr (i8, ptr @event_class_svc_wake_up, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_wake_up = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_wake_up, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_wake_up = internal global [19 x i8] c"\22pid=%d\22, REC->pid\00", align 1
@event_svc_wake_up = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_wake_up, %union.anon.169 { ptr @__tracepoint_svc_wake_up }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_wake_up }, ptr @print_fmt_svc_wake_up, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_wake_up = internal global ptr @event_svc_wake_up, section "_ftrace_events", align 4
@trace_event_fields_svc_alloc_arg_err = internal global [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.272, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_alloc_arg_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_alloc_arg_err, ptr @perf_trace_svc_alloc_arg_err, ptr @trace_event_reg, ptr @trace_event_fields_svc_alloc_arg_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_alloc_arg_err, i64 24), ptr getelementptr (i8, ptr @event_class_svc_alloc_arg_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_alloc_arg_err = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_alloc_arg_err, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_alloc_arg_err = internal global [23 x i8] c"\22pages=%u\22, REC->pages\00", align 1
@event_svc_alloc_arg_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_alloc_arg_err, %union.anon.169 { ptr @__tracepoint_svc_alloc_arg_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_alloc_arg_err }, ptr @print_fmt_svc_alloc_arg_err, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_alloc_arg_err = internal global ptr @event_svc_alloc_arg_err, section "_ftrace_events", align 4
@trace_event_fields_svc_stats_latency = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.141, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_stats_latency = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_stats_latency, ptr @perf_trace_svc_stats_latency, ptr @trace_event_reg, ptr @trace_event_fields_svc_stats_latency, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_stats_latency, i64 24), ptr getelementptr (i8, ptr @event_class_svc_stats_latency, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_stats_latency = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_stats_latency, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_stats_latency = internal global [107 x i8] c"\22addr=%s xid=0x%08x proc=%s execute-us=%lu\22, __get_str(addr), REC->xid, __get_str(procedure), REC->execute\00", align 1
@event_svc_stats_latency = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_stats_latency, %union.anon.169 { ptr @__tracepoint_svc_stats_latency }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_stats_latency }, ptr @print_fmt_svc_stats_latency, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_stats_latency = internal global ptr @event_svc_stats_latency, section "_ftrace_events", align 4
@trace_event_fields_svc_deferred_event = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.167 { %struct.anon.168 { ptr @.str.275, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_deferred_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_deferred_event, ptr @perf_trace_svc_deferred_event, ptr @trace_event_reg, ptr @trace_event_fields_svc_deferred_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_deferred_event, i64 24), ptr getelementptr (i8, ptr @event_class_svc_deferred_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_deferred_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_deferred_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_deferred_event = internal global [63 x i8] c"\22addr=%s dr=%p xid=0x%08x\22, __get_str(addr), REC->dr, REC->xid\00", align 1
@event_svc_defer_drop = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_deferred_event, %union.anon.169 { ptr @__tracepoint_svc_defer_drop }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_deferred_event }, ptr @print_fmt_svc_deferred_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_defer_drop = internal global ptr @event_svc_defer_drop, section "_ftrace_events", align 4
@event_svc_defer_queue = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_deferred_event, %union.anon.169 { ptr @__tracepoint_svc_defer_queue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_deferred_event }, ptr @print_fmt_svc_deferred_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_defer_queue = internal global ptr @event_svc_defer_queue, section "_ftrace_events", align 4
@event_svc_defer_recv = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_deferred_event, %union.anon.169 { ptr @__tracepoint_svc_defer_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_deferred_event }, ptr @print_fmt_svc_deferred_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_defer_recv = internal global ptr @event_svc_defer_recv, section "_ftrace_events", align 4
@trace_event_fields_svcsock_new_socket = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.277, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.278, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.167 { %struct.anon.168 { ptr @.str.279, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svcsock_new_socket = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_new_socket, ptr @perf_trace_svcsock_new_socket, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_new_socket, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_new_socket, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_new_socket, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_new_socket = internal global %struct.trace_event_functions { ptr @trace_raw_output_svcsock_new_socket, ptr null, ptr null, ptr null }, align 4
@print_fmt_svcsock_new_socket = internal global [390 x i8] c"\22type=%s family=%s%s\22, __print_symbolic(REC->type, { SOCK_STREAM, \22STREAM\22 }, { SOCK_DGRAM, \22DGRAM\22 }, { SOCK_RAW, \22RAW\22 }, { SOCK_RDM, \22RDM\22 }, { SOCK_SEQPACKET, \22SEQPACKET\22 }, { SOCK_DCCP, \22DCCP\22 }, { SOCK_PACKET, \22PACKET\22 }), __print_symbolic(REC->family, { 0, \22AF_UNSPEC\22 }, { 1, \22AF_UNIX\22 }, { 1, \22AF_LOCAL\22 }, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->listener ? \22 (listener)\22 : \22\22\00", align 1
@event_svcsock_new_socket = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_new_socket, %union.anon.169 { ptr @__tracepoint_svcsock_new_socket }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_new_socket }, ptr @print_fmt_svcsock_new_socket, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_new_socket = internal global ptr @event_svcsock_new_socket, section "_ftrace_events", align 4
@trace_event_fields_svcsock_marker = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.290, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.167 { %struct.anon.168 { ptr @.str.291, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svcsock_marker = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_marker, ptr @perf_trace_svcsock_marker, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_marker, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_marker, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_marker, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_marker = internal global %struct.trace_event_functions { ptr @trace_raw_output_svcsock_marker, ptr null, ptr null, ptr null }, align 4
@print_fmt_svcsock_marker = internal global [80 x i8] c"\22addr=%s length=%u%s\22, __get_str(addr), REC->length, REC->last ? \22 (last)\22 : \22\22\00", align 1
@event_svcsock_marker = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_marker, %union.anon.169 { ptr @__tracepoint_svcsock_marker }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_marker }, ptr @print_fmt_svcsock_marker, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_marker = internal global ptr @event_svcsock_marker, section "_ftrace_events", align 4
@trace_event_fields_svcsock_class = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.207, %union.anon.167 { %struct.anon.168 { ptr @.str.294, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svcsock_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_class, ptr @perf_trace_svcsock_class, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_class, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_svcsock_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_svcsock_class = internal global [503 x i8] c"\22addr=%s result=%zd flags=%s\22, __get_str(addr), REC->result, __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", align 1
@event_svcsock_udp_send = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_udp_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_udp_send = internal global ptr @event_svcsock_udp_send, section "_ftrace_events", align 4
@event_svcsock_udp_recv = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_udp_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_udp_recv = internal global ptr @event_svcsock_udp_recv, section "_ftrace_events", align 4
@event_svcsock_udp_recv_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_udp_recv_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_udp_recv_err = internal global ptr @event_svcsock_udp_recv_err, section "_ftrace_events", align 4
@event_svcsock_tcp_send = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_tcp_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_tcp_send = internal global ptr @event_svcsock_tcp_send, section "_ftrace_events", align 4
@event_svcsock_tcp_recv = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_tcp_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_tcp_recv = internal global ptr @event_svcsock_tcp_recv, section "_ftrace_events", align 4
@event_svcsock_tcp_recv_eagain = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_tcp_recv_eagain }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_tcp_recv_eagain = internal global ptr @event_svcsock_tcp_recv_eagain, section "_ftrace_events", align 4
@event_svcsock_tcp_recv_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_tcp_recv_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_tcp_recv_err = internal global ptr @event_svcsock_tcp_recv_err, section "_ftrace_events", align 4
@event_svcsock_data_ready = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_data_ready }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_data_ready = internal global ptr @event_svcsock_data_ready, section "_ftrace_events", align 4
@event_svcsock_write_space = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.169 { ptr @__tracepoint_svcsock_write_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_write_space = internal global ptr @event_svcsock_write_space, section "_ftrace_events", align 4
@trace_event_fields_svcsock_tcp_recv_short = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.296, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.297, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svcsock_tcp_recv_short = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_tcp_recv_short, ptr @perf_trace_svcsock_tcp_recv_short, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_tcp_recv_short, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_tcp_recv_short, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_tcp_recv_short, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_tcp_recv_short = internal global %struct.trace_event_functions { ptr @trace_raw_output_svcsock_tcp_recv_short, ptr null, ptr null, ptr null }, align 4
@print_fmt_svcsock_tcp_recv_short = internal global [533 x i8] c"\22addr=%s flags=%s expected=%u received=%u\22, __get_str(addr), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22}), REC->expected, REC->received\00", align 1
@event_svcsock_tcp_recv_short = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_tcp_recv_short, %union.anon.169 { ptr @__tracepoint_svcsock_tcp_recv_short }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_tcp_recv_short }, ptr @print_fmt_svcsock_tcp_recv_short, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_tcp_recv_short = internal global ptr @event_svcsock_tcp_recv_short, section "_ftrace_events", align 4
@trace_event_fields_svcsock_tcp_state = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.153, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svcsock_tcp_state = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_tcp_state, ptr @perf_trace_svcsock_tcp_state, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_tcp_state, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_tcp_state, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_tcp_state, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_tcp_state = internal global %struct.trace_event_functions { ptr @trace_raw_output_svcsock_tcp_state, ptr null, ptr null, ptr null }, align 4
@print_fmt_svcsock_tcp_state = internal global [1033 x i8] c"\22addr=%s state=%s sk_state=%s flags=%s\22, __get_str(addr), __print_symbolic(REC->socket_state, {SS_FREE, \22FREE\22}, {SS_UNCONNECTED, \22UNCONNECTED\22}, {SS_CONNECTING, \22CONNECTING\22}, {SS_CONNECTED, \22CONNECTED\22}, {SS_DISCONNECTING, \22DISCONNECTING\22}), __print_symbolic(REC->sock_state, {TCP_ESTABLISHED, \22ESTABLISHED\22}, {TCP_SYN_SENT, \22SYN_SENT\22}, {TCP_SYN_RECV, \22SYN_RECV\22}, {TCP_FIN_WAIT1, \22FIN_WAIT1\22}, {TCP_FIN_WAIT2, \22FIN_WAIT2\22}, {TCP_TIME_WAIT, \22TIME_WAIT\22}, {TCP_CLOSE, \22CLOSE\22}, {TCP_CLOSE_WAIT, \22CLOSE_WAIT\22}, {TCP_LAST_ACK, \22LAST_ACK\22}, {TCP_LISTEN, \22LISTEN\22}, {TCP_CLOSING, \22CLOSING\22}), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", align 1
@event_svcsock_tcp_state = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_tcp_state, %union.anon.169 { ptr @__tracepoint_svcsock_tcp_state }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_tcp_state }, ptr @print_fmt_svcsock_tcp_state, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_tcp_state = internal global ptr @event_svcsock_tcp_state, section "_ftrace_events", align 4
@trace_event_fields_svcsock_accept_class = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.248, %union.anon.167 { %struct.anon.168 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.236, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.167 { %struct.anon.168 { ptr @.str.301, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svcsock_accept_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_accept_class, ptr @perf_trace_svcsock_accept_class, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_accept_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_accept_class, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_accept_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_accept_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_svcsock_accept_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_svcsock_accept_class = internal global [71 x i8] c"\22addr=listener service=%s status=%ld\22, __get_str(service), REC->status\00", align 1
@event_svcsock_accept_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_accept_class, %union.anon.169 { ptr @__tracepoint_svcsock_accept_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_accept_class }, ptr @print_fmt_svcsock_accept_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_accept_err = internal global ptr @event_svcsock_accept_err, section "_ftrace_events", align 4
@event_svcsock_getpeername_err = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_accept_class, %union.anon.169 { ptr @__tracepoint_svcsock_getpeername_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_accept_class }, ptr @print_fmt_svcsock_accept_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svcsock_getpeername_err = internal global ptr @event_svcsock_getpeername_err, section "_ftrace_events", align 4
@trace_event_fields_cache_event = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.303, %union.anon.167 { %struct.anon.168 { ptr @.str.304, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.305, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_cache_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_cache_event, ptr @perf_trace_cache_event, ptr @trace_event_reg, ptr @trace_event_fields_cache_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_cache_event, i64 24), ptr getelementptr (i8, ptr @event_class_cache_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_cache_event = internal global %struct.trace_event_functions { ptr @trace_raw_output_cache_event, ptr null, ptr null, ptr null }, align 4
@print_fmt_cache_event = internal global [45 x i8] c"\22cache=%s entry=%p\22, __get_str(name), REC->h\00", align 1
@event_cache_entry_expired = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.169 { ptr @__tracepoint_cache_entry_expired }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_cache_entry_expired = internal global ptr @event_cache_entry_expired, section "_ftrace_events", align 4
@event_cache_entry_upcall = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.169 { ptr @__tracepoint_cache_entry_upcall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_cache_entry_upcall = internal global ptr @event_cache_entry_upcall, section "_ftrace_events", align 4
@event_cache_entry_update = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.169 { ptr @__tracepoint_cache_entry_update }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_cache_entry_update = internal global ptr @event_cache_entry_update, section "_ftrace_events", align 4
@event_cache_entry_make_negative = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.169 { ptr @__tracepoint_cache_entry_make_negative }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_cache_entry_make_negative = internal global ptr @event_cache_entry_make_negative, section "_ftrace_events", align 4
@event_cache_entry_no_listener = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.169 { ptr @__tracepoint_cache_entry_no_listener }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_cache_entry_no_listener = internal global ptr @event_cache_entry_no_listener, section "_ftrace_events", align 4
@trace_event_fields_register_class = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.167 { %struct.anon.168 { ptr @.str.278, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.167 { %struct.anon.168 { ptr @.str.212, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.167 { %struct.anon.168 { ptr @.str.75, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_register_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_register_class, ptr @perf_trace_register_class, ptr @trace_event_reg, ptr @trace_event_fields_register_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_register_class, i64 24), ptr getelementptr (i8, ptr @event_class_register_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_register_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_register_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_register_class = internal global [281 x i8] c"\22program=%sv%u proto=%s port=%u family=%s error=%d\22, __get_str(program), REC->version, REC->protocol == IPPROTO_UDP ? \22udp\22 : \22tcp\22, REC->port, __print_symbolic(REC->family, { 0, \22AF_UNSPEC\22 }, { 1, \22AF_UNIX\22 }, { 1, \22AF_LOCAL\22 }, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->error\00", align 1
@event_svc_register = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_register_class, %union.anon.169 { ptr @__tracepoint_svc_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_register_class }, ptr @print_fmt_register_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_register = internal global ptr @event_svc_register, section "_ftrace_events", align 4
@event_svc_noregister = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_register_class, %union.anon.169 { ptr @__tracepoint_svc_noregister }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_register_class }, ptr @print_fmt_register_class, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_noregister = internal global ptr @event_svc_noregister, section "_ftrace_events", align 4
@trace_event_fields_svc_unregister = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.167 { %struct.anon.168 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.167 { %struct.anon.168 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.167 { %struct.anon.168 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_svc_unregister = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_unregister, ptr @perf_trace_svc_unregister, ptr @trace_event_reg, ptr @trace_event_fields_svc_unregister, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_unregister, i64 24), ptr getelementptr (i8, ptr @event_class_svc_unregister, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_unregister = internal global %struct.trace_event_functions { ptr @trace_raw_output_svc_unregister, ptr null, ptr null, ptr null }, align 4
@print_fmt_svc_unregister = internal global [71 x i8] c"\22program=%sv%u error=%d\22, __get_str(program), REC->version, REC->error\00", align 1
@event_svc_unregister = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_unregister, %union.anon.169 { ptr @__tracepoint_svc_unregister }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_unregister }, ptr @print_fmt_svc_unregister, ptr null, %union.anon.170 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_svc_unregister = internal global ptr @event_svc_unregister, section "_ftrace_events", align 4
@xprtiod_workqueue = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_xprtiod_workqueue = external dso_local constant [0 x i8], align 1
@__kstrtabns_xprtiod_workqueue = external dso_local constant [0 x i8], align 1
@__ksymtab_xprtiod_workqueue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @xprtiod_workqueue to i32), ptr @__kstrtab_xprtiod_workqueue, ptr @__kstrtabns_xprtiod_workqueue }, section "___ksymtab_gpl+xprtiod_workqueue", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 64
@__kstrtab_rpc_task_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_task_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_task_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_task_timeout to i32), ptr @__kstrtab_rpc_task_timeout, ptr @__kstrtabns_rpc_task_timeout }, section "___ksymtab_gpl+rpc_task_timeout", align 4
@__kstrtab_rpc_init_priority_wait_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_init_priority_wait_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_init_priority_wait_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_init_priority_wait_queue to i32), ptr @__kstrtab_rpc_init_priority_wait_queue, ptr @__kstrtabns_rpc_init_priority_wait_queue }, section "___ksymtab_gpl+rpc_init_priority_wait_queue", align 4
@__kstrtab_rpc_init_wait_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_init_wait_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_init_wait_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_init_wait_queue to i32), ptr @__kstrtab_rpc_init_wait_queue, ptr @__kstrtabns_rpc_init_wait_queue }, section "___ksymtab_gpl+rpc_init_wait_queue", align 4
@__kstrtab_rpc_destroy_wait_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_destroy_wait_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_destroy_wait_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_destroy_wait_queue to i32), ptr @__kstrtab_rpc_destroy_wait_queue, ptr @__kstrtabns_rpc_destroy_wait_queue }, section "___ksymtab_gpl+rpc_destroy_wait_queue", align 4
@__kstrtab___rpc_wait_for_completion_task = external dso_local constant [0 x i8], align 1
@__kstrtabns___rpc_wait_for_completion_task = external dso_local constant [0 x i8], align 1
@__ksymtab___rpc_wait_for_completion_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__rpc_wait_for_completion_task to i32), ptr @__kstrtab___rpc_wait_for_completion_task, ptr @__kstrtabns___rpc_wait_for_completion_task }, section "___ksymtab_gpl+__rpc_wait_for_completion_task", align 4
@__kstrtab_rpc_sleep_on_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on_timeout to i32), ptr @__kstrtab_rpc_sleep_on_timeout, ptr @__kstrtabns_rpc_sleep_on_timeout }, section "___ksymtab_gpl+rpc_sleep_on_timeout", align 4
@rpc_sleep_on.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.54 = private unnamed_addr constant [19 x i8] c"net/sunrpc/sched.c\00", align 1
@__kstrtab_rpc_sleep_on = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on to i32), ptr @__kstrtab_rpc_sleep_on, ptr @__kstrtabns_rpc_sleep_on }, section "___ksymtab_gpl+rpc_sleep_on", align 4
@__kstrtab_rpc_sleep_on_priority_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on_priority_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on_priority_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on_priority_timeout to i32), ptr @__kstrtab_rpc_sleep_on_priority_timeout, ptr @__kstrtabns_rpc_sleep_on_priority_timeout }, section "___ksymtab_gpl+rpc_sleep_on_priority_timeout", align 4
@rpc_sleep_on_priority.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_rpc_sleep_on_priority = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on_priority = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on_priority = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on_priority to i32), ptr @__kstrtab_rpc_sleep_on_priority, ptr @__kstrtabns_rpc_sleep_on_priority }, section "___ksymtab_gpl+rpc_sleep_on_priority", align 4
@__kstrtab_rpc_wake_up_queued_task = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_queued_task = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_queued_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_queued_task to i32), ptr @__kstrtab_rpc_wake_up_queued_task, ptr @__kstrtabns_rpc_wake_up_queued_task }, section "___ksymtab_gpl+rpc_wake_up_queued_task", align 4
@rpciod_workqueue = dso_local local_unnamed_addr global ptr null, section ".data..read_mostly", align 4
@__kstrtab_rpc_wake_up_first = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_first = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_first = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_first to i32), ptr @__kstrtab_rpc_wake_up_first, ptr @__kstrtabns_rpc_wake_up_first }, section "___ksymtab_gpl+rpc_wake_up_first", align 4
@__kstrtab_rpc_wake_up_next = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_next = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_next = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_next to i32), ptr @__kstrtab_rpc_wake_up_next, ptr @__kstrtabns_rpc_wake_up_next }, section "___ksymtab_gpl+rpc_wake_up_next", align 4
@__kstrtab_rpc_wake_up = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up to i32), ptr @__kstrtab_rpc_wake_up, ptr @__kstrtabns_rpc_wake_up }, section "___ksymtab_gpl+rpc_wake_up", align 4
@__kstrtab_rpc_wake_up_status = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_status = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_status = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_status to i32), ptr @__kstrtab_rpc_wake_up_status, ptr @__kstrtabns_rpc_wake_up_status }, section "___ksymtab_gpl+rpc_wake_up_status", align 4
@delay_queue = internal global %struct.rpc_wait_queue zeroinitializer, align 4
@__kstrtab_rpc_delay = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_delay = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_delay = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_delay to i32), ptr @__kstrtab_rpc_delay, ptr @__kstrtabns_rpc_delay }, section "___ksymtab_gpl+rpc_delay", align 4
@__kstrtab_rpc_exit = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_exit = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_exit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_exit to i32), ptr @__kstrtab_rpc_exit, ptr @__kstrtabns_rpc_exit }, section "___ksymtab_gpl+rpc_exit", align 4
@rpc_buffer_mempool = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@__kstrtab_rpc_malloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_malloc = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_malloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_malloc to i32), ptr @__kstrtab_rpc_malloc, ptr @__kstrtabns_rpc_malloc }, section "___ksymtab_gpl+rpc_malloc", align 4
@__kstrtab_rpc_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_free = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_free to i32), ptr @__kstrtab_rpc_free, ptr @__kstrtabns_rpc_free }, section "___ksymtab_gpl+rpc_free", align 4
@__kstrtab_rpc_put_task = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_put_task = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_put_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_put_task to i32), ptr @__kstrtab_rpc_put_task, ptr @__kstrtabns_rpc_put_task }, section "___ksymtab_gpl+rpc_put_task", align 4
@__kstrtab_rpc_put_task_async = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_put_task_async = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_put_task_async = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_put_task_async to i32), ptr @__kstrtab_rpc_put_task_async, ptr @__kstrtabns_rpc_put_task_async }, section "___ksymtab_gpl+rpc_put_task_async", align 4
@rpc_task_mempool = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@rpc_task_slabp = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@rpc_buffer_slabp = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@.str.55 = private unnamed_addr constant [7 x i8] c"delayq\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"rpc_tasks\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"rpc_buffers\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"task_id\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"client_id\00", align 1
@.str.61 = private unnamed_addr constant [13 x i8] c"const void *\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"head_base\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"size_t\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"head_len\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"tail_base\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"tail_len\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"page_base\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c"page_len\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"msg_len\00", align 1
@.str.70 = private unnamed_addr constant [63 x i8] c"task:%08x@%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\0A\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c"client=%08x\0A\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.73 = private unnamed_addr constant [18 x i8] c"__data_loc char[]\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@.str.78 = private unnamed_addr constant [47 x i8] c"client=%08x peer=[%s]:%s program=%s server=%s\0A\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.81 = private unnamed_addr constant [31 x i8] c"program=%s server=%s error=%d\0A\00", align 1
@.str.82 = private unnamed_addr constant [22 x i8] c"client=%08x error=%d\0A\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.84 = private unnamed_addr constant [26 x i8] c"task:%08x@%08x status=%d\0A\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"progname\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"procname\00", align 1
@.str.90 = private unnamed_addr constant [34 x i8] c"task:%08x@%08x %sv%d %s (%ssync)\0A\00", align 1
@.str.91 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.92 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c"runstate\00", align 1
@.str.96 = private unnamed_addr constant [15 x i8] c"unsigned short\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.98 = private unnamed_addr constant [58 x i8] c"task:%08x@%08x flags=%s runstate=%s status=%d action=%ps\0A\00", align 1
@trace_raw_output_rpc_task_running.__flags = internal constant [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.99 }, %struct.trace_print_flags { i32 2, ptr @.str.100 }, %struct.trace_print_flags { i32 4, ptr @.str.101 }, %struct.trace_print_flags { i32 16, ptr @.str.102 }, %struct.trace_print_flags { i32 32, ptr @.str.103 }, %struct.trace_print_flags { i32 64, ptr @.str.104 }, %struct.trace_print_flags { i32 128, ptr @.str.105 }, %struct.trace_print_flags { i32 256, ptr @.str.106 }, %struct.trace_print_flags { i32 512, ptr @.str.107 }, %struct.trace_print_flags { i32 1024, ptr @.str.108 }, %struct.trace_print_flags { i32 2048, ptr @.str.109 }, %struct.trace_print_flags { i32 4096, ptr @.str.110 }, %struct.trace_print_flags { i32 8192, ptr @.str.111 }, %struct.trace_print_flags { i32 16384, ptr @.str.112 }, %struct.trace_print_flags { i32 32768, ptr @.str.113 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.99 = private unnamed_addr constant [6 x i8] c"ASYNC\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"SWAPPER\00", align 1
@.str.101 = private unnamed_addr constant [9 x i8] c"MOVEABLE\00", align 1
@.str.102 = private unnamed_addr constant [10 x i8] c"NULLCREDS\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"MAJORSEEN\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"ROOTCREDS\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"DYNAMIC\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"NO_ROUND_ROBIN\00", align 1
@.str.107 = private unnamed_addr constant [5 x i8] c"SOFT\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"SOFTCONN\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"SENT\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"TIMEOUT\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"NOCONNECT\00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"NORTO\00", align 1
@.str.113 = private unnamed_addr constant [11 x i8] c"CRED_NOREF\00", align 1
@.str.114 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@trace_raw_output_rpc_task_running.__flags.115 = internal constant [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.116 }, %struct.trace_print_flags { i32 2, ptr @.str.117 }, %struct.trace_print_flags { i32 4, ptr @.str.118 }, %struct.trace_print_flags { i32 8, ptr @.str.119 }, %struct.trace_print_flags { i32 16, ptr @.str.120 }, %struct.trace_print_flags { i32 32, ptr @.str.121 }, %struct.trace_print_flags { i32 64, ptr @.str.122 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.116 = private unnamed_addr constant [8 x i8] c"RUNNING\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"QUEUED\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"ACTIVE\00", align 1
@.str.119 = private unnamed_addr constant [10 x i8] c"NEED_XMIT\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"NEED_RECV\00", align 1
@.str.121 = private unnamed_addr constant [13 x i8] c"MSG_PIN_WAIT\00", align 1
@.str.122 = private unnamed_addr constant [10 x i8] c"SIGNALLED\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"q_name\00", align 1
@.str.126 = private unnamed_addr constant [68 x i8] c"task:%08x@%08x flags=%s runstate=%s status=%d timeout=%lu queue=%s\0A\00", align 1
@trace_raw_output_rpc_task_queued.__flags = internal constant [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.99 }, %struct.trace_print_flags { i32 2, ptr @.str.100 }, %struct.trace_print_flags { i32 4, ptr @.str.101 }, %struct.trace_print_flags { i32 16, ptr @.str.102 }, %struct.trace_print_flags { i32 32, ptr @.str.103 }, %struct.trace_print_flags { i32 64, ptr @.str.104 }, %struct.trace_print_flags { i32 128, ptr @.str.105 }, %struct.trace_print_flags { i32 256, ptr @.str.106 }, %struct.trace_print_flags { i32 512, ptr @.str.107 }, %struct.trace_print_flags { i32 1024, ptr @.str.108 }, %struct.trace_print_flags { i32 2048, ptr @.str.109 }, %struct.trace_print_flags { i32 4096, ptr @.str.110 }, %struct.trace_print_flags { i32 8192, ptr @.str.111 }, %struct.trace_print_flags { i32 16384, ptr @.str.112 }, %struct.trace_print_flags { i32 32768, ptr @.str.113 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_rpc_task_queued.__flags.127 = internal constant [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.116 }, %struct.trace_print_flags { i32 2, ptr @.str.117 }, %struct.trace_print_flags { i32 4, ptr @.str.118 }, %struct.trace_print_flags { i32 8, ptr @.str.119 }, %struct.trace_print_flags { i32 16, ptr @.str.120 }, %struct.trace_print_flags { i32 32, ptr @.str.121 }, %struct.trace_print_flags { i32 64, ptr @.str.122 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.128 = private unnamed_addr constant [16 x i8] c"task:%08x@%08x\0A\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"xid\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"servername\00", align 1
@.str.132 = private unnamed_addr constant [46 x i8] c"task:%08x@%08x server=%s xid=0x%08x %sv%d %s\0A\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"callsize\00", align 1
@.str.134 = private unnamed_addr constant [9 x i8] c"recvsize\00", align 1
@.str.135 = private unnamed_addr constant [52 x i8] c"task:%08x@%08x callsize=%zu recvsize=%zu status=%d\0A\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"tk_status\00", align 1
@.str.137 = private unnamed_addr constant [11 x i8] c"rpc_status\00", align 1
@.str.138 = private unnamed_addr constant [43 x i8] c"task:%08x@%08x tk_status=%d rpc_status=%d\0A\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"backlog\00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c"rtt\00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"execute\00", align 1
@.str.142 = private unnamed_addr constant [68 x i8] c"task:%08x@%08x xid=0x%08x %sv%d %s backlog=%lu rtt=%lu execute=%lu\0A\00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"requested\00", align 1
@.str.144 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.145 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.146 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"procedure\00", align 1
@.str.148 = private unnamed_addr constant [80 x i8] c"task:%08x@%08x %sv%d %s requested=%zu p=%p end=%p xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\0A\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.150 = private unnamed_addr constant [7 x i8] c"copied\00", align 1
@.str.151 = private unnamed_addr constant [75 x i8] c"task:%08x@%08x %sv%d %s offset=%zu copied=%u xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\0A\00", align 1
@.str.152 = private unnamed_addr constant [13 x i8] c"socket_state\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"sock_state\00", align 1
@.str.154 = private unnamed_addr constant [19 x i8] c"unsigned long long\00", align 1
@.str.155 = private unnamed_addr constant [4 x i8] c"ino\00", align 1
@.str.156 = private unnamed_addr constant [34 x i8] c"__u8[sizeof(struct sockaddr_in6)]\00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"saddr\00", align 1
@.str.158 = private unnamed_addr constant [6 x i8] c"daddr\00", align 1
@.str.159 = private unnamed_addr constant [76 x i8] c"socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\0A\00", align 1
@trace_raw_output_xs_socket_event.symbols = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.160 }, %struct.trace_print_flags { i32 1, ptr @.str.161 }, %struct.trace_print_flags { i32 2, ptr @.str.162 }, %struct.trace_print_flags { i32 3, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.164 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.160 = private unnamed_addr constant [5 x i8] c"FREE\00", align 1
@.str.161 = private unnamed_addr constant [12 x i8] c"UNCONNECTED\00", align 1
@.str.162 = private unnamed_addr constant [11 x i8] c"CONNECTING\00", align 1
@.str.163 = private unnamed_addr constant [10 x i8] c"CONNECTED\00", align 1
@.str.164 = private unnamed_addr constant [14 x i8] c"DISCONNECTING\00", align 1
@trace_raw_output_xs_socket_event.symbols.165 = internal constant [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.166 }, %struct.trace_print_flags { i32 2, ptr @.str.167 }, %struct.trace_print_flags { i32 3, ptr @.str.168 }, %struct.trace_print_flags { i32 4, ptr @.str.169 }, %struct.trace_print_flags { i32 5, ptr @.str.170 }, %struct.trace_print_flags { i32 6, ptr @.str.171 }, %struct.trace_print_flags { i32 7, ptr @.str.172 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 9, ptr @.str.174 }, %struct.trace_print_flags { i32 10, ptr @.str.175 }, %struct.trace_print_flags { i32 11, ptr @.str.176 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.166 = private unnamed_addr constant [12 x i8] c"ESTABLISHED\00", align 1
@.str.167 = private unnamed_addr constant [9 x i8] c"SYN_SENT\00", align 1
@.str.168 = private unnamed_addr constant [9 x i8] c"SYN_RECV\00", align 1
@.str.169 = private unnamed_addr constant [10 x i8] c"FIN_WAIT1\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"FIN_WAIT2\00", align 1
@.str.171 = private unnamed_addr constant [10 x i8] c"TIME_WAIT\00", align 1
@.str.172 = private unnamed_addr constant [6 x i8] c"CLOSE\00", align 1
@.str.173 = private unnamed_addr constant [11 x i8] c"CLOSE_WAIT\00", align 1
@.str.174 = private unnamed_addr constant [9 x i8] c"LAST_ACK\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c"LISTEN\00", align 1
@.str.176 = private unnamed_addr constant [8 x i8] c"CLOSING\00", align 1
@.str.177 = private unnamed_addr constant [85 x i8] c"error=%d socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\0A\00", align 1
@trace_raw_output_xs_socket_event_done.symbols = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.160 }, %struct.trace_print_flags { i32 1, ptr @.str.161 }, %struct.trace_print_flags { i32 2, ptr @.str.162 }, %struct.trace_print_flags { i32 3, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.164 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_xs_socket_event_done.symbols.178 = internal constant [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.166 }, %struct.trace_print_flags { i32 2, ptr @.str.167 }, %struct.trace_print_flags { i32 3, ptr @.str.168 }, %struct.trace_print_flags { i32 4, ptr @.str.169 }, %struct.trace_print_flags { i32 5, ptr @.str.170 }, %struct.trace_print_flags { i32 6, ptr @.str.171 }, %struct.trace_print_flags { i32 7, ptr @.str.172 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 9, ptr @.str.174 }, %struct.trace_print_flags { i32 10, ptr @.str.175 }, %struct.trace_print_flags { i32 11, ptr @.str.176 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.179 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.180 = private unnamed_addr constant [10 x i8] c"remaining\00", align 1
@.str.181 = private unnamed_addr constant [38 x i8] c"task:%08x@%08x total=%u remaining=%u\0A\00", align 1
@.str.182 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.183 = private unnamed_addr constant [23 x i8] c"peer=[%s]:%s state=%s\0A\00", align 1
@trace_raw_output_rpc_xprt_lifetime_class.__flags = internal constant [14 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.184 }, %struct.trace_print_flags { i32 2, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.162 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 16, ptr @.str.185 }, %struct.trace_print_flags { i32 32, ptr @.str.186 }, %struct.trace_print_flags { i32 64, ptr @.str.176 }, %struct.trace_print_flags { i32 128, ptr @.str.187 }, %struct.trace_print_flags { i32 256, ptr @.str.188 }, %struct.trace_print_flags { i32 512, ptr @.str.189 }, %struct.trace_print_flags { i32 1024, ptr @.str.190 }, %struct.trace_print_flags { i32 2048, ptr @.str.191 }, %struct.trace_print_flags { i32 4096, ptr @.str.192 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.184 = private unnamed_addr constant [7 x i8] c"LOCKED\00", align 1
@.str.185 = private unnamed_addr constant [6 x i8] c"BOUND\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"BINDING\00", align 1
@.str.187 = private unnamed_addr constant [8 x i8] c"OFFLINE\00", align 1
@.str.188 = private unnamed_addr constant [7 x i8] c"REMOVE\00", align 1
@.str.189 = private unnamed_addr constant [10 x i8] c"CONGESTED\00", align 1
@.str.190 = private unnamed_addr constant [10 x i8] c"CWND_WAIT\00", align 1
@.str.191 = private unnamed_addr constant [12 x i8] c"WRITE_SPACE\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"SND_IS_COOKIE\00", align 1
@.str.193 = private unnamed_addr constant [35 x i8] c"peer=[%s]:%s xid=0x%08x status=%d\0A\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"seqno\00", align 1
@.str.195 = private unnamed_addr constant [46 x i8] c"task:%08x@%08x xid=0x%08x seqno=%u status=%d\0A\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"ntrans\00", align 1
@.str.197 = private unnamed_addr constant [58 x i8] c"task:%08x@%08x xid=0x%08x %sv%d %s ntrans=%d timeout=%lu\0A\00", align 1
@.str.198 = private unnamed_addr constant [24 x i8] c"peer=[%s]:%s status=%d\0A\00", align 1
@.str.199 = private unnamed_addr constant [12 x i8] c"snd_task_id\00", align 1
@.str.200 = private unnamed_addr constant [30 x i8] c"task:%08x@%08x snd_task:%08x\0A\00", align 1
@.str.201 = private unnamed_addr constant [5 x i8] c"cong\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"cwnd\00", align 1
@.str.203 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@.str.204 = private unnamed_addr constant [50 x i8] c"task:%08x@%08x snd_task:%08x cong=%lu cwnd=%lu%s\0A\00", align 1
@.str.205 = private unnamed_addr constant [8 x i8] c" (wait)\00", align 1
@.str.206 = private unnamed_addr constant [27 x i8] c"task:%08x@%08x xid=0x%08x\0A\00", align 1
@.str.207 = private unnamed_addr constant [8 x i8] c"ssize_t\00", align 1
@.str.208 = private unnamed_addr constant [4 x i8] c"err\00", align 1
@.str.209 = private unnamed_addr constant [32 x i8] c"peer=[%s]:%s err=%zd total=%zu\0A\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"reclen\00", align 1
@.str.211 = private unnamed_addr constant [56 x i8] c"peer=[%s]:%s xid=0x%08x copied=%lu reclen=%u offset=%u\0A\00", align 1
@.str.212 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str.213 = private unnamed_addr constant [13 x i8] c"bind_version\00", align 1
@.str.214 = private unnamed_addr constant [76 x i8] c"task:%08x@%08x server=%s program=%u version=%u protocol=%d bind_version=%u\0A\00", align 1
@.str.215 = private unnamed_addr constant [34 x i8] c"task:%08x@%08x status=%d port=%u\0A\00", align 1
@.str.216 = private unnamed_addr constant [43 x i8] c"program=%u version=%u protocol=%d port=%u\0A\00", align 1
@.str.217 = private unnamed_addr constant [6 x i8] c"netid\00", align 1
@.str.218 = private unnamed_addr constant [40 x i8] c"program=%u version=%u addr=%s netid=%s\0A\00", align 1
@.str.219 = private unnamed_addr constant [32 x i8] c"program=%u version=%u netid=%s\0A\00", align 1
@.str.220 = private unnamed_addr constant [55 x i8] c"xid=0x%08x head=[%p,%zu] page=%u tail=[%p,%zu] len=%u\0A\00", align 1
@.str.221 = private unnamed_addr constant [59 x i8] c"xid=0x%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\0A\00", align 1
@.str.222 = private unnamed_addr constant [11 x i8] c"svc_status\00", align 1
@.str.223 = private unnamed_addr constant [10 x i8] c"auth_stat\00", align 1
@.str.224 = private unnamed_addr constant [37 x i8] c"xid=0x%08x auth_res=%s auth_stat=%s\0A\00", align 1
@trace_raw_output_svc_authenticate.symbols = internal constant [11 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.44 }, %struct.trace_print_flags { i32 2, ptr @.str.45 }, %struct.trace_print_flags { i32 3, ptr @.str.46 }, %struct.trace_print_flags { i32 4, ptr @.str.47 }, %struct.trace_print_flags { i32 5, ptr @.str.48 }, %struct.trace_print_flags { i32 6, ptr @.str.49 }, %struct.trace_print_flags { i32 7, ptr @.str.50 }, %struct.trace_print_flags { i32 8, ptr @.str.51 }, %struct.trace_print_flags { i32 9, ptr @.str.52 }, %struct.trace_print_flags { i32 10, ptr @.str.53 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_svc_authenticate.symbols.225 = internal constant [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.226 }, %struct.trace_print_flags { i32 1, ptr @.str.227 }, %struct.trace_print_flags { i32 2, ptr @.str.228 }, %struct.trace_print_flags { i32 3, ptr @.str.229 }, %struct.trace_print_flags { i32 4, ptr @.str.230 }, %struct.trace_print_flags { i32 5, ptr @.str.231 }, %struct.trace_print_flags { i32 13, ptr @.str.232 }, %struct.trace_print_flags { i32 14, ptr @.str.233 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.226 = private unnamed_addr constant [8 x i8] c"AUTH_OK\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"BADCRED\00", align 1
@.str.228 = private unnamed_addr constant [13 x i8] c"REJECTEDCRED\00", align 1
@.str.229 = private unnamed_addr constant [8 x i8] c"BADVERF\00", align 1
@.str.230 = private unnamed_addr constant [13 x i8] c"REJECTEDVERF\00", align 1
@.str.231 = private unnamed_addr constant [8 x i8] c"TOOWEAK\00", align 1
@.str.232 = private unnamed_addr constant [16 x i8] c"GSS_CREDPROBLEM\00", align 1
@.str.233 = private unnamed_addr constant [15 x i8] c"GSS_CTXPROBLEM\00", align 1
@.str.234 = private unnamed_addr constant [5 x i8] c"vers\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"proc\00", align 1
@.str.236 = private unnamed_addr constant [8 x i8] c"service\00", align 1
@.str.237 = private unnamed_addr constant [47 x i8] c"addr=%s xid=0x%08x service=%s vers=%u proc=%s\0A\00", align 1
@.str.238 = private unnamed_addr constant [29 x i8] c"addr=%s xid=0x%08x flags=%s\0A\00", align 1
@trace_raw_output_svc_rqst_event.__flags = internal constant [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.239 }, %struct.trace_print_flags { i32 2, ptr @.str.240 }, %struct.trace_print_flags { i32 4, ptr @.str.241 }, %struct.trace_print_flags { i32 8, ptr @.str.242 }, %struct.trace_print_flags { i32 16, ptr @.str.243 }, %struct.trace_print_flags { i32 32, ptr @.str.244 }, %struct.trace_print_flags { i32 64, ptr @.str.245 }, %struct.trace_print_flags { i32 128, ptr @.str.246 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.239 = private unnamed_addr constant [7 x i8] c"SECURE\00", align 1
@.str.240 = private unnamed_addr constant [6 x i8] c"LOCAL\00", align 1
@.str.241 = private unnamed_addr constant [12 x i8] c"USEDEFERRAL\00", align 1
@.str.242 = private unnamed_addr constant [7 x i8] c"DROPME\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"SPLICE_OK\00", align 1
@.str.244 = private unnamed_addr constant [7 x i8] c"VICTIM\00", align 1
@.str.245 = private unnamed_addr constant [5 x i8] c"BUSY\00", align 1
@.str.246 = private unnamed_addr constant [5 x i8] c"DATA\00", align 1
@.str.247 = private unnamed_addr constant [39 x i8] c"addr=%s xid=0x%08x status=%d flags=%s\0A\00", align 1
@trace_raw_output_svc_rqst_status.__flags = internal constant [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.239 }, %struct.trace_print_flags { i32 2, ptr @.str.240 }, %struct.trace_print_flags { i32 4, ptr @.str.241 }, %struct.trace_print_flags { i32 8, ptr @.str.242 }, %struct.trace_print_flags { i32 16, ptr @.str.243 }, %struct.trace_print_flags { i32 32, ptr @.str.244 }, %struct.trace_print_flags { i32 64, ptr @.str.245 }, %struct.trace_print_flags { i32 128, ptr @.str.246 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.248 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.249 = private unnamed_addr constant [43 x i8] c"unsigned char[sizeof(struct sockaddr_in6)]\00", align 1
@.str.250 = private unnamed_addr constant [46 x i8] c"addr=%pISpc program=%s protocol=%s error=%ld\0A\00", align 1
@.str.251 = private unnamed_addr constant [4 x i8] c"pid\00", align 1
@.str.252 = private unnamed_addr constant [25 x i8] c"addr=%s pid=%d flags=%s\0A\00", align 1
@trace_raw_output_svc_xprt_enqueue.__flags = internal constant [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.253 = private unnamed_addr constant [9 x i8] c"XPT_BUSY\00", align 1
@.str.254 = private unnamed_addr constant [9 x i8] c"XPT_CONN\00", align 1
@.str.255 = private unnamed_addr constant [10 x i8] c"XPT_CLOSE\00", align 1
@.str.256 = private unnamed_addr constant [9 x i8] c"XPT_DATA\00", align 1
@.str.257 = private unnamed_addr constant [9 x i8] c"XPT_TEMP\00", align 1
@.str.258 = private unnamed_addr constant [9 x i8] c"XPT_DEAD\00", align 1
@.str.259 = private unnamed_addr constant [12 x i8] c"XPT_CHNGBUF\00", align 1
@.str.260 = private unnamed_addr constant [13 x i8] c"XPT_DEFERRED\00", align 1
@.str.261 = private unnamed_addr constant [8 x i8] c"XPT_OLD\00", align 1
@.str.262 = private unnamed_addr constant [13 x i8] c"XPT_LISTENER\00", align 1
@.str.263 = private unnamed_addr constant [15 x i8] c"XPT_CACHE_AUTH\00", align 1
@.str.264 = private unnamed_addr constant [10 x i8] c"XPT_LOCAL\00", align 1
@.str.265 = private unnamed_addr constant [14 x i8] c"XPT_KILL_TEMP\00", align 1
@.str.266 = private unnamed_addr constant [14 x i8] c"XPT_CONG_CTRL\00", align 1
@.str.267 = private unnamed_addr constant [18 x i8] c"addr=%s flags=%s\0A\00", align 1
@trace_raw_output_svc_xprt_event.__flags = internal constant [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.268 = private unnamed_addr constant [32 x i8] c"addr=%s protocol=%s service=%s\0A\00", align 1
@.str.269 = private unnamed_addr constant [7 x i8] c"wakeup\00", align 1
@.str.270 = private unnamed_addr constant [32 x i8] c"addr=%s flags=%s wakeup-us=%lu\0A\00", align 1
@trace_raw_output_svc_xprt_dequeue.__flags = internal constant [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.271 = private unnamed_addr constant [8 x i8] c"pid=%d\0A\00", align 1
@.str.272 = private unnamed_addr constant [6 x i8] c"pages\00", align 1
@.str.273 = private unnamed_addr constant [10 x i8] c"pages=%u\0A\00", align 1
@.str.274 = private unnamed_addr constant [43 x i8] c"addr=%s xid=0x%08x proc=%s execute-us=%lu\0A\00", align 1
@.str.275 = private unnamed_addr constant [3 x i8] c"dr\00", align 1
@.str.276 = private unnamed_addr constant [26 x i8] c"addr=%s dr=%p xid=0x%08x\0A\00", align 1
@.str.277 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.278 = private unnamed_addr constant [7 x i8] c"family\00", align 1
@.str.279 = private unnamed_addr constant [9 x i8] c"listener\00", align 1
@.str.280 = private unnamed_addr constant [21 x i8] c"type=%s family=%s%s\0A\00", align 1
@trace_raw_output_svcsock_new_socket.symbols = internal constant [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.281 }, %struct.trace_print_flags { i32 2, ptr @.str.282 }, %struct.trace_print_flags { i32 3, ptr @.str.283 }, %struct.trace_print_flags { i32 4, ptr @.str.284 }, %struct.trace_print_flags { i32 5, ptr @.str.285 }, %struct.trace_print_flags { i32 6, ptr @.str.286 }, %struct.trace_print_flags { i32 10, ptr @.str.287 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.281 = private unnamed_addr constant [7 x i8] c"STREAM\00", align 1
@.str.282 = private unnamed_addr constant [6 x i8] c"DGRAM\00", align 1
@.str.283 = private unnamed_addr constant [4 x i8] c"RAW\00", align 1
@.str.284 = private unnamed_addr constant [4 x i8] c"RDM\00", align 1
@.str.285 = private unnamed_addr constant [10 x i8] c"SEQPACKET\00", align 1
@.str.286 = private unnamed_addr constant [5 x i8] c"DCCP\00", align 1
@.str.287 = private unnamed_addr constant [7 x i8] c"PACKET\00", align 1
@trace_raw_output_svcsock_new_socket.symbols.288 = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.7 }, %struct.trace_print_flags { i32 1, ptr @.str.8 }, %struct.trace_print_flags { i32 1, ptr @.str.9 }, %struct.trace_print_flags { i32 2, ptr @.str.10 }, %struct.trace_print_flags { i32 10, ptr @.str.11 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.289 = private unnamed_addr constant [12 x i8] c" (listener)\00", align 1
@.str.290 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.291 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.292 = private unnamed_addr constant [21 x i8] c"addr=%s length=%u%s\0A\00", align 1
@.str.293 = private unnamed_addr constant [8 x i8] c" (last)\00", align 1
@.str.294 = private unnamed_addr constant [7 x i8] c"result\00", align 1
@.str.295 = private unnamed_addr constant [29 x i8] c"addr=%s result=%zd flags=%s\0A\00", align 1
@trace_raw_output_svcsock_class.__flags = internal constant [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.296 = private unnamed_addr constant [9 x i8] c"expected\00", align 1
@.str.297 = private unnamed_addr constant [9 x i8] c"received\00", align 1
@.str.298 = private unnamed_addr constant [42 x i8] c"addr=%s flags=%s expected=%u received=%u\0A\00", align 1
@trace_raw_output_svcsock_tcp_recv_short.__flags = internal constant [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.299 = private unnamed_addr constant [39 x i8] c"addr=%s state=%s sk_state=%s flags=%s\0A\00", align 1
@trace_raw_output_svcsock_tcp_state.symbols = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.160 }, %struct.trace_print_flags { i32 1, ptr @.str.161 }, %struct.trace_print_flags { i32 2, ptr @.str.162 }, %struct.trace_print_flags { i32 3, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.164 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_svcsock_tcp_state.symbols.300 = internal constant [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.166 }, %struct.trace_print_flags { i32 2, ptr @.str.167 }, %struct.trace_print_flags { i32 3, ptr @.str.168 }, %struct.trace_print_flags { i32 4, ptr @.str.169 }, %struct.trace_print_flags { i32 5, ptr @.str.170 }, %struct.trace_print_flags { i32 6, ptr @.str.171 }, %struct.trace_print_flags { i32 7, ptr @.str.172 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 9, ptr @.str.174 }, %struct.trace_print_flags { i32 10, ptr @.str.175 }, %struct.trace_print_flags { i32 11, ptr @.str.176 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_svcsock_tcp_state.__flags = internal constant [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.301 = private unnamed_addr constant [10 x i8] c"netns_ino\00", align 1
@.str.302 = private unnamed_addr constant [37 x i8] c"addr=listener service=%s status=%ld\0A\00", align 1
@.str.303 = private unnamed_addr constant [26 x i8] c"const struct cache_head *\00", align 1
@.str.304 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.305 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.306 = private unnamed_addr constant [19 x i8] c"cache=%s entry=%p\0A\00", align 1
@.str.307 = private unnamed_addr constant [51 x i8] c"program=%sv%u proto=%s port=%u family=%s error=%d\0A\00", align 1
@.str.308 = private unnamed_addr constant [4 x i8] c"udp\00", align 1
@.str.309 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@trace_raw_output_register_class.symbols = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.7 }, %struct.trace_print_flags { i32 1, ptr @.str.8 }, %struct.trace_print_flags { i32 1, ptr @.str.9 }, %struct.trace_print_flags { i32 2, ptr @.str.10 }, %struct.trace_print_flags { i32 10, ptr @.str.11 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.310 = private unnamed_addr constant [24 x i8] c"program=%sv%u error=%d\0A\00", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@rpc_sleep_check_activated.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rpc_set_tk_callback.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rpc_sleep_on_priority_timeout.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rpc_sleep_on_priority.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.312 = private unnamed_addr constant [43 x i8] c"\013RPC: Inactive task (%p) being woken up!\0A\00", align 1
@rpc_task_set_debuginfo.rpc_pid = internal global %struct.atomic_t zeroinitializer, align 4
@__rpc_execute.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rpc_release_task.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"rpciod\00", align 1
@.str.314 = private unnamed_addr constant [8 x i8] c"xprtiod\00", align 1
@llvm.compiler.used = appending global [695 x ptr] [ptr @TRACE_SYSTEM_AF_INET, ptr @TRACE_SYSTEM_AF_INET6, ptr @TRACE_SYSTEM_AF_LOCAL, ptr @TRACE_SYSTEM_AF_UNIX, ptr @TRACE_SYSTEM_AF_UNSPEC, ptr @TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, ptr @TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, ptr @TRACE_SYSTEM_RPC_AUTH_BADCRED, ptr @TRACE_SYSTEM_RPC_AUTH_BADVERF, ptr @TRACE_SYSTEM_RPC_AUTH_OK, ptr @TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, ptr @TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, ptr @TRACE_SYSTEM_RPC_AUTH_TOOWEAK, ptr @TRACE_SYSTEM_RQ_BUSY, ptr @TRACE_SYSTEM_RQ_DATA, ptr @TRACE_SYSTEM_RQ_DROPME, ptr @TRACE_SYSTEM_RQ_LOCAL, ptr @TRACE_SYSTEM_RQ_SECURE, ptr @TRACE_SYSTEM_RQ_SPLICE_OK, ptr @TRACE_SYSTEM_RQ_USEDEFERRAL, ptr @TRACE_SYSTEM_RQ_VICTIM, ptr @TRACE_SYSTEM_SOCK_DCCP, ptr @TRACE_SYSTEM_SOCK_DGRAM, ptr @TRACE_SYSTEM_SOCK_PACKET, ptr @TRACE_SYSTEM_SOCK_RAW, ptr @TRACE_SYSTEM_SOCK_RDM, ptr @TRACE_SYSTEM_SOCK_SEQPACKET, ptr @TRACE_SYSTEM_SOCK_STREAM, ptr @TRACE_SYSTEM_SS_CONNECTED, ptr @TRACE_SYSTEM_SS_CONNECTING, ptr @TRACE_SYSTEM_SS_DISCONNECTING, ptr @TRACE_SYSTEM_SS_FREE, ptr @TRACE_SYSTEM_SS_UNCONNECTED, ptr @TRACE_SYSTEM_SVC_CLOSE, ptr @TRACE_SYSTEM_SVC_COMPLETE, ptr @TRACE_SYSTEM_SVC_DENIED, ptr @TRACE_SYSTEM_SVC_DROP, ptr @TRACE_SYSTEM_SVC_GARBAGE, ptr @TRACE_SYSTEM_SVC_NEGATIVE, ptr @TRACE_SYSTEM_SVC_OK, ptr @TRACE_SYSTEM_SVC_PENDING, ptr @TRACE_SYSTEM_SVC_SYSERR, ptr @TRACE_SYSTEM_SVC_VALID, ptr @TRACE_SYSTEM_TCP_CLOSE, ptr @TRACE_SYSTEM_TCP_CLOSE_WAIT, ptr @TRACE_SYSTEM_TCP_CLOSING, ptr @TRACE_SYSTEM_TCP_ESTABLISHED, ptr @TRACE_SYSTEM_TCP_FIN_WAIT1, ptr @TRACE_SYSTEM_TCP_FIN_WAIT2, ptr @TRACE_SYSTEM_TCP_LAST_ACK, ptr @TRACE_SYSTEM_TCP_LISTEN, ptr @TRACE_SYSTEM_TCP_SYN_RECV, ptr @TRACE_SYSTEM_TCP_SYN_SENT, ptr @TRACE_SYSTEM_TCP_TIME_WAIT, ptr @__TRACE_SYSTEM_AF_INET, ptr @__TRACE_SYSTEM_AF_INET6, ptr @__TRACE_SYSTEM_AF_LOCAL, ptr @__TRACE_SYSTEM_AF_UNIX, ptr @__TRACE_SYSTEM_AF_UNSPEC, ptr @__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, ptr @__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, ptr @__TRACE_SYSTEM_RPC_AUTH_BADCRED, ptr @__TRACE_SYSTEM_RPC_AUTH_BADVERF, ptr @__TRACE_SYSTEM_RPC_AUTH_OK, ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, ptr @__TRACE_SYSTEM_RPC_AUTH_TOOWEAK, ptr @__TRACE_SYSTEM_RQ_BUSY, ptr @__TRACE_SYSTEM_RQ_DATA, ptr @__TRACE_SYSTEM_RQ_DROPME, ptr @__TRACE_SYSTEM_RQ_LOCAL, ptr @__TRACE_SYSTEM_RQ_SECURE, ptr @__TRACE_SYSTEM_RQ_SPLICE_OK, ptr @__TRACE_SYSTEM_RQ_USEDEFERRAL, ptr @__TRACE_SYSTEM_RQ_VICTIM, ptr @__TRACE_SYSTEM_SOCK_DCCP, ptr @__TRACE_SYSTEM_SOCK_DGRAM, ptr @__TRACE_SYSTEM_SOCK_PACKET, ptr @__TRACE_SYSTEM_SOCK_RAW, ptr @__TRACE_SYSTEM_SOCK_RDM, ptr @__TRACE_SYSTEM_SOCK_SEQPACKET, ptr @__TRACE_SYSTEM_SOCK_STREAM, ptr @__TRACE_SYSTEM_SS_CONNECTED, ptr @__TRACE_SYSTEM_SS_CONNECTING, ptr @__TRACE_SYSTEM_SS_DISCONNECTING, ptr @__TRACE_SYSTEM_SS_FREE, ptr @__TRACE_SYSTEM_SS_UNCONNECTED, ptr @__TRACE_SYSTEM_SVC_CLOSE, ptr @__TRACE_SYSTEM_SVC_COMPLETE, ptr @__TRACE_SYSTEM_SVC_DENIED, ptr @__TRACE_SYSTEM_SVC_DROP, ptr @__TRACE_SYSTEM_SVC_GARBAGE, ptr @__TRACE_SYSTEM_SVC_NEGATIVE, ptr @__TRACE_SYSTEM_SVC_OK, ptr @__TRACE_SYSTEM_SVC_PENDING, ptr @__TRACE_SYSTEM_SVC_SYSERR, ptr @__TRACE_SYSTEM_SVC_VALID, ptr @__TRACE_SYSTEM_TCP_CLOSE, ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, ptr @__TRACE_SYSTEM_TCP_CLOSING, ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, ptr @__TRACE_SYSTEM_TCP_LAST_ACK, ptr @__TRACE_SYSTEM_TCP_LISTEN, ptr @__TRACE_SYSTEM_TCP_SYN_RECV, ptr @__TRACE_SYSTEM_TCP_SYN_SENT, ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, ptr @__event_cache_entry_expired, ptr @__event_cache_entry_make_negative, ptr @__event_cache_entry_no_listener, ptr @__event_cache_entry_upcall, ptr @__event_cache_entry_update, ptr @__event_pmap_register, ptr @__event_rpc__auth_tooweak, ptr @__event_rpc__bad_creds, ptr @__event_rpc__garbage_args, ptr @__event_rpc__mismatch, ptr @__event_rpc__proc_unavail, ptr @__event_rpc__prog_mismatch, ptr @__event_rpc__prog_unavail, ptr @__event_rpc__stale_creds, ptr @__event_rpc__unparsable, ptr @__event_rpc_bad_callhdr, ptr @__event_rpc_bad_verifier, ptr @__event_rpc_buf_alloc, ptr @__event_rpc_call_rpcerror, ptr @__event_rpc_call_status, ptr @__event_rpc_clnt_clone_err, ptr @__event_rpc_clnt_free, ptr @__event_rpc_clnt_killall, ptr @__event_rpc_clnt_new, ptr @__event_rpc_clnt_new_err, ptr @__event_rpc_clnt_release, ptr @__event_rpc_clnt_replace_xprt, ptr @__event_rpc_clnt_replace_xprt_err, ptr @__event_rpc_clnt_shutdown, ptr @__event_rpc_connect_status, ptr @__event_rpc_refresh_status, ptr @__event_rpc_request, ptr @__event_rpc_retry_refresh_status, ptr @__event_rpc_socket_close, ptr @__event_rpc_socket_connect, ptr @__event_rpc_socket_error, ptr @__event_rpc_socket_nospace, ptr @__event_rpc_socket_reset_connection, ptr @__event_rpc_socket_shutdown, ptr @__event_rpc_socket_state_change, ptr @__event_rpc_stats_latency, ptr @__event_rpc_task_begin, ptr @__event_rpc_task_call_done, ptr @__event_rpc_task_complete, ptr @__event_rpc_task_end, ptr @__event_rpc_task_run_action, ptr @__event_rpc_task_signalled, ptr @__event_rpc_task_sleep, ptr @__event_rpc_task_sync_sleep, ptr @__event_rpc_task_sync_wake, ptr @__event_rpc_task_timeout, ptr @__event_rpc_task_wakeup, ptr @__event_rpc_timeout_status, ptr @__event_rpc_xdr_alignment, ptr @__event_rpc_xdr_overflow, ptr @__event_rpc_xdr_recvfrom, ptr @__event_rpc_xdr_reply_pages, ptr @__event_rpc_xdr_sendto, ptr @__event_rpcb_bind_version_err, ptr @__event_rpcb_getport, ptr @__event_rpcb_prog_unavail_err, ptr @__event_rpcb_register, ptr @__event_rpcb_setport, ptr @__event_rpcb_timeout_err, ptr @__event_rpcb_unreachable_err, ptr @__event_rpcb_unrecognized_err, ptr @__event_rpcb_unregister, ptr @__event_svc_alloc_arg_err, ptr @__event_svc_authenticate, ptr @__event_svc_defer, ptr @__event_svc_defer_drop, ptr @__event_svc_defer_queue, ptr @__event_svc_defer_recv, ptr @__event_svc_drop, ptr @__event_svc_noregister, ptr @__event_svc_process, ptr @__event_svc_register, ptr @__event_svc_send, ptr @__event_svc_stats_latency, ptr @__event_svc_unregister, ptr @__event_svc_wake_up, ptr @__event_svc_xdr_recvfrom, ptr @__event_svc_xdr_sendto, ptr @__event_svc_xprt_accept, ptr @__event_svc_xprt_close, ptr @__event_svc_xprt_create_err, ptr @__event_svc_xprt_dequeue, ptr @__event_svc_xprt_detach, ptr @__event_svc_xprt_enqueue, ptr @__event_svc_xprt_free, ptr @__event_svc_xprt_no_write_space, ptr @__event_svcsock_accept_err, ptr @__event_svcsock_data_ready, ptr @__event_svcsock_getpeername_err, ptr @__event_svcsock_marker, ptr @__event_svcsock_new_socket, ptr @__event_svcsock_tcp_recv, ptr @__event_svcsock_tcp_recv_eagain, ptr @__event_svcsock_tcp_recv_err, ptr @__event_svcsock_tcp_recv_short, ptr @__event_svcsock_tcp_send, ptr @__event_svcsock_tcp_state, ptr @__event_svcsock_udp_recv, ptr @__event_svcsock_udp_recv_err, ptr @__event_svcsock_udp_send, ptr @__event_svcsock_write_space, ptr @__event_xprt_connect, ptr @__event_xprt_create, ptr @__event_xprt_destroy, ptr @__event_xprt_disconnect_auto, ptr @__event_xprt_disconnect_cleanup, ptr @__event_xprt_disconnect_done, ptr @__event_xprt_disconnect_force, ptr @__event_xprt_get_cong, ptr @__event_xprt_lookup_rqst, ptr @__event_xprt_ping, ptr @__event_xprt_put_cong, ptr @__event_xprt_release_cong, ptr @__event_xprt_release_xprt, ptr @__event_xprt_reserve, ptr @__event_xprt_reserve_cong, ptr @__event_xprt_reserve_xprt, ptr @__event_xprt_retransmit, ptr @__event_xprt_timer, ptr @__event_xprt_transmit, ptr @__event_xs_stream_read_data, ptr @__event_xs_stream_read_request, ptr @__ksymtab___rpc_wait_for_completion_task, ptr @__ksymtab_rpc_delay, ptr @__ksymtab_rpc_destroy_wait_queue, ptr @__ksymtab_rpc_exit, ptr @__ksymtab_rpc_free, ptr @__ksymtab_rpc_init_priority_wait_queue, ptr @__ksymtab_rpc_init_wait_queue, ptr @__ksymtab_rpc_malloc, ptr @__ksymtab_rpc_put_task, ptr @__ksymtab_rpc_put_task_async, ptr @__ksymtab_rpc_sleep_on, ptr @__ksymtab_rpc_sleep_on_priority, ptr @__ksymtab_rpc_sleep_on_priority_timeout, ptr @__ksymtab_rpc_sleep_on_timeout, ptr @__ksymtab_rpc_task_timeout, ptr @__ksymtab_rpc_wake_up, ptr @__ksymtab_rpc_wake_up_first, ptr @__ksymtab_rpc_wake_up_next, ptr @__ksymtab_rpc_wake_up_queued_task, ptr @__ksymtab_rpc_wake_up_status, ptr @__ksymtab_xprtiod_workqueue, ptr @__tracepoint_cache_entry_expired, ptr @__tracepoint_cache_entry_make_negative, ptr @__tracepoint_cache_entry_no_listener, ptr @__tracepoint_cache_entry_upcall, ptr @__tracepoint_cache_entry_update, ptr @__tracepoint_pmap_register, ptr @__tracepoint_ptr_cache_entry_expired, ptr @__tracepoint_ptr_cache_entry_make_negative, ptr @__tracepoint_ptr_cache_entry_no_listener, ptr @__tracepoint_ptr_cache_entry_upcall, ptr @__tracepoint_ptr_cache_entry_update, ptr @__tracepoint_ptr_pmap_register, ptr @__tracepoint_ptr_rpc__auth_tooweak, ptr @__tracepoint_ptr_rpc__bad_creds, ptr @__tracepoint_ptr_rpc__garbage_args, ptr @__tracepoint_ptr_rpc__mismatch, ptr @__tracepoint_ptr_rpc__proc_unavail, ptr @__tracepoint_ptr_rpc__prog_mismatch, ptr @__tracepoint_ptr_rpc__prog_unavail, ptr @__tracepoint_ptr_rpc__stale_creds, ptr @__tracepoint_ptr_rpc__unparsable, ptr @__tracepoint_ptr_rpc_bad_callhdr, ptr @__tracepoint_ptr_rpc_bad_verifier, ptr @__tracepoint_ptr_rpc_buf_alloc, ptr @__tracepoint_ptr_rpc_call_rpcerror, ptr @__tracepoint_ptr_rpc_call_status, ptr @__tracepoint_ptr_rpc_clnt_clone_err, ptr @__tracepoint_ptr_rpc_clnt_free, ptr @__tracepoint_ptr_rpc_clnt_killall, ptr @__tracepoint_ptr_rpc_clnt_new, ptr @__tracepoint_ptr_rpc_clnt_new_err, ptr @__tracepoint_ptr_rpc_clnt_release, ptr @__tracepoint_ptr_rpc_clnt_replace_xprt, ptr @__tracepoint_ptr_rpc_clnt_replace_xprt_err, ptr @__tracepoint_ptr_rpc_clnt_shutdown, ptr @__tracepoint_ptr_rpc_connect_status, ptr @__tracepoint_ptr_rpc_refresh_status, ptr @__tracepoint_ptr_rpc_request, ptr @__tracepoint_ptr_rpc_retry_refresh_status, ptr @__tracepoint_ptr_rpc_socket_close, ptr @__tracepoint_ptr_rpc_socket_connect, ptr @__tracepoint_ptr_rpc_socket_error, ptr @__tracepoint_ptr_rpc_socket_nospace, ptr @__tracepoint_ptr_rpc_socket_reset_connection, ptr @__tracepoint_ptr_rpc_socket_shutdown, ptr @__tracepoint_ptr_rpc_socket_state_change, ptr @__tracepoint_ptr_rpc_stats_latency, ptr @__tracepoint_ptr_rpc_task_begin, ptr @__tracepoint_ptr_rpc_task_call_done, ptr @__tracepoint_ptr_rpc_task_complete, ptr @__tracepoint_ptr_rpc_task_end, ptr @__tracepoint_ptr_rpc_task_run_action, ptr @__tracepoint_ptr_rpc_task_signalled, ptr @__tracepoint_ptr_rpc_task_sleep, ptr @__tracepoint_ptr_rpc_task_sync_sleep, ptr @__tracepoint_ptr_rpc_task_sync_wake, ptr @__tracepoint_ptr_rpc_task_timeout, ptr @__tracepoint_ptr_rpc_task_wakeup, ptr @__tracepoint_ptr_rpc_timeout_status, ptr @__tracepoint_ptr_rpc_xdr_alignment, ptr @__tracepoint_ptr_rpc_xdr_overflow, ptr @__tracepoint_ptr_rpc_xdr_recvfrom, ptr @__tracepoint_ptr_rpc_xdr_reply_pages, ptr @__tracepoint_ptr_rpc_xdr_sendto, ptr @__tracepoint_ptr_rpcb_bind_version_err, ptr @__tracepoint_ptr_rpcb_getport, ptr @__tracepoint_ptr_rpcb_prog_unavail_err, ptr @__tracepoint_ptr_rpcb_register, ptr @__tracepoint_ptr_rpcb_setport, ptr @__tracepoint_ptr_rpcb_timeout_err, ptr @__tracepoint_ptr_rpcb_unreachable_err, ptr @__tracepoint_ptr_rpcb_unrecognized_err, ptr @__tracepoint_ptr_rpcb_unregister, ptr @__tracepoint_ptr_svc_alloc_arg_err, ptr @__tracepoint_ptr_svc_authenticate, ptr @__tracepoint_ptr_svc_defer, ptr @__tracepoint_ptr_svc_defer_drop, ptr @__tracepoint_ptr_svc_defer_queue, ptr @__tracepoint_ptr_svc_defer_recv, ptr @__tracepoint_ptr_svc_drop, ptr @__tracepoint_ptr_svc_noregister, ptr @__tracepoint_ptr_svc_process, ptr @__tracepoint_ptr_svc_register, ptr @__tracepoint_ptr_svc_send, ptr @__tracepoint_ptr_svc_stats_latency, ptr @__tracepoint_ptr_svc_unregister, ptr @__tracepoint_ptr_svc_wake_up, ptr @__tracepoint_ptr_svc_xdr_recvfrom, ptr @__tracepoint_ptr_svc_xdr_sendto, ptr @__tracepoint_ptr_svc_xprt_accept, ptr @__tracepoint_ptr_svc_xprt_close, ptr @__tracepoint_ptr_svc_xprt_create_err, ptr @__tracepoint_ptr_svc_xprt_dequeue, ptr @__tracepoint_ptr_svc_xprt_detach, ptr @__tracepoint_ptr_svc_xprt_enqueue, ptr @__tracepoint_ptr_svc_xprt_free, ptr @__tracepoint_ptr_svc_xprt_no_write_space, ptr @__tracepoint_ptr_svcsock_accept_err, ptr @__tracepoint_ptr_svcsock_data_ready, ptr @__tracepoint_ptr_svcsock_getpeername_err, ptr @__tracepoint_ptr_svcsock_marker, ptr @__tracepoint_ptr_svcsock_new_socket, ptr @__tracepoint_ptr_svcsock_tcp_recv, ptr @__tracepoint_ptr_svcsock_tcp_recv_eagain, ptr @__tracepoint_ptr_svcsock_tcp_recv_err, ptr @__tracepoint_ptr_svcsock_tcp_recv_short, ptr @__tracepoint_ptr_svcsock_tcp_send, ptr @__tracepoint_ptr_svcsock_tcp_state, ptr @__tracepoint_ptr_svcsock_udp_recv, ptr @__tracepoint_ptr_svcsock_udp_recv_err, ptr @__tracepoint_ptr_svcsock_udp_send, ptr @__tracepoint_ptr_svcsock_write_space, ptr @__tracepoint_ptr_xprt_connect, ptr @__tracepoint_ptr_xprt_create, ptr @__tracepoint_ptr_xprt_destroy, ptr @__tracepoint_ptr_xprt_disconnect_auto, ptr @__tracepoint_ptr_xprt_disconnect_cleanup, ptr @__tracepoint_ptr_xprt_disconnect_done, ptr @__tracepoint_ptr_xprt_disconnect_force, ptr @__tracepoint_ptr_xprt_get_cong, ptr @__tracepoint_ptr_xprt_lookup_rqst, ptr @__tracepoint_ptr_xprt_ping, ptr @__tracepoint_ptr_xprt_put_cong, ptr @__tracepoint_ptr_xprt_release_cong, ptr @__tracepoint_ptr_xprt_release_xprt, ptr @__tracepoint_ptr_xprt_reserve, ptr @__tracepoint_ptr_xprt_reserve_cong, ptr @__tracepoint_ptr_xprt_reserve_xprt, ptr @__tracepoint_ptr_xprt_retransmit, ptr @__tracepoint_ptr_xprt_timer, ptr @__tracepoint_ptr_xprt_transmit, ptr @__tracepoint_ptr_xs_stream_read_data, ptr @__tracepoint_ptr_xs_stream_read_request, ptr @__tracepoint_rpc__auth_tooweak, ptr @__tracepoint_rpc__bad_creds, ptr @__tracepoint_rpc__garbage_args, ptr @__tracepoint_rpc__mismatch, ptr @__tracepoint_rpc__proc_unavail, ptr @__tracepoint_rpc__prog_mismatch, ptr @__tracepoint_rpc__prog_unavail, ptr @__tracepoint_rpc__stale_creds, ptr @__tracepoint_rpc__unparsable, ptr @__tracepoint_rpc_bad_callhdr, ptr @__tracepoint_rpc_bad_verifier, ptr @__tracepoint_rpc_buf_alloc, ptr @__tracepoint_rpc_call_rpcerror, ptr @__tracepoint_rpc_call_status, ptr @__tracepoint_rpc_clnt_clone_err, ptr @__tracepoint_rpc_clnt_free, ptr @__tracepoint_rpc_clnt_killall, ptr @__tracepoint_rpc_clnt_new, ptr @__tracepoint_rpc_clnt_new_err, ptr @__tracepoint_rpc_clnt_release, ptr @__tracepoint_rpc_clnt_replace_xprt, ptr @__tracepoint_rpc_clnt_replace_xprt_err, ptr @__tracepoint_rpc_clnt_shutdown, ptr @__tracepoint_rpc_connect_status, ptr @__tracepoint_rpc_refresh_status, ptr @__tracepoint_rpc_request, ptr @__tracepoint_rpc_retry_refresh_status, ptr @__tracepoint_rpc_socket_close, ptr @__tracepoint_rpc_socket_connect, ptr @__tracepoint_rpc_socket_error, ptr @__tracepoint_rpc_socket_nospace, ptr @__tracepoint_rpc_socket_reset_connection, ptr @__tracepoint_rpc_socket_shutdown, ptr @__tracepoint_rpc_socket_state_change, ptr @__tracepoint_rpc_stats_latency, ptr @__tracepoint_rpc_task_begin, ptr @__tracepoint_rpc_task_call_done, ptr @__tracepoint_rpc_task_complete, ptr @__tracepoint_rpc_task_end, ptr @__tracepoint_rpc_task_run_action, ptr @__tracepoint_rpc_task_signalled, ptr @__tracepoint_rpc_task_sleep, ptr @__tracepoint_rpc_task_sync_sleep, ptr @__tracepoint_rpc_task_sync_wake, ptr @__tracepoint_rpc_task_timeout, ptr @__tracepoint_rpc_task_wakeup, ptr @__tracepoint_rpc_timeout_status, ptr @__tracepoint_rpc_xdr_alignment, ptr @__tracepoint_rpc_xdr_overflow, ptr @__tracepoint_rpc_xdr_recvfrom, ptr @__tracepoint_rpc_xdr_reply_pages, ptr @__tracepoint_rpc_xdr_sendto, ptr @__tracepoint_rpcb_bind_version_err, ptr @__tracepoint_rpcb_getport, ptr @__tracepoint_rpcb_prog_unavail_err, ptr @__tracepoint_rpcb_register, ptr @__tracepoint_rpcb_setport, ptr @__tracepoint_rpcb_timeout_err, ptr @__tracepoint_rpcb_unreachable_err, ptr @__tracepoint_rpcb_unrecognized_err, ptr @__tracepoint_rpcb_unregister, ptr @__tracepoint_svc_alloc_arg_err, ptr @__tracepoint_svc_authenticate, ptr @__tracepoint_svc_defer, ptr @__tracepoint_svc_defer_drop, ptr @__tracepoint_svc_defer_queue, ptr @__tracepoint_svc_defer_recv, ptr @__tracepoint_svc_drop, ptr @__tracepoint_svc_noregister, ptr @__tracepoint_svc_process, ptr @__tracepoint_svc_register, ptr @__tracepoint_svc_send, ptr @__tracepoint_svc_stats_latency, ptr @__tracepoint_svc_unregister, ptr @__tracepoint_svc_wake_up, ptr @__tracepoint_svc_xdr_recvfrom, ptr @__tracepoint_svc_xdr_sendto, ptr @__tracepoint_svc_xprt_accept, ptr @__tracepoint_svc_xprt_close, ptr @__tracepoint_svc_xprt_create_err, ptr @__tracepoint_svc_xprt_dequeue, ptr @__tracepoint_svc_xprt_detach, ptr @__tracepoint_svc_xprt_enqueue, ptr @__tracepoint_svc_xprt_free, ptr @__tracepoint_svc_xprt_no_write_space, ptr @__tracepoint_svcsock_accept_err, ptr @__tracepoint_svcsock_data_ready, ptr @__tracepoint_svcsock_getpeername_err, ptr @__tracepoint_svcsock_marker, ptr @__tracepoint_svcsock_new_socket, ptr @__tracepoint_svcsock_tcp_recv, ptr @__tracepoint_svcsock_tcp_recv_eagain, ptr @__tracepoint_svcsock_tcp_recv_err, ptr @__tracepoint_svcsock_tcp_recv_short, ptr @__tracepoint_svcsock_tcp_send, ptr @__tracepoint_svcsock_tcp_state, ptr @__tracepoint_svcsock_udp_recv, ptr @__tracepoint_svcsock_udp_recv_err, ptr @__tracepoint_svcsock_udp_send, ptr @__tracepoint_svcsock_write_space, ptr @__tracepoint_xprt_connect, ptr @__tracepoint_xprt_create, ptr @__tracepoint_xprt_destroy, ptr @__tracepoint_xprt_disconnect_auto, ptr @__tracepoint_xprt_disconnect_cleanup, ptr @__tracepoint_xprt_disconnect_done, ptr @__tracepoint_xprt_disconnect_force, ptr @__tracepoint_xprt_get_cong, ptr @__tracepoint_xprt_lookup_rqst, ptr @__tracepoint_xprt_ping, ptr @__tracepoint_xprt_put_cong, ptr @__tracepoint_xprt_release_cong, ptr @__tracepoint_xprt_release_xprt, ptr @__tracepoint_xprt_reserve, ptr @__tracepoint_xprt_reserve_cong, ptr @__tracepoint_xprt_reserve_xprt, ptr @__tracepoint_xprt_retransmit, ptr @__tracepoint_xprt_timer, ptr @__tracepoint_xprt_transmit, ptr @__tracepoint_xs_stream_read_data, ptr @__tracepoint_xs_stream_read_request, ptr @event_cache_entry_expired, ptr @event_cache_entry_make_negative, ptr @event_cache_entry_no_listener, ptr @event_cache_entry_upcall, ptr @event_cache_entry_update, ptr @event_class_cache_event, ptr @event_class_pmap_register, ptr @event_class_register_class, ptr @event_class_rpc_buf_alloc, ptr @event_class_rpc_call_rpcerror, ptr @event_class_rpc_clnt_class, ptr @event_class_rpc_clnt_clone_err, ptr @event_class_rpc_clnt_new, ptr @event_class_rpc_clnt_new_err, ptr @event_class_rpc_failure, ptr @event_class_rpc_reply_event, ptr @event_class_rpc_request, ptr @event_class_rpc_socket_nospace, ptr @event_class_rpc_stats_latency, ptr @event_class_rpc_task_queued, ptr @event_class_rpc_task_running, ptr @event_class_rpc_task_status, ptr @event_class_rpc_xdr_alignment, ptr @event_class_rpc_xdr_buf_class, ptr @event_class_rpc_xdr_overflow, ptr @event_class_rpc_xprt_event, ptr @event_class_rpc_xprt_lifetime_class, ptr @event_class_rpcb_getport, ptr @event_class_rpcb_register, ptr @event_class_rpcb_setport, ptr @event_class_rpcb_unregister, ptr @event_class_svc_alloc_arg_err, ptr @event_class_svc_authenticate, ptr @event_class_svc_deferred_event, ptr @event_class_svc_process, ptr @event_class_svc_rqst_event, ptr @event_class_svc_rqst_status, ptr @event_class_svc_stats_latency, ptr @event_class_svc_unregister, ptr @event_class_svc_wake_up, ptr @event_class_svc_xdr_buf_class, ptr @event_class_svc_xdr_msg_class, ptr @event_class_svc_xprt_accept, ptr @event_class_svc_xprt_create_err, ptr @event_class_svc_xprt_dequeue, ptr @event_class_svc_xprt_enqueue, ptr @event_class_svc_xprt_event, ptr @event_class_svcsock_accept_class, ptr @event_class_svcsock_class, ptr @event_class_svcsock_marker, ptr @event_class_svcsock_new_socket, ptr @event_class_svcsock_tcp_recv_short, ptr @event_class_svcsock_tcp_state, ptr @event_class_xprt_cong_event, ptr @event_class_xprt_ping, ptr @event_class_xprt_reserve, ptr @event_class_xprt_retransmit, ptr @event_class_xprt_transmit, ptr @event_class_xprt_writelock_event, ptr @event_class_xs_socket_event, ptr @event_class_xs_socket_event_done, ptr @event_class_xs_stream_read_data, ptr @event_class_xs_stream_read_request, ptr @event_pmap_register, ptr @event_rpc__auth_tooweak, ptr @event_rpc__bad_creds, ptr @event_rpc__garbage_args, ptr @event_rpc__mismatch, ptr @event_rpc__proc_unavail, ptr @event_rpc__prog_mismatch, ptr @event_rpc__prog_unavail, ptr @event_rpc__stale_creds, ptr @event_rpc__unparsable, ptr @event_rpc_bad_callhdr, ptr @event_rpc_bad_verifier, ptr @event_rpc_buf_alloc, ptr @event_rpc_call_rpcerror, ptr @event_rpc_call_status, ptr @event_rpc_clnt_clone_err, ptr @event_rpc_clnt_free, ptr @event_rpc_clnt_killall, ptr @event_rpc_clnt_new, ptr @event_rpc_clnt_new_err, ptr @event_rpc_clnt_release, ptr @event_rpc_clnt_replace_xprt, ptr @event_rpc_clnt_replace_xprt_err, ptr @event_rpc_clnt_shutdown, ptr @event_rpc_connect_status, ptr @event_rpc_refresh_status, ptr @event_rpc_request, ptr @event_rpc_retry_refresh_status, ptr @event_rpc_socket_close, ptr @event_rpc_socket_connect, ptr @event_rpc_socket_error, ptr @event_rpc_socket_nospace, ptr @event_rpc_socket_reset_connection, ptr @event_rpc_socket_shutdown, ptr @event_rpc_socket_state_change, ptr @event_rpc_stats_latency, ptr @event_rpc_task_begin, ptr @event_rpc_task_call_done, ptr @event_rpc_task_complete, ptr @event_rpc_task_end, ptr @event_rpc_task_run_action, ptr @event_rpc_task_signalled, ptr @event_rpc_task_sleep, ptr @event_rpc_task_sync_sleep, ptr @event_rpc_task_sync_wake, ptr @event_rpc_task_timeout, ptr @event_rpc_task_wakeup, ptr @event_rpc_timeout_status, ptr @event_rpc_xdr_alignment, ptr @event_rpc_xdr_overflow, ptr @event_rpc_xdr_recvfrom, ptr @event_rpc_xdr_reply_pages, ptr @event_rpc_xdr_sendto, ptr @event_rpcb_bind_version_err, ptr @event_rpcb_getport, ptr @event_rpcb_prog_unavail_err, ptr @event_rpcb_register, ptr @event_rpcb_setport, ptr @event_rpcb_timeout_err, ptr @event_rpcb_unreachable_err, ptr @event_rpcb_unrecognized_err, ptr @event_rpcb_unregister, ptr @event_svc_alloc_arg_err, ptr @event_svc_authenticate, ptr @event_svc_defer, ptr @event_svc_defer_drop, ptr @event_svc_defer_queue, ptr @event_svc_defer_recv, ptr @event_svc_drop, ptr @event_svc_noregister, ptr @event_svc_process, ptr @event_svc_register, ptr @event_svc_send, ptr @event_svc_stats_latency, ptr @event_svc_unregister, ptr @event_svc_wake_up, ptr @event_svc_xdr_recvfrom, ptr @event_svc_xdr_sendto, ptr @event_svc_xprt_accept, ptr @event_svc_xprt_close, ptr @event_svc_xprt_create_err, ptr @event_svc_xprt_dequeue, ptr @event_svc_xprt_detach, ptr @event_svc_xprt_enqueue, ptr @event_svc_xprt_free, ptr @event_svc_xprt_no_write_space, ptr @event_svcsock_accept_err, ptr @event_svcsock_data_ready, ptr @event_svcsock_getpeername_err, ptr @event_svcsock_marker, ptr @event_svcsock_new_socket, ptr @event_svcsock_tcp_recv, ptr @event_svcsock_tcp_recv_eagain, ptr @event_svcsock_tcp_recv_err, ptr @event_svcsock_tcp_recv_short, ptr @event_svcsock_tcp_send, ptr @event_svcsock_tcp_state, ptr @event_svcsock_udp_recv, ptr @event_svcsock_udp_recv_err, ptr @event_svcsock_udp_send, ptr @event_svcsock_write_space, ptr @event_xprt_connect, ptr @event_xprt_create, ptr @event_xprt_destroy, ptr @event_xprt_disconnect_auto, ptr @event_xprt_disconnect_cleanup, ptr @event_xprt_disconnect_done, ptr @event_xprt_disconnect_force, ptr @event_xprt_get_cong, ptr @event_xprt_lookup_rqst, ptr @event_xprt_ping, ptr @event_xprt_put_cong, ptr @event_xprt_release_cong, ptr @event_xprt_release_xprt, ptr @event_xprt_reserve, ptr @event_xprt_reserve_cong, ptr @event_xprt_reserve_xprt, ptr @event_xprt_retransmit, ptr @event_xprt_timer, ptr @event_xprt_transmit, ptr @event_xs_stream_read_data, ptr @event_xs_stream_read_request], section "llvm.metadata"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_sendto(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_sendto, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_recvfrom(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_recvfrom, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_reply_pages(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_reply_pages, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_free(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_free, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_killall(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_killall, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_shutdown(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_shutdown, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_release(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_release, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_replace_xprt(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_replace_xprt_err(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt_err, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_new(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #15
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_new_err(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new_err, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_clone_err(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_clone_err, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_call_status(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_status, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_connect_status(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_connect_status, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_timeout_status(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_timeout_status, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_retry_refresh_status(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_retry_refresh_status, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_refresh_status(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_refresh_status, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_request(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_request, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_begin(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_begin, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_run_action(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_run_action, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_sync_sleep(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sync_sleep, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_sync_wake(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sync_wake, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_complete(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_complete, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_timeout(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_timeout, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_signalled(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_end(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_end, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_call_done(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_call_done, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_sleep(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sleep, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_wakeup(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_wakeup, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_bad_callhdr(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_callhdr, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_bad_verifier(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_verifier, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__prog_unavail(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_unavail, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__prog_mismatch(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_mismatch, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__proc_unavail(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__proc_unavail, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__garbage_args(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__garbage_args, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__unparsable(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__unparsable, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__mismatch(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__mismatch, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__stale_creds(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__stale_creds, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__bad_creds(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__bad_creds, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__auth_tooweak(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__auth_tooweak, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_prog_unavail_err(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_prog_unavail_err, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_timeout_err(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_timeout_err, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_bind_version_err(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_bind_version_err, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_unreachable_err(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unreachable_err, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_unrecognized_err(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unrecognized_err, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_buf_alloc(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_buf_alloc, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_call_rpcerror(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_rpcerror, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_stats_latency(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_stats_latency, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #15
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_overflow(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_overflow, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_alignment(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_alignment, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_state_change(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_socket_state_change, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_connect(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_socket_connect, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_error(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_socket_error, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_reset_connection(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_socket_reset_connection, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_close(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_socket_close, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_shutdown(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_socket_shutdown, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_nospace(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_socket_nospace, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_create(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_create, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_connect(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_connect, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_auto(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_disconnect_auto, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_done(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_disconnect_done, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_force(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_disconnect_force, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_cleanup(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_disconnect_cleanup, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_destroy(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_destroy, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_timer(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_timer, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_lookup_rqst(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_lookup_rqst, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_transmit(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_transmit, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_retransmit(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_retransmit, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_ping(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_ping, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_reserve_xprt(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_reserve_xprt, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_release_xprt(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_release_xprt, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_reserve_cong(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_reserve_cong, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_release_cong(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_release_cong, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_get_cong(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_get_cong, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_put_cong(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_put_cong, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_reserve(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_reserve, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xs_stream_read_data(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xs_stream_read_data, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xs_stream_read_request(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xs_stream_read_request, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_getport(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_getport, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_setport(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i16 noundef zeroext %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_setport, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i16 noundef zeroext %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_pmap_register(ptr nocapture readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_pmap_register, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, i32 noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4) #15
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_register(ptr nocapture readnone %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_register, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4) #15
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_unregister(ptr nocapture readnone %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unregister, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, i32 noundef %1, i32 noundef %2, ptr noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xdr_recvfrom(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xdr_recvfrom, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xdr_sendto(ptr nocapture readnone %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xdr_sendto, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, i32 noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_authenticate(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_authenticate, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_process(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_process, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_defer, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_drop(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_drop, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_send(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_send, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_create_err(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_create_err, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr noundef %5) #15
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_enqueue(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_enqueue, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_no_write_space(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_no_write_space, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_close(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_close, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_detach(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_detach, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_free(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_free, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_accept(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_accept, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_dequeue(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_xprt_dequeue, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_wake_up(ptr nocapture readnone %0, i32 noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_wake_up, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, i32 noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_alloc_arg_err(ptr nocapture readnone %0, i32 noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_alloc_arg_err, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, i32 noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_stats_latency(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_stats_latency, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer_drop(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_defer_drop, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer_queue(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_defer_queue, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer_recv(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_defer_recv, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_new_socket(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_new_socket, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #15
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_marker(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_marker, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_udp_send(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_udp_send, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_udp_recv(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_udp_recv, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_udp_recv_err(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_udp_recv_err, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_send(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_tcp_send, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_tcp_recv, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv_eagain(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_tcp_recv_eagain, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv_err(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_tcp_recv_err, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_data_ready(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_data_ready, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_write_space(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_write_space, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv_short(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_tcp_recv_short, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_state(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_tcp_state, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_accept_err(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_accept_err, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_getpeername_err(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svcsock_getpeername_err, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_expired(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_cache_entry_expired, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_upcall(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_cache_entry_upcall, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_update(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_cache_entry_update, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_make_negative(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_cache_entry_make_negative, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_no_listener(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_cache_entry_no_listener, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #15
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_register(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_register, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5, i32 noundef %6) #15
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_noregister(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_noregister, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5, i32 noundef %6) #15
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_unregister(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_svc_unregister, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #15
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xdr_buf_class(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %51, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 44) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %51, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %19 = load i16, ptr %18, align 8
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %23 = load ptr, ptr %22, align 8
  %24 = icmp eq ptr %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.rpc_clnt, ptr %23, i32 0, i32 1
  %27 = load i32, ptr %26, align 4
  br label %28

28:                                               ; preds = %25, %17
  %29 = phi i32 [ %27, %25 ], [ -1, %17 ]
  %30 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 2
  store i32 %29, ptr %30, align 4
  %31 = load ptr, ptr %2, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 3
  store ptr %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.kvec, ptr %2, i32 0, i32 1
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 4
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 5
  store ptr %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1, i32 0, i32 1
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 6
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 4
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 7
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 5
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 8
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 8
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %15, i32 0, i32 9
  store i32 %49, ptr %50, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %51

51:                                               ; preds = %28, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xdr_buf_class(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %69, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %69, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %35 = load i16, ptr %34, align 8
  %36 = zext i16 %35 to i32
  %37 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %39 = load ptr, ptr %38, align 8
  %40 = icmp eq ptr %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %23
  %42 = getelementptr inbounds %struct.rpc_clnt, ptr %39, i32 0, i32 1
  %43 = load i32, ptr %42, align 4
  br label %44

44:                                               ; preds = %41, %23
  %45 = phi i32 [ %43, %41 ], [ -1, %23 ]
  %46 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 2
  store i32 %45, ptr %46, align 4
  %47 = load ptr, ptr %2, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 3
  store ptr %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.kvec, ptr %2, i32 0, i32 1
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 4
  store i32 %50, ptr %51, align 4
  %52 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1
  %53 = load ptr, ptr %52, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 5
  store ptr %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1, i32 0, i32 1
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 6
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 4
  %59 = load i32, ptr %58, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 7
  store i32 %59, ptr %60, align 4
  %61 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 5
  %62 = load i32, ptr %61, align 4
  %63 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 8
  store i32 %62, ptr %63, align 4
  %64 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 8
  %65 = load i32, ptr %64, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %21, i32 0, i32 9
  store i32 %65, ptr %66, align 4
  %67 = load i32, ptr %5, align 4
  %68 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 44, i32 noundef %67, ptr noundef %0, i64 noundef 1, ptr noundef %68, ptr noundef %13, ptr noundef null) #15
  br label %69

69:                                               ; preds = %44, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_class(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %20, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 12) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_class, ptr %14, i32 0, i32 1
  store i32 %18, ptr %19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %20

20:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_class(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_class, ptr %20, i32 0, i32 1
  store i32 %34, ptr %35, align 4
  %36 = load i32, ptr %4, align 4
  %37 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 12, i32 noundef %36, ptr noundef %0, i64 noundef 1, ptr noundef %37, ptr noundef %12, ptr noundef null) #15
  br label %38

38:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_new(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr noundef readonly %3, ptr noundef readonly %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %15, label %80, label %16

16:                                               ; preds = %14, %11, %5
  %17 = getelementptr inbounds %struct.rpc_xprt, ptr %2, i32 0, i32 51
  %18 = load ptr, ptr %17, align 8
  %19 = icmp eq ptr %18, null
  %20 = select i1 %19, ptr @.str.72, ptr %18
  %21 = tail call i32 @strlen(ptr noundef nonnull %20) #15
  %22 = add i32 %21, 1
  %23 = getelementptr %struct.rpc_xprt, ptr %2, i32 0, i32 51, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  %26 = select i1 %25, ptr @.str.72, ptr %24
  %27 = tail call i32 @strlen(ptr noundef nonnull %26) #15
  %28 = add i32 %27, 1
  %29 = add i32 %28, %22
  %30 = icmp eq ptr %3, null
  %31 = select i1 %30, ptr @.str.72, ptr %3
  %32 = tail call i32 @strlen(ptr noundef %31) #15
  %33 = add i32 %32, 1
  %34 = add i32 %33, %29
  %35 = icmp eq ptr %4, null
  %36 = select i1 %35, ptr @.str.72, ptr %4
  %37 = tail call i32 @strlen(ptr noundef %36) #15
  %38 = add i32 %37, 1
  %39 = add i32 %34, 28
  %40 = add i32 %39, %38
  %41 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef %40) #15
  %42 = icmp eq ptr %41, null
  br i1 %42, label %80, label %43

43:                                               ; preds = %16
  %44 = shl i32 %38, 16
  %45 = or i32 %44, %39
  %46 = shl i32 %33, 16
  %47 = add i32 %29, 28
  %48 = or i32 %46, %47
  %49 = shl i32 %28, 16
  %50 = add i32 %21, 29
  %51 = or i32 %49, %50
  %52 = shl i32 %22, 16
  %53 = or i32 %52, 28
  %54 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %41, i32 0, i32 2
  store i32 %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %41, i32 0, i32 3
  store i32 %51, ptr %55, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %41, i32 0, i32 4
  store i32 %48, ptr %56, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %41, i32 0, i32 5
  store i32 %45, ptr %57, align 4
  %58 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %59 = load i32, ptr %58, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %41, i32 0, i32 1
  store i32 %59, ptr %60, align 4
  %61 = getelementptr i8, ptr %41, i32 28
  %62 = load ptr, ptr %17, align 8
  %63 = icmp eq ptr %62, null
  %64 = select i1 %63, ptr @.str.72, ptr %62
  %65 = call ptr @strcpy(ptr noundef %61, ptr noundef nonnull %64)
  %66 = and i32 %50, 65535
  %67 = getelementptr i8, ptr %41, i32 %66
  %68 = load ptr, ptr %23, align 4
  %69 = icmp eq ptr %68, null
  %70 = select i1 %69, ptr @.str.72, ptr %68
  %71 = call ptr @strcpy(ptr noundef %67, ptr noundef nonnull %70)
  %72 = load i32, ptr %56, align 4
  %73 = and i32 %72, 65535
  %74 = getelementptr i8, ptr %41, i32 %73
  %75 = call ptr @strcpy(ptr noundef %74, ptr noundef %31)
  %76 = load i32, ptr %57, align 4
  %77 = and i32 %76, 65535
  %78 = getelementptr i8, ptr %41, i32 %77
  %79 = call ptr @strcpy(ptr noundef %78, ptr noundef %36)
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #15
  br label %80

80:                                               ; preds = %43, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_new(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr noundef readonly %3, ptr noundef readonly %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #15
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.rpc_xprt, ptr %2, i32 0, i32 51
  %9 = load ptr, ptr %8, align 8
  %10 = icmp eq ptr %9, null
  %11 = select i1 %10, ptr @.str.72, ptr %9
  %12 = tail call i32 @strlen(ptr noundef nonnull %11) #15
  %13 = add i32 %12, 1
  %14 = shl i32 %13, 16
  %15 = or i32 %14, 28
  %16 = getelementptr %struct.rpc_xprt, ptr %2, i32 0, i32 51, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  %19 = select i1 %18, ptr @.str.72, ptr %17
  %20 = tail call i32 @strlen(ptr noundef nonnull %19) #15
  %21 = add i32 %20, 1
  %22 = add i32 %12, 29
  %23 = shl i32 %21, 16
  %24 = or i32 %23, %22
  %25 = add i32 %21, %13
  %26 = icmp eq ptr %3, null
  %27 = select i1 %26, ptr @.str.72, ptr %3
  %28 = tail call i32 @strlen(ptr noundef %27) #15
  %29 = add i32 %28, 1
  %30 = add i32 %25, 28
  %31 = shl i32 %29, 16
  %32 = or i32 %31, %30
  %33 = add i32 %29, %25
  %34 = icmp eq ptr %4, null
  %35 = select i1 %34, ptr @.str.72, ptr %4
  %36 = tail call i32 @strlen(ptr noundef %35) #15
  %37 = add i32 %36, 1
  %38 = add i32 %33, 28
  %39 = shl i32 %37, 16
  %40 = or i32 %39, %38
  %41 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %42 = load ptr, ptr %41, align 4
  %43 = ptrtoint ptr %42 to i32
  %44 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %45 = inttoptr i32 %44 to ptr
  %46 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %45) #11, !srcloc !12
  %47 = add i32 %46, %43
  %48 = inttoptr i32 %47 to ptr
  %49 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %50 = load volatile ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %5
  %53 = load volatile ptr, ptr %48, align 4
  %54 = icmp eq ptr %53, null
  br i1 %54, label %101, label %55

55:                                               ; preds = %52, %5
  %56 = add i32 %33, 39
  %57 = add i32 %56, %37
  %58 = and i32 %57, -8
  %59 = add i32 %58, -4
  %60 = call ptr @perf_trace_buf_alloc(i32 noundef %59, ptr noundef nonnull %6, ptr noundef nonnull %7) #15
  %61 = icmp eq ptr %60, null
  br i1 %61, label %101, label %62

62:                                               ; preds = %55
  %63 = load ptr, ptr %6, align 4
  %64 = call ptr @llvm.returnaddress(i32 0) #15
  %65 = ptrtoint ptr %64 to i32
  %66 = getelementptr [18 x i32], ptr %63, i32 0, i32 15
  store i32 %65, ptr %66, align 4
  %67 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %68 = ptrtoint ptr %67 to i32
  %69 = getelementptr [18 x i32], ptr %63, i32 0, i32 11
  store i32 %68, ptr %69, align 4
  %70 = call i32 @llvm.read_register.i32(metadata !0) #15
  %71 = getelementptr [18 x i32], ptr %63, i32 0, i32 13
  store i32 %70, ptr %71, align 4
  %72 = getelementptr [18 x i32], ptr %63, i32 0, i32 16
  store i32 19, ptr %72, align 4
  %73 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %60, i32 0, i32 2
  store i32 %15, ptr %73, align 4
  %74 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %60, i32 0, i32 3
  store i32 %24, ptr %74, align 4
  %75 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %60, i32 0, i32 4
  store i32 %32, ptr %75, align 4
  %76 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %60, i32 0, i32 5
  store i32 %40, ptr %76, align 4
  %77 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %78 = load i32, ptr %77, align 4
  %79 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %60, i32 0, i32 1
  store i32 %78, ptr %79, align 4
  %80 = getelementptr i8, ptr %60, i32 28
  %81 = load ptr, ptr %8, align 8
  %82 = icmp eq ptr %81, null
  %83 = select i1 %82, ptr @.str.72, ptr %81
  %84 = call ptr @strcpy(ptr noundef %80, ptr noundef nonnull %83)
  %85 = and i32 %22, 65535
  %86 = getelementptr i8, ptr %60, i32 %85
  %87 = load ptr, ptr %16, align 4
  %88 = icmp eq ptr %87, null
  %89 = select i1 %88, ptr @.str.72, ptr %87
  %90 = call ptr @strcpy(ptr noundef %86, ptr noundef nonnull %89)
  %91 = load i32, ptr %75, align 4
  %92 = and i32 %91, 65535
  %93 = getelementptr i8, ptr %60, i32 %92
  %94 = call ptr @strcpy(ptr noundef %93, ptr noundef %27)
  %95 = load i32, ptr %76, align 4
  %96 = and i32 %95, 65535
  %97 = getelementptr i8, ptr %60, i32 %96
  %98 = call ptr @strcpy(ptr noundef %97, ptr noundef %35)
  %99 = load i32, ptr %7, align 4
  %100 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %60, i32 noundef %59, i32 noundef %99, ptr noundef %0, i64 noundef 1, ptr noundef %100, ptr noundef %48, ptr noundef null) #15
  br label %101

101:                                              ; preds = %62, %55, %52
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_new_err(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %40, label %15

15:                                               ; preds = %13, %10, %4
  %16 = icmp eq ptr %1, null
  %17 = select i1 %16, ptr @.str.72, ptr %1
  %18 = tail call i32 @strlen(ptr noundef %17) #15
  %19 = icmp eq ptr %2, null
  %20 = select i1 %19, ptr @.str.72, ptr %2
  %21 = tail call i32 @strlen(ptr noundef %20) #15
  %22 = add i32 %21, 1
  %23 = add i32 %18, 21
  %24 = add i32 %23, %22
  %25 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %24) #15
  %26 = icmp eq ptr %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %15
  %28 = shl i32 %22, 16
  %29 = or i32 %28, %23
  %30 = shl i32 %18, 16
  %31 = add i32 %30, 65556
  %32 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %25, i32 0, i32 2
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %25, i32 0, i32 3
  store i32 %29, ptr %33, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %25, i32 0, i32 1
  store i32 %3, ptr %34, align 4
  %35 = getelementptr i8, ptr %25, i32 20
  %36 = call ptr @strcpy(ptr noundef %35, ptr noundef %17)
  %37 = and i32 %23, 65535
  %38 = getelementptr i8, ptr %25, i32 %37
  %39 = call ptr @strcpy(ptr noundef %38, ptr noundef %20)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %40

40:                                               ; preds = %27, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_new_err(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = icmp eq ptr %1, null
  %8 = select i1 %7, ptr @.str.72, ptr %1
  %9 = tail call i32 @strlen(ptr noundef %8) #15
  %10 = shl i32 %9, 16
  %11 = add i32 %10, 65536
  %12 = or i32 %11, 20
  %13 = icmp eq ptr %2, null
  %14 = select i1 %13, ptr @.str.72, ptr %2
  %15 = tail call i32 @strlen(ptr noundef %14) #15
  %16 = add i32 %15, 1
  %17 = add i32 %9, 21
  %18 = shl i32 %16, 16
  %19 = or i32 %18, %17
  %20 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %21 = load ptr, ptr %20, align 4
  %22 = ptrtoint ptr %21 to i32
  %23 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %24 = inttoptr i32 %23 to ptr
  %25 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %24) #11, !srcloc !12
  %26 = add i32 %25, %22
  %27 = inttoptr i32 %26 to ptr
  %28 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %29 = load volatile ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %4
  %32 = load volatile ptr, ptr %27, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %62, label %34

34:                                               ; preds = %31, %4
  %35 = add i32 %9, 32
  %36 = add i32 %35, %16
  %37 = and i32 %36, -8
  %38 = add i32 %37, -4
  %39 = call ptr @perf_trace_buf_alloc(i32 noundef %38, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %40 = icmp eq ptr %39, null
  br i1 %40, label %62, label %41

41:                                               ; preds = %34
  %42 = load ptr, ptr %5, align 4
  %43 = call ptr @llvm.returnaddress(i32 0) #15
  %44 = ptrtoint ptr %43 to i32
  %45 = getelementptr [18 x i32], ptr %42, i32 0, i32 15
  store i32 %44, ptr %45, align 4
  %46 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %47 = ptrtoint ptr %46 to i32
  %48 = getelementptr [18 x i32], ptr %42, i32 0, i32 11
  store i32 %47, ptr %48, align 4
  %49 = call i32 @llvm.read_register.i32(metadata !0) #15
  %50 = getelementptr [18 x i32], ptr %42, i32 0, i32 13
  store i32 %49, ptr %50, align 4
  %51 = getelementptr [18 x i32], ptr %42, i32 0, i32 16
  store i32 19, ptr %51, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %39, i32 0, i32 2
  store i32 %12, ptr %52, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %39, i32 0, i32 3
  store i32 %19, ptr %53, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %39, i32 0, i32 1
  store i32 %3, ptr %54, align 4
  %55 = getelementptr i8, ptr %39, i32 20
  %56 = call ptr @strcpy(ptr noundef %55, ptr noundef %8)
  %57 = and i32 %17, 65535
  %58 = getelementptr i8, ptr %39, i32 %57
  %59 = call ptr @strcpy(ptr noundef %58, ptr noundef %14)
  %60 = load i32, ptr %6, align 4
  %61 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %39, i32 noundef %38, i32 noundef %60, ptr noundef %0, i64 noundef 1, ptr noundef %61, ptr noundef %27, ptr noundef null) #15
  br label %62

62:                                               ; preds = %41, %34, %31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_clone_err(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %15, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %22

22:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_clone_err(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %21, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = load i32, ptr %5, align 4
  %39 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #15
  br label %40

40:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_task_status(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %29, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 20) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %18 = load i16, ptr %17, align 8
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %14, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.rpc_clnt, ptr %22, i32 0, i32 1
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %14, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %14, i32 0, i32 3
  store i32 %27, ptr %28, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %29

29:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_task_status(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %47, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %47, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %34 = load i16, ptr %33, align 8
  %35 = zext i16 %34 to i32
  %36 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %20, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.rpc_clnt, ptr %38, i32 0, i32 1
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %20, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %20, i32 0, i32 3
  store i32 %43, ptr %44, align 4
  %45 = load i32, ptr %4, align 4
  %46 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %45, ptr noundef %0, i64 noundef 1, ptr noundef %46, ptr noundef %12, ptr noundef null) #15
  br label %47

47:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_request(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %76, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.rpc_clnt, ptr %15, i32 0, i32 24
  %17 = load ptr, ptr %16, align 4
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  %20 = select i1 %19, ptr @.str.72, ptr %18
  %21 = tail call i32 @strlen(ptr noundef nonnull %20) #15
  %22 = shl i32 %21, 16
  %23 = add i32 %22, 65536
  %24 = or i32 %23, 32
  %25 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  %26 = icmp eq ptr %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %13
  %28 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %29

29:                                               ; preds = %27, %13
  %30 = phi ptr [ %28, %27 ], [ @.str.72, %13 ]
  %31 = tail call i32 @strlen(ptr noundef %30) #15
  %32 = add i32 %31, 1
  %33 = add i32 %21, 33
  %34 = add i32 %33, %32
  %35 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %34) #15
  %36 = icmp eq ptr %35, null
  br i1 %36, label %76, label %37

37:                                               ; preds = %29
  %38 = shl i32 %32, 16
  %39 = or i32 %38, %33
  %40 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %35, i32 0, i32 5
  store i32 %24, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %35, i32 0, i32 6
  store i32 %39, ptr %41, align 4
  %42 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %43 = load i16, ptr %42, align 8
  %44 = zext i16 %43 to i32
  %45 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %35, i32 0, i32 1
  store i32 %44, ptr %45, align 4
  %46 = load ptr, ptr %14, align 8
  %47 = getelementptr inbounds %struct.rpc_clnt, ptr %46, i32 0, i32 1
  %48 = load i32, ptr %47, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %35, i32 0, i32 2
  store i32 %48, ptr %49, align 4
  %50 = load ptr, ptr %14, align 8
  %51 = getelementptr inbounds %struct.rpc_clnt, ptr %50, i32 0, i32 9
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %35, i32 0, i32 3
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 20
  %55 = load i16, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %35, i32 0, i32 4
  %57 = trunc i16 %55 to i8
  %58 = and i8 %57, 1
  store i8 %58, ptr %56, align 4
  %59 = getelementptr i8, ptr %35, i32 32
  %60 = load ptr, ptr %14, align 8
  %61 = getelementptr inbounds %struct.rpc_clnt, ptr %60, i32 0, i32 24
  %62 = load ptr, ptr %61, align 4
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, null
  %65 = select i1 %64, ptr @.str.72, ptr %63
  %66 = call ptr @strcpy(ptr noundef %59, ptr noundef nonnull %65)
  %67 = and i32 %33, 65535
  %68 = getelementptr i8, ptr %35, i32 %67
  %69 = call ptr @rpc_proc_name(ptr noundef %1) #15
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %37
  %72 = call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %73

73:                                               ; preds = %71, %37
  %74 = phi ptr [ %72, %71 ], [ @.str.72, %37 ]
  %75 = call ptr @strcpy(ptr noundef %68, ptr noundef %74)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %76

76:                                               ; preds = %73, %29, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_request(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.rpc_clnt, ptr %6, i32 0, i32 24
  %8 = load ptr, ptr %7, align 4
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  %11 = select i1 %10, ptr @.str.72, ptr %9
  %12 = tail call i32 @strlen(ptr noundef nonnull %11) #15
  %13 = shl i32 %12, 16
  %14 = add i32 %13, 65536
  %15 = or i32 %14, 32
  %16 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  %17 = icmp eq ptr %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %20

20:                                               ; preds = %18, %2
  %21 = phi ptr [ %19, %18 ], [ @.str.72, %2 ]
  %22 = tail call i32 @strlen(ptr noundef %21) #15
  %23 = add i32 %22, 1
  %24 = add i32 %12, 33
  %25 = shl i32 %23, 16
  %26 = or i32 %25, %24
  %27 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %28 = load ptr, ptr %27, align 4
  %29 = ptrtoint ptr %28 to i32
  %30 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = inttoptr i32 %30 to ptr
  %32 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %31) #11, !srcloc !12
  %33 = add i32 %32, %29
  %34 = inttoptr i32 %33 to ptr
  %35 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %36 = load volatile ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %41

38:                                               ; preds = %20
  %39 = load volatile ptr, ptr %34, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %97, label %41

41:                                               ; preds = %38, %20
  %42 = add i32 %12, 44
  %43 = add i32 %42, %23
  %44 = and i32 %43, -8
  %45 = add i32 %44, -4
  %46 = call ptr @perf_trace_buf_alloc(i32 noundef %45, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %47 = icmp eq ptr %46, null
  br i1 %47, label %97, label %48

48:                                               ; preds = %41
  %49 = load ptr, ptr %3, align 4
  %50 = call ptr @llvm.returnaddress(i32 0) #15
  %51 = ptrtoint ptr %50 to i32
  %52 = getelementptr [18 x i32], ptr %49, i32 0, i32 15
  store i32 %51, ptr %52, align 4
  %53 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %54 = ptrtoint ptr %53 to i32
  %55 = getelementptr [18 x i32], ptr %49, i32 0, i32 11
  store i32 %54, ptr %55, align 4
  %56 = call i32 @llvm.read_register.i32(metadata !0) #15
  %57 = getelementptr [18 x i32], ptr %49, i32 0, i32 13
  store i32 %56, ptr %57, align 4
  %58 = getelementptr [18 x i32], ptr %49, i32 0, i32 16
  store i32 19, ptr %58, align 4
  %59 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %46, i32 0, i32 5
  store i32 %15, ptr %59, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %46, i32 0, i32 6
  store i32 %26, ptr %60, align 4
  %61 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %62 = load i16, ptr %61, align 8
  %63 = zext i16 %62 to i32
  %64 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %46, i32 0, i32 1
  store i32 %63, ptr %64, align 4
  %65 = load ptr, ptr %5, align 8
  %66 = getelementptr inbounds %struct.rpc_clnt, ptr %65, i32 0, i32 1
  %67 = load i32, ptr %66, align 4
  %68 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %46, i32 0, i32 2
  store i32 %67, ptr %68, align 4
  %69 = load ptr, ptr %5, align 8
  %70 = getelementptr inbounds %struct.rpc_clnt, ptr %69, i32 0, i32 9
  %71 = load i32, ptr %70, align 4
  %72 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %46, i32 0, i32 3
  store i32 %71, ptr %72, align 4
  %73 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 20
  %74 = load i16, ptr %73, align 4
  %75 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %46, i32 0, i32 4
  %76 = trunc i16 %74 to i8
  %77 = and i8 %76, 1
  store i8 %77, ptr %75, align 4
  %78 = getelementptr i8, ptr %46, i32 32
  %79 = load ptr, ptr %5, align 8
  %80 = getelementptr inbounds %struct.rpc_clnt, ptr %79, i32 0, i32 24
  %81 = load ptr, ptr %80, align 4
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  %84 = select i1 %83, ptr @.str.72, ptr %82
  %85 = call ptr @strcpy(ptr noundef %78, ptr noundef nonnull %84)
  %86 = and i32 %24, 65535
  %87 = getelementptr i8, ptr %46, i32 %86
  %88 = call ptr @rpc_proc_name(ptr noundef %1) #15
  %89 = icmp eq ptr %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %48
  %91 = call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %92

92:                                               ; preds = %90, %48
  %93 = phi ptr [ %91, %90 ], [ @.str.72, %48 ]
  %94 = call ptr @strcpy(ptr noundef %87, ptr noundef %93)
  %95 = load i32, ptr %4, align 4
  %96 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %46, i32 noundef %45, i32 noundef %95, ptr noundef %0, i64 noundef 1, ptr noundef %96, ptr noundef %34, ptr noundef null) #15
  br label %97

97:                                               ; preds = %92, %41, %38
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_task_running(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %41, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 32) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %41, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %19 = load ptr, ptr %18, align 8
  %20 = icmp eq ptr %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.rpc_clnt, ptr %19, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi i32 [ %23, %21 ], [ -1, %17 ]
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %15, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %28 = load i16, ptr %27, align 8
  %29 = zext i16 %28 to i32
  %30 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %15, i32 0, i32 1
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %15, i32 0, i32 3
  store ptr %2, ptr %31, align 4
  %32 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %15, i32 0, i32 4
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %15, i32 0, i32 5
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 20
  %39 = load i16, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %15, i32 0, i32 6
  store i16 %39, ptr %40, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %41

41:                                               ; preds = %24, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_task_running(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %59, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %59, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %35 = load ptr, ptr %34, align 8
  %36 = icmp eq ptr %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %struct.rpc_clnt, ptr %35, i32 0, i32 1
  %39 = load i32, ptr %38, align 4
  br label %40

40:                                               ; preds = %37, %23
  %41 = phi i32 [ %39, %37 ], [ -1, %23 ]
  %42 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %21, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %44 = load i16, ptr %43, align 8
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %21, i32 0, i32 1
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %21, i32 0, i32 3
  store ptr %2, ptr %47, align 4
  %48 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %21, i32 0, i32 4
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %21, i32 0, i32 5
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 20
  %55 = load i16, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %21, i32 0, i32 6
  store i16 %55, ptr %56, align 4
  %57 = load i32, ptr %5, align 4
  %58 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 36, i32 noundef %57, ptr noundef %0, i64 noundef 1, ptr noundef %58, ptr noundef %13, ptr noundef null) #15
  br label %59

59:                                               ; preds = %40, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_task_queued(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %74, label %14

14:                                               ; preds = %12, %9, %3
  %15 = icmp eq ptr %2, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.rpc_wait_queue, ptr %2, i32 0, i32 7
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  %20 = select i1 %19, ptr @.str.123, ptr %18
  br label %21

21:                                               ; preds = %16, %14
  %22 = phi ptr [ %20, %16 ], [ @.str.123, %14 ]
  %23 = tail call i32 @strlen(ptr noundef %22) #15
  %24 = add i32 %23, 37
  %25 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %24) #15
  %26 = icmp eq ptr %25, null
  br i1 %26, label %74, label %27

27:                                               ; preds = %21
  %28 = shl i32 %23, 16
  %29 = add i32 %28, 65572
  %30 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %25, i32 0, i32 7
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %32 = load ptr, ptr %31, align 8
  %33 = icmp eq ptr %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.rpc_clnt, ptr %32, i32 0, i32 1
  %36 = load i32, ptr %35, align 4
  br label %37

37:                                               ; preds = %34, %27
  %38 = phi i32 [ %36, %34 ], [ -1, %27 ]
  %39 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %25, i32 0, i32 2
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %41 = load i16, ptr %40, align 8
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %25, i32 0, i32 1
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 5
  %45 = load volatile i32, ptr %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %37
  %48 = load volatile i32, ptr @jiffies, align 64
  %49 = sub i32 %48, %45
  %50 = icmp slt i32 %49, 0
  %51 = sub i32 %45, %48
  br i1 %50, label %53, label %52

52:                                               ; preds = %47, %37
  br label %53

53:                                               ; preds = %52, %47
  %54 = phi i32 [ 0, %52 ], [ %51, %47 ]
  %55 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %25, i32 0, i32 3
  store i32 %54, ptr %55, align 4
  %56 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %57 = load i32, ptr %56, align 4
  %58 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %25, i32 0, i32 4
  store i32 %57, ptr %58, align 4
  %59 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  %60 = load i32, ptr %59, align 4
  %61 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %25, i32 0, i32 5
  store i32 %60, ptr %61, align 4
  %62 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 20
  %63 = load i16, ptr %62, align 4
  %64 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %25, i32 0, i32 6
  store i16 %63, ptr %64, align 4
  %65 = getelementptr i8, ptr %25, i32 36
  br i1 %15, label %71, label %66

66:                                               ; preds = %53
  %67 = getelementptr inbounds %struct.rpc_wait_queue, ptr %2, i32 0, i32 7
  %68 = load ptr, ptr %67, align 4
  %69 = icmp eq ptr %68, null
  %70 = select i1 %69, ptr @.str.123, ptr %68
  br label %71

71:                                               ; preds = %66, %53
  %72 = phi ptr [ %70, %66 ], [ @.str.123, %53 ]
  %73 = call ptr @strcpy(ptr noundef %65, ptr noundef %72)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %74

74:                                               ; preds = %71, %21, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_task_queued(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = icmp eq ptr %2, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.rpc_wait_queue, ptr %2, i32 0, i32 7
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  %11 = select i1 %10, ptr @.str.123, ptr %9
  br label %12

12:                                               ; preds = %7, %3
  %13 = phi ptr [ %11, %7 ], [ @.str.123, %3 ]
  %14 = tail call i32 @strlen(ptr noundef %13) #15
  %15 = shl i32 %14, 16
  %16 = add i32 %15, 65572
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %18 = load ptr, ptr %17, align 4
  %19 = ptrtoint ptr %18 to i32
  %20 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %21 = inttoptr i32 %20 to ptr
  %22 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %21) #11, !srcloc !12
  %23 = add i32 %22, %19
  %24 = inttoptr i32 %23 to ptr
  %25 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %26 = load volatile ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %12
  %29 = load volatile ptr, ptr %24, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %94, label %31

31:                                               ; preds = %28, %12
  %32 = add i32 %14, 48
  %33 = and i32 %32, -8
  %34 = add i32 %33, -4
  %35 = call ptr @perf_trace_buf_alloc(i32 noundef %34, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %36 = icmp eq ptr %35, null
  br i1 %36, label %94, label %37

37:                                               ; preds = %31
  %38 = load ptr, ptr %4, align 4
  %39 = call ptr @llvm.returnaddress(i32 0) #15
  %40 = ptrtoint ptr %39 to i32
  %41 = getelementptr [18 x i32], ptr %38, i32 0, i32 15
  store i32 %40, ptr %41, align 4
  %42 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %43 = ptrtoint ptr %42 to i32
  %44 = getelementptr [18 x i32], ptr %38, i32 0, i32 11
  store i32 %43, ptr %44, align 4
  %45 = call i32 @llvm.read_register.i32(metadata !0) #15
  %46 = getelementptr [18 x i32], ptr %38, i32 0, i32 13
  store i32 %45, ptr %46, align 4
  %47 = getelementptr [18 x i32], ptr %38, i32 0, i32 16
  store i32 19, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %35, i32 0, i32 7
  store i32 %16, ptr %48, align 4
  %49 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %50 = load ptr, ptr %49, align 8
  %51 = icmp eq ptr %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.rpc_clnt, ptr %50, i32 0, i32 1
  %54 = load i32, ptr %53, align 4
  br label %55

55:                                               ; preds = %52, %37
  %56 = phi i32 [ %54, %52 ], [ -1, %37 ]
  %57 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %35, i32 0, i32 2
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %59 = load i16, ptr %58, align 8
  %60 = zext i16 %59 to i32
  %61 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %35, i32 0, i32 1
  store i32 %60, ptr %61, align 4
  %62 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 5
  %63 = load volatile i32, ptr %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %55
  %66 = load volatile i32, ptr @jiffies, align 64
  %67 = sub i32 %66, %63
  %68 = icmp slt i32 %67, 0
  %69 = sub i32 %63, %66
  br i1 %68, label %71, label %70

70:                                               ; preds = %65, %55
  br label %71

71:                                               ; preds = %70, %65
  %72 = phi i32 [ 0, %70 ], [ %69, %65 ]
  %73 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %35, i32 0, i32 3
  store i32 %72, ptr %73, align 4
  %74 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %75 = load i32, ptr %74, align 4
  %76 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %35, i32 0, i32 4
  store i32 %75, ptr %76, align 4
  %77 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  %78 = load i32, ptr %77, align 4
  %79 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %35, i32 0, i32 5
  store i32 %78, ptr %79, align 4
  %80 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 20
  %81 = load i16, ptr %80, align 4
  %82 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %35, i32 0, i32 6
  store i16 %81, ptr %82, align 4
  %83 = getelementptr i8, ptr %35, i32 36
  br i1 %6, label %89, label %84

84:                                               ; preds = %71
  %85 = getelementptr inbounds %struct.rpc_wait_queue, ptr %2, i32 0, i32 7
  %86 = load ptr, ptr %85, align 4
  %87 = icmp eq ptr %86, null
  %88 = select i1 %87, ptr @.str.123, ptr %86
  br label %89

89:                                               ; preds = %84, %71
  %90 = phi ptr [ %88, %84 ], [ @.str.123, %71 ]
  %91 = call ptr @strcpy(ptr noundef %83, ptr noundef %90)
  %92 = load i32, ptr %5, align 4
  %93 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %35, i32 noundef %34, i32 noundef %92, ptr noundef %0, i64 noundef 1, ptr noundef %93, ptr noundef %24, ptr noundef null) #15
  br label %94

94:                                               ; preds = %89, %31, %28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_failure(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %26, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 16) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %18 = load i16, ptr %17, align 8
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %14, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.rpc_clnt, ptr %22, i32 0, i32 1
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %14, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %26

26:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_failure(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %44, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %34 = load i16, ptr %33, align 8
  %35 = zext i16 %34 to i32
  %36 = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %20, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.rpc_clnt, ptr %38, i32 0, i32 1
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %20, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = load i32, ptr %4, align 4
  %43 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %42, ptr noundef %0, i64 noundef 1, ptr noundef %43, ptr noundef %12, ptr noundef null) #15
  br label %44

44:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_reply_event(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %99, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.rpc_clnt, ptr %15, i32 0, i32 24
  %17 = load ptr, ptr %16, align 4
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  %20 = select i1 %19, ptr @.str.72, ptr %18
  %21 = tail call i32 @strlen(ptr noundef nonnull %20) #15
  %22 = add i32 %21, 1
  %23 = shl i32 %22, 16
  %24 = or i32 %23, 36
  %25 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  %26 = icmp eq ptr %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %13
  %28 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %29

29:                                               ; preds = %27, %13
  %30 = phi ptr [ %28, %27 ], [ @.str.72, %13 ]
  %31 = tail call i32 @strlen(ptr noundef %30) #15
  %32 = add i32 %31, 1
  %33 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 14
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.rpc_xprt, ptr %34, i32 0, i32 50
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  %38 = select i1 %37, ptr @.str.72, ptr %36
  %39 = add i32 %32, %22
  %40 = tail call i32 @strlen(ptr noundef nonnull %38) #15
  %41 = add i32 %40, 1
  %42 = add i32 %39, 36
  %43 = add i32 %42, %41
  %44 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %43) #15
  %45 = icmp eq ptr %44, null
  br i1 %45, label %99, label %46

46:                                               ; preds = %29
  %47 = shl i32 %41, 16
  %48 = or i32 %47, %42
  %49 = shl i32 %32, 16
  %50 = add i32 %21, 37
  %51 = or i32 %49, %50
  %52 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %44, i32 0, i32 4
  store i32 %24, ptr %52, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %44, i32 0, i32 6
  store i32 %51, ptr %53, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %44, i32 0, i32 7
  store i32 %48, ptr %54, align 4
  %55 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %56 = load i16, ptr %55, align 8
  %57 = zext i16 %56 to i32
  %58 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %44, i32 0, i32 1
  store i32 %57, ptr %58, align 4
  %59 = load ptr, ptr %14, align 8
  %60 = getelementptr inbounds %struct.rpc_clnt, ptr %59, i32 0, i32 1
  %61 = load i32, ptr %60, align 4
  %62 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %44, i32 0, i32 2
  store i32 %61, ptr %62, align 4
  %63 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 16
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.rpc_rqst, ptr %64, i32 0, i32 5
  %66 = load i32, ptr %65, align 4
  %67 = call i32 @llvm.bswap.i32(i32 %66)
  %68 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %44, i32 0, i32 3
  store i32 %67, ptr %68, align 4
  %69 = getelementptr i8, ptr %44, i32 36
  %70 = load ptr, ptr %14, align 8
  %71 = getelementptr inbounds %struct.rpc_clnt, ptr %70, i32 0, i32 24
  %72 = load ptr, ptr %71, align 4
  %73 = load ptr, ptr %72, align 4
  %74 = icmp eq ptr %73, null
  %75 = select i1 %74, ptr @.str.72, ptr %73
  %76 = call ptr @strcpy(ptr noundef %69, ptr noundef nonnull %75)
  %77 = load ptr, ptr %14, align 8
  %78 = getelementptr inbounds %struct.rpc_clnt, ptr %77, i32 0, i32 9
  %79 = load i32, ptr %78, align 4
  %80 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %44, i32 0, i32 5
  store i32 %79, ptr %80, align 4
  %81 = and i32 %50, 65535
  %82 = getelementptr i8, ptr %44, i32 %81
  %83 = call ptr @rpc_proc_name(ptr noundef %1) #15
  %84 = icmp eq ptr %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %46
  %86 = call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %87

87:                                               ; preds = %85, %46
  %88 = phi ptr [ %86, %85 ], [ @.str.72, %46 ]
  %89 = call ptr @strcpy(ptr noundef %82, ptr noundef %88)
  %90 = load i32, ptr %54, align 4
  %91 = and i32 %90, 65535
  %92 = getelementptr i8, ptr %44, i32 %91
  %93 = load ptr, ptr %33, align 4
  %94 = getelementptr inbounds %struct.rpc_xprt, ptr %93, i32 0, i32 50
  %95 = load ptr, ptr %94, align 4
  %96 = icmp eq ptr %95, null
  %97 = select i1 %96, ptr @.str.72, ptr %95
  %98 = call ptr @strcpy(ptr noundef %92, ptr noundef nonnull %97)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %99

99:                                               ; preds = %87, %29, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_reply_event(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.rpc_clnt, ptr %6, i32 0, i32 24
  %8 = load ptr, ptr %7, align 4
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  %11 = select i1 %10, ptr @.str.72, ptr %9
  %12 = tail call i32 @strlen(ptr noundef nonnull %11) #15
  %13 = add i32 %12, 1
  %14 = shl i32 %13, 16
  %15 = or i32 %14, 36
  %16 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  %17 = icmp eq ptr %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %20

20:                                               ; preds = %18, %2
  %21 = phi ptr [ %19, %18 ], [ @.str.72, %2 ]
  %22 = tail call i32 @strlen(ptr noundef %21) #15
  %23 = add i32 %22, 1
  %24 = add i32 %12, 37
  %25 = shl i32 %23, 16
  %26 = or i32 %25, %24
  %27 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 14
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.rpc_xprt, ptr %28, i32 0, i32 50
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  %32 = select i1 %31, ptr @.str.72, ptr %30
  %33 = add i32 %23, %13
  %34 = tail call i32 @strlen(ptr noundef nonnull %32) #15
  %35 = add i32 %34, 1
  %36 = add i32 %33, 36
  %37 = shl i32 %35, 16
  %38 = or i32 %37, %36
  %39 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %40 = load ptr, ptr %39, align 4
  %41 = ptrtoint ptr %40 to i32
  %42 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %43 = inttoptr i32 %42 to ptr
  %44 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %43) #11, !srcloc !12
  %45 = add i32 %44, %41
  %46 = inttoptr i32 %45 to ptr
  %47 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %48 = load volatile ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %20
  %51 = load volatile ptr, ptr %46, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %120, label %53

53:                                               ; preds = %50, %20
  %54 = add i32 %33, 47
  %55 = add i32 %54, %35
  %56 = and i32 %55, -8
  %57 = add i32 %56, -4
  %58 = call ptr @perf_trace_buf_alloc(i32 noundef %57, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %59 = icmp eq ptr %58, null
  br i1 %59, label %120, label %60

60:                                               ; preds = %53
  %61 = load ptr, ptr %3, align 4
  %62 = call ptr @llvm.returnaddress(i32 0) #15
  %63 = ptrtoint ptr %62 to i32
  %64 = getelementptr [18 x i32], ptr %61, i32 0, i32 15
  store i32 %63, ptr %64, align 4
  %65 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %66 = ptrtoint ptr %65 to i32
  %67 = getelementptr [18 x i32], ptr %61, i32 0, i32 11
  store i32 %66, ptr %67, align 4
  %68 = call i32 @llvm.read_register.i32(metadata !0) #15
  %69 = getelementptr [18 x i32], ptr %61, i32 0, i32 13
  store i32 %68, ptr %69, align 4
  %70 = getelementptr [18 x i32], ptr %61, i32 0, i32 16
  store i32 19, ptr %70, align 4
  %71 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %58, i32 0, i32 4
  store i32 %15, ptr %71, align 4
  %72 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %58, i32 0, i32 6
  store i32 %26, ptr %72, align 4
  %73 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %58, i32 0, i32 7
  store i32 %38, ptr %73, align 4
  %74 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %75 = load i16, ptr %74, align 8
  %76 = zext i16 %75 to i32
  %77 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %58, i32 0, i32 1
  store i32 %76, ptr %77, align 4
  %78 = load ptr, ptr %5, align 8
  %79 = getelementptr inbounds %struct.rpc_clnt, ptr %78, i32 0, i32 1
  %80 = load i32, ptr %79, align 4
  %81 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %58, i32 0, i32 2
  store i32 %80, ptr %81, align 4
  %82 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 16
  %83 = load ptr, ptr %82, align 4
  %84 = getelementptr inbounds %struct.rpc_rqst, ptr %83, i32 0, i32 5
  %85 = load i32, ptr %84, align 4
  %86 = call i32 @llvm.bswap.i32(i32 %85)
  %87 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %58, i32 0, i32 3
  store i32 %86, ptr %87, align 4
  %88 = getelementptr i8, ptr %58, i32 36
  %89 = load ptr, ptr %5, align 8
  %90 = getelementptr inbounds %struct.rpc_clnt, ptr %89, i32 0, i32 24
  %91 = load ptr, ptr %90, align 4
  %92 = load ptr, ptr %91, align 4
  %93 = icmp eq ptr %92, null
  %94 = select i1 %93, ptr @.str.72, ptr %92
  %95 = call ptr @strcpy(ptr noundef %88, ptr noundef nonnull %94)
  %96 = load ptr, ptr %5, align 8
  %97 = getelementptr inbounds %struct.rpc_clnt, ptr %96, i32 0, i32 9
  %98 = load i32, ptr %97, align 4
  %99 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %58, i32 0, i32 5
  store i32 %98, ptr %99, align 4
  %100 = and i32 %24, 65535
  %101 = getelementptr i8, ptr %58, i32 %100
  %102 = call ptr @rpc_proc_name(ptr noundef %1) #15
  %103 = icmp eq ptr %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %60
  %105 = call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %106

106:                                              ; preds = %104, %60
  %107 = phi ptr [ %105, %104 ], [ @.str.72, %60 ]
  %108 = call ptr @strcpy(ptr noundef %101, ptr noundef %107)
  %109 = load i32, ptr %73, align 4
  %110 = and i32 %109, 65535
  %111 = getelementptr i8, ptr %58, i32 %110
  %112 = load ptr, ptr %27, align 4
  %113 = getelementptr inbounds %struct.rpc_xprt, ptr %112, i32 0, i32 50
  %114 = load ptr, ptr %113, align 4
  %115 = icmp eq ptr %114, null
  %116 = select i1 %115, ptr @.str.72, ptr %114
  %117 = call ptr @strcpy(ptr noundef %111, ptr noundef nonnull %116)
  %118 = load i32, ptr %4, align 4
  %119 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %58, i32 noundef %57, i32 noundef %118, ptr noundef %0, i64 noundef 1, ptr noundef %119, ptr noundef %46, ptr noundef null) #15
  br label %120

120:                                              ; preds = %106, %53, %50
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_buf_alloc(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %37, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 28) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %19 = load i16, ptr %18, align 8
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %15, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.rpc_clnt, ptr %23, i32 0, i32 1
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %15, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 16
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.rpc_rqst, ptr %28, i32 0, i32 15
  %30 = load i32, ptr %29, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %15, i32 0, i32 3
  store i32 %30, ptr %31, align 4
  %32 = load ptr, ptr %27, align 4
  %33 = getelementptr inbounds %struct.rpc_rqst, ptr %32, i32 0, i32 17
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %15, i32 0, i32 4
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %15, i32 0, i32 5
  store i32 %2, ptr %36, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %37

37:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_buf_alloc(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %55, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %55, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %35 = load i16, ptr %34, align 8
  %36 = zext i16 %35 to i32
  %37 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %21, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds %struct.rpc_clnt, ptr %39, i32 0, i32 1
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %21, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 16
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.rpc_rqst, ptr %44, i32 0, i32 15
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %21, i32 0, i32 3
  store i32 %46, ptr %47, align 4
  %48 = load ptr, ptr %43, align 4
  %49 = getelementptr inbounds %struct.rpc_rqst, ptr %48, i32 0, i32 17
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %21, i32 0, i32 4
  store i32 %50, ptr %51, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %21, i32 0, i32 5
  store i32 %2, ptr %52, align 4
  %53 = load i32, ptr %5, align 4
  %54 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 28, i32 noundef %53, ptr noundef %0, i64 noundef 1, ptr noundef %54, ptr noundef %13, ptr noundef null) #15
  br label %55

55:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_call_rpcerror(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %30, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 24) #15
  %17 = icmp eq ptr %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %struct.rpc_clnt, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %16, i32 0, i32 2
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %25 = load i16, ptr %24, align 8
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %16, i32 0, i32 1
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %16, i32 0, i32 3
  store i32 %2, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %16, i32 0, i32 4
  store i32 %3, ptr %29, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %30

30:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_call_rpcerror(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #11, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %48, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %23 = icmp eq ptr %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #15
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #15
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %struct.rpc_clnt, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %22, i32 0, i32 2
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %41 = load i16, ptr %40, align 8
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %22, i32 0, i32 1
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %22, i32 0, i32 3
  store i32 %2, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %22, i32 0, i32 4
  store i32 %3, ptr %45, align 4
  %46 = load i32, ptr %6, align 4
  %47 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 28, i32 noundef %46, ptr noundef %0, i64 noundef 1, ptr noundef %47, ptr noundef %14, ptr noundef null) #15
  br label %48

48:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_stats_latency(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %15, label %116, label %16

16:                                               ; preds = %14, %11, %5
  %17 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %struct.rpc_clnt, ptr %18, i32 0, i32 24
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  %23 = select i1 %22, ptr @.str.72, ptr %21
  %24 = tail call i32 @strlen(ptr noundef nonnull %23) #15
  %25 = shl i32 %24, 16
  %26 = add i32 %25, 65536
  %27 = or i32 %26, 44
  %28 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  %29 = icmp eq ptr %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %16
  %31 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %32

32:                                               ; preds = %30, %16
  %33 = phi ptr [ %31, %30 ], [ @.str.72, %16 ]
  %34 = tail call i32 @strlen(ptr noundef %33) #15
  %35 = add i32 %34, 1
  %36 = add i32 %24, 45
  %37 = add i32 %36, %35
  %38 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef %37) #15
  %39 = icmp eq ptr %38, null
  br i1 %39, label %116, label %40

40:                                               ; preds = %32
  %41 = shl i32 %35, 16
  %42 = or i32 %41, %36
  %43 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 5
  store i32 %27, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 6
  store i32 %42, ptr %44, align 4
  %45 = load ptr, ptr %17, align 8
  %46 = getelementptr inbounds %struct.rpc_clnt, ptr %45, i32 0, i32 1
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 2
  store i32 %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %50 = load i16, ptr %49, align 8
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 1
  store i32 %51, ptr %52, align 4
  %53 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 16
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.rpc_rqst, ptr %54, i32 0, i32 5
  %56 = load i32, ptr %55, align 4
  %57 = call i32 @llvm.bswap.i32(i32 %56)
  %58 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 3
  store i32 %57, ptr %58, align 4
  %59 = load ptr, ptr %17, align 8
  %60 = getelementptr inbounds %struct.rpc_clnt, ptr %59, i32 0, i32 9
  %61 = load i32, ptr %60, align 4
  %62 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 4
  store i32 %61, ptr %62, align 4
  %63 = getelementptr i8, ptr %38, i32 44
  %64 = load ptr, ptr %17, align 8
  %65 = getelementptr inbounds %struct.rpc_clnt, ptr %64, i32 0, i32 24
  %66 = load ptr, ptr %65, align 4
  %67 = load ptr, ptr %66, align 4
  %68 = icmp eq ptr %67, null
  %69 = select i1 %68, ptr @.str.72, ptr %67
  %70 = call ptr @strcpy(ptr noundef %63, ptr noundef nonnull %69)
  %71 = and i32 %36, 65535
  %72 = getelementptr i8, ptr %38, i32 %71
  %73 = call ptr @rpc_proc_name(ptr noundef %1) #15
  %74 = icmp eq ptr %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %40
  %76 = call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %77

77:                                               ; preds = %75, %40
  %78 = phi ptr [ %76, %75 ], [ @.str.72, %40 ]
  %79 = call ptr @strcpy(ptr noundef %72, ptr noundef %78)
  %80 = call i64 @llvm.abs.i64(i64 %2, i1 false) #15
  %81 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %80, i32 0) #16, !srcloc !13
  %82 = extractvalue { i64, i32 } %81, 0
  %83 = extractvalue { i64, i32 } %81, 1
  %84 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %80, i64 %82, i32 %83) #16, !srcloc !14
  %85 = extractvalue { i64, i32 } %84, 0
  %86 = icmp slt i64 %2, 0
  %87 = lshr i64 %85, 9
  %88 = sub nsw i64 0, %87
  %89 = select i1 %86, i64 %88, i64 %87
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 7
  store i32 %90, ptr %91, align 4
  %92 = call i64 @llvm.abs.i64(i64 %3, i1 false) #15
  %93 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %92, i32 0) #16, !srcloc !13
  %94 = extractvalue { i64, i32 } %93, 0
  %95 = extractvalue { i64, i32 } %93, 1
  %96 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %92, i64 %94, i32 %95) #16, !srcloc !14
  %97 = extractvalue { i64, i32 } %96, 0
  %98 = icmp slt i64 %3, 0
  %99 = lshr i64 %97, 9
  %100 = sub nsw i64 0, %99
  %101 = select i1 %98, i64 %100, i64 %99
  %102 = trunc i64 %101 to i32
  %103 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 8
  store i32 %102, ptr %103, align 4
  %104 = call i64 @llvm.abs.i64(i64 %4, i1 false) #15
  %105 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %104, i32 0) #16, !srcloc !13
  %106 = extractvalue { i64, i32 } %105, 0
  %107 = extractvalue { i64, i32 } %105, 1
  %108 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %104, i64 %106, i32 %107) #16, !srcloc !14
  %109 = extractvalue { i64, i32 } %108, 0
  %110 = icmp slt i64 %4, 0
  %111 = lshr i64 %109, 9
  %112 = sub nsw i64 0, %111
  %113 = select i1 %110, i64 %112, i64 %111
  %114 = trunc i64 %113 to i32
  %115 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %38, i32 0, i32 9
  store i32 %114, ptr %115, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #15
  br label %116

116:                                              ; preds = %77, %32, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_stats_latency(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #15
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.rpc_clnt, ptr %9, i32 0, i32 24
  %11 = load ptr, ptr %10, align 4
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  %14 = select i1 %13, ptr @.str.72, ptr %12
  %15 = tail call i32 @strlen(ptr noundef nonnull %14) #15
  %16 = shl i32 %15, 16
  %17 = add i32 %16, 65536
  %18 = or i32 %17, 44
  %19 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  %20 = icmp eq ptr %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %5
  %22 = tail call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %23

23:                                               ; preds = %21, %5
  %24 = phi ptr [ %22, %21 ], [ @.str.72, %5 ]
  %25 = tail call i32 @strlen(ptr noundef %24) #15
  %26 = add i32 %25, 1
  %27 = add i32 %15, 45
  %28 = shl i32 %26, 16
  %29 = or i32 %28, %27
  %30 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %31 = load ptr, ptr %30, align 4
  %32 = ptrtoint ptr %31 to i32
  %33 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %34 = inttoptr i32 %33 to ptr
  %35 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %34) #11, !srcloc !12
  %36 = add i32 %35, %32
  %37 = inttoptr i32 %36 to ptr
  %38 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %39 = load volatile ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %23
  %42 = load volatile ptr, ptr %37, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %137, label %44

44:                                               ; preds = %41, %23
  %45 = add i32 %15, 56
  %46 = add i32 %45, %26
  %47 = and i32 %46, -8
  %48 = add i32 %47, -4
  %49 = call ptr @perf_trace_buf_alloc(i32 noundef %48, ptr noundef nonnull %6, ptr noundef nonnull %7) #15
  %50 = icmp eq ptr %49, null
  br i1 %50, label %137, label %51

51:                                               ; preds = %44
  %52 = load ptr, ptr %6, align 4
  %53 = call ptr @llvm.returnaddress(i32 0) #15
  %54 = ptrtoint ptr %53 to i32
  %55 = getelementptr [18 x i32], ptr %52, i32 0, i32 15
  store i32 %54, ptr %55, align 4
  %56 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %57 = ptrtoint ptr %56 to i32
  %58 = getelementptr [18 x i32], ptr %52, i32 0, i32 11
  store i32 %57, ptr %58, align 4
  %59 = call i32 @llvm.read_register.i32(metadata !0) #15
  %60 = getelementptr [18 x i32], ptr %52, i32 0, i32 13
  store i32 %59, ptr %60, align 4
  %61 = getelementptr [18 x i32], ptr %52, i32 0, i32 16
  store i32 19, ptr %61, align 4
  %62 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 5
  store i32 %18, ptr %62, align 4
  %63 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 6
  store i32 %29, ptr %63, align 4
  %64 = load ptr, ptr %8, align 8
  %65 = getelementptr inbounds %struct.rpc_clnt, ptr %64, i32 0, i32 1
  %66 = load i32, ptr %65, align 4
  %67 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 2
  store i32 %66, ptr %67, align 4
  %68 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %69 = load i16, ptr %68, align 8
  %70 = zext i16 %69 to i32
  %71 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 1
  store i32 %70, ptr %71, align 4
  %72 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 16
  %73 = load ptr, ptr %72, align 4
  %74 = getelementptr inbounds %struct.rpc_rqst, ptr %73, i32 0, i32 5
  %75 = load i32, ptr %74, align 4
  %76 = call i32 @llvm.bswap.i32(i32 %75)
  %77 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 3
  store i32 %76, ptr %77, align 4
  %78 = load ptr, ptr %8, align 8
  %79 = getelementptr inbounds %struct.rpc_clnt, ptr %78, i32 0, i32 9
  %80 = load i32, ptr %79, align 4
  %81 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 4
  store i32 %80, ptr %81, align 4
  %82 = getelementptr i8, ptr %49, i32 44
  %83 = load ptr, ptr %8, align 8
  %84 = getelementptr inbounds %struct.rpc_clnt, ptr %83, i32 0, i32 24
  %85 = load ptr, ptr %84, align 4
  %86 = load ptr, ptr %85, align 4
  %87 = icmp eq ptr %86, null
  %88 = select i1 %87, ptr @.str.72, ptr %86
  %89 = call ptr @strcpy(ptr noundef %82, ptr noundef nonnull %88)
  %90 = and i32 %27, 65535
  %91 = getelementptr i8, ptr %49, i32 %90
  %92 = call ptr @rpc_proc_name(ptr noundef %1) #15
  %93 = icmp eq ptr %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %51
  %95 = call ptr @rpc_proc_name(ptr noundef %1) #15
  br label %96

96:                                               ; preds = %94, %51
  %97 = phi ptr [ %95, %94 ], [ @.str.72, %51 ]
  %98 = call ptr @strcpy(ptr noundef %91, ptr noundef %97)
  %99 = call i64 @llvm.abs.i64(i64 %2, i1 false) #15
  %100 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %99, i32 0) #16, !srcloc !13
  %101 = extractvalue { i64, i32 } %100, 0
  %102 = extractvalue { i64, i32 } %100, 1
  %103 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %99, i64 %101, i32 %102) #16, !srcloc !14
  %104 = extractvalue { i64, i32 } %103, 0
  %105 = icmp slt i64 %2, 0
  %106 = lshr i64 %104, 9
  %107 = sub nsw i64 0, %106
  %108 = select i1 %105, i64 %107, i64 %106
  %109 = trunc i64 %108 to i32
  %110 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 7
  store i32 %109, ptr %110, align 4
  %111 = call i64 @llvm.abs.i64(i64 %3, i1 false) #15
  %112 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %111, i32 0) #16, !srcloc !13
  %113 = extractvalue { i64, i32 } %112, 0
  %114 = extractvalue { i64, i32 } %112, 1
  %115 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %111, i64 %113, i32 %114) #16, !srcloc !14
  %116 = extractvalue { i64, i32 } %115, 0
  %117 = icmp slt i64 %3, 0
  %118 = lshr i64 %116, 9
  %119 = sub nsw i64 0, %118
  %120 = select i1 %117, i64 %119, i64 %118
  %121 = trunc i64 %120 to i32
  %122 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 8
  store i32 %121, ptr %122, align 4
  %123 = call i64 @llvm.abs.i64(i64 %4, i1 false) #15
  %124 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %123, i32 0) #16, !srcloc !13
  %125 = extractvalue { i64, i32 } %124, 0
  %126 = extractvalue { i64, i32 } %124, 1
  %127 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %123, i64 %125, i32 %126) #16, !srcloc !14
  %128 = extractvalue { i64, i32 } %127, 0
  %129 = icmp slt i64 %4, 0
  %130 = lshr i64 %128, 9
  %131 = sub nsw i64 0, %130
  %132 = select i1 %129, i64 %131, i64 %130
  %133 = trunc i64 %132 to i32
  %134 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %49, i32 0, i32 9
  store i32 %133, ptr %134, align 4
  %135 = load i32, ptr %7, align 4
  %136 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %49, i32 noundef %48, i32 noundef %135, ptr noundef %0, i64 noundef 1, ptr noundef %136, ptr noundef %37, ptr noundef null) #15
  br label %137

137:                                              ; preds = %96, %44, %41
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xdr_overflow(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %124, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 7
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.rpc_rqst, ptr %16, i32 0, i32 3
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.rpc_task, ptr %20, i32 0, i32 13
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.rpc_clnt, ptr %22, i32 0, i32 24
  %24 = load ptr, ptr %23, align 4
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  %27 = select i1 %26, ptr @.str.72, ptr %25
  %28 = tail call i32 @strlen(ptr noundef nonnull %27) #15
  %29 = getelementptr inbounds %struct.rpc_task, ptr %20, i32 0, i32 10
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds %struct.rpc_procinfo, ptr %30, i32 0, i32 7
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  %34 = select i1 %33, ptr @.str.72, ptr %32
  br label %35

35:                                               ; preds = %18, %14
  %36 = phi i32 [ %28, %18 ], [ 7, %14 ]
  %37 = phi ptr [ %34, %18 ], [ @.str.123, %14 ]
  %38 = tail call i32 @strlen(ptr noundef nonnull %37) #15
  %39 = add i32 %38, 1
  %40 = add i32 %36, 65
  %41 = add i32 %40, %39
  %42 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %41) #15
  %43 = icmp eq ptr %42, null
  br i1 %43, label %124, label %44

44:                                               ; preds = %35
  %45 = shl i32 %39, 16
  %46 = or i32 %45, %40
  %47 = shl i32 %36, 16
  %48 = add i32 %47, 65600
  %49 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 13
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 14
  store i32 %46, ptr %50, align 4
  %51 = load ptr, ptr %15, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %86, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %struct.rpc_rqst, ptr %51, i32 0, i32 3
  %55 = load ptr, ptr %54, align 4
  %56 = getelementptr inbounds %struct.rpc_task, ptr %55, i32 0, i32 22
  %57 = load i16, ptr %56, align 8
  %58 = zext i16 %57 to i32
  %59 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 1
  store i32 %58, ptr %59, align 4
  %60 = getelementptr inbounds %struct.rpc_task, ptr %55, i32 0, i32 13
  %61 = load ptr, ptr %60, align 8
  %62 = getelementptr inbounds %struct.rpc_clnt, ptr %61, i32 0, i32 1
  %63 = load i32, ptr %62, align 4
  %64 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 2
  store i32 %63, ptr %64, align 4
  %65 = getelementptr i8, ptr %42, i32 64
  %66 = load ptr, ptr %60, align 8
  %67 = getelementptr inbounds %struct.rpc_clnt, ptr %66, i32 0, i32 24
  %68 = load ptr, ptr %67, align 4
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  %71 = select i1 %70, ptr @.str.72, ptr %69
  %72 = call ptr @strcpy(ptr noundef %65, ptr noundef nonnull %71)
  %73 = load ptr, ptr %60, align 8
  %74 = getelementptr inbounds %struct.rpc_clnt, ptr %73, i32 0, i32 9
  %75 = load i32, ptr %74, align 4
  %76 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 3
  store i32 %75, ptr %76, align 4
  %77 = and i32 %40, 65535
  %78 = getelementptr i8, ptr %42, i32 %77
  %79 = getelementptr inbounds %struct.rpc_task, ptr %55, i32 0, i32 10
  %80 = load ptr, ptr %79, align 8
  %81 = getelementptr inbounds %struct.rpc_procinfo, ptr %80, i32 0, i32 7
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  %84 = select i1 %83, ptr @.str.72, ptr %82
  %85 = call ptr @strcpy(ptr noundef %78, ptr noundef nonnull %84)
  br label %93

86:                                               ; preds = %44
  %87 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 1
  store i32 -1, ptr %87, align 4
  %88 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 2
  store i32 -1, ptr %88, align 4
  %89 = getelementptr i8, ptr %42, i32 64
  store i64 31093567915781749, ptr %89, align 1
  %90 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 3
  store i32 0, ptr %90, align 4
  %91 = and i32 %40, 65535
  %92 = getelementptr i8, ptr %42, i32 %91
  store i64 31093567915781749, ptr %92, align 1
  br label %93

93:                                               ; preds = %86, %53
  %94 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 4
  store i32 %2, ptr %94, align 4
  %95 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 2
  %96 = load ptr, ptr %95, align 4
  %97 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 5
  store ptr %96, ptr %97, align 4
  %98 = load ptr, ptr %1, align 4
  %99 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 6
  store ptr %98, ptr %99, align 4
  %100 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %101 = load ptr, ptr %100, align 4
  %102 = load ptr, ptr %101, align 4
  %103 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 7
  store ptr %102, ptr %103, align 4
  %104 = load ptr, ptr %100, align 4
  %105 = getelementptr inbounds %struct.kvec, ptr %104, i32 0, i32 1
  %106 = load i32, ptr %105, align 4
  %107 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 8
  store i32 %106, ptr %107, align 4
  %108 = load ptr, ptr %100, align 4
  %109 = getelementptr inbounds %struct.xdr_buf, ptr %108, i32 0, i32 5
  %110 = load i32, ptr %109, align 4
  %111 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 11
  store i32 %110, ptr %111, align 4
  %112 = load ptr, ptr %100, align 4
  %113 = getelementptr inbounds %struct.xdr_buf, ptr %112, i32 0, i32 1
  %114 = load ptr, ptr %113, align 4
  %115 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 9
  store ptr %114, ptr %115, align 4
  %116 = load ptr, ptr %100, align 4
  %117 = getelementptr inbounds %struct.xdr_buf, ptr %116, i32 0, i32 1, i32 0, i32 1
  %118 = load i32, ptr %117, align 4
  %119 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 10
  store i32 %118, ptr %119, align 4
  %120 = load ptr, ptr %100, align 4
  %121 = getelementptr inbounds %struct.xdr_buf, ptr %120, i32 0, i32 8
  %122 = load i32, ptr %121, align 4
  %123 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %42, i32 0, i32 12
  store i32 %122, ptr %123, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %124

124:                                              ; preds = %93, %35, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xdr_overflow(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 7
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 3
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.rpc_task, ptr %11, i32 0, i32 13
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %struct.rpc_clnt, ptr %13, i32 0, i32 24
  %15 = load ptr, ptr %14, align 4
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  %18 = select i1 %17, ptr @.str.72, ptr %16
  %19 = tail call i32 @strlen(ptr noundef nonnull %18) #15
  %20 = getelementptr inbounds %struct.rpc_task, ptr %11, i32 0, i32 10
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.rpc_procinfo, ptr %21, i32 0, i32 7
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  %25 = select i1 %24, ptr @.str.72, ptr %23
  br label %26

26:                                               ; preds = %9, %3
  %27 = phi i32 [ %19, %9 ], [ 7, %3 ]
  %28 = phi ptr [ %25, %9 ], [ @.str.123, %3 ]
  %29 = shl i32 %27, 16
  %30 = add i32 %29, 65536
  %31 = or i32 %30, 64
  %32 = tail call i32 @strlen(ptr noundef nonnull %28) #15
  %33 = add i32 %32, 1
  %34 = add i32 %27, 65
  %35 = shl i32 %33, 16
  %36 = or i32 %35, %34
  %37 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %38 = load ptr, ptr %37, align 4
  %39 = ptrtoint ptr %38 to i32
  %40 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %41 = inttoptr i32 %40 to ptr
  %42 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %41) #11, !srcloc !12
  %43 = add i32 %42, %39
  %44 = inttoptr i32 %43 to ptr
  %45 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %46 = load volatile ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %26
  %49 = load volatile ptr, ptr %44, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %146, label %51

51:                                               ; preds = %48, %26
  %52 = add i32 %27, 76
  %53 = add i32 %52, %33
  %54 = and i32 %53, -8
  %55 = add i32 %54, -4
  %56 = call ptr @perf_trace_buf_alloc(i32 noundef %55, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %57 = icmp eq ptr %56, null
  br i1 %57, label %146, label %58

58:                                               ; preds = %51
  %59 = load ptr, ptr %4, align 4
  %60 = call ptr @llvm.returnaddress(i32 0) #15
  %61 = ptrtoint ptr %60 to i32
  %62 = getelementptr [18 x i32], ptr %59, i32 0, i32 15
  store i32 %61, ptr %62, align 4
  %63 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %64 = ptrtoint ptr %63 to i32
  %65 = getelementptr [18 x i32], ptr %59, i32 0, i32 11
  store i32 %64, ptr %65, align 4
  %66 = call i32 @llvm.read_register.i32(metadata !0) #15
  %67 = getelementptr [18 x i32], ptr %59, i32 0, i32 13
  store i32 %66, ptr %67, align 4
  %68 = getelementptr [18 x i32], ptr %59, i32 0, i32 16
  store i32 19, ptr %68, align 4
  %69 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 13
  store i32 %31, ptr %69, align 4
  %70 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 14
  store i32 %36, ptr %70, align 4
  %71 = load ptr, ptr %6, align 4
  %72 = icmp eq ptr %71, null
  br i1 %72, label %106, label %73

73:                                               ; preds = %58
  %74 = getelementptr inbounds %struct.rpc_rqst, ptr %71, i32 0, i32 3
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.rpc_task, ptr %75, i32 0, i32 22
  %77 = load i16, ptr %76, align 8
  %78 = zext i16 %77 to i32
  %79 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 1
  store i32 %78, ptr %79, align 4
  %80 = getelementptr inbounds %struct.rpc_task, ptr %75, i32 0, i32 13
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %struct.rpc_clnt, ptr %81, i32 0, i32 1
  %83 = load i32, ptr %82, align 4
  %84 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 2
  store i32 %83, ptr %84, align 4
  %85 = getelementptr i8, ptr %56, i32 64
  %86 = load ptr, ptr %80, align 8
  %87 = getelementptr inbounds %struct.rpc_clnt, ptr %86, i32 0, i32 24
  %88 = load ptr, ptr %87, align 4
  %89 = load ptr, ptr %88, align 4
  %90 = icmp eq ptr %89, null
  %91 = select i1 %90, ptr @.str.72, ptr %89
  %92 = call ptr @strcpy(ptr noundef %85, ptr noundef nonnull %91)
  %93 = load ptr, ptr %80, align 8
  %94 = getelementptr inbounds %struct.rpc_clnt, ptr %93, i32 0, i32 9
  %95 = load i32, ptr %94, align 4
  %96 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 3
  store i32 %95, ptr %96, align 4
  %97 = and i32 %34, 65535
  %98 = getelementptr i8, ptr %56, i32 %97
  %99 = getelementptr inbounds %struct.rpc_task, ptr %75, i32 0, i32 10
  %100 = load ptr, ptr %99, align 8
  %101 = getelementptr inbounds %struct.rpc_procinfo, ptr %100, i32 0, i32 7
  %102 = load ptr, ptr %101, align 4
  %103 = icmp eq ptr %102, null
  %104 = select i1 %103, ptr @.str.72, ptr %102
  %105 = call ptr @strcpy(ptr noundef %98, ptr noundef nonnull %104)
  br label %113

106:                                              ; preds = %58
  %107 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 1
  store i32 -1, ptr %107, align 4
  %108 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 2
  store i32 -1, ptr %108, align 4
  %109 = getelementptr i8, ptr %56, i32 64
  store i64 31093567915781749, ptr %109, align 1
  %110 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 3
  store i32 0, ptr %110, align 4
  %111 = and i32 %34, 65535
  %112 = getelementptr i8, ptr %56, i32 %111
  store i64 31093567915781749, ptr %112, align 1
  br label %113

113:                                              ; preds = %106, %73
  %114 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 4
  store i32 %2, ptr %114, align 4
  %115 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 2
  %116 = load ptr, ptr %115, align 4
  %117 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 5
  store ptr %116, ptr %117, align 4
  %118 = load ptr, ptr %1, align 4
  %119 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 6
  store ptr %118, ptr %119, align 4
  %120 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %121 = load ptr, ptr %120, align 4
  %122 = load ptr, ptr %121, align 4
  %123 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 7
  store ptr %122, ptr %123, align 4
  %124 = load ptr, ptr %120, align 4
  %125 = getelementptr inbounds %struct.kvec, ptr %124, i32 0, i32 1
  %126 = load i32, ptr %125, align 4
  %127 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 8
  store i32 %126, ptr %127, align 4
  %128 = load ptr, ptr %120, align 4
  %129 = getelementptr inbounds %struct.xdr_buf, ptr %128, i32 0, i32 5
  %130 = load i32, ptr %129, align 4
  %131 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 11
  store i32 %130, ptr %131, align 4
  %132 = load ptr, ptr %120, align 4
  %133 = getelementptr inbounds %struct.xdr_buf, ptr %132, i32 0, i32 1
  %134 = load ptr, ptr %133, align 4
  %135 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 9
  store ptr %134, ptr %135, align 4
  %136 = load ptr, ptr %120, align 4
  %137 = getelementptr inbounds %struct.xdr_buf, ptr %136, i32 0, i32 1, i32 0, i32 1
  %138 = load i32, ptr %137, align 4
  %139 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 10
  store i32 %138, ptr %139, align 4
  %140 = load ptr, ptr %120, align 4
  %141 = getelementptr inbounds %struct.xdr_buf, ptr %140, i32 0, i32 8
  %142 = load i32, ptr %141, align 4
  %143 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %56, i32 0, i32 12
  store i32 %142, ptr %143, align 4
  %144 = load i32, ptr %5, align 4
  %145 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %56, i32 noundef %55, i32 noundef %144, ptr noundef %0, i64 noundef 1, ptr noundef %145, ptr noundef %44, ptr noundef null) #15
  br label %146

146:                                              ; preds = %113, %51, %48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xdr_alignment(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %106, label %15

15:                                               ; preds = %13, %10, %4
  %16 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 7
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.rpc_rqst, ptr %17, i32 0, i32 3
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.rpc_task, ptr %19, i32 0, i32 13
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.rpc_clnt, ptr %21, i32 0, i32 24
  %23 = load ptr, ptr %22, align 4
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  %26 = select i1 %25, ptr @.str.72, ptr %24
  %27 = tail call i32 @strlen(ptr noundef nonnull %26) #15
  %28 = getelementptr inbounds %struct.rpc_task, ptr %19, i32 0, i32 10
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.rpc_procinfo, ptr %29, i32 0, i32 7
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  %33 = select i1 %32, ptr @.str.72, ptr %31
  %34 = tail call i32 @strlen(ptr noundef nonnull %33) #15
  %35 = add i32 %34, 1
  %36 = add i32 %27, 61
  %37 = add i32 %36, %35
  %38 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %37) #15
  %39 = icmp eq ptr %38, null
  br i1 %39, label %106, label %40

40:                                               ; preds = %15
  %41 = shl i32 %35, 16
  %42 = or i32 %41, %36
  %43 = shl i32 %27, 16
  %44 = add i32 %43, 65596
  %45 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 12
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 13
  store i32 %42, ptr %46, align 4
  %47 = load ptr, ptr %16, align 4
  %48 = getelementptr inbounds %struct.rpc_rqst, ptr %47, i32 0, i32 3
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.rpc_task, ptr %49, i32 0, i32 22
  %51 = load i16, ptr %50, align 8
  %52 = zext i16 %51 to i32
  %53 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 1
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.rpc_task, ptr %49, i32 0, i32 13
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds %struct.rpc_clnt, ptr %55, i32 0, i32 1
  %57 = load i32, ptr %56, align 4
  %58 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 2
  store i32 %57, ptr %58, align 4
  %59 = getelementptr i8, ptr %38, i32 60
  %60 = load ptr, ptr %54, align 8
  %61 = getelementptr inbounds %struct.rpc_clnt, ptr %60, i32 0, i32 24
  %62 = load ptr, ptr %61, align 4
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, null
  %65 = select i1 %64, ptr @.str.72, ptr %63
  %66 = call ptr @strcpy(ptr noundef %59, ptr noundef nonnull %65)
  %67 = load ptr, ptr %54, align 8
  %68 = getelementptr inbounds %struct.rpc_clnt, ptr %67, i32 0, i32 9
  %69 = load i32, ptr %68, align 4
  %70 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 3
  store i32 %69, ptr %70, align 4
  %71 = and i32 %36, 65535
  %72 = getelementptr i8, ptr %38, i32 %71
  %73 = getelementptr inbounds %struct.rpc_task, ptr %49, i32 0, i32 10
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr inbounds %struct.rpc_procinfo, ptr %74, i32 0, i32 7
  %76 = load ptr, ptr %75, align 4
  %77 = icmp eq ptr %76, null
  %78 = select i1 %77, ptr @.str.72, ptr %76
  %79 = call ptr @strcpy(ptr noundef %72, ptr noundef nonnull %78)
  %80 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 4
  store i32 %2, ptr %80, align 4
  %81 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 5
  store i32 %3, ptr %81, align 4
  %82 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %83 = load ptr, ptr %82, align 4
  %84 = load ptr, ptr %83, align 4
  %85 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 6
  store ptr %84, ptr %85, align 4
  %86 = load ptr, ptr %82, align 4
  %87 = getelementptr inbounds %struct.kvec, ptr %86, i32 0, i32 1
  %88 = load i32, ptr %87, align 4
  %89 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 7
  store i32 %88, ptr %89, align 4
  %90 = load ptr, ptr %82, align 4
  %91 = getelementptr inbounds %struct.xdr_buf, ptr %90, i32 0, i32 5
  %92 = load i32, ptr %91, align 4
  %93 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 10
  store i32 %92, ptr %93, align 4
  %94 = load ptr, ptr %82, align 4
  %95 = getelementptr inbounds %struct.xdr_buf, ptr %94, i32 0, i32 1
  %96 = load ptr, ptr %95, align 4
  %97 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 8
  store ptr %96, ptr %97, align 4
  %98 = load ptr, ptr %82, align 4
  %99 = getelementptr inbounds %struct.xdr_buf, ptr %98, i32 0, i32 1, i32 0, i32 1
  %100 = load i32, ptr %99, align 4
  %101 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 9
  store i32 %100, ptr %101, align 4
  %102 = load ptr, ptr %82, align 4
  %103 = getelementptr inbounds %struct.xdr_buf, ptr %102, i32 0, i32 8
  %104 = load i32, ptr %103, align 4
  %105 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %38, i32 0, i32 11
  store i32 %104, ptr %105, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %106

106:                                              ; preds = %40, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xdr_alignment(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 7
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.rpc_rqst, ptr %8, i32 0, i32 3
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.rpc_task, ptr %10, i32 0, i32 13
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.rpc_clnt, ptr %12, i32 0, i32 24
  %14 = load ptr, ptr %13, align 4
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  %17 = select i1 %16, ptr @.str.72, ptr %15
  %18 = tail call i32 @strlen(ptr noundef nonnull %17) #15
  %19 = shl i32 %18, 16
  %20 = add i32 %19, 65536
  %21 = or i32 %20, 60
  %22 = getelementptr inbounds %struct.rpc_task, ptr %10, i32 0, i32 10
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.rpc_procinfo, ptr %23, i32 0, i32 7
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  %27 = select i1 %26, ptr @.str.72, ptr %25
  %28 = tail call i32 @strlen(ptr noundef nonnull %27) #15
  %29 = add i32 %28, 1
  %30 = add i32 %18, 61
  %31 = shl i32 %29, 16
  %32 = or i32 %31, %30
  %33 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %34 = load ptr, ptr %33, align 4
  %35 = ptrtoint ptr %34 to i32
  %36 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %37 = inttoptr i32 %36 to ptr
  %38 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %37) #11, !srcloc !12
  %39 = add i32 %38, %35
  %40 = inttoptr i32 %39 to ptr
  %41 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %42 = load volatile ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %4
  %45 = load volatile ptr, ptr %40, align 4
  %46 = icmp eq ptr %45, null
  br i1 %46, label %128, label %47

47:                                               ; preds = %44, %4
  %48 = add i32 %18, 72
  %49 = add i32 %48, %29
  %50 = and i32 %49, -8
  %51 = add i32 %50, -4
  %52 = call ptr @perf_trace_buf_alloc(i32 noundef %51, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %53 = icmp eq ptr %52, null
  br i1 %53, label %128, label %54

54:                                               ; preds = %47
  %55 = load ptr, ptr %5, align 4
  %56 = call ptr @llvm.returnaddress(i32 0) #15
  %57 = ptrtoint ptr %56 to i32
  %58 = getelementptr [18 x i32], ptr %55, i32 0, i32 15
  store i32 %57, ptr %58, align 4
  %59 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %60 = ptrtoint ptr %59 to i32
  %61 = getelementptr [18 x i32], ptr %55, i32 0, i32 11
  store i32 %60, ptr %61, align 4
  %62 = call i32 @llvm.read_register.i32(metadata !0) #15
  %63 = getelementptr [18 x i32], ptr %55, i32 0, i32 13
  store i32 %62, ptr %63, align 4
  %64 = getelementptr [18 x i32], ptr %55, i32 0, i32 16
  store i32 19, ptr %64, align 4
  %65 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 12
  store i32 %21, ptr %65, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 13
  store i32 %32, ptr %66, align 4
  %67 = load ptr, ptr %7, align 4
  %68 = getelementptr inbounds %struct.rpc_rqst, ptr %67, i32 0, i32 3
  %69 = load ptr, ptr %68, align 4
  %70 = getelementptr inbounds %struct.rpc_task, ptr %69, i32 0, i32 22
  %71 = load i16, ptr %70, align 8
  %72 = zext i16 %71 to i32
  %73 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 1
  store i32 %72, ptr %73, align 4
  %74 = getelementptr inbounds %struct.rpc_task, ptr %69, i32 0, i32 13
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %struct.rpc_clnt, ptr %75, i32 0, i32 1
  %77 = load i32, ptr %76, align 4
  %78 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 2
  store i32 %77, ptr %78, align 4
  %79 = getelementptr i8, ptr %52, i32 60
  %80 = load ptr, ptr %74, align 8
  %81 = getelementptr inbounds %struct.rpc_clnt, ptr %80, i32 0, i32 24
  %82 = load ptr, ptr %81, align 4
  %83 = load ptr, ptr %82, align 4
  %84 = icmp eq ptr %83, null
  %85 = select i1 %84, ptr @.str.72, ptr %83
  %86 = call ptr @strcpy(ptr noundef %79, ptr noundef nonnull %85)
  %87 = load ptr, ptr %74, align 8
  %88 = getelementptr inbounds %struct.rpc_clnt, ptr %87, i32 0, i32 9
  %89 = load i32, ptr %88, align 4
  %90 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 3
  store i32 %89, ptr %90, align 4
  %91 = and i32 %30, 65535
  %92 = getelementptr i8, ptr %52, i32 %91
  %93 = getelementptr inbounds %struct.rpc_task, ptr %69, i32 0, i32 10
  %94 = load ptr, ptr %93, align 8
  %95 = getelementptr inbounds %struct.rpc_procinfo, ptr %94, i32 0, i32 7
  %96 = load ptr, ptr %95, align 4
  %97 = icmp eq ptr %96, null
  %98 = select i1 %97, ptr @.str.72, ptr %96
  %99 = call ptr @strcpy(ptr noundef %92, ptr noundef nonnull %98)
  %100 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 4
  store i32 %2, ptr %100, align 4
  %101 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 5
  store i32 %3, ptr %101, align 4
  %102 = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %103 = load ptr, ptr %102, align 4
  %104 = load ptr, ptr %103, align 4
  %105 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 6
  store ptr %104, ptr %105, align 4
  %106 = load ptr, ptr %102, align 4
  %107 = getelementptr inbounds %struct.kvec, ptr %106, i32 0, i32 1
  %108 = load i32, ptr %107, align 4
  %109 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 7
  store i32 %108, ptr %109, align 4
  %110 = load ptr, ptr %102, align 4
  %111 = getelementptr inbounds %struct.xdr_buf, ptr %110, i32 0, i32 5
  %112 = load i32, ptr %111, align 4
  %113 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 10
  store i32 %112, ptr %113, align 4
  %114 = load ptr, ptr %102, align 4
  %115 = getelementptr inbounds %struct.xdr_buf, ptr %114, i32 0, i32 1
  %116 = load ptr, ptr %115, align 4
  %117 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 8
  store ptr %116, ptr %117, align 4
  %118 = load ptr, ptr %102, align 4
  %119 = getelementptr inbounds %struct.xdr_buf, ptr %118, i32 0, i32 1, i32 0, i32 1
  %120 = load i32, ptr %119, align 4
  %121 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 9
  store i32 %120, ptr %121, align 4
  %122 = load ptr, ptr %102, align 4
  %123 = getelementptr inbounds %struct.xdr_buf, ptr %122, i32 0, i32 8
  %124 = load i32, ptr %123, align 4
  %125 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %52, i32 0, i32 11
  store i32 %124, ptr %125, align 4
  %126 = load i32, ptr %6, align 4
  %127 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %52, i32 noundef %51, i32 noundef %126, ptr noundef %0, i64 noundef 1, ptr noundef %127, ptr noundef %40, ptr noundef null) #15
  br label %128

128:                                              ; preds = %54, %47, %44
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_socket_event(ptr noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %70, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 80) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %70, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.socket, ptr %2, i32 0, i32 4
  %19 = load ptr, ptr %18, align 16
  %20 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 4
  %21 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 5
  %22 = getelementptr inbounds %struct.sock_common, ptr %19, i32 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(56) %20, i8 0, i64 56, i1 false)
  %23 = load i16, ptr %22, align 8
  %24 = icmp eq i16 %23, 10
  br i1 %24, label %25, label %46

25:                                               ; preds = %17
  store i16 10, ptr %20, align 4
  %26 = getelementptr inbounds %struct.inet_sock, ptr %19, i32 0, i32 6
  %27 = load i16, ptr %26, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 4, i32 2
  store i16 %27, ptr %28, align 2
  %29 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 4, i32 8
  %30 = getelementptr inbounds %struct.sock_common, ptr %19, i32 0, i32 4
  %31 = load volatile i8, ptr %30, align 2
  %32 = zext i8 %31 to i32
  %33 = shl nuw i32 1, %32
  %34 = and i32 %33, -4161
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %struct.inet_sock, ptr %19, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8
  br label %39

39:                                               ; preds = %36, %25
  %40 = phi ptr [ %38, %36 ], [ null, %25 ]
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %29, ptr noundef align 4 dereferenceable(16) %40, i32 16, i1 false)
  store i16 10, ptr %21, align 4
  %41 = getelementptr inbounds %struct.sock_common, ptr %19, i32 0, i32 2
  %42 = load i16, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 5, i32 2
  store i16 %42, ptr %43, align 2
  %44 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 5, i32 8
  %45 = getelementptr inbounds %struct.sock_common, ptr %19, i32 0, i32 10
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %44, ptr noundef align 4 dereferenceable(16) %45, i32 16, i1 false)
  br label %58

46:                                               ; preds = %17
  store i16 2, ptr %20, align 4
  %47 = getelementptr inbounds %struct.inet_sock, ptr %19, i32 0, i32 6
  %48 = load i16, ptr %47, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 4, i32 2
  store i16 %48, ptr %49, align 2
  %50 = getelementptr inbounds %struct.inet_sock, ptr %19, i32 0, i32 2
  %51 = load i32, ptr %50, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 4, i32 4
  store i32 %51, ptr %52, align 4
  store i16 2, ptr %21, align 4
  %53 = getelementptr inbounds %struct.sock_common, ptr %19, i32 0, i32 2
  %54 = load i16, ptr %53, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 5, i32 2
  store i16 %54, ptr %55, align 2
  %56 = load i32, ptr %19, align 8
  %57 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 5, i32 4
  store i32 %56, ptr %57, align 4
  br label %58

58:                                               ; preds = %46, %39
  %59 = load i32, ptr %2, align 64
  %60 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 1
  store i32 %59, ptr %60, align 8
  %61 = load ptr, ptr %18, align 16
  %62 = getelementptr inbounds %struct.sock_common, ptr %61, i32 0, i32 4
  %63 = load volatile i8, ptr %62, align 2
  %64 = zext i8 %63 to i32
  %65 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 2
  store i32 %64, ptr %65, align 4
  %66 = getelementptr inbounds %struct.socket_alloc, ptr %2, i32 0, i32 1, i32 10
  %67 = load i32, ptr %66, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %15, i32 0, i32 3
  store i64 %68, ptr %69, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %70

70:                                               ; preds = %58, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xs_socket_event(ptr noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %88, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %88, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.socket, ptr %2, i32 0, i32 4
  %35 = load ptr, ptr %34, align 16
  %36 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 4
  %37 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 5
  %38 = getelementptr inbounds %struct.sock_common, ptr %35, i32 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(56) %36, i8 0, i64 56, i1 false)
  %39 = load i16, ptr %38, align 8
  %40 = icmp eq i16 %39, 10
  br i1 %40, label %41, label %62

41:                                               ; preds = %23
  store i16 10, ptr %36, align 4
  %42 = getelementptr inbounds %struct.inet_sock, ptr %35, i32 0, i32 6
  %43 = load i16, ptr %42, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 4, i32 2
  store i16 %43, ptr %44, align 2
  %45 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 4, i32 8
  %46 = getelementptr inbounds %struct.sock_common, ptr %35, i32 0, i32 4
  %47 = load volatile i8, ptr %46, align 2
  %48 = zext i8 %47 to i32
  %49 = shl nuw i32 1, %48
  %50 = and i32 %49, -4161
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %struct.inet_sock, ptr %35, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8
  br label %55

55:                                               ; preds = %52, %41
  %56 = phi ptr [ %54, %52 ], [ null, %41 ]
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %45, ptr noundef align 4 dereferenceable(16) %56, i32 16, i1 false)
  store i16 10, ptr %37, align 4
  %57 = getelementptr inbounds %struct.sock_common, ptr %35, i32 0, i32 2
  %58 = load i16, ptr %57, align 4
  %59 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 5, i32 2
  store i16 %58, ptr %59, align 2
  %60 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 5, i32 8
  %61 = getelementptr inbounds %struct.sock_common, ptr %35, i32 0, i32 10
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %60, ptr noundef align 4 dereferenceable(16) %61, i32 16, i1 false)
  br label %74

62:                                               ; preds = %23
  store i16 2, ptr %36, align 4
  %63 = getelementptr inbounds %struct.inet_sock, ptr %35, i32 0, i32 6
  %64 = load i16, ptr %63, align 8
  %65 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 4, i32 2
  store i16 %64, ptr %65, align 2
  %66 = getelementptr inbounds %struct.inet_sock, ptr %35, i32 0, i32 2
  %67 = load i32, ptr %66, align 4
  %68 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 4, i32 4
  store i32 %67, ptr %68, align 4
  store i16 2, ptr %37, align 4
  %69 = getelementptr inbounds %struct.sock_common, ptr %35, i32 0, i32 2
  %70 = load i16, ptr %69, align 4
  %71 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 5, i32 2
  store i16 %70, ptr %71, align 2
  %72 = load i32, ptr %35, align 8
  %73 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 5, i32 4
  store i32 %72, ptr %73, align 4
  br label %74

74:                                               ; preds = %62, %55
  %75 = load i32, ptr %2, align 64
  %76 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 1
  store i32 %75, ptr %76, align 8
  %77 = load ptr, ptr %34, align 16
  %78 = getelementptr inbounds %struct.sock_common, ptr %77, i32 0, i32 4
  %79 = load volatile i8, ptr %78, align 2
  %80 = zext i8 %79 to i32
  %81 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 2
  store i32 %80, ptr %81, align 4
  %82 = getelementptr inbounds %struct.socket_alloc, ptr %2, i32 0, i32 1, i32 10
  %83 = load i32, ptr %82, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %21, i32 0, i32 3
  store i64 %84, ptr %85, align 8
  %86 = load i32, ptr %5, align 4
  %87 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 84, i32 noundef %86, ptr noundef %0, i64 noundef 1, ptr noundef %87, ptr noundef %13, ptr noundef null) #15
  br label %88

88:                                               ; preds = %74, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_socket_event_done(ptr noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %72, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 88) #15
  %17 = icmp eq ptr %16, null
  br i1 %17, label %72, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.socket, ptr %2, i32 0, i32 4
  %20 = load ptr, ptr %19, align 16
  %21 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 5
  %22 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 6
  %23 = getelementptr inbounds %struct.sock_common, ptr %20, i32 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(56) %21, i8 0, i64 56, i1 false)
  %24 = load i16, ptr %23, align 8
  %25 = icmp eq i16 %24, 10
  br i1 %25, label %26, label %47

26:                                               ; preds = %18
  store i16 10, ptr %21, align 4
  %27 = getelementptr inbounds %struct.inet_sock, ptr %20, i32 0, i32 6
  %28 = load i16, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 5, i32 2
  store i16 %28, ptr %29, align 2
  %30 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 5, i32 8
  %31 = getelementptr inbounds %struct.sock_common, ptr %20, i32 0, i32 4
  %32 = load volatile i8, ptr %31, align 2
  %33 = zext i8 %32 to i32
  %34 = shl nuw i32 1, %33
  %35 = and i32 %34, -4161
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %struct.inet_sock, ptr %20, i32 0, i32 1
  %39 = load ptr, ptr %38, align 8
  br label %40

40:                                               ; preds = %37, %26
  %41 = phi ptr [ %39, %37 ], [ null, %26 ]
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %30, ptr noundef align 4 dereferenceable(16) %41, i32 16, i1 false)
  store i16 10, ptr %22, align 4
  %42 = getelementptr inbounds %struct.sock_common, ptr %20, i32 0, i32 2
  %43 = load i16, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 6, i32 2
  store i16 %43, ptr %44, align 2
  %45 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 6, i32 8
  %46 = getelementptr inbounds %struct.sock_common, ptr %20, i32 0, i32 10
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %45, ptr noundef align 4 dereferenceable(16) %46, i32 16, i1 false)
  br label %59

47:                                               ; preds = %18
  store i16 2, ptr %21, align 4
  %48 = getelementptr inbounds %struct.inet_sock, ptr %20, i32 0, i32 6
  %49 = load i16, ptr %48, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 5, i32 2
  store i16 %49, ptr %50, align 2
  %51 = getelementptr inbounds %struct.inet_sock, ptr %20, i32 0, i32 2
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 5, i32 4
  store i32 %52, ptr %53, align 4
  store i16 2, ptr %22, align 4
  %54 = getelementptr inbounds %struct.sock_common, ptr %20, i32 0, i32 2
  %55 = load i16, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 6, i32 2
  store i16 %55, ptr %56, align 2
  %57 = load i32, ptr %20, align 8
  %58 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 6, i32 4
  store i32 %57, ptr %58, align 4
  br label %59

59:                                               ; preds = %47, %40
  %60 = load i32, ptr %2, align 64
  %61 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 2
  store i32 %60, ptr %61, align 4
  %62 = load ptr, ptr %19, align 16
  %63 = getelementptr inbounds %struct.sock_common, ptr %62, i32 0, i32 4
  %64 = load volatile i8, ptr %63, align 2
  %65 = zext i8 %64 to i32
  %66 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 3
  store i32 %65, ptr %66, align 8
  %67 = getelementptr inbounds %struct.socket_alloc, ptr %2, i32 0, i32 1, i32 10
  %68 = load i32, ptr %67, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 4
  store i64 %69, ptr %70, align 8
  %71 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %16, i32 0, i32 1
  store i32 %3, ptr %71, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %72

72:                                               ; preds = %59, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xs_socket_event_done(ptr noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #11, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %90, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 92, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %23 = icmp eq ptr %22, null
  br i1 %23, label %90, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #15
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #15
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.socket, ptr %2, i32 0, i32 4
  %36 = load ptr, ptr %35, align 16
  %37 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 5
  %38 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 6
  %39 = getelementptr inbounds %struct.sock_common, ptr %36, i32 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(56) %37, i8 0, i64 56, i1 false)
  %40 = load i16, ptr %39, align 8
  %41 = icmp eq i16 %40, 10
  br i1 %41, label %42, label %63

42:                                               ; preds = %24
  store i16 10, ptr %37, align 4
  %43 = getelementptr inbounds %struct.inet_sock, ptr %36, i32 0, i32 6
  %44 = load i16, ptr %43, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 5, i32 2
  store i16 %44, ptr %45, align 2
  %46 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 5, i32 8
  %47 = getelementptr inbounds %struct.sock_common, ptr %36, i32 0, i32 4
  %48 = load volatile i8, ptr %47, align 2
  %49 = zext i8 %48 to i32
  %50 = shl nuw i32 1, %49
  %51 = and i32 %50, -4161
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %struct.inet_sock, ptr %36, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8
  br label %56

56:                                               ; preds = %53, %42
  %57 = phi ptr [ %55, %53 ], [ null, %42 ]
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %46, ptr noundef align 4 dereferenceable(16) %57, i32 16, i1 false)
  store i16 10, ptr %38, align 4
  %58 = getelementptr inbounds %struct.sock_common, ptr %36, i32 0, i32 2
  %59 = load i16, ptr %58, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 6, i32 2
  store i16 %59, ptr %60, align 2
  %61 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 6, i32 8
  %62 = getelementptr inbounds %struct.sock_common, ptr %36, i32 0, i32 10
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %61, ptr noundef align 4 dereferenceable(16) %62, i32 16, i1 false)
  br label %75

63:                                               ; preds = %24
  store i16 2, ptr %37, align 4
  %64 = getelementptr inbounds %struct.inet_sock, ptr %36, i32 0, i32 6
  %65 = load i16, ptr %64, align 8
  %66 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 5, i32 2
  store i16 %65, ptr %66, align 2
  %67 = getelementptr inbounds %struct.inet_sock, ptr %36, i32 0, i32 2
  %68 = load i32, ptr %67, align 4
  %69 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 5, i32 4
  store i32 %68, ptr %69, align 4
  store i16 2, ptr %38, align 4
  %70 = getelementptr inbounds %struct.sock_common, ptr %36, i32 0, i32 2
  %71 = load i16, ptr %70, align 4
  %72 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 6, i32 2
  store i16 %71, ptr %72, align 2
  %73 = load i32, ptr %36, align 8
  %74 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 6, i32 4
  store i32 %73, ptr %74, align 4
  br label %75

75:                                               ; preds = %63, %56
  %76 = load i32, ptr %2, align 64
  %77 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 2
  store i32 %76, ptr %77, align 4
  %78 = load ptr, ptr %35, align 16
  %79 = getelementptr inbounds %struct.sock_common, ptr %78, i32 0, i32 4
  %80 = load volatile i8, ptr %79, align 2
  %81 = zext i8 %80 to i32
  %82 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 3
  store i32 %81, ptr %82, align 8
  %83 = getelementptr inbounds %struct.socket_alloc, ptr %2, i32 0, i32 1, i32 10
  %84 = load i32, ptr %83, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 4
  store i64 %85, ptr %86, align 8
  %87 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %22, i32 0, i32 1
  store i32 %3, ptr %87, align 8
  %88 = load i32, ptr %6, align 4
  %89 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 92, i32 noundef %88, ptr noundef %0, i64 noundef 1, ptr noundef %89, ptr noundef %14, ptr noundef null) #15
  br label %90

90:                                               ; preds = %75, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_socket_nospace(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %38, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 24) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.rpc_task, ptr %19, i32 0, i32 22
  %21 = load i16, ptr %20, align 8
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %15, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = load ptr, ptr %18, align 4
  %25 = getelementptr inbounds %struct.rpc_task, ptr %24, i32 0, i32 13
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds %struct.rpc_clnt, ptr %26, i32 0, i32 1
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %15, i32 0, i32 2
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 1, i32 8
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %15, i32 0, i32 3
  store i32 %31, ptr %32, align 4
  %33 = load i32, ptr %30, align 4
  %34 = getelementptr inbounds %struct.sock_xprt, ptr %2, i32 0, i32 5
  %35 = load i32, ptr %34, align 4
  %36 = sub i32 %33, %35
  %37 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %15, i32 0, i32 4
  store i32 %36, ptr %37, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %38

38:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_socket_nospace(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %56, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %56, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.rpc_task, ptr %35, i32 0, i32 22
  %37 = load i16, ptr %36, align 8
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %21, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = load ptr, ptr %34, align 4
  %41 = getelementptr inbounds %struct.rpc_task, ptr %40, i32 0, i32 13
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.rpc_clnt, ptr %42, i32 0, i32 1
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %21, i32 0, i32 2
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 1, i32 8
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %21, i32 0, i32 3
  store i32 %47, ptr %48, align 4
  %49 = load i32, ptr %46, align 4
  %50 = getelementptr inbounds %struct.sock_xprt, ptr %2, i32 0, i32 5
  %51 = load i32, ptr %50, align 4
  %52 = sub i32 %49, %51
  %53 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %21, i32 0, i32 4
  store i32 %52, ptr %53, align 4
  %54 = load i32, ptr %5, align 4
  %55 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 28, i32 noundef %54, ptr noundef %0, i64 noundef 1, ptr noundef %55, ptr noundef %13, ptr noundef null) #15
  br label %56

56:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xprt_lifetime_class(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %50, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %15 = load ptr, ptr %14, align 8
  %16 = icmp eq ptr %15, null
  %17 = select i1 %16, ptr @.str.72, ptr %15
  %18 = tail call i32 @strlen(ptr noundef nonnull %17) #15
  %19 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  %22 = select i1 %21, ptr @.str.72, ptr %20
  %23 = tail call i32 @strlen(ptr noundef nonnull %22) #15
  %24 = add i32 %23, 1
  %25 = add i32 %18, 21
  %26 = add i32 %25, %24
  %27 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %26) #15
  %28 = icmp eq ptr %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %13
  %30 = shl i32 %24, 16
  %31 = or i32 %30, %25
  %32 = shl i32 %18, 16
  %33 = add i32 %32, 65556
  %34 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %27, i32 0, i32 2
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %27, i32 0, i32 3
  store i32 %31, ptr %35, align 4
  %36 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %27, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr i8, ptr %27, i32 20
  %40 = load ptr, ptr %14, align 8
  %41 = icmp eq ptr %40, null
  %42 = select i1 %41, ptr @.str.72, ptr %40
  %43 = call ptr @strcpy(ptr noundef %39, ptr noundef nonnull %42)
  %44 = and i32 %25, 65535
  %45 = getelementptr i8, ptr %27, i32 %44
  %46 = load ptr, ptr %19, align 4
  %47 = icmp eq ptr %46, null
  %48 = select i1 %47, ptr @.str.72, ptr %46
  %49 = call ptr @strcpy(ptr noundef %45, ptr noundef nonnull %48)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %50

50:                                               ; preds = %29, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xprt_lifetime_class(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, null
  %8 = select i1 %7, ptr @.str.72, ptr %6
  %9 = tail call i32 @strlen(ptr noundef nonnull %8) #15
  %10 = shl i32 %9, 16
  %11 = add i32 %10, 65536
  %12 = or i32 %11, 20
  %13 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  %16 = select i1 %15, ptr @.str.72, ptr %14
  %17 = tail call i32 @strlen(ptr noundef nonnull %16) #15
  %18 = add i32 %17, 1
  %19 = add i32 %9, 21
  %20 = shl i32 %18, 16
  %21 = or i32 %20, %19
  %22 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %23 = load ptr, ptr %22, align 4
  %24 = ptrtoint ptr %23 to i32
  %25 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %26 = inttoptr i32 %25 to ptr
  %27 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %26) #11, !srcloc !12
  %28 = add i32 %27, %24
  %29 = inttoptr i32 %28 to ptr
  %30 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %31 = load volatile ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %2
  %34 = load volatile ptr, ptr %29, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %72, label %36

36:                                               ; preds = %33, %2
  %37 = add i32 %9, 32
  %38 = add i32 %37, %18
  %39 = and i32 %38, -8
  %40 = add i32 %39, -4
  %41 = call ptr @perf_trace_buf_alloc(i32 noundef %40, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %42 = icmp eq ptr %41, null
  br i1 %42, label %72, label %43

43:                                               ; preds = %36
  %44 = load ptr, ptr %3, align 4
  %45 = call ptr @llvm.returnaddress(i32 0) #15
  %46 = ptrtoint ptr %45 to i32
  %47 = getelementptr [18 x i32], ptr %44, i32 0, i32 15
  store i32 %46, ptr %47, align 4
  %48 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %49 = ptrtoint ptr %48 to i32
  %50 = getelementptr [18 x i32], ptr %44, i32 0, i32 11
  store i32 %49, ptr %50, align 4
  %51 = call i32 @llvm.read_register.i32(metadata !0) #15
  %52 = getelementptr [18 x i32], ptr %44, i32 0, i32 13
  store i32 %51, ptr %52, align 4
  %53 = getelementptr [18 x i32], ptr %44, i32 0, i32 16
  store i32 19, ptr %53, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %41, i32 0, i32 2
  store i32 %12, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %41, i32 0, i32 3
  store i32 %21, ptr %55, align 4
  %56 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %57 = load i32, ptr %56, align 8
  %58 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %41, i32 0, i32 1
  store i32 %57, ptr %58, align 4
  %59 = getelementptr i8, ptr %41, i32 20
  %60 = load ptr, ptr %5, align 8
  %61 = icmp eq ptr %60, null
  %62 = select i1 %61, ptr @.str.72, ptr %60
  %63 = call ptr @strcpy(ptr noundef %59, ptr noundef nonnull %62)
  %64 = and i32 %19, 65535
  %65 = getelementptr i8, ptr %41, i32 %64
  %66 = load ptr, ptr %13, align 4
  %67 = icmp eq ptr %66, null
  %68 = select i1 %67, ptr @.str.72, ptr %66
  %69 = call ptr @strcpy(ptr noundef %65, ptr noundef nonnull %68)
  %70 = load i32, ptr %4, align 4
  %71 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %41, i32 noundef %40, i32 noundef %70, ptr noundef %0, i64 noundef 1, ptr noundef %71, ptr noundef %29, ptr noundef null) #15
  br label %72

72:                                               ; preds = %43, %36, %33
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xprt_event(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %52, label %15

15:                                               ; preds = %13, %10, %4
  %16 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, null
  %19 = select i1 %18, ptr @.str.72, ptr %17
  %20 = tail call i32 @strlen(ptr noundef nonnull %19) #15
  %21 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  %24 = select i1 %23, ptr @.str.72, ptr %22
  %25 = tail call i32 @strlen(ptr noundef nonnull %24) #15
  %26 = add i32 %25, 1
  %27 = add i32 %20, 25
  %28 = add i32 %27, %26
  %29 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %28) #15
  %30 = icmp eq ptr %29, null
  br i1 %30, label %52, label %31

31:                                               ; preds = %15
  %32 = shl i32 %26, 16
  %33 = or i32 %32, %27
  %34 = shl i32 %20, 16
  %35 = add i32 %34, 65560
  %36 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %29, i32 0, i32 3
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %29, i32 0, i32 4
  store i32 %33, ptr %37, align 4
  %38 = call i32 @llvm.bswap.i32(i32 %2)
  %39 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %29, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %29, i32 0, i32 2
  store i32 %3, ptr %40, align 4
  %41 = getelementptr i8, ptr %29, i32 24
  %42 = load ptr, ptr %16, align 8
  %43 = icmp eq ptr %42, null
  %44 = select i1 %43, ptr @.str.72, ptr %42
  %45 = call ptr @strcpy(ptr noundef %41, ptr noundef nonnull %44)
  %46 = and i32 %27, 65535
  %47 = getelementptr i8, ptr %29, i32 %46
  %48 = load ptr, ptr %21, align 4
  %49 = icmp eq ptr %48, null
  %50 = select i1 %49, ptr @.str.72, ptr %48
  %51 = call ptr @strcpy(ptr noundef %47, ptr noundef nonnull %50)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %52

52:                                               ; preds = %31, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xprt_event(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  %10 = select i1 %9, ptr @.str.72, ptr %8
  %11 = tail call i32 @strlen(ptr noundef nonnull %10) #15
  %12 = shl i32 %11, 16
  %13 = add i32 %12, 65536
  %14 = or i32 %13, 24
  %15 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  %18 = select i1 %17, ptr @.str.72, ptr %16
  %19 = tail call i32 @strlen(ptr noundef nonnull %18) #15
  %20 = add i32 %19, 1
  %21 = add i32 %11, 25
  %22 = shl i32 %20, 16
  %23 = or i32 %22, %21
  %24 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %25 = load ptr, ptr %24, align 4
  %26 = ptrtoint ptr %25 to i32
  %27 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %28 = inttoptr i32 %27 to ptr
  %29 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %28) #11, !srcloc !12
  %30 = add i32 %29, %26
  %31 = inttoptr i32 %30 to ptr
  %32 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %33 = load volatile ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %4
  %36 = load volatile ptr, ptr %31, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %74, label %38

38:                                               ; preds = %35, %4
  %39 = add i32 %11, 36
  %40 = add i32 %39, %20
  %41 = and i32 %40, -8
  %42 = add i32 %41, -4
  %43 = call ptr @perf_trace_buf_alloc(i32 noundef %42, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %44 = icmp eq ptr %43, null
  br i1 %44, label %74, label %45

45:                                               ; preds = %38
  %46 = load ptr, ptr %5, align 4
  %47 = call ptr @llvm.returnaddress(i32 0) #15
  %48 = ptrtoint ptr %47 to i32
  %49 = getelementptr [18 x i32], ptr %46, i32 0, i32 15
  store i32 %48, ptr %49, align 4
  %50 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %51 = ptrtoint ptr %50 to i32
  %52 = getelementptr [18 x i32], ptr %46, i32 0, i32 11
  store i32 %51, ptr %52, align 4
  %53 = call i32 @llvm.read_register.i32(metadata !0) #15
  %54 = getelementptr [18 x i32], ptr %46, i32 0, i32 13
  store i32 %53, ptr %54, align 4
  %55 = getelementptr [18 x i32], ptr %46, i32 0, i32 16
  store i32 19, ptr %55, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %43, i32 0, i32 3
  store i32 %14, ptr %56, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %43, i32 0, i32 4
  store i32 %23, ptr %57, align 4
  %58 = call i32 @llvm.bswap.i32(i32 %2)
  %59 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %43, i32 0, i32 1
  store i32 %58, ptr %59, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %43, i32 0, i32 2
  store i32 %3, ptr %60, align 4
  %61 = getelementptr i8, ptr %43, i32 24
  %62 = load ptr, ptr %7, align 8
  %63 = icmp eq ptr %62, null
  %64 = select i1 %63, ptr @.str.72, ptr %62
  %65 = call ptr @strcpy(ptr noundef %61, ptr noundef nonnull %64)
  %66 = and i32 %21, 65535
  %67 = getelementptr i8, ptr %43, i32 %66
  %68 = load ptr, ptr %15, align 4
  %69 = icmp eq ptr %68, null
  %70 = select i1 %69, ptr @.str.72, ptr %68
  %71 = call ptr @strcpy(ptr noundef %67, ptr noundef nonnull %70)
  %72 = load i32, ptr %6, align 4
  %73 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %43, i32 noundef %42, i32 noundef %72, ptr noundef %0, i64 noundef 1, ptr noundef %73, ptr noundef %31, ptr noundef null) #15
  br label %74

74:                                               ; preds = %45, %38, %35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_transmit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %42, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 28) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %42, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.rpc_task, ptr %19, i32 0, i32 22
  %21 = load i16, ptr %20, align 8
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %15, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = load ptr, ptr %18, align 4
  %25 = getelementptr inbounds %struct.rpc_task, ptr %24, i32 0, i32 13
  %26 = load ptr, ptr %25, align 8
  %27 = icmp eq ptr %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.rpc_clnt, ptr %26, i32 0, i32 1
  %30 = load i32, ptr %29, align 4
  br label %31

31:                                               ; preds = %28, %17
  %32 = phi i32 [ %30, %28 ], [ -1, %17 ]
  %33 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %15, i32 0, i32 2
  store i32 %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 5
  %35 = load i32, ptr %34, align 4
  %36 = call i32 @llvm.bswap.i32(i32 %35)
  %37 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %15, i32 0, i32 3
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 7
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %15, i32 0, i32 4
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %15, i32 0, i32 5
  store i32 %2, ptr %41, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %42

42:                                               ; preds = %31, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xprt_transmit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %60, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %60, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.rpc_task, ptr %35, i32 0, i32 22
  %37 = load i16, ptr %36, align 8
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %21, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = load ptr, ptr %34, align 4
  %41 = getelementptr inbounds %struct.rpc_task, ptr %40, i32 0, i32 13
  %42 = load ptr, ptr %41, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %23
  %45 = getelementptr inbounds %struct.rpc_clnt, ptr %42, i32 0, i32 1
  %46 = load i32, ptr %45, align 4
  br label %47

47:                                               ; preds = %44, %23
  %48 = phi i32 [ %46, %44 ], [ -1, %23 ]
  %49 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %21, i32 0, i32 2
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 5
  %51 = load i32, ptr %50, align 4
  %52 = call i32 @llvm.bswap.i32(i32 %51)
  %53 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %21, i32 0, i32 3
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 7
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %21, i32 0, i32 4
  store i32 %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %21, i32 0, i32 5
  store i32 %2, ptr %57, align 4
  %58 = load i32, ptr %5, align 4
  %59 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 28, i32 noundef %58, ptr noundef %0, i64 noundef 1, ptr noundef %59, ptr noundef %13, ptr noundef null) #15
  br label %60

60:                                               ; preds = %47, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_retransmit(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %90, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.rpc_task, ptr %15, i32 0, i32 13
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.rpc_clnt, ptr %17, i32 0, i32 24
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  %22 = select i1 %21, ptr @.str.72, ptr %20
  %23 = tail call i32 @strlen(ptr noundef nonnull %22) #15
  %24 = shl i32 %23, 16
  %25 = add i32 %24, 65536
  %26 = or i32 %25, 40
  %27 = tail call ptr @rpc_proc_name(ptr noundef %15) #15
  %28 = icmp eq ptr %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %13
  %30 = load ptr, ptr %14, align 4
  %31 = tail call ptr @rpc_proc_name(ptr noundef %30) #15
  br label %32

32:                                               ; preds = %29, %13
  %33 = phi ptr [ %31, %29 ], [ @.str.72, %13 ]
  %34 = tail call i32 @strlen(ptr noundef %33) #15
  %35 = add i32 %34, 1
  %36 = add i32 %23, 41
  %37 = add i32 %36, %35
  %38 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %37) #15
  %39 = icmp eq ptr %38, null
  br i1 %39, label %90, label %40

40:                                               ; preds = %32
  %41 = shl i32 %35, 16
  %42 = or i32 %41, %36
  %43 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 7
  store i32 %26, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 8
  store i32 %42, ptr %44, align 4
  %45 = load ptr, ptr %14, align 4
  %46 = getelementptr inbounds %struct.rpc_task, ptr %45, i32 0, i32 22
  %47 = load i16, ptr %46, align 8
  %48 = zext i16 %47 to i32
  %49 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 1
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.rpc_task, ptr %45, i32 0, i32 13
  %51 = load ptr, ptr %50, align 8
  %52 = icmp eq ptr %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %struct.rpc_clnt, ptr %51, i32 0, i32 1
  %55 = load i32, ptr %54, align 4
  br label %56

56:                                               ; preds = %53, %40
  %57 = phi i32 [ %55, %53 ], [ -1, %40 ]
  %58 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 2
  store i32 %57, ptr %58, align 4
  %59 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 5
  %60 = load i32, ptr %59, align 4
  %61 = call i32 @llvm.bswap.i32(i32 %60)
  %62 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 3
  store i32 %61, ptr %62, align 4
  %63 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 30
  %64 = load i32, ptr %63, align 8
  %65 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 4
  store i32 %64, ptr %65, align 4
  %66 = getelementptr inbounds %struct.rpc_task, ptr %45, i32 0, i32 5
  %67 = load i32, ptr %66, align 8
  %68 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 6
  store i32 %67, ptr %68, align 4
  %69 = getelementptr i8, ptr %38, i32 40
  %70 = load ptr, ptr %50, align 8
  %71 = getelementptr inbounds %struct.rpc_clnt, ptr %70, i32 0, i32 24
  %72 = load ptr, ptr %71, align 4
  %73 = load ptr, ptr %72, align 4
  %74 = icmp eq ptr %73, null
  %75 = select i1 %74, ptr @.str.72, ptr %73
  %76 = call ptr @strcpy(ptr noundef %69, ptr noundef nonnull %75)
  %77 = load ptr, ptr %50, align 8
  %78 = getelementptr inbounds %struct.rpc_clnt, ptr %77, i32 0, i32 9
  %79 = load i32, ptr %78, align 4
  %80 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %38, i32 0, i32 5
  store i32 %79, ptr %80, align 4
  %81 = and i32 %36, 65535
  %82 = getelementptr i8, ptr %38, i32 %81
  %83 = call ptr @rpc_proc_name(ptr noundef %45) #15
  %84 = icmp eq ptr %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %56
  %86 = call ptr @rpc_proc_name(ptr noundef %45) #15
  br label %87

87:                                               ; preds = %85, %56
  %88 = phi ptr [ %86, %85 ], [ @.str.72, %56 ]
  %89 = call ptr @strcpy(ptr noundef %82, ptr noundef %88)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %90

90:                                               ; preds = %87, %32, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xprt_retransmit(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.rpc_task, ptr %6, i32 0, i32 13
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.rpc_clnt, ptr %8, i32 0, i32 24
  %10 = load ptr, ptr %9, align 4
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  %13 = select i1 %12, ptr @.str.72, ptr %11
  %14 = tail call i32 @strlen(ptr noundef nonnull %13) #15
  %15 = shl i32 %14, 16
  %16 = add i32 %15, 65536
  %17 = or i32 %16, 40
  %18 = tail call ptr @rpc_proc_name(ptr noundef %6) #15
  %19 = icmp eq ptr %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = load ptr, ptr %5, align 4
  %22 = tail call ptr @rpc_proc_name(ptr noundef %21) #15
  br label %23

23:                                               ; preds = %20, %2
  %24 = phi ptr [ %22, %20 ], [ @.str.72, %2 ]
  %25 = tail call i32 @strlen(ptr noundef %24) #15
  %26 = add i32 %25, 1
  %27 = add i32 %14, 41
  %28 = shl i32 %26, 16
  %29 = or i32 %28, %27
  %30 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %31 = load ptr, ptr %30, align 4
  %32 = ptrtoint ptr %31 to i32
  %33 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %34 = inttoptr i32 %33 to ptr
  %35 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %34) #11, !srcloc !12
  %36 = add i32 %35, %32
  %37 = inttoptr i32 %36 to ptr
  %38 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %39 = load volatile ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %23
  %42 = load volatile ptr, ptr %37, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %111, label %44

44:                                               ; preds = %41, %23
  %45 = add i32 %14, 52
  %46 = add i32 %45, %26
  %47 = and i32 %46, -8
  %48 = add i32 %47, -4
  %49 = call ptr @perf_trace_buf_alloc(i32 noundef %48, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %50 = icmp eq ptr %49, null
  br i1 %50, label %111, label %51

51:                                               ; preds = %44
  %52 = load ptr, ptr %3, align 4
  %53 = call ptr @llvm.returnaddress(i32 0) #15
  %54 = ptrtoint ptr %53 to i32
  %55 = getelementptr [18 x i32], ptr %52, i32 0, i32 15
  store i32 %54, ptr %55, align 4
  %56 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %57 = ptrtoint ptr %56 to i32
  %58 = getelementptr [18 x i32], ptr %52, i32 0, i32 11
  store i32 %57, ptr %58, align 4
  %59 = call i32 @llvm.read_register.i32(metadata !0) #15
  %60 = getelementptr [18 x i32], ptr %52, i32 0, i32 13
  store i32 %59, ptr %60, align 4
  %61 = getelementptr [18 x i32], ptr %52, i32 0, i32 16
  store i32 19, ptr %61, align 4
  %62 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 7
  store i32 %17, ptr %62, align 4
  %63 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 8
  store i32 %29, ptr %63, align 4
  %64 = load ptr, ptr %5, align 4
  %65 = getelementptr inbounds %struct.rpc_task, ptr %64, i32 0, i32 22
  %66 = load i16, ptr %65, align 8
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 1
  store i32 %67, ptr %68, align 4
  %69 = getelementptr inbounds %struct.rpc_task, ptr %64, i32 0, i32 13
  %70 = load ptr, ptr %69, align 8
  %71 = icmp eq ptr %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %51
  %73 = getelementptr inbounds %struct.rpc_clnt, ptr %70, i32 0, i32 1
  %74 = load i32, ptr %73, align 4
  br label %75

75:                                               ; preds = %72, %51
  %76 = phi i32 [ %74, %72 ], [ -1, %51 ]
  %77 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 2
  store i32 %76, ptr %77, align 4
  %78 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 5
  %79 = load i32, ptr %78, align 4
  %80 = call i32 @llvm.bswap.i32(i32 %79)
  %81 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 3
  store i32 %80, ptr %81, align 4
  %82 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 30
  %83 = load i32, ptr %82, align 8
  %84 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 4
  store i32 %83, ptr %84, align 4
  %85 = getelementptr inbounds %struct.rpc_task, ptr %64, i32 0, i32 5
  %86 = load i32, ptr %85, align 8
  %87 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 6
  store i32 %86, ptr %87, align 4
  %88 = getelementptr i8, ptr %49, i32 40
  %89 = load ptr, ptr %69, align 8
  %90 = getelementptr inbounds %struct.rpc_clnt, ptr %89, i32 0, i32 24
  %91 = load ptr, ptr %90, align 4
  %92 = load ptr, ptr %91, align 4
  %93 = icmp eq ptr %92, null
  %94 = select i1 %93, ptr @.str.72, ptr %92
  %95 = call ptr @strcpy(ptr noundef %88, ptr noundef nonnull %94)
  %96 = load ptr, ptr %69, align 8
  %97 = getelementptr inbounds %struct.rpc_clnt, ptr %96, i32 0, i32 9
  %98 = load i32, ptr %97, align 4
  %99 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %49, i32 0, i32 5
  store i32 %98, ptr %99, align 4
  %100 = and i32 %27, 65535
  %101 = getelementptr i8, ptr %49, i32 %100
  %102 = call ptr @rpc_proc_name(ptr noundef %64) #15
  %103 = icmp eq ptr %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %75
  %105 = call ptr @rpc_proc_name(ptr noundef %64) #15
  br label %106

106:                                              ; preds = %104, %75
  %107 = phi ptr [ %105, %104 ], [ @.str.72, %75 ]
  %108 = call ptr @strcpy(ptr noundef %101, ptr noundef %107)
  %109 = load i32, ptr %4, align 4
  %110 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %49, i32 noundef %48, i32 noundef %109, ptr noundef %0, i64 noundef 1, ptr noundef %110, ptr noundef %37, ptr noundef null) #15
  br label %111

111:                                              ; preds = %106, %44, %41
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_ping(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %49, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  %18 = select i1 %17, ptr @.str.72, ptr %16
  %19 = tail call i32 @strlen(ptr noundef nonnull %18) #15
  %20 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  %23 = select i1 %22, ptr @.str.72, ptr %21
  %24 = tail call i32 @strlen(ptr noundef nonnull %23) #15
  %25 = add i32 %24, 1
  %26 = add i32 %19, 21
  %27 = add i32 %26, %25
  %28 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %27) #15
  %29 = icmp eq ptr %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %14
  %31 = shl i32 %25, 16
  %32 = or i32 %31, %26
  %33 = shl i32 %19, 16
  %34 = add i32 %33, 65556
  %35 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %28, i32 0, i32 2
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %28, i32 0, i32 3
  store i32 %32, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %28, i32 0, i32 1
  store i32 %2, ptr %37, align 4
  %38 = getelementptr i8, ptr %28, i32 20
  %39 = load ptr, ptr %15, align 8
  %40 = icmp eq ptr %39, null
  %41 = select i1 %40, ptr @.str.72, ptr %39
  %42 = call ptr @strcpy(ptr noundef %38, ptr noundef nonnull %41)
  %43 = and i32 %26, 65535
  %44 = getelementptr i8, ptr %28, i32 %43
  %45 = load ptr, ptr %20, align 4
  %46 = icmp eq ptr %45, null
  %47 = select i1 %46, ptr @.str.72, ptr %45
  %48 = call ptr @strcpy(ptr noundef %44, ptr noundef nonnull %47)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %49

49:                                               ; preds = %30, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xprt_ping(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %7 = load ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, null
  %9 = select i1 %8, ptr @.str.72, ptr %7
  %10 = tail call i32 @strlen(ptr noundef nonnull %9) #15
  %11 = shl i32 %10, 16
  %12 = add i32 %11, 65536
  %13 = or i32 %12, 20
  %14 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  %17 = select i1 %16, ptr @.str.72, ptr %15
  %18 = tail call i32 @strlen(ptr noundef nonnull %17) #15
  %19 = add i32 %18, 1
  %20 = add i32 %10, 21
  %21 = shl i32 %19, 16
  %22 = or i32 %21, %20
  %23 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %24 = load ptr, ptr %23, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #11, !srcloc !12
  %29 = add i32 %28, %25
  %30 = inttoptr i32 %29 to ptr
  %31 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %32 = load volatile ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %3
  %35 = load volatile ptr, ptr %30, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %71, label %37

37:                                               ; preds = %34, %3
  %38 = add i32 %10, 32
  %39 = add i32 %38, %19
  %40 = and i32 %39, -8
  %41 = add i32 %40, -4
  %42 = call ptr @perf_trace_buf_alloc(i32 noundef %41, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %43 = icmp eq ptr %42, null
  br i1 %43, label %71, label %44

44:                                               ; preds = %37
  %45 = load ptr, ptr %4, align 4
  %46 = call ptr @llvm.returnaddress(i32 0) #15
  %47 = ptrtoint ptr %46 to i32
  %48 = getelementptr [18 x i32], ptr %45, i32 0, i32 15
  store i32 %47, ptr %48, align 4
  %49 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %50 = ptrtoint ptr %49 to i32
  %51 = getelementptr [18 x i32], ptr %45, i32 0, i32 11
  store i32 %50, ptr %51, align 4
  %52 = call i32 @llvm.read_register.i32(metadata !0) #15
  %53 = getelementptr [18 x i32], ptr %45, i32 0, i32 13
  store i32 %52, ptr %53, align 4
  %54 = getelementptr [18 x i32], ptr %45, i32 0, i32 16
  store i32 19, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %42, i32 0, i32 2
  store i32 %13, ptr %55, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %42, i32 0, i32 3
  store i32 %22, ptr %56, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %42, i32 0, i32 1
  store i32 %2, ptr %57, align 4
  %58 = getelementptr i8, ptr %42, i32 20
  %59 = load ptr, ptr %6, align 8
  %60 = icmp eq ptr %59, null
  %61 = select i1 %60, ptr @.str.72, ptr %59
  %62 = call ptr @strcpy(ptr noundef %58, ptr noundef nonnull %61)
  %63 = and i32 %20, 65535
  %64 = getelementptr i8, ptr %42, i32 %63
  %65 = load ptr, ptr %14, align 4
  %66 = icmp eq ptr %65, null
  %67 = select i1 %66, ptr @.str.72, ptr %65
  %68 = call ptr @strcpy(ptr noundef %64, ptr noundef nonnull %67)
  %69 = load i32, ptr %5, align 4
  %70 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %42, i32 noundef %41, i32 noundef %69, ptr noundef %0, i64 noundef 1, ptr noundef %70, ptr noundef %30, ptr noundef null) #15
  br label %71

71:                                               ; preds = %44, %37, %34
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_writelock_event(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %50, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %50, label %17

17:                                               ; preds = %14
  %18 = icmp eq ptr %2, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 22
  %21 = load i16, ptr %20, align 8
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %15, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 13
  %25 = load ptr, ptr %24, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.rpc_clnt, ptr %25, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  br label %32

30:                                               ; preds = %17
  %31 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %15, i32 0, i32 1
  store i32 -1, ptr %31, align 4
  br label %32

32:                                               ; preds = %30, %27, %19
  %33 = phi i32 [ -1, %30 ], [ %29, %27 ], [ -1, %19 ]
  %34 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %15, i32 0, i32 2
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 37
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %40 = load volatile i32, ptr %39, align 4
  %41 = and i32 %40, 4096
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.rpc_task, ptr %36, i32 0, i32 22
  %45 = load i16, ptr %44, align 8
  %46 = zext i16 %45 to i32
  br label %47

47:                                               ; preds = %43, %38, %32
  %48 = phi i32 [ %46, %43 ], [ -1, %38 ], [ -1, %32 ]
  %49 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %15, i32 0, i32 3
  store i32 %48, ptr %49, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %50

50:                                               ; preds = %47, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xprt_writelock_event(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %68, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %68, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = icmp eq ptr %2, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 22
  %37 = load i16, ptr %36, align 8
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %21, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 13
  %41 = load ptr, ptr %40, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %struct.rpc_clnt, ptr %41, i32 0, i32 1
  %45 = load i32, ptr %44, align 4
  br label %48

46:                                               ; preds = %23
  %47 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %21, i32 0, i32 1
  store i32 -1, ptr %47, align 4
  br label %48

48:                                               ; preds = %46, %43, %35
  %49 = phi i32 [ -1, %46 ], [ %45, %43 ], [ -1, %35 ]
  %50 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %21, i32 0, i32 2
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 37
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %56 = load volatile i32, ptr %55, align 4
  %57 = and i32 %56, 4096
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.rpc_task, ptr %52, i32 0, i32 22
  %61 = load i16, ptr %60, align 8
  %62 = zext i16 %61 to i32
  br label %63

63:                                               ; preds = %59, %54, %48
  %64 = phi i32 [ %62, %59 ], [ -1, %54 ], [ -1, %48 ]
  %65 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %21, i32 0, i32 3
  store i32 %64, ptr %65, align 4
  %66 = load i32, ptr %5, align 4
  %67 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %66, ptr noundef %0, i64 noundef 1, ptr noundef %67, ptr noundef %13, ptr noundef null) #15
  br label %68

68:                                               ; preds = %63, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_cong_event(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %62, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 32) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %62, label %17

17:                                               ; preds = %14
  %18 = icmp eq ptr %2, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 22
  %21 = load i16, ptr %20, align 8
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %15, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 13
  %25 = load ptr, ptr %24, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.rpc_clnt, ptr %25, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  br label %32

30:                                               ; preds = %17
  %31 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %15, i32 0, i32 1
  store i32 -1, ptr %31, align 4
  br label %32

32:                                               ; preds = %30, %27, %19
  %33 = phi i32 [ -1, %30 ], [ %29, %27 ], [ -1, %19 ]
  %34 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %15, i32 0, i32 2
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 37
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %40 = load volatile i32, ptr %39, align 4
  %41 = and i32 %40, 4096
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.rpc_task, ptr %36, i32 0, i32 22
  %45 = load i16, ptr %44, align 8
  %46 = zext i16 %45 to i32
  br label %47

47:                                               ; preds = %43, %38, %32
  %48 = phi i32 [ %46, %43 ], [ -1, %38 ], [ -1, %32 ]
  %49 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %15, i32 0, i32 3
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 7
  %51 = load i32, ptr %50, align 8
  %52 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %15, i32 0, i32 4
  store i32 %51, ptr %52, align 4
  %53 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 8
  %54 = load i32, ptr %53, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %15, i32 0, i32 5
  store i32 %54, ptr %55, align 4
  %56 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %57 = load volatile i32, ptr %56, align 4
  %58 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %15, i32 0, i32 6
  %59 = lshr i32 %57, 10
  %60 = trunc i32 %59 to i8
  %61 = and i8 %60, 1
  store i8 %61, ptr %58, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %62

62:                                               ; preds = %47, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xprt_cong_event(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %80, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %80, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = icmp eq ptr %2, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 22
  %37 = load i16, ptr %36, align 8
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %21, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 13
  %41 = load ptr, ptr %40, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %struct.rpc_clnt, ptr %41, i32 0, i32 1
  %45 = load i32, ptr %44, align 4
  br label %48

46:                                               ; preds = %23
  %47 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %21, i32 0, i32 1
  store i32 -1, ptr %47, align 4
  br label %48

48:                                               ; preds = %46, %43, %35
  %49 = phi i32 [ -1, %46 ], [ %45, %43 ], [ -1, %35 ]
  %50 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %21, i32 0, i32 2
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 37
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %56 = load volatile i32, ptr %55, align 4
  %57 = and i32 %56, 4096
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.rpc_task, ptr %52, i32 0, i32 22
  %61 = load i16, ptr %60, align 8
  %62 = zext i16 %61 to i32
  br label %63

63:                                               ; preds = %59, %54, %48
  %64 = phi i32 [ %62, %59 ], [ -1, %54 ], [ -1, %48 ]
  %65 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %21, i32 0, i32 3
  store i32 %64, ptr %65, align 4
  %66 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 7
  %67 = load i32, ptr %66, align 8
  %68 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %21, i32 0, i32 4
  store i32 %67, ptr %68, align 4
  %69 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 8
  %70 = load i32, ptr %69, align 4
  %71 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %21, i32 0, i32 5
  store i32 %70, ptr %71, align 4
  %72 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 18
  %73 = load volatile i32, ptr %72, align 4
  %74 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %21, i32 0, i32 6
  %75 = lshr i32 %73, 10
  %76 = trunc i32 %75 to i8
  %77 = and i8 %76, 1
  store i8 %77, ptr %74, align 4
  %78 = load i32, ptr %5, align 4
  %79 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 36, i32 noundef %78, ptr noundef %0, i64 noundef 1, ptr noundef %79, ptr noundef %13, ptr noundef null) #15
  br label %80

80:                                               ; preds = %63, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_reserve(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %33, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 20) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.rpc_task, ptr %18, i32 0, i32 22
  %20 = load i16, ptr %19, align 8
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %14, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = load ptr, ptr %17, align 4
  %24 = getelementptr inbounds %struct.rpc_task, ptr %23, i32 0, i32 13
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %struct.rpc_clnt, ptr %25, i32 0, i32 1
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %14, i32 0, i32 2
  store i32 %27, ptr %28, align 4
  %29 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 5
  %30 = load i32, ptr %29, align 4
  %31 = call i32 @llvm.bswap.i32(i32 %30)
  %32 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %14, i32 0, i32 3
  store i32 %31, ptr %32, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %33

33:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xprt_reserve(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %51, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 3
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.rpc_task, ptr %34, i32 0, i32 22
  %36 = load i16, ptr %35, align 8
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %20, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = load ptr, ptr %33, align 4
  %40 = getelementptr inbounds %struct.rpc_task, ptr %39, i32 0, i32 13
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %struct.rpc_clnt, ptr %41, i32 0, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %20, i32 0, i32 2
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 5
  %46 = load i32, ptr %45, align 4
  %47 = call i32 @llvm.bswap.i32(i32 %46)
  %48 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %20, i32 0, i32 3
  store i32 %47, ptr %48, align 4
  %49 = load i32, ptr %4, align 4
  %50 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %49, ptr noundef %0, i64 noundef 1, ptr noundef %50, ptr noundef %12, ptr noundef null) #15
  br label %51

51:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_stream_read_data(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %62, label %15

15:                                               ; preds = %13, %10, %4
  %16 = icmp eq ptr %1, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %19 = load ptr, ptr %18, align 8
  %20 = icmp eq ptr %19, null
  %21 = select i1 %20, ptr @.str.72, ptr %19
  %22 = tail call i32 @strlen(ptr noundef nonnull %21) #15
  %23 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  %26 = select i1 %25, ptr @.str.72, ptr %24
  br label %27

27:                                               ; preds = %17, %15
  %28 = phi i32 [ %22, %17 ], [ 6, %15 ]
  %29 = phi ptr [ %26, %17 ], [ @.str.72, %15 ]
  %30 = tail call i32 @strlen(ptr noundef nonnull %29) #15
  %31 = add i32 %30, 1
  %32 = add i32 %28, 25
  %33 = add i32 %32, %31
  %34 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %33) #15
  %35 = icmp eq ptr %34, null
  br i1 %35, label %62, label %36

36:                                               ; preds = %27
  %37 = shl i32 %31, 16
  %38 = or i32 %37, %32
  %39 = shl i32 %28, 16
  %40 = add i32 %39, 65560
  %41 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %34, i32 0, i32 3
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %34, i32 0, i32 4
  store i32 %38, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %34, i32 0, i32 1
  store i32 %2, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %34, i32 0, i32 2
  store i32 %3, ptr %44, align 4
  %45 = getelementptr i8, ptr %34, i32 24
  br i1 %16, label %56, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %48 = load ptr, ptr %47, align 8
  %49 = icmp eq ptr %48, null
  %50 = select i1 %49, ptr @.str.72, ptr %48
  %51 = call ptr @strcpy(ptr noundef %45, ptr noundef nonnull %50)
  %52 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %53 = load ptr, ptr %52, align 4
  %54 = icmp eq ptr %53, null
  %55 = select i1 %54, ptr @.str.72, ptr %53
  br label %57

56:                                               ; preds = %36
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(7) %45, ptr noundef nonnull align 1 dereferenceable(7) @.str.72, i32 7, i1 false)
  br label %57

57:                                               ; preds = %56, %46
  %58 = phi ptr [ @.str.72, %56 ], [ %55, %46 ]
  %59 = and i32 %32, 65535
  %60 = getelementptr i8, ptr %34, i32 %59
  %61 = call ptr @strcpy(ptr noundef %60, ptr noundef nonnull %58)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %62

62:                                               ; preds = %57, %27, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xs_stream_read_data(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = icmp eq ptr %1, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %10 = load ptr, ptr %9, align 8
  %11 = icmp eq ptr %10, null
  %12 = select i1 %11, ptr @.str.72, ptr %10
  %13 = tail call i32 @strlen(ptr noundef nonnull %12) #15
  %14 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  %17 = select i1 %16, ptr @.str.72, ptr %15
  br label %18

18:                                               ; preds = %8, %4
  %19 = phi i32 [ %13, %8 ], [ 6, %4 ]
  %20 = phi ptr [ %17, %8 ], [ @.str.72, %4 ]
  %21 = shl i32 %19, 16
  %22 = add i32 %21, 65536
  %23 = or i32 %22, 24
  %24 = tail call i32 @strlen(ptr noundef nonnull %20) #15
  %25 = add i32 %24, 1
  %26 = add i32 %19, 25
  %27 = shl i32 %25, 16
  %28 = or i32 %27, %26
  %29 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %30 = load ptr, ptr %29, align 4
  %31 = ptrtoint ptr %30 to i32
  %32 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %33 = inttoptr i32 %32 to ptr
  %34 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %33) #11, !srcloc !12
  %35 = add i32 %34, %31
  %36 = inttoptr i32 %35 to ptr
  %37 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %38 = load volatile ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %18
  %41 = load volatile ptr, ptr %36, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %84, label %43

43:                                               ; preds = %40, %18
  %44 = add i32 %19, 36
  %45 = add i32 %44, %25
  %46 = and i32 %45, -8
  %47 = add i32 %46, -4
  %48 = call ptr @perf_trace_buf_alloc(i32 noundef %47, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %49 = icmp eq ptr %48, null
  br i1 %49, label %84, label %50

50:                                               ; preds = %43
  %51 = load ptr, ptr %5, align 4
  %52 = call ptr @llvm.returnaddress(i32 0) #15
  %53 = ptrtoint ptr %52 to i32
  %54 = getelementptr [18 x i32], ptr %51, i32 0, i32 15
  store i32 %53, ptr %54, align 4
  %55 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %56 = ptrtoint ptr %55 to i32
  %57 = getelementptr [18 x i32], ptr %51, i32 0, i32 11
  store i32 %56, ptr %57, align 4
  %58 = call i32 @llvm.read_register.i32(metadata !0) #15
  %59 = getelementptr [18 x i32], ptr %51, i32 0, i32 13
  store i32 %58, ptr %59, align 4
  %60 = getelementptr [18 x i32], ptr %51, i32 0, i32 16
  store i32 19, ptr %60, align 4
  %61 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %48, i32 0, i32 3
  store i32 %23, ptr %61, align 4
  %62 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %48, i32 0, i32 4
  store i32 %28, ptr %62, align 4
  %63 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %48, i32 0, i32 1
  store i32 %2, ptr %63, align 4
  %64 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %48, i32 0, i32 2
  store i32 %3, ptr %64, align 4
  %65 = getelementptr i8, ptr %48, i32 24
  br i1 %7, label %76, label %66

66:                                               ; preds = %50
  %67 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %68 = load ptr, ptr %67, align 8
  %69 = icmp eq ptr %68, null
  %70 = select i1 %69, ptr @.str.72, ptr %68
  %71 = call ptr @strcpy(ptr noundef %65, ptr noundef nonnull %70)
  %72 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %73 = load ptr, ptr %72, align 4
  %74 = icmp eq ptr %73, null
  %75 = select i1 %74, ptr @.str.72, ptr %73
  br label %77

76:                                               ; preds = %50
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(7) %65, ptr noundef nonnull align 1 dereferenceable(7) @.str.72, i32 7, i1 false)
  br label %77

77:                                               ; preds = %76, %66
  %78 = phi ptr [ @.str.72, %76 ], [ %75, %66 ]
  %79 = and i32 %26, 65535
  %80 = getelementptr i8, ptr %48, i32 %79
  %81 = call ptr @strcpy(ptr noundef %80, ptr noundef nonnull %78)
  %82 = load i32, ptr %6, align 4
  %83 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %48, i32 noundef %47, i32 noundef %82, ptr noundef %0, i64 noundef 1, ptr noundef %83, ptr noundef %36, ptr noundef null) #15
  br label %84

84:                                               ; preds = %77, %43, %40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_stream_read_request(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %60, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %15 = load ptr, ptr %14, align 8
  %16 = icmp eq ptr %15, null
  %17 = select i1 %16, ptr @.str.72, ptr %15
  %18 = tail call i32 @strlen(ptr noundef nonnull %17) #15
  %19 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  %22 = select i1 %21, ptr @.str.72, ptr %20
  %23 = tail call i32 @strlen(ptr noundef nonnull %22) #15
  %24 = add i32 %23, 1
  %25 = add i32 %18, 33
  %26 = add i32 %25, %24
  %27 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %26) #15
  %28 = icmp eq ptr %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %13
  %30 = shl i32 %24, 16
  %31 = or i32 %30, %25
  %32 = shl i32 %18, 16
  %33 = add i32 %32, 65568
  %34 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %27, i32 0, i32 1
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %27, i32 0, i32 2
  store i32 %31, ptr %35, align 4
  %36 = getelementptr i8, ptr %27, i32 32
  %37 = load ptr, ptr %14, align 8
  %38 = icmp eq ptr %37, null
  %39 = select i1 %38, ptr @.str.72, ptr %37
  %40 = call ptr @strcpy(ptr noundef %36, ptr noundef nonnull %39)
  %41 = and i32 %25, 65535
  %42 = getelementptr i8, ptr %27, i32 %41
  %43 = load ptr, ptr %19, align 4
  %44 = icmp eq ptr %43, null
  %45 = select i1 %44, ptr @.str.72, ptr %43
  %46 = call ptr @strcpy(ptr noundef %42, ptr noundef nonnull %45)
  %47 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 0, i32 1
  %48 = load i32, ptr %47, align 4
  %49 = call i32 @llvm.bswap.i32(i32 %48)
  %50 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %27, i32 0, i32 3
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 3
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %27, i32 0, i32 4
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 2
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %27, i32 0, i32 5
  store i32 %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 1
  %58 = load i32, ptr %57, align 4
  %59 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %27, i32 0, i32 6
  store i32 %58, ptr %59, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %60

60:                                               ; preds = %29, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_xs_stream_read_request(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 51
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, null
  %8 = select i1 %7, ptr @.str.72, ptr %6
  %9 = tail call i32 @strlen(ptr noundef nonnull %8) #15
  %10 = shl i32 %9, 16
  %11 = add i32 %10, 65536
  %12 = or i32 %11, 32
  %13 = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  %16 = select i1 %15, ptr @.str.72, ptr %14
  %17 = tail call i32 @strlen(ptr noundef nonnull %16) #15
  %18 = add i32 %17, 1
  %19 = add i32 %9, 33
  %20 = shl i32 %18, 16
  %21 = or i32 %20, %19
  %22 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %23 = load ptr, ptr %22, align 4
  %24 = ptrtoint ptr %23 to i32
  %25 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %26 = inttoptr i32 %25 to ptr
  %27 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %26) #11, !srcloc !12
  %28 = add i32 %27, %24
  %29 = inttoptr i32 %28 to ptr
  %30 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %31 = load volatile ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %2
  %34 = load volatile ptr, ptr %29, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %82, label %36

36:                                               ; preds = %33, %2
  %37 = add i32 %9, 44
  %38 = add i32 %37, %18
  %39 = and i32 %38, -8
  %40 = add i32 %39, -4
  %41 = call ptr @perf_trace_buf_alloc(i32 noundef %40, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %42 = icmp eq ptr %41, null
  br i1 %42, label %82, label %43

43:                                               ; preds = %36
  %44 = load ptr, ptr %3, align 4
  %45 = call ptr @llvm.returnaddress(i32 0) #15
  %46 = ptrtoint ptr %45 to i32
  %47 = getelementptr [18 x i32], ptr %44, i32 0, i32 15
  store i32 %46, ptr %47, align 4
  %48 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %49 = ptrtoint ptr %48 to i32
  %50 = getelementptr [18 x i32], ptr %44, i32 0, i32 11
  store i32 %49, ptr %50, align 4
  %51 = call i32 @llvm.read_register.i32(metadata !0) #15
  %52 = getelementptr [18 x i32], ptr %44, i32 0, i32 13
  store i32 %51, ptr %52, align 4
  %53 = getelementptr [18 x i32], ptr %44, i32 0, i32 16
  store i32 19, ptr %53, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %41, i32 0, i32 1
  store i32 %12, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %41, i32 0, i32 2
  store i32 %21, ptr %55, align 4
  %56 = getelementptr i8, ptr %41, i32 32
  %57 = load ptr, ptr %5, align 8
  %58 = icmp eq ptr %57, null
  %59 = select i1 %58, ptr @.str.72, ptr %57
  %60 = call ptr @strcpy(ptr noundef %56, ptr noundef nonnull %59)
  %61 = and i32 %19, 65535
  %62 = getelementptr i8, ptr %41, i32 %61
  %63 = load ptr, ptr %13, align 4
  %64 = icmp eq ptr %63, null
  %65 = select i1 %64, ptr @.str.72, ptr %63
  %66 = call ptr @strcpy(ptr noundef %62, ptr noundef nonnull %65)
  %67 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 0, i32 1
  %68 = load i32, ptr %67, align 4
  %69 = call i32 @llvm.bswap.i32(i32 %68)
  %70 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %41, i32 0, i32 3
  store i32 %69, ptr %70, align 4
  %71 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 3
  %72 = load i32, ptr %71, align 4
  %73 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %41, i32 0, i32 4
  store i32 %72, ptr %73, align 4
  %74 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 2
  %75 = load i32, ptr %74, align 4
  %76 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %41, i32 0, i32 5
  store i32 %75, ptr %76, align 4
  %77 = getelementptr inbounds %struct.sock_xprt, ptr %1, i32 0, i32 4, i32 1
  %78 = load i32, ptr %77, align 4
  %79 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %41, i32 0, i32 6
  store i32 %78, ptr %79, align 4
  %80 = load i32, ptr %4, align 4
  %81 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %41, i32 noundef %40, i32 noundef %80, ptr noundef %0, i64 noundef 1, ptr noundef %81, ptr noundef %29, ptr noundef null) #15
  br label %82

82:                                               ; preds = %43, %36, %33
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_getport(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %55, label %15

15:                                               ; preds = %13, %10, %4
  %16 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 14
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.rpc_xprt, ptr %17, i32 0, i32 50
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  %21 = select i1 %20, ptr @.str.72, ptr %19
  %22 = tail call i32 @strlen(ptr noundef nonnull %21) #15
  %23 = add i32 %22, 37
  %24 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %23) #15
  %25 = icmp eq ptr %24, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %15
  %27 = shl i32 %22, 16
  %28 = add i32 %27, 65572
  %29 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %24, i32 0, i32 7
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 22
  %31 = load i16, ptr %30, align 8
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %24, i32 0, i32 1
  store i32 %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %24, i32 0, i32 2
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 8
  %38 = load i32, ptr %37, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %24, i32 0, i32 3
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 9
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %24, i32 0, i32 4
  store i32 %41, ptr %42, align 4
  %43 = load ptr, ptr %16, align 4
  %44 = getelementptr inbounds %struct.rpc_xprt, ptr %43, i32 0, i32 6
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %24, i32 0, i32 5
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %24, i32 0, i32 6
  store i32 %3, ptr %47, align 4
  %48 = getelementptr i8, ptr %24, i32 36
  %49 = load ptr, ptr %16, align 4
  %50 = getelementptr inbounds %struct.rpc_xprt, ptr %49, i32 0, i32 50
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  %53 = select i1 %52, ptr @.str.72, ptr %51
  %54 = call ptr @strcpy(ptr noundef %48, ptr noundef nonnull %53)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %55

55:                                               ; preds = %26, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_getport(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 14
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.rpc_xprt, ptr %8, i32 0, i32 50
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  %12 = select i1 %11, ptr @.str.72, ptr %10
  %13 = tail call i32 @strlen(ptr noundef nonnull %12) #15
  %14 = shl i32 %13, 16
  %15 = add i32 %14, 65572
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %17 = load ptr, ptr %16, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %20 = inttoptr i32 %19 to ptr
  %21 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %20) #11, !srcloc !12
  %22 = add i32 %21, %18
  %23 = inttoptr i32 %22 to ptr
  %24 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %25 = load volatile ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %4
  %28 = load volatile ptr, ptr %23, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %75, label %30

30:                                               ; preds = %27, %4
  %31 = add i32 %13, 48
  %32 = and i32 %31, -8
  %33 = add i32 %32, -4
  %34 = call ptr @perf_trace_buf_alloc(i32 noundef %33, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %35 = icmp eq ptr %34, null
  br i1 %35, label %75, label %36

36:                                               ; preds = %30
  %37 = load ptr, ptr %5, align 4
  %38 = call ptr @llvm.returnaddress(i32 0) #15
  %39 = ptrtoint ptr %38 to i32
  %40 = getelementptr [18 x i32], ptr %37, i32 0, i32 15
  store i32 %39, ptr %40, align 4
  %41 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %42 = ptrtoint ptr %41 to i32
  %43 = getelementptr [18 x i32], ptr %37, i32 0, i32 11
  store i32 %42, ptr %43, align 4
  %44 = call i32 @llvm.read_register.i32(metadata !0) #15
  %45 = getelementptr [18 x i32], ptr %37, i32 0, i32 13
  store i32 %44, ptr %45, align 4
  %46 = getelementptr [18 x i32], ptr %37, i32 0, i32 16
  store i32 19, ptr %46, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %34, i32 0, i32 7
  store i32 %15, ptr %47, align 4
  %48 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 22
  %49 = load i16, ptr %48, align 8
  %50 = zext i16 %49 to i32
  %51 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %34, i32 0, i32 1
  store i32 %50, ptr %51, align 4
  %52 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 1
  %53 = load i32, ptr %52, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %34, i32 0, i32 2
  store i32 %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 8
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %34, i32 0, i32 3
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 9
  %59 = load i32, ptr %58, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %34, i32 0, i32 4
  store i32 %59, ptr %60, align 4
  %61 = load ptr, ptr %7, align 4
  %62 = getelementptr inbounds %struct.rpc_xprt, ptr %61, i32 0, i32 6
  %63 = load i32, ptr %62, align 4
  %64 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %34, i32 0, i32 5
  store i32 %63, ptr %64, align 4
  %65 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %34, i32 0, i32 6
  store i32 %3, ptr %65, align 4
  %66 = getelementptr i8, ptr %34, i32 36
  %67 = load ptr, ptr %7, align 4
  %68 = getelementptr inbounds %struct.rpc_xprt, ptr %67, i32 0, i32 50
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  %71 = select i1 %70, ptr @.str.72, ptr %69
  %72 = call ptr @strcpy(ptr noundef %66, ptr noundef nonnull %71)
  %73 = load i32, ptr %6, align 4
  %74 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %34, i32 noundef %33, i32 noundef %73, ptr noundef %0, i64 noundef 1, ptr noundef %74, ptr noundef %23, ptr noundef null) #15
  br label %75

75:                                               ; preds = %36, %30, %27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_setport(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i16 noundef zeroext %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %30, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 24) #15
  %17 = icmp eq ptr %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %20 = load i16, ptr %19, align 8
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %16, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.rpc_clnt, ptr %24, i32 0, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %16, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %16, i32 0, i32 3
  store i32 %2, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %16, i32 0, i32 4
  store i16 %3, ptr %29, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %30

30:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_setport(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i16 noundef zeroext %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #11, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %48, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %23 = icmp eq ptr %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #15
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #15
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 22
  %36 = load i16, ptr %35, align 8
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %22, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 13
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %struct.rpc_clnt, ptr %40, i32 0, i32 1
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %22, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %22, i32 0, i32 3
  store i32 %2, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %22, i32 0, i32 4
  store i16 %3, ptr %45, align 4
  %46 = load i32, ptr %6, align 4
  %47 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 28, i32 noundef %46, ptr noundef %0, i64 noundef 1, ptr noundef %47, ptr noundef %14, ptr noundef null) #15
  br label %48

48:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_pmap_register(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %15, label %25, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 24) #15
  %18 = icmp eq ptr %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %17, i32 0, i32 1
  store i32 %1, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %17, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %17, i32 0, i32 3
  store i32 %3, ptr %22, align 4
  %23 = zext i16 %4 to i32
  %24 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %17, i32 0, i32 4
  store i32 %23, ptr %24, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #15
  br label %25

25:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_pmap_register(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #15
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #11, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %6, ptr noundef nonnull %7) #15
  %24 = icmp eq ptr %23, null
  br i1 %24, label %43, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #15
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %23, i32 0, i32 1
  store i32 %1, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %23, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %23, i32 0, i32 3
  store i32 %3, ptr %38, align 4
  %39 = zext i16 %4 to i32
  %40 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %23, i32 0, i32 4
  store i32 %39, ptr %40, align 4
  %41 = load i32, ptr %7, align 4
  %42 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 28, i32 noundef %41, ptr noundef %0, i64 noundef 1, ptr noundef %42, ptr noundef %15, ptr noundef null) #15
  br label %43

43:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_register(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef readonly %3, ptr noundef readonly %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %15, label %42, label %16

16:                                               ; preds = %14, %11, %5
  %17 = icmp eq ptr %3, null
  %18 = select i1 %17, ptr @.str.72, ptr %3
  %19 = tail call i32 @strlen(ptr noundef %18) #15
  %20 = icmp eq ptr %4, null
  %21 = select i1 %20, ptr @.str.72, ptr %4
  %22 = tail call i32 @strlen(ptr noundef %21) #15
  %23 = add i32 %22, 1
  %24 = add i32 %19, 25
  %25 = add i32 %24, %23
  %26 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef %25) #15
  %27 = icmp eq ptr %26, null
  br i1 %27, label %42, label %28

28:                                               ; preds = %16
  %29 = shl i32 %23, 16
  %30 = or i32 %29, %24
  %31 = shl i32 %19, 16
  %32 = add i32 %31, 65560
  %33 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %26, i32 0, i32 3
  store i32 %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %26, i32 0, i32 4
  store i32 %30, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %26, i32 0, i32 1
  store i32 %1, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %26, i32 0, i32 2
  store i32 %2, ptr %36, align 4
  %37 = getelementptr i8, ptr %26, i32 24
  %38 = call ptr @strcpy(ptr noundef %37, ptr noundef %18)
  %39 = and i32 %24, 65535
  %40 = getelementptr i8, ptr %26, i32 %39
  %41 = call ptr @strcpy(ptr noundef %40, ptr noundef %21)
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #15
  br label %42

42:                                               ; preds = %28, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_register(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef readonly %3, ptr noundef readonly %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #15
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = icmp eq ptr %3, null
  %9 = select i1 %8, ptr @.str.72, ptr %3
  %10 = tail call i32 @strlen(ptr noundef %9) #15
  %11 = shl i32 %10, 16
  %12 = add i32 %11, 65536
  %13 = or i32 %12, 24
  %14 = icmp eq ptr %4, null
  %15 = select i1 %14, ptr @.str.72, ptr %4
  %16 = tail call i32 @strlen(ptr noundef %15) #15
  %17 = add i32 %16, 1
  %18 = add i32 %10, 25
  %19 = shl i32 %17, 16
  %20 = or i32 %19, %18
  %21 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %22 = load ptr, ptr %21, align 4
  %23 = ptrtoint ptr %22 to i32
  %24 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %25 = inttoptr i32 %24 to ptr
  %26 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %25) #11, !srcloc !12
  %27 = add i32 %26, %23
  %28 = inttoptr i32 %27 to ptr
  %29 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %30 = load volatile ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %5
  %33 = load volatile ptr, ptr %28, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %64, label %35

35:                                               ; preds = %32, %5
  %36 = add i32 %10, 36
  %37 = add i32 %36, %17
  %38 = and i32 %37, -8
  %39 = add i32 %38, -4
  %40 = call ptr @perf_trace_buf_alloc(i32 noundef %39, ptr noundef nonnull %6, ptr noundef nonnull %7) #15
  %41 = icmp eq ptr %40, null
  br i1 %41, label %64, label %42

42:                                               ; preds = %35
  %43 = load ptr, ptr %6, align 4
  %44 = call ptr @llvm.returnaddress(i32 0) #15
  %45 = ptrtoint ptr %44 to i32
  %46 = getelementptr [18 x i32], ptr %43, i32 0, i32 15
  store i32 %45, ptr %46, align 4
  %47 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %48 = ptrtoint ptr %47 to i32
  %49 = getelementptr [18 x i32], ptr %43, i32 0, i32 11
  store i32 %48, ptr %49, align 4
  %50 = call i32 @llvm.read_register.i32(metadata !0) #15
  %51 = getelementptr [18 x i32], ptr %43, i32 0, i32 13
  store i32 %50, ptr %51, align 4
  %52 = getelementptr [18 x i32], ptr %43, i32 0, i32 16
  store i32 19, ptr %52, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %40, i32 0, i32 3
  store i32 %13, ptr %53, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %40, i32 0, i32 4
  store i32 %20, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %40, i32 0, i32 1
  store i32 %1, ptr %55, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %40, i32 0, i32 2
  store i32 %2, ptr %56, align 4
  %57 = getelementptr i8, ptr %40, i32 24
  %58 = call ptr @strcpy(ptr noundef %57, ptr noundef %9)
  %59 = and i32 %18, 65535
  %60 = getelementptr i8, ptr %40, i32 %59
  %61 = call ptr @strcpy(ptr noundef %60, ptr noundef %15)
  %62 = load i32, ptr %7, align 4
  %63 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %40, i32 noundef %39, i32 noundef %62, ptr noundef %0, i64 noundef 1, ptr noundef %63, ptr noundef %28, ptr noundef null) #15
  br label %64

64:                                               ; preds = %42, %35, %32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_unregister(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef readonly %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %30, label %15

15:                                               ; preds = %13, %10, %4
  %16 = icmp eq ptr %3, null
  %17 = select i1 %16, ptr @.str.72, ptr %3
  %18 = tail call i32 @strlen(ptr noundef %17) #15
  %19 = add i32 %18, 21
  %20 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %19) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %15
  %23 = shl i32 %18, 16
  %24 = add i32 %23, 65556
  %25 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %20, i32 0, i32 3
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %20, i32 0, i32 1
  store i32 %1, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %20, i32 0, i32 2
  store i32 %2, ptr %27, align 4
  %28 = getelementptr i8, ptr %20, i32 20
  %29 = call ptr @strcpy(ptr noundef %28, ptr noundef %17)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %30

30:                                               ; preds = %22, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_unregister(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef readonly %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = icmp eq ptr %3, null
  %8 = select i1 %7, ptr @.str.72, ptr %3
  %9 = tail call i32 @strlen(ptr noundef %8) #15
  %10 = shl i32 %9, 16
  %11 = add i32 %10, 65556
  %12 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %13 = load ptr, ptr %12, align 4
  %14 = ptrtoint ptr %13 to i32
  %15 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %16 = inttoptr i32 %15 to ptr
  %17 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %16) #11, !srcloc !12
  %18 = add i32 %17, %14
  %19 = inttoptr i32 %18 to ptr
  %20 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %4
  %24 = load volatile ptr, ptr %19, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %23, %4
  %27 = add i32 %9, 32
  %28 = and i32 %27, -8
  %29 = add i32 %28, -4
  %30 = call ptr @perf_trace_buf_alloc(i32 noundef %29, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %31 = icmp eq ptr %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %26
  %33 = load ptr, ptr %5, align 4
  %34 = call ptr @llvm.returnaddress(i32 0) #15
  %35 = ptrtoint ptr %34 to i32
  %36 = getelementptr [18 x i32], ptr %33, i32 0, i32 15
  store i32 %35, ptr %36, align 4
  %37 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %38 = ptrtoint ptr %37 to i32
  %39 = getelementptr [18 x i32], ptr %33, i32 0, i32 11
  store i32 %38, ptr %39, align 4
  %40 = call i32 @llvm.read_register.i32(metadata !0) #15
  %41 = getelementptr [18 x i32], ptr %33, i32 0, i32 13
  store i32 %40, ptr %41, align 4
  %42 = getelementptr [18 x i32], ptr %33, i32 0, i32 16
  store i32 19, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %30, i32 0, i32 3
  store i32 %11, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %30, i32 0, i32 1
  store i32 %1, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %30, i32 0, i32 2
  store i32 %2, ptr %45, align 4
  %46 = getelementptr i8, ptr %30, i32 20
  %47 = call ptr @strcpy(ptr noundef %46, ptr noundef %8)
  %48 = load i32, ptr %6, align 4
  %49 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %30, i32 noundef %29, i32 noundef %48, ptr noundef %0, i64 noundef 1, ptr noundef %49, ptr noundef %19, ptr noundef null) #15
  br label %50

50:                                               ; preds = %32, %26, %23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xdr_msg_class(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %37, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 36) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %13
  %17 = load ptr, ptr %1, align 4
  %18 = load i32, ptr %17, align 4
  %19 = call i32 @llvm.bswap.i32(i32 %18)
  %20 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %14, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %14, i32 0, i32 2
  store ptr %17, ptr %21, align 4
  %22 = getelementptr inbounds %struct.kvec, ptr %1, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %14, i32 0, i32 3
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %14, i32 0, i32 4
  store ptr %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 1, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %14, i32 0, i32 5
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 5
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %14, i32 0, i32 6
  store i32 %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 8
  %35 = load i32, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %14, i32 0, i32 7
  store i32 %35, ptr %36, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %37

37:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_xdr_msg_class(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %55, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %55, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = load ptr, ptr %1, align 4
  %34 = load i32, ptr %33, align 4
  %35 = call i32 @llvm.bswap.i32(i32 %34)
  %36 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %20, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %20, i32 0, i32 2
  store ptr %33, ptr %37, align 4
  %38 = getelementptr inbounds %struct.kvec, ptr %1, i32 0, i32 1
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %20, i32 0, i32 3
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %20, i32 0, i32 4
  store ptr %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 1, i32 0, i32 1
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %20, i32 0, i32 5
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 5
  %48 = load i32, ptr %47, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %20, i32 0, i32 6
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.xdr_buf, ptr %1, i32 0, i32 8
  %51 = load i32, ptr %50, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %20, i32 0, i32 7
  store i32 %51, ptr %52, align 4
  %53 = load i32, ptr %4, align 4
  %54 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 36, i32 noundef %53, ptr noundef %0, i64 noundef 1, ptr noundef %54, ptr noundef %12, ptr noundef null) #15
  br label %55

55:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xdr_buf_class(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %40, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 40) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %14
  %18 = call i32 @llvm.bswap.i32(i32 %1)
  %19 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 1
  store i32 %18, ptr %19, align 4
  %20 = load ptr, ptr %2, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 2
  store ptr %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.kvec, ptr %2, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 3
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 4
  store ptr %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 5
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 4
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 6
  store i32 %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 5
  %35 = load i32, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 7
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 8
  %38 = load i32, ptr %37, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %15, i32 0, i32 8
  store i32 %38, ptr %39, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %40

40:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_xdr_buf_class(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %58, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = call i32 @llvm.bswap.i32(i32 %1)
  %35 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 1
  store i32 %34, ptr %35, align 4
  %36 = load ptr, ptr %2, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 2
  store ptr %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.kvec, ptr %2, i32 0, i32 1
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 3
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 4
  store ptr %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 1, i32 0, i32 1
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 5
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 4
  %48 = load i32, ptr %47, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 6
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 5
  %51 = load i32, ptr %50, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 7
  store i32 %51, ptr %52, align 4
  %53 = getelementptr inbounds %struct.xdr_buf, ptr %2, i32 0, i32 8
  %54 = load i32, ptr %53, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %21, i32 0, i32 8
  store i32 %54, ptr %55, align 4
  %56 = load i32, ptr %5, align 4
  %57 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 44, i32 noundef %56, ptr noundef %0, i64 noundef 1, ptr noundef %57, ptr noundef %13, ptr noundef null) #15
  br label %58

58:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_authenticate(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %19 = load i32, ptr %18, align 4
  %20 = call i32 @llvm.bswap.i32(i32 %19)
  %21 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %15, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %15, i32 0, i32 2
  store i32 %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 38
  %24 = load i32, ptr %23, align 4
  %25 = call i32 @llvm.bswap.i32(i32 %24)
  %26 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %15, i32 0, i32 3
  store i32 %25, ptr %26, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_authenticate(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #11, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %35 = load i32, ptr %34, align 4
  %36 = call i32 @llvm.bswap.i32(i32 %35)
  %37 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %21, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %21, i32 0, i32 2
  store i32 %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 38
  %40 = load i32, ptr %39, align 4
  %41 = call i32 @llvm.bswap.i32(i32 %40)
  %42 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %21, i32 0, i32 3
  store i32 %41, ptr %42, align 4
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #15
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_process(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %81, label %14

14:                                               ; preds = %12, %9, %3
  %15 = icmp eq ptr %2, null
  %16 = select i1 %15, ptr @.str.72, ptr %2
  %17 = tail call i32 @strlen(ptr noundef %16) #15
  %18 = add i32 %17, 1
  %19 = shl i32 %18, 16
  %20 = or i32 %19, 32
  %21 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %14
  %24 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  br label %25

25:                                               ; preds = %23, %14
  %26 = phi ptr [ %24, %23 ], [ @.str.72, %14 ]
  %27 = tail call i32 @strlen(ptr noundef %26) #15
  %28 = add i32 %27, 1
  %29 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds %struct.svc_xprt, ptr %30, i32 0, i32 17
  %32 = icmp eq ptr %30, null
  %33 = select i1 %32, ptr @.str.72, ptr %31
  %34 = add i32 %28, %18
  %35 = tail call i32 @strlen(ptr noundef %33) #15
  %36 = add i32 %35, 1
  %37 = add i32 %34, 32
  %38 = add i32 %37, %36
  %39 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %38) #15
  %40 = icmp eq ptr %39, null
  br i1 %40, label %81, label %41

41:                                               ; preds = %25
  %42 = shl i32 %36, 16
  %43 = or i32 %42, %37
  %44 = shl i32 %28, 16
  %45 = add i32 %17, 33
  %46 = or i32 %44, %45
  %47 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %39, i32 0, i32 4
  store i32 %20, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %39, i32 0, i32 5
  store i32 %46, ptr %48, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %39, i32 0, i32 6
  store i32 %43, ptr %49, align 4
  %50 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %51 = load i32, ptr %50, align 4
  %52 = call i32 @llvm.bswap.i32(i32 %51)
  %53 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %39, i32 0, i32 1
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 29
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %39, i32 0, i32 2
  store i32 %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 30
  %58 = load i32, ptr %57, align 8
  %59 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %39, i32 0, i32 3
  store i32 %58, ptr %59, align 4
  %60 = getelementptr i8, ptr %39, i32 32
  %61 = call ptr @strcpy(ptr noundef %60, ptr noundef %16)
  %62 = and i32 %45, 65535
  %63 = getelementptr i8, ptr %39, i32 %62
  %64 = call ptr @svc_proc_name(ptr noundef %1) #15
  %65 = icmp eq ptr %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %41
  %67 = call ptr @svc_proc_name(ptr noundef %1) #15
  br label %68

68:                                               ; preds = %66, %41
  %69 = phi ptr [ %67, %66 ], [ @.str.72, %41 ]
  %70 = call ptr @strcpy(ptr noundef %63, ptr noundef %69)
  %71 = load i32, ptr %49, align 4
  %72 = and i32 %71, 65535
  %73 = getelementptr i8, ptr %39, i32 %72
  %74 = load ptr, ptr %29, align 8
  %75 = getelementptr inbounds %struct.svc_xprt, ptr %74, i32 0, i32 17
  %76 = icmp eq ptr %75, null
  %77 = icmp eq ptr %74, null
  %78 = select i1 %77, i1 true, i1 %76
  %79 = select i1 %78, ptr @.str.72, ptr %75
  %80 = call ptr @strcpy(ptr noundef %73, ptr noundef %79)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %81

81:                                               ; preds = %68, %25, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_process(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = icmp eq ptr %2, null
  %7 = select i1 %6, ptr @.str.72, ptr %2
  %8 = tail call i32 @strlen(ptr noundef %7) #15
  %9 = add i32 %8, 1
  %10 = shl i32 %9, 16
  %11 = or i32 %10, 32
  %12 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  %13 = icmp eq ptr %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  br label %16

16:                                               ; preds = %14, %3
  %17 = phi ptr [ %15, %14 ], [ @.str.72, %3 ]
  %18 = tail call i32 @strlen(ptr noundef %17) #15
  %19 = add i32 %18, 1
  %20 = add i32 %8, 33
  %21 = shl i32 %19, 16
  %22 = or i32 %21, %20
  %23 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.svc_xprt, ptr %24, i32 0, i32 17
  %26 = icmp eq ptr %24, null
  %27 = select i1 %26, ptr @.str.72, ptr %25
  %28 = add i32 %19, %9
  %29 = tail call i32 @strlen(ptr noundef %27) #15
  %30 = add i32 %29, 1
  %31 = add i32 %28, 32
  %32 = shl i32 %30, 16
  %33 = or i32 %32, %31
  %34 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %35 = load ptr, ptr %34, align 4
  %36 = ptrtoint ptr %35 to i32
  %37 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %38 = inttoptr i32 %37 to ptr
  %39 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %38) #11, !srcloc !12
  %40 = add i32 %39, %36
  %41 = inttoptr i32 %40 to ptr
  %42 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %43 = load volatile ptr, ptr %42, align 4
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %16
  %46 = load volatile ptr, ptr %41, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %102, label %48

48:                                               ; preds = %45, %16
  %49 = add i32 %28, 43
  %50 = add i32 %49, %30
  %51 = and i32 %50, -8
  %52 = add i32 %51, -4
  %53 = call ptr @perf_trace_buf_alloc(i32 noundef %52, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %54 = icmp eq ptr %53, null
  br i1 %54, label %102, label %55

55:                                               ; preds = %48
  %56 = load ptr, ptr %4, align 4
  %57 = call ptr @llvm.returnaddress(i32 0) #15
  %58 = ptrtoint ptr %57 to i32
  %59 = getelementptr [18 x i32], ptr %56, i32 0, i32 15
  store i32 %58, ptr %59, align 4
  %60 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %61 = ptrtoint ptr %60 to i32
  %62 = getelementptr [18 x i32], ptr %56, i32 0, i32 11
  store i32 %61, ptr %62, align 4
  %63 = call i32 @llvm.read_register.i32(metadata !0) #15
  %64 = getelementptr [18 x i32], ptr %56, i32 0, i32 13
  store i32 %63, ptr %64, align 4
  %65 = getelementptr [18 x i32], ptr %56, i32 0, i32 16
  store i32 19, ptr %65, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %53, i32 0, i32 4
  store i32 %11, ptr %66, align 4
  %67 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %53, i32 0, i32 5
  store i32 %22, ptr %67, align 4
  %68 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %53, i32 0, i32 6
  store i32 %33, ptr %68, align 4
  %69 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %70 = load i32, ptr %69, align 4
  %71 = call i32 @llvm.bswap.i32(i32 %70)
  %72 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %53, i32 0, i32 1
  store i32 %71, ptr %72, align 4
  %73 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 29
  %74 = load i32, ptr %73, align 4
  %75 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %53, i32 0, i32 2
  store i32 %74, ptr %75, align 4
  %76 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 30
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %53, i32 0, i32 3
  store i32 %77, ptr %78, align 4
  %79 = getelementptr i8, ptr %53, i32 32
  %80 = call ptr @strcpy(ptr noundef %79, ptr noundef %7)
  %81 = and i32 %20, 65535
  %82 = getelementptr i8, ptr %53, i32 %81
  %83 = call ptr @svc_proc_name(ptr noundef %1) #15
  %84 = icmp eq ptr %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %55
  %86 = call ptr @svc_proc_name(ptr noundef %1) #15
  br label %87

87:                                               ; preds = %85, %55
  %88 = phi ptr [ %86, %85 ], [ @.str.72, %55 ]
  %89 = call ptr @strcpy(ptr noundef %82, ptr noundef %88)
  %90 = load i32, ptr %68, align 4
  %91 = and i32 %90, 65535
  %92 = getelementptr i8, ptr %53, i32 %91
  %93 = load ptr, ptr %23, align 8
  %94 = getelementptr inbounds %struct.svc_xprt, ptr %93, i32 0, i32 17
  %95 = icmp eq ptr %94, null
  %96 = icmp eq ptr %93, null
  %97 = select i1 %96, i1 true, i1 %95
  %98 = select i1 %97, ptr @.str.72, ptr %94
  %99 = call ptr @strcpy(ptr noundef %92, ptr noundef %98)
  %100 = load i32, ptr %5, align 4
  %101 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %53, i32 noundef %52, i32 noundef %100, ptr noundef %0, i64 noundef 1, ptr noundef %101, ptr noundef %41, ptr noundef null) #15
  br label %102

102:                                              ; preds = %87, %48, %45
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_rqst_event(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %38, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.svc_xprt, ptr %15, i32 0, i32 17
  %17 = tail call i32 @strlen(ptr noundef nonnull %16) #15
  %18 = add i32 %17, 21
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %18) #15
  %20 = icmp eq ptr %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %13
  %22 = shl i32 %17, 16
  %23 = add i32 %22, 65556
  %24 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %19, i32 0, i32 3
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %26 = load i32, ptr %25, align 4
  %27 = call i32 @llvm.bswap.i32(i32 %26)
  %28 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %19, i32 0, i32 1
  store i32 %27, ptr %28, align 4
  %29 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 33
  %30 = load i32, ptr %29, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %19, i32 0, i32 2
  store i32 %30, ptr %31, align 4
  %32 = getelementptr i8, ptr %19, i32 20
  %33 = load ptr, ptr %14, align 8
  %34 = getelementptr inbounds %struct.svc_xprt, ptr %33, i32 0, i32 17
  %35 = icmp eq ptr %34, null
  %36 = select i1 %35, ptr @.str.72, ptr %34
  %37 = call ptr @strcpy(ptr noundef %32, ptr noundef nonnull %36)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %38

38:                                               ; preds = %21, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_rqst_event(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.svc_xprt, ptr %6, i32 0, i32 17
  %8 = tail call i32 @strlen(ptr noundef nonnull %7) #15
  %9 = shl i32 %8, 16
  %10 = add i32 %9, 65556
  %11 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %12 = load ptr, ptr %11, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #11, !srcloc !12
  %17 = add i32 %16, %13
  %18 = inttoptr i32 %17 to ptr
  %19 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load volatile ptr, ptr %18, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %58, label %25

25:                                               ; preds = %22, %2
  %26 = add i32 %8, 32
  %27 = and i32 %26, -8
  %28 = add i32 %27, -4
  %29 = call ptr @perf_trace_buf_alloc(i32 noundef %28, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %30 = icmp eq ptr %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = load ptr, ptr %3, align 4
  %33 = call ptr @llvm.returnaddress(i32 0) #15
  %34 = ptrtoint ptr %33 to i32
  %35 = getelementptr [18 x i32], ptr %32, i32 0, i32 15
  store i32 %34, ptr %35, align 4
  %36 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %37 = ptrtoint ptr %36 to i32
  %38 = getelementptr [18 x i32], ptr %32, i32 0, i32 11
  store i32 %37, ptr %38, align 4
  %39 = call i32 @llvm.read_register.i32(metadata !0) #15
  %40 = getelementptr [18 x i32], ptr %32, i32 0, i32 13
  store i32 %39, ptr %40, align 4
  %41 = getelementptr [18 x i32], ptr %32, i32 0, i32 16
  store i32 19, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %29, i32 0, i32 3
  store i32 %10, ptr %42, align 4
  %43 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %44 = load i32, ptr %43, align 4
  %45 = call i32 @llvm.bswap.i32(i32 %44)
  %46 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %29, i32 0, i32 1
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 33
  %48 = load i32, ptr %47, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %29, i32 0, i32 2
  store i32 %48, ptr %49, align 4
  %50 = getelementptr i8, ptr %29, i32 20
  %51 = load ptr, ptr %5, align 8
  %52 = getelementptr inbounds %struct.svc_xprt, ptr %51, i32 0, i32 17
  %53 = icmp eq ptr %52, null
  %54 = select i1 %53, ptr @.str.72, ptr %52
  %55 = call ptr @strcpy(ptr noundef %50, ptr noundef nonnull %54)
  %56 = load i32, ptr %4, align 4
  %57 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %29, i32 noundef %28, i32 noundef %56, ptr noundef %0, i64 noundef 1, ptr noundef %57, ptr noundef %18, ptr noundef null) #15
  br label %58

58:                                               ; preds = %31, %25, %22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_rqst_status(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %40, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.svc_xprt, ptr %16, i32 0, i32 17
  %18 = tail call i32 @strlen(ptr noundef nonnull %17) #15
  %19 = add i32 %18, 25
  %20 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %19) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %14
  %23 = shl i32 %18, 16
  %24 = add i32 %23, 65560
  %25 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %20, i32 0, i32 4
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %27 = load i32, ptr %26, align 4
  %28 = call i32 @llvm.bswap.i32(i32 %27)
  %29 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %20, i32 0, i32 1
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %20, i32 0, i32 2
  store i32 %2, ptr %30, align 4
  %31 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 33
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %20, i32 0, i32 3
  store i32 %32, ptr %33, align 4
  %34 = getelementptr i8, ptr %20, i32 24
  %35 = load ptr, ptr %15, align 8
  %36 = getelementptr inbounds %struct.svc_xprt, ptr %35, i32 0, i32 17
  %37 = icmp eq ptr %36, null
  %38 = select i1 %37, ptr @.str.72, ptr %36
  %39 = call ptr @strcpy(ptr noundef %34, ptr noundef nonnull %38)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %40

40:                                               ; preds = %22, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_rqst_status(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.svc_xprt, ptr %7, i32 0, i32 17
  %9 = tail call i32 @strlen(ptr noundef nonnull %8) #15
  %10 = shl i32 %9, 16
  %11 = add i32 %10, 65560
  %12 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %13 = load ptr, ptr %12, align 4
  %14 = ptrtoint ptr %13 to i32
  %15 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %16 = inttoptr i32 %15 to ptr
  %17 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %16) #11, !srcloc !12
  %18 = add i32 %17, %14
  %19 = inttoptr i32 %18 to ptr
  %20 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %3
  %24 = load volatile ptr, ptr %19, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %60, label %26

26:                                               ; preds = %23, %3
  %27 = add i32 %9, 36
  %28 = and i32 %27, -8
  %29 = add i32 %28, -4
  %30 = call ptr @perf_trace_buf_alloc(i32 noundef %29, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %31 = icmp eq ptr %30, null
  br i1 %31, label %60, label %32

32:                                               ; preds = %26
  %33 = load ptr, ptr %4, align 4
  %34 = call ptr @llvm.returnaddress(i32 0) #15
  %35 = ptrtoint ptr %34 to i32
  %36 = getelementptr [18 x i32], ptr %33, i32 0, i32 15
  store i32 %35, ptr %36, align 4
  %37 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %38 = ptrtoint ptr %37 to i32
  %39 = getelementptr [18 x i32], ptr %33, i32 0, i32 11
  store i32 %38, ptr %39, align 4
  %40 = call i32 @llvm.read_register.i32(metadata !0) #15
  %41 = getelementptr [18 x i32], ptr %33, i32 0, i32 13
  store i32 %40, ptr %41, align 4
  %42 = getelementptr [18 x i32], ptr %33, i32 0, i32 16
  store i32 19, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %30, i32 0, i32 4
  store i32 %11, ptr %43, align 4
  %44 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %45 = load i32, ptr %44, align 4
  %46 = call i32 @llvm.bswap.i32(i32 %45)
  %47 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %30, i32 0, i32 1
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %30, i32 0, i32 2
  store i32 %2, ptr %48, align 4
  %49 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 33
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %30, i32 0, i32 3
  store i32 %50, ptr %51, align 4
  %52 = getelementptr i8, ptr %30, i32 24
  %53 = load ptr, ptr %6, align 8
  %54 = getelementptr inbounds %struct.svc_xprt, ptr %53, i32 0, i32 17
  %55 = icmp eq ptr %54, null
  %56 = select i1 %55, ptr @.str.72, ptr %54
  %57 = call ptr @strcpy(ptr noundef %52, ptr noundef nonnull %56)
  %58 = load i32, ptr %5, align 4
  %59 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %30, i32 noundef %29, i32 noundef %58, ptr noundef %0, i64 noundef 1, ptr noundef %59, ptr noundef %19, ptr noundef null) #15
  br label %60

60:                                               ; preds = %32, %26, %23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_create_err(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4, ptr noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %16, label %45, label %17

17:                                               ; preds = %15, %12, %6
  %18 = icmp eq ptr %1, null
  %19 = select i1 %18, ptr @.str.72, ptr %1
  %20 = tail call i32 @strlen(ptr noundef %19) #15
  %21 = icmp eq ptr %2, null
  %22 = select i1 %21, ptr @.str.72, ptr %2
  %23 = tail call i32 @strlen(ptr noundef %22) #15
  %24 = add i32 %23, 1
  %25 = add i32 %20, 49
  %26 = add i32 %25, %24
  %27 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef %26) #15
  %28 = icmp eq ptr %27, null
  br i1 %28, label %45, label %29

29:                                               ; preds = %17
  %30 = shl i32 %24, 16
  %31 = or i32 %30, %25
  %32 = shl i32 %20, 16
  %33 = add i32 %32, 65584
  %34 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %27, i32 0, i32 2
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %27, i32 0, i32 3
  store i32 %31, ptr %35, align 4
  %36 = ptrtoint ptr %5 to i32
  %37 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %27, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr i8, ptr %27, i32 48
  %39 = call ptr @strcpy(ptr noundef %38, ptr noundef %19)
  %40 = and i32 %25, 65535
  %41 = getelementptr i8, ptr %27, i32 %40
  %42 = call ptr @strcpy(ptr noundef %41, ptr noundef %22)
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %27, i32 0, i32 4
  %44 = call i32 @llvm.umin.i32(i32 %4, i32 28)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %43, ptr align 2 %3, i32 %44, i1 false)
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #15
  br label %45

45:                                               ; preds = %29, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_create_err(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4, ptr noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #15
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #15
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = icmp eq ptr %1, null
  %10 = select i1 %9, ptr @.str.72, ptr %1
  %11 = tail call i32 @strlen(ptr noundef %10) #15
  %12 = shl i32 %11, 16
  %13 = add i32 %12, 65536
  %14 = or i32 %13, 48
  %15 = icmp eq ptr %2, null
  %16 = select i1 %15, ptr @.str.72, ptr %2
  %17 = tail call i32 @strlen(ptr noundef %16) #15
  %18 = add i32 %17, 1
  %19 = add i32 %11, 49
  %20 = shl i32 %18, 16
  %21 = or i32 %20, %19
  %22 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %23 = load ptr, ptr %22, align 4
  %24 = ptrtoint ptr %23 to i32
  %25 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %26 = inttoptr i32 %25 to ptr
  %27 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %26) #11, !srcloc !12
  %28 = add i32 %27, %24
  %29 = inttoptr i32 %28 to ptr
  %30 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %31 = load volatile ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %6
  %34 = load volatile ptr, ptr %29, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %67, label %36

36:                                               ; preds = %33, %6
  %37 = add i32 %11, 60
  %38 = add i32 %37, %18
  %39 = and i32 %38, -8
  %40 = add i32 %39, -4
  %41 = call ptr @perf_trace_buf_alloc(i32 noundef %40, ptr noundef nonnull %7, ptr noundef nonnull %8) #15
  %42 = icmp eq ptr %41, null
  br i1 %42, label %67, label %43

43:                                               ; preds = %36
  %44 = load ptr, ptr %7, align 4
  %45 = call ptr @llvm.returnaddress(i32 0) #15
  %46 = ptrtoint ptr %45 to i32
  %47 = getelementptr [18 x i32], ptr %44, i32 0, i32 15
  store i32 %46, ptr %47, align 4
  %48 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %49 = ptrtoint ptr %48 to i32
  %50 = getelementptr [18 x i32], ptr %44, i32 0, i32 11
  store i32 %49, ptr %50, align 4
  %51 = call i32 @llvm.read_register.i32(metadata !0) #15
  %52 = getelementptr [18 x i32], ptr %44, i32 0, i32 13
  store i32 %51, ptr %52, align 4
  %53 = getelementptr [18 x i32], ptr %44, i32 0, i32 16
  store i32 19, ptr %53, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %41, i32 0, i32 2
  store i32 %14, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %41, i32 0, i32 3
  store i32 %21, ptr %55, align 4
  %56 = ptrtoint ptr %5 to i32
  %57 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %41, i32 0, i32 1
  store i32 %56, ptr %57, align 4
  %58 = getelementptr i8, ptr %41, i32 48
  %59 = call ptr @strcpy(ptr noundef %58, ptr noundef %10)
  %60 = and i32 %19, 65535
  %61 = getelementptr i8, ptr %41, i32 %60
  %62 = call ptr @strcpy(ptr noundef %61, ptr noundef %16)
  %63 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %41, i32 0, i32 4
  %64 = call i32 @llvm.umin.i32(i32 %4, i32 28)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %63, ptr align 2 %3, i32 %64, i1 false)
  %65 = load i32, ptr %8, align 4
  %66 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %41, i32 noundef %40, i32 noundef %65, ptr noundef %0, i64 noundef 1, ptr noundef %66, ptr noundef %29, ptr noundef null) #15
  br label %67

67:                                               ; preds = %43, %36, %33
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_enqueue(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %40, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %16 = tail call i32 @strlen(ptr noundef %15) #15
  %17 = add i32 %16, 21
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %17) #15
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %14
  %21 = shl i32 %16, 16
  %22 = add i32 %21, 65556
  %23 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %18, i32 0, i32 3
  store i32 %22, ptr %23, align 4
  %24 = icmp eq ptr %2, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.svc_rqst, ptr %2, i32 0, i32 46
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 52
  %29 = load i32, ptr %28, align 8
  br label %30

30:                                               ; preds = %25, %20
  %31 = phi i32 [ %29, %25 ], [ 0, %20 ]
  %32 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %18, i32 0, i32 1
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %18, i32 0, i32 2
  store i32 %34, ptr %35, align 4
  %36 = getelementptr i8, ptr %18, i32 20
  %37 = icmp eq ptr %15, null
  %38 = select i1 %37, ptr @.str.72, ptr %15
  %39 = call ptr @strcpy(ptr noundef %36, ptr noundef %38)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %40

40:                                               ; preds = %30, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_enqueue(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %7 = tail call i32 @strlen(ptr noundef %6) #15
  %8 = shl i32 %7, 16
  %9 = add i32 %8, 65556
  %10 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #11, !srcloc !12
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %19 = load volatile ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = load volatile ptr, ptr %17, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %60, label %24

24:                                               ; preds = %21, %3
  %25 = add i32 %7, 32
  %26 = and i32 %25, -8
  %27 = add i32 %26, -4
  %28 = call ptr @perf_trace_buf_alloc(i32 noundef %27, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %29 = icmp eq ptr %28, null
  br i1 %29, label %60, label %30

30:                                               ; preds = %24
  %31 = load ptr, ptr %4, align 4
  %32 = call ptr @llvm.returnaddress(i32 0) #15
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %31, i32 0, i32 15
  store i32 %33, ptr %34, align 4
  %35 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %36 = ptrtoint ptr %35 to i32
  %37 = getelementptr [18 x i32], ptr %31, i32 0, i32 11
  store i32 %36, ptr %37, align 4
  %38 = call i32 @llvm.read_register.i32(metadata !0) #15
  %39 = getelementptr [18 x i32], ptr %31, i32 0, i32 13
  store i32 %38, ptr %39, align 4
  %40 = getelementptr [18 x i32], ptr %31, i32 0, i32 16
  store i32 19, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %28, i32 0, i32 3
  store i32 %9, ptr %41, align 4
  %42 = icmp eq ptr %2, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %30
  %44 = getelementptr inbounds %struct.svc_rqst, ptr %2, i32 0, i32 46
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 52
  %47 = load i32, ptr %46, align 8
  br label %48

48:                                               ; preds = %43, %30
  %49 = phi i32 [ %47, %43 ], [ 0, %30 ]
  %50 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %28, i32 0, i32 1
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %28, i32 0, i32 2
  store i32 %52, ptr %53, align 4
  %54 = getelementptr i8, ptr %28, i32 20
  %55 = icmp eq ptr %6, null
  %56 = select i1 %55, ptr @.str.72, ptr %6
  %57 = call ptr @strcpy(ptr noundef %54, ptr noundef %56)
  %58 = load i32, ptr %5, align 4
  %59 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %28, i32 noundef %27, i32 noundef %58, ptr noundef %0, i64 noundef 1, ptr noundef %59, ptr noundef %17, ptr noundef null) #15
  br label %60

60:                                               ; preds = %48, %24, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_event(ptr noundef %0, ptr noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %30, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %15 = tail call i32 @strlen(ptr noundef %14) #15
  %16 = add i32 %15, 17
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %16) #15
  %18 = icmp eq ptr %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %13
  %20 = shl i32 %15, 16
  %21 = add i32 %20, 65552
  %22 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %17, i32 0, i32 2
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %17, i32 0, i32 1
  store i32 %24, ptr %25, align 4
  %26 = getelementptr i8, ptr %17, i32 16
  %27 = icmp eq ptr %14, null
  %28 = select i1 %27, ptr @.str.72, ptr %14
  %29 = call ptr @strcpy(ptr noundef %26, ptr noundef %28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %30

30:                                               ; preds = %19, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_event(ptr noundef %0, ptr noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %6 = tail call i32 @strlen(ptr noundef %5) #15
  %7 = shl i32 %6, 16
  %8 = add i32 %7, 65552
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #11, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %20, %2
  %24 = add i32 %6, 28
  %25 = and i32 %24, -8
  %26 = add i32 %25, -4
  %27 = call ptr @perf_trace_buf_alloc(i32 noundef %26, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %28 = icmp eq ptr %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %23
  %30 = load ptr, ptr %3, align 4
  %31 = call ptr @llvm.returnaddress(i32 0) #15
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %30, i32 0, i32 15
  store i32 %32, ptr %33, align 4
  %34 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %35 = ptrtoint ptr %34 to i32
  %36 = getelementptr [18 x i32], ptr %30, i32 0, i32 11
  store i32 %35, ptr %36, align 4
  %37 = call i32 @llvm.read_register.i32(metadata !0) #15
  %38 = getelementptr [18 x i32], ptr %30, i32 0, i32 13
  store i32 %37, ptr %38, align 4
  %39 = getelementptr [18 x i32], ptr %30, i32 0, i32 16
  store i32 19, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %27, i32 0, i32 2
  store i32 %8, ptr %40, align 4
  %41 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %27, i32 0, i32 1
  store i32 %42, ptr %43, align 4
  %44 = getelementptr i8, ptr %27, i32 16
  %45 = icmp eq ptr %5, null
  %46 = select i1 %45, ptr @.str.72, ptr %5
  %47 = call ptr @strcpy(ptr noundef %44, ptr noundef %46)
  %48 = load i32, ptr %4, align 4
  %49 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %27, i32 noundef %26, i32 noundef %48, ptr noundef %0, i64 noundef 1, ptr noundef %49, ptr noundef %16, ptr noundef null) #15
  br label %50

50:                                               ; preds = %29, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_accept(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %59, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %16 = tail call i32 @strlen(ptr noundef %15) #15
  %17 = add i32 %16, 1
  %18 = load ptr, ptr %1, align 4
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  %21 = select i1 %20, ptr @.str.72, ptr %19
  %22 = tail call i32 @strlen(ptr noundef nonnull %21) #15
  %23 = add i32 %22, 1
  %24 = add i32 %23, %17
  %25 = icmp eq ptr %2, null
  %26 = select i1 %25, ptr @.str.72, ptr %2
  %27 = tail call i32 @strlen(ptr noundef %26) #15
  %28 = add i32 %27, 1
  %29 = add i32 %24, 20
  %30 = add i32 %29, %28
  %31 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %30) #15
  %32 = icmp eq ptr %31, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %14
  %34 = shl i32 %28, 16
  %35 = or i32 %34, %29
  %36 = shl i32 %23, 16
  %37 = add i32 %16, 21
  %38 = or i32 %36, %37
  %39 = shl i32 %17, 16
  %40 = or i32 %39, 20
  %41 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %31, i32 0, i32 1
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %31, i32 0, i32 2
  store i32 %38, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %31, i32 0, i32 3
  store i32 %35, ptr %43, align 4
  %44 = getelementptr i8, ptr %31, i32 20
  %45 = icmp eq ptr %15, null
  %46 = select i1 %45, ptr @.str.72, ptr %15
  %47 = call ptr @strcpy(ptr noundef %44, ptr noundef %46)
  %48 = and i32 %37, 65535
  %49 = getelementptr i8, ptr %31, i32 %48
  %50 = load ptr, ptr %1, align 4
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  %53 = select i1 %52, ptr @.str.72, ptr %51
  %54 = call ptr @strcpy(ptr noundef %49, ptr noundef nonnull %53)
  %55 = load i32, ptr %43, align 4
  %56 = and i32 %55, 65535
  %57 = getelementptr i8, ptr %31, i32 %56
  %58 = call ptr @strcpy(ptr noundef %57, ptr noundef %26)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %59

59:                                               ; preds = %33, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_accept(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %7 = tail call i32 @strlen(ptr noundef %6) #15
  %8 = add i32 %7, 1
  %9 = shl i32 %8, 16
  %10 = or i32 %9, 20
  %11 = load ptr, ptr %1, align 4
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  %14 = select i1 %13, ptr @.str.72, ptr %12
  %15 = tail call i32 @strlen(ptr noundef nonnull %14) #15
  %16 = add i32 %15, 1
  %17 = add i32 %7, 21
  %18 = shl i32 %16, 16
  %19 = or i32 %18, %17
  %20 = add i32 %16, %8
  %21 = icmp eq ptr %2, null
  %22 = select i1 %21, ptr @.str.72, ptr %2
  %23 = tail call i32 @strlen(ptr noundef %22) #15
  %24 = add i32 %23, 1
  %25 = add i32 %20, 20
  %26 = shl i32 %24, 16
  %27 = or i32 %26, %25
  %28 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %29 = load ptr, ptr %28, align 4
  %30 = ptrtoint ptr %29 to i32
  %31 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %32 = inttoptr i32 %31 to ptr
  %33 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %32) #11, !srcloc !12
  %34 = add i32 %33, %30
  %35 = inttoptr i32 %34 to ptr
  %36 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %37 = load volatile ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %3
  %40 = load volatile ptr, ptr %35, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %80, label %42

42:                                               ; preds = %39, %3
  %43 = add i32 %20, 31
  %44 = add i32 %43, %24
  %45 = and i32 %44, -8
  %46 = add i32 %45, -4
  %47 = call ptr @perf_trace_buf_alloc(i32 noundef %46, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %48 = icmp eq ptr %47, null
  br i1 %48, label %80, label %49

49:                                               ; preds = %42
  %50 = load ptr, ptr %4, align 4
  %51 = call ptr @llvm.returnaddress(i32 0) #15
  %52 = ptrtoint ptr %51 to i32
  %53 = getelementptr [18 x i32], ptr %50, i32 0, i32 15
  store i32 %52, ptr %53, align 4
  %54 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %55 = ptrtoint ptr %54 to i32
  %56 = getelementptr [18 x i32], ptr %50, i32 0, i32 11
  store i32 %55, ptr %56, align 4
  %57 = call i32 @llvm.read_register.i32(metadata !0) #15
  %58 = getelementptr [18 x i32], ptr %50, i32 0, i32 13
  store i32 %57, ptr %58, align 4
  %59 = getelementptr [18 x i32], ptr %50, i32 0, i32 16
  store i32 19, ptr %59, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %47, i32 0, i32 1
  store i32 %10, ptr %60, align 4
  %61 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %47, i32 0, i32 2
  store i32 %19, ptr %61, align 4
  %62 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %47, i32 0, i32 3
  store i32 %27, ptr %62, align 4
  %63 = getelementptr i8, ptr %47, i32 20
  %64 = icmp eq ptr %6, null
  %65 = select i1 %64, ptr @.str.72, ptr %6
  %66 = call ptr @strcpy(ptr noundef %63, ptr noundef %65)
  %67 = and i32 %17, 65535
  %68 = getelementptr i8, ptr %47, i32 %67
  %69 = load ptr, ptr %1, align 4
  %70 = load ptr, ptr %69, align 4
  %71 = icmp eq ptr %70, null
  %72 = select i1 %71, ptr @.str.72, ptr %70
  %73 = call ptr @strcpy(ptr noundef %68, ptr noundef nonnull %72)
  %74 = load i32, ptr %62, align 4
  %75 = and i32 %74, 65535
  %76 = getelementptr i8, ptr %47, i32 %75
  %77 = call ptr @strcpy(ptr noundef %76, ptr noundef %22)
  %78 = load i32, ptr %5, align 4
  %79 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %47, i32 noundef %46, i32 noundef %78, ptr noundef %0, i64 noundef 1, ptr noundef %79, ptr noundef %35, ptr noundef null) #15
  br label %80

80:                                               ; preds = %49, %42, %39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_dequeue(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %53, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.svc_xprt, ptr %15, i32 0, i32 17
  %17 = tail call i32 @strlen(ptr noundef nonnull %16) #15
  %18 = add i32 %17, 21
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %18) #15
  %20 = icmp eq ptr %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %13
  %22 = shl i32 %17, 16
  %23 = add i32 %22, 65556
  %24 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %19, i32 0, i32 3
  store i32 %23, ptr %24, align 4
  %25 = load ptr, ptr %14, align 8
  %26 = getelementptr inbounds %struct.svc_xprt, ptr %25, i32 0, i32 5
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %19, i32 0, i32 1
  store i32 %27, ptr %28, align 4
  %29 = call i64 @ktime_get() #15
  %30 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 34
  %31 = load i64, ptr %30, align 8
  %32 = sub i64 %29, %31
  %33 = call i64 @llvm.abs.i64(i64 %32, i1 false) #15
  %34 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %33, i32 0) #16, !srcloc !13
  %35 = extractvalue { i64, i32 } %34, 0
  %36 = extractvalue { i64, i32 } %34, 1
  %37 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %33, i64 %35, i32 %36) #16, !srcloc !14
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = icmp slt i64 %32, 0
  %40 = lshr i64 %38, 9
  %41 = sub nsw i64 0, %40
  %42 = select i1 %39, i64 %41, i64 %40
  %43 = trunc i64 %42 to i32
  %44 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %19, i32 0, i32 2
  store i32 %43, ptr %44, align 4
  %45 = load i32, ptr %24, align 4
  %46 = and i32 %45, 65535
  %47 = getelementptr i8, ptr %19, i32 %46
  %48 = load ptr, ptr %14, align 8
  %49 = getelementptr inbounds %struct.svc_xprt, ptr %48, i32 0, i32 17
  %50 = icmp eq ptr %49, null
  %51 = select i1 %50, ptr @.str.72, ptr %49
  %52 = call ptr @strcpy(ptr noundef %47, ptr noundef nonnull %51)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %53

53:                                               ; preds = %21, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_dequeue(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.svc_xprt, ptr %6, i32 0, i32 17
  %8 = tail call i32 @strlen(ptr noundef nonnull %7) #15
  %9 = shl i32 %8, 16
  %10 = add i32 %9, 65556
  %11 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %12 = load ptr, ptr %11, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #11, !srcloc !12
  %17 = add i32 %16, %13
  %18 = inttoptr i32 %17 to ptr
  %19 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load volatile ptr, ptr %18, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %73, label %25

25:                                               ; preds = %22, %2
  %26 = add i32 %8, 32
  %27 = and i32 %26, -8
  %28 = add i32 %27, -4
  %29 = call ptr @perf_trace_buf_alloc(i32 noundef %28, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %30 = icmp eq ptr %29, null
  br i1 %30, label %73, label %31

31:                                               ; preds = %25
  %32 = load ptr, ptr %3, align 4
  %33 = call ptr @llvm.returnaddress(i32 0) #15
  %34 = ptrtoint ptr %33 to i32
  %35 = getelementptr [18 x i32], ptr %32, i32 0, i32 15
  store i32 %34, ptr %35, align 4
  %36 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %37 = ptrtoint ptr %36 to i32
  %38 = getelementptr [18 x i32], ptr %32, i32 0, i32 11
  store i32 %37, ptr %38, align 4
  %39 = call i32 @llvm.read_register.i32(metadata !0) #15
  %40 = getelementptr [18 x i32], ptr %32, i32 0, i32 13
  store i32 %39, ptr %40, align 4
  %41 = getelementptr [18 x i32], ptr %32, i32 0, i32 16
  store i32 19, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %29, i32 0, i32 3
  store i32 %10, ptr %42, align 4
  %43 = load ptr, ptr %5, align 8
  %44 = getelementptr inbounds %struct.svc_xprt, ptr %43, i32 0, i32 5
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %29, i32 0, i32 1
  store i32 %45, ptr %46, align 4
  %47 = call i64 @ktime_get() #15
  %48 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 34
  %49 = load i64, ptr %48, align 8
  %50 = sub i64 %47, %49
  %51 = call i64 @llvm.abs.i64(i64 %50, i1 false) #15
  %52 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %51, i32 0) #16, !srcloc !13
  %53 = extractvalue { i64, i32 } %52, 0
  %54 = extractvalue { i64, i32 } %52, 1
  %55 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %51, i64 %53, i32 %54) #16, !srcloc !14
  %56 = extractvalue { i64, i32 } %55, 0
  %57 = icmp slt i64 %50, 0
  %58 = lshr i64 %56, 9
  %59 = sub nsw i64 0, %58
  %60 = select i1 %57, i64 %59, i64 %58
  %61 = trunc i64 %60 to i32
  %62 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %29, i32 0, i32 2
  store i32 %61, ptr %62, align 4
  %63 = load i32, ptr %42, align 4
  %64 = and i32 %63, 65535
  %65 = getelementptr i8, ptr %29, i32 %64
  %66 = load ptr, ptr %5, align 8
  %67 = getelementptr inbounds %struct.svc_xprt, ptr %66, i32 0, i32 17
  %68 = icmp eq ptr %67, null
  %69 = select i1 %68, ptr @.str.72, ptr %67
  %70 = call ptr @strcpy(ptr noundef %65, ptr noundef nonnull %69)
  %71 = load i32, ptr %4, align 4
  %72 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %29, i32 noundef %28, i32 noundef %71, ptr noundef %0, i64 noundef 1, ptr noundef %72, ptr noundef %18, ptr noundef null) #15
  br label %73

73:                                               ; preds = %31, %25, %22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_wake_up(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %18, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 12) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.trace_event_raw_svc_wake_up, ptr %14, i32 0, i32 1
  store i32 %1, ptr %17, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %18

18:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_wake_up(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_svc_wake_up, ptr %20, i32 0, i32 1
  store i32 %1, ptr %33, align 4
  %34 = load i32, ptr %4, align 4
  %35 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 12, i32 noundef %34, ptr noundef %0, i64 noundef 1, ptr noundef %35, ptr noundef %12, ptr noundef null) #15
  br label %36

36:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_alloc_arg_err(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %18, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 12) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.trace_event_raw_svc_alloc_arg_err, ptr %14, i32 0, i32 1
  store i32 %1, ptr %17, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %18

18:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_alloc_arg_err(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_svc_alloc_arg_err, ptr %20, i32 0, i32 1
  store i32 %1, ptr %33, align 4
  %34 = load i32, ptr %4, align 4
  %35 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 12, i32 noundef %34, ptr noundef %0, i64 noundef 1, ptr noundef %35, ptr noundef %12, ptr noundef null) #15
  br label %36

36:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_stats_latency(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %75, label %13

13:                                               ; preds = %11, %8, %2
  %14 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi ptr [ %17, %16 ], [ @.str.72, %13 ]
  %20 = tail call i32 @strlen(ptr noundef %19) #15
  %21 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.svc_xprt, ptr %22, i32 0, i32 17
  %24 = tail call i32 @strlen(ptr noundef nonnull %23) #15
  %25 = add i32 %24, 1
  %26 = add i32 %20, 25
  %27 = add i32 %26, %25
  %28 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %27) #15
  %29 = icmp eq ptr %28, null
  br i1 %29, label %75, label %30

30:                                               ; preds = %18
  %31 = shl i32 %25, 16
  %32 = or i32 %31, %26
  %33 = shl i32 %20, 16
  %34 = add i32 %33, 65560
  %35 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %28, i32 0, i32 3
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %28, i32 0, i32 4
  store i32 %32, ptr %36, align 4
  %37 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %38 = load i32, ptr %37, align 4
  %39 = call i32 @llvm.bswap.i32(i32 %38)
  %40 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %28, i32 0, i32 1
  store i32 %39, ptr %40, align 4
  %41 = call i64 @ktime_get() #15
  %42 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 41
  %43 = load i64, ptr %42, align 8
  %44 = sub i64 %41, %43
  %45 = call i64 @llvm.abs.i64(i64 %44, i1 false) #15
  %46 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %45, i32 0) #16, !srcloc !13
  %47 = extractvalue { i64, i32 } %46, 0
  %48 = extractvalue { i64, i32 } %46, 1
  %49 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %45, i64 %47, i32 %48) #16, !srcloc !14
  %50 = extractvalue { i64, i32 } %49, 0
  %51 = icmp slt i64 %44, 0
  %52 = lshr i64 %50, 9
  %53 = sub nsw i64 0, %52
  %54 = select i1 %51, i64 %53, i64 %52
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %28, i32 0, i32 2
  store i32 %55, ptr %56, align 4
  %57 = load i32, ptr %35, align 4
  %58 = and i32 %57, 65535
  %59 = getelementptr i8, ptr %28, i32 %58
  %60 = call ptr @svc_proc_name(ptr noundef %1) #15
  %61 = icmp eq ptr %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %30
  %63 = call ptr @svc_proc_name(ptr noundef %1) #15
  br label %64

64:                                               ; preds = %62, %30
  %65 = phi ptr [ %63, %62 ], [ @.str.72, %30 ]
  %66 = call ptr @strcpy(ptr noundef %59, ptr noundef %65)
  %67 = load i32, ptr %36, align 4
  %68 = and i32 %67, 65535
  %69 = getelementptr i8, ptr %28, i32 %68
  %70 = load ptr, ptr %21, align 8
  %71 = getelementptr inbounds %struct.svc_xprt, ptr %70, i32 0, i32 17
  %72 = icmp eq ptr %71, null
  %73 = select i1 %72, ptr @.str.72, ptr %71
  %74 = call ptr @strcpy(ptr noundef %69, ptr noundef nonnull %73)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %75

75:                                               ; preds = %64, %18, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_stats_latency(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  %6 = icmp eq ptr %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call ptr @svc_proc_name(ptr noundef %1) #15
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi ptr [ %8, %7 ], [ @.str.72, %2 ]
  %11 = tail call i32 @strlen(ptr noundef %10) #15
  %12 = shl i32 %11, 16
  %13 = add i32 %12, 65536
  %14 = or i32 %13, 24
  %15 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.svc_xprt, ptr %16, i32 0, i32 17
  %18 = tail call i32 @strlen(ptr noundef nonnull %17) #15
  %19 = add i32 %18, 1
  %20 = add i32 %11, 25
  %21 = shl i32 %19, 16
  %22 = or i32 %21, %20
  %23 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %24 = load ptr, ptr %23, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #11, !srcloc !12
  %29 = add i32 %28, %25
  %30 = inttoptr i32 %29 to ptr
  %31 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %32 = load volatile ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %9
  %35 = load volatile ptr, ptr %30, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %97, label %37

37:                                               ; preds = %34, %9
  %38 = add i32 %11, 36
  %39 = add i32 %38, %19
  %40 = and i32 %39, -8
  %41 = add i32 %40, -4
  %42 = call ptr @perf_trace_buf_alloc(i32 noundef %41, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %43 = icmp eq ptr %42, null
  br i1 %43, label %97, label %44

44:                                               ; preds = %37
  %45 = load ptr, ptr %3, align 4
  %46 = call ptr @llvm.returnaddress(i32 0) #15
  %47 = ptrtoint ptr %46 to i32
  %48 = getelementptr [18 x i32], ptr %45, i32 0, i32 15
  store i32 %47, ptr %48, align 4
  %49 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %50 = ptrtoint ptr %49 to i32
  %51 = getelementptr [18 x i32], ptr %45, i32 0, i32 11
  store i32 %50, ptr %51, align 4
  %52 = call i32 @llvm.read_register.i32(metadata !0) #15
  %53 = getelementptr [18 x i32], ptr %45, i32 0, i32 13
  store i32 %52, ptr %53, align 4
  %54 = getelementptr [18 x i32], ptr %45, i32 0, i32 16
  store i32 19, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %42, i32 0, i32 3
  store i32 %14, ptr %55, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %42, i32 0, i32 4
  store i32 %22, ptr %56, align 4
  %57 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 27
  %58 = load i32, ptr %57, align 4
  %59 = call i32 @llvm.bswap.i32(i32 %58)
  %60 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %42, i32 0, i32 1
  store i32 %59, ptr %60, align 4
  %61 = call i64 @ktime_get() #15
  %62 = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 41
  %63 = load i64, ptr %62, align 8
  %64 = sub i64 %61, %63
  %65 = call i64 @llvm.abs.i64(i64 %64, i1 false) #15
  %66 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %65, i32 0) #16, !srcloc !13
  %67 = extractvalue { i64, i32 } %66, 0
  %68 = extractvalue { i64, i32 } %66, 1
  %69 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %65, i64 %67, i32 %68) #16, !srcloc !14
  %70 = extractvalue { i64, i32 } %69, 0
  %71 = icmp slt i64 %64, 0
  %72 = lshr i64 %70, 9
  %73 = sub nsw i64 0, %72
  %74 = select i1 %71, i64 %73, i64 %72
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %42, i32 0, i32 2
  store i32 %75, ptr %76, align 4
  %77 = load i32, ptr %55, align 4
  %78 = and i32 %77, 65535
  %79 = getelementptr i8, ptr %42, i32 %78
  %80 = call ptr @svc_proc_name(ptr noundef %1) #15
  %81 = icmp eq ptr %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %44
  %83 = call ptr @svc_proc_name(ptr noundef %1) #15
  br label %84

84:                                               ; preds = %82, %44
  %85 = phi ptr [ %83, %82 ], [ @.str.72, %44 ]
  %86 = call ptr @strcpy(ptr noundef %79, ptr noundef %85)
  %87 = load i32, ptr %56, align 4
  %88 = and i32 %87, 65535
  %89 = getelementptr i8, ptr %42, i32 %88
  %90 = load ptr, ptr %15, align 8
  %91 = getelementptr inbounds %struct.svc_xprt, ptr %90, i32 0, i32 17
  %92 = icmp eq ptr %91, null
  %93 = select i1 %92, ptr @.str.72, ptr %91
  %94 = call ptr @strcpy(ptr noundef %89, ptr noundef nonnull %93)
  %95 = load i32, ptr %4, align 4
  %96 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %42, i32 noundef %41, i32 noundef %95, ptr noundef %0, i64 noundef 1, ptr noundef %96, ptr noundef %30, ptr noundef null) #15
  br label %97

97:                                               ; preds = %84, %37, %34
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_deferred_event(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %40, label %13

13:                                               ; preds = %11, %8, %2
  %14 = getelementptr inbounds %struct.svc_deferred_req, ptr %1, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.svc_xprt, ptr %15, i32 0, i32 17
  %17 = tail call i32 @strlen(ptr noundef nonnull %16) #15
  %18 = add i32 %17, 21
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %18) #15
  %20 = icmp eq ptr %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %13
  %22 = shl i32 %17, 16
  %23 = add i32 %22, 65556
  %24 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %19, i32 0, i32 3
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %19, i32 0, i32 1
  store ptr %1, ptr %25, align 4
  %26 = getelementptr inbounds %struct.svc_deferred_req, ptr %1, i32 0, i32 9
  %27 = getelementptr inbounds %struct.svc_deferred_req, ptr %1, i32 0, i32 7
  %28 = load i32, ptr %27, align 4
  %29 = lshr i32 %28, 2
  %30 = getelementptr i32, ptr %26, i32 %29
  %31 = load i32, ptr %30, align 4
  %32 = call i32 @llvm.bswap.i32(i32 %31)
  %33 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %19, i32 0, i32 2
  store i32 %32, ptr %33, align 4
  %34 = getelementptr i8, ptr %19, i32 20
  %35 = load ptr, ptr %14, align 4
  %36 = getelementptr inbounds %struct.svc_xprt, ptr %35, i32 0, i32 17
  %37 = icmp eq ptr %36, null
  %38 = select i1 %37, ptr @.str.72, ptr %36
  %39 = call ptr @strcpy(ptr noundef %34, ptr noundef nonnull %38)
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %40

40:                                               ; preds = %21, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_deferred_event(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.svc_deferred_req, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.svc_xprt, ptr %6, i32 0, i32 17
  %8 = tail call i32 @strlen(ptr noundef nonnull %7) #15
  %9 = shl i32 %8, 16
  %10 = add i32 %9, 65556
  %11 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %12 = load ptr, ptr %11, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #11, !srcloc !12
  %17 = add i32 %16, %13
  %18 = inttoptr i32 %17 to ptr
  %19 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load volatile ptr, ptr %18, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %60, label %25

25:                                               ; preds = %22, %2
  %26 = add i32 %8, 32
  %27 = and i32 %26, -8
  %28 = add i32 %27, -4
  %29 = call ptr @perf_trace_buf_alloc(i32 noundef %28, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %30 = icmp eq ptr %29, null
  br i1 %30, label %60, label %31

31:                                               ; preds = %25
  %32 = load ptr, ptr %3, align 4
  %33 = call ptr @llvm.returnaddress(i32 0) #15
  %34 = ptrtoint ptr %33 to i32
  %35 = getelementptr [18 x i32], ptr %32, i32 0, i32 15
  store i32 %34, ptr %35, align 4
  %36 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %37 = ptrtoint ptr %36 to i32
  %38 = getelementptr [18 x i32], ptr %32, i32 0, i32 11
  store i32 %37, ptr %38, align 4
  %39 = call i32 @llvm.read_register.i32(metadata !0) #15
  %40 = getelementptr [18 x i32], ptr %32, i32 0, i32 13
  store i32 %39, ptr %40, align 4
  %41 = getelementptr [18 x i32], ptr %32, i32 0, i32 16
  store i32 19, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %29, i32 0, i32 3
  store i32 %10, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %29, i32 0, i32 1
  store ptr %1, ptr %43, align 4
  %44 = getelementptr inbounds %struct.svc_deferred_req, ptr %1, i32 0, i32 9
  %45 = getelementptr inbounds %struct.svc_deferred_req, ptr %1, i32 0, i32 7
  %46 = load i32, ptr %45, align 4
  %47 = lshr i32 %46, 2
  %48 = getelementptr i32, ptr %44, i32 %47
  %49 = load i32, ptr %48, align 4
  %50 = call i32 @llvm.bswap.i32(i32 %49)
  %51 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %29, i32 0, i32 2
  store i32 %50, ptr %51, align 4
  %52 = getelementptr i8, ptr %29, i32 20
  %53 = load ptr, ptr %5, align 4
  %54 = getelementptr inbounds %struct.svc_xprt, ptr %53, i32 0, i32 17
  %55 = icmp eq ptr %54, null
  %56 = select i1 %55, ptr @.str.72, ptr %54
  %57 = call ptr @strcpy(ptr noundef %52, ptr noundef nonnull %56)
  %58 = load i32, ptr %4, align 4
  %59 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %29, i32 noundef %28, i32 noundef %58, ptr noundef %0, i64 noundef 1, ptr noundef %59, ptr noundef %18, ptr noundef null) #15
  br label %60

60:                                               ; preds = %31, %25, %22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_new_socket(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %12, label %33, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 20) #15
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 1
  %18 = load i16, ptr %17, align 4
  %19 = sext i16 %18 to i32
  %20 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %14, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 4
  %22 = load ptr, ptr %21, align 16
  %23 = getelementptr inbounds %struct.sock_common, ptr %22, i32 0, i32 3
  %24 = load i16, ptr %23, align 8
  %25 = zext i16 %24 to i32
  %26 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %14, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = load ptr, ptr %21, align 16
  %28 = getelementptr inbounds %struct.sock_common, ptr %27, i32 0, i32 4
  %29 = load volatile i8, ptr %28, align 2
  %30 = icmp eq i8 %29, 10
  %31 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %14, i32 0, i32 3
  %32 = zext i1 %30 to i8
  store i8 %32, ptr %31, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #15
  br label %33

33:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_new_socket(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #11, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %51, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #15
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 1
  %34 = load i16, ptr %33, align 4
  %35 = sext i16 %34 to i32
  %36 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %20, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 4
  %38 = load ptr, ptr %37, align 16
  %39 = getelementptr inbounds %struct.sock_common, ptr %38, i32 0, i32 3
  %40 = load i16, ptr %39, align 8
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %20, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = load ptr, ptr %37, align 16
  %44 = getelementptr inbounds %struct.sock_common, ptr %43, i32 0, i32 4
  %45 = load volatile i8, ptr %44, align 2
  %46 = icmp eq i8 %45, 10
  %47 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %20, i32 0, i32 3
  %48 = zext i1 %46 to i8
  store i8 %48, ptr %47, align 4
  %49 = load i32, ptr %4, align 4
  %50 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %49, ptr noundef %0, i64 noundef 1, ptr noundef %50, ptr noundef %12, ptr noundef null) #15
  br label %51

51:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_marker(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %34, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %16 = tail call i32 @strlen(ptr noundef %15) #15
  %17 = add i32 %16, 21
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %17) #15
  %19 = icmp eq ptr %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %14
  %21 = shl i32 %16, 16
  %22 = add i32 %21, 65556
  %23 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %18, i32 0, i32 3
  store i32 %22, ptr %23, align 4
  %24 = call i32 @llvm.bswap.i32(i32 %2)
  %25 = and i32 %24, 2147483647
  %26 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %18, i32 0, i32 1
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %18, i32 0, i32 2
  %28 = lshr i32 %24, 31
  %29 = trunc i32 %28 to i8
  store i8 %29, ptr %27, align 4
  %30 = getelementptr i8, ptr %18, i32 20
  %31 = icmp eq ptr %15, null
  %32 = select i1 %31, ptr @.str.72, ptr %15
  %33 = call ptr @strcpy(ptr noundef %30, ptr noundef %32)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %34

34:                                               ; preds = %20, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_marker(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %7 = tail call i32 @strlen(ptr noundef %6) #15
  %8 = shl i32 %7, 16
  %9 = add i32 %8, 65556
  %10 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #11, !srcloc !12
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %19 = load volatile ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = load volatile ptr, ptr %17, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %54, label %24

24:                                               ; preds = %21, %3
  %25 = add i32 %7, 32
  %26 = and i32 %25, -8
  %27 = add i32 %26, -4
  %28 = call ptr @perf_trace_buf_alloc(i32 noundef %27, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %29 = icmp eq ptr %28, null
  br i1 %29, label %54, label %30

30:                                               ; preds = %24
  %31 = load ptr, ptr %4, align 4
  %32 = call ptr @llvm.returnaddress(i32 0) #15
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %31, i32 0, i32 15
  store i32 %33, ptr %34, align 4
  %35 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %36 = ptrtoint ptr %35 to i32
  %37 = getelementptr [18 x i32], ptr %31, i32 0, i32 11
  store i32 %36, ptr %37, align 4
  %38 = call i32 @llvm.read_register.i32(metadata !0) #15
  %39 = getelementptr [18 x i32], ptr %31, i32 0, i32 13
  store i32 %38, ptr %39, align 4
  %40 = getelementptr [18 x i32], ptr %31, i32 0, i32 16
  store i32 19, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %28, i32 0, i32 3
  store i32 %9, ptr %41, align 4
  %42 = call i32 @llvm.bswap.i32(i32 %2)
  %43 = and i32 %42, 2147483647
  %44 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %28, i32 0, i32 1
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %28, i32 0, i32 2
  %46 = lshr i32 %42, 31
  %47 = trunc i32 %46 to i8
  store i8 %47, ptr %45, align 4
  %48 = getelementptr i8, ptr %28, i32 20
  %49 = icmp eq ptr %6, null
  %50 = select i1 %49, ptr @.str.72, ptr %6
  %51 = call ptr @strcpy(ptr noundef %48, ptr noundef %50)
  %52 = load i32, ptr %5, align 4
  %53 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %28, i32 noundef %27, i32 noundef %52, ptr noundef %0, i64 noundef 1, ptr noundef %53, ptr noundef %17, ptr noundef null) #15
  br label %54

54:                                               ; preds = %30, %24, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_class(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %32, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %16 = tail call i32 @strlen(ptr noundef %15) #15
  %17 = add i32 %16, 21
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %17) #15
  %19 = icmp eq ptr %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %14
  %21 = shl i32 %16, 16
  %22 = add i32 %21, 65556
  %23 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %18, i32 0, i32 3
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %18, i32 0, i32 1
  store i32 %2, ptr %24, align 4
  %25 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %18, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr i8, ptr %18, i32 20
  %29 = icmp eq ptr %15, null
  %30 = select i1 %29, ptr @.str.72, ptr %15
  %31 = call ptr @strcpy(ptr noundef %28, ptr noundef %30)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %32

32:                                               ; preds = %20, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_class(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %7 = tail call i32 @strlen(ptr noundef %6) #15
  %8 = shl i32 %7, 16
  %9 = add i32 %8, 65556
  %10 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #11, !srcloc !12
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %19 = load volatile ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = load volatile ptr, ptr %17, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %52, label %24

24:                                               ; preds = %21, %3
  %25 = add i32 %7, 32
  %26 = and i32 %25, -8
  %27 = add i32 %26, -4
  %28 = call ptr @perf_trace_buf_alloc(i32 noundef %27, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %29 = icmp eq ptr %28, null
  br i1 %29, label %52, label %30

30:                                               ; preds = %24
  %31 = load ptr, ptr %4, align 4
  %32 = call ptr @llvm.returnaddress(i32 0) #15
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %31, i32 0, i32 15
  store i32 %33, ptr %34, align 4
  %35 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %36 = ptrtoint ptr %35 to i32
  %37 = getelementptr [18 x i32], ptr %31, i32 0, i32 11
  store i32 %36, ptr %37, align 4
  %38 = call i32 @llvm.read_register.i32(metadata !0) #15
  %39 = getelementptr [18 x i32], ptr %31, i32 0, i32 13
  store i32 %38, ptr %39, align 4
  %40 = getelementptr [18 x i32], ptr %31, i32 0, i32 16
  store i32 19, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %28, i32 0, i32 3
  store i32 %9, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %28, i32 0, i32 1
  store i32 %2, ptr %42, align 4
  %43 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %28, i32 0, i32 2
  store i32 %44, ptr %45, align 4
  %46 = getelementptr i8, ptr %28, i32 20
  %47 = icmp eq ptr %6, null
  %48 = select i1 %47, ptr @.str.72, ptr %6
  %49 = call ptr @strcpy(ptr noundef %46, ptr noundef %48)
  %50 = load i32, ptr %5, align 4
  %51 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %28, i32 noundef %27, i32 noundef %50, ptr noundef %0, i64 noundef 1, ptr noundef %51, ptr noundef %17, ptr noundef null) #15
  br label %52

52:                                               ; preds = %30, %24, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_tcp_recv_short(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %34, label %15

15:                                               ; preds = %13, %10, %4
  %16 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %17 = tail call i32 @strlen(ptr noundef %16) #15
  %18 = add i32 %17, 25
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %18) #15
  %20 = icmp eq ptr %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %15
  %22 = shl i32 %17, 16
  %23 = add i32 %22, 65560
  %24 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %19, i32 0, i32 4
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %19, i32 0, i32 1
  store i32 %2, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %19, i32 0, i32 2
  store i32 %3, ptr %26, align 4
  %27 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %19, i32 0, i32 3
  store i32 %28, ptr %29, align 4
  %30 = getelementptr i8, ptr %19, i32 24
  %31 = icmp eq ptr %16, null
  %32 = select i1 %31, ptr @.str.72, ptr %16
  %33 = call ptr @strcpy(ptr noundef %30, ptr noundef %32)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %34

34:                                               ; preds = %21, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_tcp_recv_short(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %8 = tail call i32 @strlen(ptr noundef %7) #15
  %9 = shl i32 %8, 16
  %10 = add i32 %9, 65560
  %11 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %12 = load ptr, ptr %11, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #11, !srcloc !12
  %17 = add i32 %16, %13
  %18 = inttoptr i32 %17 to ptr
  %19 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %4
  %23 = load volatile ptr, ptr %18, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %54, label %25

25:                                               ; preds = %22, %4
  %26 = add i32 %8, 36
  %27 = and i32 %26, -8
  %28 = add i32 %27, -4
  %29 = call ptr @perf_trace_buf_alloc(i32 noundef %28, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %30 = icmp eq ptr %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %25
  %32 = load ptr, ptr %5, align 4
  %33 = call ptr @llvm.returnaddress(i32 0) #15
  %34 = ptrtoint ptr %33 to i32
  %35 = getelementptr [18 x i32], ptr %32, i32 0, i32 15
  store i32 %34, ptr %35, align 4
  %36 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %37 = ptrtoint ptr %36 to i32
  %38 = getelementptr [18 x i32], ptr %32, i32 0, i32 11
  store i32 %37, ptr %38, align 4
  %39 = call i32 @llvm.read_register.i32(metadata !0) #15
  %40 = getelementptr [18 x i32], ptr %32, i32 0, i32 13
  store i32 %39, ptr %40, align 4
  %41 = getelementptr [18 x i32], ptr %32, i32 0, i32 16
  store i32 19, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %29, i32 0, i32 4
  store i32 %10, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %29, i32 0, i32 1
  store i32 %2, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %29, i32 0, i32 2
  store i32 %3, ptr %44, align 4
  %45 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %29, i32 0, i32 3
  store i32 %46, ptr %47, align 4
  %48 = getelementptr i8, ptr %29, i32 24
  %49 = icmp eq ptr %7, null
  %50 = select i1 %49, ptr @.str.72, ptr %7
  %51 = call ptr @strcpy(ptr noundef %48, ptr noundef %50)
  %52 = load i32, ptr %6, align 4
  %53 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %29, i32 noundef %28, i32 noundef %52, ptr noundef %0, i64 noundef 1, ptr noundef %53, ptr noundef %18, ptr noundef null) #15
  br label %54

54:                                               ; preds = %31, %25, %22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_tcp_state(ptr noundef %0, ptr noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %39, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %16 = tail call i32 @strlen(ptr noundef %15) #15
  %17 = add i32 %16, 25
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %17) #15
  %19 = icmp eq ptr %18, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %14
  %21 = shl i32 %16, 16
  %22 = add i32 %21, 65560
  %23 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %18, i32 0, i32 4
  store i32 %22, ptr %23, align 4
  %24 = load i32, ptr %2, align 64
  %25 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %18, i32 0, i32 1
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.socket, ptr %2, i32 0, i32 4
  %27 = load ptr, ptr %26, align 16
  %28 = getelementptr inbounds %struct.sock_common, ptr %27, i32 0, i32 4
  %29 = load volatile i8, ptr %28, align 2
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %18, i32 0, i32 2
  store i32 %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %18, i32 0, i32 3
  store i32 %33, ptr %34, align 4
  %35 = getelementptr i8, ptr %18, i32 24
  %36 = icmp eq ptr %15, null
  %37 = select i1 %36, ptr @.str.72, ptr %15
  %38 = call ptr @strcpy(ptr noundef %35, ptr noundef %37)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %39

39:                                               ; preds = %20, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_tcp_state(ptr noundef %0, ptr noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 17
  %7 = tail call i32 @strlen(ptr noundef %6) #15
  %8 = shl i32 %7, 16
  %9 = add i32 %8, 65560
  %10 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #11, !srcloc !12
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %19 = load volatile ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = load volatile ptr, ptr %17, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %21, %3
  %25 = add i32 %7, 36
  %26 = and i32 %25, -8
  %27 = add i32 %26, -4
  %28 = call ptr @perf_trace_buf_alloc(i32 noundef %27, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %29 = icmp eq ptr %28, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %24
  %31 = load ptr, ptr %4, align 4
  %32 = call ptr @llvm.returnaddress(i32 0) #15
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %31, i32 0, i32 15
  store i32 %33, ptr %34, align 4
  %35 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %36 = ptrtoint ptr %35 to i32
  %37 = getelementptr [18 x i32], ptr %31, i32 0, i32 11
  store i32 %36, ptr %37, align 4
  %38 = call i32 @llvm.read_register.i32(metadata !0) #15
  %39 = getelementptr [18 x i32], ptr %31, i32 0, i32 13
  store i32 %38, ptr %39, align 4
  %40 = getelementptr [18 x i32], ptr %31, i32 0, i32 16
  store i32 19, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %28, i32 0, i32 4
  store i32 %9, ptr %41, align 4
  %42 = load i32, ptr %2, align 64
  %43 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %28, i32 0, i32 1
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.socket, ptr %2, i32 0, i32 4
  %45 = load ptr, ptr %44, align 16
  %46 = getelementptr inbounds %struct.sock_common, ptr %45, i32 0, i32 4
  %47 = load volatile i8, ptr %46, align 2
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %28, i32 0, i32 2
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 5
  %51 = load i32, ptr %50, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %28, i32 0, i32 3
  store i32 %51, ptr %52, align 4
  %53 = getelementptr i8, ptr %28, i32 24
  %54 = icmp eq ptr %6, null
  %55 = select i1 %54, ptr @.str.72, ptr %6
  %56 = call ptr @strcpy(ptr noundef %53, ptr noundef %55)
  %57 = load i32, ptr %5, align 4
  %58 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %28, i32 noundef %27, i32 noundef %57, ptr noundef %0, i64 noundef 1, ptr noundef %58, ptr noundef %17, ptr noundef null) #15
  br label %59

59:                                               ; preds = %30, %24, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_accept_class(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %34, label %15

15:                                               ; preds = %13, %10, %4
  %16 = icmp eq ptr %2, null
  %17 = select i1 %16, ptr @.str.72, ptr %2
  %18 = tail call i32 @strlen(ptr noundef %17) #15
  %19 = add i32 %18, 21
  %20 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %19) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %15
  %23 = shl i32 %18, 16
  %24 = add i32 %23, 65556
  %25 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %20, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %20, i32 0, i32 1
  store i32 %3, ptr %26, align 4
  %27 = getelementptr i8, ptr %20, i32 20
  %28 = call ptr @strcpy(ptr noundef %27, ptr noundef %17)
  %29 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 19
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.net, ptr %30, i32 0, i32 14, i32 2
  %32 = load i32, ptr %31, align 8
  %33 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %20, i32 0, i32 3
  store i32 %32, ptr %33, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %34

34:                                               ; preds = %22, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_accept_class(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = icmp eq ptr %2, null
  %8 = select i1 %7, ptr @.str.72, ptr %2
  %9 = tail call i32 @strlen(ptr noundef %8) #15
  %10 = shl i32 %9, 16
  %11 = add i32 %10, 65556
  %12 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %13 = load ptr, ptr %12, align 4
  %14 = ptrtoint ptr %13 to i32
  %15 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %16 = inttoptr i32 %15 to ptr
  %17 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %16) #11, !srcloc !12
  %18 = add i32 %17, %14
  %19 = inttoptr i32 %18 to ptr
  %20 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %4
  %24 = load volatile ptr, ptr %19, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %54, label %26

26:                                               ; preds = %23, %4
  %27 = add i32 %9, 32
  %28 = and i32 %27, -8
  %29 = add i32 %28, -4
  %30 = call ptr @perf_trace_buf_alloc(i32 noundef %29, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %31 = icmp eq ptr %30, null
  br i1 %31, label %54, label %32

32:                                               ; preds = %26
  %33 = load ptr, ptr %5, align 4
  %34 = call ptr @llvm.returnaddress(i32 0) #15
  %35 = ptrtoint ptr %34 to i32
  %36 = getelementptr [18 x i32], ptr %33, i32 0, i32 15
  store i32 %35, ptr %36, align 4
  %37 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %38 = ptrtoint ptr %37 to i32
  %39 = getelementptr [18 x i32], ptr %33, i32 0, i32 11
  store i32 %38, ptr %39, align 4
  %40 = call i32 @llvm.read_register.i32(metadata !0) #15
  %41 = getelementptr [18 x i32], ptr %33, i32 0, i32 13
  store i32 %40, ptr %41, align 4
  %42 = getelementptr [18 x i32], ptr %33, i32 0, i32 16
  store i32 19, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %30, i32 0, i32 2
  store i32 %11, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %30, i32 0, i32 1
  store i32 %3, ptr %44, align 4
  %45 = getelementptr i8, ptr %30, i32 20
  %46 = call ptr @strcpy(ptr noundef %45, ptr noundef %8)
  %47 = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 19
  %48 = load ptr, ptr %47, align 4
  %49 = getelementptr inbounds %struct.net, ptr %48, i32 0, i32 14, i32 2
  %50 = load i32, ptr %49, align 8
  %51 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %30, i32 0, i32 3
  store i32 %50, ptr %51, align 4
  %52 = load i32, ptr %6, align 4
  %53 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %30, i32 noundef %29, i32 noundef %52, ptr noundef %0, i64 noundef 1, ptr noundef %53, ptr noundef %19, ptr noundef null) #15
  br label %54

54:                                               ; preds = %32, %26, %23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_cache_event(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %13, label %33, label %14

14:                                               ; preds = %12, %9, %3
  %15 = getelementptr inbounds %struct.cache_detail, ptr %1, i32 0, i32 4
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  %18 = select i1 %17, ptr @.str.72, ptr %16
  %19 = tail call i32 @strlen(ptr noundef nonnull %18) #15
  %20 = add i32 %19, 17
  %21 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %20) #15
  %22 = icmp eq ptr %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %14
  %24 = shl i32 %19, 16
  %25 = add i32 %24, 65552
  %26 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %21, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %21, i32 0, i32 1
  store ptr %2, ptr %27, align 4
  %28 = getelementptr i8, ptr %21, i32 16
  %29 = load ptr, ptr %15, align 8
  %30 = icmp eq ptr %29, null
  %31 = select i1 %30, ptr @.str.72, ptr %29
  %32 = call ptr @strcpy(ptr noundef %28, ptr noundef nonnull %31)
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #15
  br label %33

33:                                               ; preds = %23, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_cache_event(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #15
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.cache_detail, ptr %1, i32 0, i32 4
  %7 = load ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, null
  %9 = select i1 %8, ptr @.str.72, ptr %7
  %10 = tail call i32 @strlen(ptr noundef nonnull %9) #15
  %11 = shl i32 %10, 16
  %12 = add i32 %11, 65552
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %14 = load ptr, ptr %13, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %17 = inttoptr i32 %16 to ptr
  %18 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %17) #11, !srcloc !12
  %19 = add i32 %18, %15
  %20 = inttoptr i32 %19 to ptr
  %21 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %22 = load volatile ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %3
  %25 = load volatile ptr, ptr %20, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %53, label %27

27:                                               ; preds = %24, %3
  %28 = add i32 %10, 28
  %29 = and i32 %28, -8
  %30 = add i32 %29, -4
  %31 = call ptr @perf_trace_buf_alloc(i32 noundef %30, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %32 = icmp eq ptr %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %27
  %34 = load ptr, ptr %4, align 4
  %35 = call ptr @llvm.returnaddress(i32 0) #15
  %36 = ptrtoint ptr %35 to i32
  %37 = getelementptr [18 x i32], ptr %34, i32 0, i32 15
  store i32 %36, ptr %37, align 4
  %38 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %39 = ptrtoint ptr %38 to i32
  %40 = getelementptr [18 x i32], ptr %34, i32 0, i32 11
  store i32 %39, ptr %40, align 4
  %41 = call i32 @llvm.read_register.i32(metadata !0) #15
  %42 = getelementptr [18 x i32], ptr %34, i32 0, i32 13
  store i32 %41, ptr %42, align 4
  %43 = getelementptr [18 x i32], ptr %34, i32 0, i32 16
  store i32 19, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %31, i32 0, i32 2
  store i32 %12, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %31, i32 0, i32 1
  store ptr %2, ptr %45, align 4
  %46 = getelementptr i8, ptr %31, i32 16
  %47 = load ptr, ptr %6, align 8
  %48 = icmp eq ptr %47, null
  %49 = select i1 %48, ptr @.str.72, ptr %47
  %50 = call ptr @strcpy(ptr noundef %46, ptr noundef nonnull %49)
  %51 = load i32, ptr %5, align 4
  %52 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %31, i32 noundef %30, i32 noundef %51, ptr noundef %0, i64 noundef 1, ptr noundef %52, ptr noundef %20, ptr noundef null) #15
  br label %53

53:                                               ; preds = %33, %27, %24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_register_class(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %8, i8 0, i32 24, i1 false), !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 704
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13, !prof !10

13:                                               ; preds = %7
  %14 = and i32 %10, 256
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18, !prof !11

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %17, label %36, label %18

18:                                               ; preds = %16, %13, %7
  %19 = icmp eq ptr %1, null
  %20 = select i1 %19, ptr @.str.72, ptr %1
  %21 = tail call i32 @strlen(ptr noundef %20) #15
  %22 = add i32 %21, 29
  %23 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %8, ptr noundef %0, i32 noundef %22) #15
  %24 = icmp eq ptr %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %18
  %26 = shl i32 %21, 16
  %27 = add i32 %26, 65564
  %28 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %23, i32 0, i32 6
  store i32 %27, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %23, i32 0, i32 1
  store i32 %2, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %23, i32 0, i32 2
  store i32 %3, ptr %30, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %23, i32 0, i32 3
  store i16 %4, ptr %31, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %23, i32 0, i32 4
  store i16 %5, ptr %32, align 2
  %33 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %23, i32 0, i32 5
  store i32 %6, ptr %33, align 4
  %34 = getelementptr i8, ptr %23, i32 28
  %35 = call ptr @strcpy(ptr noundef %34, ptr noundef %20)
  call void @trace_event_buffer_commit(ptr noundef nonnull %8) #15
  br label %36

36:                                               ; preds = %25, %18, %16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_register_class(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4, i16 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = alloca ptr, align 4
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #15
  store ptr null, ptr %8, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  store i32 0, ptr %9, align 4, !annotation !9
  %10 = icmp eq ptr %1, null
  %11 = select i1 %10, ptr @.str.72, ptr %1
  %12 = tail call i32 @strlen(ptr noundef %11) #15
  %13 = shl i32 %12, 16
  %14 = add i32 %13, 65564
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %16 = load ptr, ptr %15, align 4
  %17 = ptrtoint ptr %16 to i32
  %18 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %19 = inttoptr i32 %18 to ptr
  %20 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %19) #11, !srcloc !12
  %21 = add i32 %20, %17
  %22 = inttoptr i32 %21 to ptr
  %23 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %24 = load volatile ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %7
  %27 = load volatile ptr, ptr %22, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %26, %7
  %30 = add i32 %12, 40
  %31 = and i32 %30, -8
  %32 = add i32 %31, -4
  %33 = call ptr @perf_trace_buf_alloc(i32 noundef %32, ptr noundef nonnull %8, ptr noundef nonnull %9) #15
  %34 = icmp eq ptr %33, null
  br i1 %34, label %56, label %35

35:                                               ; preds = %29
  %36 = load ptr, ptr %8, align 4
  %37 = call ptr @llvm.returnaddress(i32 0) #15
  %38 = ptrtoint ptr %37 to i32
  %39 = getelementptr [18 x i32], ptr %36, i32 0, i32 15
  store i32 %38, ptr %39, align 4
  %40 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %41 = ptrtoint ptr %40 to i32
  %42 = getelementptr [18 x i32], ptr %36, i32 0, i32 11
  store i32 %41, ptr %42, align 4
  %43 = call i32 @llvm.read_register.i32(metadata !0) #15
  %44 = getelementptr [18 x i32], ptr %36, i32 0, i32 13
  store i32 %43, ptr %44, align 4
  %45 = getelementptr [18 x i32], ptr %36, i32 0, i32 16
  store i32 19, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %33, i32 0, i32 6
  store i32 %14, ptr %46, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %33, i32 0, i32 1
  store i32 %2, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %33, i32 0, i32 2
  store i32 %3, ptr %48, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %33, i32 0, i32 3
  store i16 %4, ptr %49, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %33, i32 0, i32 4
  store i16 %5, ptr %50, align 2
  %51 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %33, i32 0, i32 5
  store i32 %6, ptr %51, align 4
  %52 = getelementptr i8, ptr %33, i32 28
  %53 = call ptr @strcpy(ptr noundef %52, ptr noundef %11)
  %54 = load i32, ptr %9, align 4
  %55 = load ptr, ptr %8, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %33, i32 noundef %32, i32 noundef %54, ptr noundef %0, i64 noundef 1, ptr noundef %55, ptr noundef %22, ptr noundef null) #15
  br label %56

56:                                               ; preds = %35, %29, %26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_unregister(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #15
  br i1 %14, label %30, label %15

15:                                               ; preds = %13, %10, %4
  %16 = icmp eq ptr %1, null
  %17 = select i1 %16, ptr @.str.72, ptr %1
  %18 = tail call i32 @strlen(ptr noundef %17) #15
  %19 = add i32 %18, 21
  %20 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %19) #15
  %21 = icmp eq ptr %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %15
  %23 = shl i32 %18, 16
  %24 = add i32 %23, 65556
  %25 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %20, i32 0, i32 3
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %20, i32 0, i32 1
  store i32 %2, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %20, i32 0, i32 2
  store i32 %3, ptr %27, align 4
  %28 = getelementptr i8, ptr %20, i32 20
  %29 = call ptr @strcpy(ptr noundef %28, ptr noundef %17)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #15
  br label %30

30:                                               ; preds = %22, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_svc_unregister(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #15
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = icmp eq ptr %1, null
  %8 = select i1 %7, ptr @.str.72, ptr %1
  %9 = tail call i32 @strlen(ptr noundef %8) #15
  %10 = shl i32 %9, 16
  %11 = add i32 %10, 65556
  %12 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %13 = load ptr, ptr %12, align 4
  %14 = ptrtoint ptr %13 to i32
  %15 = tail call i32 @llvm.read_register.i32(metadata !0) #15
  %16 = inttoptr i32 %15 to ptr
  %17 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %16) #11, !srcloc !12
  %18 = add i32 %17, %14
  %19 = inttoptr i32 %18 to ptr
  %20 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %4
  %24 = load volatile ptr, ptr %19, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %23, %4
  %27 = add i32 %9, 32
  %28 = and i32 %27, -8
  %29 = add i32 %28, -4
  %30 = call ptr @perf_trace_buf_alloc(i32 noundef %29, ptr noundef nonnull %5, ptr noundef nonnull %6) #15
  %31 = icmp eq ptr %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %26
  %33 = load ptr, ptr %5, align 4
  %34 = call ptr @llvm.returnaddress(i32 0) #15
  %35 = ptrtoint ptr %34 to i32
  %36 = getelementptr [18 x i32], ptr %33, i32 0, i32 15
  store i32 %35, ptr %36, align 4
  %37 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %38 = ptrtoint ptr %37 to i32
  %39 = getelementptr [18 x i32], ptr %33, i32 0, i32 11
  store i32 %38, ptr %39, align 4
  %40 = call i32 @llvm.read_register.i32(metadata !0) #15
  %41 = getelementptr [18 x i32], ptr %33, i32 0, i32 13
  store i32 %40, ptr %41, align 4
  %42 = getelementptr [18 x i32], ptr %33, i32 0, i32 16
  store i32 19, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %30, i32 0, i32 3
  store i32 %11, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %30, i32 0, i32 1
  store i32 %2, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %30, i32 0, i32 2
  store i32 %3, ptr %45, align 4
  %46 = getelementptr i8, ptr %30, i32 20
  %47 = call ptr @strcpy(ptr noundef %46, ptr noundef %8)
  %48 = load i32, ptr %6, align 4
  %49 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %30, i32 noundef %29, i32 noundef %48, ptr noundef %0, i64 noundef 1, ptr noundef %49, ptr noundef %19, ptr noundef null) #15
  br label %50

50:                                               ; preds = %32, %26, %23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret void
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @rpc_task_timeout(ptr noundef %0) #3 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 5
  %3 = load volatile i32, ptr %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = load volatile i32, ptr @jiffies, align 64
  %7 = sub i32 %6, %3
  %8 = icmp slt i32 %7, 0
  %9 = sub i32 %3, %6
  br i1 %8, label %11, label %10

10:                                               ; preds = %5, %1
  br label %11

11:                                               ; preds = %10, %5
  %12 = phi i32 [ 0, %10 ], [ %9, %5 ]
  ret i32 %12
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_init_priority_wait_queue(ptr noundef %0, ptr noundef %1) #0 {
  store i32 0, ptr %0, align 4
  %3 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 0
  store volatile ptr %3, ptr %3, align 4
  %4 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 0, i32 1
  store ptr %3, ptr %4, align 4
  %5 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 1
  store volatile ptr %5, ptr %5, align 4
  %6 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 1, i32 1
  store ptr %5, ptr %6, align 4
  %7 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 2
  store volatile ptr %7, ptr %7, align 4
  %8 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 2, i32 1
  store ptr %7, ptr %8, align 4
  %9 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 3
  store volatile ptr %9, ptr %9, align 4
  %10 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 3, i32 1
  store ptr %9, ptr %10, align 4
  %11 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 2
  store i8 3, ptr %11, align 4
  %12 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 3
  %13 = load i8, ptr %12, align 1
  %14 = icmp eq i8 %13, 3
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  store i8 3, ptr %12, align 1
  %16 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 4
  store i8 8, ptr %16, align 2
  br label %17

17:                                               ; preds = %15, %2
  %18 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 5
  store i16 0, ptr %18, align 4
  %19 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 1
  store i32 0, ptr %20, align 4
  %21 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2
  store i32 -32, ptr %21, align 4
  %22 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 0, i32 1
  store volatile ptr %22, ptr %22, align 4
  %23 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 0, i32 1, i32 1
  store ptr %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 0, i32 2
  store ptr @__rpc_queue_timer_fn, ptr %24, align 4
  %25 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 1
  tail call void @init_timer_key(ptr noundef %25, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #15
  store volatile ptr %19, ptr %19, align 4
  %26 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 0, i32 1
  store ptr %19, ptr %26, align 4
  %27 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 7
  store ptr %1, ptr %27, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_init_wait_queue(ptr noundef %0, ptr noundef %1) #0 {
  store i32 0, ptr %0, align 4
  %3 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 0
  store volatile ptr %3, ptr %3, align 4
  %4 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 0, i32 1
  store ptr %3, ptr %4, align 4
  %5 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 1
  store volatile ptr %5, ptr %5, align 4
  %6 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 1, i32 1
  store ptr %5, ptr %6, align 4
  %7 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 2
  store volatile ptr %7, ptr %7, align 4
  %8 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 2, i32 1
  store ptr %7, ptr %8, align 4
  %9 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 3
  store volatile ptr %9, ptr %9, align 4
  %10 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 3, i32 1
  store ptr %9, ptr %10, align 4
  %11 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 2
  store i8 0, ptr %11, align 4
  %12 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 3
  %13 = load i8, ptr %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  store i8 0, ptr %12, align 1
  %16 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 4
  store i8 1, ptr %16, align 2
  br label %17

17:                                               ; preds = %15, %2
  %18 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 5
  store i16 0, ptr %18, align 4
  %19 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 1
  store i32 0, ptr %20, align 4
  %21 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2
  store i32 -32, ptr %21, align 4
  %22 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 0, i32 1
  store volatile ptr %22, ptr %22, align 4
  %23 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 0, i32 1, i32 1
  store ptr %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 0, i32 2
  store ptr @__rpc_queue_timer_fn, ptr %24, align 4
  %25 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2, i32 1
  tail call void @init_timer_key(ptr noundef %25, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #15
  store volatile ptr %19, ptr %19, align 4
  %26 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 0, i32 1
  store ptr %19, ptr %26, align 4
  %27 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 7
  store ptr %1, ptr %27, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_destroy_wait_queue(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2
  %3 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %2) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__rpc_wait_for_completion_task(ptr noundef %0, ptr noundef %1) #0 {
  %3 = icmp eq ptr %1, null
  %4 = select i1 %3, ptr @rpc_wait_bit_killable, ptr %1
  %5 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 6
  %6 = tail call i32 @out_of_line_wait_on_bit(ptr noundef %5, i32 noundef 2, ptr noundef %4, i32 noundef 258) #15
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @rpc_wait_bit_killable(ptr nocapture noundef readnone %0, i32 noundef %1) #0 {
  %3 = tail call ptr @llvm.thread.pointer() #15
  %4 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 4
  %5 = load i32, ptr %4, align 4
  %6 = or i32 %5, 1073741824
  store i32 %6, ptr %4, align 4
  tail call void @schedule() #15
  %7 = load i32, ptr %4, align 4
  %8 = and i32 %7, -1073741825
  store i32 %8, ptr %4, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !15
  %9 = load volatile i32, ptr @system_freezing_cnt, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11, !prof !10

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @freezing_slow_path(ptr noundef %3) #15
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @__refrigerator(i1 noundef zeroext false) #15
  br label %15

15:                                               ; preds = %13, %11, %2
  %16 = and i32 %1, 257
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %15
  %19 = load volatile i32, ptr %3, align 4
  %20 = and i32 %19, 256
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %26, !prof !10

22:                                               ; preds = %18
  %23 = load volatile i32, ptr %3, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %22, %18
  %27 = and i32 %1, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 98, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = and i32 %31, 256
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29, %22, %15
  br label %35

35:                                               ; preds = %34, %29, %26
  %36 = phi i32 [ 0, %34 ], [ -512, %29 ], [ -512, %26 ]
  ret i32 %36
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @out_of_line_wait_on_bit(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on_timeout(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 4
  %8 = icmp eq i32 %7, 0
  %9 = load i1, ptr @rpc_sleep_check_activated.__already_done, align 1
  %10 = xor i1 %9, true
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %13, !prof !11

12:                                               ; preds = %4
  store i1 true, ptr @rpc_sleep_check_activated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 416, i32 noundef 9, ptr noundef null) #15
  br label %13

13:                                               ; preds = %12, %4
  br i1 %8, label %14, label %18

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  store i32 -5, ptr %15, align 4
  %16 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 17
  %17 = load ptr, ptr %16, align 8
  tail call fastcc void @rpc_do_put_task(ptr noundef %1, ptr noundef %17) #15
  br label %36

18:                                               ; preds = %13
  %19 = icmp eq ptr %2, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = icmp ne ptr %22, null
  %24 = load i1, ptr @rpc_set_tk_callback.__already_done, align 1
  %25 = xor i1 %24, true
  %26 = select i1 %23, i1 %25, i1 false
  br i1 %26, label %27, label %28, !prof !11

27:                                               ; preds = %20
  store i1 true, ptr @rpc_set_tk_callback.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 409, i32 noundef 9, ptr noundef null) #15
  br label %28

28:                                               ; preds = %27, %20
  br i1 %23, label %30, label %29

29:                                               ; preds = %28
  store ptr %2, ptr %21, align 8
  br label %30

30:                                               ; preds = %29, %28, %18
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  %31 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 23
  %32 = load i8, ptr %31, align 2
  %33 = and i8 %32, 3
  tail call fastcc void @__rpc_sleep_on_priority_timeout(ptr noundef %0, ptr noundef %1, i32 noundef %3, i8 noundef zeroext %33)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %34 = load i16, ptr %0, align 4
  %35 = add i16 %34, 1
  store i16 %35, ptr %0, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %36

36:                                               ; preds = %30, %14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__rpc_sleep_on_priority_timeout(ptr noundef %0, ptr noundef %1, i32 noundef %2, i8 noundef zeroext %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 2
  %8 = icmp ne i32 %7, 0
  %9 = load i1, ptr @__rpc_sleep_on_priority_timeout.__already_done, align 1
  %10 = xor i1 %9, true
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %13, !prof !11

12:                                               ; preds = %4
  store i1 true, ptr @__rpc_sleep_on_priority_timeout.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 398, i32 noundef 9, ptr noundef null) #15
  br label %13

13:                                               ; preds = %12, %4
  br i1 %8, label %46, label %14

14:                                               ; preds = %13
  %15 = load volatile i32, ptr @jiffies, align 64
  %16 = sub i32 %15, %2
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %44

18:                                               ; preds = %14
  tail call fastcc void @__rpc_do_sleep_on_priority(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %3)
  %19 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 5
  store i32 %2, ptr %19, align 8
  %20 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, %20
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 1
  %25 = load i32, ptr %24, align 4
  %26 = sub i32 %2, %25
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %23, %18
  %29 = load volatile i32, ptr @jiffies, align 64
  %30 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 1
  store i32 %2, ptr %30, align 4
  %31 = sub i32 %29, %2
  %32 = sub i32 %2, %29
  %33 = icmp slt i32 %31, 0
  %34 = select i1 %33, i32 %32, i32 0
  %35 = load ptr, ptr @rpciod_workqueue, align 4
  %36 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 6, i32 2
  %37 = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 16, ptr noundef %35, ptr noundef %36, i32 noundef %34) #15
  %38 = load ptr, ptr %20, align 4
  br label %39

39:                                               ; preds = %28, %23
  %40 = phi ptr [ %38, %28 ], [ %21, %23 ]
  %41 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 2
  %42 = getelementptr inbounds %struct.list_head, ptr %40, i32 0, i32 1
  store ptr %41, ptr %42, align 4
  store ptr %40, ptr %41, align 4
  %43 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 2, i32 1
  store ptr %20, ptr %43, align 4
  store volatile ptr %41, ptr %20, align 4
  br label %46

44:                                               ; preds = %14
  %45 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  store i32 -110, ptr %45, align 4
  br label %46

46:                                               ; preds = %44, %39, %13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %5 = load volatile i32, ptr %4, align 4
  %6 = and i32 %5, 4
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @rpc_sleep_check_activated.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !11

11:                                               ; preds = %3
  store i1 true, ptr @rpc_sleep_check_activated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 416, i32 noundef 9, ptr noundef null) #15
  br label %12

12:                                               ; preds = %11, %3
  br i1 %7, label %13, label %17

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  store i32 -5, ptr %14, align 4
  %15 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 17
  %16 = load ptr, ptr %15, align 8
  tail call fastcc void @rpc_do_put_task(ptr noundef %1, ptr noundef %16) #15
  br label %53

17:                                               ; preds = %12
  %18 = icmp eq ptr %2, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 3
  %21 = load ptr, ptr %20, align 8
  %22 = icmp ne ptr %21, null
  %23 = load i1, ptr @rpc_set_tk_callback.__already_done, align 1
  %24 = xor i1 %23, true
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %27, !prof !11

26:                                               ; preds = %19
  store i1 true, ptr @rpc_set_tk_callback.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 409, i32 noundef 9, ptr noundef null) #15
  br label %27

27:                                               ; preds = %26, %19
  br i1 %22, label %29, label %28

28:                                               ; preds = %27
  store ptr %2, ptr %20, align 8
  br label %29

29:                                               ; preds = %28, %27, %17
  %30 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 5
  %31 = load i32, ptr %30, align 8
  %32 = icmp ne i32 %31, 0
  %33 = load i1, ptr @rpc_sleep_on.__already_done, align 1
  %34 = xor i1 %33, true
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %37, !prof !11

36:                                               ; preds = %29
  store i1 true, ptr @rpc_sleep_on.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 449, i32 noundef 9, ptr noundef null) #15
  br label %37

37:                                               ; preds = %36, %29
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  %38 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 23
  %39 = load i8, ptr %38, align 2
  %40 = and i8 %39, 3
  %41 = load volatile i32, ptr %4, align 4
  %42 = and i32 %41, 2
  %43 = icmp ne i32 %42, 0
  %44 = load i1, ptr @__rpc_sleep_on_priority.__already_done, align 1
  %45 = xor i1 %44, true
  %46 = select i1 %43, i1 %45, i1 false
  br i1 %46, label %47, label %48, !prof !11

47:                                               ; preds = %37
  store i1 true, ptr @__rpc_sleep_on_priority.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 389, i32 noundef 9, ptr noundef null) #15
  br label %48

48:                                               ; preds = %47, %37
  br i1 %43, label %50, label %49

49:                                               ; preds = %48
  tail call fastcc void @__rpc_do_sleep_on_priority(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %40) #15
  br label %50

50:                                               ; preds = %49, %48
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %51 = load i16, ptr %0, align 4
  %52 = add i16 %51, 1
  store i16 %52, ptr %0, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %53

53:                                               ; preds = %50, %13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on_priority_timeout(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 4
  %8 = icmp eq i32 %7, 0
  %9 = load i1, ptr @rpc_sleep_check_activated.__already_done, align 1
  %10 = xor i1 %9, true
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %13, !prof !11

12:                                               ; preds = %4
  store i1 true, ptr @rpc_sleep_check_activated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 416, i32 noundef 9, ptr noundef null) #15
  br label %13

13:                                               ; preds = %12, %4
  br i1 %8, label %14, label %18

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  store i32 -5, ptr %15, align 4
  %16 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 17
  %17 = load ptr, ptr %16, align 8
  tail call fastcc void @rpc_do_put_task(ptr noundef %1, ptr noundef %17) #15
  br label %23

18:                                               ; preds = %13
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  %19 = trunc i32 %3 to i8
  %20 = add i8 %19, 1
  tail call fastcc void @__rpc_sleep_on_priority_timeout(ptr noundef %0, ptr noundef %1, i32 noundef %2, i8 noundef zeroext %20)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %21 = load i16, ptr %0, align 4
  %22 = add i16 %21, 1
  store i16 %22, ptr %0, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %23

23:                                               ; preds = %18, %14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on_priority(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %5 = load volatile i32, ptr %4, align 4
  %6 = and i32 %5, 4
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @rpc_sleep_check_activated.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !11

11:                                               ; preds = %3
  store i1 true, ptr @rpc_sleep_check_activated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 416, i32 noundef 9, ptr noundef null) #15
  br label %12

12:                                               ; preds = %11, %3
  br i1 %7, label %13, label %17

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 1
  store i32 -5, ptr %14, align 4
  %15 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 17
  %16 = load ptr, ptr %15, align 8
  tail call fastcc void @rpc_do_put_task(ptr noundef %1, ptr noundef %16) #15
  br label %40

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 5
  %19 = load i32, ptr %18, align 8
  %20 = icmp ne i32 %19, 0
  %21 = load i1, ptr @rpc_sleep_on_priority.__already_done, align 1
  %22 = xor i1 %21, true
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %25, !prof !11

24:                                               ; preds = %17
  store i1 true, ptr @rpc_sleep_on_priority.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 481, i32 noundef 9, ptr noundef null) #15
  br label %25

25:                                               ; preds = %24, %17
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  %26 = trunc i32 %2 to i8
  %27 = add i8 %26, 1
  %28 = load volatile i32, ptr %4, align 4
  %29 = and i32 %28, 2
  %30 = icmp ne i32 %29, 0
  %31 = load i1, ptr @__rpc_sleep_on_priority.__already_done, align 1
  %32 = xor i1 %31, true
  %33 = select i1 %30, i1 %32, i1 false
  br i1 %33, label %34, label %35, !prof !11

34:                                               ; preds = %25
  store i1 true, ptr @__rpc_sleep_on_priority.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 389, i32 noundef 9, ptr noundef null) #15
  br label %35

35:                                               ; preds = %34, %25
  br i1 %30, label %37, label %36

36:                                               ; preds = %35
  tail call fastcc void @__rpc_do_sleep_on_priority(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %27) #15
  br label %37

37:                                               ; preds = %36, %35
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %38 = load i16, ptr %0, align 4
  %39 = add i16 %38, 1
  store i16 %39, ptr %0, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %40

40:                                               ; preds = %37, %13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_wake_up_queued_task(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  %8 = load ptr, ptr @rpciod_workqueue, align 4
  %9 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %8, ptr noundef %0, ptr noundef %1, ptr noundef null, ptr noundef null) #15
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %10 = load i16, ptr %0, align 4
  %11 = add i16 %10, 1
  store i16 %11, ptr %0, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %12

12:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_wake_up_queued_task_set_status(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4)
  store i32 %2, ptr %4, align 4
  %10 = load ptr, ptr @rpciod_workqueue, align 4
  %11 = call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %10, ptr noundef %0, ptr noundef %1, ptr noundef nonnull @rpc_task_action_set_status, ptr noundef nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4)
  call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %12 = load i16, ptr %0, align 4
  %13 = add i16 %12, 1
  store i16 %13, ptr %0, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %14

14:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @rpc_wake_up_first_on_wq(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 {
  tail call void @_raw_spin_lock(ptr noundef %1) #15
  %5 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 2
  %6 = load i8, ptr %5, align 4
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 1
  br i1 %7, label %62, label %9

9:                                                ; preds = %4
  %10 = icmp ugt i8 %6, 2
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = getelementptr %struct.rpc_wait_queue, ptr %1, i32 0, i32 1, i32 3
  %13 = load volatile ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, %12
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr i8, ptr %13, i32 -36
  br label %66

17:                                               ; preds = %11, %9
  %18 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 3
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr %struct.rpc_wait_queue, ptr %1, i32 0, i32 1, i32 %20
  %22 = load volatile ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, %21
  br i1 %23, label %32, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 4
  %26 = load i8, ptr %25, align 2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = add i8 %26, -1
  store i8 %29, ptr %25, align 2
  %30 = load ptr, ptr %21, align 4
  %31 = getelementptr i8, ptr %30, i32 -36
  br label %66

32:                                               ; preds = %24, %17
  %33 = zext i8 %6 to i32
  %34 = getelementptr %struct.rpc_wait_queue, ptr %1, i32 0, i32 1, i32 %33
  br label %35

35:                                               ; preds = %54, %32
  %36 = phi ptr [ %21, %32 ], [ %39, %54 ]
  %37 = icmp eq ptr %36, %8
  %38 = getelementptr %struct.list_head, ptr %36, i32 -1
  %39 = select i1 %37, ptr %34, ptr %38
  %40 = load volatile ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, %39
  br i1 %41, label %54, label %42

42:                                               ; preds = %35
  %43 = getelementptr i8, ptr %40, i32 -36
  %44 = ptrtoint ptr %39 to i32
  %45 = ptrtoint ptr %8 to i32
  %46 = sub i32 %44, %45
  %47 = ashr exact i32 %46, 3
  %48 = icmp eq i32 %47, %20
  br i1 %48, label %66, label %49

49:                                               ; preds = %42
  %50 = trunc i32 %47 to i8
  store i8 %50, ptr %18, align 1
  %51 = shl nuw i32 1, %47
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 4
  store i8 %52, ptr %53, align 2
  br label %66

54:                                               ; preds = %35
  %55 = icmp eq ptr %39, %21
  br i1 %55, label %56, label %35

56:                                               ; preds = %54
  %57 = icmp eq i8 %19, %6
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  store i8 %6, ptr %18, align 1
  %59 = shl nuw i32 1, %33
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 4
  store i8 %60, ptr %61, align 2
  br label %71

62:                                               ; preds = %4
  %63 = load volatile ptr, ptr %8, align 4
  %64 = icmp eq ptr %63, %8
  %65 = getelementptr i8, ptr %63, i32 -36
  br i1 %64, label %71, label %66

66:                                               ; preds = %62, %49, %42, %28, %15
  %67 = phi ptr [ %31, %28 ], [ %16, %15 ], [ %43, %42 ], [ %43, %49 ], [ %65, %62 ]
  %68 = icmp eq ptr %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %67, ptr noundef %2, ptr noundef %3)
  br label %71

71:                                               ; preds = %69, %66, %62, %58, %56
  %72 = phi ptr [ %70, %69 ], [ null, %66 ], [ null, %56 ], [ null, %58 ], [ null, %62 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %73 = load i16, ptr %1, align 4
  %74 = add i16 %73, 1
  store i16 %74, ptr %1, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  ret ptr %72
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef readonly %3, ptr noundef %4) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 6
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %119, label %10

10:                                               ; preds = %5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !20
  %11 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 7
  %12 = load ptr, ptr %11, align 8
  %13 = icmp eq ptr %12, %1
  br i1 %13, label %14, label %119

14:                                               ; preds = %10
  %15 = icmp eq ptr %3, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = tail call zeroext i1 %3(ptr noundef %2, ptr noundef %4) #15
  br i1 %17, label %18, label %119

18:                                               ; preds = %16, %14
  %19 = load volatile i32, ptr %6, align 4
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.312, ptr noundef %2) #17
  br label %119

24:                                               ; preds = %18
  %25 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_wakeup, i32 0, i32 1), align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %50

27:                                               ; preds = %24
  %28 = tail call ptr @llvm.thread.pointer() #15
  %29 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %30 = load i32, ptr %29, align 8
  %31 = lshr i32 %30, 5
  %32 = getelementptr i32, ptr @__cpu_online_mask, i32 %31
  %33 = load volatile i32, ptr %32, align 4
  %34 = and i32 %30, 31
  %35 = shl nuw i32 1, %34
  %36 = and i32 %35, %33
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %27
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !21
  %39 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_wakeup, i32 0, i32 7), align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %41, %38
  %42 = phi ptr [ %46, %41 ], [ %39, %38 ]
  %43 = load volatile ptr, ptr %42, align 4
  %44 = getelementptr inbounds %struct.tracepoint_func, ptr %42, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  tail call void %43(ptr noundef %45, ptr noundef %2, ptr noundef %1) #15
  %46 = getelementptr %struct.tracepoint_func, ptr %42, i32 1
  %47 = load ptr, ptr %46, align 4
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %41

49:                                               ; preds = %41, %38
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !22
  br label %50

50:                                               ; preds = %49, %27, %24
  %51 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 2
  %52 = load volatile ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, %51
  br i1 %53, label %65, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 5
  store i32 0, ptr %55, align 8
  %56 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 2, i32 1
  %57 = load ptr, ptr %56, align 4
  %58 = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 1
  store ptr %57, ptr %58, align 4
  store volatile ptr %52, ptr %57, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %51, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %56, align 4
  %59 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 6
  %60 = load volatile ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, %59
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 6, i32 2
  %64 = tail call zeroext i1 @cancel_delayed_work(ptr noundef %63) #15
  br label %65

65:                                               ; preds = %62, %54, %50
  %66 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 2
  %67 = load i8, ptr %66, align 4
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8
  %70 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 4
  br i1 %68, label %98, label %72

72:                                               ; preds = %65
  %73 = icmp eq ptr %71, null
  %74 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 1
  br i1 %73, label %75, label %80

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 1, i32 1
  %77 = load ptr, ptr %76, align 4
  %78 = load ptr, ptr %74, align 4
  %79 = getelementptr inbounds %struct.list_head, ptr %78, i32 0, i32 1
  store ptr %77, ptr %79, align 4
  store volatile ptr %78, ptr %77, align 4
  br label %101

80:                                               ; preds = %72
  %81 = load volatile ptr, ptr %74, align 4
  %82 = icmp eq ptr %81, %74
  br i1 %82, label %94, label %83

83:                                               ; preds = %80
  %84 = getelementptr i8, ptr %81, i32 -8
  %85 = load ptr, ptr %84, align 4
  %86 = getelementptr inbounds %struct.list_head, ptr %85, i32 0, i32 1
  %87 = load ptr, ptr %86, align 4
  store ptr %84, ptr %86, align 4
  store ptr %85, ptr %84, align 4
  %88 = getelementptr i8, ptr %81, i32 -4
  store ptr %87, ptr %88, align 4
  store volatile ptr %84, ptr %87, align 4
  %89 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 1, i32 1
  %90 = load ptr, ptr %89, align 4
  %91 = load ptr, ptr %74, align 4
  %92 = getelementptr inbounds %struct.list_head, ptr %91, i32 0, i32 1
  store ptr %90, ptr %92, align 4
  store volatile ptr %91, ptr %90, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %74, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %89, align 4
  %93 = load ptr, ptr %70, align 4
  br label %94

94:                                               ; preds = %83, %80
  %95 = phi ptr [ %93, %83 ], [ %71, %80 ]
  %96 = load ptr, ptr %69, align 4
  %97 = getelementptr inbounds %struct.list_head, ptr %96, i32 0, i32 1
  store ptr %95, ptr %97, align 4
  store volatile ptr %96, ptr %95, align 4
  br label %101

98:                                               ; preds = %65
  %99 = load ptr, ptr %69, align 4
  %100 = getelementptr inbounds %struct.list_head, ptr %99, i32 0, i32 1
  store ptr %71, ptr %100, align 4
  store volatile ptr %99, ptr %71, align 4
  br label %101

101:                                              ; preds = %98, %94, %75
  %102 = phi ptr [ %69, %98 ], [ %69, %94 ], [ %74, %75 ]
  %103 = phi ptr [ %70, %98 ], [ %70, %94 ], [ %76, %75 ]
  store ptr inttoptr (i32 256 to ptr), ptr %102, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %103, align 4
  %104 = getelementptr inbounds %struct.rpc_wait_queue, ptr %1, i32 0, i32 5
  %105 = load i16, ptr %104, align 4
  %106 = add i16 %105, -1
  store i16 %106, ptr %104, align 4
  %107 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %6) #15
  %108 = icmp eq i32 %107, 0
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %6) #15
  br i1 %108, label %109, label %119

109:                                              ; preds = %101
  %110 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 20
  %111 = load i16, ptr %110, align 4
  %112 = and i16 %111, 1
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  store i32 -32, ptr %69, align 4
  store volatile ptr %70, ptr %70, align 4
  %115 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 1
  store ptr %70, ptr %115, align 4
  %116 = getelementptr inbounds %struct.rpc_task, ptr %2, i32 0, i32 8, i32 0, i32 1, i32 1
  store ptr @rpc_async_schedule, ptr %116, align 4
  %117 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %0, ptr noundef %69) #15
  br label %119

118:                                              ; preds = %109
  tail call void @wake_up_bit(ptr noundef %6, i32 noundef 1) #15
  br label %119

119:                                              ; preds = %118, %114, %101, %22, %16, %10, %5
  %120 = phi ptr [ null, %10 ], [ null, %16 ], [ null, %5 ], [ %2, %22 ], [ %2, %101 ], [ %2, %114 ], [ %2, %118 ]
  ret ptr %120
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @rpc_wake_up_first(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load ptr, ptr @rpciod_workqueue, align 4
  %5 = tail call ptr @rpc_wake_up_first_on_wq(ptr noundef %4, ptr noundef %0, ptr noundef %1, ptr noundef %2)
  ret ptr %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @rpc_wake_up_next(ptr noundef %0) #0 {
  %2 = load ptr, ptr @rpciod_workqueue, align 4
  %3 = tail call ptr @rpc_wake_up_first_on_wq(ptr noundef %2, ptr noundef %0, ptr noundef nonnull @rpc_wake_up_next_func, ptr noundef null) #15
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal zeroext i1 @rpc_wake_up_next_func(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1) #4 {
  ret i1 true
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_wake_up(ptr noundef %0) #0 {
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  %2 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 2
  %3 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 1
  %4 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 3
  %5 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 3
  %6 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 4
  %7 = ptrtoint ptr %3 to i32
  br label %8

8:                                                ; preds = %66, %1
  %9 = load i8, ptr %2, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %59, label %11

11:                                               ; preds = %8
  %12 = icmp ugt i8 %9, 2
  br i1 %12, label %13, label %18

13:                                               ; preds = %11
  %14 = load volatile ptr, ptr %4, align 4
  %15 = icmp eq ptr %14, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = getelementptr i8, ptr %14, i32 -36
  br label %63

18:                                               ; preds = %13, %11
  %19 = load i8, ptr %5, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 %20
  %22 = load volatile ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, %21
  br i1 %23, label %31, label %24

24:                                               ; preds = %18
  %25 = load i8, ptr %6, align 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = add i8 %25, -1
  store i8 %28, ptr %6, align 2
  %29 = load ptr, ptr %21, align 4
  %30 = getelementptr i8, ptr %29, i32 -36
  br label %63

31:                                               ; preds = %24, %18
  %32 = zext i8 %9 to i32
  %33 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 %32
  br label %34

34:                                               ; preds = %51, %31
  %35 = phi ptr [ %21, %31 ], [ %38, %51 ]
  %36 = icmp eq ptr %35, %3
  %37 = getelementptr %struct.list_head, ptr %35, i32 -1
  %38 = select i1 %36, ptr %33, ptr %37
  %39 = load volatile ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %38
  br i1 %40, label %51, label %41

41:                                               ; preds = %34
  %42 = getelementptr i8, ptr %39, i32 -36
  %43 = ptrtoint ptr %38 to i32
  %44 = sub i32 %43, %7
  %45 = ashr exact i32 %44, 3
  %46 = icmp eq i32 %45, %20
  br i1 %46, label %63, label %47

47:                                               ; preds = %41
  %48 = trunc i32 %45 to i8
  store i8 %48, ptr %5, align 1
  %49 = shl nuw i32 1, %45
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %6, align 2
  br label %63

51:                                               ; preds = %34
  %52 = icmp eq ptr %38, %21
  br i1 %52, label %53, label %34

53:                                               ; preds = %51
  %54 = icmp eq i8 %19, %9
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = zext i8 %9 to i32
  store i8 %9, ptr %5, align 1
  %57 = shl nuw i32 1, %56
  %58 = trunc i32 %57 to i8
  store i8 %58, ptr %6, align 2
  br label %69

59:                                               ; preds = %8
  %60 = load volatile ptr, ptr %3, align 4
  %61 = icmp eq ptr %60, %3
  %62 = getelementptr i8, ptr %60, i32 -36
  br i1 %61, label %69, label %63

63:                                               ; preds = %59, %47, %41, %27, %16
  %64 = phi ptr [ %30, %27 ], [ %17, %16 ], [ %42, %41 ], [ %42, %47 ], [ %62, %59 ]
  %65 = icmp eq ptr %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = load ptr, ptr @rpciod_workqueue, align 4
  %68 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %67, ptr noundef %0, ptr noundef nonnull %64, ptr noundef null, ptr noundef null) #15
  br label %8

69:                                               ; preds = %63, %59, %55, %53
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %70 = load i16, ptr %0, align 4
  %71 = add i16 %70, 1
  store i16 %71, ptr %0, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_wake_up_status(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  tail call void @_raw_spin_lock(ptr noundef %0) #15
  %4 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 2
  %5 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 1
  %6 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 3
  %7 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 4
  %9 = ptrtoint ptr %5 to i32
  br label %10

10:                                               ; preds = %68, %2
  %11 = load i8, ptr %4, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %61, label %13

13:                                               ; preds = %10
  %14 = icmp ugt i8 %11, 2
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = load volatile ptr, ptr %6, align 4
  %17 = icmp eq ptr %16, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = getelementptr i8, ptr %16, i32 -36
  br label %65

20:                                               ; preds = %15, %13
  %21 = load i8, ptr %7, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 %22
  %24 = load volatile ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, %23
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = load i8, ptr %8, align 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = add i8 %27, -1
  store i8 %30, ptr %8, align 2
  %31 = load ptr, ptr %23, align 4
  %32 = getelementptr i8, ptr %31, i32 -36
  br label %65

33:                                               ; preds = %26, %20
  %34 = zext i8 %11 to i32
  %35 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 %34
  br label %36

36:                                               ; preds = %53, %33
  %37 = phi ptr [ %23, %33 ], [ %40, %53 ]
  %38 = icmp eq ptr %37, %5
  %39 = getelementptr %struct.list_head, ptr %37, i32 -1
  %40 = select i1 %38, ptr %35, ptr %39
  %41 = load volatile ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, %40
  br i1 %42, label %53, label %43

43:                                               ; preds = %36
  %44 = getelementptr i8, ptr %41, i32 -36
  %45 = ptrtoint ptr %40 to i32
  %46 = sub i32 %45, %9
  %47 = ashr exact i32 %46, 3
  %48 = icmp eq i32 %47, %22
  br i1 %48, label %65, label %49

49:                                               ; preds = %43
  %50 = trunc i32 %47 to i8
  store i8 %50, ptr %7, align 1
  %51 = shl nuw i32 1, %47
  %52 = trunc i32 %51 to i8
  store i8 %52, ptr %8, align 2
  br label %65

53:                                               ; preds = %36
  %54 = icmp eq ptr %40, %23
  br i1 %54, label %55, label %36

55:                                               ; preds = %53
  %56 = icmp eq i8 %21, %11
  br i1 %56, label %71, label %57

57:                                               ; preds = %55
  %58 = zext i8 %11 to i32
  store i8 %11, ptr %7, align 1
  %59 = shl nuw i32 1, %58
  %60 = trunc i32 %59 to i8
  store i8 %60, ptr %8, align 2
  br label %71

61:                                               ; preds = %10
  %62 = load volatile ptr, ptr %5, align 4
  %63 = icmp eq ptr %62, %5
  %64 = getelementptr i8, ptr %62, i32 -36
  br i1 %63, label %71, label %65

65:                                               ; preds = %61, %49, %43, %29, %18
  %66 = phi ptr [ %32, %29 ], [ %19, %18 ], [ %44, %43 ], [ %44, %49 ], [ %64, %61 ]
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store i32 %1, ptr %3, align 4
  %69 = load ptr, ptr @rpciod_workqueue, align 4
  %70 = call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %69, ptr noundef %0, ptr noundef nonnull %66, ptr noundef nonnull @rpc_task_action_set_status, ptr noundef nonnull %3) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  br label %10

71:                                               ; preds = %65, %61, %57, %55
  call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %72 = load i16, ptr %0, align 4
  %73 = add i16 %72, 1
  store i16 %73, ptr %0, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_delay(ptr noundef %0, i32 noundef %1) #0 {
  %3 = load volatile i32, ptr @jiffies, align 64
  %4 = add i32 %3, %1
  tail call void @rpc_sleep_on_timeout(ptr noundef nonnull @delay_queue, ptr noundef %0, ptr noundef nonnull @__rpc_atrun, i32 noundef %4)
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal void @__rpc_atrun(ptr nocapture noundef %0) #5 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 1
  %3 = load i32, ptr %2, align 4
  %4 = icmp eq i32 %3, -110
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store i32 0, ptr %2, align 4
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_prepare_task(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 12
  %3 = load ptr, ptr %2, align 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 11
  %6 = load ptr, ptr %5, align 8
  tail call void %4(ptr noundef %0, ptr noundef %6) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_exit_task(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_end, i32 0, i32 1), align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %1
  %7 = tail call ptr @llvm.thread.pointer() #15
  %8 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %9 = load i32, ptr %8, align 8
  %10 = lshr i32 %9, 5
  %11 = getelementptr i32, ptr @__cpu_online_mask, i32 %10
  %12 = load volatile i32, ptr %11, align 4
  %13 = and i32 %9, 31
  %14 = shl nuw i32 1, %13
  %15 = and i32 %14, %12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %6
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !23
  %18 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_end, i32 0, i32 7), align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %20, %17
  %21 = phi ptr [ %25, %20 ], [ %18, %17 ]
  %22 = load volatile ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.tracepoint_func, ptr %21, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  tail call void %22(ptr noundef %24, ptr noundef %0, ptr noundef %3) #15
  %25 = getelementptr %struct.tracepoint_func, ptr %21, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %20

28:                                               ; preds = %20, %17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !24
  br label %29

29:                                               ; preds = %28, %6, %1
  store ptr null, ptr %2, align 4
  %30 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 12
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.rpc_call_ops, ptr %31, i32 0, i32 2
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 11
  %37 = load ptr, ptr %36, align 8
  tail call void %33(ptr noundef %0, ptr noundef %37) #15
  br label %45

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 13
  %40 = load ptr, ptr %39, align 8
  %41 = icmp eq ptr %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.rpc_clnt, ptr %40, i32 0, i32 13
  %44 = load ptr, ptr %43, align 4
  tail call void @rpc_count_iostats(ptr noundef %0, ptr noundef %44) #15
  br label %45

45:                                               ; preds = %42, %38, %35
  %46 = load ptr, ptr %30, align 4
  %47 = getelementptr inbounds %struct.rpc_call_ops, ptr %46, i32 0, i32 1
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %96, label %50

50:                                               ; preds = %45
  %51 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_call_done, i32 0, i32 1), align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %79

53:                                               ; preds = %50
  %54 = tail call ptr @llvm.thread.pointer() #15
  %55 = getelementptr inbounds %struct.thread_info, ptr %54, i32 0, i32 2
  %56 = load i32, ptr %55, align 8
  %57 = lshr i32 %56, 5
  %58 = getelementptr i32, ptr @__cpu_online_mask, i32 %57
  %59 = load volatile i32, ptr %58, align 4
  %60 = and i32 %56, 31
  %61 = shl nuw i32 1, %60
  %62 = and i32 %61, %59
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %79, label %64

64:                                               ; preds = %53
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !25
  %65 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_call_done, i32 0, i32 7), align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %67, %64
  %68 = phi ptr [ %72, %67 ], [ %65, %64 ]
  %69 = load volatile ptr, ptr %68, align 4
  %70 = getelementptr inbounds %struct.tracepoint_func, ptr %68, i32 0, i32 1
  %71 = load ptr, ptr %70, align 4
  tail call void %69(ptr noundef %71, ptr noundef %0, ptr noundef nonnull %48) #15
  %72 = getelementptr %struct.tracepoint_func, ptr %68, i32 1
  %73 = load ptr, ptr %72, align 4
  %74 = icmp eq ptr %73, null
  br i1 %74, label %75, label %67

75:                                               ; preds = %67, %64
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !26
  %76 = load ptr, ptr %30, align 4
  %77 = getelementptr inbounds %struct.rpc_call_ops, ptr %76, i32 0, i32 1
  %78 = load ptr, ptr %77, align 4
  br label %79

79:                                               ; preds = %75, %53, %50
  %80 = phi ptr [ %48, %50 ], [ %48, %53 ], [ %78, %75 ]
  %81 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 11
  %82 = load ptr, ptr %81, align 8
  tail call void %80(ptr noundef %0, ptr noundef %82) #15
  %83 = load ptr, ptr %2, align 4
  %84 = icmp eq ptr %83, null
  br i1 %84, label %96, label %85

85:                                               ; preds = %79
  tail call void @xprt_release(ptr noundef %0) #15
  %86 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 21
  store i16 0, ptr %86, align 2
  %87 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 20
  %88 = load i16, ptr %87, align 4
  %89 = and i16 %88, -2081
  store i16 %89, ptr %87, align 4
  %90 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 23
  %91 = load i8, ptr %90, align 2
  %92 = and i8 %91, 3
  %93 = or i8 %92, -88
  store i8 %93, ptr %90, align 2
  %94 = tail call i64 @ktime_get() #15
  %95 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 18
  store i64 %94, ptr %95, align 8
  br label %96

96:                                               ; preds = %85, %79, %45
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_count_iostats(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_signal_task(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 6
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 4
  %9 = load ptr, ptr %8, align 4
  %10 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 1), align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %35

12:                                               ; preds = %7
  %13 = tail call ptr @llvm.thread.pointer() #15
  %14 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %15 = load i32, ptr %14, align 8
  %16 = lshr i32 %15, 5
  %17 = getelementptr i32, ptr @__cpu_online_mask, i32 %16
  %18 = load volatile i32, ptr %17, align 4
  %19 = and i32 %15, 31
  %20 = shl nuw i32 1, %19
  %21 = and i32 %20, %18
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %12
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !27
  %24 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 7), align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %26, %23
  %27 = phi ptr [ %31, %26 ], [ %24, %23 ]
  %28 = load volatile ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.tracepoint_func, ptr %27, i32 0, i32 1
  %30 = load ptr, ptr %29, align 4
  tail call void %28(ptr noundef %30, ptr noundef %0, ptr noundef %9) #15
  %31 = getelementptr %struct.tracepoint_func, ptr %27, i32 1
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %26

34:                                               ; preds = %26, %23
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !28
  br label %35

35:                                               ; preds = %34, %12, %7
  tail call void @_set_bit(i32 noundef 6, ptr noundef %3) #15
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !29
  %36 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 7
  %37 = load volatile ptr, ptr %36, align 8
  %38 = icmp eq ptr %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %35
  %40 = load volatile i32, ptr %3, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  tail call void @_raw_spin_lock(ptr noundef nonnull %37) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #15
  store i32 -512, ptr %2, align 4
  %44 = load ptr, ptr @rpciod_workqueue, align 4
  %45 = call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %44, ptr noundef nonnull %37, ptr noundef %0, ptr noundef nonnull @rpc_task_action_set_status, ptr noundef nonnull %2) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #15
  call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %46 = load i16, ptr %37, align 4
  %47 = add i16 %46, 1
  store i16 %47, ptr %37, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %48

48:                                               ; preds = %43, %39, %35, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_exit(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 1
  store i32 %1, ptr %3, align 4
  %4 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 4
  store ptr @rpc_exit_task, ptr %4, align 4
  %5 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 7
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 6
  %8 = load volatile i32, ptr %7, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  tail call void @_raw_spin_lock(ptr noundef %6) #15
  %12 = load ptr, ptr @rpciod_workqueue, align 4
  %13 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %12, ptr noundef %6, ptr noundef %0, ptr noundef null, ptr noundef null) #15
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %14 = load i16, ptr %6, align 4
  %15 = add i16 %14, 1
  store i16 %15, ptr %6, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %16

16:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_release_calldata(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.rpc_call_ops, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void %4(ptr noundef %1) #15
  br label %7

7:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_execute(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 20
  %3 = load i16, ptr %2, align 4
  %4 = and i16 %3, 1
  %5 = icmp eq i16 %4, 0
  %6 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 13
  %7 = load ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !30
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @rpc_task_set_debuginfo.rpc_pid) #15, !srcloc !31
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @rpc_task_set_debuginfo.rpc_pid, ptr nonnull @rpc_task_set_debuginfo.rpc_pid, i32 1, ptr nonnull elementtype(i32) @rpc_task_set_debuginfo.rpc_pid) #15, !srcloc !32
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !33
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !30
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %12) #15, !srcloc !31
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %12, ptr %12, i32 1, ptr elementtype(i32) %12) #15, !srcloc !32
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !33
  br label %14

14:                                               ; preds = %11, %9
  %15 = phi { i32, i32 } [ %10, %9 ], [ %13, %11 ]
  %16 = extractvalue { i32, i32 } %15, 0
  %17 = trunc i32 %16 to i16
  %18 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 22
  store i16 %17, ptr %18, align 8
  %19 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 2, ptr noundef %19) #15
  %20 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_begin, i32 0, i32 1), align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %45

22:                                               ; preds = %14
  %23 = tail call ptr @llvm.thread.pointer() #15
  %24 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = lshr i32 %25, 5
  %27 = getelementptr i32, ptr @__cpu_online_mask, i32 %26
  %28 = load volatile i32, ptr %27, align 4
  %29 = and i32 %25, 31
  %30 = shl nuw i32 1, %29
  %31 = and i32 %30, %28
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %22
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !34
  %34 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_begin, i32 0, i32 7), align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %36, %33
  %37 = phi ptr [ %41, %36 ], [ %34, %33 ]
  %38 = load volatile ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.tracepoint_func, ptr %37, i32 0, i32 1
  %40 = load ptr, ptr %39, align 4
  tail call void %38(ptr noundef %40, ptr noundef %0, ptr noundef null) #15
  %41 = getelementptr %struct.tracepoint_func, ptr %37, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %36

44:                                               ; preds = %36, %33
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !35
  br label %45

45:                                               ; preds = %44, %22, %14
  %46 = load ptr, ptr @rpciod_workqueue, align 4
  %47 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %19) #15
  %48 = icmp eq i32 %47, 0
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %19) #15
  br i1 %48, label %49, label %60

49:                                               ; preds = %45
  %50 = load i16, ptr %2, align 4
  %51 = and i16 %50, 1
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8
  store i32 -32, ptr %54, align 4
  %55 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 0, i32 1
  store volatile ptr %55, ptr %55, align 4
  %56 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 1
  store ptr %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 1, i32 1
  store ptr @rpc_async_schedule, ptr %57, align 4
  %58 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %46, ptr noundef %54) #15
  br label %60

59:                                               ; preds = %49
  tail call void @wake_up_bit(ptr noundef %19, i32 noundef 1) #15
  br label %60

60:                                               ; preds = %59, %53, %45
  br i1 %5, label %61, label %70

61:                                               ; preds = %60
  %62 = tail call ptr @llvm.thread.pointer() #15
  %63 = getelementptr inbounds %struct.task_struct, ptr %62, i32 0, i32 4
  %64 = load i32, ptr %63, align 4
  %65 = and i32 %64, 262144
  %66 = or i32 %64, 262144
  store i32 %66, ptr %63, align 4
  tail call fastcc void @__rpc_execute(ptr noundef %0)
  %67 = load i32, ptr %63, align 4
  %68 = and i32 %67, -262145
  %69 = or i32 %68, %65
  store i32 %69, ptr %63, align 4
  br label %70

70:                                               ; preds = %61, %60
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__rpc_execute(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.wait_bit_key, align 4
  %3 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 20
  %4 = load i16, ptr %3, align 4
  %5 = and i16 %4, 1
  %6 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 6
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp ne i32 %8, 0
  %10 = load i1, ptr @__rpc_execute.__already_done, align 1
  %11 = xor i1 %10, true
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %13, label %14, !prof !11

13:                                               ; preds = %1
  store i1 true, ptr @__rpc_execute.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 888, i32 noundef 9, ptr noundef null) #15
  br label %14

14:                                               ; preds = %13, %1
  %15 = load volatile i32, ptr %6, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %283

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 4
  %20 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 3
  %21 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 9
  %22 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 1
  %23 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 7
  %24 = icmp eq i16 %5, 0
  br label %25

25:                                               ; preds = %184, %18
  %26 = load ptr, ptr %20, align 8
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  store ptr null, ptr %20, align 8
  br label %32

29:                                               ; preds = %25
  %30 = load ptr, ptr %19, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %185, label %32

32:                                               ; preds = %29, %28
  %33 = phi ptr [ %26, %28 ], [ %30, %29 ]
  %34 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_run_action, i32 0, i32 1), align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %59

36:                                               ; preds = %32
  %37 = tail call ptr @llvm.thread.pointer() #15
  %38 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %39 = load i32, ptr %38, align 8
  %40 = lshr i32 %39, 5
  %41 = getelementptr i32, ptr @__cpu_online_mask, i32 %40
  %42 = load volatile i32, ptr %41, align 4
  %43 = and i32 %39, 31
  %44 = shl nuw i32 1, %43
  %45 = and i32 %44, %42
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %36
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !36
  %48 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_run_action, i32 0, i32 7), align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %50, %47
  %51 = phi ptr [ %55, %50 ], [ %48, %47 ]
  %52 = load volatile ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.tracepoint_func, ptr %51, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  tail call void %52(ptr noundef %54, ptr noundef %0, ptr noundef %33) #15
  %55 = getelementptr %struct.tracepoint_func, ptr %51, i32 1
  %56 = load ptr, ptr %55, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %50

58:                                               ; preds = %50, %47
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !37
  br label %59

59:                                               ; preds = %58, %36, %32
  tail call void %33(ptr noundef %0) #15
  %60 = load volatile i32, ptr %6, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = tail call i32 @__cond_resched() #15
  br label %184

65:                                               ; preds = %59
  %66 = load volatile i32, ptr %6, align 4
  %67 = and i32 %66, 64
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %65
  store i32 -512, ptr %21, align 4
  store i32 -512, ptr %22, align 4
  store ptr @rpc_exit_task, ptr %19, align 4
  %70 = load ptr, ptr %23, align 8
  %71 = load volatile i32, ptr %6, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  tail call void @_raw_spin_lock(ptr noundef %70) #15
  %75 = load ptr, ptr @rpciod_workqueue, align 4
  %76 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %75, ptr noundef %70, ptr noundef %0, ptr noundef null, ptr noundef null) #15
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %77 = load i16, ptr %70, align 4
  %78 = add i16 %77, 1
  store i16 %78, ptr %70, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %79

79:                                               ; preds = %74, %69, %65
  %80 = load ptr, ptr %23, align 8
  tail call void @_raw_spin_lock(ptr noundef %80) #15
  %81 = load volatile i32, ptr %6, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %85 = load i16, ptr %80, align 4
  %86 = add i16 %85, 1
  store i16 %86, ptr %80, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %184

87:                                               ; preds = %79
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %6) #15
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %88 = load i16, ptr %80, align 4
  %89 = add i16 %88, 1
  store i16 %89, ptr %80, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br i1 %24, label %90, label %283

90:                                               ; preds = %87
  %91 = load ptr, ptr %19, align 4
  %92 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sync_sleep, i32 0, i32 1), align 4
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %117

94:                                               ; preds = %90
  %95 = tail call ptr @llvm.thread.pointer() #15
  %96 = getelementptr inbounds %struct.thread_info, ptr %95, i32 0, i32 2
  %97 = load i32, ptr %96, align 8
  %98 = lshr i32 %97, 5
  %99 = getelementptr i32, ptr @__cpu_online_mask, i32 %98
  %100 = load volatile i32, ptr %99, align 4
  %101 = and i32 %97, 31
  %102 = shl nuw i32 1, %101
  %103 = and i32 %102, %100
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %117, label %105

105:                                              ; preds = %94
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !38
  %106 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sync_sleep, i32 0, i32 7), align 4
  %107 = icmp eq ptr %106, null
  br i1 %107, label %116, label %108

108:                                              ; preds = %108, %105
  %109 = phi ptr [ %113, %108 ], [ %106, %105 ]
  %110 = load volatile ptr, ptr %109, align 4
  %111 = getelementptr inbounds %struct.tracepoint_func, ptr %109, i32 0, i32 1
  %112 = load ptr, ptr %111, align 4
  tail call void %110(ptr noundef %112, ptr noundef %0, ptr noundef %91) #15
  %113 = getelementptr %struct.tracepoint_func, ptr %109, i32 1
  %114 = load ptr, ptr %113, align 4
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %108

116:                                              ; preds = %108, %105
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !39
  br label %117

117:                                              ; preds = %116, %94, %90
  %118 = tail call i32 @out_of_line_wait_on_bit(ptr noundef %6, i32 noundef 1, ptr noundef nonnull @rpc_wait_bit_killable, i32 noundef 258) #15
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %120, label %157

120:                                              ; preds = %117
  %121 = load ptr, ptr %19, align 4
  %122 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 1), align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %147

124:                                              ; preds = %120
  %125 = tail call ptr @llvm.thread.pointer() #15
  %126 = getelementptr inbounds %struct.thread_info, ptr %125, i32 0, i32 2
  %127 = load i32, ptr %126, align 8
  %128 = lshr i32 %127, 5
  %129 = getelementptr i32, ptr @__cpu_online_mask, i32 %128
  %130 = load volatile i32, ptr %129, align 4
  %131 = and i32 %127, 31
  %132 = shl nuw i32 1, %131
  %133 = and i32 %132, %130
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %147, label %135

135:                                              ; preds = %124
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !27
  %136 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 7), align 4
  %137 = icmp eq ptr %136, null
  br i1 %137, label %146, label %138

138:                                              ; preds = %138, %135
  %139 = phi ptr [ %143, %138 ], [ %136, %135 ]
  %140 = load volatile ptr, ptr %139, align 4
  %141 = getelementptr inbounds %struct.tracepoint_func, ptr %139, i32 0, i32 1
  %142 = load ptr, ptr %141, align 4
  tail call void %140(ptr noundef %142, ptr noundef %0, ptr noundef %121) #15
  %143 = getelementptr %struct.tracepoint_func, ptr %139, i32 1
  %144 = load ptr, ptr %143, align 4
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %138

146:                                              ; preds = %138, %135
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !28
  br label %147

147:                                              ; preds = %146, %124, %120
  tail call void @_set_bit(i32 noundef 6, ptr noundef %6) #15
  store i32 -512, ptr %21, align 4
  store i32 -512, ptr %22, align 4
  store ptr @rpc_exit_task, ptr %19, align 4
  %148 = load ptr, ptr %23, align 8
  %149 = load volatile i32, ptr %6, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %147
  tail call void @_raw_spin_lock(ptr noundef %148) #15
  %153 = load ptr, ptr @rpciod_workqueue, align 4
  %154 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %153, ptr noundef %148, ptr noundef %0, ptr noundef null, ptr noundef null) #15
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %155 = load i16, ptr %148, align 4
  %156 = add i16 %155, 1
  store i16 %156, ptr %148, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  br label %157

157:                                              ; preds = %152, %147, %117
  %158 = load ptr, ptr %19, align 4
  %159 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sync_wake, i32 0, i32 1), align 4
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %184

161:                                              ; preds = %157
  %162 = tail call ptr @llvm.thread.pointer() #15
  %163 = getelementptr inbounds %struct.thread_info, ptr %162, i32 0, i32 2
  %164 = load i32, ptr %163, align 8
  %165 = lshr i32 %164, 5
  %166 = getelementptr i32, ptr @__cpu_online_mask, i32 %165
  %167 = load volatile i32, ptr %166, align 4
  %168 = and i32 %164, 31
  %169 = shl nuw i32 1, %168
  %170 = and i32 %169, %167
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %184, label %172

172:                                              ; preds = %161
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !40
  %173 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sync_wake, i32 0, i32 7), align 4
  %174 = icmp eq ptr %173, null
  br i1 %174, label %183, label %175

175:                                              ; preds = %175, %172
  %176 = phi ptr [ %180, %175 ], [ %173, %172 ]
  %177 = load volatile ptr, ptr %176, align 4
  %178 = getelementptr inbounds %struct.tracepoint_func, ptr %176, i32 0, i32 1
  %179 = load ptr, ptr %178, align 4
  tail call void %177(ptr noundef %179, ptr noundef %0, ptr noundef %158) #15
  %180 = getelementptr %struct.tracepoint_func, ptr %176, i32 1
  %181 = load ptr, ptr %180, align 4
  %182 = icmp eq ptr %181, null
  br i1 %182, label %183, label %175

183:                                              ; preds = %175, %172
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !41
  br label %184

184:                                              ; preds = %183, %161, %157, %84, %63
  br label %25

185:                                              ; preds = %29
  %186 = load volatile i32, ptr %6, align 4
  %187 = and i32 %186, 2
  %188 = icmp ne i32 %187, 0
  %189 = load i1, ptr @rpc_release_task.__already_done, align 1
  %190 = xor i1 %189, true
  %191 = select i1 %188, i1 %190, i1 false
  br i1 %191, label %192, label %193, !prof !11

192:                                              ; preds = %185
  store i1 true, ptr @rpc_release_task.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 1200, i32 noundef 9, ptr noundef null) #15
  br label %193

193:                                              ; preds = %192, %185
  tail call void @xprt_release(ptr noundef %0) #15
  %194 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 10, i32 3
  %195 = load ptr, ptr %194, align 4
  %196 = icmp eq ptr %195, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %193
  %198 = load i16, ptr %3, align 4
  %199 = icmp sgt i16 %198, -1
  br i1 %199, label %200, label %205

200:                                              ; preds = %197
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !42
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %195) #15, !srcloc !31
  %201 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %195, ptr nonnull %195, i32 1, ptr nonnull elementtype(i32) %195) #15, !srcloc !43
  %202 = extractvalue { i32, i32 } %201, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !44
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %200
  tail call void @__put_cred(ptr noundef nonnull %195) #15
  br label %205

205:                                              ; preds = %204, %200, %197
  store ptr null, ptr %194, align 4
  br label %206

206:                                              ; preds = %205, %193
  tail call void @rpc_task_release_client(ptr noundef %0) #15
  %207 = load volatile i32, ptr %0, align 4
  %208 = load i16, ptr %3, align 4
  %209 = and i16 %208, 1
  %210 = sub nuw nsw i16 2, %209
  %211 = zext i16 %210 to i32
  %212 = icmp eq i32 %207, %211
  br i1 %212, label %252, label %213

213:                                              ; preds = %206
  %214 = tail call ptr @bit_waitqueue(ptr noundef %6, i32 noundef 2) #15
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %2) #15
  store ptr %6, ptr %2, align 4
  %215 = getelementptr inbounds %struct.wait_bit_key, ptr %2, i32 0, i32 1
  store i32 2, ptr %215, align 4
  %216 = getelementptr inbounds %struct.wait_bit_key, ptr %2, i32 0, i32 2
  store i32 0, ptr %216, align 4
  %217 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_complete, i32 0, i32 1), align 4
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %219, label %242

219:                                              ; preds = %213
  %220 = tail call ptr @llvm.thread.pointer() #15
  %221 = getelementptr inbounds %struct.thread_info, ptr %220, i32 0, i32 2
  %222 = load i32, ptr %221, align 8
  %223 = lshr i32 %222, 5
  %224 = getelementptr i32, ptr @__cpu_online_mask, i32 %223
  %225 = load volatile i32, ptr %224, align 4
  %226 = and i32 %222, 31
  %227 = shl nuw i32 1, %226
  %228 = and i32 %227, %225
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %242, label %230

230:                                              ; preds = %219
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !45
  %231 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_complete, i32 0, i32 7), align 4
  %232 = icmp eq ptr %231, null
  br i1 %232, label %241, label %233

233:                                              ; preds = %233, %230
  %234 = phi ptr [ %238, %233 ], [ %231, %230 ]
  %235 = load volatile ptr, ptr %234, align 4
  %236 = getelementptr inbounds %struct.tracepoint_func, ptr %234, i32 0, i32 1
  %237 = load ptr, ptr %236, align 4
  tail call void %235(ptr noundef %237, ptr noundef %0, ptr noundef null) #15
  %238 = getelementptr %struct.tracepoint_func, ptr %234, i32 1
  %239 = load ptr, ptr %238, align 4
  %240 = icmp eq ptr %239, null
  br i1 %240, label %241, label %233

241:                                              ; preds = %233, %230
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !46
  br label %242

242:                                              ; preds = %241, %219, %213
  %243 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %214) #15
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %6) #15
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !42
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #15, !srcloc !31
  %244 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #15, !srcloc !43
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !44
  %245 = getelementptr inbounds %struct.wait_queue_head, ptr %214, i32 0, i32 1
  %246 = load volatile ptr, ptr %245, align 4
  %247 = icmp eq ptr %246, %245
  br i1 %247, label %249, label %248

248:                                              ; preds = %242
  call void @__wake_up_locked_key(ptr noundef %214, i32 noundef 3, ptr noundef nonnull %2) #15
  br label %249

249:                                              ; preds = %248, %242
  %250 = extractvalue { i32, i32 } %244, 0
  %251 = icmp eq i32 %250, 0
  call void @_raw_spin_unlock_irqrestore(ptr noundef %214, i32 noundef %243) #15
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %2) #15
  br i1 %251, label %256, label %283

252:                                              ; preds = %206
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !42
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #15, !srcloc !31
  %253 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #15, !srcloc !43
  %254 = extractvalue { i32, i32 } %253, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !44
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %283

256:                                              ; preds = %252, %249
  %257 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 17
  %258 = load ptr, ptr %257, align 8
  %259 = icmp eq ptr %258, null
  br i1 %259, label %266, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8
  store i32 -32, ptr %261, align 4
  %262 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 0, i32 1
  store volatile ptr %262, ptr %262, align 4
  %263 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 1
  store ptr %262, ptr %263, align 4
  %264 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 1, i32 1
  store ptr @rpc_async_release, ptr %264, align 4
  %265 = call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef nonnull %258, ptr noundef %261) #15
  br label %283

266:                                              ; preds = %256
  %267 = load i16, ptr %3, align 4
  %268 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 15
  %269 = load ptr, ptr %268, align 8
  call void @put_rpccred(ptr noundef %269) #15
  %270 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 12
  %271 = load ptr, ptr %270, align 4
  %272 = getelementptr inbounds %struct.rpc_call_ops, ptr %271, i32 0, i32 3
  %273 = load ptr, ptr %272, align 4
  %274 = icmp eq ptr %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %266
  %276 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 11
  %277 = load ptr, ptr %276, align 8
  call void %273(ptr noundef %277) #15
  br label %278

278:                                              ; preds = %275, %266
  %279 = and i16 %267, 128
  %280 = icmp eq i16 %279, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %278
  %282 = load ptr, ptr @rpc_task_mempool, align 4
  call void @mempool_free(ptr noundef %0, ptr noundef %282) #15
  br label %283

283:                                              ; preds = %281, %278, %260, %252, %249, %87, %14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @rpc_malloc(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 16
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 15
  %5 = load i32, ptr %4, align 4
  %6 = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 17
  %7 = load i32, ptr %6, align 4
  %8 = add i32 %7, %5
  %9 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 20
  %10 = load i16, ptr %9, align 4
  %11 = and i16 %10, 2
  %12 = icmp eq i16 %11, 0
  %13 = select i1 %12, i32 3136, i32 141312
  %14 = add i32 %8, 4
  %15 = icmp ult i32 %14, 2049
  br i1 %15, label %16, label %19

16:                                               ; preds = %1
  %17 = load ptr, ptr @rpc_buffer_mempool, align 4
  %18 = tail call noalias ptr @mempool_alloc(ptr noundef %17, i32 noundef %13) #15
  br label %21

19:                                               ; preds = %1
  %20 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %14, i32 noundef %13) #18
  br label %21

21:                                               ; preds = %19, %16
  %22 = phi ptr [ %18, %16 ], [ %20, %19 ]
  %23 = icmp eq ptr %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  store i32 %14, ptr %22, align 4
  %25 = getelementptr inbounds %struct.rpc_buffer, ptr %22, i32 0, i32 1
  %26 = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 14
  store ptr %25, ptr %26, align 8
  %27 = load i32, ptr %4, align 4
  %28 = getelementptr i8, ptr %25, i32 %27
  %29 = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 16
  store ptr %28, ptr %29, align 8
  br label %30

30:                                               ; preds = %24, %21
  %31 = phi i32 [ 0, %24 ], [ -12, %21 ]
  ret i32 %31
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @mempool_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_free(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 16
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 14
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %5, i32 -4
  %7 = load i32, ptr %6, align 4
  %8 = icmp ult i32 %7, 2049
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = load ptr, ptr @rpc_buffer_mempool, align 4
  tail call void @mempool_free(ptr noundef %6, ptr noundef %10) #15
  br label %12

11:                                               ; preds = %1
  tail call void @kfree(ptr noundef %6) #15
  br label %12

12:                                               ; preds = %11, %9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @rpc_new_task(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr %0, align 4
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = load ptr, ptr @rpc_task_mempool, align 4
  %6 = tail call noalias ptr @mempool_alloc(ptr noundef %5, i32 noundef 3136) #15
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi ptr [ %6, %4 ], [ %2, %1 ]
  %9 = phi i16 [ 128, %4 ], [ 0, %1 ]
  tail call void @llvm.memset.p0.i32(ptr noundef align 8 dereferenceable(136) %8, i8 0, i32 136, i1 false) #15
  store volatile i32 1, ptr %8, align 4
  %10 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 8
  %11 = load i16, ptr %10, align 4
  %12 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 20
  store i16 %11, ptr %12, align 4
  %13 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 5
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 12
  store ptr %14, ptr %15, align 4
  %16 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 6
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 11
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 2
  store volatile ptr %19, ptr %19, align 4
  %20 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 2, i32 1
  store ptr %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 9
  %22 = load i8, ptr %21, align 2
  %23 = add i8 %22, 1
  %24 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 23
  %25 = and i8 %23, 3
  store i8 %25, ptr %24, align 2
  %26 = tail call ptr @llvm.thread.pointer() #15
  %27 = getelementptr inbounds %struct.task_struct, ptr %26, i32 0, i32 53
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 19
  store i32 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 7
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 17
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 2
  %36 = load ptr, ptr %35, align 4
  %37 = tail call ptr @xprt_get(ptr noundef %36) #15
  %38 = tail call ptr @rpc_task_get_xprt(ptr noundef %34, ptr noundef %37) #15
  %39 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 14
  store ptr %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.rpc_task_setup, ptr %0, i32 0, i32 3
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %67, label %43

43:                                               ; preds = %7
  %44 = getelementptr inbounds %struct.rpc_cred, ptr %41, i32 0, i32 7
  %45 = load volatile i32, ptr %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %57, %43
  %48 = phi i32 [ %55, %57 ], [ %45, %43 ]
  %49 = add i32 %48, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %44) #15, !srcloc !31
  br label %50

50:                                               ; preds = %50, %47
  %51 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %44, ptr %44, i32 %48, i32 %49, ptr elementtype(i32) %44) #15, !srcloc !47
  %52 = extractvalue { i32, i32 } %51, 0
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %50

54:                                               ; preds = %50
  %55 = extractvalue { i32, i32 } %51, 1
  %56 = icmp eq i32 %55, %48
  br i1 %56, label %59, label %57, !prof !10

57:                                               ; preds = %54
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %59, label %47

59:                                               ; preds = %57, %54, %43
  %60 = phi i32 [ 0, %43 ], [ 0, %57 ], [ %48, %54 ]
  %61 = add i32 %60, 1
  %62 = or i32 %61, %60
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %65, label %64, !prof !10

64:                                               ; preds = %59
  tail call void @refcount_warn_saturate(ptr noundef %44, i32 noundef 0) #15
  br label %65

65:                                               ; preds = %64, %59
  %66 = icmp eq i32 %60, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %65, %7
  br label %68

68:                                               ; preds = %67, %65
  %69 = phi ptr [ null, %67 ], [ %41, %65 ]
  %70 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 15
  store ptr %69, ptr %70, align 8
  %71 = load ptr, ptr %15, align 4
  %72 = load ptr, ptr %71, align 4
  %73 = icmp eq ptr %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 4
  store ptr @rpc_prepare_task, ptr %75, align 4
  br label %76

76:                                               ; preds = %74, %68
  %77 = load i8, ptr %24, align 2
  %78 = and i8 %77, 3
  %79 = or i8 %78, -88
  store i8 %79, ptr %24, align 2
  %80 = tail call i64 @ktime_get() #15
  %81 = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 18
  store i64 %80, ptr %81, align 8
  %82 = load i16, ptr %12, align 4
  %83 = or i16 %82, %9
  store i16 %83, ptr %12, align 4
  ret ptr %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_put_task(ptr noundef %0) #0 {
  tail call fastcc void @rpc_do_put_task(ptr noundef %0, ptr noundef null)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rpc_do_put_task(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !42
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #15, !srcloc !31
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #15, !srcloc !43
  %4 = extractvalue { i32, i32 } %3, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !44
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %46

6:                                                ; preds = %2
  tail call void @xprt_release(ptr noundef %0) #15
  %7 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 10, i32 3
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 20
  %12 = load i16, ptr %11, align 4
  %13 = icmp sgt i16 %12, -1
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !42
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %8) #15, !srcloc !31
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %8, ptr nonnull %8, i32 1, ptr nonnull elementtype(i32) %8) #15, !srcloc !43
  %16 = extractvalue { i32, i32 } %15, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !44
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @__put_cred(ptr noundef nonnull %8) #15
  br label %19

19:                                               ; preds = %18, %14, %10
  store ptr null, ptr %7, align 4
  br label %20

20:                                               ; preds = %19, %6
  tail call void @rpc_task_release_client(ptr noundef %0) #15
  %21 = icmp eq ptr %1, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8
  store i32 -32, ptr %23, align 4
  %24 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 0, i32 1
  store volatile ptr %24, ptr %24, align 4
  %25 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 1
  store ptr %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 8, i32 0, i32 1, i32 1
  store ptr @rpc_async_release, ptr %26, align 4
  %27 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef nonnull %1, ptr noundef %23) #15
  br label %46

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 20
  %30 = load i16, ptr %29, align 4
  %31 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 15
  %32 = load ptr, ptr %31, align 8
  tail call void @put_rpccred(ptr noundef %32) #15
  %33 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 12
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.rpc_call_ops, ptr %34, i32 0, i32 3
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 11
  %40 = load ptr, ptr %39, align 8
  tail call void %36(ptr noundef %40) #15
  br label %41

41:                                               ; preds = %38, %28
  %42 = and i16 %30, 128
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = load ptr, ptr @rpc_task_mempool, align 4
  tail call void @mempool_free(ptr noundef %0, ptr noundef %45) #15
  br label %46

46:                                               ; preds = %44, %41, %22, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_put_task_async(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 17
  %3 = load ptr, ptr %2, align 8
  tail call fastcc void @rpc_do_put_task(ptr noundef %0, ptr noundef %3)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @rpciod_up() local_unnamed_addr #0 {
  %1 = tail call zeroext i1 @try_module_get(ptr noundef null) #15
  %2 = select i1 %1, i32 0, i32 -22
  ret i32 %2
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpciod_down() local_unnamed_addr #0 {
  tail call void @module_put(ptr noundef null) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rpc_destroy_mempool() local_unnamed_addr #0 {
  %1 = load ptr, ptr @rpciod_workqueue, align 4
  %2 = icmp eq ptr %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  store ptr null, ptr @rpciod_workqueue, align 4
  tail call void @destroy_workqueue(ptr noundef nonnull %1) #15
  %4 = load ptr, ptr @xprtiod_workqueue, align 4
  store ptr null, ptr @xprtiod_workqueue, align 4
  tail call void @destroy_workqueue(ptr noundef %4) #15
  br label %5

5:                                                ; preds = %3, %0
  %6 = load ptr, ptr @rpc_buffer_mempool, align 4
  tail call void @mempool_destroy(ptr noundef %6) #15
  %7 = load ptr, ptr @rpc_task_mempool, align 4
  tail call void @mempool_destroy(ptr noundef %7) #15
  %8 = load ptr, ptr @rpc_task_slabp, align 4
  tail call void @kmem_cache_destroy(ptr noundef %8) #15
  %9 = load ptr, ptr @rpc_buffer_slabp, align 4
  tail call void @kmem_cache_destroy(ptr noundef %9) #15
  %10 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @rpc_init_mempool() local_unnamed_addr #0 {
  store i32 0, ptr @delay_queue, align 4
  store volatile ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 0), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 0), align 4
  store ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 0), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 0, i32 1), align 4
  store volatile ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 1), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 1), align 4
  store ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 1), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 1, i32 1), align 4
  store volatile ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 2), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 2), align 4
  store ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 2), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 2, i32 1), align 4
  store volatile ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 3), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 3), align 4
  store ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 3), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 1, i32 3, i32 1), align 4
  store i8 0, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 2), align 4
  %1 = load i8, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 3), align 1
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  store i8 0, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 3), align 1
  store i8 1, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 4), align 2
  br label %4

4:                                                ; preds = %3, %0
  store i16 0, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 5), align 4
  store i32 0, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 1), align 4
  store i32 -32, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2), align 4
  store volatile ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2, i32 0, i32 1), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2, i32 0, i32 1), align 4
  store ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2, i32 0, i32 1), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2, i32 0, i32 1, i32 1), align 4
  store ptr @__rpc_queue_timer_fn, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2, i32 0, i32 2), align 4
  tail call void @init_timer_key(ptr noundef getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2, i32 1), ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #15
  store volatile ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6), align 4
  store ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6), ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 0, i32 1), align 4
  store ptr @.str.55, ptr getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 7), align 4
  %5 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.313, i32 noundef 10, i32 noundef 0) #15
  %6 = icmp eq ptr %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %4
  store ptr %5, ptr @rpciod_workqueue, align 4
  %8 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.314, i32 noundef 10, i32 noundef 0) #15
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = load ptr, ptr @rpciod_workqueue, align 4
  store ptr null, ptr @rpciod_workqueue, align 4
  tail call void @destroy_workqueue(ptr noundef %11) #15
  br label %26

12:                                               ; preds = %7
  store ptr %8, ptr @xprtiod_workqueue, align 4
  %13 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.56, i32 noundef 136, i32 noundef 0, i32 noundef 8192, ptr noundef null) #15
  store ptr %13, ptr @rpc_task_slabp, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.57, i32 noundef 2048, i32 noundef 0, i32 noundef 8192, ptr noundef null) #15
  store ptr %16, ptr @rpc_buffer_slabp, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %15
  %19 = load ptr, ptr @rpc_task_slabp, align 4
  %20 = tail call ptr @mempool_create(i32 noundef 8, ptr noundef nonnull @mempool_alloc_slab, ptr noundef nonnull @mempool_free_slab, ptr noundef %19) #15
  store ptr %20, ptr @rpc_task_mempool, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = load ptr, ptr @rpc_buffer_slabp, align 4
  %24 = tail call ptr @mempool_create(i32 noundef 8, ptr noundef nonnull @mempool_alloc_slab, ptr noundef nonnull @mempool_free_slab, ptr noundef %23) #15
  store ptr %24, ptr @rpc_buffer_mempool, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %18, %15, %12, %10, %4
  tail call void @rpc_destroy_mempool()
  br label %27

27:                                               ; preds = %26, %22
  %28 = phi i32 [ -12, %26 ], [ 0, %22 ]
  ret i32 %28
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xdr_buf_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %29

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 3
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 8
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 7
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 5
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %5, i32 0, i32 9
  %27 = load i32, ptr %26, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.70, i32 noundef %11, i32 noundef %13, ptr noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, ptr noundef %23, i32 noundef %25, i32 noundef %27) #15
  %28 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %29

29:                                               ; preds = %8, %3
  %30 = phi i32 [ %28, %8 ], [ %6, %3 ]
  ret i32 %30
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_class, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.71, i32 noundef %11) #15
  %12 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %13

13:                                               ; preds = %8, %3
  %14 = phi i32 [ %12, %8 ], [ %6, %3 ]
  ret i32 %14
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #7

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_new(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %29

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = and i32 %13, 65535
  %15 = getelementptr i8, ptr %5, i32 %14
  %16 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 65535
  %19 = getelementptr i8, ptr %5, i32 %18
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %5, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, 65535
  %23 = getelementptr i8, ptr %5, i32 %22
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %5, i32 0, i32 5
  %25 = load i32, ptr %24, align 4
  %26 = and i32 %25, 65535
  %27 = getelementptr i8, ptr %5, i32 %26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.78, i32 noundef %11, ptr noundef %15, ptr noundef %19, ptr noundef %23, ptr noundef %27) #15
  %28 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %29

29:                                               ; preds = %8, %3
  %30 = phi i32 [ %28, %8 ], [ %6, %3 ]
  ret i32 %30
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_new_err(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %5, i32 0, i32 2
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %5, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.81, ptr noundef %13, ptr noundef %17, i32 noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_clone_err(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.82, i32 noundef %11, i32 noundef %13) #15
  %14 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %15

15:                                               ; preds = %8, %3
  %16 = phi i32 [ %14, %8 ], [ %6, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_task_status(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.84, i32 noundef %11, i32 noundef %13, i32 noundef %15) #15
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_proc_name(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_request(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %29

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %5, i32 0, i32 5
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %5, i32 0, i32 6
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, 65535
  %23 = getelementptr i8, ptr %5, i32 %22
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %5, i32 0, i32 4
  %25 = load i8, ptr %24, align 4, !range !48
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, ptr @.str.92, ptr @.str.91
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.90, i32 noundef %11, i32 noundef %13, ptr noundef %17, i32 noundef %19, ptr noundef %23, ptr noundef nonnull %27) #15
  %28 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %29

29:                                               ; preds = %8, %3
  %30 = phi i32 [ %28, %8 ], [ %6, %3 ]
  ret i32 %30
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_task_running(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %5, i32 0, i32 2
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %5, i32 0, i32 6
  %16 = load i16, ptr %15, align 4
  %17 = zext i16 %16 to i32
  %18 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %17, ptr noundef nonnull @trace_raw_output_rpc_task_running.__flags) #15
  %19 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %20, ptr noundef nonnull @trace_raw_output_rpc_task_running.__flags.115) #15
  %22 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %5, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %5, i32 0, i32 3
  %25 = load ptr, ptr %24, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.98, i32 noundef %12, i32 noundef %14, ptr noundef %18, ptr noundef %21, i32 noundef %23, ptr noundef %25) #15
  %26 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_task_queued(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %5, i32 0, i32 2
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %5, i32 0, i32 6
  %16 = load i16, ptr %15, align 4
  %17 = zext i16 %16 to i32
  %18 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %17, ptr noundef nonnull @trace_raw_output_rpc_task_queued.__flags) #15
  %19 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %20, ptr noundef nonnull @trace_raw_output_rpc_task_queued.__flags.127) #15
  %22 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %5, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %5, i32 0, i32 3
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %5, i32 0, i32 7
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 65535
  %29 = getelementptr i8, ptr %5, i32 %28
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.126, i32 noundef %12, i32 noundef %14, ptr noundef %18, ptr noundef %21, i32 noundef %23, i32 noundef %25, ptr noundef %29) #15
  %30 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %31

31:                                               ; preds = %8, %3
  %32 = phi i32 [ %30, %8 ], [ %6, %3 ]
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_failure(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.128, i32 noundef %11, i32 noundef %13) #15
  %14 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %15

15:                                               ; preds = %8, %3
  %16 = phi i32 [ %14, %8 ], [ %6, %3 ]
  ret i32 %16
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #9

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_reply_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %5, i32 0, i32 7
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %5, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, 65535
  %23 = getelementptr i8, ptr %5, i32 %22
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %5, i32 0, i32 5
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %5, i32 0, i32 6
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 65535
  %29 = getelementptr i8, ptr %5, i32 %28
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.132, i32 noundef %11, i32 noundef %13, ptr noundef %17, i32 noundef %19, ptr noundef %23, i32 noundef %25, ptr noundef %29) #15
  %30 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %31

31:                                               ; preds = %8, %3
  %32 = phi i32 [ %30, %8 ], [ %6, %3 ]
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_buf_alloc(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %5, i32 0, i32 5
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.135, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_call_rpcerror(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.138, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17) #15
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_stats_latency(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %33

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 5
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 65535
  %19 = getelementptr i8, ptr %5, i32 %18
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 65535
  %25 = getelementptr i8, ptr %5, i32 %24
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 7
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 8
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %5, i32 0, i32 9
  %31 = load i32, ptr %30, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.142, i32 noundef %11, i32 noundef %13, i32 noundef %15, ptr noundef %19, i32 noundef %21, ptr noundef %25, i32 noundef %27, i32 noundef %29, i32 noundef %31) #15
  %32 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %33

33:                                               ; preds = %8, %3
  %34 = phi i32 [ %32, %8 ], [ %6, %3 ]
  ret i32 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xdr_overflow(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %43

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 13
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 14
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, 65535
  %23 = getelementptr i8, ptr %5, i32 %22
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 4
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 6
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 5
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 7
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 8
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 11
  %35 = load i32, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 9
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 10
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %5, i32 0, i32 12
  %41 = load i32, ptr %40, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.148, i32 noundef %11, i32 noundef %13, ptr noundef %17, i32 noundef %19, ptr noundef %23, i32 noundef %25, ptr noundef %27, ptr noundef %29, ptr noundef %31, i32 noundef %33, i32 noundef %35, ptr noundef %37, i32 noundef %39, i32 noundef %41) #15
  %42 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %43

43:                                               ; preds = %8, %3
  %44 = phi i32 [ %42, %8 ], [ %6, %3 ]
  ret i32 %44
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xdr_alignment(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %41

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 12
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 13
  %21 = load i32, ptr %20, align 4
  %22 = and i32 %21, 65535
  %23 = getelementptr i8, ptr %5, i32 %22
  %24 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 4
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 5
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 6
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 7
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 10
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 9
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %5, i32 0, i32 11
  %39 = load i32, ptr %38, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.151, i32 noundef %11, i32 noundef %13, ptr noundef %17, i32 noundef %19, ptr noundef %23, i32 noundef %25, i32 noundef %27, ptr noundef %29, i32 noundef %31, i32 noundef %33, ptr noundef %35, i32 noundef %37, i32 noundef %39) #15
  %40 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %41

41:                                               ; preds = %8, %3
  %42 = phi i32 [ %40, %8 ], [ %6, %3 ]
  ret i32 %42
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #10

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_socket_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %5, i32 0, i32 3
  %12 = load i64, ptr %11, align 8
  %13 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %5, i32 0, i32 4
  %14 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %5, i32 0, i32 5
  %15 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 8
  %17 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %16, ptr noundef nonnull @trace_raw_output_xs_socket_event.symbols) #15
  %18 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %5, i32 0, i32 2
  %19 = load i32, ptr %18, align 4
  %20 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %19, ptr noundef nonnull @trace_raw_output_xs_socket_event.symbols.165) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.159, i64 noundef %12, ptr noundef %13, ptr noundef %14, i32 noundef %16, ptr noundef %17, i32 noundef %19, ptr noundef %20) #15
  %21 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %22

22:                                               ; preds = %8, %3
  %23 = phi i32 [ %21, %8 ], [ %6, %3 ]
  ret i32 %23
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_socket_event_done(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %5, i32 0, i32 4
  %14 = load i64, ptr %13, align 8
  %15 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %5, i32 0, i32 5
  %16 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %5, i32 0, i32 6
  %17 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %5, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %18, ptr noundef nonnull @trace_raw_output_xs_socket_event_done.symbols) #15
  %20 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %5, i32 0, i32 3
  %21 = load i32, ptr %20, align 8
  %22 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %21, ptr noundef nonnull @trace_raw_output_xs_socket_event_done.symbols.178) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.177, i32 noundef %12, i64 noundef %14, ptr noundef %15, ptr noundef %16, i32 noundef %18, ptr noundef %19, i32 noundef %21, ptr noundef %22) #15
  %23 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %24

24:                                               ; preds = %8, %3
  %25 = phi i32 [ %23, %8 ], [ %6, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_socket_nospace(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.181, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17) #15
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xprt_lifetime_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %5, i32 0, i32 2
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %5, i32 0, i32 3
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 65535
  %18 = getelementptr i8, ptr %5, i32 %17
  %19 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %5, i32 0, i32 1
  %20 = load i32, ptr %19, align 4
  %21 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %20, ptr noundef nonnull @trace_raw_output_rpc_xprt_lifetime_class.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.183, ptr noundef %14, ptr noundef %18, ptr noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xprt_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %5, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %5, i32 0, i32 4
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %5, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %5, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.193, ptr noundef %13, ptr noundef %17, i32 noundef %19, i32 noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_transmit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %5, i32 0, i32 5
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.195, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_retransmit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 7
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 65535
  %19 = getelementptr i8, ptr %5, i32 %18
  %20 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 8
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 65535
  %25 = getelementptr i8, ptr %5, i32 %24
  %26 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 4
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %5, i32 0, i32 6
  %29 = load i32, ptr %28, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.197, i32 noundef %11, i32 noundef %13, i32 noundef %15, ptr noundef %19, i32 noundef %21, ptr noundef %25, i32 noundef %27, i32 noundef %29) #15
  %30 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %31

31:                                               ; preds = %8, %3
  %32 = phi i32 [ %30, %8 ], [ %6, %3 ]
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_ping(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %5, i32 0, i32 2
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %5, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.198, ptr noundef %13, ptr noundef %17, i32 noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_writelock_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.200, i32 noundef %11, i32 noundef %13, i32 noundef %15) #15
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_cong_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %5, i32 0, i32 5
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %5, i32 0, i32 6
  %21 = load i8, ptr %20, align 4, !range !48
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, ptr @.str.92, ptr @.str.205
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.204, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, ptr noundef nonnull %23) #15
  %24 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %25

25:                                               ; preds = %8, %3
  %26 = phi i32 [ %24, %8 ], [ %6, %3 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_reserve(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.206, i32 noundef %11, i32 noundef %13, i32 noundef %15) #15
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_stream_read_data(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %5, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %5, i32 0, i32 4
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %5, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %5, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.209, ptr noundef %13, ptr noundef %17, i32 noundef %19, i32 noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_stream_read_request(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %5, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %5, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %5, i32 0, i32 6
  %25 = load i32, ptr %24, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.211, ptr noundef %13, ptr noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25) #15
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_getport(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %5, i32 0, i32 7
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %5, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %5, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %5, i32 0, i32 6
  %25 = load i32, ptr %24, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.214, i32 noundef %11, i32 noundef %13, ptr noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25) #15
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_setport(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %5, i32 0, i32 4
  %17 = load i16, ptr %16, align 4
  %18 = zext i16 %17 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.215, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %18) #15
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_pmap_register(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.216, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17) #15
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_register(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.218, i32 noundef %11, i32 noundef %13, ptr noundef %17, ptr noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_unregister(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.219, i32 noundef %11, i32 noundef %13, ptr noundef %17) #15
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xdr_msg_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %5, i32 0, i32 6
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %5, i32 0, i32 4
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %5, i32 0, i32 7
  %23 = load i32, ptr %22, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.220, i32 noundef %11, ptr noundef %13, i32 noundef %15, i32 noundef %17, ptr noundef %19, i32 noundef %21, i32 noundef %23) #15
  %24 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %25

25:                                               ; preds = %8, %3
  %26 = phi i32 [ %24, %8 ], [ %6, %3 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xdr_buf_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 7
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 6
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 4
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %5, i32 0, i32 8
  %25 = load i32, ptr %24, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.221, i32 noundef %11, ptr noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, ptr noundef %21, i32 noundef %23, i32 noundef %25) #15
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_authenticate(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %5, i32 0, i32 2
  %14 = load i32, ptr %13, align 4
  %15 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %14, ptr noundef nonnull @trace_raw_output_svc_authenticate.symbols) #15
  %16 = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %17, ptr noundef nonnull @trace_raw_output_svc_authenticate.symbols.225) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.224, i32 noundef %12, ptr noundef %15, ptr noundef %18) #15
  %19 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @svc_proc_name(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_process(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %5, i32 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %5, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 65535
  %19 = getelementptr i8, ptr %5, i32 %18
  %20 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %5, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %5, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 65535
  %25 = getelementptr i8, ptr %5, i32 %24
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.237, ptr noundef %13, i32 noundef %15, ptr noundef %19, i32 noundef %21, ptr noundef %25) #15
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_rqst_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %5, i32 0, i32 3
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %5, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %18, ptr noundef nonnull @trace_raw_output_svc_rqst_event.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.238, ptr noundef %14, i32 noundef %16, ptr noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_rqst_status(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %5, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %5, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %5, i32 0, i32 3
  %20 = load i32, ptr %19, align 4
  %21 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %20, ptr noundef nonnull @trace_raw_output_svc_rqst_status.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.247, ptr noundef %14, i32 noundef %16, i32 noundef %18, ptr noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_create_err(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %5, i32 0, i32 4
  %11 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %5, i32 0, i32 2
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %5, i32 0, i32 3
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 65535
  %18 = getelementptr i8, ptr %5, i32 %17
  %19 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %5, i32 0, i32 1
  %20 = load i32, ptr %19, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.250, ptr noundef %10, ptr noundef %14, ptr noundef %18, i32 noundef %20) #15
  %21 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %22

22:                                               ; preds = %8, %3
  %23 = phi i32 [ %21, %8 ], [ %6, %3 ]
  ret i32 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_enqueue(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %5, i32 0, i32 3
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %5, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %18, ptr noundef nonnull @trace_raw_output_svc_xprt_enqueue.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.252, ptr noundef %14, i32 noundef %16, ptr noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %5, i32 0, i32 2
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %16, ptr noundef nonnull @trace_raw_output_svc_xprt_event.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.267, ptr noundef %14, ptr noundef %17) #15
  %18 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_accept(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.268, ptr noundef %13, ptr noundef %17, ptr noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_dequeue(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %5, i32 0, i32 3
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %16, ptr noundef nonnull @trace_raw_output_svc_xprt_dequeue.__flags) #15
  %18 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %5, i32 0, i32 2
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.270, ptr noundef %14, ptr noundef %17, i32 noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_wake_up(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_wake_up, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.271, i32 noundef %11) #15
  %12 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %13

13:                                               ; preds = %8, %3
  %14 = phi i32 [ %12, %8 ], [ %6, %3 ]
  ret i32 %14
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_alloc_arg_err(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_alloc_arg_err, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.273, i32 noundef %11) #15
  %12 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %13

13:                                               ; preds = %8, %3
  %14 = phi i32 [ %12, %8 ], [ %6, %3 ]
  ret i32 %14
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_stats_latency(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %5, i32 0, i32 4
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %5, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 65535
  %19 = getelementptr i8, ptr %5, i32 %18
  %20 = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %5, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.274, ptr noundef %13, i32 noundef %15, ptr noundef %19, i32 noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_deferred_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %5, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %5, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %5, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.276, ptr noundef %13, ptr noundef %15, i32 noundef %17) #15
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_new_socket(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %12, ptr noundef nonnull @trace_raw_output_svcsock_new_socket.symbols) #15
  %14 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %15, ptr noundef nonnull @trace_raw_output_svcsock_new_socket.symbols.288) #15
  %17 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %5, i32 0, i32 3
  %18 = load i8, ptr %17, align 4, !range !48
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, ptr @.str.92, ptr @.str.289
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.280, ptr noundef %13, ptr noundef %16, ptr noundef nonnull %20) #15
  %21 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %22

22:                                               ; preds = %8, %3
  %23 = phi i32 [ %21, %8 ], [ %6, %3 ]
  ret i32 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_marker(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %5, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %5, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %5, i32 0, i32 2
  %17 = load i8, ptr %16, align 4, !range !48
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, ptr @.str.92, ptr @.str.293
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.292, ptr noundef %13, i32 noundef %15, ptr noundef nonnull %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %5, i32 0, i32 3
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %5, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %18, ptr noundef nonnull @trace_raw_output_svcsock_class.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.295, ptr noundef %14, i32 noundef %16, ptr noundef %19) #15
  %20 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_tcp_recv_short(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %5, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %5, i32 0, i32 3
  %16 = load i32, ptr %15, align 4
  %17 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %16, ptr noundef nonnull @trace_raw_output_svcsock_tcp_recv_short.__flags) #15
  %18 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %5, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %5, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.298, ptr noundef %14, ptr noundef %17, i32 noundef %19, i32 noundef %21) #15
  %22 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_tcp_state(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %5, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %16, ptr noundef nonnull @trace_raw_output_svcsock_tcp_state.symbols) #15
  %18 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %5, i32 0, i32 2
  %19 = load i32, ptr %18, align 4
  %20 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %19, ptr noundef nonnull @trace_raw_output_svcsock_tcp_state.symbols.300) #15
  %21 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %5, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.114, i32 noundef %22, ptr noundef nonnull @trace_raw_output_svcsock_tcp_state.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.299, ptr noundef %14, ptr noundef %17, ptr noundef %20, ptr noundef %23) #15
  %24 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %25

25:                                               ; preds = %8, %3
  %26 = phi i32 [ %24, %8 ], [ %6, %3 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_accept_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %5, i32 0, i32 2
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %5, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.302, ptr noundef %13, i32 noundef %15) #15
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_cache_event(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %5, i32 0, i32 2
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %5, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.306, ptr noundef %13, ptr noundef %15) #15
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_register_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %30

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %5, i32 0, i32 6
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 65535
  %14 = getelementptr i8, ptr %5, i32 %13
  %15 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %5, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %5, i32 0, i32 3
  %18 = load i16, ptr %17, align 4
  %19 = icmp eq i16 %18, 17
  %20 = select i1 %19, ptr @.str.308, ptr @.str.309
  %21 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %5, i32 0, i32 4
  %22 = load i16, ptr %21, align 2
  %23 = zext i16 %22 to i32
  %24 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %5, i32 0, i32 2
  %25 = load i32, ptr %24, align 4
  %26 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef %25, ptr noundef nonnull @trace_raw_output_register_class.symbols) #15
  %27 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %5, i32 0, i32 5
  %28 = load i32, ptr %27, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.307, ptr noundef %14, i32 noundef %16, ptr noundef nonnull %20, i32 noundef %23, ptr noundef %26, i32 noundef %28) #15
  %29 = tail call i32 @trace_handle_return(ptr noundef %10) #15
  br label %30

30:                                               ; preds = %8, %3
  %31 = phi i32 [ %29, %8 ], [ %6, %3 ]
  ret i32 %31
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_unregister(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #15
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %5, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %5, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %5, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.310, ptr noundef %13, i32 noundef %15, i32 noundef %17) #15
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #15
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #11

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #12

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #12

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @__rpc_queue_timer_fn(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -56
  tail call void @_raw_spin_lock(ptr noundef %2) #15
  %3 = load volatile i32, ptr @jiffies, align 64
  %4 = getelementptr i8, ptr %0, i32 -12
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, %4
  br i1 %6, label %57, label %7

7:                                                ; preds = %54, %1
  %8 = phi ptr [ %11, %54 ], [ %5, %1 ]
  %9 = phi i32 [ %55, %54 ], [ %3, %1 ]
  %10 = getelementptr i8, ptr %8, i32 -52
  %11 = load ptr, ptr %8, align 4
  %12 = getelementptr i8, ptr %8, i32 -28
  %13 = load i32, ptr %12, align 8
  %14 = sub i32 %3, %13
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %16, label %48

16:                                               ; preds = %7
  %17 = getelementptr i8, ptr %8, i32 -32
  %18 = load ptr, ptr %17, align 4
  %19 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_timeout, i32 0, i32 1), align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %44

21:                                               ; preds = %16
  %22 = tail call ptr @llvm.thread.pointer() #15
  %23 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %24 = load i32, ptr %23, align 8
  %25 = lshr i32 %24, 5
  %26 = getelementptr i32, ptr @__cpu_online_mask, i32 %25
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %24, 31
  %29 = shl nuw i32 1, %28
  %30 = and i32 %29, %27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %21
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !49
  %33 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_timeout, i32 0, i32 7), align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %35, %32
  %36 = phi ptr [ %40, %35 ], [ %33, %32 ]
  %37 = load volatile ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.tracepoint_func, ptr %36, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  tail call void %37(ptr noundef %39, ptr noundef %10, ptr noundef %18) #15
  %40 = getelementptr %struct.tracepoint_func, ptr %36, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %35

43:                                               ; preds = %35, %32
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !50
  br label %44

44:                                               ; preds = %43, %21, %16
  %45 = getelementptr i8, ptr %8, i32 -48
  store i32 -110, ptr %45, align 4
  %46 = load ptr, ptr @rpciod_workqueue, align 4
  %47 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %46, ptr noundef %2, ptr noundef %10, ptr noundef null, ptr noundef null) #15
  br label %54

48:                                               ; preds = %7
  %49 = icmp eq i32 %9, %3
  %50 = sub i32 %13, %9
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %49, i1 true, i1 %51
  %53 = select i1 %52, i32 %13, i32 %9
  br label %54

54:                                               ; preds = %48, %44
  %55 = phi i32 [ %9, %44 ], [ %53, %48 ]
  %56 = icmp eq ptr %11, %4
  br i1 %56, label %57, label %7

57:                                               ; preds = %54, %1
  %58 = phi i32 [ %3, %1 ], [ %55, %54 ]
  %59 = load volatile ptr, ptr %4, align 4
  %60 = icmp eq ptr %59, %4
  br i1 %60, label %70, label %61

61:                                               ; preds = %57
  %62 = load volatile i32, ptr @jiffies, align 64
  %63 = getelementptr i8, ptr %0, i32 -4
  store i32 %58, ptr %63, align 4
  %64 = sub i32 %62, %58
  %65 = sub i32 %58, %62
  %66 = icmp slt i32 %64, 0
  %67 = select i1 %66, i32 %65, i32 0
  %68 = load ptr, ptr @rpciod_workqueue, align 4
  %69 = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 16, ptr noundef %68, ptr noundef %0, i32 noundef %67) #15
  br label %70

70:                                               ; preds = %61, %57
  tail call void asm sideeffect "dmb ish", "~{memory}"() #15, !srcloc !16
  %71 = load i16, ptr %2, align 4
  %72 = add i16 %71, 1
  store i16 %72, ptr %2, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #15, !srcloc !17
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #15, !srcloc !18
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #12

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mod_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__refrigerator(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @freezing_slow_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__rpc_do_sleep_on_priority(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2) unnamed_addr #0 {
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sleep, i32 0, i32 1), align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %3
  %7 = tail call ptr @llvm.thread.pointer() #15
  %8 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %9 = load i32, ptr %8, align 8
  %10 = lshr i32 %9, 5
  %11 = getelementptr i32, ptr @__cpu_online_mask, i32 %10
  %12 = load volatile i32, ptr %11, align 4
  %13 = and i32 %9, 31
  %14 = shl nuw i32 1, %13
  %15 = and i32 %14, %12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %6
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !51
  %18 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_task_sleep, i32 0, i32 7), align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %20, %17
  %21 = phi ptr [ %25, %20 ], [ %18, %17 ]
  %22 = load volatile ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.tracepoint_func, ptr %21, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  tail call void %22(ptr noundef %24, ptr noundef %1, ptr noundef %0) #15
  %25 = getelementptr %struct.tracepoint_func, ptr %21, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %20

28:                                               ; preds = %20, %17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !52
  br label %29

29:                                               ; preds = %28, %6, %3
  %30 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8
  %31 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 2
  store volatile ptr %31, ptr %31, align 4
  %32 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 2, i32 1
  store ptr %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 2
  %34 = load i8, ptr %33, align 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %66, label %36

36:                                               ; preds = %29
  %37 = icmp ult i8 %34, %2
  br i1 %37, label %38, label %39, !prof !11

38:                                               ; preds = %36
  br label %39

39:                                               ; preds = %38, %36
  %40 = phi i8 [ %34, %38 ], [ %2, %36 ]
  %41 = zext i8 %40 to i32
  %42 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 %41
  %43 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 19
  br label %44

44:                                               ; preds = %48, %39
  %45 = phi ptr [ %42, %39 ], [ %46, %48 ]
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %42
  br i1 %47, label %60, label %48

48:                                               ; preds = %44
  %49 = getelementptr i8, ptr %46, i32 84
  %50 = load i32, ptr %49, align 8
  %51 = load i32, ptr %43, align 8
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %53, label %44

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 1
  %55 = getelementptr inbounds %struct.rpc_wait, ptr %46, i32 0, i32 1
  %56 = getelementptr inbounds %struct.rpc_wait, ptr %46, i32 0, i32 1, i32 1
  %57 = load ptr, ptr %56, align 4
  store ptr %54, ptr %56, align 4
  store ptr %55, ptr %54, align 4
  %58 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 1, i32 1
  store ptr %57, ptr %58, align 4
  store volatile ptr %54, ptr %57, align 4
  store ptr %42, ptr %30, align 4
  %59 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 0, i32 1
  store ptr null, ptr %59, align 4
  br label %80

60:                                               ; preds = %44
  %61 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 1
  store volatile ptr %61, ptr %61, align 4
  %62 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 1, i32 1
  store ptr %61, ptr %62, align 4
  %63 = getelementptr %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 %41, i32 1
  %64 = load ptr, ptr %63, align 4
  store ptr %30, ptr %63, align 4
  store ptr %42, ptr %30, align 4
  %65 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 0, i32 1
  store ptr %64, ptr %65, align 4
  store volatile ptr %30, ptr %64, align 4
  br label %80

66:                                               ; preds = %29
  %67 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 20
  %68 = load i16, ptr %67, align 4
  %69 = and i16 %68, 2
  %70 = icmp eq i16 %69, 0
  %71 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 1
  br i1 %70, label %76, label %72

72:                                               ; preds = %66
  %73 = load ptr, ptr %71, align 4
  %74 = getelementptr inbounds %struct.list_head, ptr %73, i32 0, i32 1
  store ptr %30, ptr %74, align 4
  store ptr %73, ptr %30, align 4
  %75 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 0, i32 1
  store ptr %71, ptr %75, align 4
  store volatile ptr %30, ptr %71, align 4
  br label %80

76:                                               ; preds = %66
  %77 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 1, i32 0, i32 1
  %78 = load ptr, ptr %77, align 4
  store ptr %30, ptr %77, align 4
  store ptr %71, ptr %30, align 4
  %79 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 8, i32 0, i32 0, i32 1
  store ptr %78, ptr %79, align 4
  store volatile ptr %30, ptr %78, align 4
  br label %80

80:                                               ; preds = %76, %72, %60, %53
  %81 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 7
  store ptr %0, ptr %81, align 8
  %82 = getelementptr inbounds %struct.rpc_wait_queue, ptr %0, i32 0, i32 5
  %83 = load i16, ptr %82, align 4
  %84 = add i16 %83, 1
  store i16 %84, ptr %82, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #15, !srcloc !53
  %85 = getelementptr inbounds %struct.rpc_task, ptr %1, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 1, ptr noundef %85) #15
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal zeroext i1 @rpc_task_action_set_status(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) #5 {
  %3 = load i32, ptr %1, align 4
  %4 = getelementptr inbounds %struct.rpc_task, ptr %0, i32 0, i32 1
  store i32 %3, ptr %4, align 4
  ret i1 true
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rpc_async_schedule(ptr noundef %0) #0 {
  %2 = tail call ptr @llvm.thread.pointer() #15
  %3 = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 262144
  %6 = or i32 %4, 262144
  store i32 %6, ptr %3, align 4
  %7 = getelementptr i8, ptr %0, i32 -36
  tail call fastcc void @__rpc_execute(ptr noundef %7)
  %8 = load i32, ptr %3, align 4
  %9 = and i32 %8, -262145
  %10 = or i32 %9, %5
  store i32 %10, ptr %3, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_task_release_client(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_cred(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bit_waitqueue(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up_locked_key(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rpc_async_release(ptr noundef %0) #0 {
  %2 = tail call ptr @llvm.thread.pointer() #15
  %3 = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = or i32 %4, 262144
  store i32 %5, ptr %3, align 4
  %6 = getelementptr i8, ptr %0, i32 -36
  %7 = getelementptr i8, ptr %0, i32 88
  %8 = load i16, ptr %7, align 4
  %9 = getelementptr i8, ptr %0, i32 60
  %10 = load ptr, ptr %9, align 8
  tail call void @put_rpccred(ptr noundef %10) #15
  %11 = getelementptr i8, ptr %0, i32 48
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.rpc_call_ops, ptr %12, i32 0, i32 3
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr i8, ptr %0, i32 44
  %18 = load ptr, ptr %17, align 8
  tail call void %14(ptr noundef %18) #15
  br label %19

19:                                               ; preds = %16, %1
  %20 = and i16 %8, 128
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr @rpc_task_mempool, align 4
  tail call void @mempool_free(ptr noundef %6, ptr noundef %23) #15
  br label %24

24:                                               ; preds = %22, %19
  %25 = and i32 %4, 262144
  %26 = load i32, ptr %3, align 4
  %27 = and i32 %26, -262145
  %28 = or i32 %27, %25
  store i32 %28, ptr %3, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_rpccred(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_task_get_xprt(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mempool_create(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mempool_alloc_slab(i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_free_slab(ptr noundef, ptr noundef) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #9

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { argmemonly nofree nounwind willreturn }
attributes #11 = { nounwind readonly }
attributes #12 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #13 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nounwind }
attributes #16 = { nounwind readnone }
attributes #17 = { cold nounwind }
attributes #18 = { nounwind allocsize(0) }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{!"auto-init"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = !{i64 498050}
!13 = !{i64 436530, i64 436557, i64 436579, i64 436607}
!14 = !{i64 436938, i64 436965, i64 436998, i64 437019, i64 437046, i64 437072}
!15 = !{i64 2151316473}
!16 = !{i64 2148958197}
!17 = !{i64 2148954021}
!18 = !{i64 2148954096, i64 2148954123, i64 2148954170, i64 2148954192, i64 2148954220, i64 2148954240}
!19 = !{i64 2148981200}
!20 = !{i64 2163371362}
!21 = !{i64 2156525703}
!22 = !{i64 2156525859}
!23 = !{i64 2156475470}
!24 = !{i64 2156475630}
!25 = !{i64 2156492083}
!26 = !{i64 2156492255}
!27 = !{i64 2156454712}
!28 = !{i64 2156454884}
!29 = !{i64 2163393332}
!30 = !{i64 2148172904}
!31 = !{i64 573672, i64 2148063643, i64 2148063669, i64 2148063716, i64 2148063738, i64 2148063766, i64 2148063786}
!32 = !{i64 2148075742, i64 2148075774, i64 2148075803, i64 2148075837, i64 2148075868, i64 2148075891}
!33 = !{i64 2148173107}
!34 = !{i64 2156349339}
!35 = !{i64 2156349503}
!36 = !{i64 2156366100}
!37 = !{i64 2156366274}
!38 = !{i64 2156383131}
!39 = !{i64 2156383305}
!40 = !{i64 2156400122}
!41 = !{i64 2156400294}
!42 = !{i64 2148175737}
!43 = !{i64 2148078099, i64 2148078131, i64 2148078160, i64 2148078194, i64 2148078225, i64 2148078248}
!44 = !{i64 2148175940}
!45 = !{i64 2156421080}
!46 = !{i64 2156421250}
!47 = !{i64 559735, i64 559759, i64 559780, i64 559797, i64 559814}
!48 = !{i8 0, i8 2}
!49 = !{i64 2156437883}
!50 = !{i64 2156438051}
!51 = !{i64 2156508989}
!52 = !{i64 2156509143}
!53 = !{i64 2163343475}
