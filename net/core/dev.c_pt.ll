; ModuleID = '/llk/IR/net/core/dev.c_pt.bc'
source_filename = "../net/core/dev.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_base_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_base_lock\22\09\09\09\09\09"
module asm "__kstrtabns_dev_base_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_name_in_use:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_name_in_use\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_name_in_use:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_name_node_alt_create:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_name_node_alt_create\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_name_node_alt_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_name_node_alt_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_name_node_alt_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_name_node_alt_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_softnet_data:\09\09\09\09\09"
module asm "\09.asciz \09\22softnet_data\22\09\09\09\09\09"
module asm "__kstrtabns_softnet_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_add_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_add_pack\22\09\09\09\09\09"
module asm "__kstrtabns_dev_add_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_remove_pack\22\09\09\09\09\09"
module asm "__kstrtabns___dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_remove_pack\22\09\09\09\09\09"
module asm "__kstrtabns_dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_iflink:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_iflink\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_iflink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_fill_metadata_dst:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_fill_metadata_dst\22\09\09\09\09\09"
module asm "__kstrtabns_dev_fill_metadata_dst:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_fill_forward_path:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_fill_forward_path\22\09\09\09\09\09"
module asm "__kstrtabns_dev_fill_forward_path:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_get_by_name\22\09\09\09\09\09"
module asm "__kstrtabns___dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_name_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_name_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_name_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_get_by_index\22\09\09\09\09\09"
module asm "__kstrtabns___dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_index_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_index_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_index_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_index\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_napi_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_napi_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_napi_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_getbyhwaddr_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_getbyhwaddr_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_getbyhwaddr_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_getfirstbyhwtype:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_getfirstbyhwtype\22\09\09\09\09\09"
module asm "__kstrtabns_dev_getfirstbyhwtype:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_get_by_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_get_by_flags\22\09\09\09\09\09"
module asm "__kstrtabns___dev_get_by_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_valid_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_valid_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_valid_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_alloc_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_alloc_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_alloc_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_alias\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_features_change:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_features_change\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_features_change:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_state_change:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_state_change\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_state_change:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22__netdev_notify_peers\22\09\09\09\09\09"
module asm "__kstrtabns___netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_notify_peers\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_open:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_open\22\09\09\09\09\09"
module asm "__kstrtabns_dev_open:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_close_many:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_close_many\22\09\09\09\09\09"
module asm "__kstrtabns_dev_close_many:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_close:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_close\22\09\09\09\09\09"
module asm "__kstrtabns_dev_close:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_disable_lro:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_disable_lro\22\09\09\09\09\09"
module asm "__kstrtabns_dev_disable_lro:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_cmd_to_name:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_cmd_to_name\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_cmd_to_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice_notifier_net\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_notifier_net\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice_notifier_dev_net\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_notifier_dev_net\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_call_netdevice_notifiers:\09\09\09\09\09"
module asm "\09.asciz \09\22call_netdevice_notifiers\22\09\09\09\09\09"
module asm "__kstrtabns_call_netdevice_notifiers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_enable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22net_enable_timestamp\22\09\09\09\09\09"
module asm "__kstrtabns_net_enable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_disable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22net_disable_timestamp\22\09\09\09\09\09"
module asm "__kstrtabns_net_disable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_is_skb_forwardable:\09\09\09\09\09"
module asm "\09.asciz \09\22is_skb_forwardable\22\09\09\09\09\09"
module asm "__kstrtabns_is_skb_forwardable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_forward_skb\22\09\09\09\09\09"
module asm "__kstrtabns___dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_forward_skb\22\09\09\09\09\09"
module asm "__kstrtabns_dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_nit_active:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_nit_active\22\09\09\09\09\09"
module asm "__kstrtabns_dev_nit_active:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_queue_xmit_nit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_queue_xmit_nit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_queue_xmit_nit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_txq_to_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_txq_to_tc\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_txq_to_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22__netif_set_xps_queue\22\09\09\09\09\09"
module asm "__kstrtabns___netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_xps_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_reset_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_reset_tc\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_reset_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_tc_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_tc_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_tc_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_num_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_num_tc\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_num_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_unbind_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_unbind_sb_channel\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_unbind_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_bind_sb_channel_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_bind_sb_channel_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_bind_sb_channel_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_sb_channel\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_real_num_tx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_real_num_tx_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_real_num_tx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_real_num_rx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_real_num_rx_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_real_num_rx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_real_num_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_real_num_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_real_num_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_get_num_default_rss_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_get_num_default_rss_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_get_num_default_rss_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netif_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22__netif_schedule\22\09\09\09\09\09"
module asm "__kstrtabns___netif_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_schedule_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_schedule_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netif_schedule_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_tx_wake_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_tx_wake_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netif_tx_wake_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_kfree_skb_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_kfree_skb_irq\22\09\09\09\09\09"
module asm "__kstrtabns___dev_kfree_skb_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_kfree_skb_any:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_kfree_skb_any\22\09\09\09\09\09"
module asm "__kstrtabns___dev_kfree_skb_any:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_device_detach:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_device_detach\22\09\09\09\09\09"
module asm "__kstrtabns_netif_device_detach:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_device_attach:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_device_attach\22\09\09\09\09\09"
module asm "__kstrtabns_netif_device_attach:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_checksum_help:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_checksum_help\22\09\09\09\09\09"
module asm "__kstrtabns_skb_checksum_help:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_gso_segment:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_gso_segment\22\09\09\09\09\09"
module asm "__kstrtabns___skb_gso_segment:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_rx_csum_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_rx_csum_fault\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_rx_csum_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_passthru_features_check:\09\09\09\09\09"
module asm "\09.asciz \09\22passthru_features_check\22\09\09\09\09\09"
module asm "__kstrtabns_passthru_features_check:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_skb_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_skb_features\22\09\09\09\09\09"
module asm "__kstrtabns_netif_skb_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_csum_hwoffload_help:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_csum_hwoffload_help\22\09\09\09\09\09"
module asm "__kstrtabns_skb_csum_hwoffload_help:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_validate_xmit_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22validate_xmit_skb_list\22\09\09\09\09\09"
module asm "__kstrtabns_validate_xmit_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_loopback_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_loopback_xmit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_loopback_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_pick_tx_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_pick_tx_zero\22\09\09\09\09\09"
module asm "__kstrtabns_dev_pick_tx_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_pick_tx_cpu_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_pick_tx_cpu_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_pick_tx_cpu_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_pick_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_pick_tx\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_pick_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_queue_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_queue_xmit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_queue_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_queue_xmit_accel:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_queue_xmit_accel\22\09\09\09\09\09"
module asm "__kstrtabns_dev_queue_xmit_accel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_direct_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_direct_xmit\22\09\09\09\09\09"
module asm "__kstrtabns___dev_direct_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_max_backlog:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_max_backlog\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_max_backlog:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_sock_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_sock_flow_table\22\09\09\09\09\09"
module asm "__kstrtabns_rps_sock_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_cpu_mask:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_cpu_mask\22\09\09\09\09\09"
module asm "__kstrtabns_rps_cpu_mask:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_needed\22\09\09\09\09\09"
module asm "__kstrtabns_rps_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rfs_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22rfs_needed\22\09\09\09\09\09"
module asm "__kstrtabns_rfs_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_may_expire_flow:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_may_expire_flow\22\09\09\09\09\09"
module asm "__kstrtabns_rps_may_expire_flow:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_xdp_generic:\09\09\09\09\09"
module asm "\09.asciz \09\22do_xdp_generic\22\09\09\09\09\09"
module asm "__kstrtabns_do_xdp_generic:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_rx:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_rx\22\09\09\09\09\09"
module asm "__kstrtabns_netif_rx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_rx_ni:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_rx_ni\22\09\09\09\09\09"
module asm "__kstrtabns_netif_rx_ni:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_rx_any_context:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_rx_any_context\22\09\09\09\09\09"
module asm "__kstrtabns_netif_rx_any_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_is_rx_handler_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_is_rx_handler_busy\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_is_rx_handler_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_rx_handler_register:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_rx_handler_register\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_rx_handler_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_rx_handler_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_rx_handler_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_rx_handler_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_receive_skb_core:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_receive_skb_core\22\09\09\09\09\09"
module asm "__kstrtabns_netif_receive_skb_core:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_receive_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_receive_skb\22\09\09\09\09\09"
module asm "__kstrtabns_netif_receive_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_receive_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_receive_skb_list\22\09\09\09\09\09"
module asm "__kstrtabns_netif_receive_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___napi_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22__napi_schedule\22\09\09\09\09\09"
module asm "__kstrtabns___napi_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_schedule_prep:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_schedule_prep\22\09\09\09\09\09"
module asm "__kstrtabns_napi_schedule_prep:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___napi_schedule_irqoff:\09\09\09\09\09"
module asm "\09.asciz \09\22__napi_schedule_irqoff\22\09\09\09\09\09"
module asm "__kstrtabns___napi_schedule_irqoff:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_complete_done:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_complete_done\22\09\09\09\09\09"
module asm "__kstrtabns_napi_complete_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_busy_loop:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_busy_loop\22\09\09\09\09\09"
module asm "__kstrtabns_napi_busy_loop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_threaded:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_threaded\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_threaded:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_napi_add:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_napi_add\22\09\09\09\09\09"
module asm "__kstrtabns_netif_napi_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_disable\22\09\09\09\09\09"
module asm "__kstrtabns_napi_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_enable\22\09\09\09\09\09"
module asm "__kstrtabns_napi_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netif_napi_del:\09\09\09\09\09"
module asm "\09.asciz \09\22__netif_napi_del\22\09\09\09\09\09"
module asm "__kstrtabns___netif_napi_del:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_has_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_has_upper_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_has_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_has_upper_dev_all_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_has_upper_dev_all_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_has_upper_dev_all_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_has_any_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_has_any_upper_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_has_any_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_master_upper_dev_get:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_master_upper_dev_get\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_master_upper_dev_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_get_private\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_upper_get_next_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_upper_get_next_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_upper_get_next_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_walk_all_upper_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_walk_all_upper_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_walk_all_upper_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_next_private:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_next_private\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_next_private:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_next_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_next_private_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_next_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_next:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_next\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_next:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_walk_all_lower_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_walk_all_lower_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_walk_all_lower_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_next_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_next_lower_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_next_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_walk_all_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_walk_all_lower_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_walk_all_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_first_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_first_private_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_first_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_master_upper_dev_get_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_master_upper_dev_get_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_master_upper_dev_get_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_upper_dev_link\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_master_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_master_upper_dev_link\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_master_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_upper_dev_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_upper_dev_unlink\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_upper_dev_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_change_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_change_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_change_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_change_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_change_commit\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_change_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_change_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_change_abort\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_change_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_bonding_info_change:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_bonding_info_change\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_bonding_info_change:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_get_xmit_slave:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_get_xmit_slave\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_get_xmit_slave:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_sk_get_lowest_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_sk_get_lowest_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_sk_get_lowest_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_dev_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_dev_get_private\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_dev_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_state_changed:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_state_changed\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_state_changed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_promiscuity:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_promiscuity\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_promiscuity:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_allmulti:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_allmulti\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_allmulti:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_flags\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_flags\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_set_mtu\22\09\09\09\09\09"
module asm "__kstrtabns___dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_mtu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_group:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_group\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_group:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_pre_changeaddr_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_pre_changeaddr_notify\22\09\09\09\09\09"
module asm "__kstrtabns_dev_pre_changeaddr_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_mac_address\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_mac_address_user:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_mac_address_user\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_mac_address_user:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_mac_address\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_carrier:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_carrier\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_carrier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_phys_port_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_phys_port_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_phys_port_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_phys_port_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_phys_port_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_phys_port_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_port_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_port_parent_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_port_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_port_same_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_port_same_parent_id\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_port_same_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_proto_down:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_proto_down\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_proto_down:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_proto_down_reason:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_proto_down_reason\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_proto_down_reason:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_xdp_prog_count:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_xdp_prog_count\22\09\09\09\09\09"
module asm "__kstrtabns_dev_xdp_prog_count:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_update_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_update_features\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_update_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_change_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_change_features\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_change_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_stacked_transfer_operstate:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_stacked_transfer_operstate\22\09\09\09\09\09"
module asm "__kstrtabns_netif_stacked_transfer_operstate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_tx_stop_all_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_tx_stop_all_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_tx_stop_all_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_init_dummy_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22init_dummy_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_init_dummy_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_refcnt_read:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_refcnt_read\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_refcnt_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_stats_to_stats64:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_stats_to_stats64\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_stats_to_stats64:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_stats:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_stats\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_stats:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_fetch_sw_netstats:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_fetch_sw_netstats\22\09\09\09\09\09"
module asm "__kstrtabns_dev_fetch_sw_netstats:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_tstats64:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_tstats64\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_tstats64:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_default_ethtool_ops:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_default_ethtool_ops\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_default_ethtool_ops:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_alloc_netdev_mqs:\09\09\09\09\09"
module asm "\09.asciz \09\22alloc_netdev_mqs\22\09\09\09\09\09"
module asm "__kstrtabns_alloc_netdev_mqs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_free_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22free_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_free_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_net:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_net\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_queue\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_many:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_many\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_many:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_change_net_namespace:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_change_net_namespace\22\09\09\09\09\09"
module asm "__kstrtabns___dev_change_net_namespace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_increment_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_increment_features\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_increment_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_printk:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_printk\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_printk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_emerg:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_emerg\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_emerg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_alert:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_alert\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_alert:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_crit:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_crit\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_crit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_err:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_err\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_err:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_warn:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_warn\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_warn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_notice:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_notice\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_notice:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_info:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_info\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type { i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.anon.213, [4 x i8], i32, [60 x i8], %struct.__call_single_data, ptr, i32, i32, i32, %struct.sk_buff_head, %struct.napi_struct, [56 x i8] }
%struct.list_head = type { ptr, ptr }
%struct.anon.213 = type { i16, i8 }
%struct.__call_single_data = type { %struct.__call_single_node, ptr, ptr }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.34 }
%struct.llist_node = type { ptr }
%union.anon.34 = type { i32 }
%struct.sk_buff_head = type { %union.anon.82, i32, %struct.spinlock }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { ptr, ptr }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.hlist_node = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.raw_notifier_head = type { ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t }
%struct.cpumask = type { [1 x i32] }
%struct.irq_cpustat_t = type { i32, [60 x i8] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [40 x i8], %struct.netns_ipv4, %struct.netns_ipv6, ptr, %struct.netns_bpf, [28 x i8], %struct.netns_xfrm, i64, %struct.netns_can, ptr, ptr, [32 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type {}
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.10, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.10 = type { %struct.anon.11 }
%struct.anon.11 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [40 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [60 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.205, ptr, [60 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [32 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.anon.205 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [36 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex, [28 x i8] }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.ethtool_ops = type { i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pernet_operations = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, ptr, ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.78, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [8 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, %struct.possible_net_t, ptr, i32, %union.anon.176, %struct.device, [4 x ptr], ptr, ptr, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], %struct.netdevice_tracker, %struct.netdevice_tracker, [48 x i8] }
%struct.anon.78 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.possible_net_t = type {}
%union.anon.176 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.netdevice_tracker = type {}
%struct.packet_type = type { i16, i8, ptr, %struct.netdevice_tracker, ptr, ptr, ptr, ptr, ptr, %struct.list_head }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.sk_buff = type { %union.anon.75, %union.anon.177, %union.anon.178, [48 x i8], %union.anon.179, i32, i32, i16, i16, i16, [0 x i8], i8, i8, %union.anon.181, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.75 = type { %struct.anon.76 }
%struct.anon.76 = type { ptr, ptr, %union.anon.77 }
%union.anon.77 = type { ptr }
%union.anon.177 = type { ptr }
%union.anon.178 = type { i64 }
%union.anon.179 = type { %struct.anon.180 }
%struct.anon.180 = type { i32, ptr }
%union.anon.181 = type { %struct.anon.182 }
%struct.anon.182 = type { [0 x i8], i16, [0 x i8], i16, %union.anon.183, i32, i32, i32, i16, i16, %union.anon.185, %union.anon.186, %union.anon.187, i16, i16, i16, i16, i16, i16, i16 }
%union.anon.183 = type { i32 }
%union.anon.185 = type { i32 }
%union.anon.186 = type { i32 }
%union.anon.187 = type { i16 }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, %struct.netdevice_tracker }
%struct.callback_head = type { ptr, ptr }
%struct.metadata_dst = type { %struct.dst_entry, i32, %union.anon.224 }
%union.anon.224 = type { %struct.ip_tunnel_info }
%struct.ip_tunnel_info = type { %struct.ip_tunnel_key, %struct.dst_cache, i8, i8 }
%struct.ip_tunnel_key = type { i64, %union.anon.158, i16, i8, i8, i32, i16, i16 }
%union.anon.158 = type { %struct.anon.160 }
%struct.anon.160 = type { %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.138 }
%union.anon.138 = type { [4 x i32] }
%struct.dst_cache = type { ptr, i32 }
%struct.net_device_path_ctx = type { ptr, ptr, i32, [2 x %struct.anon.130] }
%struct.anon.130 = type { i16, i16 }
%struct.net_device_path_stack = type { i32, [5 x %struct.net_device_path] }
%struct.net_device_path = type { i32, ptr, %union.anon.131 }
%union.anon.131 = type { %struct.anon.133, [4 x i8] }
%struct.anon.133 = type { i32, i16, i16 }
%struct.netdev_notifier_info = type { ptr, ptr }
%struct.va_format = type { ptr, ptr }
%struct.__va_list = type { ptr }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.netdev_notifier_change_info = type { %struct.netdev_notifier_info, i32 }
%struct.netdev_net_notifier = type { %struct.list_head, ptr }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.rps_dev_flow = type { i16, i16, i32 }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.netdev_queue = type { ptr, %struct.netdevice_tracker, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, [4 x i8], %struct.spinlock, i32, i32, i32, [48 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [52 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [24 x i8] }
%struct.xps_dev_maps = type { %struct.callback_head, i32, i16, [0 x ptr] }
%struct.xps_map = type { i32, i32, %struct.callback_head, [0 x i16] }
%struct.Qdisc = type { ptr, ptr, i32, i32, ptr, ptr, %struct.hlist_node, i32, i32, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_sync, %struct.gnet_stats_queue, i32, i32, ptr, %struct.sk_buff_head, [16 x i8], %struct.spinlock, %struct.spinlock, %struct.callback_head, %struct.netdevice_tracker, [48 x i8], [0 x i32] }
%struct.qdisc_skb_head = type { ptr, ptr, i32, %struct.spinlock }
%struct.gnet_stats_basic_sync = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync, [12 x i8] }
%struct.u64_stats_t = type { i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.anon.184 = type { i16, i16 }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.199, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.200, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.201, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, %struct.netns_tracker }
%struct.sock_common = type { %union.anon.12, %union.anon.14, %union.anon.15, i16, i8, i8, i32, %union.anon.17, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.195, [0 x i32], %union.anon.196, i16, i16, %union.anon.197, %struct.refcount_struct, [0 x i32], %union.anon.198 }
%union.anon.12 = type { i64 }
%union.anon.14 = type { i32 }
%union.anon.15 = type { i32 }
%union.anon.17 = type { %struct.hlist_node }
%struct.atomic64_t = type { i64 }
%union.anon.195 = type { i32 }
%union.anon.196 = type { %struct.hlist_node }
%union.anon.197 = type { i32 }
%union.anon.198 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.199 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.200 = type { ptr }
%union.anon.201 = type { ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.kuid_t = type { i32 }
%struct.sock_cgroup_data = type {}
%struct.netns_tracker = type {}
%struct.vlan_hdr = type { i16, i16 }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.vlan_ethhdr = type { %union.anon.228, i16, i16, i16 }
%union.anon.228 = type { %struct.anon.229 }
%struct.anon.229 = type { [6 x i8], [6 x i8] }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.udphdr = type { i16, i16, i16, i16 }
%struct.netdev_rx_queue = type { %struct.xdp_rxq_info, ptr, ptr, %struct.kobject, ptr, %struct.netdevice_tracker, [16 x i8] }
%struct.xdp_rxq_info = type { ptr, i32, i32, %struct.xdp_mem_info, i32, [40 x i8] }
%struct.xdp_mem_info = type { i32, i32 }
%struct.rps_dev_flow_table = type { i32, %struct.callback_head, [0 x %struct.rps_dev_flow] }
%struct.xdp_buff = type { ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.120 }
%union.anon.120 = type { %struct.anon.121 }
%struct.anon.121 = type { %struct.anon.122, [0 x %struct.sock_filter] }
%struct.anon.122 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.task_struct = type { %struct.thread_info, i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [32 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, [36 x i8], %struct.sched_statistics, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i8, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.55, ptr, %struct.page_frag, i32, i32, i32, i64, i64, i32, i32, ptr, %struct.kmap_ctrl, i32, ptr, %struct.refcount_struct, %struct.thread_struct, [16 x i8] }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, [56 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [8 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.sched_statistics = type {}
%struct.sched_info = type {}
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.35 }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.task_io_accounting = type {}
%struct.tlbflush_unmap_batch = type {}
%union.anon.55 = type { %struct.callback_head }
%struct.kmap_ctrl = type { i32, [16 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.rps_sock_flow_table = type { i32, [60 x i8], [0 x i32] }
%struct.rps_map = type { i32, %struct.callback_head, [0 x i16] }
%struct.sd_flow_limit = type { i64, i32, i32, [128 x i16], [0 x i8] }
%struct.netdev_nested_priv = type { i8, ptr }
%struct.netdev_notifier_changeupper_info = type { %struct.netdev_notifier_info, ptr, i8, i8, ptr }
%struct.netdev_notifier_bonding_info = type { %struct.netdev_notifier_info, %struct.netdev_bonding_info }
%struct.netdev_bonding_info = type { %struct.ifslave, %struct.ifbond }
%struct.ifslave = type { i32, [16 x i8], i8, i8, i32 }
%struct.ifbond = type { i32, i32, i32 }
%struct.netdev_notifier_changelowerstate_info = type { %struct.netdev_notifier_info, ptr }
%struct.netdev_notifier_info_ext = type { %struct.netdev_notifier_info, %union.anon.232 }
%union.anon.232 = type { i32 }
%struct.netlink_ext_ack = type { ptr, ptr, ptr, [20 x i8], i8 }
%struct.netdev_notifier_pre_changeaddr_info = type { %struct.netdev_notifier_info, ptr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.bpf_link = type { %struct.atomic64_t, i32, i32, ptr, ptr, %struct.work_struct }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, %struct.hlist_node, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.bpf_ksym, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i64, i32, [2 x ptr], [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, %union.anon.119 }
%struct.bpf_ksym = type { i32, i32, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%union.anon.119 = type { %struct.work_struct }
%struct.nsproxy = type { %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.anon.109 = type { i32, %union.anon.110, i32, i32, %union.anon.111 }
%union.anon.110 = type { i32 }
%union.anon.111 = type { %struct.anon.112 }
%struct.anon.112 = type { i64, i32 }
%struct.bpf_xdp_link = type { %struct.bpf_link, ptr, i32 }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.pcpu_sw_netstats = type { i64, i64, i64, i64, %struct.u64_stats_sync, [28 x i8] }
%struct.netdev_bpf = type { i32, %union.anon.87 }
%union.anon.87 = type { %struct.anon.88 }
%struct.anon.88 = type { i32, ptr, ptr }
%struct.dsa_port = type { %union.anon.154, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, [6 x i8], i8, i8, ptr, i32, ptr, %struct.devlink_port, ptr, %struct.phylink_config, ptr, ptr, %struct.list_head, ptr, ptr, %struct.mutex, %struct.list_head, %struct.list_head }
%union.anon.154 = type { ptr }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, %struct.spinlock, i32, i32, ptr, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex, ptr }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.127 }
%union.anon.127 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.phylink_config = type { ptr, i32, i8, i8, i8, i8, ptr, [1 x i32], i32 }
%struct.cpu_rmap = type { %struct.kref, i16, i16, ptr, [0 x %struct.anon.175] }
%struct.anon.175 = type { i16, i16 }
%struct.netdev_adjacent = type { ptr, %struct.netdevice_tracker, i8, i8, i16, ptr, %struct.list_head, %struct.callback_head }
%struct.rtnl_link_ops = type { %struct.list_head, ptr, i32, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }

@dev_base_lock = dso_local global %struct.rwlock_t zeroinitializer, align 4
@__kstrtab_dev_base_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_base_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_base_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_base_lock to i32), ptr @__kstrtab_dev_base_lock, ptr @__kstrtabns_dev_base_lock }, section "___ksymtab+dev_base_lock", align 4
@__kstrtab_netdev_name_in_use = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_name_in_use = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_name_in_use = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_name_in_use to i32), ptr @__kstrtab_netdev_name_in_use, ptr @__kstrtabns_netdev_name_in_use }, section "___ksymtab+netdev_name_in_use", align 4
@__kstrtab_netdev_name_node_alt_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_name_node_alt_create = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_name_node_alt_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_name_node_alt_create to i32), ptr @__kstrtab_netdev_name_node_alt_create, ptr @__kstrtabns_netdev_name_node_alt_create }, section "___ksymtab+netdev_name_node_alt_create", align 4
@__kstrtab_netdev_name_node_alt_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_name_node_alt_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_name_node_alt_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_name_node_alt_destroy to i32), ptr @__kstrtab_netdev_name_node_alt_destroy, ptr @__kstrtabns_netdev_name_node_alt_destroy }, section "___ksymtab+netdev_name_node_alt_destroy", align 4
@softnet_data = dso_local global %struct.softnet_data zeroinitializer, section ".data..percpu..shared_aligned", align 64
@__kstrtab_softnet_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_softnet_data = external dso_local constant [0 x i8], align 1
@__ksymtab_softnet_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @softnet_data to i32), ptr @__kstrtab_softnet_data, ptr @__kstrtabns_softnet_data }, section "___ksymtab+softnet_data", align 4
@ptype_lock = internal global %struct.spinlock zeroinitializer, align 4
@__kstrtab_dev_add_pack = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_add_pack = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_add_pack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_add_pack to i32), ptr @__kstrtab_dev_add_pack, ptr @__kstrtabns_dev_add_pack }, section "___ksymtab+dev_add_pack", align 4
@.str = private unnamed_addr constant [33 x i8] c"\014dev_remove_pack: %p not found\0A\00", align 1
@__kstrtab___dev_remove_pack = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_remove_pack = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_remove_pack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_remove_pack to i32), ptr @__kstrtab___dev_remove_pack, ptr @__kstrtabns___dev_remove_pack }, section "___ksymtab+__dev_remove_pack", align 4
@__kstrtab_dev_remove_pack = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_remove_pack = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_remove_pack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_remove_pack to i32), ptr @__kstrtab_dev_remove_pack, ptr @__kstrtabns_dev_remove_pack }, section "___ksymtab+dev_remove_pack", align 4
@__kstrtab_dev_get_iflink = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_iflink = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_iflink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_iflink to i32), ptr @__kstrtab_dev_get_iflink, ptr @__kstrtabns_dev_get_iflink }, section "___ksymtab+dev_get_iflink", align 4
@__kstrtab_dev_fill_metadata_dst = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_fill_metadata_dst = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_fill_metadata_dst = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_fill_metadata_dst to i32), ptr @__kstrtab_dev_fill_metadata_dst, ptr @__kstrtabns_dev_fill_metadata_dst }, section "___ksymtab_gpl+dev_fill_metadata_dst", align 4
@dev_fill_forward_path.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"net/core/dev.c\00", align 1
@__kstrtab_dev_fill_forward_path = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_fill_forward_path = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_fill_forward_path = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_fill_forward_path to i32), ptr @__kstrtab_dev_fill_forward_path, ptr @__kstrtabns_dev_fill_forward_path }, section "___ksymtab_gpl+dev_fill_forward_path", align 4
@__kstrtab___dev_get_by_name = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_get_by_name = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_get_by_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_get_by_name to i32), ptr @__kstrtab___dev_get_by_name, ptr @__kstrtabns___dev_get_by_name }, section "___ksymtab+__dev_get_by_name", align 4
@__kstrtab_dev_get_by_name_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_name_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_name_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_name_rcu to i32), ptr @__kstrtab_dev_get_by_name_rcu, ptr @__kstrtabns_dev_get_by_name_rcu }, section "___ksymtab+dev_get_by_name_rcu", align 4
@__kstrtab_dev_get_by_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_name to i32), ptr @__kstrtab_dev_get_by_name, ptr @__kstrtabns_dev_get_by_name }, section "___ksymtab+dev_get_by_name", align 4
@__kstrtab___dev_get_by_index = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_get_by_index = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_get_by_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_get_by_index to i32), ptr @__kstrtab___dev_get_by_index, ptr @__kstrtabns___dev_get_by_index }, section "___ksymtab+__dev_get_by_index", align 4
@__kstrtab_dev_get_by_index_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_index_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_index_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_index_rcu to i32), ptr @__kstrtab_dev_get_by_index_rcu, ptr @__kstrtabns_dev_get_by_index_rcu }, section "___ksymtab+dev_get_by_index_rcu", align 4
@__kstrtab_dev_get_by_index = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_index = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_index to i32), ptr @__kstrtab_dev_get_by_index, ptr @__kstrtabns_dev_get_by_index }, section "___ksymtab+dev_get_by_index", align 4
@__kstrtab_dev_get_by_napi_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_napi_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_napi_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_napi_id to i32), ptr @__kstrtab_dev_get_by_napi_id, ptr @__kstrtabns_dev_get_by_napi_id }, section "___ksymtab+dev_get_by_napi_id", align 4
@devnet_rename_sem = internal global %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @devnet_rename_sem, i64 16), ptr getelementptr (i8, ptr @devnet_rename_sem, i64 16) } }, align 4
@__kstrtab_dev_getbyhwaddr_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_getbyhwaddr_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_getbyhwaddr_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_getbyhwaddr_rcu to i32), ptr @__kstrtab_dev_getbyhwaddr_rcu, ptr @__kstrtabns_dev_getbyhwaddr_rcu }, section "___ksymtab+dev_getbyhwaddr_rcu", align 4
@__kstrtab_dev_getfirstbyhwtype = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_getfirstbyhwtype = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_getfirstbyhwtype = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_getfirstbyhwtype to i32), ptr @__kstrtab_dev_getfirstbyhwtype, ptr @__kstrtabns_dev_getfirstbyhwtype }, section "___ksymtab+dev_getfirstbyhwtype", align 4
@__dev_get_by_flags.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"RTNL: assertion failed at %s (%d)\0A\00", align 1
@__kstrtab___dev_get_by_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_get_by_flags = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_get_by_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_get_by_flags to i32), ptr @__kstrtab___dev_get_by_flags, ptr @__kstrtabns___dev_get_by_flags }, section "___ksymtab+__dev_get_by_flags", align 4
@.str.3 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@_ctype = external dso_local local_unnamed_addr constant [0 x i8], align 1
@__kstrtab_dev_valid_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_valid_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_valid_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_valid_name to i32), ptr @__kstrtab_dev_valid_name, ptr @__kstrtabns_dev_valid_name }, section "___ksymtab+dev_valid_name", align 4
@__kstrtab_dev_alloc_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_alloc_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_alloc_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_alloc_name to i32), ptr @__kstrtab_dev_alloc_name, ptr @__kstrtabns_dev_alloc_name }, section "___ksymtab+dev_alloc_name", align 4
@dev_change_name.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"renamed from %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"name change rollback failed: %d\0A\00", align 1
@ifalias_mutex = internal global %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @ifalias_mutex, i64 12), ptr getelementptr (i8, ptr @ifalias_mutex, i64 12) } }, align 4
@__kstrtab_dev_set_alias = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_alias = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_alias = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_alias to i32), ptr @__kstrtab_dev_set_alias, ptr @__kstrtabns_dev_set_alias }, section "___ksymtab+dev_set_alias", align 4
@.str.7 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@__kstrtab_netdev_features_change = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_features_change = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_features_change = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_features_change to i32), ptr @__kstrtab_netdev_features_change, ptr @__kstrtabns_netdev_features_change }, section "___ksymtab+netdev_features_change", align 4
@__kstrtab_netdev_state_change = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_state_change = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_state_change = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_state_change to i32), ptr @__kstrtab_netdev_state_change, ptr @__kstrtabns_netdev_state_change }, section "___ksymtab+netdev_state_change", align 4
@__netdev_notify_peers.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab___netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__kstrtabns___netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__ksymtab___netdev_notify_peers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netdev_notify_peers to i32), ptr @__kstrtab___netdev_notify_peers, ptr @__kstrtabns___netdev_notify_peers }, section "___ksymtab+__netdev_notify_peers", align 4
@__kstrtab_netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_notify_peers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_notify_peers to i32), ptr @__kstrtab_netdev_notify_peers, ptr @__kstrtabns_netdev_notify_peers }, section "___ksymtab+netdev_notify_peers", align 4
@__kstrtab_dev_open = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_open = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_open = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_open to i32), ptr @__kstrtab_dev_open, ptr @__kstrtabns_dev_open }, section "___ksymtab+dev_open", align 4
@__kstrtab_dev_close_many = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_close_many = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_close_many = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_close_many to i32), ptr @__kstrtab_dev_close_many, ptr @__kstrtabns_dev_close_many }, section "___ksymtab+dev_close_many", align 4
@__kstrtab_dev_close = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_close = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_close = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_close to i32), ptr @__kstrtab_dev_close, ptr @__kstrtabns_dev_close }, section "___ksymtab+dev_close", align 4
@.str.8 = private unnamed_addr constant [41 x i8] c"netdevice: %s%s: failed to disable LRO!\0A\00", align 1
@__kstrtab_dev_disable_lro = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_disable_lro = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_disable_lro = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_disable_lro to i32), ptr @__kstrtab_dev_disable_lro, ptr @__kstrtabns_dev_disable_lro }, section "___ksymtab+dev_disable_lro", align 4
@.str.9 = private unnamed_addr constant [10 x i8] c"NETDEV_UP\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"NETDEV_DOWN\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"NETDEV_REBOOT\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"NETDEV_CHANGE\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"NETDEV_REGISTER\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"NETDEV_UNREGISTER\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"NETDEV_CHANGEMTU\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"NETDEV_CHANGEADDR\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"NETDEV_GOING_DOWN\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"NETDEV_CHANGENAME\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"NETDEV_FEAT_CHANGE\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"NETDEV_BONDING_FAILOVER\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"NETDEV_PRE_UP\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"NETDEV_PRE_TYPE_CHANGE\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"NETDEV_POST_TYPE_CHANGE\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"NETDEV_POST_INIT\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"NETDEV_RELEASE\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"NETDEV_NOTIFY_PEERS\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"NETDEV_JOIN\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"NETDEV_CHANGEUPPER\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"NETDEV_RESEND_IGMP\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"NETDEV_PRECHANGEMTU\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"NETDEV_CHANGEINFODATA\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"NETDEV_BONDING_INFO\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"NETDEV_PRECHANGEUPPER\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"NETDEV_CHANGELOWERSTATE\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"NETDEV_UDP_TUNNEL_PUSH_INFO\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"NETDEV_UDP_TUNNEL_DROP_INFO\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"NETDEV_CHANGE_TX_QUEUE_LEN\00", align 1
@.str.38 = private unnamed_addr constant [30 x i8] c"NETDEV_CVLAN_FILTER_PUSH_INFO\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"NETDEV_CVLAN_FILTER_DROP_INFO\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"NETDEV_SVLAN_FILTER_PUSH_INFO\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"NETDEV_SVLAN_FILTER_DROP_INFO\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"NETDEV_PRE_CHANGEADDR\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"UNKNOWN_NETDEV_EVENT\00", align 1
@__kstrtab_netdev_cmd_to_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_cmd_to_name = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_cmd_to_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_cmd_to_name to i32), ptr @__kstrtab_netdev_cmd_to_name, ptr @__kstrtabns_netdev_cmd_to_name }, section "___ksymtab_gpl+netdev_cmd_to_name", align 4
@pernet_ops_rwsem = external dso_local global %struct.rw_semaphore, align 4
@netdev_chain = internal global %struct.raw_notifier_head zeroinitializer, align 4
@dev_boot_phase = internal unnamed_addr global i1 false, align 4
@net_namespace_list = external dso_local global %struct.list_head, align 4
@__kstrtab_register_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice_notifier to i32), ptr @__kstrtab_register_netdevice_notifier, ptr @__kstrtabns_register_netdevice_notifier }, section "___ksymtab+register_netdevice_notifier", align 4
@__kstrtab_unregister_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_notifier to i32), ptr @__kstrtab_unregister_netdevice_notifier, ptr @__kstrtabns_unregister_netdevice_notifier }, section "___ksymtab+unregister_netdevice_notifier", align 4
@__kstrtab_register_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice_notifier_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice_notifier_net to i32), ptr @__kstrtab_register_netdevice_notifier_net, ptr @__kstrtabns_register_netdevice_notifier_net }, section "___ksymtab+register_netdevice_notifier_net", align 4
@__kstrtab_unregister_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_notifier_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_notifier_net to i32), ptr @__kstrtab_unregister_netdevice_notifier_net, ptr @__kstrtabns_unregister_netdevice_notifier_net }, section "___ksymtab+unregister_netdevice_notifier_net", align 4
@__kstrtab_register_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice_notifier_dev_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice_notifier_dev_net to i32), ptr @__kstrtab_register_netdevice_notifier_dev_net, ptr @__kstrtabns_register_netdevice_notifier_dev_net }, section "___ksymtab+register_netdevice_notifier_dev_net", align 4
@__kstrtab_unregister_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_notifier_dev_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_notifier_dev_net to i32), ptr @__kstrtab_unregister_netdevice_notifier_dev_net, ptr @__kstrtabns_unregister_netdevice_notifier_dev_net }, section "___ksymtab+unregister_netdevice_notifier_dev_net", align 4
@__kstrtab_call_netdevice_notifiers = external dso_local constant [0 x i8], align 1
@__kstrtabns_call_netdevice_notifiers = external dso_local constant [0 x i8], align 1
@__ksymtab_call_netdevice_notifiers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @call_netdevice_notifiers to i32), ptr @__kstrtab_call_netdevice_notifiers, ptr @__kstrtabns_call_netdevice_notifiers }, section "___ksymtab+call_netdevice_notifiers", align 4
@netstamp_needed_key = internal global %struct.static_key_false zeroinitializer, align 4
@__kstrtab_net_enable_timestamp = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_enable_timestamp = external dso_local constant [0 x i8], align 1
@__ksymtab_net_enable_timestamp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_enable_timestamp to i32), ptr @__kstrtab_net_enable_timestamp, ptr @__kstrtabns_net_enable_timestamp }, section "___ksymtab+net_enable_timestamp", align 4
@__kstrtab_net_disable_timestamp = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_disable_timestamp = external dso_local constant [0 x i8], align 1
@__ksymtab_net_disable_timestamp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_disable_timestamp to i32), ptr @__kstrtab_net_disable_timestamp, ptr @__kstrtabns_net_disable_timestamp }, section "___ksymtab+net_disable_timestamp", align 4
@__kstrtab_is_skb_forwardable = external dso_local constant [0 x i8], align 1
@__kstrtabns_is_skb_forwardable = external dso_local constant [0 x i8], align 1
@__ksymtab_is_skb_forwardable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @is_skb_forwardable to i32), ptr @__kstrtab_is_skb_forwardable, ptr @__kstrtabns_is_skb_forwardable }, section "___ksymtab_gpl+is_skb_forwardable", align 4
@__kstrtab___dev_forward_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_forward_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_forward_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_forward_skb to i32), ptr @__kstrtab___dev_forward_skb, ptr @__kstrtabns___dev_forward_skb }, section "___ksymtab_gpl+__dev_forward_skb", align 4
@__kstrtab_dev_forward_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_forward_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_forward_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_forward_skb to i32), ptr @__kstrtab_dev_forward_skb, ptr @__kstrtabns_dev_forward_skb }, section "___ksymtab_gpl+dev_forward_skb", align 4
@ptype_all = dso_local global %struct.list_head zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab_dev_nit_active = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_nit_active = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_nit_active = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_nit_active to i32), ptr @__kstrtab_dev_nit_active, ptr @__kstrtabns_dev_nit_active }, section "___ksymtab_gpl+dev_nit_active", align 4
@.str.44 = private unnamed_addr constant [34 x i8] c"\012protocol %04x is buggy, dev %s\0A\00", align 1
@__kstrtab_dev_queue_xmit_nit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_queue_xmit_nit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_queue_xmit_nit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_queue_xmit_nit to i32), ptr @__kstrtab_dev_queue_xmit_nit, ptr @__kstrtabns_dev_queue_xmit_nit }, section "___ksymtab_gpl+dev_queue_xmit_nit", align 4
@__kstrtab_netdev_txq_to_tc = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_txq_to_tc = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_txq_to_tc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_txq_to_tc to i32), ptr @__kstrtab_netdev_txq_to_tc, ptr @__kstrtabns_netdev_txq_to_tc }, section "___ksymtab+netdev_txq_to_tc", align 4
@xps_map_mutex = internal global %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @xps_map_mutex, i64 12), ptr getelementptr (i8, ptr @xps_map_mutex, i64 12) } }, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@xps_needed = internal global %struct.static_key zeroinitializer, section ".data..read_mostly", align 4
@xps_rxqs_needed = internal global %struct.static_key zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab___netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns___netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__ksymtab___netif_set_xps_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netif_set_xps_queue to i32), ptr @__kstrtab___netif_set_xps_queue, ptr @__kstrtabns___netif_set_xps_queue }, section "___ksymtab_gpl+__netif_set_xps_queue", align 4
@__kstrtab_netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_xps_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_xps_queue to i32), ptr @__kstrtab_netif_set_xps_queue, ptr @__kstrtabns_netif_set_xps_queue }, section "___ksymtab+netif_set_xps_queue", align 4
@__kstrtab_netdev_reset_tc = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_reset_tc = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_reset_tc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_reset_tc to i32), ptr @__kstrtab_netdev_reset_tc, ptr @__kstrtabns_netdev_reset_tc }, section "___ksymtab+netdev_reset_tc", align 4
@__kstrtab_netdev_set_tc_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_tc_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_tc_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_tc_queue to i32), ptr @__kstrtab_netdev_set_tc_queue, ptr @__kstrtabns_netdev_set_tc_queue }, section "___ksymtab+netdev_set_tc_queue", align 4
@__kstrtab_netdev_set_num_tc = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_num_tc = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_num_tc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_num_tc to i32), ptr @__kstrtab_netdev_set_num_tc, ptr @__kstrtabns_netdev_set_num_tc }, section "___ksymtab+netdev_set_num_tc", align 4
@__kstrtab_netdev_unbind_sb_channel = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_unbind_sb_channel = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_unbind_sb_channel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_unbind_sb_channel to i32), ptr @__kstrtab_netdev_unbind_sb_channel, ptr @__kstrtabns_netdev_unbind_sb_channel }, section "___ksymtab+netdev_unbind_sb_channel", align 4
@__kstrtab_netdev_bind_sb_channel_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_bind_sb_channel_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_bind_sb_channel_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_bind_sb_channel_queue to i32), ptr @__kstrtab_netdev_bind_sb_channel_queue, ptr @__kstrtabns_netdev_bind_sb_channel_queue }, section "___ksymtab+netdev_bind_sb_channel_queue", align 4
@__kstrtab_netdev_set_sb_channel = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_sb_channel = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_sb_channel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_sb_channel to i32), ptr @__kstrtab_netdev_set_sb_channel, ptr @__kstrtabns_netdev_set_sb_channel }, section "___ksymtab+netdev_set_sb_channel", align 4
@netif_set_real_num_tx_queues.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netif_set_real_num_tx_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_real_num_tx_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_real_num_tx_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_real_num_tx_queues to i32), ptr @__kstrtab_netif_set_real_num_tx_queues, ptr @__kstrtabns_netif_set_real_num_tx_queues }, section "___ksymtab+netif_set_real_num_tx_queues", align 4
@netif_set_real_num_rx_queues.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netif_set_real_num_rx_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_real_num_rx_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_real_num_rx_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_real_num_rx_queues to i32), ptr @__kstrtab_netif_set_real_num_rx_queues, ptr @__kstrtabns_netif_set_real_num_rx_queues }, section "___ksymtab+netif_set_real_num_rx_queues", align 4
@__kstrtab_netif_set_real_num_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_real_num_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_real_num_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_real_num_queues to i32), ptr @__kstrtab_netif_set_real_num_queues, ptr @__kstrtabns_netif_set_real_num_queues }, section "___ksymtab+netif_set_real_num_queues", align 4
@__kstrtab_netif_get_num_default_rss_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_get_num_default_rss_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_get_num_default_rss_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_get_num_default_rss_queues to i32), ptr @__kstrtab_netif_get_num_default_rss_queues, ptr @__kstrtabns_netif_get_num_default_rss_queues }, section "___ksymtab+netif_get_num_default_rss_queues", align 4
@__kstrtab___netif_schedule = external dso_local constant [0 x i8], align 1
@__kstrtabns___netif_schedule = external dso_local constant [0 x i8], align 1
@__ksymtab___netif_schedule = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netif_schedule to i32), ptr @__kstrtab___netif_schedule, ptr @__kstrtabns___netif_schedule }, section "___ksymtab+__netif_schedule", align 4
@__kstrtab_netif_schedule_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_schedule_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_schedule_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_schedule_queue to i32), ptr @__kstrtab_netif_schedule_queue, ptr @__kstrtabns_netif_schedule_queue }, section "___ksymtab+netif_schedule_queue", align 4
@__kstrtab_netif_tx_wake_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_tx_wake_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_tx_wake_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_tx_wake_queue to i32), ptr @__kstrtab_netif_tx_wake_queue, ptr @__kstrtabns_netif_tx_wake_queue }, section "___ksymtab+netif_tx_wake_queue", align 4
@__kstrtab___dev_kfree_skb_irq = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_kfree_skb_irq = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_kfree_skb_irq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_kfree_skb_irq to i32), ptr @__kstrtab___dev_kfree_skb_irq, ptr @__kstrtabns___dev_kfree_skb_irq }, section "___ksymtab+__dev_kfree_skb_irq", align 4
@__kstrtab___dev_kfree_skb_any = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_kfree_skb_any = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_kfree_skb_any = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_kfree_skb_any to i32), ptr @__kstrtab___dev_kfree_skb_any, ptr @__kstrtabns___dev_kfree_skb_any }, section "___ksymtab+__dev_kfree_skb_any", align 4
@__kstrtab_netif_device_detach = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_device_detach = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_device_detach = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_device_detach to i32), ptr @__kstrtab_netif_device_detach, ptr @__kstrtabns_netif_device_detach }, section "___ksymtab+netif_device_detach", align 4
@__kstrtab_netif_device_attach = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_device_attach = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_device_attach = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_device_attach to i32), ptr @__kstrtab_netif_device_attach, ptr @__kstrtabns_netif_device_attach }, section "___ksymtab+netif_device_attach", align 4
@__kstrtab_skb_checksum_help = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_checksum_help = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_checksum_help = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_checksum_help to i32), ptr @__kstrtab_skb_checksum_help, ptr @__kstrtabns_skb_checksum_help }, section "___ksymtab+skb_checksum_help", align 4
@skb_crc32c_csum_help.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@crc32c_csum_stub = external dso_local local_unnamed_addr global ptr, section ".data..read_mostly", align 4
@__kstrtab___skb_gso_segment = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_gso_segment = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_gso_segment = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_gso_segment to i32), ptr @__kstrtab___skb_gso_segment, ptr @__kstrtabns___skb_gso_segment }, section "___ksymtab+__skb_gso_segment", align 4
@netdev_rx_csum_fault.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_rx_csum_fault = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_rx_csum_fault = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_rx_csum_fault = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_rx_csum_fault to i32), ptr @__kstrtab_netdev_rx_csum_fault, ptr @__kstrtabns_netdev_rx_csum_fault }, section "___ksymtab+netdev_rx_csum_fault", align 4
@__kstrtab_passthru_features_check = external dso_local constant [0 x i8], align 1
@__kstrtabns_passthru_features_check = external dso_local constant [0 x i8], align 1
@__ksymtab_passthru_features_check = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @passthru_features_check to i32), ptr @__kstrtab_passthru_features_check, ptr @__kstrtabns_passthru_features_check }, section "___ksymtab+passthru_features_check", align 4
@__kstrtab_netif_skb_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_skb_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_skb_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_skb_features to i32), ptr @__kstrtab_netif_skb_features, ptr @__kstrtabns_netif_skb_features }, section "___ksymtab+netif_skb_features", align 4
@__kstrtab_skb_csum_hwoffload_help = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_csum_hwoffload_help = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_csum_hwoffload_help = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_csum_hwoffload_help to i32), ptr @__kstrtab_skb_csum_hwoffload_help, ptr @__kstrtabns_skb_csum_hwoffload_help }, section "___ksymtab+skb_csum_hwoffload_help", align 4
@__kstrtab_validate_xmit_skb_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_validate_xmit_skb_list = external dso_local constant [0 x i8], align 1
@__ksymtab_validate_xmit_skb_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @validate_xmit_skb_list to i32), ptr @__kstrtab_validate_xmit_skb_list, ptr @__kstrtabns_validate_xmit_skb_list }, section "___ksymtab_gpl+validate_xmit_skb_list", align 4
@__kstrtab_dev_loopback_xmit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_loopback_xmit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_loopback_xmit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_loopback_xmit to i32), ptr @__kstrtab_dev_loopback_xmit, ptr @__kstrtabns_dev_loopback_xmit }, section "___ksymtab+dev_loopback_xmit", align 4
@__kstrtab_dev_pick_tx_zero = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_pick_tx_zero = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_pick_tx_zero = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_pick_tx_zero to i32), ptr @__kstrtab_dev_pick_tx_zero, ptr @__kstrtabns_dev_pick_tx_zero }, section "___ksymtab+dev_pick_tx_zero", align 4
@__kstrtab_dev_pick_tx_cpu_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_pick_tx_cpu_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_pick_tx_cpu_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_pick_tx_cpu_id to i32), ptr @__kstrtab_dev_pick_tx_cpu_id, ptr @__kstrtabns_dev_pick_tx_cpu_id }, section "___ksymtab+dev_pick_tx_cpu_id", align 4
@__kstrtab_netdev_pick_tx = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_pick_tx = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_pick_tx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_pick_tx to i32), ptr @__kstrtab_netdev_pick_tx, ptr @__kstrtabns_netdev_pick_tx }, section "___ksymtab+netdev_pick_tx", align 4
@__kstrtab_dev_queue_xmit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_queue_xmit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_queue_xmit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_queue_xmit to i32), ptr @__kstrtab_dev_queue_xmit, ptr @__kstrtabns_dev_queue_xmit }, section "___ksymtab+dev_queue_xmit", align 4
@__kstrtab_dev_queue_xmit_accel = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_queue_xmit_accel = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_queue_xmit_accel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_queue_xmit_accel to i32), ptr @__kstrtab_dev_queue_xmit_accel, ptr @__kstrtabns_dev_queue_xmit_accel }, section "___ksymtab+dev_queue_xmit_accel", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 64
@__kstrtab___dev_direct_xmit = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_direct_xmit = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_direct_xmit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_direct_xmit to i32), ptr @__kstrtab___dev_direct_xmit, ptr @__kstrtabns___dev_direct_xmit }, section "___ksymtab+__dev_direct_xmit", align 4
@netdev_max_backlog = dso_local global i32 1000, section ".data..read_mostly", align 4
@__kstrtab_netdev_max_backlog = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_max_backlog = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_max_backlog = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_max_backlog to i32), ptr @__kstrtab_netdev_max_backlog, ptr @__kstrtabns_netdev_max_backlog }, section "___ksymtab+netdev_max_backlog", align 4
@netdev_tstamp_prequeue = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@netdev_budget = dso_local local_unnamed_addr global i32 300, section ".data..read_mostly", align 4
@netdev_budget_usecs = dso_local local_unnamed_addr global i32 20000, section ".data..read_mostly", align 4
@weight_p = dso_local local_unnamed_addr global i32 64, section ".data..read_mostly", align 4
@dev_weight_rx_bias = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@dev_weight_tx_bias = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@dev_rx_weight = dso_local local_unnamed_addr global i32 64, section ".data..read_mostly", align 4
@dev_tx_weight = dso_local local_unnamed_addr global i32 64, section ".data..read_mostly", align 4
@rps_sock_flow_table = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_rps_sock_flow_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_sock_flow_table = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_sock_flow_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_sock_flow_table to i32), ptr @__kstrtab_rps_sock_flow_table, ptr @__kstrtabns_rps_sock_flow_table }, section "___ksymtab+rps_sock_flow_table", align 4
@rps_cpu_mask = dso_local global i32 0, section ".data..read_mostly", align 4
@__kstrtab_rps_cpu_mask = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_cpu_mask = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_cpu_mask = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_cpu_mask to i32), ptr @__kstrtab_rps_cpu_mask, ptr @__kstrtabns_rps_cpu_mask }, section "___ksymtab+rps_cpu_mask", align 4
@rps_needed = dso_local global %struct.static_key_false zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab_rps_needed = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_needed = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_needed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_needed to i32), ptr @__kstrtab_rps_needed, ptr @__kstrtabns_rps_needed }, section "___ksymtab+rps_needed", align 4
@rfs_needed = dso_local global %struct.static_key_false zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab_rfs_needed = external dso_local constant [0 x i8], align 1
@__kstrtabns_rfs_needed = external dso_local constant [0 x i8], align 1
@__ksymtab_rfs_needed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rfs_needed to i32), ptr @__kstrtab_rfs_needed, ptr @__kstrtabns_rfs_needed }, section "___ksymtab+rfs_needed", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [16 x i32], align 4
@__kstrtab_rps_may_expire_flow = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_may_expire_flow = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_may_expire_flow = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_may_expire_flow to i32), ptr @__kstrtab_rps_may_expire_flow, ptr @__kstrtabns_rps_may_expire_flow }, section "___ksymtab+rps_may_expire_flow", align 4
@netdev_flow_limit_table_len = dso_local local_unnamed_addr global i32 4096, section ".data..read_mostly", align 4
@__kstrtab_do_xdp_generic = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_xdp_generic = external dso_local constant [0 x i8], align 1
@__ksymtab_do_xdp_generic = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_xdp_generic to i32), ptr @__kstrtab_do_xdp_generic, ptr @__kstrtabns_do_xdp_generic }, section "___ksymtab_gpl+do_xdp_generic", align 4
@__kstrtab_netif_rx = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_rx = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_rx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_rx to i32), ptr @__kstrtab_netif_rx, ptr @__kstrtabns_netif_rx }, section "___ksymtab+netif_rx", align 4
@irq_stat = external dso_local global %struct.irq_cpustat_t, section ".data..percpu..shared_aligned", align 64
@__kstrtab_netif_rx_ni = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_rx_ni = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_rx_ni = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_rx_ni to i32), ptr @__kstrtab_netif_rx_ni, ptr @__kstrtabns_netif_rx_ni }, section "___ksymtab+netif_rx_ni", align 4
@__kstrtab_netif_rx_any_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_rx_any_context = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_rx_any_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_rx_any_context to i32), ptr @__kstrtab_netif_rx_any_context, ptr @__kstrtabns_netif_rx_any_context }, section "___ksymtab+netif_rx_any_context", align 4
@netdev_is_rx_handler_busy.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_is_rx_handler_busy = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_is_rx_handler_busy = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_is_rx_handler_busy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_is_rx_handler_busy to i32), ptr @__kstrtab_netdev_is_rx_handler_busy, ptr @__kstrtabns_netdev_is_rx_handler_busy }, section "___ksymtab_gpl+netdev_is_rx_handler_busy", align 4
@__kstrtab_netdev_rx_handler_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_rx_handler_register = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_rx_handler_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_rx_handler_register to i32), ptr @__kstrtab_netdev_rx_handler_register, ptr @__kstrtabns_netdev_rx_handler_register }, section "___ksymtab_gpl+netdev_rx_handler_register", align 4
@netdev_rx_handler_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_rx_handler_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_rx_handler_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_rx_handler_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_rx_handler_unregister to i32), ptr @__kstrtab_netdev_rx_handler_unregister, ptr @__kstrtabns_netdev_rx_handler_unregister }, section "___ksymtab_gpl+netdev_rx_handler_unregister", align 4
@__kstrtab_netif_receive_skb_core = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_receive_skb_core = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_receive_skb_core = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_receive_skb_core to i32), ptr @__kstrtab_netif_receive_skb_core, ptr @__kstrtabns_netif_receive_skb_core }, section "___ksymtab+netif_receive_skb_core", align 4
@__kstrtab_netif_receive_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_receive_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_receive_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_receive_skb to i32), ptr @__kstrtab_netif_receive_skb, ptr @__kstrtabns_netif_receive_skb }, section "___ksymtab+netif_receive_skb", align 4
@__kstrtab_netif_receive_skb_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_receive_skb_list = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_receive_skb_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_receive_skb_list to i32), ptr @__kstrtab_netif_receive_skb_list, ptr @__kstrtabns_netif_receive_skb_list }, section "___ksymtab+netif_receive_skb_list", align 4
@__kstrtab___napi_schedule = external dso_local constant [0 x i8], align 1
@__kstrtabns___napi_schedule = external dso_local constant [0 x i8], align 1
@__ksymtab___napi_schedule = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__napi_schedule to i32), ptr @__kstrtab___napi_schedule, ptr @__kstrtabns___napi_schedule }, section "___ksymtab+__napi_schedule", align 4
@__kstrtab_napi_schedule_prep = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_schedule_prep = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_schedule_prep = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_schedule_prep to i32), ptr @__kstrtab_napi_schedule_prep, ptr @__kstrtabns_napi_schedule_prep }, section "___ksymtab+napi_schedule_prep", align 4
@__kstrtab___napi_schedule_irqoff = external dso_local constant [0 x i8], align 1
@__kstrtabns___napi_schedule_irqoff = external dso_local constant [0 x i8], align 1
@__ksymtab___napi_schedule_irqoff = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__napi_schedule_irqoff to i32), ptr @__kstrtab___napi_schedule_irqoff, ptr @__kstrtabns___napi_schedule_irqoff }, section "___ksymtab+__napi_schedule_irqoff", align 4
@napi_complete_done.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_napi_complete_done = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_complete_done = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_complete_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_complete_done to i32), ptr @__kstrtab_napi_complete_done, ptr @__kstrtabns_napi_complete_done }, section "___ksymtab+napi_complete_done", align 4
@__kstrtab_napi_busy_loop = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_busy_loop = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_busy_loop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_busy_loop to i32), ptr @__kstrtab_napi_busy_loop, ptr @__kstrtabns_napi_busy_loop }, section "___ksymtab+napi_busy_loop", align 4
@__kstrtab_dev_set_threaded = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_threaded = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_threaded = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_threaded to i32), ptr @__kstrtab_dev_set_threaded, ptr @__kstrtabns_dev_set_threaded }, section "___ksymtab+dev_set_threaded", align 4
@netif_napi_add.__print_once = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"%s() called with weight %d\0A\00", align 1
@__func__.netif_napi_add = private unnamed_addr constant [15 x i8] c"netif_napi_add\00", align 1
@__kstrtab_netif_napi_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_napi_add = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_napi_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_napi_add to i32), ptr @__kstrtab_netif_napi_add, ptr @__kstrtabns_netif_napi_add }, section "___ksymtab+netif_napi_add", align 4
@__kstrtab_napi_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_disable to i32), ptr @__kstrtab_napi_disable, ptr @__kstrtabns_napi_disable }, section "___ksymtab+napi_disable", align 4
@__kstrtab_napi_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_enable to i32), ptr @__kstrtab_napi_enable, ptr @__kstrtabns_napi_enable }, section "___ksymtab+napi_enable", align 4
@__kstrtab___netif_napi_del = external dso_local constant [0 x i8], align 1
@__kstrtabns___netif_napi_del = external dso_local constant [0 x i8], align 1
@__ksymtab___netif_napi_del = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netif_napi_del to i32), ptr @__kstrtab___netif_napi_del, ptr @__kstrtabns___netif_napi_del }, section "___ksymtab+__netif_napi_del", align 4
@netdev_has_upper_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_has_upper_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_has_upper_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_has_upper_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_has_upper_dev to i32), ptr @__kstrtab_netdev_has_upper_dev, ptr @__kstrtabns_netdev_has_upper_dev }, section "___ksymtab+netdev_has_upper_dev", align 4
@__kstrtab_netdev_has_upper_dev_all_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_has_upper_dev_all_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_has_upper_dev_all_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_has_upper_dev_all_rcu to i32), ptr @__kstrtab_netdev_has_upper_dev_all_rcu, ptr @__kstrtabns_netdev_has_upper_dev_all_rcu }, section "___ksymtab+netdev_has_upper_dev_all_rcu", align 4
@netdev_has_any_upper_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_has_any_upper_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_has_any_upper_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_has_any_upper_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_has_any_upper_dev to i32), ptr @__kstrtab_netdev_has_any_upper_dev, ptr @__kstrtabns_netdev_has_any_upper_dev }, section "___ksymtab+netdev_has_any_upper_dev", align 4
@netdev_master_upper_dev_get.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_master_upper_dev_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_master_upper_dev_get = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_master_upper_dev_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_master_upper_dev_get to i32), ptr @__kstrtab_netdev_master_upper_dev_get, ptr @__kstrtabns_netdev_master_upper_dev_get }, section "___ksymtab+netdev_master_upper_dev_get", align 4
@__kstrtab_netdev_adjacent_get_private = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_get_private = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_get_private = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_get_private to i32), ptr @__kstrtab_netdev_adjacent_get_private, ptr @__kstrtabns_netdev_adjacent_get_private }, section "___ksymtab+netdev_adjacent_get_private", align 4
@__kstrtab_netdev_upper_get_next_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_upper_get_next_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_upper_get_next_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_upper_get_next_dev_rcu to i32), ptr @__kstrtab_netdev_upper_get_next_dev_rcu, ptr @__kstrtabns_netdev_upper_get_next_dev_rcu }, section "___ksymtab+netdev_upper_get_next_dev_rcu", align 4
@__kstrtab_netdev_walk_all_upper_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_walk_all_upper_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_walk_all_upper_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_walk_all_upper_dev_rcu to i32), ptr @__kstrtab_netdev_walk_all_upper_dev_rcu, ptr @__kstrtabns_netdev_walk_all_upper_dev_rcu }, section "___ksymtab_gpl+netdev_walk_all_upper_dev_rcu", align 4
@__kstrtab_netdev_lower_get_next_private = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_next_private = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_next_private = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_next_private to i32), ptr @__kstrtab_netdev_lower_get_next_private, ptr @__kstrtabns_netdev_lower_get_next_private }, section "___ksymtab+netdev_lower_get_next_private", align 4
@__kstrtab_netdev_lower_get_next_private_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_next_private_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_next_private_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_next_private_rcu to i32), ptr @__kstrtab_netdev_lower_get_next_private_rcu, ptr @__kstrtabns_netdev_lower_get_next_private_rcu }, section "___ksymtab+netdev_lower_get_next_private_rcu", align 4
@__kstrtab_netdev_lower_get_next = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_next = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_next = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_next to i32), ptr @__kstrtab_netdev_lower_get_next, ptr @__kstrtabns_netdev_lower_get_next }, section "___ksymtab+netdev_lower_get_next", align 4
@__kstrtab_netdev_walk_all_lower_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_walk_all_lower_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_walk_all_lower_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_walk_all_lower_dev to i32), ptr @__kstrtab_netdev_walk_all_lower_dev, ptr @__kstrtabns_netdev_walk_all_lower_dev }, section "___ksymtab_gpl+netdev_walk_all_lower_dev", align 4
@__kstrtab_netdev_next_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_next_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_next_lower_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_next_lower_dev_rcu to i32), ptr @__kstrtab_netdev_next_lower_dev_rcu, ptr @__kstrtabns_netdev_next_lower_dev_rcu }, section "___ksymtab+netdev_next_lower_dev_rcu", align 4
@__kstrtab_netdev_walk_all_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_walk_all_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_walk_all_lower_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_walk_all_lower_dev_rcu to i32), ptr @__kstrtab_netdev_walk_all_lower_dev_rcu, ptr @__kstrtabns_netdev_walk_all_lower_dev_rcu }, section "___ksymtab_gpl+netdev_walk_all_lower_dev_rcu", align 4
@__kstrtab_netdev_lower_get_first_private_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_first_private_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_first_private_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_first_private_rcu to i32), ptr @__kstrtab_netdev_lower_get_first_private_rcu, ptr @__kstrtabns_netdev_lower_get_first_private_rcu }, section "___ksymtab+netdev_lower_get_first_private_rcu", align 4
@__kstrtab_netdev_master_upper_dev_get_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_master_upper_dev_get_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_master_upper_dev_get_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_master_upper_dev_get_rcu to i32), ptr @__kstrtab_netdev_master_upper_dev_get_rcu, ptr @__kstrtabns_netdev_master_upper_dev_get_rcu }, section "___ksymtab+netdev_master_upper_dev_get_rcu", align 4
@__kstrtab_netdev_upper_dev_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_upper_dev_link = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_upper_dev_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_upper_dev_link to i32), ptr @__kstrtab_netdev_upper_dev_link, ptr @__kstrtabns_netdev_upper_dev_link }, section "___ksymtab+netdev_upper_dev_link", align 4
@__const.netdev_master_upper_dev_link.priv = private unnamed_addr constant { i8, [3 x i8], ptr } { i8 3, [3 x i8] zeroinitializer, ptr null }, align 8
@__kstrtab_netdev_master_upper_dev_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_master_upper_dev_link = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_master_upper_dev_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_master_upper_dev_link to i32), ptr @__kstrtab_netdev_master_upper_dev_link, ptr @__kstrtabns_netdev_master_upper_dev_link }, section "___ksymtab+netdev_master_upper_dev_link", align 4
@__kstrtab_netdev_upper_dev_unlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_upper_dev_unlink = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_upper_dev_unlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_upper_dev_unlink to i32), ptr @__kstrtab_netdev_upper_dev_unlink, ptr @__kstrtabns_netdev_upper_dev_unlink }, section "___ksymtab+netdev_upper_dev_unlink", align 4
@__kstrtab_netdev_adjacent_change_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_change_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_change_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_change_prepare to i32), ptr @__kstrtab_netdev_adjacent_change_prepare, ptr @__kstrtabns_netdev_adjacent_change_prepare }, section "___ksymtab+netdev_adjacent_change_prepare", align 4
@__kstrtab_netdev_adjacent_change_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_change_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_change_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_change_commit to i32), ptr @__kstrtab_netdev_adjacent_change_commit, ptr @__kstrtabns_netdev_adjacent_change_commit }, section "___ksymtab+netdev_adjacent_change_commit", align 4
@__kstrtab_netdev_adjacent_change_abort = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_change_abort = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_change_abort = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_change_abort to i32), ptr @__kstrtab_netdev_adjacent_change_abort, ptr @__kstrtabns_netdev_adjacent_change_abort }, section "___ksymtab+netdev_adjacent_change_abort", align 4
@__kstrtab_netdev_bonding_info_change = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_bonding_info_change = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_bonding_info_change = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_bonding_info_change to i32), ptr @__kstrtab_netdev_bonding_info_change, ptr @__kstrtabns_netdev_bonding_info_change }, section "___ksymtab+netdev_bonding_info_change", align 4
@__kstrtab_netdev_get_xmit_slave = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_get_xmit_slave = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_get_xmit_slave = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_get_xmit_slave to i32), ptr @__kstrtab_netdev_get_xmit_slave, ptr @__kstrtabns_netdev_get_xmit_slave }, section "___ksymtab+netdev_get_xmit_slave", align 4
@__kstrtab_netdev_sk_get_lowest_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_sk_get_lowest_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_sk_get_lowest_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_sk_get_lowest_dev to i32), ptr @__kstrtab_netdev_sk_get_lowest_dev, ptr @__kstrtabns_netdev_sk_get_lowest_dev }, section "___ksymtab+netdev_sk_get_lowest_dev", align 4
@__kstrtab_netdev_lower_dev_get_private = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_dev_get_private = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_dev_get_private = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_dev_get_private to i32), ptr @__kstrtab_netdev_lower_dev_get_private, ptr @__kstrtabns_netdev_lower_dev_get_private }, section "___ksymtab+netdev_lower_dev_get_private", align 4
@netdev_lower_state_changed.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_lower_state_changed = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_state_changed = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_state_changed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_state_changed to i32), ptr @__kstrtab_netdev_lower_state_changed, ptr @__kstrtabns_netdev_lower_state_changed }, section "___ksymtab+netdev_lower_state_changed", align 4
@__kstrtab_dev_set_promiscuity = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_promiscuity = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_promiscuity = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_promiscuity to i32), ptr @__kstrtab_dev_set_promiscuity, ptr @__kstrtabns_dev_set_promiscuity }, section "___ksymtab+dev_set_promiscuity", align 4
@__kstrtab_dev_set_allmulti = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_allmulti = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_allmulti = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_allmulti to i32), ptr @__kstrtab_dev_set_allmulti, ptr @__kstrtabns_dev_set_allmulti }, section "___ksymtab+dev_set_allmulti", align 4
@__kstrtab_dev_get_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_flags to i32), ptr @__kstrtab_dev_get_flags, ptr @__kstrtabns_dev_get_flags }, section "___ksymtab+dev_get_flags", align 4
@__dev_change_flags.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_dev_change_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_flags to i32), ptr @__kstrtab_dev_change_flags, ptr @__kstrtabns_dev_change_flags }, section "___ksymtab+dev_change_flags", align 4
@__kstrtab___dev_set_mtu = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_set_mtu = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_set_mtu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_set_mtu to i32), ptr @__kstrtab___dev_set_mtu, ptr @__kstrtabns___dev_set_mtu }, section "___ksymtab+__dev_set_mtu", align 4
@dev_validate_mtu.__msg = internal constant [29 x i8] c"mtu less than device minimum\00", align 1
@dev_validate_mtu.__msg.50 = internal constant [32 x i8] c"mtu greater than device maximum\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"\013%s: %s\0A\00", align 1
@__kstrtab_dev_set_mtu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_mtu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_mtu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_mtu to i32), ptr @__kstrtab_dev_set_mtu, ptr @__kstrtabns_dev_set_mtu }, section "___ksymtab+dev_set_mtu", align 4
@.str.52 = private unnamed_addr constant [39 x i8] c"refused to change device tx_queue_len\0A\00", align 1
@__kstrtab_dev_set_group = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_group = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_group = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_group to i32), ptr @__kstrtab_dev_set_group, ptr @__kstrtabns_dev_set_group }, section "___ksymtab+dev_set_group", align 4
@__kstrtab_dev_pre_changeaddr_notify = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_pre_changeaddr_notify = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_pre_changeaddr_notify = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_pre_changeaddr_notify to i32), ptr @__kstrtab_dev_pre_changeaddr_notify, ptr @__kstrtabns_dev_pre_changeaddr_notify }, section "___ksymtab+dev_pre_changeaddr_notify", align 4
@__kstrtab_dev_set_mac_address = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_mac_address = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_mac_address = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_mac_address to i32), ptr @__kstrtab_dev_set_mac_address, ptr @__kstrtabns_dev_set_mac_address }, section "___ksymtab+dev_set_mac_address", align 4
@dev_addr_sem = internal global %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @dev_addr_sem, i64 16), ptr getelementptr (i8, ptr @dev_addr_sem, i64 16) } }, align 4
@__kstrtab_dev_set_mac_address_user = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_mac_address_user = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_mac_address_user = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_mac_address_user to i32), ptr @__kstrtab_dev_set_mac_address_user, ptr @__kstrtabns_dev_set_mac_address_user }, section "___ksymtab+dev_set_mac_address_user", align 4
@__kstrtab_dev_get_mac_address = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_mac_address = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_mac_address = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_mac_address to i32), ptr @__kstrtab_dev_get_mac_address, ptr @__kstrtabns_dev_get_mac_address }, section "___ksymtab+dev_get_mac_address", align 4
@__kstrtab_dev_change_carrier = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_carrier = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_carrier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_carrier to i32), ptr @__kstrtab_dev_change_carrier, ptr @__kstrtabns_dev_change_carrier }, section "___ksymtab+dev_change_carrier", align 4
@__kstrtab_dev_get_phys_port_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_phys_port_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_phys_port_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_phys_port_id to i32), ptr @__kstrtab_dev_get_phys_port_id, ptr @__kstrtabns_dev_get_phys_port_id }, section "___ksymtab+dev_get_phys_port_id", align 4
@__kstrtab_dev_get_phys_port_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_phys_port_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_phys_port_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_phys_port_name to i32), ptr @__kstrtab_dev_get_phys_port_name, ptr @__kstrtabns_dev_get_phys_port_name }, section "___ksymtab+dev_get_phys_port_name", align 4
@__kstrtab_dev_get_port_parent_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_port_parent_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_port_parent_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_port_parent_id to i32), ptr @__kstrtab_dev_get_port_parent_id, ptr @__kstrtabns_dev_get_port_parent_id }, section "___ksymtab+dev_get_port_parent_id", align 4
@__kstrtab_netdev_port_same_parent_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_port_same_parent_id = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_port_same_parent_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_port_same_parent_id to i32), ptr @__kstrtab_netdev_port_same_parent_id, ptr @__kstrtabns_netdev_port_same_parent_id }, section "___ksymtab+netdev_port_same_parent_id", align 4
@__kstrtab_dev_change_proto_down = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_proto_down = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_proto_down = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_proto_down to i32), ptr @__kstrtab_dev_change_proto_down, ptr @__kstrtabns_dev_change_proto_down }, section "___ksymtab+dev_change_proto_down", align 4
@__kstrtab_dev_change_proto_down_reason = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_proto_down_reason = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_proto_down_reason = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_proto_down_reason to i32), ptr @__kstrtab_dev_change_proto_down_reason, ptr @__kstrtabns_dev_change_proto_down_reason }, section "___ksymtab+dev_change_proto_down_reason", align 4
@__kstrtab_dev_xdp_prog_count = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_xdp_prog_count = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_xdp_prog_count = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_xdp_prog_count to i32), ptr @__kstrtab_dev_xdp_prog_count, ptr @__kstrtabns_dev_xdp_prog_count }, section "___ksymtab_gpl+dev_xdp_prog_count", align 4
@dev_change_xdp_fd.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_unregistering_wq = dso_local global %struct.wait_queue_head { %struct.spinlock zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @netdev_unregistering_wq, i64 4), ptr getelementptr (i8, ptr @netdev_unregistering_wq, i64 4) } }, align 4
@__netdev_update_features.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.53 = private unnamed_addr constant [52 x i8] c"set_features() failed (%d); wanted %pNF, left %pNF\0A\00", align 1
@__kstrtab_netdev_update_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_update_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_update_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_update_features to i32), ptr @__kstrtab_netdev_update_features, ptr @__kstrtabns_netdev_update_features }, section "___ksymtab+netdev_update_features", align 4
@__kstrtab_netdev_change_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_change_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_change_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_change_features to i32), ptr @__kstrtab_netdev_change_features, ptr @__kstrtabns_netdev_change_features }, section "___ksymtab+netdev_change_features", align 4
@__kstrtab_netif_stacked_transfer_operstate = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_stacked_transfer_operstate = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_stacked_transfer_operstate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_stacked_transfer_operstate to i32), ptr @__kstrtab_netif_stacked_transfer_operstate, ptr @__kstrtabns_netif_stacked_transfer_operstate }, section "___ksymtab+netif_stacked_transfer_operstate", align 4
@__kstrtab_netif_tx_stop_all_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_tx_stop_all_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_tx_stop_all_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_tx_stop_all_queues to i32), ptr @__kstrtab_netif_tx_stop_all_queues, ptr @__kstrtabns_netif_tx_stop_all_queues }, section "___ksymtab+netif_tx_stop_all_queues", align 4
@register_netdevice.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.54 = private unnamed_addr constant [53 x i8] c"netdevice: %s%s: Buggy VLAN acceleration in driver!\0A\00", align 1
@__kstrtab_register_netdevice = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice to i32), ptr @__kstrtab_register_netdevice, ptr @__kstrtabns_register_netdevice }, section "___ksymtab+register_netdevice", align 4
@init_net = external dso_local global %struct.net, align 64
@__kstrtab_init_dummy_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_init_dummy_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_init_dummy_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @init_dummy_netdev to i32), ptr @__kstrtab_init_dummy_netdev, ptr @__kstrtabns_init_dummy_netdev }, section "___ksymtab_gpl+init_dummy_netdev", align 4
@__kstrtab_register_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdev to i32), ptr @__kstrtab_register_netdev, ptr @__kstrtabns_register_netdev }, section "___ksymtab+register_netdev", align 4
@__kstrtab_netdev_refcnt_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_refcnt_read = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_refcnt_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_refcnt_read to i32), ptr @__kstrtab_netdev_refcnt_read, ptr @__kstrtabns_netdev_refcnt_read }, section "___ksymtab+netdev_refcnt_read", align 4
@netdev_unregister_timeout_secs = dso_local local_unnamed_addr global i32 10, section ".data..read_mostly", align 4
@net_todo_list = internal global %struct.list_head { ptr @net_todo_list, ptr @net_todo_list }, align 4
@.str.55 = private unnamed_addr constant [34 x i8] c"\013network todo '%s' but state %d\0A\00", align 1
@__kstrtab_netdev_stats_to_stats64 = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_stats_to_stats64 = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_stats_to_stats64 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_stats_to_stats64 to i32), ptr @__kstrtab_netdev_stats_to_stats64, ptr @__kstrtabns_netdev_stats_to_stats64 }, section "___ksymtab+netdev_stats_to_stats64", align 4
@__kstrtab_dev_get_stats = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_stats = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_stats = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_stats to i32), ptr @__kstrtab_dev_get_stats, ptr @__kstrtabns_dev_get_stats }, section "___ksymtab+dev_get_stats", align 4
@__kstrtab_dev_fetch_sw_netstats = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_fetch_sw_netstats = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_fetch_sw_netstats = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_fetch_sw_netstats to i32), ptr @__kstrtab_dev_fetch_sw_netstats, ptr @__kstrtabns_dev_fetch_sw_netstats }, section "___ksymtab_gpl+dev_fetch_sw_netstats", align 4
@__kstrtab_dev_get_tstats64 = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_tstats64 = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_tstats64 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_tstats64 to i32), ptr @__kstrtab_dev_get_tstats64, ptr @__kstrtabns_dev_get_tstats64 }, section "___ksymtab_gpl+dev_get_tstats64", align 4
@default_ethtool_ops = internal constant %struct.ethtool_ops zeroinitializer, align 4
@__kstrtab_netdev_set_default_ethtool_ops = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_default_ethtool_ops = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_default_ethtool_ops = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_default_ethtool_ops to i32), ptr @__kstrtab_netdev_set_default_ethtool_ops, ptr @__kstrtabns_netdev_set_default_ethtool_ops }, section "___ksymtab_gpl+netdev_set_default_ethtool_ops", align 4
@.str.56 = private unnamed_addr constant [60 x i8] c"\013alloc_netdev: Unable to allocate device with zero queues\0A\00", align 1
@.str.57 = private unnamed_addr constant [63 x i8] c"\013alloc_netdev: Unable to allocate device with zero RX queues\0A\00", align 1
@__kstrtab_alloc_netdev_mqs = external dso_local constant [0 x i8], align 1
@__kstrtabns_alloc_netdev_mqs = external dso_local constant [0 x i8], align 1
@__ksymtab_alloc_netdev_mqs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @alloc_netdev_mqs to i32), ptr @__kstrtab_alloc_netdev_mqs, ptr @__kstrtabns_alloc_netdev_mqs }, section "___ksymtab+alloc_netdev_mqs", align 4
@free_netdev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_free_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_free_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_free_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @free_netdev to i32), ptr @__kstrtab_free_netdev, ptr @__kstrtabns_free_netdev }, section "___ksymtab+free_netdev", align 4
@__kstrtab_synchronize_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_net = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_net to i32), ptr @__kstrtab_synchronize_net, ptr @__kstrtabns_synchronize_net }, section "___ksymtab+synchronize_net", align 4
@unregister_netdevice_queue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_unregister_netdevice_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_queue to i32), ptr @__kstrtab_unregister_netdevice_queue, ptr @__kstrtabns_unregister_netdevice_queue }, section "___ksymtab+unregister_netdevice_queue", align 4
@unregister_netdevice_many.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_unregister_netdevice_many = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_many = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_many = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_many to i32), ptr @__kstrtab_unregister_netdevice_many, ptr @__kstrtabns_unregister_netdevice_many }, section "___ksymtab+unregister_netdevice_many", align 4
@__kstrtab_unregister_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdev to i32), ptr @__kstrtab_unregister_netdev, ptr @__kstrtabns_unregister_netdev }, section "___ksymtab+unregister_netdev", align 4
@__dev_change_net_namespace.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab___dev_change_net_namespace = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_change_net_namespace = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_change_net_namespace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_change_net_namespace to i32), ptr @__kstrtab___dev_change_net_namespace, ptr @__kstrtabns___dev_change_net_namespace }, section "___ksymtab_gpl+__dev_change_net_namespace", align 4
@__kstrtab_netdev_increment_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_increment_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_increment_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_increment_features to i32), ptr @__kstrtab_netdev_increment_features, ptr @__kstrtabns_netdev_increment_features }, section "___ksymtab+netdev_increment_features", align 4
@.str.58 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__kstrtab_netdev_printk = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_printk = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_printk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_printk to i32), ptr @__kstrtab_netdev_printk, ptr @__kstrtabns_netdev_printk }, section "___ksymtab+netdev_printk", align 4
@.str.59 = private unnamed_addr constant [3 x i8] c"\010\00", align 1
@__kstrtab_netdev_emerg = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_emerg = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_emerg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_emerg to i32), ptr @__kstrtab_netdev_emerg, ptr @__kstrtabns_netdev_emerg }, section "___ksymtab+netdev_emerg", align 4
@.str.60 = private unnamed_addr constant [3 x i8] c"\011\00", align 1
@__kstrtab_netdev_alert = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_alert = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_alert = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_alert to i32), ptr @__kstrtab_netdev_alert, ptr @__kstrtabns_netdev_alert }, section "___ksymtab+netdev_alert", align 4
@.str.61 = private unnamed_addr constant [3 x i8] c"\012\00", align 1
@__kstrtab_netdev_crit = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_crit = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_crit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_crit to i32), ptr @__kstrtab_netdev_crit, ptr @__kstrtabns_netdev_crit }, section "___ksymtab+netdev_crit", align 4
@__kstrtab_netdev_err = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_err = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_err = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_err to i32), ptr @__kstrtab_netdev_err, ptr @__kstrtabns_netdev_err }, section "___ksymtab+netdev_err", align 4
@.str.62 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@__kstrtab_netdev_warn = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_warn = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_warn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_warn to i32), ptr @__kstrtab_netdev_warn, ptr @__kstrtabns_netdev_warn }, section "___ksymtab+netdev_warn", align 4
@.str.63 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@__kstrtab_netdev_notice = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_notice = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_notice = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_notice to i32), ptr @__kstrtab_netdev_notice, ptr @__kstrtabns_netdev_notice }, section "___ksymtab+netdev_notice", align 4
@.str.64 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@__kstrtab_netdev_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_info = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_info to i32), ptr @__kstrtab_netdev_info, ptr @__kstrtabns_netdev_info }, section "___ksymtab+netdev_info", align 4
@__initcall__kmod_dev__861_11039_net_dev_init4 = internal global ptr @net_dev_init, section ".initcall4.init", align 4
@ptype_base = dso_local global [16 x %struct.list_head] zeroinitializer, section ".data..read_mostly", align 4
@dev_fwd_path.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@__dev_open.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__dev_close_many.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"(unnamed net_device)\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c" (uninitialized)\00", align 1
@.str.67 = private unnamed_addr constant [17 x i8] c" (unregistering)\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c" (unregistered)\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c" (released)\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c" (dummy)\00", align 1
@netdev_reg_state.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.72 = private unnamed_addr constant [26 x i8] c"%s: unknown reg_state %d\0A\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c" (unknown)\00", align 1
@call_netdevice_notifiers_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@static_key_initialized = external dso_local local_unnamed_addr global i8, align 1
@.str.74 = private unnamed_addr constant [27 x i8] c"include/linux/jump_label.h\00", align 1
@.str.75 = private unnamed_addr constant [61 x i8] c"%s(): static key '%pS' used before call to jump_label_init()\00", align 1
@__func__.static_key_slow_inc = private unnamed_addr constant [20 x i8] c"static_key_slow_inc\00", align 1
@__func__.static_key_slow_dec = private unnamed_addr constant [20 x i8] c"static_key_slow_dec\00", align 1
@.str.76 = private unnamed_addr constant [104 x i8] c"Number of in use tx queues changed invalidating tc mappings. Priority traffic classification disabled!\0A\00", align 1
@.str.77 = private unnamed_addr constant [103 x i8] c"Number of in use tx queues changed. Priority %i to tc mapping %i is no longer valid. Setting map to 0\0A\00", align 1
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@skb_warn_bad_offload.null_features = internal constant i64 0, align 8
@.str.78 = private unnamed_addr constant [23 x i8] c"%s: caps=(%pNF, %pNF)\0A\00", align 1
@.str.79 = private unnamed_addr constant [24 x i8] c"include/linux/if_vlan.h\00", align 1
@.str.80 = private unnamed_addr constant [17 x i8] c"hw csum failure\0A\00", align 1
@movable_zone = external dso_local local_unnamed_addr global i32, align 4
@__tracepoint_net_dev_start_xmit = external dso_local global %struct.tracepoint, align 4
@__tracepoint_net_dev_xmit = external dso_local global %struct.tracepoint, align 4
@.str.84 = private unnamed_addr constant [44 x i8] c"\014%s: invalid qcount, qoffset %u for tc %u\0A\00", align 1
@sk_tx_queue_set.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.85 = private unnamed_addr constant [19 x i8] c"include/net/sock.h\00", align 1
@.str.86 = private unnamed_addr constant [62 x i8] c"\014%s selects TX queue %d, but real number of TX queues is %d\0A\00", align 1
@.str.87 = private unnamed_addr constant [43 x i8] c"\012Virtual device %s asks to queue packet!\0A\00", align 1
@.str.88 = private unnamed_addr constant [52 x i8] c"\012Dead loop on virtual device %s, fix it urgently!\0A\00", align 1
@__tracepoint_net_dev_queue = external dso_local global %struct.tracepoint, align 4
@__tracepoint_qdisc_enqueue = external dso_local global %struct.tracepoint, align 4
@net_rand_noise = external dso_local global i32, section ".data..percpu", align 4
@netif_get_rxqueue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.90 = private unnamed_addr constant [63 x i8] c"%s received packet on queue %u, but number of RX queues is %u\0A\00", align 1
@bpf_master_redirect_enabled_key = external dso_local global %struct.static_key_false, align 4
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@__tracepoint_xdp_exception = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_rx = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_rx_entry = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_rx_exit = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_rx_ni_entry = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_rx_ni_exit = external dso_local global %struct.tracepoint, align 4
@generic_xdp_needed_key = internal global %struct.static_key_false zeroinitializer, align 4
@__tracepoint_netif_receive_skb = external dso_local global %struct.tracepoint, align 4
@get_rps_cpu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@memalloc_socks_key = external dso_local global %struct.static_key_false, align 4
@__tracepoint_netif_receive_skb_entry = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_receive_skb_exit = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_receive_skb_list_entry = external dso_local global %struct.tracepoint, align 4
@__tracepoint_netif_receive_skb_list_exit = external dso_local global %struct.tracepoint, align 4
@napi_hash = internal global [256 x %struct.hlist_head] zeroinitializer, section ".data..read_mostly", align 4
@__tracepoint_napi_poll = external dso_local global %struct.tracepoint, align 4
@.str.93 = private unnamed_addr constant [11 x i8] c"napi/%s-%d\00", align 1
@.str.94 = private unnamed_addr constant [34 x i8] c"\013kthread_run failed with err %d\0A\00", align 1
@__napi_poll.__print_once = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.95 = private unnamed_addr constant [65 x i8] c"NAPI poll function %pS returned %d, exceeding its budget of %d.\0A\00", align 1
@__napi_poll.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.96 = private unnamed_addr constant [47 x i8] c"\014%s: Budget exhausted after napi rescheduled\0A\00", align 1
@.str.97 = private unnamed_addr constant [8 x i8] c"backlog\00", align 1
@napi_hash_lock = internal global %struct.spinlock zeroinitializer, align 4
@napi_gen_id = internal unnamed_addr global i32 16, align 4
@__netdev_upper_dev_link.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__netdev_has_upper_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__netdev_master_upper_dev_get.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"master\00", align 1
@.str.99 = private unnamed_addr constant [50 x i8] c"\013Adjacency does not exist for device %s from %s\0A\00", align 1
@__netdev_upper_dev_unlink.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.100 = private unnamed_addr constant [9 x i8] c"upper_%s\00", align 1
@.str.101 = private unnamed_addr constant [9 x i8] c"lower_%s\00", align 1
@__dev_set_promiscuity.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.102 = private unnamed_addr constant [98 x i8] c"promiscuity touches roof, set promiscuity failed. promiscuity feature of device might be broken.\0A\00", align 1
@.str.103 = private unnamed_addr constant [33 x i8] c"\016device %s %s promiscuous mode\0A\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"entered\00", align 1
@.str.105 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@__dev_set_allmulti.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.106 = private unnamed_addr constant [89 x i8] c"allmulti touches roof, set allmulti failed. allmulti feature of device might be broken.\0A\00", align 1
@.str.107 = private unnamed_addr constant [44 x i8] c"netdevice: %s%s: failed to disable GRO_HW!\0A\00", align 1
@dev_xdp_attach.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@dev_xdp_attach.__msg.109 = internal constant [34 x i8] c"Only one XDP mode flag can be set\00", align 1
@dev_xdp_attach.__msg.110 = internal constant [54 x i8] c"More than one program loaded, unset mode is ambiguous\00", align 1
@dev_xdp_attach.__msg.112 = internal constant [34 x i8] c"Can't replace active BPF XDP link\00", align 1
@dev_xdp_attach.__msg.113 = internal constant [57 x i8] c"Cannot attach when an upper device already has a program\00", align 1
@dev_xdp_attach.__msg.115 = internal constant [39 x i8] c"Active program does not match expected\00", align 1
@dev_xdp_attach.__msg.121 = internal constant [54 x i8] c"Underlying driver does not support XDP in native mode\00", align 1
@.str.122 = private unnamed_addr constant [36 x i8] c"mixed HW and IP checksum settings.\0A\00", align 1
@.str.123 = private unnamed_addr constant [48 x i8] c"netdevice: %s%s: failed to disable %pNF on %s!\0A\00", align 1
@udp_tunnel_get_rx_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.124 = private unnamed_addr constant [25 x i8] c"include/net/udp_tunnel.h\00", align 1
@udp_tunnel_drop_rx_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_get_rx_ctag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_drop_rx_ctag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_get_rx_stag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_drop_rx_stag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@list_netdevice.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.125 = private unnamed_addr constant [73 x i8] c"\010unregister_netdevice: waiting for %s to become free. Usage count = %d\0A\00", align 1
@unlist_netdevice.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_all_backlogs.flush_cpus = internal global %struct.cpumask zeroinitializer, align 4
@flush_all_backlogs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@system_highpri_wq = external dso_local local_unnamed_addr global ptr, align 4
@flush_works = internal global %struct.work_struct zeroinitializer, section ".data..percpu", align 4
@dev_xdp_uninstall.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_has_any_lower_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.126 = private unnamed_addr constant [16 x i8] c"%s %s %s%s: %pV\00", align 1
@.str.127 = private unnamed_addr constant [12 x i8] c"%s%s%s: %pV\00", align 1
@.str.128 = private unnamed_addr constant [25 x i8] c"%s(NULL net_device): %pV\00", align 1
@netdev_net_ops = internal global %struct.pernet_operations { %struct.list_head zeroinitializer, ptr @netdev_init, ptr null, ptr @netdev_exit, ptr null, ptr null, i32 0 }, section ".init.data", align 4
@loopback_net_ops = external dso_local global %struct.pernet_operations, section ".init.data", align 4
@default_device_ops = internal global %struct.pernet_operations { %struct.list_head zeroinitializer, ptr null, ptr null, ptr @default_device_exit, ptr @default_device_exit_batch, ptr null, i32 0 }, section ".init.data", align 4
@.str.129 = private unnamed_addr constant [13 x i8] c"net/dev:dead\00", align 1
@netdev_exit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"dev%d\00", align 1
@.str.131 = private unnamed_addr constant [7 x i8] c"dev%%d\00", align 1
@.str.132 = private unnamed_addr constant [41 x i8] c"\010%s: failed to move %s to init_net: %d\0A\00", align 1
@__func__.default_device_exit = private unnamed_addr constant [20 x i8] c"default_device_exit\00", align 1
@__tracepoint_consume_skb = external dso_local global %struct.tracepoint, align 4
@__tracepoint_kfree_skb = external dso_local global %struct.tracepoint, align 4
@llvm.compiler.used = appending global [182 x ptr] [ptr @__initcall__kmod_dev__861_11039_net_dev_init4, ptr @__ksymtab___dev_change_net_namespace, ptr @__ksymtab___dev_direct_xmit, ptr @__ksymtab___dev_forward_skb, ptr @__ksymtab___dev_get_by_flags, ptr @__ksymtab___dev_get_by_index, ptr @__ksymtab___dev_get_by_name, ptr @__ksymtab___dev_kfree_skb_any, ptr @__ksymtab___dev_kfree_skb_irq, ptr @__ksymtab___dev_remove_pack, ptr @__ksymtab___dev_set_mtu, ptr @__ksymtab___napi_schedule, ptr @__ksymtab___napi_schedule_irqoff, ptr @__ksymtab___netdev_notify_peers, ptr @__ksymtab___netif_napi_del, ptr @__ksymtab___netif_schedule, ptr @__ksymtab___netif_set_xps_queue, ptr @__ksymtab___skb_gso_segment, ptr @__ksymtab_alloc_netdev_mqs, ptr @__ksymtab_call_netdevice_notifiers, ptr @__ksymtab_dev_add_pack, ptr @__ksymtab_dev_alloc_name, ptr @__ksymtab_dev_base_lock, ptr @__ksymtab_dev_change_carrier, ptr @__ksymtab_dev_change_flags, ptr @__ksymtab_dev_change_proto_down, ptr @__ksymtab_dev_change_proto_down_reason, ptr @__ksymtab_dev_close, ptr @__ksymtab_dev_close_many, ptr @__ksymtab_dev_disable_lro, ptr @__ksymtab_dev_fetch_sw_netstats, ptr @__ksymtab_dev_fill_forward_path, ptr @__ksymtab_dev_fill_metadata_dst, ptr @__ksymtab_dev_forward_skb, ptr @__ksymtab_dev_get_by_index, ptr @__ksymtab_dev_get_by_index_rcu, ptr @__ksymtab_dev_get_by_name, ptr @__ksymtab_dev_get_by_name_rcu, ptr @__ksymtab_dev_get_by_napi_id, ptr @__ksymtab_dev_get_flags, ptr @__ksymtab_dev_get_iflink, ptr @__ksymtab_dev_get_mac_address, ptr @__ksymtab_dev_get_phys_port_id, ptr @__ksymtab_dev_get_phys_port_name, ptr @__ksymtab_dev_get_port_parent_id, ptr @__ksymtab_dev_get_stats, ptr @__ksymtab_dev_get_tstats64, ptr @__ksymtab_dev_getbyhwaddr_rcu, ptr @__ksymtab_dev_getfirstbyhwtype, ptr @__ksymtab_dev_loopback_xmit, ptr @__ksymtab_dev_nit_active, ptr @__ksymtab_dev_open, ptr @__ksymtab_dev_pick_tx_cpu_id, ptr @__ksymtab_dev_pick_tx_zero, ptr @__ksymtab_dev_pre_changeaddr_notify, ptr @__ksymtab_dev_queue_xmit, ptr @__ksymtab_dev_queue_xmit_accel, ptr @__ksymtab_dev_queue_xmit_nit, ptr @__ksymtab_dev_remove_pack, ptr @__ksymtab_dev_set_alias, ptr @__ksymtab_dev_set_allmulti, ptr @__ksymtab_dev_set_group, ptr @__ksymtab_dev_set_mac_address, ptr @__ksymtab_dev_set_mac_address_user, ptr @__ksymtab_dev_set_mtu, ptr @__ksymtab_dev_set_promiscuity, ptr @__ksymtab_dev_set_threaded, ptr @__ksymtab_dev_valid_name, ptr @__ksymtab_dev_xdp_prog_count, ptr @__ksymtab_do_xdp_generic, ptr @__ksymtab_free_netdev, ptr @__ksymtab_init_dummy_netdev, ptr @__ksymtab_is_skb_forwardable, ptr @__ksymtab_napi_busy_loop, ptr @__ksymtab_napi_complete_done, ptr @__ksymtab_napi_disable, ptr @__ksymtab_napi_enable, ptr @__ksymtab_napi_schedule_prep, ptr @__ksymtab_net_disable_timestamp, ptr @__ksymtab_net_enable_timestamp, ptr @__ksymtab_netdev_adjacent_change_abort, ptr @__ksymtab_netdev_adjacent_change_commit, ptr @__ksymtab_netdev_adjacent_change_prepare, ptr @__ksymtab_netdev_adjacent_get_private, ptr @__ksymtab_netdev_alert, ptr @__ksymtab_netdev_bind_sb_channel_queue, ptr @__ksymtab_netdev_bonding_info_change, ptr @__ksymtab_netdev_change_features, ptr @__ksymtab_netdev_cmd_to_name, ptr @__ksymtab_netdev_crit, ptr @__ksymtab_netdev_emerg, ptr @__ksymtab_netdev_err, ptr @__ksymtab_netdev_features_change, ptr @__ksymtab_netdev_get_xmit_slave, ptr @__ksymtab_netdev_has_any_upper_dev, ptr @__ksymtab_netdev_has_upper_dev, ptr @__ksymtab_netdev_has_upper_dev_all_rcu, ptr @__ksymtab_netdev_increment_features, ptr @__ksymtab_netdev_info, ptr @__ksymtab_netdev_is_rx_handler_busy, ptr @__ksymtab_netdev_lower_dev_get_private, ptr @__ksymtab_netdev_lower_get_first_private_rcu, ptr @__ksymtab_netdev_lower_get_next, ptr @__ksymtab_netdev_lower_get_next_private, ptr @__ksymtab_netdev_lower_get_next_private_rcu, ptr @__ksymtab_netdev_lower_state_changed, ptr @__ksymtab_netdev_master_upper_dev_get, ptr @__ksymtab_netdev_master_upper_dev_get_rcu, ptr @__ksymtab_netdev_master_upper_dev_link, ptr @__ksymtab_netdev_max_backlog, ptr @__ksymtab_netdev_name_in_use, ptr @__ksymtab_netdev_name_node_alt_create, ptr @__ksymtab_netdev_name_node_alt_destroy, ptr @__ksymtab_netdev_next_lower_dev_rcu, ptr @__ksymtab_netdev_notice, ptr @__ksymtab_netdev_notify_peers, ptr @__ksymtab_netdev_pick_tx, ptr @__ksymtab_netdev_port_same_parent_id, ptr @__ksymtab_netdev_printk, ptr @__ksymtab_netdev_refcnt_read, ptr @__ksymtab_netdev_reset_tc, ptr @__ksymtab_netdev_rx_csum_fault, ptr @__ksymtab_netdev_rx_handler_register, ptr @__ksymtab_netdev_rx_handler_unregister, ptr @__ksymtab_netdev_set_default_ethtool_ops, ptr @__ksymtab_netdev_set_num_tc, ptr @__ksymtab_netdev_set_sb_channel, ptr @__ksymtab_netdev_set_tc_queue, ptr @__ksymtab_netdev_sk_get_lowest_dev, ptr @__ksymtab_netdev_state_change, ptr @__ksymtab_netdev_stats_to_stats64, ptr @__ksymtab_netdev_txq_to_tc, ptr @__ksymtab_netdev_unbind_sb_channel, ptr @__ksymtab_netdev_update_features, ptr @__ksymtab_netdev_upper_dev_link, ptr @__ksymtab_netdev_upper_dev_unlink, ptr @__ksymtab_netdev_upper_get_next_dev_rcu, ptr @__ksymtab_netdev_walk_all_lower_dev, ptr @__ksymtab_netdev_walk_all_lower_dev_rcu, ptr @__ksymtab_netdev_walk_all_upper_dev_rcu, ptr @__ksymtab_netdev_warn, ptr @__ksymtab_netif_device_attach, ptr @__ksymtab_netif_device_detach, ptr @__ksymtab_netif_get_num_default_rss_queues, ptr @__ksymtab_netif_napi_add, ptr @__ksymtab_netif_receive_skb, ptr @__ksymtab_netif_receive_skb_core, ptr @__ksymtab_netif_receive_skb_list, ptr @__ksymtab_netif_rx, ptr @__ksymtab_netif_rx_any_context, ptr @__ksymtab_netif_rx_ni, ptr @__ksymtab_netif_schedule_queue, ptr @__ksymtab_netif_set_real_num_queues, ptr @__ksymtab_netif_set_real_num_rx_queues, ptr @__ksymtab_netif_set_real_num_tx_queues, ptr @__ksymtab_netif_set_xps_queue, ptr @__ksymtab_netif_skb_features, ptr @__ksymtab_netif_stacked_transfer_operstate, ptr @__ksymtab_netif_tx_stop_all_queues, ptr @__ksymtab_netif_tx_wake_queue, ptr @__ksymtab_passthru_features_check, ptr @__ksymtab_register_netdev, ptr @__ksymtab_register_netdevice, ptr @__ksymtab_register_netdevice_notifier, ptr @__ksymtab_register_netdevice_notifier_dev_net, ptr @__ksymtab_register_netdevice_notifier_net, ptr @__ksymtab_rfs_needed, ptr @__ksymtab_rps_cpu_mask, ptr @__ksymtab_rps_may_expire_flow, ptr @__ksymtab_rps_needed, ptr @__ksymtab_rps_sock_flow_table, ptr @__ksymtab_skb_checksum_help, ptr @__ksymtab_skb_csum_hwoffload_help, ptr @__ksymtab_softnet_data, ptr @__ksymtab_synchronize_net, ptr @__ksymtab_unregister_netdev, ptr @__ksymtab_unregister_netdevice_many, ptr @__ksymtab_unregister_netdevice_notifier, ptr @__ksymtab_unregister_netdevice_notifier_dev_net, ptr @__ksymtab_unregister_netdevice_notifier_net, ptr @__ksymtab_unregister_netdevice_queue, ptr @__ksymtab_validate_xmit_skb_list], section "llvm.metadata"
@switch.table.netdev_cmd_to_name = private unnamed_addr constant [34 x ptr] [ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.42, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41], align 4
@switch.table.__netdev_printk.134 = private unnamed_addr constant [6 x ptr] [ptr @.str.66, ptr @.str.58, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70], align 4

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_name_in_use(ptr noundef %0, ptr noundef %1) #0 {
  %3 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %4 = tail call i32 @full_name_hash(ptr noundef %0, ptr noundef %1, i32 noundef %3) #40
  %5 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 23
  %6 = load ptr, ptr %5, align 16
  %7 = mul i32 %4, 1640531527
  %8 = lshr i32 %7, 24
  %9 = getelementptr %struct.hlist_head, ptr %6, i32 %8
  br label %10

10:                                               ; preds = %14, %2
  %11 = phi ptr [ %9, %2 ], [ %12, %14 ]
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.netdev_name_node, ptr %12, i32 0, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = tail call i32 @strcmp(ptr noundef %16, ptr noundef %1) #39
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %10

19:                                               ; preds = %14, %10
  %20 = icmp ne ptr %12, null
  ret i1 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_name_node_alt_create(ptr noundef %0, ptr noundef %1) #1 {
  %3 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %4 = tail call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef %1, i32 noundef %3) #40
  %5 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %6 = mul i32 %4, 1640531527
  %7 = lshr i32 %6, 24
  %8 = getelementptr %struct.hlist_head, ptr %5, i32 %7
  br label %9

9:                                                ; preds = %13, %2
  %10 = phi ptr [ %8, %2 ], [ %11, %13 ]
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.netdev_name_node, ptr %11, i32 0, i32 3
  %15 = load ptr, ptr %14, align 4
  %16 = tail call i32 @strcmp(ptr noundef %15, ptr noundef %1) #39
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %44, label %9

18:                                               ; preds = %9
  %19 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %20 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %19, i32 noundef 3264, i32 noundef 24) #41
  %21 = icmp eq ptr %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.hlist_node, ptr %20, i32 0, i32 1
  %24 = getelementptr inbounds %struct.netdev_name_node, ptr %20, i32 0, i32 2
  store ptr %0, ptr %24, align 8
  %25 = getelementptr inbounds %struct.netdev_name_node, ptr %20, i32 0, i32 3
  store ptr %1, ptr %25, align 4
  %26 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %27 = tail call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef %1, i32 noundef %26) #40
  %28 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %29 = mul i32 %27, 1640531527
  %30 = lshr i32 %29, 24
  %31 = getelementptr %struct.hlist_head, ptr %28, i32 %30
  %32 = load ptr, ptr %31, align 4
  store ptr %32, ptr %20, align 8
  store volatile ptr %31, ptr %23, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !9
  store volatile ptr %20, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.hlist_node, ptr %32, i32 0, i32 1
  store volatile ptr %20, ptr %35, align 4
  br label %36

36:                                               ; preds = %34, %22
  %37 = getelementptr inbounds %struct.netdev_name_node, ptr %20, i32 0, i32 1
  %38 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 1
  %39 = load ptr, ptr %38, align 16
  %40 = getelementptr inbounds %struct.netdev_name_node, ptr %39, i32 0, i32 1
  %41 = getelementptr inbounds %struct.netdev_name_node, ptr %39, i32 0, i32 1, i32 1
  %42 = load ptr, ptr %41, align 4
  store ptr %37, ptr %41, align 4
  store ptr %40, ptr %37, align 8
  %43 = getelementptr inbounds %struct.netdev_name_node, ptr %20, i32 0, i32 1, i32 1
  store ptr %42, ptr %43, align 4
  store volatile ptr %37, ptr %42, align 4
  br label %44

44:                                               ; preds = %36, %18, %13
  %45 = phi i32 [ 0, %36 ], [ -12, %18 ], [ -17, %13 ]
  ret i32 %45
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_name_node_alt_destroy(ptr noundef readonly %0, ptr noundef %1) #1 {
  %3 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %4 = tail call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef %1, i32 noundef %3) #40
  %5 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %6 = mul i32 %4, 1640531527
  %7 = lshr i32 %6, 24
  %8 = getelementptr %struct.hlist_head, ptr %5, i32 %7
  br label %9

9:                                                ; preds = %13, %2
  %10 = phi ptr [ %8, %2 ], [ %11, %13 ]
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.netdev_name_node, ptr %11, i32 0, i32 3
  %15 = load ptr, ptr %14, align 4
  %16 = tail call i32 @strcmp(ptr noundef %15, ptr noundef %1) #39
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %9

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.netdev_name_node, ptr %11, i32 0, i32 3
  %20 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 16
  %22 = icmp eq ptr %11, %21
  br i1 %22, label %41, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.netdev_name_node, ptr %11, i32 0, i32 2
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, %0
  br i1 %26, label %27, label %41

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.netdev_name_node, ptr %11, i32 0, i32 1
  %29 = getelementptr inbounds %struct.netdev_name_node, ptr %11, i32 0, i32 1, i32 1
  %30 = load ptr, ptr %29, align 4
  %31 = load ptr, ptr %28, align 4
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  store ptr %30, ptr %32, align 4
  store volatile ptr %31, ptr %30, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %28, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %29, align 4
  %33 = load ptr, ptr %11, align 4
  %34 = getelementptr inbounds %struct.hlist_node, ptr %11, i32 0, i32 1
  %35 = load ptr, ptr %34, align 4
  store volatile ptr %33, ptr %35, align 4
  %36 = icmp eq ptr %33, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.hlist_node, ptr %33, i32 0, i32 1
  store volatile ptr %35, ptr %38, align 4
  br label %39

39:                                               ; preds = %37, %27
  store volatile ptr inttoptr (i32 290 to ptr), ptr %34, align 4
  %40 = load ptr, ptr %19, align 4
  tail call void @kfree(ptr noundef %40) #39
  tail call void @kfree(ptr noundef nonnull %11) #39
  br label %41

41:                                               ; preds = %39, %23, %18, %9
  %42 = phi i32 [ 0, %39 ], [ -22, %23 ], [ -22, %18 ], [ -2, %9 ]
  ret i32 %42
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_add_pack(ptr noundef %0) #1 {
  %2 = load i16, ptr %0, align 4
  %3 = icmp eq i16 %2, 768
  %4 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 2
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %3, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 11
  %9 = select i1 %6, ptr @ptype_all, ptr %8
  br label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 12
  %12 = lshr i16 %2, 8
  %13 = and i16 %12, 15
  %14 = zext i16 %13 to i32
  %15 = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %14
  %16 = select i1 %6, ptr %15, ptr %11
  br label %17

17:                                               ; preds = %10, %7
  %18 = phi ptr [ %9, %7 ], [ %16, %10 ]
  tail call void @_raw_spin_lock(ptr noundef nonnull @ptype_lock) #39
  %19 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 9
  %20 = load ptr, ptr %18, align 4
  store ptr %20, ptr %19, align 4
  %21 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 9, i32 1
  store ptr %18, ptr %21, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !10
  store volatile ptr %19, ptr %18, align 4
  %22 = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  store ptr %19, ptr %22, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %23 = load i16, ptr @ptype_lock, align 4
  %24 = add i16 %23, 1
  store i16 %24, ptr @ptype_lock, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__dev_remove_pack(ptr noundef %0) #1 {
  %2 = load i16, ptr %0, align 4
  %3 = icmp eq i16 %2, 768
  %4 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 2
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %3, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 11
  %9 = select i1 %6, ptr @ptype_all, ptr %8
  br label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 12
  %12 = lshr i16 %2, 8
  %13 = and i16 %12, 15
  %14 = zext i16 %13 to i32
  %15 = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %14
  %16 = select i1 %6, ptr %15, ptr %11
  br label %17

17:                                               ; preds = %10, %7
  %18 = phi ptr [ %9, %7 ], [ %16, %10 ]
  tail call void @_raw_spin_lock(ptr noundef nonnull @ptype_lock) #39
  br label %19

19:                                               ; preds = %23, %17
  %20 = phi ptr [ %18, %17 ], [ %21, %23 ]
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, %18
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr i8, ptr %21, i32 -28
  %25 = icmp eq ptr %24, %0
  br i1 %25, label %26, label %19

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 9
  %28 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 9, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = load ptr, ptr %27, align 4
  %31 = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  store ptr %29, ptr %31, align 4
  store volatile ptr %30, ptr %29, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %28, align 4
  br label %34

32:                                               ; preds = %19
  %33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str, ptr noundef %0) #42
  br label %34

34:                                               ; preds = %32, %26
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %35 = load i16, ptr @ptype_lock, align 4
  %36 = add i16 %35, 1
  store i16 %36, ptr @ptype_lock, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_remove_pack(ptr noundef %0) #1 {
  %2 = load i16, ptr %0, align 4
  %3 = icmp eq i16 %2, 768
  %4 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 2
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %3, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 11
  %9 = select i1 %6, ptr @ptype_all, ptr %8
  br label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 12
  %12 = lshr i16 %2, 8
  %13 = and i16 %12, 15
  %14 = zext i16 %13 to i32
  %15 = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %14
  %16 = select i1 %6, ptr %15, ptr %11
  br label %17

17:                                               ; preds = %10, %7
  %18 = phi ptr [ %9, %7 ], [ %16, %10 ]
  tail call void @_raw_spin_lock(ptr noundef nonnull @ptype_lock) #39
  br label %19

19:                                               ; preds = %23, %17
  %20 = phi ptr [ %18, %17 ], [ %21, %23 ]
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, %18
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr i8, ptr %21, i32 -28
  %25 = icmp eq ptr %24, %0
  br i1 %25, label %26, label %19

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 9
  %28 = getelementptr inbounds %struct.packet_type, ptr %0, i32 0, i32 9, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = load ptr, ptr %27, align 4
  %31 = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  store ptr %29, ptr %31, align 4
  store volatile ptr %30, ptr %29, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %28, align 4
  br label %34

32:                                               ; preds = %19
  %33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str, ptr noundef %0) #42
  br label %34

34:                                               ; preds = %32, %26
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %35 = load i16, ptr @ptype_lock, align 4
  %36 = add i16 %35, 1
  store i16 %36, ptr @ptype_lock, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %37 = tail call i32 @rtnl_is_locked() #39
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  tail call void @synchronize_rcu_expedited() #39
  br label %41

40:                                               ; preds = %34
  tail call void @synchronize_rcu() #39
  br label %41

41:                                               ; preds = %40, %39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @synchronize_net() #1 {
  %1 = tail call i32 @rtnl_is_locked() #39
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @synchronize_rcu_expedited() #39
  br label %5

4:                                                ; preds = %0
  tail call void @synchronize_rcu() #39
  br label %5

5:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_get_iflink(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %3 = load ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.net_device_ops, ptr %3, i32 0, i32 63
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 %7(ptr noundef %0) #39
  br label %14

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 17
  %13 = load i32, ptr %12, align 4
  br label %14

14:                                               ; preds = %11, %9
  %15 = phi i32 [ %10, %9 ], [ %13, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_fill_metadata_dst(ptr noundef %0, ptr noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 64
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %73, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 4
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, -2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %73, label %15

15:                                               ; preds = %10
  %16 = inttoptr i32 %13 to ptr
  %17 = getelementptr inbounds %struct.dst_entry, ptr %16, i32 0, i32 7
  %18 = load i16, ptr %17, align 4
  %19 = and i16 %18, 128
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %73, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.metadata_dst, ptr %16, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %73

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.metadata_dst, ptr %16, i32 0, i32 2, i32 0, i32 2
  %27 = load i8, ptr %26, align 8
  %28 = tail call ptr @metadata_dst_alloc(i8 noundef zeroext %27, i32 noundef 0, i32 noundef 2592) #39
  %29 = icmp eq ptr %28, null
  br i1 %29, label %73, label %30

30:                                               ; preds = %25
  %31 = zext i8 %27 to i32
  %32 = getelementptr inbounds %struct.metadata_dst, ptr %16, i32 0, i32 2
  %33 = getelementptr inbounds %struct.metadata_dst, ptr %28, i32 0, i32 2
  %34 = add nuw nsw i32 %31, 72
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 %33, ptr noundef align 8 %32, i32 %34, i1 false) #39
  %35 = getelementptr inbounds %struct.metadata_dst, ptr %28, i32 0, i32 2, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8
  %37 = icmp eq ptr %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %30
  %39 = tail call i32 @dst_cache_init(ptr noundef %35, i32 noundef 2592) #39
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  tail call void @metadata_dst_free(ptr noundef nonnull %28) #39
  %42 = inttoptr i32 %39 to ptr
  br label %57

43:                                               ; preds = %38, %30
  %44 = load i32, ptr %11, align 8
  %45 = icmp ne i32 %44, 0
  %46 = and i32 %44, 1
  %47 = icmp eq i32 %46, 0
  %48 = and i1 %45, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = and i32 %44, -2
  %51 = inttoptr i32 %50 to ptr
  tail call void @dst_release(ptr noundef %51) #39
  br label %52

52:                                               ; preds = %49, %43
  %53 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 3
  %54 = load i16, ptr %53, align 2
  %55 = or i16 %54, 16384
  store i16 %55, ptr %53, align 2
  %56 = ptrtoint ptr %28 to i32
  store i32 %56, ptr %11, align 8
  br label %57

57:                                               ; preds = %52, %41
  %58 = phi ptr [ %28, %52 ], [ %42, %41 ]
  %59 = icmp ugt ptr %58, inttoptr (i32 -4096 to ptr)
  %60 = getelementptr inbounds %struct.metadata_dst, ptr %58, i32 0, i32 2
  %61 = icmp eq ptr %60, null
  %62 = select i1 %59, i1 true, i1 %61
  br i1 %62, label %73, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.metadata_dst, ptr %58, i32 0, i32 2, i32 0, i32 3
  %65 = load i8, ptr %64, align 1
  %66 = and i8 %65, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %73, label %68, !prof !15

68:                                               ; preds = %63
  %69 = load ptr, ptr %3, align 8
  %70 = getelementptr inbounds %struct.net_device_ops, ptr %69, i32 0, i32 64
  %71 = load ptr, ptr %70, align 4
  %72 = tail call i32 %71(ptr noundef %0, ptr noundef %1) #39
  br label %73

73:                                               ; preds = %68, %63, %57, %25, %21, %15, %10, %6, %2
  %74 = phi i32 [ %72, %68 ], [ -22, %6 ], [ -22, %2 ], [ -12, %57 ], [ -22, %63 ], [ -12, %21 ], [ -12, %25 ], [ -12, %10 ], [ -12, %15 ]
  ret i32 %74
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_fill_forward_path(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  %4 = alloca %struct.net_device_path_ctx, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #39
  store ptr %0, ptr %4, align 4
  %5 = getelementptr inbounds %struct.net_device_path_ctx, ptr %4, i32 0, i32 1
  store ptr %1, ptr %5, align 4
  %6 = getelementptr inbounds %struct.net_device_path_ctx, ptr %4, i32 0, i32 2
  store i32 0, ptr %6, align 4
  %7 = getelementptr inbounds %struct.net_device_path_ctx, ptr %4, i32 0, i32 3
  store i64 0, ptr %7, align 4
  store i32 0, ptr %2, align 4
  %8 = icmp eq ptr %0, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.net_device_ops, ptr %11, i32 0, i32 73
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %54, label %25

15:                                               ; preds = %3
  store i32 1, ptr %2, align 4
  br label %63

16:                                               ; preds = %53
  %17 = load ptr, ptr %4, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %54, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.net_device, ptr %17, i32 0, i32 16
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.net_device_ops, ptr %21, i32 0, i32 73
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %54, label %25

25:                                               ; preds = %19, %9
  %26 = phi ptr [ %17, %19 ], [ %0, %9 ]
  %27 = load i32, ptr %2, align 4
  %28 = add i32 %27, 1
  store i32 %28, ptr %2, align 4
  %29 = icmp sgt i32 %27, 4
  %30 = load i1, ptr @dev_fwd_path.__already_done, align 1
  %31 = xor i1 %30, true
  %32 = select i1 %29, i1 %31, i1 false
  br i1 %32, label %33, label %34, !prof !15

33:                                               ; preds = %25
  store i1 true, ptr @dev_fwd_path.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 654, i32 noundef 9, ptr noundef null) #39
  br label %34

34:                                               ; preds = %33, %25
  %35 = getelementptr %struct.net_device_path_stack, ptr %2, i32 0, i32 1, i32 %27
  %36 = icmp eq ptr %35, null
  %37 = or i1 %29, %36
  br i1 %37, label %73, label %38

38:                                               ; preds = %34
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %35, i8 0, i32 20, i1 false)
  %39 = load ptr, ptr %4, align 4
  %40 = getelementptr inbounds %struct.net_device, ptr %39, i32 0, i32 16
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %struct.net_device_ops, ptr %41, i32 0, i32 73
  %43 = load ptr, ptr %42, align 4
  %44 = call i32 %43(ptr noundef nonnull %4, ptr noundef nonnull %35) #39
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %38
  %47 = load ptr, ptr %4, align 4
  %48 = icmp eq ptr %26, %47
  %49 = load i1, ptr @dev_fill_forward_path.__already_done, align 1
  %50 = xor i1 %49, true
  %51 = select i1 %48, i1 %50, i1 false
  br i1 %51, label %52, label %53, !prof !15

52:                                               ; preds = %46
  store i1 true, ptr @dev_fill_forward_path.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 683, i32 noundef 9, ptr noundef null) #39
  br label %53

53:                                               ; preds = %52, %46
  br i1 %48, label %73, label %16

54:                                               ; preds = %19, %16, %9
  %55 = phi i32 [ 0, %9 ], [ %44, %19 ], [ %44, %16 ]
  %56 = load i32, ptr %2, align 4
  %57 = add i32 %56, 1
  store i32 %57, ptr %2, align 4
  %58 = icmp sgt i32 %56, 4
  %59 = load i1, ptr @dev_fwd_path.__already_done, align 1
  %60 = xor i1 %59, true
  %61 = select i1 %58, i1 %60, i1 false
  br i1 %61, label %62, label %63, !prof !15

62:                                               ; preds = %54
  store i1 true, ptr @dev_fwd_path.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 654, i32 noundef 9, ptr noundef null) #39
  br label %63

63:                                               ; preds = %62, %54, %15
  %64 = phi i1 [ false, %15 ], [ %58, %54 ], [ %58, %62 ]
  %65 = phi i32 [ 0, %15 ], [ %55, %54 ], [ %55, %62 ]
  %66 = phi i32 [ 0, %15 ], [ %56, %54 ], [ %56, %62 ]
  %67 = getelementptr %struct.net_device_path_stack, ptr %2, i32 0, i32 1, i32 %66
  %68 = icmp eq ptr %67, null
  %69 = or i1 %64, %68
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  store i32 0, ptr %67, align 4
  %71 = load ptr, ptr %4, align 4
  %72 = getelementptr %struct.net_device_path_stack, ptr %2, i32 0, i32 1, i32 %66, i32 1
  store ptr %71, ptr %72, align 4
  br label %73

73:                                               ; preds = %70, %63, %53, %38, %34
  %74 = phi i32 [ %65, %70 ], [ -1, %63 ], [ -1, %34 ], [ -1, %38 ], [ -1, %53 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #39
  ret i32 %74
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local ptr @__dev_get_by_name(ptr noundef %0, ptr noundef %1) #0 {
  %3 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %4 = tail call i32 @full_name_hash(ptr noundef %0, ptr noundef %1, i32 noundef %3) #40
  %5 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 23
  %6 = load ptr, ptr %5, align 16
  %7 = mul i32 %4, 1640531527
  %8 = lshr i32 %7, 24
  %9 = getelementptr %struct.hlist_head, ptr %6, i32 %8
  br label %10

10:                                               ; preds = %14, %2
  %11 = phi ptr [ %9, %2 ], [ %12, %14 ]
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.netdev_name_node, ptr %12, i32 0, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = tail call i32 @strcmp(ptr noundef %16, ptr noundef %1) #39
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %10

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.netdev_name_node, ptr %12, i32 0, i32 2
  %21 = load ptr, ptr %20, align 4
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi ptr [ %21, %19 ], [ null, %10 ]
  ret ptr %23
}

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_name_rcu(ptr noundef %0, ptr noundef %1) #6 {
  %3 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %4 = tail call i32 @full_name_hash(ptr noundef %0, ptr noundef %1, i32 noundef %3) #40
  %5 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 23
  %6 = load ptr, ptr %5, align 16
  %7 = mul i32 %4, 1640531527
  %8 = lshr i32 %7, 24
  %9 = getelementptr %struct.hlist_head, ptr %6, i32 %8
  br label %10

10:                                               ; preds = %14, %2
  %11 = phi ptr [ %9, %2 ], [ %12, %14 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.netdev_name_node, ptr %12, i32 0, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = tail call i32 @strcmp(ptr noundef %16, ptr noundef %1) #39
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %10

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.netdev_name_node, ptr %12, i32 0, i32 2
  %21 = load ptr, ptr %20, align 4
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi ptr [ %21, %19 ], [ null, %10 ]
  ret ptr %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_name(ptr noundef %0, ptr noundef %1) #1 {
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %3 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %4 = tail call i32 @full_name_hash(ptr noundef %0, ptr noundef %1, i32 noundef %3) #40
  %5 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 23
  %6 = load ptr, ptr %5, align 16
  %7 = mul i32 %4, 1640531527
  %8 = lshr i32 %7, 24
  %9 = getelementptr %struct.hlist_head, ptr %6, i32 %8
  br label %10

10:                                               ; preds = %14, %2
  %11 = phi ptr [ %9, %2 ], [ %12, %14 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.netdev_name_node, ptr %12, i32 0, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = tail call i32 @strcmp(ptr noundef %16, ptr noundef %1) #39
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %10

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.netdev_name_node, ptr %12, i32 0, i32 2
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %25 = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 99
  %26 = load ptr, ptr %25, align 8
  %27 = ptrtoint ptr %26 to i32
  %28 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %29 = inttoptr i32 %28 to ptr
  %30 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %29) #34, !srcloc !18
  %31 = add i32 %30, %27
  %32 = inttoptr i32 %31 to ptr
  %33 = load i32, ptr %32, align 4
  %34 = add i32 %33, 1
  store i32 %34, ptr %32, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %24) #39, !srcloc !19
  br label %35

35:                                               ; preds = %23, %19, %10
  %36 = phi ptr [ null, %19 ], [ %21, %23 ], [ null, %10 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret ptr %36
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local ptr @__dev_get_by_index(ptr nocapture noundef readonly %0, i32 noundef %1) #7 {
  %3 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 24
  %4 = load ptr, ptr %3, align 4
  %5 = and i32 %1, 255
  %6 = getelementptr %struct.hlist_head, ptr %4, i32 %5
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  %9 = getelementptr i8, ptr %7, i32 -560
  %10 = icmp eq ptr %9, null
  %11 = or i1 %8, %10
  br i1 %11, label %24, label %12

12:                                               ; preds = %17, %2
  %13 = phi ptr [ %21, %17 ], [ %9, %2 ]
  %14 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 17
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 85
  %19 = load ptr, ptr %18, align 16
  %20 = icmp eq ptr %19, null
  %21 = getelementptr i8, ptr %19, i32 -560
  %22 = icmp eq ptr %21, null
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %12

24:                                               ; preds = %17, %12, %2
  %25 = phi ptr [ null, %2 ], [ null, %17 ], [ %13, %12 ]
  ret ptr %25
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_index_rcu(ptr nocapture noundef readonly %0, i32 noundef %1) #8 {
  %3 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 24
  %4 = load ptr, ptr %3, align 4
  %5 = and i32 %1, 255
  %6 = getelementptr %struct.hlist_head, ptr %4, i32 %5
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  %9 = getelementptr i8, ptr %7, i32 -560
  %10 = icmp eq ptr %9, null
  %11 = or i1 %8, %10
  br i1 %11, label %24, label %12

12:                                               ; preds = %17, %2
  %13 = phi ptr [ %21, %17 ], [ %9, %2 ]
  %14 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 17
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 85
  %19 = load volatile ptr, ptr %18, align 16
  %20 = icmp eq ptr %19, null
  %21 = getelementptr i8, ptr %19, i32 -560
  %22 = icmp eq ptr %21, null
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %12

24:                                               ; preds = %17, %12, %2
  %25 = phi ptr [ null, %2 ], [ null, %17 ], [ %13, %12 ]
  ret ptr %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_index(ptr nocapture noundef readonly %0, i32 noundef %1) #1 {
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %3 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 24
  %4 = load ptr, ptr %3, align 4
  %5 = and i32 %1, 255
  %6 = getelementptr %struct.hlist_head, ptr %4, i32 %5
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  %9 = getelementptr i8, ptr %7, i32 -560
  %10 = icmp eq ptr %9, null
  %11 = or i1 %8, %10
  br i1 %11, label %36, label %12

12:                                               ; preds = %17, %2
  %13 = phi ptr [ %21, %17 ], [ %9, %2 ]
  %14 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 17
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 85
  %19 = load volatile ptr, ptr %18, align 16
  %20 = icmp eq ptr %19, null
  %21 = getelementptr i8, ptr %19, i32 -560
  %22 = icmp eq ptr %21, null
  %23 = or i1 %20, %22
  br i1 %23, label %36, label %12

24:                                               ; preds = %12
  %25 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %26 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 99
  %27 = load ptr, ptr %26, align 8
  %28 = ptrtoint ptr %27 to i32
  %29 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %30 = inttoptr i32 %29 to ptr
  %31 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %30) #34, !srcloc !18
  %32 = add i32 %31, %28
  %33 = inttoptr i32 %32 to ptr
  %34 = load i32, ptr %33, align 4
  %35 = add i32 %34, 1
  store i32 %35, ptr %33, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %25) #39, !srcloc !19
  br label %36

36:                                               ; preds = %24, %17, %2
  %37 = phi ptr [ %13, %24 ], [ null, %2 ], [ null, %17 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret ptr %37
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_napi_id(i32 noundef %0) #8 {
  %2 = icmp ult i32 %0, 17
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = and i32 %0, 255
  %5 = getelementptr [256 x %struct.hlist_head], ptr @napi_hash, i32 0, i32 %4
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  %8 = getelementptr i8, ptr %6, i32 -200
  %9 = icmp eq ptr %8, null
  %10 = or i1 %7, %9
  br i1 %10, label %26, label %11

11:                                               ; preds = %16, %3
  %12 = phi ptr [ %20, %16 ], [ %8, %3 ]
  %13 = getelementptr inbounds %struct.napi_struct, ptr %12, i32 0, i32 14
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, %0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.napi_struct, ptr %12, i32 0, i32 13
  %18 = load volatile ptr, ptr %17, align 8
  %19 = icmp eq ptr %18, null
  %20 = getelementptr i8, ptr %18, i32 -200
  %21 = icmp eq ptr %20, null
  %22 = or i1 %19, %21
  br i1 %22, label %26, label %11

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.napi_struct, ptr %12, i32 0, i32 6
  %25 = load ptr, ptr %24, align 4
  br label %26

26:                                               ; preds = %23, %16, %3, %1
  %27 = phi ptr [ null, %1 ], [ %25, %23 ], [ null, %3 ], [ null, %16 ]
  ret ptr %27
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_get_name(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  tail call void @down_read(ptr noundef nonnull @devnet_rename_sem) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %4 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 24
  %5 = load ptr, ptr %4, align 4
  %6 = and i32 %2, 255
  %7 = getelementptr %struct.hlist_head, ptr %5, i32 %6
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  %10 = getelementptr i8, ptr %8, i32 -560
  %11 = icmp eq ptr %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %27, label %13

13:                                               ; preds = %18, %3
  %14 = phi ptr [ %22, %18 ], [ %10, %3 ]
  %15 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 17
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %16, %2
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 85
  %20 = load volatile ptr, ptr %19, align 16
  %21 = icmp eq ptr %20, null
  %22 = getelementptr i8, ptr %20, i32 -560
  %23 = icmp eq ptr %22, null
  %24 = or i1 %21, %23
  br i1 %24, label %27, label %13

25:                                               ; preds = %13
  %26 = tail call ptr @strcpy(ptr noundef %1, ptr noundef nonnull %14)
  br label %27

27:                                               ; preds = %25, %18, %3
  %28 = phi i32 [ 0, %25 ], [ -19, %3 ], [ -19, %18 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  tail call void @up_read(ptr noundef nonnull @devnet_rename_sem) #39
  ret i32 %28
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_getbyhwaddr_rcu(ptr noundef %0, i16 noundef zeroext %1, ptr nocapture noundef readonly %2) #6 {
  %4 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16
  %5 = load volatile ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, %4
  br i1 %6, label %25, label %7

7:                                                ; preds = %20, %3
  %8 = phi ptr [ %21, %20 ], [ %5, %3 ]
  %9 = getelementptr i8, ptr %8, i32 168
  %10 = load i16, ptr %9, align 16
  %11 = icmp eq i16 %10, %1
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = getelementptr i8, ptr %8, i32 440
  %14 = load ptr, ptr %13, align 32
  %15 = getelementptr i8, ptr %8, i32 337
  %16 = load i8, ptr %15, align 1
  %17 = zext i8 %16 to i32
  %18 = tail call i32 @bcmp(ptr %14, ptr %2, i32 %17)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %12, %7
  %21 = load volatile ptr, ptr %8, align 8
  %22 = icmp eq ptr %21, %4
  br i1 %22, label %25, label %7

23:                                               ; preds = %12
  %24 = getelementptr i8, ptr %8, i32 -40
  br label %25

25:                                               ; preds = %23, %20, %3
  %26 = phi ptr [ %24, %23 ], [ null, %3 ], [ null, %20 ]
  ret ptr %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_getfirstbyhwtype(ptr noundef %0, i16 noundef zeroext %1) #1 {
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %3 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi ptr [ %3, %2 ], [ %6, %8 ]
  %6 = load volatile ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %3
  br i1 %7, label %27, label %8

8:                                                ; preds = %4
  %9 = getelementptr i8, ptr %6, i32 168
  %10 = load i16, ptr %9, align 16
  %11 = icmp eq i16 %10, %1
  br i1 %11, label %12, label %4

12:                                               ; preds = %8
  %13 = getelementptr i8, ptr %6, i32 -40
  %14 = icmp eq ptr %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %17 = getelementptr i8, ptr %6, i32 608
  %18 = load ptr, ptr %17, align 8
  %19 = ptrtoint ptr %18 to i32
  %20 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %21 = inttoptr i32 %20 to ptr
  %22 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %21) #34, !srcloc !18
  %23 = add i32 %22, %19
  %24 = inttoptr i32 %23 to ptr
  %25 = load i32, ptr %24, align 4
  %26 = add i32 %25, 1
  store i32 %26, ptr %24, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %16) #39, !srcloc !19
  br label %27

27:                                               ; preds = %15, %12, %4
  %28 = phi ptr [ null, %12 ], [ %13, %15 ], [ null, %4 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret ptr %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @__dev_get_by_flags(ptr noundef readonly %0, i16 noundef zeroext %1, i16 noundef zeroext %2) #1 {
  %4 = tail call i32 @rtnl_is_locked() #39
  %5 = icmp eq i32 %4, 0
  %6 = load i1, ptr @__dev_get_by_flags.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !15

9:                                                ; preds = %3
  store i1 true, ptr @__dev_get_by_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 949, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 949) #39
  br label %10

10:                                               ; preds = %9, %3
  %11 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16
  %12 = zext i16 %1 to i32
  %13 = zext i16 %2 to i32
  br label %14

14:                                               ; preds = %18, %10
  %15 = phi ptr [ %11, %10 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, %11
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr i8, ptr %16, i32 64
  %20 = load i32, ptr %19, align 8
  %21 = xor i32 %20, %12
  %22 = and i32 %21, %13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %14

24:                                               ; preds = %18
  %25 = getelementptr i8, ptr %16, i32 -40
  br label %26

26:                                               ; preds = %24, %14
  %27 = phi ptr [ %25, %24 ], [ null, %14 ]
  ret ptr %27
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rtnl_is_locked() local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local zeroext i1 @dev_valid_name(ptr nocapture noundef readonly %0) #0 {
  %2 = load i8, ptr %0, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %27, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @strnlen(ptr noundef %0, i32 noundef 16)
  %6 = icmp eq i32 %5, 16
  br i1 %6, label %27, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @strcmp(ptr noundef %0, ptr noundef nonnull dereferenceable(2) @.str.3)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(ptr noundef %0, ptr noundef nonnull dereferenceable(3) @.str.4)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %22, %10
  %14 = phi i8 [ %24, %22 ], [ %2, %10 ]
  %15 = phi ptr [ %23, %22 ], [ %0, %10 ]
  switch i8 %14, label %16 [
    i8 0, label %25
    i8 47, label %27
    i8 58, label %27
  ]

16:                                               ; preds = %13
  %17 = zext i8 %14 to i32
  %18 = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %17
  %19 = load i8, ptr %18, align 1
  %20 = and i8 %19, 32
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr i8, ptr %15, i32 1
  %24 = load i8, ptr %23, align 1
  br label %13

25:                                               ; preds = %16, %13
  %26 = phi i1 [ true, %13 ], [ false, %16 ]
  br label %27

27:                                               ; preds = %25, %13, %13, %10, %7, %4, %1
  %28 = phi i1 [ false, %1 ], [ false, %4 ], [ false, %10 ], [ false, %7 ], [ %26, %25 ], [ false, %13 ], [ false, %13 ]
  ret i1 %28
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strnlen(ptr nocapture noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_alloc_name(ptr noundef %0, ptr noundef %1) #1 {
  %3 = tail call fastcc i32 @dev_alloc_name_ns(ptr noundef %0, ptr noundef %1)
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @dev_alloc_name_ns(ptr noundef %0, ptr noundef readonly %1) unnamed_addr #1 {
  %3 = alloca i32, align 4
  %4 = alloca [16 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %4, i8 0, i32 16, i1 false), !annotation !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store i32 0, ptr %3, align 4
  %5 = load i8, ptr %1, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %111, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %9 = icmp eq i32 %8, 16
  br i1 %9, label %111, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(ptr noundef %1, ptr noundef nonnull dereferenceable(2) @.str.3) #39
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %111, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @strcmp(ptr noundef %1, ptr noundef nonnull dereferenceable(3) @.str.4) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %111, label %16

16:                                               ; preds = %25, %13
  %17 = phi i8 [ %27, %25 ], [ %5, %13 ]
  %18 = phi ptr [ %26, %25 ], [ %1, %13 ]
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 47, label %111
    i8 58, label %111
  ]

19:                                               ; preds = %16
  %20 = zext i8 %17 to i32
  %21 = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %20
  %22 = load i8, ptr %21, align 1
  %23 = and i8 %22, 32
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %111

25:                                               ; preds = %19
  %26 = getelementptr i8, ptr %18, i32 1
  %27 = load i8, ptr %26, align 1
  br label %16

28:                                               ; preds = %16
  %29 = tail call ptr @strchr(ptr noundef %1, i32 noundef 37) #39
  %30 = icmp eq ptr %29, null
  br i1 %30, label %93, label %31

31:                                               ; preds = %28
  %32 = getelementptr i8, ptr %29, i32 1
  %33 = load i8, ptr %32, align 1
  %34 = icmp eq i8 %33, 100
  br i1 %34, label %35, label %111

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %29, i32 2
  %37 = tail call ptr @strchr(ptr noundef %36, i32 noundef 37) #39
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %111

39:                                               ; preds = %35
  %40 = tail call i32 @get_zeroed_page(i32 noundef 2592) #39
  %41 = inttoptr i32 %40 to ptr
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %111, label %43

43:                                               ; preds = %39
  %44 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16), align 32
  %45 = icmp eq ptr %44, getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16)
  br i1 %45, label %90, label %46

46:                                               ; preds = %87, %43
  %47 = phi ptr [ %88, %87 ], [ %44, %43 ]
  %48 = getelementptr i8, ptr %47, i32 -40
  %49 = getelementptr i8, ptr %47, i32 -24
  %50 = load ptr, ptr %49, align 16
  %51 = getelementptr inbounds %struct.netdev_name_node, ptr %50, i32 0, i32 1
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, %51
  br i1 %53, label %75, label %54

54:                                               ; preds = %70, %46
  %55 = phi ptr [ %71, %70 ], [ %52, %46 ]
  %56 = getelementptr i8, ptr %55, i32 12
  %57 = load ptr, ptr %56, align 4
  %58 = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %57, ptr noundef %1, ptr noundef nonnull %3) #39
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = load i32, ptr %3, align 4
  %62 = icmp ugt i32 %61, 32767
  br i1 %62, label %70, label %63

63:                                               ; preds = %60
  %64 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %4, i32 noundef 16, ptr noundef %1, i32 noundef %61) #39
  %65 = load ptr, ptr %56, align 4
  %66 = call i32 @strncmp(ptr noundef nonnull %4, ptr noundef %65, i32 noundef 16) #39
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = load i32, ptr %3, align 4
  call void @_set_bit(i32 noundef %69, ptr noundef nonnull %41) #39
  br label %70

70:                                               ; preds = %68, %63, %60, %54
  %71 = load ptr, ptr %55, align 4
  %72 = load ptr, ptr %49, align 16
  %73 = getelementptr inbounds %struct.netdev_name_node, ptr %72, i32 0, i32 1
  %74 = icmp eq ptr %71, %73
  br i1 %74, label %75, label %54

75:                                               ; preds = %70, %46
  %76 = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %48, ptr noundef %1, ptr noundef nonnull %3) #39
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %75
  %79 = load i32, ptr %3, align 4
  %80 = icmp ugt i32 %79, 32767
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %4, i32 noundef 16, ptr noundef %1, i32 noundef %79) #39
  %83 = call i32 @strncmp(ptr noundef nonnull %4, ptr noundef %48, i32 noundef 16) #39
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = load i32, ptr %3, align 4
  call void @_set_bit(i32 noundef %86, ptr noundef nonnull %41) #39
  br label %87

87:                                               ; preds = %85, %81, %78, %75
  %88 = load ptr, ptr %47, align 8
  %89 = icmp eq ptr %88, getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16)
  br i1 %89, label %90, label %46

90:                                               ; preds = %87, %43
  %91 = call i32 @_find_first_zero_bit_le(ptr noundef nonnull %41, i32 noundef 32768) #39
  store i32 %91, ptr %3, align 4
  call void @free_pages(i32 noundef %40, i32 noundef 0) #39
  %92 = load i32, ptr %3, align 4
  br label %93

93:                                               ; preds = %90, %28
  %94 = phi i32 [ %92, %90 ], [ 0, %28 ]
  %95 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %4, i32 noundef 16, ptr noundef %1, i32 noundef %94) #39
  %96 = call i32 @strnlen(ptr noundef nonnull %4, i32 noundef 16) #39
  %97 = call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef nonnull %4, i32 noundef %96) #40
  %98 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %99 = mul i32 %97, 1640531527
  %100 = lshr i32 %99, 24
  %101 = getelementptr %struct.hlist_head, ptr %98, i32 %100
  br label %102

102:                                              ; preds = %106, %93
  %103 = phi ptr [ %101, %93 ], [ %104, %106 ]
  %104 = load ptr, ptr %103, align 4
  %105 = icmp eq ptr %104, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.netdev_name_node, ptr %104, i32 0, i32 3
  %108 = load ptr, ptr %107, align 4
  %109 = call i32 @strcmp(ptr noundef %108, ptr noundef nonnull %4) #39
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %102

111:                                              ; preds = %106, %39, %35, %31, %19, %16, %16, %13, %10, %7, %2
  %112 = phi i32 [ -22, %10 ], [ -22, %13 ], [ -22, %7 ], [ -22, %2 ], [ -12, %39 ], [ -22, %31 ], [ -22, %35 ], [ -23, %106 ], [ -22, %16 ], [ -22, %16 ], [ -22, %19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  br label %118

113:                                              ; preds = %102
  %114 = load i32, ptr %3, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  %115 = icmp sgt i32 %114, -1
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = call i32 @strlcpy(ptr noundef %0, ptr noundef nonnull %4, i32 noundef 16) #39
  br label %118

118:                                              ; preds = %116, %113, %111
  %119 = phi i32 [ %112, %111 ], [ %114, %116 ], [ %114, %113 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #39
  ret i32 %119
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_change_name(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = alloca [16 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #39
  %5 = tail call i32 @rtnl_is_locked() #39
  %6 = icmp eq i32 %5, 0
  %7 = load i1, ptr @dev_change_name.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !15

10:                                               ; preds = %2
  store i1 true, ptr @dev_change_name.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1136, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1136) #39
  br label %11

11:                                               ; preds = %10, %2
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %13 = load i32, ptr %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 15
  %18 = load i64, ptr %17, align 16
  %19 = and i64 %18, 1073741824
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %99, label %21, !prof !22

21:                                               ; preds = %16, %11
  tail call void @down_write(ptr noundef nonnull @devnet_rename_sem) #39
  %22 = tail call i32 @strncmp(ptr noundef %1, ptr noundef %0, i32 noundef 16)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @up_write(ptr noundef nonnull @devnet_rename_sem) #39
  br label %99

25:                                               ; preds = %21
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %4, ptr noundef align 64 dereferenceable(16) %0, i32 16, i1 false)
  %26 = tail call fastcc i32 @dev_get_valid_name(ptr noundef %0, ptr noundef %1)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @up_write(ptr noundef nonnull @devnet_rename_sem) #39
  br label %99

29:                                               ; preds = %25
  %30 = load i8, ptr %4, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = call ptr @strchr(ptr noundef nonnull %4, i32 noundef 37)
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %0, ptr noundef nonnull @.str.5, ptr noundef nonnull %4) #43
  br label %36

36:                                               ; preds = %35, %32, %29
  %37 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 34
  %38 = load i8, ptr %37, align 1
  %39 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  store i8 4, ptr %37, align 1
  %40 = call i32 @device_rename(ptr noundef %39, ptr noundef %0) #39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 1
  %44 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  br label %48

45:                                               ; preds = %95, %36
  %46 = phi i8 [ %38, %36 ], [ 4, %95 ]
  %47 = phi i32 [ %40, %36 ], [ %96, %95 ]
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 64 dereferenceable(16) %0, ptr noundef nonnull align 1 dereferenceable(16) %4, i32 16, i1 false)
  store i8 %46, ptr %37, align 1
  call void @up_write(ptr noundef nonnull @devnet_rename_sem) #39
  br label %99

48:                                               ; preds = %95, %42
  %49 = phi i8 [ %38, %42 ], [ 4, %95 ]
  %50 = phi i32 [ %26, %42 ], [ %91, %95 ]
  call void @up_write(ptr noundef nonnull @devnet_rename_sem) #39
  call void @netdev_adjacent_rename_links(ptr noundef %0, ptr noundef nonnull %4)
  call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #39
  %51 = load ptr, ptr %43, align 16
  %52 = load ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.hlist_node, ptr %51, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  store volatile ptr %52, ptr %54, align 4
  %55 = icmp eq ptr %52, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %struct.hlist_node, ptr %52, i32 0, i32 1
  store volatile ptr %54, ptr %57, align 4
  br label %58

58:                                               ; preds = %56, %48
  store volatile ptr inttoptr (i32 290 to ptr), ptr %53, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !23
  call void asm sideeffect "str\09$1, [$0]\0A", "r,r,~{cc}"(ptr nonnull @dev_base_lock, i32 0) #39, !srcloc !24
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !25
  call void @synchronize_rcu() #39
  call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #39
  %59 = load ptr, ptr %43, align 16
  %60 = getelementptr inbounds %struct.netdev_name_node, ptr %59, i32 0, i32 3
  %61 = load ptr, ptr %60, align 4
  %62 = call i32 @strnlen(ptr noundef %61, i32 noundef 16) #39
  %63 = call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef %61, i32 noundef %62) #40
  %64 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %65 = mul i32 %63, 1640531527
  %66 = lshr i32 %65, 24
  %67 = getelementptr %struct.hlist_head, ptr %64, i32 %66
  %68 = load ptr, ptr %67, align 4
  store ptr %68, ptr %59, align 4
  %69 = getelementptr inbounds %struct.hlist_node, ptr %59, i32 0, i32 1
  store volatile ptr %67, ptr %69, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !9
  store volatile ptr %59, ptr %67, align 4
  %70 = icmp eq ptr %68, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %58
  %72 = getelementptr inbounds %struct.hlist_node, ptr %68, i32 0, i32 1
  store volatile ptr %59, ptr %72, align 4
  br label %73

73:                                               ; preds = %71, %58
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !23
  call void asm sideeffect "str\09$1, [$0]\0A", "r,r,~{cc}"(ptr nonnull @dev_base_lock, i32 0) #39, !srcloc !24
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !25
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 8
  store ptr null, ptr %44, align 4
  %74 = call i32 @rtnl_is_locked() #39
  %75 = icmp eq i32 %74, 0
  %76 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %77 = xor i1 %76, true
  %78 = select i1 %75, i1 %77, i1 false
  br i1 %78, label %79, label %80, !prof !15

79:                                               ; preds = %73
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %80

80:                                               ; preds = %79, %73
  %81 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 11, ptr noundef nonnull %3) #39
  %82 = and i32 %81, 32768
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 11, ptr noundef nonnull %3) #39
  br label %86

86:                                               ; preds = %84, %80
  %87 = phi i32 [ %85, %84 ], [ %81, %80 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  %88 = and i32 %87, -32769
  %89 = icmp sgt i32 %88, 1
  %90 = sub i32 1, %88
  %91 = select i1 %89, i32 %90, i32 0
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %86
  %94 = icmp sgt i32 %50, -1
  br i1 %94, label %95, label %98

95:                                               ; preds = %93
  call void @down_write(ptr noundef nonnull @devnet_rename_sem) #39
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 64 dereferenceable(16) %0, ptr noundef nonnull align 1 dereferenceable(16) %4, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %4, ptr noundef align 1 dereferenceable(16) %1, i32 16, i1 false)
  store i8 %49, ptr %37, align 1
  %96 = call i32 @device_rename(ptr noundef %39, ptr noundef %0) #39
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %48, label %45

98:                                               ; preds = %93
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %0, ptr noundef nonnull @.str.6, i32 noundef %91) #43
  br label %99

99:                                               ; preds = %98, %86, %45, %28, %24, %16
  %100 = phi i32 [ 0, %24 ], [ %26, %28 ], [ %47, %45 ], [ -16, %16 ], [ %50, %98 ], [ %50, %86 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #39
  ret i32 %100
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #11

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @dev_get_valid_name(ptr noundef %0, ptr noundef %1) unnamed_addr #1 {
  %3 = load i8, ptr %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %51, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %7 = icmp eq i32 %6, 16
  br i1 %7, label %51, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @strcmp(ptr noundef %1, ptr noundef nonnull dereferenceable(2) @.str.3) #39
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %51, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @strcmp(ptr noundef %1, ptr noundef nonnull dereferenceable(3) @.str.4) #39
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %51, label %14

14:                                               ; preds = %23, %11
  %15 = phi i8 [ %25, %23 ], [ %3, %11 ]
  %16 = phi ptr [ %24, %23 ], [ %1, %11 ]
  switch i8 %15, label %17 [
    i8 0, label %26
    i8 47, label %51
    i8 58, label %51
  ]

17:                                               ; preds = %14
  %18 = zext i8 %15 to i32
  %19 = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %18
  %20 = load i8, ptr %19, align 1
  %21 = and i8 %20, 32
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %51

23:                                               ; preds = %17
  %24 = getelementptr i8, ptr %16, i32 1
  %25 = load i8, ptr %24, align 1
  br label %14

26:                                               ; preds = %14
  %27 = tail call ptr @strchr(ptr noundef %1, i32 noundef 37)
  %28 = icmp eq ptr %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @dev_alloc_name_ns(ptr noundef %0, ptr noundef %1)
  br label %51

31:                                               ; preds = %26
  %32 = tail call i32 @strnlen(ptr noundef %1, i32 noundef 16) #39
  %33 = tail call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef %1, i32 noundef %32) #40
  %34 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %35 = mul i32 %33, 1640531527
  %36 = lshr i32 %35, 24
  %37 = getelementptr %struct.hlist_head, ptr %34, i32 %36
  br label %38

38:                                               ; preds = %42, %31
  %39 = phi ptr [ %37, %31 ], [ %40, %42 ]
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.netdev_name_node, ptr %40, i32 0, i32 3
  %44 = load ptr, ptr %43, align 4
  %45 = tail call i32 @strcmp(ptr noundef %44, ptr noundef %1) #39
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %38

47:                                               ; preds = %38
  %48 = icmp eq ptr %0, %1
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = tail call i32 @strlcpy(ptr noundef %0, ptr noundef %1, i32 noundef 16) #39
  br label %51

51:                                               ; preds = %49, %47, %42, %29, %17, %14, %14, %11, %8, %5, %2
  %52 = phi i32 [ %30, %29 ], [ 0, %49 ], [ 0, %47 ], [ -22, %2 ], [ -22, %5 ], [ -22, %11 ], [ -22, %8 ], [ -17, %42 ], [ -22, %17 ], [ -22, %14 ], [ -22, %14 ]
  ret i32 %52
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_info(ptr noundef %0, ptr noundef %1, ...) #12 {
  %3 = alloca %struct.va_format, align 8
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %4)
  store ptr %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.va_format, ptr %3, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.64, ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_rename(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_adjacent_rename_links(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = alloca [23 x i8], align 1
  %4 = alloca [23 x i8], align 1
  %5 = alloca [23 x i8], align 1
  %6 = alloca [23 x i8], align 1
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %7
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi ptr [ %8, %10 ], [ %22, %12 ]
  %14 = getelementptr i8, ptr %13, i32 -12
  %15 = load ptr, ptr %14, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %6) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(23) %6, i8 0, i32 23, i1 false) #39, !annotation !21
  %16 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %6, ptr noundef nonnull @.str.101, ptr noundef %1) #39
  %17 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 111
  call void @sysfs_remove_link(ptr noundef %17, ptr noundef nonnull %6) #39
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %6) #39
  %18 = load ptr, ptr %14, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %5) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(23) %5, i8 0, i32 23, i1 false) #39, !annotation !21
  %19 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %5, ptr noundef nonnull @.str.101, ptr noundef %0) #39
  %20 = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 111
  %21 = call i32 @sysfs_create_link(ptr noundef %20, ptr noundef %11, ptr noundef nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %5) #39
  %22 = load ptr, ptr %13, align 4
  %23 = icmp eq ptr %22, %7
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %2
  %25 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, %25
  br i1 %27, label %42, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi ptr [ %26, %28 ], [ %40, %30 ]
  %32 = getelementptr i8, ptr %31, i32 -12
  %33 = load ptr, ptr %32, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(23) %4, i8 0, i32 23, i1 false) #39, !annotation !21
  %34 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %4, ptr noundef nonnull @.str.100, ptr noundef %1) #39
  %35 = getelementptr inbounds %struct.net_device, ptr %33, i32 0, i32 111
  call void @sysfs_remove_link(ptr noundef %35, ptr noundef nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %4) #39
  %36 = load ptr, ptr %32, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %3) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(23) %3, i8 0, i32 23, i1 false) #39, !annotation !21
  %37 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %3, ptr noundef nonnull @.str.100, ptr noundef %0) #39
  %38 = getelementptr inbounds %struct.net_device, ptr %36, i32 0, i32 111
  %39 = call i32 @sysfs_create_link(ptr noundef %38, ptr noundef %29, ptr noundef nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %3) #39
  %40 = load ptr, ptr %31, align 4
  %41 = icmp eq ptr %40, %25
  br i1 %41, label %42, label %30

42:                                               ; preds = %30, %24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @call_netdevice_notifiers(i32 noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr null, ptr %4, align 4
  %5 = tail call i32 @rtnl_is_locked() #39
  %6 = icmp eq i32 %5, 0
  %7 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !15

10:                                               ; preds = %2
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %11

11:                                               ; preds = %10, %2
  %12 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef %0, ptr noundef nonnull %3) #39
  %13 = and i32 %12, 32768
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef %0, ptr noundef nonnull %3) #39
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi i32 [ %16, %15 ], [ %12, %11 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret i32 %18
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_err(ptr noundef %0, ptr noundef %1, ...) #12 {
  %3 = alloca %struct.va_format, align 8
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %4)
  store ptr %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.va_format, ptr %3, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.48, ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_alias(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #1 {
  %4 = icmp ugt i32 %2, 255
  br i1 %4, label %20, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %5
  %8 = add nuw nsw i32 %2, 9
  %9 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %8, i32 noundef 3264) #44
  %10 = icmp eq ptr %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.dev_ifalias, ptr %9, i32 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 8 %12, ptr align 1 %1, i32 %2, i1 false)
  %13 = getelementptr %struct.dev_ifalias, ptr %9, i32 0, i32 1, i32 %2
  store i8 0, ptr %13, align 1
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi ptr [ %9, %11 ], [ null, %5 ]
  tail call void @mutex_lock(ptr noundef nonnull @ifalias_mutex) #39
  %16 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 2
  %17 = load ptr, ptr %16, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !26
  store volatile ptr %15, ptr %16, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @ifalias_mutex) #39
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void @kvfree_call_rcu(ptr noundef nonnull %17, ptr noundef null) #39
  br label %20

20:                                               ; preds = %19, %14, %7, %3
  %21 = phi i32 [ -22, %3 ], [ -12, %7 ], [ %2, %19 ], [ %2, %14 ]
  ret i32 %21
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_get_alias(ptr noundef %0, ptr nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 {
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 2
  %5 = load volatile ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.dev_ifalias, ptr %5, i32 0, i32 1
  %9 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %1, i32 noundef %2, ptr noundef nonnull @.str.7, ptr noundef %8)
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi i32 [ %9, %7 ], [ 0, %3 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret i32 %11
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_features_change(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %0, ptr %2, align 8
  %3 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  store ptr null, ptr %3, align 4
  %4 = tail call i32 @rtnl_is_locked() #39
  %5 = icmp eq i32 %4, 0
  %6 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !15

9:                                                ; preds = %1
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %10

10:                                               ; preds = %9, %1
  %11 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 12, ptr noundef nonnull %2) #39
  %12 = and i32 %11, 32768
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %2) #39
  br label %16

16:                                               ; preds = %14, %10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_state_change(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_change_info, align 4
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %4 = load i32, ptr %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %2) #39
  store ptr %0, ptr %2, align 4
  %8 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  store ptr null, ptr %8, align 4
  %9 = getelementptr inbounds %struct.netdev_notifier_change_info, ptr %2, i32 0, i32 1
  store i32 0, ptr %9, align 4
  %10 = tail call i32 @rtnl_is_locked() #39
  %11 = icmp eq i32 %10, 0
  %12 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %13 = xor i1 %12, true
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %15, label %16, !prof !15

15:                                               ; preds = %7
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %16

16:                                               ; preds = %15, %7
  %17 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 4, ptr noundef nonnull %2) #39
  %18 = and i32 %17, 32768
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 4, ptr noundef nonnull %2) #39
  br label %22

22:                                               ; preds = %20, %16
  call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %0, i32 noundef 0, i32 noundef 3264) #39
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %2) #39
  br label %23

23:                                               ; preds = %22, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @call_netdevice_notifiers_info(i32 noundef %0, ptr noundef %1) unnamed_addr #1 {
  %3 = tail call i32 @rtnl_is_locked() #39
  %4 = icmp eq i32 %3, 0
  %5 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %9, !prof !15

8:                                                ; preds = %2
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %9

9:                                                ; preds = %8, %2
  %10 = tail call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef %0, ptr noundef %1) #39
  %11 = and i32 %10, 32768
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef %0, ptr noundef %1) #39
  br label %15

15:                                               ; preds = %13, %9
  %16 = phi i32 [ %14, %13 ], [ %10, %9 ]
  ret i32 %16
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtmsg_ifinfo(i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__netdev_notify_peers(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = tail call i32 @rtnl_is_locked() #39
  %5 = icmp eq i32 %4, 0
  %6 = load i1, ptr @__netdev_notify_peers.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !15

9:                                                ; preds = %1
  store i1 true, ptr @__netdev_notify_peers.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1329, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1329) #39
  br label %10

10:                                               ; preds = %9, %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 8
  %11 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr null, ptr %11, align 4
  %12 = tail call i32 @rtnl_is_locked() #39
  %13 = icmp eq i32 %12, 0
  %14 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %15 = xor i1 %14, true
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %17, label %18, !prof !15

17:                                               ; preds = %10
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %18

18:                                               ; preds = %17, %10
  %19 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 19, ptr noundef nonnull %3) #39
  %20 = and i32 %19, 32768
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 19, ptr noundef nonnull %3) #39
  br label %24

24:                                               ; preds = %22, %18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %0, ptr %2, align 8
  %25 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  store ptr null, ptr %25, align 4
  %26 = call i32 @rtnl_is_locked() #39
  %27 = icmp eq i32 %26, 0
  %28 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %29 = xor i1 %28, true
  %30 = select i1 %27, i1 %29, i1 false
  br i1 %30, label %31, label %32, !prof !15

31:                                               ; preds = %24
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %32

32:                                               ; preds = %31, %24
  %33 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 22, ptr noundef nonnull %2) #39
  %34 = and i32 %33, 32768
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 22, ptr noundef nonnull %2) #39
  br label %38

38:                                               ; preds = %36, %32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_notify_peers(ptr noundef %0) #1 {
  tail call void @rtnl_lock() #39
  tail call void @__netdev_notify_peers(ptr noundef %0)
  tail call void @rtnl_unlock() #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_open(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %5 = load i32, ptr %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @__dev_open(ptr noundef %0, ptr noundef %1)
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %8
  tail call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %0, i32 noundef 65, i32 noundef 3264) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 8
  %12 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr null, ptr %12, align 4
  %13 = tail call i32 @rtnl_is_locked() #39
  %14 = icmp eq i32 %13, 0
  %15 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %16 = xor i1 %15, true
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %19, !prof !15

18:                                               ; preds = %11
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %19

19:                                               ; preds = %18, %11
  %20 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 1, ptr noundef nonnull %3) #39
  %21 = and i32 %20, 32768
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 1, ptr noundef nonnull %3) #39
  br label %25

25:                                               ; preds = %23, %19
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  br label %26

26:                                               ; preds = %25, %8, %2
  %27 = phi i32 [ %9, %25 ], [ 0, %2 ], [ %9, %8 ]
  ret i32 %27
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__dev_open(ptr noundef %0, ptr noundef %1) unnamed_addr #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @rtnl_is_locked() #39
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @__dev_open.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %2
  store i1 true, ptr @__dev_open.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1379, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1379) #39
  br label %12

12:                                               ; preds = %11, %2
  tail call void @dev_addr_check(ptr noundef %0) #39
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %14 = load volatile i32, ptr %13, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @__pm_runtime_resume(ptr noundef nonnull %19, i32 noundef 0) #39
  br label %23

23:                                               ; preds = %21, %17
  %24 = load volatile i32, ptr %13, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %73, label %27

27:                                               ; preds = %23, %12
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 8
  %28 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr %1, ptr %28, align 4
  %29 = tail call i32 @rtnl_is_locked() #39
  %30 = icmp eq i32 %29, 0
  %31 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %32 = xor i1 %31, true
  %33 = select i1 %30, i1 %32, i1 false
  br i1 %33, label %34, label %35, !prof !15

34:                                               ; preds = %27
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %35

35:                                               ; preds = %34, %27
  %36 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 14, ptr noundef nonnull %3) #39
  %37 = and i32 %36, 32768
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 14, ptr noundef nonnull %3) #39
  br label %41

41:                                               ; preds = %39, %35
  %42 = phi i32 [ %40, %39 ], [ %36, %35 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  %43 = and i32 %42, -32769
  %44 = icmp sgt i32 %43, 1
  %45 = sub i32 1, %43
  %46 = select i1 %44, i32 %45, i32 0
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %73

48:                                               ; preds = %41
  call void @_set_bit(i32 noundef 0, ptr noundef %13) #39
  %49 = getelementptr inbounds %struct.net_device_ops, ptr %5, i32 0, i32 10
  %50 = load ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = call i32 %50(ptr noundef %0) #39
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %52, %48
  %56 = getelementptr inbounds %struct.net_device_ops, ptr %5, i32 0, i32 2
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = call i32 %57(ptr noundef %0) #39
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %59, %52
  %63 = phi i32 [ %60, %59 ], [ %53, %52 ]
  call void @_clear_bit(i32 noundef 0, ptr noundef %13) #39
  br label %73

64:                                               ; preds = %59, %55
  %65 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %66 = load i32, ptr %65, align 8
  %67 = or i32 %66, 1
  store i32 %67, ptr %65, align 8
  call void @dev_set_rx_mode(ptr noundef %0)
  call void @dev_activate(ptr noundef %0) #39
  %68 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 72
  %69 = load ptr, ptr %68, align 32
  %70 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 51
  %71 = load i8, ptr %70, align 1
  %72 = zext i8 %71 to i32
  call void @add_device_randomness(ptr noundef %69, i32 noundef %72) #39
  br label %73

73:                                               ; preds = %64, %62, %41, %23
  %74 = phi i32 [ -19, %23 ], [ %46, %41 ], [ 0, %64 ], [ %63, %62 ]
  ret i32 %74
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_close_many(ptr noundef %0, i1 noundef zeroext %1) #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = load ptr, ptr %0, align 4
  %5 = icmp eq ptr %4, %0
  br i1 %5, label %19, label %6

6:                                                ; preds = %17, %2
  %7 = phi ptr [ %8, %17 ], [ %4, %2 ]
  %8 = load ptr, ptr %7, align 64
  %9 = getelementptr i8, ptr %7, i32 40
  %10 = load i32, ptr %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  store ptr %15, ptr %16, align 4
  store volatile ptr %8, ptr %15, align 4
  store volatile ptr %7, ptr %7, align 4
  store ptr %7, ptr %14, align 4
  br label %17

17:                                               ; preds = %13, %6
  %18 = icmp eq ptr %8, %0
  br i1 %18, label %19, label %6

19:                                               ; preds = %17, %2
  tail call fastcc void @__dev_close_many(ptr noundef %0)
  %20 = load ptr, ptr %0, align 4
  %21 = icmp eq ptr %20, %0
  br i1 %21, label %48, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  br label %24

24:                                               ; preds = %46, %22
  %25 = phi ptr [ %20, %22 ], [ %26, %46 ]
  %26 = load ptr, ptr %25, align 64
  %27 = getelementptr i8, ptr %25, i32 -64
  call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %27, i32 noundef 65, i32 noundef 3264) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %27, ptr %3, align 8
  store ptr null, ptr %23, align 4
  %28 = call i32 @rtnl_is_locked() #39
  %29 = icmp eq i32 %28, 0
  %30 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %31 = xor i1 %30, true
  %32 = select i1 %29, i1 %31, i1 false
  br i1 %32, label %33, label %34, !prof !15

33:                                               ; preds = %24
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %34

34:                                               ; preds = %33, %24
  %35 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 2, ptr noundef nonnull %3) #39
  %36 = and i32 %35, 32768
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 2, ptr noundef nonnull %3) #39
  br label %40

40:                                               ; preds = %38, %34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  br i1 %1, label %41, label %46

41:                                               ; preds = %40
  %42 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %43 = load ptr, ptr %42, align 4
  %44 = load ptr, ptr %25, align 4
  %45 = getelementptr inbounds %struct.list_head, ptr %44, i32 0, i32 1
  store ptr %43, ptr %45, align 4
  store volatile ptr %44, ptr %43, align 4
  store volatile ptr %25, ptr %25, align 4
  store ptr %25, ptr %42, align 4
  br label %46

46:                                               ; preds = %41, %40
  %47 = icmp eq ptr %26, %0
  br i1 %47, label %48, label %24

48:                                               ; preds = %46, %19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__dev_close_many(ptr noundef %0) unnamed_addr #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = tail call i32 @rtnl_is_locked() #39
  %4 = icmp eq i32 %3, 0
  %5 = load i1, ptr @__dev_close_many.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %9, !prof !15

8:                                                ; preds = %1
  store i1 true, ptr @__dev_close_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1458, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1458) #39
  br label %9

9:                                                ; preds = %8, %1
  %10 = load ptr, ptr %0, align 4
  %11 = icmp eq ptr %10, %0
  br i1 %11, label %33, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  br label %14

14:                                               ; preds = %29, %12
  %15 = phi ptr [ %10, %12 ], [ %31, %29 ]
  %16 = getelementptr i8, ptr %15, i32 -64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %16, ptr %2, align 8
  store ptr null, ptr %13, align 4
  %17 = call i32 @rtnl_is_locked() #39
  %18 = icmp eq i32 %17, 0
  %19 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %20 = xor i1 %19, true
  %21 = select i1 %18, i1 %20, i1 false
  br i1 %21, label %22, label %23, !prof !15

22:                                               ; preds = %14
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %23

23:                                               ; preds = %22, %14
  %24 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 10, ptr noundef nonnull %2) #39
  %25 = and i32 %24, 32768
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 10, ptr noundef nonnull %2) #39
  br label %29

29:                                               ; preds = %27, %23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  %30 = getelementptr i8, ptr %15, i32 -28
  call void @_clear_bit(i32 noundef 0, ptr noundef %30) #39
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !27
  %31 = load ptr, ptr %15, align 4
  %32 = icmp eq ptr %31, %0
  br i1 %32, label %33, label %14

33:                                               ; preds = %29, %9
  call void @dev_deactivate_many(ptr noundef %0) #39
  %34 = load ptr, ptr %0, align 4
  %35 = icmp eq ptr %34, %0
  br i1 %35, label %52, label %36

36:                                               ; preds = %46, %33
  %37 = phi ptr [ %50, %46 ], [ %34, %33 ]
  %38 = getelementptr i8, ptr %37, i32 56
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds %struct.net_device_ops, ptr %39, i32 0, i32 3
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = getelementptr i8, ptr %37, i32 -64
  %45 = call i32 %41(ptr noundef %44) #39
  br label %46

46:                                               ; preds = %43, %36
  %47 = getelementptr i8, ptr %37, i32 40
  %48 = load i32, ptr %47, align 8
  %49 = and i32 %48, -2
  store i32 %49, ptr %47, align 8
  %50 = load ptr, ptr %37, align 4
  %51 = icmp eq ptr %50, %0
  br i1 %51, label %52, label %36

52:                                               ; preds = %46, %33
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_close(ptr noundef %0) #1 {
  %2 = alloca %struct.list_head, align 8
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %4 = load i32, ptr %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  %8 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 10
  store ptr %9, ptr %8, align 4
  store ptr %2, ptr %9, align 4
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 10, i32 1
  store ptr %2, ptr %10, align 4
  store volatile ptr %9, ptr %2, align 8
  call void @dev_close_many(ptr noundef nonnull %2, i1 noundef zeroext true)
  %11 = load ptr, ptr %8, align 4
  %12 = load ptr, ptr %2, align 8
  %13 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  store ptr %11, ptr %13, align 4
  store volatile ptr %12, ptr %11, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  br label %14

14:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_disable_lro(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 25
  %3 = load i64, ptr %2, align 32
  %4 = and i64 %3, -32769
  store i64 %4, ptr %2, align 32
  tail call void @netdev_update_features(ptr noundef %0)
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %6 = load i64, ptr %5, align 16
  %7 = and i64 %6, 32768
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %19, label %9, !prof !22

9:                                                ; preds = %1
  %10 = load i8, ptr %0, align 64
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = tail call ptr @strchr(ptr noundef %0, i32 noundef 37) #39
  %14 = icmp eq ptr %13, null
  %15 = select i1 %14, ptr %0, ptr @.str.65
  br label %16

16:                                               ; preds = %12, %9
  %17 = phi ptr [ @.str.65, %9 ], [ %15, %12 ]
  %18 = tail call fastcc ptr @netdev_reg_state(ptr noundef %0)
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1566, i32 noundef 9, ptr noundef nonnull @.str.8, ptr noundef %17, ptr noundef nonnull %18) #39
  br label %19

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = icmp eq ptr %21, %20
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr i8, ptr %21, i32 -12
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %32, %23
  %28 = phi ptr [ %34, %32 ], [ %25, %23 ]
  %29 = phi ptr [ %30, %32 ], [ %21, %23 ]
  %30 = load ptr, ptr %29, align 4
  tail call void @dev_disable_lro(ptr noundef nonnull %28)
  %31 = icmp eq ptr %30, %20
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = getelementptr i8, ptr %30, i32 -12
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %27

36:                                               ; preds = %32, %27, %23, %19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_update_features(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = tail call i32 @__netdev_update_features(ptr noundef %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %0, ptr %2, align 8
  %6 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  store ptr null, ptr %6, align 4
  %7 = tail call i32 @rtnl_is_locked() #39
  %8 = icmp eq i32 %7, 0
  %9 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %10 = xor i1 %9, true
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %13, !prof !15

12:                                               ; preds = %5
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %13

13:                                               ; preds = %12, %5
  %14 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 12, ptr noundef nonnull %2) #39
  %15 = and i32 %14, 32768
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %2) #39
  br label %19

19:                                               ; preds = %17, %13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  br label %20

20:                                               ; preds = %19, %1
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc nonnull ptr @netdev_reg_state(ptr noundef %0) unnamed_addr #14 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %3 = load i8, ptr %2, align 4
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %6, label %13, label %7, !prof !22

7:                                                ; preds = %5
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %8 = zext i8 %3 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.72, ptr noundef %0, i32 noundef %8) #39
  br label %13

9:                                                ; preds = %1
  %10 = sext i8 %3 to i32
  %11 = getelementptr inbounds [6 x ptr], ptr @switch.table.__netdev_printk.134, i32 0, i32 %10
  %12 = load ptr, ptr %11, align 4
  br label %13

13:                                               ; preds = %9, %7, %5
  %14 = phi ptr [ @.str.73, %7 ], [ @.str.73, %5 ], [ %12, %9 ]
  ret ptr %14
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_lower_get_next(ptr noundef readnone %0, ptr nocapture noundef %1) #15 {
  %3 = load ptr, ptr %1, align 4
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr i8, ptr %3, i32 -12
  %8 = load ptr, ptr %3, align 4
  store ptr %8, ptr %1, align 4
  %9 = load ptr, ptr %7, align 4
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi ptr [ %9, %6 ], [ null, %2 ]
  ret ptr %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @netdev_cmd_to_name(i32 noundef %0) #16 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 34
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds [34 x ptr], ptr @switch.table.netdev_cmd_to_name, i32 0, i32 %2
  %6 = load ptr, ptr %5, align 4
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi ptr [ %6, %4 ], [ @.str.43, %1 ]
  ret ptr %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @register_netdevice_notifier(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = alloca %struct.netdev_notifier_info, align 8
  tail call void @down_write(ptr noundef nonnull @pernet_ops_rwsem) #39
  tail call void @rtnl_lock() #39
  %5 = tail call i32 @raw_notifier_chain_register(ptr noundef nonnull @netdev_chain, ptr noundef %0) #39
  %6 = icmp ne i32 %5, 0
  %7 = load i1, ptr @dev_boot_phase, align 4
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 true, i1 %8
  br i1 %9, label %26, label %10

10:                                               ; preds = %14, %1
  %11 = phi ptr [ %12, %14 ], [ @net_namespace_list, %1 ]
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, @net_namespace_list
  br i1 %13, label %26, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %12, i32 -28
  %16 = tail call fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %0, ptr noundef %15)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %10, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, @net_namespace_list
  br i1 %21, label %54, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  %24 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  %25 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  br label %28

26:                                               ; preds = %54, %10, %1
  %27 = phi i32 [ %5, %1 ], [ %16, %54 ], [ 0, %10 ]
  call void @rtnl_unlock() #39
  call void @up_write(ptr noundef nonnull @pernet_ops_rwsem) #39
  ret i32 %27

28:                                               ; preds = %50, %22
  %29 = phi ptr [ %20, %22 ], [ %52, %50 ]
  %30 = getelementptr i8, ptr %29, i32 68
  %31 = load ptr, ptr %30, align 8
  %32 = icmp eq ptr %31, %30
  br i1 %32, label %50, label %33

33:                                               ; preds = %45, %28
  %34 = phi ptr [ %48, %45 ], [ %31, %28 ]
  %35 = getelementptr i8, ptr %34, i32 -40
  %36 = getelementptr i8, ptr %34, i32 64
  %37 = load i32, ptr %36, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %35, ptr %4, align 8
  store ptr null, ptr %23, align 4
  %41 = load ptr, ptr %0, align 4
  %42 = call i32 %41(ptr noundef %0, i32 noundef 10, ptr noundef nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %35, ptr %3, align 8
  store ptr null, ptr %24, align 4
  %43 = load ptr, ptr %0, align 4
  %44 = call i32 %43(ptr noundef %0, i32 noundef 2, ptr noundef nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  br label %45

45:                                               ; preds = %40, %33
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %35, ptr %2, align 8
  store ptr null, ptr %25, align 4
  %46 = load ptr, ptr %0, align 4
  %47 = call i32 %46(ptr noundef %0, i32 noundef 6, ptr noundef nonnull %2) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  %48 = load ptr, ptr %34, align 8
  %49 = icmp eq ptr %48, %30
  br i1 %49, label %50, label %33

50:                                               ; preds = %45, %28
  %51 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, @net_namespace_list
  br i1 %53, label %54, label %28

54:                                               ; preds = %50, %18
  %55 = call i32 @raw_notifier_chain_unregister(ptr noundef nonnull @netdev_chain, ptr noundef %0) #39
  br label %26
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raw_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %0, ptr noundef readonly %1) unnamed_addr #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = alloca %struct.netdev_notifier_info, align 8
  %5 = alloca %struct.netdev_notifier_info, align 8
  %6 = alloca %struct.netdev_notifier_info, align 8
  %7 = alloca %struct.netdev_notifier_info, align 8
  %8 = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 16
  %9 = load ptr, ptr %8, align 8
  %10 = icmp eq ptr %9, %8
  br i1 %10, label %59, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.netdev_notifier_info, ptr %7, i32 0, i32 1
  %13 = getelementptr inbounds %struct.netdev_notifier_info, ptr %6, i32 0, i32 1
  br label %14

14:                                               ; preds = %38, %11
  %15 = phi ptr [ %9, %11 ], [ %39, %38 ]
  %16 = getelementptr i8, ptr %15, i32 -40
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  store ptr %16, ptr %7, align 8
  store ptr null, ptr %12, align 4
  %17 = load ptr, ptr %0, align 4
  %18 = call i32 %17(ptr noundef %0, i32 noundef 5, ptr noundef nonnull %7) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  %19 = and i32 %18, -32769
  %20 = icmp slt i32 %19, 2
  br i1 %20, label %30, label %21

21:                                               ; preds = %14
  %22 = sub i32 1, %19
  %23 = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, %8
  br i1 %25, label %59, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.netdev_notifier_info, ptr %5, i32 0, i32 1
  %28 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  %29 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  br label %41

30:                                               ; preds = %14
  %31 = getelementptr i8, ptr %15, i32 64
  %32 = load i32, ptr %31, align 8
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  store ptr %16, ptr %6, align 8
  store ptr null, ptr %13, align 4
  %36 = load ptr, ptr %0, align 4
  %37 = call i32 %36(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %6) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  br label %38

38:                                               ; preds = %35, %30
  %39 = load ptr, ptr %15, align 8
  %40 = icmp eq ptr %39, %8
  br i1 %40, label %59, label %14

41:                                               ; preds = %53, %26
  %42 = phi ptr [ %24, %26 ], [ %57, %53 ]
  %43 = getelementptr i8, ptr %42, i32 -40
  %44 = getelementptr i8, ptr %42, i32 64
  %45 = load i32, ptr %44, align 8
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %41
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store ptr %43, ptr %5, align 8
  store ptr null, ptr %27, align 4
  %49 = load ptr, ptr %0, align 4
  %50 = call i32 %49(ptr noundef %0, i32 noundef 10, ptr noundef nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %43, ptr %4, align 8
  store ptr null, ptr %28, align 4
  %51 = load ptr, ptr %0, align 4
  %52 = call i32 %51(ptr noundef %0, i32 noundef 2, ptr noundef nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  br label %53

53:                                               ; preds = %48, %41
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %43, ptr %3, align 8
  store ptr null, ptr %29, align 4
  %54 = load ptr, ptr %0, align 4
  %55 = call i32 %54(ptr noundef %0, i32 noundef 6, ptr noundef nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  %56 = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, %8
  br i1 %58, label %59, label %41

59:                                               ; preds = %53, %38, %21, %2
  %60 = phi i32 [ %22, %21 ], [ 0, %2 ], [ %22, %53 ], [ 0, %38 ]
  ret i32 %60
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raw_notifier_chain_unregister(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @unregister_netdevice_notifier(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = alloca %struct.netdev_notifier_info, align 8
  tail call void @down_write(ptr noundef nonnull @pernet_ops_rwsem) #39
  tail call void @rtnl_lock() #39
  %5 = tail call i32 @raw_notifier_chain_unregister(ptr noundef nonnull @netdev_chain, ptr noundef %0) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %1
  %8 = load ptr, ptr @net_namespace_list, align 4
  %9 = icmp eq ptr %8, @net_namespace_list
  br i1 %9, label %39, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  %12 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  %13 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  br label %14

14:                                               ; preds = %36, %10
  %15 = phi ptr [ %8, %10 ], [ %37, %36 ]
  %16 = getelementptr i8, ptr %15, i32 68
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, %16
  br i1 %18, label %36, label %19

19:                                               ; preds = %31, %14
  %20 = phi ptr [ %34, %31 ], [ %17, %14 ]
  %21 = getelementptr i8, ptr %20, i32 -40
  %22 = getelementptr i8, ptr %20, i32 64
  %23 = load i32, ptr %22, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %21, ptr %4, align 8
  store ptr null, ptr %11, align 4
  %27 = load ptr, ptr %0, align 4
  %28 = call i32 %27(ptr noundef %0, i32 noundef 10, ptr noundef nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %21, ptr %3, align 8
  store ptr null, ptr %12, align 4
  %29 = load ptr, ptr %0, align 4
  %30 = call i32 %29(ptr noundef %0, i32 noundef 2, ptr noundef nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  br label %31

31:                                               ; preds = %26, %19
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %21, ptr %2, align 8
  store ptr null, ptr %13, align 4
  %32 = load ptr, ptr %0, align 4
  %33 = call i32 %32(ptr noundef %0, i32 noundef 6, ptr noundef nonnull %2) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  %34 = load ptr, ptr %20, align 8
  %35 = icmp eq ptr %34, %16
  br i1 %35, label %36, label %19

36:                                               ; preds = %31, %14
  %37 = load ptr, ptr %15, align 4
  %38 = icmp eq ptr %37, @net_namespace_list
  br i1 %38, label %39, label %14

39:                                               ; preds = %36, %7, %1
  call void @rtnl_unlock() #39
  call void @up_write(ptr noundef nonnull @pernet_ops_rwsem) #39
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @register_netdevice_notifier_net(ptr noundef %0, ptr noundef %1) #1 {
  tail call void @rtnl_lock() #39
  %3 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 25
  %4 = tail call i32 @raw_notifier_chain_register(ptr noundef %3, ptr noundef %1) #39
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = load i1, ptr @dev_boot_phase, align 4
  br i1 %7, label %8, label %13

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %1, ptr noundef %0) #39
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @raw_notifier_chain_unregister(ptr noundef %3, ptr noundef %1) #39
  br label %13

13:                                               ; preds = %11, %8, %6, %2
  %14 = phi i32 [ %9, %11 ], [ %4, %2 ], [ 0, %6 ], [ 0, %8 ]
  tail call void @rtnl_unlock() #39
  ret i32 %14
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @unregister_netdevice_notifier_net(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = alloca %struct.netdev_notifier_info, align 8
  %5 = alloca %struct.netdev_notifier_info, align 8
  tail call void @rtnl_lock() #39
  %6 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 25
  %7 = tail call i32 @raw_notifier_chain_unregister(ptr noundef %6, ptr noundef %1) #39
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, %10
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.netdev_notifier_info, ptr %5, i32 0, i32 1
  %15 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  %16 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  br label %17

17:                                               ; preds = %29, %13
  %18 = phi ptr [ %11, %13 ], [ %32, %29 ]
  %19 = getelementptr i8, ptr %18, i32 -40
  %20 = getelementptr i8, ptr %18, i32 64
  %21 = load i32, ptr %20, align 8
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store ptr %19, ptr %5, align 8
  store ptr null, ptr %14, align 4
  %25 = load ptr, ptr %1, align 4
  %26 = call i32 %25(ptr noundef %1, i32 noundef 10, ptr noundef nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %19, ptr %4, align 8
  store ptr null, ptr %15, align 4
  %27 = load ptr, ptr %1, align 4
  %28 = call i32 %27(ptr noundef %1, i32 noundef 2, ptr noundef nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  br label %29

29:                                               ; preds = %24, %17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %19, ptr %3, align 8
  store ptr null, ptr %16, align 4
  %30 = load ptr, ptr %1, align 4
  %31 = call i32 %30(ptr noundef %1, i32 noundef 6, ptr noundef nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  %32 = load ptr, ptr %18, align 8
  %33 = icmp eq ptr %32, %10
  br i1 %33, label %34, label %17

34:                                               ; preds = %29, %9, %2
  %35 = phi i32 [ %7, %2 ], [ 0, %9 ], [ 0, %29 ]
  call void @rtnl_unlock() #39
  ret i32 %35
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @register_netdevice_notifier_dev_net(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  tail call void @rtnl_lock() #39
  %4 = tail call i32 @raw_notifier_chain_register(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), ptr noundef %1) #39
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %3
  %7 = load i1, ptr @dev_boot_phase, align 4
  br i1 %7, label %8, label %13

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %1, ptr noundef nonnull @init_net) #39
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @raw_notifier_chain_unregister(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), ptr noundef %1) #39
  br label %19

13:                                               ; preds = %8, %6
  %14 = getelementptr inbounds %struct.netdev_net_notifier, ptr %2, i32 0, i32 1
  store ptr %1, ptr %14, align 4
  %15 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 125
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  store ptr %2, ptr %17, align 4
  store ptr %16, ptr %2, align 4
  %18 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  store ptr %15, ptr %18, align 4
  store volatile ptr %2, ptr %15, align 4
  br label %19

19:                                               ; preds = %13, %11, %3
  %20 = phi i32 [ 0, %13 ], [ %9, %11 ], [ %4, %3 ]
  tail call void @rtnl_unlock() #39
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @unregister_netdevice_notifier_dev_net(ptr nocapture noundef readnone %0, ptr noundef %1, ptr nocapture noundef %2) #1 {
  %4 = alloca %struct.netdev_notifier_info, align 8
  %5 = alloca %struct.netdev_notifier_info, align 8
  %6 = alloca %struct.netdev_notifier_info, align 8
  tail call void @rtnl_lock() #39
  %7 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  %8 = load ptr, ptr %7, align 4
  %9 = load ptr, ptr %2, align 4
  %10 = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  store ptr %8, ptr %10, align 4
  store volatile ptr %9, ptr %8, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %2, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %7, align 4
  %11 = tail call i32 @raw_notifier_chain_unregister(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), ptr noundef %1) #39
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %3
  %14 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16), align 32
  %15 = icmp eq ptr %14, getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16)
  br i1 %15, label %37, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.netdev_notifier_info, ptr %6, i32 0, i32 1
  %18 = getelementptr inbounds %struct.netdev_notifier_info, ptr %5, i32 0, i32 1
  %19 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  br label %20

20:                                               ; preds = %32, %16
  %21 = phi ptr [ %14, %16 ], [ %35, %32 ]
  %22 = getelementptr i8, ptr %21, i32 -40
  %23 = getelementptr i8, ptr %21, i32 64
  %24 = load i32, ptr %23, align 8
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  store ptr %22, ptr %6, align 8
  store ptr null, ptr %17, align 4
  %28 = load ptr, ptr %1, align 4
  %29 = call i32 %28(ptr noundef %1, i32 noundef 10, ptr noundef nonnull %6) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store ptr %22, ptr %5, align 8
  store ptr null, ptr %18, align 4
  %30 = load ptr, ptr %1, align 4
  %31 = call i32 %30(ptr noundef %1, i32 noundef 2, ptr noundef nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  br label %32

32:                                               ; preds = %27, %20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %22, ptr %4, align 8
  store ptr null, ptr %19, align 4
  %33 = load ptr, ptr %1, align 4
  %34 = call i32 %33(ptr noundef %1, i32 noundef 6, ptr noundef nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  %35 = load ptr, ptr %21, align 8
  %36 = icmp eq ptr %35, getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16)
  br i1 %36, label %37, label %20

37:                                               ; preds = %32, %13, %3
  %38 = phi i32 [ %11, %3 ], [ 0, %13 ], [ 0, %32 ]
  call void @rtnl_unlock() #39
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @net_enable_timestamp() #1 {
  %1 = load i8, ptr @static_key_initialized, align 1, !range !28
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %4, !prof !15

3:                                                ; preds = %0
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 290, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_inc, ptr noundef nonnull @netstamp_needed_key) #39
  br label %4

4:                                                ; preds = %3, %0
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @netstamp_needed_key) #39, !srcloc !29
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @netstamp_needed_key, ptr nonnull @netstamp_needed_key, i32 1, ptr nonnull elementtype(i32) @netstamp_needed_key) #39, !srcloc !30
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @net_disable_timestamp() #1 {
  %1 = load i8, ptr @static_key_initialized, align 1, !range !28
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %4, !prof !15

3:                                                ; preds = %0
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 296, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_dec, ptr noundef nonnull @netstamp_needed_key) #39
  br label %4

4:                                                ; preds = %3, %0
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @netstamp_needed_key) #39, !srcloc !29
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @netstamp_needed_key, ptr nonnull @netstamp_needed_key, i32 1, ptr nonnull elementtype(i32) @netstamp_needed_key) #39, !srcloc !31
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @is_skb_forwardable(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #17 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %4 = load i32, ptr %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  %9 = load i32, ptr %8, align 4
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 19
  %11 = load i16, ptr %10, align 2
  %12 = zext i16 %11 to i32
  %13 = add i32 %9, 4
  %14 = add i32 %13, %12
  %15 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 5
  %16 = load i32, ptr %15, align 8
  %17 = icmp ugt i32 %16, %14
  br i1 %17, label %18, label %24

18:                                               ; preds = %7
  %19 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.skb_shared_info, ptr %20, i32 0, i32 4
  %22 = load i16, ptr %21, align 4
  %23 = icmp ne i16 %22, 0
  br label %24

24:                                               ; preds = %18, %7, %2
  %25 = phi i1 [ false, %2 ], [ true, %7 ], [ %23, %18 ]
  ret i1 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__dev_forward_skb(ptr noundef %0, ptr noundef %1) #1 {
  %3 = tail call fastcc i32 @__dev_forward_skb2(ptr noundef %0, ptr noundef %1, i1 noundef zeroext true)
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__dev_forward_skb2(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #1 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = load i8, ptr %7, align 8
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 11
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %25, label %15, !prof !22

15:                                               ; preds = %11
  %16 = ptrtoint ptr %13 to i32
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = load ptr, ptr %13, align 4
  %21 = icmp eq ptr %20, @msg_zerocopy_callback
  br i1 %21, label %25, label %22

22:                                               ; preds = %19, %15
  %23 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %1, i32 noundef 2592) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %50

25:                                               ; preds = %22, %19, %11, %5, %3
  %26 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %27 = load i32, ptr %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = xor i1 %2, true
  %31 = or i1 %29, %30
  br i1 %31, label %49, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 19
  %36 = load i16, ptr %35, align 2
  %37 = zext i16 %36 to i32
  %38 = add i32 %34, 4
  %39 = add i32 %38, %37
  %40 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 5
  %41 = load i32, ptr %40, align 8
  %42 = icmp ugt i32 %41, %39
  br i1 %42, label %43, label %53

43:                                               ; preds = %32
  %44 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.skb_shared_info, ptr %45, i32 0, i32 4
  %47 = load i16, ptr %46, align 4
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %50, label %53, !prof !15

49:                                               ; preds = %25
  br i1 %29, label %50, label %53, !prof !15

50:                                               ; preds = %49, %43, %22
  %51 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 37
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %51) #39, !srcloc !29
  %52 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %51, ptr %51, i32 1, ptr elementtype(i32) %51) #39, !srcloc !30
  tail call void @kfree_skb_reason(ptr noundef %1, i32 noundef 0) #39
  br label %86

53:                                               ; preds = %49, %43, %32
  tail call void @skb_scrub_packet(ptr noundef %1, i1 noundef zeroext false) #39
  %54 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 5
  store i32 0, ptr %54, align 8
  %55 = tail call zeroext i16 @eth_type_trans(ptr noundef %1, ptr noundef %0) #39
  %56 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 16
  store i16 %55, ptr %56, align 8
  %57 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 16
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13
  %60 = load i16, ptr %59, align 8
  %61 = lshr i16 %60, 5
  %62 = trunc i16 %61 to i2
  switch i2 %62, label %86 [
    i2 -2, label %63
    i2 -1, label %73
  ]

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 19
  %65 = load i16, ptr %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr i8, ptr %58, i32 %66
  %68 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 4
  %69 = load i32, ptr %68, align 4
  %70 = sub i32 0, %69
  %71 = tail call i32 @csum_partial(ptr noundef %67, i32 noundef 14, i32 noundef %70) #39
  %72 = sub i32 0, %71
  store i32 %72, ptr %68, align 4
  br label %86

73:                                               ; preds = %53
  %74 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 4
  %75 = load i16, ptr %74, align 4
  %76 = zext i16 %75 to i32
  %77 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %78 = load ptr, ptr %77, align 4
  %79 = ptrtoint ptr %78 to i32
  %80 = ptrtoint ptr %58 to i32
  %81 = add i32 %76, %80
  %82 = sub i32 %81, %79
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %73
  %85 = and i16 %60, -97
  store i16 %85, ptr %59, align 8
  br label %86

86:                                               ; preds = %84, %73, %63, %53, %50
  %87 = phi i32 [ 1, %50 ], [ 0, %53 ], [ 0, %63 ], [ 0, %73 ], [ 0, %84 ]
  ret i32 %87
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_forward_skb(ptr noundef %0, ptr noundef %1) #1 {
  %3 = tail call fastcc i32 @__dev_forward_skb2(ptr noundef %0, ptr noundef %1, i1 noundef zeroext true) #39
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @netif_rx_internal(ptr noundef %1)
  br label %7

7:                                                ; preds = %5, %2
  %8 = phi i32 [ %6, %5 ], [ %3, %2 ]
  ret i32 %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @netif_rx_internal(ptr noundef %0) unnamed_addr #1 {
  %2 = alloca %struct.rps_dev_flow, align 8
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  %5 = load volatile i32, ptr @netstamp_needed_key, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %16, !prof !15

7:                                                ; preds = %1
  %8 = load i32, ptr @netdev_tstamp_prequeue, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 2
  %12 = load i64, ptr %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #39
  store i64 %15, ptr %11, align 8
  br label %16

16:                                               ; preds = %14, %10, %7, %1
  %17 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx, i32 0, i32 1), align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %16
  %20 = tail call ptr @llvm.thread.pointer() #39
  %21 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = lshr i32 %22, 5
  %24 = getelementptr i32, ptr @__cpu_online_mask, i32 %23
  %25 = load volatile i32, ptr %24, align 4
  %26 = and i32 %22, 31
  %27 = shl nuw i32 1, %26
  %28 = and i32 %27, %25
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %19
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !32
  %31 = tail call i32 @__traceiter_netif_rx(ptr noundef null, ptr noundef %0) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !33
  br label %32

32:                                               ; preds = %30, %19, %16
  %33 = load volatile i32, ptr @rps_needed, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %49, !prof !15

35:                                               ; preds = %32
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store i64 0, ptr %2, align 8, !annotation !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store ptr %2, ptr %3, align 4
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !34
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %36 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %37 = load ptr, ptr %36, align 8
  %38 = call fastcc i32 @get_rps_cpu(ptr noundef %37, ptr noundef %0, ptr noundef nonnull %3)
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = tail call ptr @llvm.thread.pointer() #39
  %42 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 2
  %43 = load i32, ptr %42, align 8
  br label %44

44:                                               ; preds = %40, %35
  %45 = phi i32 [ %43, %40 ], [ %38, %35 ]
  %46 = load ptr, ptr %3, align 4
  %47 = getelementptr inbounds %struct.rps_dev_flow, ptr %46, i32 0, i32 2
  %48 = call fastcc i32 @enqueue_to_backlog(ptr noundef %0, i32 noundef %45, ptr noundef %47)
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  br label %54

49:                                               ; preds = %32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !36
  %50 = tail call ptr @llvm.thread.pointer() #39
  %51 = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 2
  %52 = load i32, ptr %51, align 8
  %53 = call fastcc i32 @enqueue_to_backlog(ptr noundef %0, i32 noundef %52, ptr noundef nonnull %4)
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !37
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  br label %54

54:                                               ; preds = %49, %44
  %55 = phi i32 [ %48, %44 ], [ %53, %49 ]
  ret i32 %55
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_forward_skb_nomtu(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = tail call fastcc i32 @__dev_forward_skb2(ptr noundef %0, ptr noundef %1, i1 noundef zeroext false)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @netif_rx_internal(ptr noundef %1)
  br label %7

7:                                                ; preds = %5, %2
  %8 = phi i32 [ %6, %5 ], [ 1, %2 ]
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @dev_nit_active(ptr noundef %0) #18 {
  %2 = load volatile ptr, ptr @ptype_all, align 4
  %3 = icmp eq ptr %2, @ptype_all
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 11
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp ne ptr %6, %5
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ true, %1 ], [ %7, %4 ]
  ret i1 %9
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_queue_xmit_nit(ptr noundef %0, ptr noundef %1) #1 {
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %3 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 1
  %4 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %5 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 11
  br label %6

6:                                                ; preds = %126, %2
  %7 = phi ptr [ @ptype_all, %2 ], [ %5, %126 ]
  %8 = phi ptr [ null, %2 ], [ %127, %126 ]
  %9 = phi ptr [ null, %2 ], [ %128, %126 ]
  %10 = load volatile ptr, ptr %7, align 4
  %11 = icmp eq ptr %10, %7
  br i1 %11, label %126, label %12

12:                                               ; preds = %121, %6
  %13 = phi ptr [ %124, %121 ], [ %10, %6 ]
  %14 = phi ptr [ %123, %121 ], [ %9, %6 ]
  %15 = phi ptr [ %122, %121 ], [ %8, %6 ]
  %16 = getelementptr i8, ptr %13, i32 -28
  %17 = getelementptr i8, ptr %13, i32 -26
  %18 = load i8, ptr %17, align 2, !range !28
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %121

20:                                               ; preds = %12
  %21 = getelementptr i8, ptr %13, i32 -4
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  %25 = load ptr, ptr %3, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %24
  %28 = getelementptr i8, ptr %13, i32 -12
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = tail call zeroext i1 %29(ptr noundef %16, ptr noundef nonnull %25) #39
  br i1 %32, label %121, label %35

33:                                               ; preds = %27
  %34 = icmp eq ptr %22, %25
  br i1 %34, label %121, label %35

35:                                               ; preds = %33, %31, %24, %20
  %36 = icmp eq ptr %15, null
  br i1 %36, label %70, label %37

37:                                               ; preds = %35
  %38 = load ptr, ptr %4, align 8
  %39 = icmp eq ptr %14, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 15
  %42 = load ptr, ptr %41, align 4
  %43 = load i8, ptr %42, align 8
  %44 = and i8 %43, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.skb_shared_info, ptr %42, i32 0, i32 11
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %53, label %50, !prof !22

50:                                               ; preds = %46
  %51 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %14, i32 noundef 2592) #39
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %121, !prof !22

53:                                               ; preds = %50, %46, %40, %37
  %54 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 19
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %54) #39, !srcloc !29
  %55 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %54, ptr %54, i32 1, ptr elementtype(i32) %54) #39, !srcloc !38
  %56 = extractvalue { i32, i32, i32 } %55, 0
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58, !prof !15

58:                                               ; preds = %53
  %59 = add i32 %56, 1
  %60 = or i32 %59, %56
  %61 = icmp sgt i32 %60, -1
  br i1 %61, label %64, label %62, !prof !22

62:                                               ; preds = %58, %53
  %63 = phi i32 [ 2, %53 ], [ 1, %58 ]
  tail call void @refcount_warn_saturate(ptr noundef %54, i32 noundef %63) #39
  br label %64

64:                                               ; preds = %62, %58
  %65 = getelementptr inbounds %struct.packet_type, ptr %15, i32 0, i32 4
  %66 = load ptr, ptr %65, align 4
  %67 = getelementptr inbounds %struct.anon.76, ptr %14, i32 0, i32 2
  %68 = load ptr, ptr %67, align 8
  %69 = tail call i32 %66(ptr noundef %14, ptr noundef %68, ptr noundef nonnull %15, ptr noundef %38) #39
  br label %121

70:                                               ; preds = %35
  %71 = tail call ptr @skb_clone(ptr noundef %0, i32 noundef 2592) #39
  %72 = icmp eq ptr %71, null
  br i1 %72, label %153, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 2
  store i64 0, ptr %74, align 8
  %75 = load volatile i32, ptr @netstamp_needed_key, align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %79, !prof !15

77:                                               ; preds = %73
  %78 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #39
  store i64 %78, ptr %74, align 8
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 17
  %81 = load ptr, ptr %80, align 4
  %82 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 16
  %83 = load ptr, ptr %82, align 8
  %84 = ptrtoint ptr %81 to i32
  %85 = ptrtoint ptr %83 to i32
  %86 = sub i32 %84, %85
  %87 = trunc i32 %86 to i16
  %88 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 13, i32 0, i32 19
  store i16 %87, ptr %88, align 2
  %89 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 13, i32 0, i32 18
  %90 = load i16, ptr %89, align 4
  %91 = zext i16 %90 to i32
  %92 = getelementptr i8, ptr %83, i32 %91
  %93 = icmp ult ptr %92, %81
  br i1 %93, label %98, label %94

94:                                               ; preds = %79
  %95 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 14
  %96 = load ptr, ptr %95, align 8
  %97 = icmp ugt ptr %92, %96
  br i1 %97, label %98, label %114

98:                                               ; preds = %94, %79
  %99 = tail call i32 @net_ratelimit() #39
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 13, i32 0, i32 16
  %103 = load i16, ptr %102, align 8
  %104 = tail call i16 @llvm.bswap.i16(i16 %103)
  %105 = zext i16 %104 to i32
  %106 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.44, i32 noundef %105, ptr noundef %1) #42
  br label %107

107:                                              ; preds = %101, %98
  %108 = load ptr, ptr %80, align 4
  %109 = load ptr, ptr %82, align 8
  %110 = ptrtoint ptr %108 to i32
  %111 = ptrtoint ptr %109 to i32
  %112 = sub i32 %110, %111
  %113 = trunc i32 %112 to i16
  store i16 %113, ptr %89, align 4
  br label %114

114:                                              ; preds = %107, %94
  %115 = phi i16 [ %113, %107 ], [ %90, %94 ]
  %116 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 13, i32 0, i32 17
  store i16 %115, ptr %116, align 2
  %117 = getelementptr inbounds %struct.sk_buff, ptr %71, i32 0, i32 13
  %118 = load i16, ptr %117, align 8
  %119 = and i16 %118, -8
  %120 = or i16 %119, 4
  store i16 %120, ptr %117, align 8
  br label %121

121:                                              ; preds = %114, %64, %50, %33, %31, %12
  %122 = phi ptr [ %15, %12 ], [ %15, %33 ], [ %16, %114 ], [ %15, %31 ], [ %16, %50 ], [ %16, %64 ]
  %123 = phi ptr [ %14, %12 ], [ %14, %33 ], [ %71, %114 ], [ %14, %31 ], [ %14, %50 ], [ %14, %64 ]
  %124 = load volatile ptr, ptr %13, align 4
  %125 = icmp eq ptr %124, %7
  br i1 %125, label %126, label %12

126:                                              ; preds = %121, %6
  %127 = phi ptr [ %8, %6 ], [ %122, %121 ]
  %128 = phi ptr [ %9, %6 ], [ %123, %121 ]
  %129 = icmp eq ptr %7, @ptype_all
  br i1 %129, label %6, label %130

130:                                              ; preds = %126
  %131 = icmp eq ptr %127, null
  br i1 %131, label %153, label %132

132:                                              ; preds = %130
  %133 = icmp eq ptr %128, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %struct.sk_buff, ptr %128, i32 0, i32 15
  %136 = load ptr, ptr %135, align 4
  %137 = load i8, ptr %136, align 8
  %138 = and i8 %137, 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %147, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %struct.skb_shared_info, ptr %136, i32 0, i32 11
  %142 = load ptr, ptr %141, align 4
  %143 = icmp eq ptr %142, null
  br i1 %143, label %147, label %144, !prof !22

144:                                              ; preds = %140
  %145 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %128, i32 noundef 2592) #39
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %152

147:                                              ; preds = %144, %140, %134, %132
  %148 = getelementptr inbounds %struct.packet_type, ptr %127, i32 0, i32 4
  %149 = load ptr, ptr %148, align 4
  %150 = load ptr, ptr %4, align 8
  %151 = tail call i32 %149(ptr noundef %128, ptr noundef %150, ptr noundef nonnull %127, ptr noundef %150) #39
  br label %153

152:                                              ; preds = %144
  tail call void @kfree_skb_reason(ptr noundef nonnull %128, i32 noundef 0) #39
  br label %153

153:                                              ; preds = %152, %147, %130, %70
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_clone(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #19

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local i32 @netdev_txq_to_tc(ptr nocapture noundef readonly %0, i32 noundef %1) #7 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  %4 = load i16, ptr %3, align 2
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %151, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 118
  %8 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 118, i32 0, i32 1
  %9 = load i16, ptr %8, align 2
  %10 = zext i16 %9 to i32
  %11 = sub i32 %1, %10
  %12 = load i16, ptr %7, align 2
  %13 = zext i16 %12 to i32
  %14 = icmp ult i32 %11, %13
  br i1 %14, label %151, label %15

15:                                               ; preds = %6
  %16 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 1
  %17 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 1, i32 1
  %18 = load i16, ptr %17, align 2
  %19 = zext i16 %18 to i32
  %20 = sub i32 %1, %19
  %21 = load i16, ptr %16, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp ult i32 %20, %22
  br i1 %23, label %151, label %24

24:                                               ; preds = %15
  %25 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 2
  %26 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 2, i32 1
  %27 = load i16, ptr %26, align 2
  %28 = zext i16 %27 to i32
  %29 = sub i32 %1, %28
  %30 = load i16, ptr %25, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp ult i32 %29, %31
  br i1 %32, label %151, label %33

33:                                               ; preds = %24
  %34 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 3
  %35 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 3, i32 1
  %36 = load i16, ptr %35, align 2
  %37 = zext i16 %36 to i32
  %38 = sub i32 %1, %37
  %39 = load i16, ptr %34, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp ult i32 %38, %40
  br i1 %41, label %151, label %42

42:                                               ; preds = %33
  %43 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 4
  %44 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 4, i32 1
  %45 = load i16, ptr %44, align 2
  %46 = zext i16 %45 to i32
  %47 = sub i32 %1, %46
  %48 = load i16, ptr %43, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp ult i32 %47, %49
  br i1 %50, label %151, label %51

51:                                               ; preds = %42
  %52 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 5
  %53 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 5, i32 1
  %54 = load i16, ptr %53, align 2
  %55 = zext i16 %54 to i32
  %56 = sub i32 %1, %55
  %57 = load i16, ptr %52, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp ult i32 %56, %58
  br i1 %59, label %151, label %60

60:                                               ; preds = %51
  %61 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 6
  %62 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 6, i32 1
  %63 = load i16, ptr %62, align 2
  %64 = zext i16 %63 to i32
  %65 = sub i32 %1, %64
  %66 = load i16, ptr %61, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp ult i32 %65, %67
  br i1 %68, label %151, label %69

69:                                               ; preds = %60
  %70 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 7
  %71 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 7, i32 1
  %72 = load i16, ptr %71, align 2
  %73 = zext i16 %72 to i32
  %74 = sub i32 %1, %73
  %75 = load i16, ptr %70, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp ult i32 %74, %76
  br i1 %77, label %151, label %78

78:                                               ; preds = %69
  %79 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 8
  %80 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 8, i32 1
  %81 = load i16, ptr %80, align 2
  %82 = zext i16 %81 to i32
  %83 = sub i32 %1, %82
  %84 = load i16, ptr %79, align 2
  %85 = zext i16 %84 to i32
  %86 = icmp ult i32 %83, %85
  br i1 %86, label %151, label %87

87:                                               ; preds = %78
  %88 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 9
  %89 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 9, i32 1
  %90 = load i16, ptr %89, align 2
  %91 = zext i16 %90 to i32
  %92 = sub i32 %1, %91
  %93 = load i16, ptr %88, align 2
  %94 = zext i16 %93 to i32
  %95 = icmp ult i32 %92, %94
  br i1 %95, label %151, label %96

96:                                               ; preds = %87
  %97 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 10
  %98 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 10, i32 1
  %99 = load i16, ptr %98, align 2
  %100 = zext i16 %99 to i32
  %101 = sub i32 %1, %100
  %102 = load i16, ptr %97, align 2
  %103 = zext i16 %102 to i32
  %104 = icmp ult i32 %101, %103
  br i1 %104, label %151, label %105

105:                                              ; preds = %96
  %106 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 11
  %107 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 11, i32 1
  %108 = load i16, ptr %107, align 2
  %109 = zext i16 %108 to i32
  %110 = sub i32 %1, %109
  %111 = load i16, ptr %106, align 2
  %112 = zext i16 %111 to i32
  %113 = icmp ult i32 %110, %112
  br i1 %113, label %151, label %114

114:                                              ; preds = %105
  %115 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 12
  %116 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 12, i32 1
  %117 = load i16, ptr %116, align 2
  %118 = zext i16 %117 to i32
  %119 = sub i32 %1, %118
  %120 = load i16, ptr %115, align 2
  %121 = zext i16 %120 to i32
  %122 = icmp ult i32 %119, %121
  br i1 %122, label %151, label %123

123:                                              ; preds = %114
  %124 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 13
  %125 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 13, i32 1
  %126 = load i16, ptr %125, align 2
  %127 = zext i16 %126 to i32
  %128 = sub i32 %1, %127
  %129 = load i16, ptr %124, align 2
  %130 = zext i16 %129 to i32
  %131 = icmp ult i32 %128, %130
  br i1 %131, label %151, label %132

132:                                              ; preds = %123
  %133 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 14
  %134 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 14, i32 1
  %135 = load i16, ptr %134, align 2
  %136 = zext i16 %135 to i32
  %137 = sub i32 %1, %136
  %138 = load i16, ptr %133, align 2
  %139 = zext i16 %138 to i32
  %140 = icmp ult i32 %137, %139
  br i1 %140, label %151, label %141

141:                                              ; preds = %132
  %142 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 15
  %143 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 15, i32 1
  %144 = load i16, ptr %143, align 2
  %145 = zext i16 %144 to i32
  %146 = sub i32 %1, %145
  %147 = load i16, ptr %142, align 2
  %148 = zext i16 %147 to i32
  %149 = icmp ult i32 %146, %148
  %150 = select i1 %149, i32 15, i32 -1
  br label %151

151:                                              ; preds = %141, %132, %123, %114, %105, %96, %87, %78, %69, %60, %51, %42, %33, %24, %15, %6, %2
  %152 = phi i32 [ 0, %2 ], [ 0, %6 ], [ 1, %15 ], [ 2, %24 ], [ 3, %33 ], [ 4, %42 ], [ 5, %51 ], [ 6, %60 ], [ 7, %69 ], [ 8, %78 ], [ 9, %87 ], [ 10, %96 ], [ 11, %105 ], [ 12, %114 ], [ 13, %123 ], [ 14, %132 ], [ %150, %141 ]
  ret i32 %152
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__netif_set_xps_queue(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2, i32 noundef %3) #1 {
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  %6 = load i16, ptr %5, align 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = icmp slt i16 %6, 0
  br i1 %9, label %377, label %10

10:                                               ; preds = %8
  %11 = zext i16 %6 to i32
  %12 = zext i16 %2 to i32
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %14 = load ptr, ptr %13, align 64
  %15 = getelementptr %struct.netdev_queue, ptr %14, i32 %12, i32 7
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  %18 = select i1 %17, ptr %0, ptr %16
  %19 = tail call i32 @netdev_txq_to_tc(ptr noundef %18, i32 noundef %12)
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %377, label %21

21:                                               ; preds = %10, %4
  %22 = phi i32 [ %11, %10 ], [ 1, %4 ]
  %23 = phi i32 [ %19, %10 ], [ 0, %4 ]
  %24 = phi ptr [ %18, %10 ], [ %0, %4 ]
  tail call void @mutex_lock(ptr noundef nonnull @xps_map_mutex) #39
  %25 = getelementptr %struct.net_device, ptr %24, i32 0, i32 94, i32 %3
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq i32 %3, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.net_device, ptr %24, i32 0, i32 74
  %30 = load i32, ptr %29, align 8
  br label %39

31:                                               ; preds = %21
  %32 = load i32, ptr @nr_cpu_ids, align 4
  %33 = load i32, ptr @__cpu_possible_mask, align 4
  %34 = and i32 %33, 65535
  %35 = tail call i32 @__sw_hweight32(i32 noundef %34) #39
  %36 = load i32, ptr @nr_cpu_ids, align 4
  %37 = icmp ugt i32 %35, 1
  %38 = select i1 %37, ptr @__cpu_online_mask, ptr null
  br label %39

39:                                               ; preds = %31, %28
  %40 = phi i32 [ %30, %28 ], [ %32, %31 ]
  %41 = phi i32 [ %30, %28 ], [ %36, %31 ]
  %42 = phi ptr [ null, %28 ], [ %38, %31 ]
  %43 = shl nuw nsw i32 %22, 2
  %44 = mul i32 %43, %40
  %45 = add i32 %44, 16
  %46 = tail call i32 @llvm.smax.i32(i32 %45, i32 64)
  %47 = icmp eq ptr %26, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %struct.xps_dev_maps, ptr %26, i32 0, i32 2
  %50 = load i16, ptr %49, align 4
  %51 = sext i16 %50 to i32
  %52 = icmp eq i32 %22, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.xps_dev_maps, ptr %26, i32 0, i32 1
  %55 = load i32, ptr %54, align 4
  %56 = icmp eq i32 %55, %41
  br label %57

57:                                               ; preds = %53, %48, %39
  %58 = phi i1 [ false, %48 ], [ false, %39 ], [ %56, %53 ]
  %59 = icmp ne ptr %42, null
  %60 = icmp ne ptr %1, null
  %61 = and i1 %60, %59
  %62 = trunc i32 %22 to i16
  br label %63

63:                                               ; preds = %133, %57
  %64 = phi i32 [ -1, %57 ], [ %76, %133 ]
  %65 = phi ptr [ null, %57 ], [ %88, %133 ]
  %66 = add i32 %64, 1
  br i1 %61, label %67, label %69

67:                                               ; preds = %63
  %68 = tail call i32 @_find_next_bit(ptr noundef nonnull %42, ptr noundef nonnull %1, i32 noundef %41, i32 noundef %66, i32 noundef 0, i32 noundef 0) #39
  br label %75

69:                                               ; preds = %63
  br i1 %59, label %70, label %72

70:                                               ; preds = %69
  %71 = tail call i32 @_find_next_bit_le(ptr noundef nonnull %42, i32 noundef %41, i32 noundef %66) #39
  br label %75

72:                                               ; preds = %69
  br i1 %60, label %73, label %75

73:                                               ; preds = %72
  %74 = tail call i32 @_find_next_bit_le(ptr noundef nonnull %1, i32 noundef %41, i32 noundef %66) #39
  br label %75

75:                                               ; preds = %73, %72, %70, %67
  %76 = phi i32 [ %71, %70 ], [ %74, %73 ], [ %68, %67 ], [ %66, %72 ]
  %77 = icmp ult i32 %76, %41
  %78 = icmp eq ptr %65, null
  br i1 %77, label %79, label %136

79:                                               ; preds = %75
  br i1 %78, label %80, label %87

80:                                               ; preds = %79
  %81 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %46, i32 noundef 3520) #44
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #39
  br label %377

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.xps_dev_maps, ptr %81, i32 0, i32 1
  store i32 %41, ptr %85, align 8
  %86 = getelementptr inbounds %struct.xps_dev_maps, ptr %81, i32 0, i32 2
  store i16 %62, ptr %86, align 4
  br label %87

87:                                               ; preds = %84, %79
  %88 = phi ptr [ %65, %79 ], [ %81, %84 ]
  %89 = mul i32 %76, %22
  %90 = add i32 %89, %23
  br i1 %58, label %91, label %112

91:                                               ; preds = %87
  %92 = getelementptr %struct.xps_dev_maps, ptr %26, i32 0, i32 3, i32 %90
  %93 = load ptr, ptr %92, align 4
  %94 = icmp eq ptr %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %91
  %96 = load i32, ptr %93, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %106, label %101

98:                                               ; preds = %101
  %99 = add nuw i32 %102, 1
  %100 = icmp eq i32 %99, %96
  br i1 %100, label %106, label %101

101:                                              ; preds = %98, %95
  %102 = phi i32 [ %99, %98 ], [ 0, %95 ]
  %103 = getelementptr %struct.xps_map, ptr %93, i32 0, i32 3, i32 %102
  %104 = load i16, ptr %103, align 2
  %105 = icmp eq i16 %104, %2
  br i1 %105, label %133, label %98

106:                                              ; preds = %98, %95
  %107 = getelementptr inbounds %struct.xps_map, ptr %93, i32 0, i32 1
  %108 = load i32, ptr %107, align 4
  %109 = icmp ult i32 %96, %108
  br i1 %109, label %133, label %110

110:                                              ; preds = %106
  %111 = shl i32 %108, 1
  br label %112

112:                                              ; preds = %110, %91, %87
  %113 = phi ptr [ %93, %110 ], [ null, %91 ], [ null, %87 ]
  %114 = phi i32 [ %96, %110 ], [ 0, %91 ], [ 0, %87 ]
  %115 = phi i32 [ %111, %110 ], [ 24, %91 ], [ 24, %87 ]
  %116 = shl i32 %115, 1
  %117 = add i32 %116, 16
  %118 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %117, i32 noundef 3520) #44
  %119 = icmp eq ptr %118, null
  br i1 %119, label %131, label %120

120:                                              ; preds = %112
  %121 = icmp sgt i32 %114, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %122, %120
  %123 = phi i32 [ %127, %122 ], [ 0, %120 ]
  %124 = getelementptr %struct.xps_map, ptr %113, i32 0, i32 3, i32 %123
  %125 = load i16, ptr %124, align 2
  %126 = getelementptr %struct.xps_map, ptr %118, i32 0, i32 3, i32 %123
  store i16 %125, ptr %126, align 2
  %127 = add nuw nsw i32 %123, 1
  %128 = icmp eq i32 %127, %114
  br i1 %128, label %129, label %122

129:                                              ; preds = %122, %120
  %130 = getelementptr inbounds %struct.xps_map, ptr %118, i32 0, i32 1
  store i32 %115, ptr %130, align 4
  store i32 %114, ptr %118, align 64
  br label %133

131:                                              ; preds = %112
  %132 = call i32 @llvm.umax.i32(i32 %41, i32 1)
  br label %352

133:                                              ; preds = %129, %106, %101
  %134 = phi ptr [ %118, %129 ], [ %93, %106 ], [ %93, %101 ]
  %135 = getelementptr %struct.xps_dev_maps, ptr %88, i32 0, i32 3, i32 %90
  store volatile ptr %134, ptr %135, align 4
  br label %63

136:                                              ; preds = %75
  br i1 %78, label %252, label %137

137:                                              ; preds = %136
  br i1 %47, label %138, label %150

138:                                              ; preds = %137
  %139 = load i8, ptr @static_key_initialized, align 1, !range !28
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %142, !prof !15

141:                                              ; preds = %138
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 290, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_inc, ptr noundef nonnull @xps_needed) #39
  br label %142

142:                                              ; preds = %141, %138
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @xps_needed) #39, !srcloc !29
  %143 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @xps_needed, ptr nonnull @xps_needed, i32 1, ptr nonnull elementtype(i32) @xps_needed) #39, !srcloc !30
  br i1 %27, label %144, label %150

144:                                              ; preds = %142
  %145 = load i8, ptr @static_key_initialized, align 1, !range !28
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %148, !prof !15

147:                                              ; preds = %144
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 290, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_inc, ptr noundef nonnull @xps_rxqs_needed) #39
  br label %148

148:                                              ; preds = %147, %144
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @xps_rxqs_needed) #39, !srcloc !29
  %149 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @xps_rxqs_needed, ptr nonnull @xps_rxqs_needed, i32 1, ptr nonnull elementtype(i32) @xps_rxqs_needed) #39, !srcloc !30
  br label %150

150:                                              ; preds = %148, %142, %137
  %151 = icmp eq i32 %41, 0
  br i1 %151, label %219, label %152

152:                                              ; preds = %150
  %153 = icmp eq ptr %42, null
  %154 = getelementptr inbounds %struct.xps_dev_maps, ptr %26, i32 0, i32 2
  br label %155

155:                                              ; preds = %216, %152
  %156 = phi i32 [ 0, %152 ], [ %217, %216 ]
  %157 = mul i32 %156, %22
  %158 = add i32 %157, %23
  %159 = lshr i32 %156, 5
  %160 = getelementptr i32, ptr %1, i32 %159
  %161 = load volatile i32, ptr %160, align 4
  %162 = and i32 %156, 31
  %163 = shl nuw i32 1, %162
  %164 = and i32 %161, %163
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %191, label %166

166:                                              ; preds = %155
  br i1 %153, label %172, label %167

167:                                              ; preds = %166
  %168 = getelementptr i32, ptr %42, i32 %159
  %169 = load volatile i32, ptr %168, align 4
  %170 = and i32 %169, %163
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %191, label %172

172:                                              ; preds = %167, %166
  %173 = getelementptr %struct.xps_dev_maps, ptr %65, i32 0, i32 3, i32 %158
  %174 = load ptr, ptr %173, align 4
  %175 = load i32, ptr %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %185, label %177

177:                                              ; preds = %182, %172
  %178 = phi i32 [ %183, %182 ], [ 0, %172 ]
  %179 = getelementptr %struct.xps_map, ptr %174, i32 0, i32 3, i32 %178
  %180 = load i16, ptr %179, align 2
  %181 = icmp eq i16 %180, %2
  br i1 %181, label %185, label %182

182:                                              ; preds = %177
  %183 = add nuw i32 %178, 1
  %184 = icmp eq i32 %183, %175
  br i1 %184, label %188, label %177

185:                                              ; preds = %177, %172
  %186 = phi i32 [ 0, %172 ], [ %178, %177 ]
  %187 = icmp eq i32 %186, %175
  br i1 %187, label %188, label %191

188:                                              ; preds = %185, %182
  %189 = add i32 %175, 1
  store i32 %189, ptr %174, align 4
  %190 = getelementptr %struct.xps_map, ptr %174, i32 0, i32 3, i32 %175
  store i16 %2, ptr %190, align 2
  br label %191

191:                                              ; preds = %188, %185, %167, %155
  %192 = phi i1 [ false, %167 ], [ false, %155 ], [ true, %188 ], [ true, %185 ]
  br i1 %58, label %193, label %216

193:                                              ; preds = %191
  %194 = load i16, ptr %154, align 4
  %195 = icmp sgt i16 %194, 0
  br i1 %195, label %196, label %216

196:                                              ; preds = %193
  %197 = zext i16 %194 to i32
  %198 = mul i32 %156, %197
  br label %199

199:                                              ; preds = %210, %196
  %200 = phi i16 [ %211, %210 ], [ %194, %196 ]
  %201 = phi i32 [ %212, %210 ], [ 0, %196 ]
  %202 = phi i32 [ %213, %210 ], [ %198, %196 ]
  %203 = icmp eq i32 %201, %23
  %204 = and i1 %192, %203
  br i1 %204, label %210, label %205

205:                                              ; preds = %199
  %206 = getelementptr %struct.xps_dev_maps, ptr %26, i32 0, i32 3, i32 %202
  %207 = load ptr, ptr %206, align 4
  %208 = getelementptr %struct.xps_dev_maps, ptr %65, i32 0, i32 3, i32 %202
  store volatile ptr %207, ptr %208, align 4
  %209 = load i16, ptr %154, align 4
  br label %210

210:                                              ; preds = %205, %199
  %211 = phi i16 [ %200, %199 ], [ %209, %205 ]
  %212 = add nuw nsw i32 %201, 1
  %213 = add i32 %202, 1
  %214 = sext i16 %211 to i32
  %215 = icmp slt i32 %212, %214
  br i1 %215, label %199, label %216

216:                                              ; preds = %210, %193, %191
  %217 = add nuw i32 %156, 1
  %218 = icmp eq i32 %217, %41
  br i1 %218, label %219, label %155

219:                                              ; preds = %216, %150
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !39
  store volatile ptr %65, ptr %25, align 4
  br i1 %47, label %252, label %220

220:                                              ; preds = %219
  %221 = getelementptr inbounds %struct.xps_dev_maps, ptr %26, i32 0, i32 1
  %222 = load i32, ptr %221, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %252, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.xps_dev_maps, ptr %26, i32 0, i32 2
  br label %226

226:                                              ; preds = %248, %224
  %227 = phi i32 [ 0, %224 ], [ %249, %248 ]
  %228 = load i16, ptr %225, align 4
  %229 = sext i16 %228 to i32
  %230 = mul i32 %227, %229
  br label %231

231:                                              ; preds = %245, %226
  %232 = phi i32 [ %22, %226 ], [ %234, %245 ]
  %233 = phi i32 [ %230, %226 ], [ %246, %245 ]
  %234 = add nsw i32 %232, -1
  %235 = getelementptr %struct.xps_dev_maps, ptr %26, i32 0, i32 3, i32 %233
  %236 = load ptr, ptr %235, align 4
  %237 = icmp eq ptr %236, null
  br i1 %237, label %245, label %238

238:                                              ; preds = %231
  br i1 %58, label %239, label %243

239:                                              ; preds = %238
  %240 = getelementptr %struct.xps_dev_maps, ptr %65, i32 0, i32 3, i32 %233
  %241 = load ptr, ptr %240, align 4
  %242 = icmp eq ptr %236, %241
  br i1 %242, label %245, label %243

243:                                              ; preds = %239, %238
  store volatile ptr null, ptr %235, align 4
  %244 = getelementptr inbounds %struct.xps_map, ptr %236, i32 0, i32 2
  tail call void @kvfree_call_rcu(ptr noundef %244, ptr noundef nonnull inttoptr (i32 8 to ptr)) #39
  br label %245

245:                                              ; preds = %243, %239, %231
  %246 = add i32 %233, 1
  %247 = icmp eq i32 %234, 0
  br i1 %247, label %248, label %231

248:                                              ; preds = %245
  %249 = add nuw i32 %227, 1
  %250 = load i32, ptr %221, align 4
  %251 = icmp ult i32 %249, %250
  br i1 %251, label %226, label %252

252:                                              ; preds = %248, %220, %219, %136
  %253 = phi ptr [ null, %136 ], [ null, %219 ], [ %26, %220 ], [ %26, %248 ]
  %254 = phi ptr [ %26, %136 ], [ %65, %219 ], [ %65, %220 ], [ %65, %248 ]
  %255 = xor i1 %78, true
  %256 = icmp eq ptr %254, null
  br i1 %256, label %351, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %struct.xps_dev_maps, ptr %254, i32 0, i32 1
  %259 = load i32, ptr %258, align 4
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %345, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %struct.xps_dev_maps, ptr %254, i32 0, i32 2
  %263 = icmp eq ptr %42, null
  %264 = select i1 %58, ptr %253, ptr null
  %265 = icmp eq ptr %264, null
  %266 = load i16, ptr %262, align 4
  br label %267

267:                                              ; preds = %338, %261
  %268 = phi i32 [ %259, %261 ], [ %339, %338 ]
  %269 = phi i16 [ %266, %261 ], [ %340, %338 ]
  %270 = phi i16 [ %266, %261 ], [ %341, %338 ]
  %271 = phi i1 [ %255, %261 ], [ %342, %338 ]
  %272 = phi i32 [ 0, %261 ], [ %343, %338 ]
  %273 = icmp sgt i16 %270, 0
  br i1 %273, label %274, label %338

274:                                              ; preds = %267
  %275 = zext i16 %270 to i32
  %276 = mul i32 %272, %275
  %277 = lshr i32 %272, 5
  %278 = getelementptr i32, ptr %1, i32 %277
  %279 = and i32 %272, 31
  %280 = shl nuw i32 1, %279
  %281 = getelementptr i32, ptr %42, i32 %277
  br label %282

282:                                              ; preds = %329, %274
  %283 = phi i16 [ %269, %274 ], [ %330, %329 ]
  %284 = phi i1 [ %271, %274 ], [ %331, %329 ]
  %285 = phi i32 [ %276, %274 ], [ %333, %329 ]
  %286 = phi i32 [ 0, %274 ], [ %332, %329 ]
  %287 = icmp eq i32 %286, %23
  br i1 %287, label %288, label %300

288:                                              ; preds = %282
  %289 = load volatile i32, ptr %278, align 4
  %290 = and i32 %289, %280
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %300, label %292

292:                                              ; preds = %288
  br i1 %263, label %297, label %293

293:                                              ; preds = %292
  %294 = load volatile i32, ptr %281, align 4
  %295 = and i32 %294, %280
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %300, label %329

297:                                              ; preds = %292
  %298 = load i32, ptr %258, align 4
  %299 = icmp ult i32 %272, %298
  br i1 %299, label %329, label %300

300:                                              ; preds = %297, %293, %288, %282
  %301 = getelementptr %struct.xps_dev_maps, ptr %254, i32 0, i32 3, i32 %285
  %302 = load ptr, ptr %301, align 4
  %303 = icmp eq ptr %302, null
  br i1 %303, label %325, label %304

304:                                              ; preds = %300
  %305 = load i32, ptr %302, align 4
  br label %306

306:                                              ; preds = %309, %304
  %307 = phi i32 [ %305, %304 ], [ %310, %309 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %325, label %309

309:                                              ; preds = %306
  %310 = add i32 %307, -1
  %311 = getelementptr %struct.xps_map, ptr %302, i32 0, i32 3, i32 %310
  %312 = load i16, ptr %311, align 2
  %313 = icmp eq i16 %312, %2
  br i1 %313, label %314, label %306

314:                                              ; preds = %309
  %315 = icmp ugt i32 %305, 1
  br i1 %315, label %316, label %320

316:                                              ; preds = %314
  %317 = add i32 %305, -1
  store i32 %317, ptr %302, align 4
  %318 = getelementptr %struct.xps_map, ptr %302, i32 0, i32 3, i32 %317
  %319 = load i16, ptr %318, align 2
  store i16 %319, ptr %311, align 2
  br label %325

320:                                              ; preds = %314
  br i1 %265, label %323, label %321

321:                                              ; preds = %320
  %322 = getelementptr %struct.xps_dev_maps, ptr %264, i32 0, i32 3, i32 %285
  store volatile ptr null, ptr %322, align 4
  br label %323

323:                                              ; preds = %321, %320
  store volatile ptr null, ptr %301, align 4
  %324 = getelementptr inbounds %struct.xps_map, ptr %302, i32 0, i32 2
  tail call void @kvfree_call_rcu(ptr noundef %324, ptr noundef nonnull inttoptr (i32 8 to ptr)) #39
  br label %325

325:                                              ; preds = %323, %316, %306, %300
  %326 = phi i1 [ false, %323 ], [ false, %300 ], [ true, %316 ], [ true, %306 ]
  %327 = or i1 %284, %326
  %328 = load i16, ptr %262, align 4
  br label %329

329:                                              ; preds = %325, %297, %293
  %330 = phi i16 [ %283, %297 ], [ %328, %325 ], [ %283, %293 ]
  %331 = phi i1 [ %284, %297 ], [ %327, %325 ], [ %284, %293 ]
  %332 = add nuw nsw i32 %286, 1
  %333 = add i32 %285, 1
  %334 = sext i16 %330 to i32
  %335 = icmp slt i32 %332, %334
  br i1 %335, label %282, label %336

336:                                              ; preds = %329
  %337 = load i32, ptr %258, align 4
  br label %338

338:                                              ; preds = %336, %267
  %339 = phi i32 [ %268, %267 ], [ %337, %336 ]
  %340 = phi i16 [ %269, %267 ], [ %330, %336 ]
  %341 = phi i16 [ %270, %267 ], [ %330, %336 ]
  %342 = phi i1 [ %271, %267 ], [ %331, %336 ]
  %343 = add nuw i32 %272, 1
  %344 = icmp ult i32 %343, %339
  br i1 %344, label %267, label %345

345:                                              ; preds = %338, %257
  %346 = phi i1 [ %255, %257 ], [ %342, %338 ]
  %347 = icmp eq ptr %253, null
  br i1 %347, label %349, label %348

348:                                              ; preds = %345
  tail call void @kvfree_call_rcu(ptr noundef nonnull %253, ptr noundef null) #39
  br label %349

349:                                              ; preds = %348, %345
  br i1 %346, label %351, label %350

350:                                              ; preds = %349
  tail call fastcc void @reset_xps_maps(ptr noundef %24, ptr noundef nonnull %254, i32 noundef %3)
  br label %351

351:                                              ; preds = %350, %349, %252
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #39
  br label %377

352:                                              ; preds = %373, %131
  %353 = phi i32 [ %374, %373 ], [ 0, %131 ]
  %354 = mul i32 %353, %22
  br label %355

355:                                              ; preds = %370, %352
  %356 = phi i32 [ %22, %352 ], [ %358, %370 ]
  %357 = phi i32 [ %354, %352 ], [ %371, %370 ]
  %358 = add nsw i32 %356, -1
  %359 = getelementptr %struct.xps_dev_maps, ptr %88, i32 0, i32 3, i32 %357
  %360 = load ptr, ptr %359, align 4
  br i1 %58, label %361, label %364

361:                                              ; preds = %355
  %362 = getelementptr %struct.xps_dev_maps, ptr %26, i32 0, i32 3, i32 %357
  %363 = load ptr, ptr %362, align 4
  br label %364

364:                                              ; preds = %361, %355
  %365 = phi ptr [ %363, %361 ], [ null, %355 ]
  %366 = icmp eq ptr %360, null
  %367 = icmp eq ptr %360, %365
  %368 = select i1 %366, i1 true, i1 %367
  br i1 %368, label %370, label %369

369:                                              ; preds = %364
  tail call void @kfree(ptr noundef nonnull %360) #39
  br label %370

370:                                              ; preds = %369, %364
  %371 = add i32 %357, 1
  %372 = icmp eq i32 %358, 0
  br i1 %372, label %373, label %355

373:                                              ; preds = %370
  %374 = add nuw i32 %353, 1
  %375 = icmp eq i32 %374, %132
  br i1 %375, label %376, label %352

376:                                              ; preds = %373
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #39
  tail call void @kfree(ptr noundef %88) #39
  br label %377

377:                                              ; preds = %376, %351, %83, %10, %8
  %378 = phi i32 [ -12, %376 ], [ -12, %83 ], [ 0, %351 ], [ -22, %8 ], [ -22, %10 ]
  ret i32 %378
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @reset_xps_maps(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #1 {
  %4 = load i8, ptr @static_key_initialized, align 1, !range !28
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !15

6:                                                ; preds = %3
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 296, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_dec, ptr noundef nonnull @xps_needed) #39
  br label %7

7:                                                ; preds = %6, %3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @xps_needed) #39, !srcloc !29
  %8 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @xps_needed, ptr nonnull @xps_needed, i32 1, ptr nonnull elementtype(i32) @xps_needed) #39, !srcloc !31
  %9 = icmp eq i32 %2, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = load i8, ptr @static_key_initialized, align 1, !range !28
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14, !prof !15

13:                                               ; preds = %10
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 296, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_dec, ptr noundef nonnull @xps_rxqs_needed) #39
  br label %14

14:                                               ; preds = %13, %10
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @xps_rxqs_needed) #39, !srcloc !29
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @xps_rxqs_needed, ptr nonnull @xps_rxqs_needed, i32 1, ptr nonnull elementtype(i32) @xps_rxqs_needed) #39, !srcloc !31
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr %struct.net_device, ptr %0, i32 0, i32 94, i32 %2
  store volatile ptr null, ptr %17, align 4
  %18 = icmp eq ptr %1, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @kvfree_call_rcu(ptr noundef nonnull %1, ptr noundef null) #39
  br label %20

20:                                               ; preds = %19, %16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_set_xps_queue(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2) #1 {
  tail call void @cpus_read_lock() #39
  %4 = tail call i32 @__netif_set_xps_queue(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2, i32 noundef 0)
  tail call void @cpus_read_unlock() #39
  ret i32 %4
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_lock() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_unlock() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_reset_tc(ptr noundef %0) #1 {
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %0, i16 noundef zeroext 0)
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %3 = load ptr, ptr %2, align 64
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %5 = load i32, ptr %4, align 4
  %6 = getelementptr %struct.netdev_queue, ptr %3, i32 %5
  %7 = icmp eq ptr %6, %3
  br i1 %7, label %36, label %8

8:                                                ; preds = %33, %1
  %9 = phi ptr [ %34, %33 ], [ %3, %1 ]
  %10 = phi ptr [ %11, %33 ], [ %6, %1 ]
  %11 = getelementptr %struct.netdev_queue, ptr %10, i32 -1
  %12 = getelementptr %struct.netdev_queue, ptr %10, i32 -1, i32 7
  %13 = load ptr, ptr %12, align 8
  %14 = icmp eq ptr %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %8
  %16 = load i32, ptr %4, align 4
  %17 = getelementptr %struct.netdev_queue, ptr %9, i32 %16
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef nonnull %13, i16 noundef zeroext 0) #39
  %18 = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 118
  tail call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(80) %18, i8 0, i64 80, i1 false) #39
  %19 = load ptr, ptr %2, align 64
  %20 = icmp eq ptr %17, %19
  br i1 %20, label %33, label %21

21:                                               ; preds = %30, %15
  %22 = phi ptr [ %31, %30 ], [ %19, %15 ]
  %23 = phi ptr [ %24, %30 ], [ %17, %15 ]
  %24 = getelementptr %struct.netdev_queue, ptr %23, i32 -1
  %25 = getelementptr %struct.netdev_queue, ptr %23, i32 -1, i32 7
  %26 = load ptr, ptr %25, align 8
  %27 = icmp eq ptr %26, %13
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  store ptr null, ptr %25, align 8
  %29 = load ptr, ptr %2, align 64
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi ptr [ %29, %28 ], [ %22, %21 ]
  %32 = icmp eq ptr %24, %31
  br i1 %32, label %33, label %21

33:                                               ; preds = %30, %15, %8
  %34 = phi ptr [ %17, %15 ], [ %9, %8 ], [ %24, %30 ]
  %35 = icmp eq ptr %11, %34
  br i1 %35, label %36, label %8

36:                                               ; preds = %33, %1
  %37 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  call void @llvm.memset.p0.i64(ptr noundef align 2 dereferenceable(82) %37, i8 0, i64 82, i1 false)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @netif_reset_xps_queues_gt(ptr noundef %0, i16 noundef zeroext %1) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %4 = load i32, ptr %3, align 4
  %5 = trunc i32 %4 to i16
  %6 = sub i16 %5, %1
  %7 = load volatile i32, ptr @xps_needed, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  tail call void @cpus_read_lock() #39
  tail call void @mutex_lock(ptr noundef nonnull @xps_map_mutex) #39
  %10 = load volatile i32, ptr @xps_rxqs_needed, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call fastcc void @clean_xps_maps(ptr noundef %0, i32 noundef 1, i16 noundef zeroext %1, i16 noundef zeroext %6) #39
  br label %13

13:                                               ; preds = %12, %9
  tail call fastcc void @clean_xps_maps(ptr noundef %0, i32 noundef 0, i16 noundef zeroext %1, i16 noundef zeroext %6) #39
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #39
  tail call void @cpus_read_unlock() #39
  br label %14

14:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_set_tc_queue(ptr noundef %0, i8 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) #1 {
  %5 = zext i8 %1 to i32
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  %9 = icmp slt i32 %5, %8
  br i1 %9, label %10, label %21

10:                                               ; preds = %4
  %11 = load volatile i32, ptr @xps_needed, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  tail call void @cpus_read_lock() #39
  tail call void @mutex_lock(ptr noundef nonnull @xps_map_mutex) #39
  %14 = load volatile i32, ptr @xps_rxqs_needed, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call fastcc void @clean_xps_maps(ptr noundef %0, i32 noundef 1, i16 noundef zeroext %3, i16 noundef zeroext %2) #39
  br label %17

17:                                               ; preds = %16, %13
  tail call fastcc void @clean_xps_maps(ptr noundef %0, i32 noundef 0, i16 noundef zeroext %3, i16 noundef zeroext %2) #39
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #39
  tail call void @cpus_read_unlock() #39
  br label %18

18:                                               ; preds = %17, %10
  %19 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 %5
  store i16 %2, ptr %19, align 4
  %20 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 %5, i32 1
  store i16 %3, ptr %20, align 2
  br label %21

21:                                               ; preds = %18, %4
  %22 = phi i32 [ 0, %18 ], [ -22, %4 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_set_num_tc(ptr noundef %0, i8 noundef zeroext %1) #1 {
  %3 = icmp ugt i8 %1, 16
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %0, i16 noundef zeroext 0)
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %6 = load ptr, ptr %5, align 64
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %8 = load i32, ptr %7, align 4
  %9 = getelementptr %struct.netdev_queue, ptr %6, i32 %8
  %10 = icmp eq ptr %9, %6
  br i1 %10, label %39, label %11

11:                                               ; preds = %36, %4
  %12 = phi ptr [ %37, %36 ], [ %6, %4 ]
  %13 = phi ptr [ %14, %36 ], [ %9, %4 ]
  %14 = getelementptr %struct.netdev_queue, ptr %13, i32 -1
  %15 = getelementptr %struct.netdev_queue, ptr %13, i32 -1, i32 7
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %11
  %19 = load i32, ptr %7, align 4
  %20 = getelementptr %struct.netdev_queue, ptr %12, i32 %19
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef nonnull %16, i16 noundef zeroext 0) #39
  %21 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 118
  tail call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(80) %21, i8 0, i64 80, i1 false) #39
  %22 = load ptr, ptr %5, align 64
  %23 = icmp eq ptr %20, %22
  br i1 %23, label %36, label %24

24:                                               ; preds = %33, %18
  %25 = phi ptr [ %34, %33 ], [ %22, %18 ]
  %26 = phi ptr [ %27, %33 ], [ %20, %18 ]
  %27 = getelementptr %struct.netdev_queue, ptr %26, i32 -1
  %28 = getelementptr %struct.netdev_queue, ptr %26, i32 -1, i32 7
  %29 = load ptr, ptr %28, align 8
  %30 = icmp eq ptr %29, %16
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  store ptr null, ptr %28, align 8
  %32 = load ptr, ptr %5, align 64
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi ptr [ %32, %31 ], [ %25, %24 ]
  %35 = icmp eq ptr %27, %34
  br i1 %35, label %36, label %24

36:                                               ; preds = %33, %18, %11
  %37 = phi ptr [ %20, %18 ], [ %12, %11 ], [ %27, %33 ]
  %38 = icmp eq ptr %14, %37
  br i1 %38, label %39, label %11

39:                                               ; preds = %36, %4
  %40 = zext i8 %1 to i16
  %41 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  store i16 %40, ptr %41, align 2
  br label %42

42:                                               ; preds = %39, %2
  %43 = phi i32 [ 0, %39 ], [ -22, %2 ]
  ret i32 %43
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_unbind_sb_channel(ptr nocapture noundef readonly %0, ptr noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %4 = load ptr, ptr %3, align 64
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %6 = load i32, ptr %5, align 4
  %7 = getelementptr %struct.netdev_queue, ptr %4, i32 %6
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %1, i16 noundef zeroext 0)
  %8 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 118
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(80) %8, i8 0, i64 80, i1 false)
  %9 = load ptr, ptr %3, align 64
  %10 = icmp eq ptr %7, %9
  br i1 %10, label %23, label %11

11:                                               ; preds = %20, %2
  %12 = phi ptr [ %21, %20 ], [ %9, %2 ]
  %13 = phi ptr [ %14, %20 ], [ %7, %2 ]
  %14 = getelementptr %struct.netdev_queue, ptr %13, i32 -1
  %15 = getelementptr %struct.netdev_queue, ptr %13, i32 -1, i32 7
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, %1
  br i1 %17, label %18, label %20

18:                                               ; preds = %11
  store ptr null, ptr %15, align 8
  %19 = load ptr, ptr %3, align 64
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi ptr [ %19, %18 ], [ %12, %11 ]
  %22 = icmp eq ptr %14, %21
  br i1 %22, label %23, label %11

23:                                               ; preds = %20, %2
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_bind_sb_channel_queue(ptr nocapture noundef readonly %0, ptr noundef %1, i8 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20 {
  %6 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 117
  %7 = load i16, ptr %6, align 2
  %8 = icmp sgt i16 %7, -1
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = zext i8 %2 to i32
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  %12 = load i16, ptr %11, align 2
  %13 = sext i16 %12 to i32
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %15, label %35

15:                                               ; preds = %9
  %16 = zext i16 %4 to i32
  %17 = zext i16 %3 to i32
  %18 = add nuw nsw i32 %16, %17
  %19 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %20 = load i32, ptr %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %35, label %22

22:                                               ; preds = %15
  %23 = getelementptr %struct.net_device, ptr %1, i32 0, i32 118, i32 %10
  store i16 %3, ptr %23, align 4
  %24 = getelementptr %struct.net_device, ptr %1, i32 0, i32 118, i32 %10, i32 1
  store i16 %4, ptr %24, align 2
  %25 = icmp eq i16 %3, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i32 [ %17, %26 ], [ %30, %28 ]
  %30 = add nsw i32 %29, -1
  %31 = add nuw nsw i32 %30, %16
  %32 = load ptr, ptr %27, align 64
  %33 = getelementptr %struct.netdev_queue, ptr %32, i32 %31, i32 7
  store ptr %1, ptr %33, align 8
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %35, label %28

35:                                               ; preds = %28, %22, %15, %9, %5
  %36 = phi i32 [ -22, %9 ], [ -22, %5 ], [ -22, %15 ], [ 0, %22 ], [ 0, %28 ]
  ret i32 %36
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @netdev_set_sb_channel(ptr nocapture noundef %0, i16 noundef zeroext %1) #21 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %4 = load i32, ptr %3, align 4
  %5 = icmp ugt i32 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = icmp slt i16 %1, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = sub nsw i16 0, %1
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  store i16 %9, ptr %10, align 2
  br label %11

11:                                               ; preds = %8, %6, %2
  %12 = phi i32 [ 0, %8 ], [ -19, %2 ], [ -22, %6 ]
  ret i32 %12
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_set_real_num_tx_queues(ptr noundef %0, i32 noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %4 = load i32, ptr %3, align 8
  %5 = icmp ugt i32 %4, %1
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %89, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %9 = load i32, ptr %8, align 4
  %10 = icmp ult i32 %9, %1
  br i1 %10, label %89, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %13 = load i8, ptr %12, align 4
  %14 = add i8 %13, -1
  %15 = icmp ult i8 %14, 2
  br i1 %15, label %16, label %88

16:                                               ; preds = %11
  %17 = tail call i32 @rtnl_is_locked() #39
  %18 = icmp eq i32 %17, 0
  %19 = load i1, ptr @netif_set_real_num_tx_queues.__already_done, align 1
  %20 = xor i1 %19, true
  %21 = select i1 %18, i1 %20, i1 false
  br i1 %21, label %22, label %23, !prof !15

22:                                               ; preds = %16
  store i1 true, ptr @netif_set_real_num_tx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2837, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 2837) #39
  br label %23

23:                                               ; preds = %22, %16
  %24 = load i32, ptr %3, align 8
  %25 = tail call i32 @netdev_queue_update_kobjects(ptr noundef %0, i32 noundef %24, i32 noundef %1) #39
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %89

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  %29 = load i16, ptr %28, align 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %61, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 118
  %33 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 118, i32 0, i32 1
  %34 = load i16, ptr %33, align 2
  %35 = zext i16 %34 to i32
  %36 = load i16, ptr %32, align 2
  %37 = zext i16 %36 to i32
  %38 = add nuw nsw i32 %37, %35
  %39 = icmp ugt i32 %38, %1
  br i1 %39, label %40, label %41

40:                                               ; preds = %31
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.76) #42
  store i16 0, ptr %28, align 2
  br label %61

41:                                               ; preds = %58, %31
  %42 = phi i32 [ %59, %58 ], [ 1, %31 ]
  %43 = getelementptr %struct.net_device, ptr %0, i32 0, i32 119, i32 %42
  %44 = load i8, ptr %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 %45
  %47 = getelementptr %struct.net_device, ptr %0, i32 0, i32 118, i32 %45, i32 1
  %48 = load i16, ptr %47, align 2
  %49 = zext i16 %48 to i32
  %50 = load i16, ptr %46, align 2
  %51 = zext i16 %50 to i32
  %52 = add nuw nsw i32 %51, %49
  %53 = icmp ugt i32 %52, %1
  br i1 %53, label %54, label %58

54:                                               ; preds = %41
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.77, i32 noundef %42, i32 noundef %45) #42
  %55 = load i16, ptr %28, align 2
  %56 = icmp slt i16 %55, 1
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  store i8 0, ptr %43, align 1
  br label %58

58:                                               ; preds = %57, %54, %41
  %59 = add nuw nsw i32 %42, 1
  %60 = icmp eq i32 %59, 16
  br i1 %60, label %61, label %41

61:                                               ; preds = %58, %40, %27
  tail call void @dev_qdisc_change_real_num_tx(ptr noundef %0, i32 noundef %1) #39
  store i32 %1, ptr %3, align 8
  br i1 %5, label %62, label %89

62:                                               ; preds = %61
  %63 = tail call i32 @rtnl_is_locked() #39
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  tail call void @synchronize_rcu_expedited() #39
  br label %67

66:                                               ; preds = %62
  tail call void @synchronize_rcu() #39
  br label %67

67:                                               ; preds = %66, %65
  %68 = load i32, ptr %8, align 4
  %69 = icmp ugt i32 %68, %1
  br i1 %69, label %70, label %86

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i32 [ %68, %70 ], [ %83, %82 ]
  %74 = phi i32 [ %1, %70 ], [ %84, %82 ]
  %75 = load ptr, ptr %71, align 64
  %76 = getelementptr %struct.netdev_queue, ptr %75, i32 %74, i32 2
  %77 = load ptr, ptr %76, align 4
  %78 = icmp eq ptr %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.Qdisc, ptr %77, i32 0, i32 16, i32 3
  tail call void @_raw_spin_lock_bh(ptr noundef %80) #39
  tail call void @qdisc_reset(ptr noundef nonnull %77) #39
  tail call void @_raw_spin_unlock_bh(ptr noundef %80) #39
  %81 = load i32, ptr %8, align 4
  br label %82

82:                                               ; preds = %79, %72
  %83 = phi i32 [ %73, %72 ], [ %81, %79 ]
  %84 = add nuw i32 %74, 1
  %85 = icmp ult i32 %84, %83
  br i1 %85, label %72, label %86

86:                                               ; preds = %82, %67
  %87 = trunc i32 %1 to i16
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %0, i16 noundef zeroext %87)
  br label %89

88:                                               ; preds = %11
  store i32 %1, ptr %3, align 8
  br label %89

89:                                               ; preds = %88, %86, %61, %23, %7, %2
  %90 = phi i32 [ -22, %7 ], [ -22, %2 ], [ %25, %23 ], [ 0, %61 ], [ 0, %86 ], [ 0, %88 ]
  ret i32 %90
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_queue_update_kobjects(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_qdisc_change_real_num_tx(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_set_real_num_rx_queues(ptr noundef %0, i32 noundef %1) #1 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 74
  %6 = load i32, ptr %5, align 8
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %26, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %10 = load i8, ptr %9, align 4
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = tail call i32 @rtnl_is_locked() #39
  %14 = icmp eq i32 %13, 0
  %15 = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  %16 = xor i1 %15, true
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %19, !prof !15

18:                                               ; preds = %12
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 2885) #39
  br label %19

19:                                               ; preds = %18, %12
  %20 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 75
  %21 = load i32, ptr %20, align 4
  %22 = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %0, i32 noundef %21, i32 noundef %1) #39
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19, %8
  %25 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 75
  store i32 %1, ptr %25, align 4
  br label %26

26:                                               ; preds = %24, %19, %4, %2
  %27 = phi i32 [ 0, %24 ], [ -22, %4 ], [ -22, %2 ], [ %22, %19 ]
  ret i32 %27
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_rx_queue_update_kobjects(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_set_real_num_queues(ptr noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 75
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %97, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %9 = load i32, ptr %8, align 4
  %10 = icmp ult i32 %9, %1
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %11, %10
  br i1 %12, label %97, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 74
  %15 = load i32, ptr %14, align 8
  %16 = icmp ult i32 %15, %2
  br i1 %16, label %97, label %17

17:                                               ; preds = %13
  %18 = icmp ult i32 %5, %2
  br i1 %18, label %19, label %35

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %21 = load i8, ptr %20, align 4
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %34

23:                                               ; preds = %19
  %24 = tail call i32 @rtnl_is_locked() #39
  %25 = icmp eq i32 %24, 0
  %26 = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  %27 = xor i1 %26, true
  %28 = select i1 %25, i1 %27, i1 false
  br i1 %28, label %29, label %30, !prof !15

29:                                               ; preds = %23
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 2885) #39
  br label %30

30:                                               ; preds = %29, %23
  %31 = load i32, ptr %4, align 4
  %32 = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %0, i32 noundef %31, i32 noundef %2) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %97

34:                                               ; preds = %30, %19
  store i32 %2, ptr %4, align 4
  br label %35

35:                                               ; preds = %34, %17
  %36 = phi i32 [ %2, %34 ], [ %5, %17 ]
  %37 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %38 = load i32, ptr %37, align 8
  %39 = icmp ult i32 %38, %1
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = tail call i32 @netif_set_real_num_tx_queues(ptr noundef %0, i32 noundef %1)
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %75

43:                                               ; preds = %40
  %44 = load i32, ptr %4, align 4
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %36, %35 ]
  %47 = icmp ugt i32 %46, %2
  br i1 %47, label %48, label %68

48:                                               ; preds = %45
  %49 = load i32, ptr %14, align 8
  %50 = icmp ult i32 %49, %2
  br i1 %50, label %67, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %53 = load i8, ptr %52, align 4
  %54 = icmp eq i8 %53, 1
  br i1 %54, label %55, label %66

55:                                               ; preds = %51
  %56 = tail call i32 @rtnl_is_locked() #39
  %57 = icmp eq i32 %56, 0
  %58 = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  %59 = xor i1 %58, true
  %60 = select i1 %57, i1 %59, i1 false
  br i1 %60, label %61, label %62, !prof !15

61:                                               ; preds = %55
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 2885) #39
  br label %62

62:                                               ; preds = %61, %55
  %63 = load i32, ptr %4, align 4
  %64 = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %0, i32 noundef %63, i32 noundef %2) #39
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %62, %51
  store i32 %2, ptr %4, align 4
  br label %68

67:                                               ; preds = %62, %48
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2932, i32 noundef 9, ptr noundef null) #39
  br label %68

68:                                               ; preds = %67, %66, %45
  %69 = load i32, ptr %37, align 8
  %70 = icmp ugt i32 %69, %1
  br i1 %70, label %71, label %97

71:                                               ; preds = %68
  %72 = tail call i32 @netif_set_real_num_tx_queues(ptr noundef %0, i32 noundef %1)
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %97, label %74, !prof !22

74:                                               ; preds = %71
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2934, i32 noundef 9, ptr noundef null) #39
  br label %97

75:                                               ; preds = %40
  %76 = icmp eq i32 %5, 0
  br i1 %76, label %96, label %77

77:                                               ; preds = %75
  %78 = load i32, ptr %14, align 8
  %79 = icmp ult i32 %78, %5
  br i1 %79, label %96, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %82 = load i8, ptr %81, align 4
  %83 = icmp eq i8 %82, 1
  br i1 %83, label %84, label %95

84:                                               ; preds = %80
  %85 = tail call i32 @rtnl_is_locked() #39
  %86 = icmp eq i32 %85, 0
  %87 = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  %88 = xor i1 %87, true
  %89 = select i1 %86, i1 %88, i1 false
  br i1 %89, label %90, label %91, !prof !15

90:                                               ; preds = %84
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 2885) #39
  br label %91

91:                                               ; preds = %90, %84
  %92 = load i32, ptr %4, align 4
  %93 = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %0, i32 noundef %92, i32 noundef %5) #39
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %91, %80
  store i32 %5, ptr %4, align 4
  br label %97

96:                                               ; preds = %91, %77, %75
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2938, i32 noundef 9, ptr noundef null) #39
  br label %97

97:                                               ; preds = %96, %95, %74, %71, %68, %30, %13, %7, %3
  %98 = phi i32 [ -22, %13 ], [ -22, %7 ], [ -22, %3 ], [ 0, %71 ], [ 0, %74 ], [ 0, %68 ], [ %41, %96 ], [ %41, %95 ], [ %32, %30 ]
  ret i32 %98
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @netif_get_num_default_rss_queues() #22 {
  %1 = load volatile i32, ptr @__num_online_cpus, align 4
  %2 = tail call i32 @llvm.smin.i32(i32 %1, i32 8)
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__netif_schedule(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 19
  %3 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %2) #39
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %7 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %8 = inttoptr i32 %7 to ptr
  %9 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %8) #34, !srcloc !18
  %10 = add i32 %9, ptrtoint (ptr @softnet_data to i32)
  %11 = inttoptr i32 %10 to ptr
  %12 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 21
  store ptr null, ptr %12, align 4
  %13 = getelementptr inbounds %struct.softnet_data, ptr %11, i32 0, i32 8
  %14 = load ptr, ptr %13, align 16
  store ptr %0, ptr %14, align 4
  store ptr %12, ptr %13, align 16
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #39, !srcloc !19
  br label %15

15:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_schedule_queue(ptr noundef %0) #1 {
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %2 = getelementptr inbounds %struct.netdev_queue, ptr %0, i32 0, i32 12
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.netdev_queue, ptr %0, i32 0, i32 2
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.Qdisc, ptr %8, i32 0, i32 19
  %10 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %9) #39
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %6
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #34, !srcloc !18
  %17 = add i32 %16, ptrtoint (ptr @softnet_data to i32)
  %18 = inttoptr i32 %17 to ptr
  %19 = getelementptr inbounds %struct.Qdisc, ptr %8, i32 0, i32 21
  store ptr null, ptr %19, align 4
  %20 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 8
  %21 = load ptr, ptr %20, align 16
  store ptr %8, ptr %21, align 4
  store ptr %19, ptr %20, align 16
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %13) #39, !srcloc !19
  br label %22

22:                                               ; preds = %12, %6, %1
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_tx_wake_queue(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.netdev_queue, ptr %0, i32 0, i32 12
  %3 = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %2) #39
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %6 = getelementptr inbounds %struct.netdev_queue, ptr %0, i32 0, i32 2
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.Qdisc, ptr %7, i32 0, i32 19
  %9 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %8) #39
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %5
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #34, !srcloc !18
  %16 = add i32 %15, ptrtoint (ptr @softnet_data to i32)
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.Qdisc, ptr %7, i32 0, i32 21
  store ptr null, ptr %18, align 4
  %19 = getelementptr inbounds %struct.softnet_data, ptr %17, i32 0, i32 8
  %20 = load ptr, ptr %19, align 16
  store ptr %7, ptr %20, align 4
  store ptr %18, ptr %19, align 16
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #39, !srcloc !19
  br label %21

21:                                               ; preds = %11, %5
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %22

22:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__dev_kfree_skb_irq(ptr noundef %0, i32 noundef %1) #1 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %25, label %4, !prof !15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 19
  %6 = load volatile i32, ptr %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %9, !prof !22

8:                                                ; preds = %4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !40
  store volatile i32 0, ptr %5, align 4
  br label %11

9:                                                ; preds = %4
  %10 = tail call fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %5)
  br i1 %10, label %11, label %25, !prof !15

11:                                               ; preds = %9, %8
  %12 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 3
  store i32 %1, ptr %12, align 4
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #34, !srcloc !18
  %17 = add i32 %16, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %18 = inttoptr i32 %17 to ptr
  %19 = load ptr, ptr %18, align 4
  store ptr %19, ptr %0, align 8
  %20 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %21 = inttoptr i32 %20 to ptr
  %22 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %21) #34, !srcloc !18
  %23 = add i32 %22, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %24 = inttoptr i32 %23 to ptr
  store ptr %0, ptr %24, align 4
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %13) #39, !srcloc !19
  br label %25

25:                                               ; preds = %11, %9, %2
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %0) unnamed_addr #14 {
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !41
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #39, !srcloc !29
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #39, !srcloc !42
  %3 = extractvalue { i32, i32, i32 } %2, 0
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !43
  br label %9

6:                                                ; preds = %1
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %9, label %8, !prof !22

8:                                                ; preds = %6
  tail call void @refcount_warn_saturate(ptr noundef %0, i32 noundef 3) #39
  br label %9

9:                                                ; preds = %8, %6, %5
  ret i1 %4
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @raise_softirq_irqoff(i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__dev_kfree_skb_any(ptr noundef %0, i32 noundef %1) #1 {
  %3 = tail call ptr @llvm.thread.pointer() #39
  %4 = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %5 = load volatile i32, ptr %4, align 4
  %6 = and i32 %5, 983040
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #39, !srcloc !44
  %10 = and i32 %9, 128
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %8, %2
  %13 = icmp eq ptr %0, null
  br i1 %13, label %36, label %14, !prof !15

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 19
  %16 = load volatile i32, ptr %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %19, !prof !22

18:                                               ; preds = %14
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !40
  store volatile i32 0, ptr %15, align 4
  br label %21

19:                                               ; preds = %14
  %20 = tail call fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %15) #39
  br i1 %20, label %21, label %36, !prof !15

21:                                               ; preds = %19, %18
  %22 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 3
  store i32 %1, ptr %22, align 4
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %24 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %25 = inttoptr i32 %24 to ptr
  %26 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %25) #34, !srcloc !18
  %27 = add i32 %26, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %28 = inttoptr i32 %27 to ptr
  %29 = load ptr, ptr %28, align 4
  store ptr %29, ptr %0, align 8
  %30 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %31 = inttoptr i32 %30 to ptr
  %32 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %31) #34, !srcloc !18
  %33 = add i32 %32, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %34 = inttoptr i32 %33 to ptr
  store ptr %0, ptr %34, align 4
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %23) #39, !srcloc !19
  br label %36

35:                                               ; preds = %8
  tail call void @consume_skb(ptr noundef %0) #39
  br label %36

36:                                               ; preds = %35, %21, %19, %12
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_device_detach(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %3 = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %2) #39
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = load volatile i32, ptr %2, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %19, %15 ]
  %17 = load ptr, ptr %14, align 64
  %18 = getelementptr %struct.netdev_queue, ptr %17, i32 %16, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %18) #39
  %19 = add nuw i32 %16, 1
  %20 = load i32, ptr %10, align 4
  %21 = icmp ult i32 %19, %20
  br i1 %21, label %15, label %22

22:                                               ; preds = %15, %9, %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_tx_stop_all_queues(ptr nocapture noundef readonly %0) #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %3 = load i32, ptr %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi i32 [ 0, %5 ], [ %11, %7 ]
  %9 = load ptr, ptr %6, align 64
  %10 = getelementptr %struct.netdev_queue, ptr %9, i32 %8, i32 12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %10) #39
  %11 = add nuw i32 %8, 1
  %12 = load i32, ptr %2, align 4
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_device_attach(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %3 = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %2) #39
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %43

5:                                                ; preds = %1
  %6 = load volatile i32, ptr %2, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 88
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  br label %15

15:                                               ; preds = %38, %13
  %16 = phi i32 [ 0, %13 ], [ %39, %38 ]
  %17 = load ptr, ptr %14, align 64
  %18 = getelementptr %struct.netdev_queue, ptr %17, i32 %16, i32 12
  %19 = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %18) #39
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %22 = getelementptr %struct.netdev_queue, ptr %17, i32 %16, i32 2
  %23 = load volatile ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.Qdisc, ptr %23, i32 0, i32 19
  %25 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %24) #39
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %21
  %28 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %29 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %30 = inttoptr i32 %29 to ptr
  %31 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %30) #34, !srcloc !18
  %32 = add i32 %31, ptrtoint (ptr @softnet_data to i32)
  %33 = inttoptr i32 %32 to ptr
  %34 = getelementptr inbounds %struct.Qdisc, ptr %23, i32 0, i32 21
  store ptr null, ptr %34, align 4
  %35 = getelementptr inbounds %struct.softnet_data, ptr %33, i32 0, i32 8
  %36 = load ptr, ptr %35, align 16
  store ptr %23, ptr %36, align 4
  store ptr %34, ptr %35, align 16
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %28) #39, !srcloc !19
  br label %37

37:                                               ; preds = %27, %21
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %38

38:                                               ; preds = %37, %15
  %39 = add nuw i32 %16, 1
  %40 = load i32, ptr %10, align 4
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %15, label %42

42:                                               ; preds = %38, %9
  tail call void @__netdev_watchdog_up(ptr noundef %0) #39
  br label %43

43:                                               ; preds = %42, %5, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__netdev_watchdog_up(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @skb_checksum_help(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 96
  %5 = icmp eq i16 %4, 64
  br i1 %5, label %70, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.skb_shared_info, ptr %8, i32 0, i32 4
  %10 = load i16, ptr %9, align 4
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %13, label %12, !prof !22

12:                                               ; preds = %6
  tail call fastcc void @skb_warn_bad_offload(ptr noundef %0)
  br label %73

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = load i8, ptr %8, align 8
  %19 = and i8 %18, 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = tail call ptr @__pskb_pull_tail(ptr noundef %0, i32 noundef %15) #39
  %23 = icmp eq ptr %22, null
  br i1 %23, label %73, label %24

24:                                               ; preds = %21
  %25 = load i32, ptr %14, align 4
  br label %26

26:                                               ; preds = %24, %17, %13
  %27 = phi i32 [ %25, %24 ], [ 0, %13 ], [ %15, %17 ]
  %28 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %29 = load i16, ptr %28, align 4
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %32 = load ptr, ptr %31, align 4
  %33 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %34 = load ptr, ptr %33, align 8
  %35 = ptrtoint ptr %32 to i32
  %36 = ptrtoint ptr %34 to i32
  %37 = sub i32 %30, %35
  %38 = add i32 %37, %36
  %39 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %40 = load i32, ptr %39, align 8
  %41 = sub i32 %40, %27
  %42 = icmp ult i32 %38, %41
  br i1 %42, label %44, label %43, !prof !22

43:                                               ; preds = %26
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3159, 0\0A.popsection", ""() #39, !srcloc !45
  unreachable

44:                                               ; preds = %26
  %45 = sub i32 %40, %38
  %46 = tail call i32 @skb_checksum(ptr noundef %0, i32 noundef %38, i32 noundef %45, i32 noundef 0) #39
  %47 = getelementptr inbounds %struct.anon.184, ptr %28, i32 0, i32 1
  %48 = load i16, ptr %47, align 2
  %49 = zext i16 %48 to i32
  %50 = add i32 %38, %49
  %51 = add i32 %50, 2
  %52 = load i32, ptr %39, align 8
  %53 = load i32, ptr %14, align 4
  %54 = sub i32 %52, %53
  %55 = icmp ugt i32 %51, %54
  br i1 %55, label %56, label %57, !prof !15

56:                                               ; preds = %44
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3163, 0\0A.popsection", ""() #39, !srcloc !46
  unreachable

57:                                               ; preds = %44
  %58 = tail call i32 @skb_ensure_writable(ptr noundef %0, i32 noundef %51) #39
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %73

60:                                               ; preds = %57
  %61 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %46) #45, !srcloc !47
  %62 = xor i32 %61, -1
  %63 = lshr i32 %62, 16
  %64 = trunc i32 %63 to i16
  %65 = icmp eq i16 %64, 0
  %66 = select i1 %65, i16 -1, i16 %64
  %67 = load ptr, ptr %31, align 4
  %68 = getelementptr i8, ptr %67, i32 %50
  store i16 %66, ptr %68, align 2
  %69 = load i16, ptr %2, align 8
  br label %70

70:                                               ; preds = %60, %1
  %71 = phi i16 [ %3, %1 ], [ %69, %60 ]
  %72 = and i16 %71, -97
  store i16 %72, ptr %2, align 8
  br label %73

73:                                               ; preds = %70, %57, %21, %12
  %74 = phi i32 [ -22, %12 ], [ 0, %70 ], [ -12, %21 ], [ %58, %57 ]
  ret i32 %74
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @skb_warn_bad_offload(ptr noundef %0) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = tail call i32 @net_ratelimit() #39
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = icmp eq ptr %3, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 111, i32 1
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call ptr @dev_driver_string(ptr noundef nonnull %10) #39
  br label %21

14:                                               ; preds = %8
  %15 = load i8, ptr %3, align 64
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = tail call ptr @strchr(ptr noundef nonnull %3, i32 noundef 37) #39
  %19 = icmp eq ptr %18, null
  %20 = select i1 %19, ptr %3, ptr @.str.65
  br label %21

21:                                               ; preds = %17, %14, %12, %6
  %22 = phi ptr [ %13, %12 ], [ @.str.58, %6 ], [ @.str.65, %14 ], [ %20, %17 ]
  tail call void @skb_dump(ptr noundef nonnull @.str.62, ptr noundef %0, i1 noundef zeroext false) #39
  %23 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 23
  %24 = select i1 %7, ptr @skb_warn_bad_offload.null_features, ptr %23
  %25 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  %28 = getelementptr inbounds %struct.sock, ptr %26, i32 0, i32 38
  %29 = select i1 %27, ptr @skb_warn_bad_offload.null_features, ptr %28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3129, i32 noundef 9, ptr noundef nonnull @.str.78, ptr noundef %22, ptr noundef %24, ptr noundef %29) #39
  br label %30

30:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_checksum(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_ensure_writable(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @skb_crc32c_csum_help(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 96
  %5 = icmp eq i16 %4, 96
  br i1 %5, label %6, label %65

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.skb_shared_info, ptr %8, i32 0, i32 4
  %10 = load i16, ptr %9, align 4
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %65, !prof !22

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %14 = load i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = load i8, ptr %8, align 8
  %18 = and i8 %17, 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20, !prof !22

20:                                               ; preds = %16
  %21 = tail call ptr @__pskb_pull_tail(ptr noundef %0, i32 noundef %14) #39
  %22 = icmp eq ptr %21, null
  br i1 %22, label %65, label %23

23:                                               ; preds = %20
  %24 = load i32, ptr %13, align 4
  br label %25

25:                                               ; preds = %23, %16, %12
  %26 = phi i32 [ %24, %23 ], [ 0, %12 ], [ %14, %16 ]
  %27 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %28 = load i16, ptr %27, align 4
  %29 = zext i16 %28 to i32
  %30 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %33 = load ptr, ptr %32, align 8
  %34 = ptrtoint ptr %31 to i32
  %35 = ptrtoint ptr %33 to i32
  %36 = sub i32 %29, %34
  %37 = add i32 %36, %35
  %38 = add i32 %37, 8
  %39 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %40 = load i32, ptr %39, align 8
  %41 = sub i32 %40, %26
  %42 = icmp uge i32 %38, %41
  %43 = load i1, ptr @skb_crc32c_csum_help.__already_done, align 1
  %44 = xor i1 %43, true
  %45 = select i1 %42, i1 %44, i1 false
  br i1 %45, label %46, label %47, !prof !15

46:                                               ; preds = %25
  store i1 true, ptr @skb_crc32c_csum_help.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3198, i32 noundef 9, ptr noundef null) #39
  br label %47

47:                                               ; preds = %46, %25
  br i1 %42, label %65, label %48

48:                                               ; preds = %47
  %49 = add i32 %37, 12
  %50 = tail call i32 @skb_ensure_writable(ptr noundef %0, i32 noundef %49) #39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %65

52:                                               ; preds = %48
  %53 = load i32, ptr %39, align 8
  %54 = sub i32 %53, %37
  %55 = load ptr, ptr @crc32c_csum_stub, align 4
  %56 = tail call i32 @__skb_checksum(ptr noundef %0, i32 noundef %37, i32 noundef %54, i32 noundef -1, ptr noundef %55) #39
  %57 = xor i32 %56, -1
  %58 = load ptr, ptr %30, align 4
  %59 = getelementptr i8, ptr %58, i32 %38
  store i32 %57, ptr %59, align 4
  %60 = load i16, ptr %2, align 8
  %61 = and i16 %60, -97
  store i16 %61, ptr %2, align 8
  %62 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %63 = load i16, ptr %62, align 2
  %64 = and i16 %63, -17
  store i16 %64, ptr %62, align 2
  br label %65

65:                                               ; preds = %52, %48, %47, %20, %6, %1
  %66 = phi i32 [ 0, %1 ], [ 0, %6 ], [ -12, %20 ], [ %50, %48 ], [ 0, %52 ], [ -22, %47 ]
  ret i32 %66
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__skb_checksum(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i16 @skb_network_protocol(ptr noundef %0, ptr noundef writeonly %1) local_unnamed_addr #1 {
  %3 = alloca %struct.vlan_hdr, align 4
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 16
  %5 = load i16, ptr %4, align 8
  %6 = icmp eq i16 %5, 22629
  br i1 %6, label %7, label %25

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %9 = load i32, ptr %8, align 8
  %10 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = sub i32 %9, %11
  %13 = icmp ult i32 %12, 14
  br i1 %13, label %14, label %20, !prof !15

14:                                               ; preds = %7
  %15 = icmp ult i32 %9, 14
  br i1 %15, label %76, label %16, !prof !15

16:                                               ; preds = %14
  %17 = sub nuw nsw i32 14, %12
  %18 = tail call ptr @__pskb_pull_tail(ptr noundef %0, i32 noundef %17) #39
  %19 = icmp eq ptr %18, null
  br i1 %19, label %76, label %20, !prof !15

20:                                               ; preds = %16, %7
  %21 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ethhdr, ptr %22, i32 0, i32 2
  %24 = load i16, ptr %23, align 1
  br label %25

25:                                               ; preds = %20, %2
  %26 = phi i16 [ %24, %20 ], [ %5, %2 ]
  %27 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 7
  %28 = load i16, ptr %27, align 8
  %29 = zext i16 %28 to i32
  switch i16 %26, label %71 [
    i16 -22392, label %30
    i16 129, label %30
  ]

30:                                               ; preds = %25, %25
  %31 = icmp eq i16 %28, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = icmp ult i16 %28, 4
  br i1 %33, label %34, label %35, !prof !15

34:                                               ; preds = %32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.79, i32 noundef 598, i32 noundef 9, ptr noundef null) #39
  br label %76

35:                                               ; preds = %32
  %36 = add nsw i32 %29, -4
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i32 [ %36, %35 ], [ 14, %30 ]
  %39 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %40 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %42 = icmp eq ptr %0, null
  br label %43

43:                                               ; preds = %70, %37
  %44 = phi i32 [ %38, %37 ], [ %69, %70 ]
  %45 = phi i32 [ 8, %37 ], [ %62, %70 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store i32 0, ptr %3, align 4, !annotation !21
  %46 = load i32, ptr %39, align 8
  %47 = load i32, ptr %40, align 4
  %48 = add i32 %44, %47
  %49 = sub i32 %46, %48
  %50 = icmp slt i32 %49, 4
  br i1 %50, label %54, label %51, !prof !15

51:                                               ; preds = %43
  %52 = load ptr, ptr %41, align 4
  %53 = getelementptr i8, ptr %52, i32 %44
  br label %59

54:                                               ; preds = %43
  br i1 %42, label %65, label %55

55:                                               ; preds = %54
  %56 = call i32 @skb_copy_bits(ptr noundef nonnull %0, i32 noundef %44, ptr noundef nonnull %3, i32 noundef 4) #39
  %57 = icmp slt i32 %56, 0
  %58 = select i1 %57, ptr null, ptr %3, !prof !15
  br label %59

59:                                               ; preds = %55, %51
  %60 = phi ptr [ %53, %51 ], [ %58, %55 ]
  %61 = icmp eq ptr %60, null
  %62 = add nsw i32 %45, -1
  %63 = icmp eq i32 %62, 0
  %64 = select i1 %61, i1 true, i1 %63, !prof !15
  br i1 %64, label %65, label %66, !prof !15

65:                                               ; preds = %59, %54
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  br label %76

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.vlan_hdr, ptr %60, i32 0, i32 1
  %68 = load i16, ptr %67, align 2
  %69 = add nsw i32 %44, 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  switch i16 %68, label %71 [
    i16 -22392, label %70
    i16 129, label %70
  ]

70:                                               ; preds = %66, %66
  br label %43

71:                                               ; preds = %66, %25
  %72 = phi i16 [ %26, %25 ], [ %68, %66 ]
  %73 = phi i32 [ %29, %25 ], [ %69, %66 ]
  %74 = icmp eq ptr %1, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  store i32 %73, ptr %1, align 4
  br label %76

76:                                               ; preds = %75, %71, %65, %34, %16, %14
  %77 = phi i16 [ 0, %34 ], [ %72, %75 ], [ %72, %71 ], [ 0, %65 ], [ 0, %16 ], [ 0, %14 ]
  ret i16 %77
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @__skb_gso_segment(ptr noundef %0, i64 noundef %1, i1 noundef zeroext %2) #1 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %5 = load i16, ptr %4, align 8
  %6 = select i1 %2, i16 32, i16 96
  %7 = and i16 %5, %6
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %14, !prof !15

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @skb_cow_head(ptr noundef %0, i32 noundef 0)
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = inttoptr i32 %10 to ptr
  br label %72

14:                                               ; preds = %9, %3
  %15 = and i64 %1, 268435456
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.net_device, ptr %19, i32 0, i32 23
  %21 = load i64, ptr %20, align 16
  %22 = getelementptr inbounds %struct.net_device, ptr %19, i32 0, i32 29
  %23 = load i64, ptr %22, align 64
  %24 = and i64 %23, %21
  %25 = or i64 %24, %1
  %26 = or i64 %25, 131072
  %27 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.skb_shared_info, ptr %28, i32 0, i32 8
  %30 = load i32, ptr %29, align 8
  %31 = sext i32 %30 to i64
  %32 = shl nsw i64 %31, 16
  %33 = and i64 %32, %26
  %34 = icmp eq i64 %33, %32
  br i1 %34, label %37, label %35

35:                                               ; preds = %17
  %36 = and i64 %1, -268435457
  br label %46

37:                                               ; preds = %17
  %38 = getelementptr inbounds %struct.skb_shared_info, ptr %28, i32 0, i32 6
  %39 = load ptr, ptr %38, align 8
  %40 = icmp eq ptr %39, null
  %41 = and i64 %25, 64
  %42 = icmp ne i64 %41, 0
  %43 = or i1 %42, %40
  %44 = and i64 %1, -268435457
  %45 = select i1 %43, i64 %1, i64 %44
  br label %46

46:                                               ; preds = %37, %35, %14
  %47 = phi i64 [ %1, %14 ], [ %36, %35 ], [ %45, %37 ]
  %48 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %51 = load ptr, ptr %50, align 8
  %52 = ptrtoint ptr %49 to i32
  %53 = ptrtoint ptr %51 to i32
  %54 = sub i32 %52, %53
  %55 = getelementptr %struct.sk_buff, ptr %0, i32 0, i32 3, i32 32
  store i32 %54, ptr %55, align 4
  %56 = getelementptr %struct.sk_buff, ptr %0, i32 0, i32 3, i32 36
  store i32 0, ptr %56, align 4
  %57 = trunc i32 %54 to i16
  %58 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  store i16 %57, ptr %58, align 2
  %59 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %60 = load i16, ptr %59, align 4
  %61 = sub i16 %60, %57
  %62 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 7
  store i16 %61, ptr %62, align 8
  %63 = tail call ptr @skb_mac_gso_segment(ptr noundef %0, i64 noundef %47) #39
  %64 = icmp eq ptr %63, %0
  br i1 %64, label %72, label %65

65:                                               ; preds = %46
  %66 = load i16, ptr %4, align 8
  %67 = and i16 %66, %6
  %68 = icmp eq i16 %67, 0
  %69 = icmp ule ptr %63, inttoptr (i32 -4096 to ptr)
  %70 = select i1 %68, i1 %69, i1 false
  br i1 %70, label %71, label %72, !prof !48

71:                                               ; preds = %65
  tail call fastcc void @skb_warn_bad_offload(ptr noundef %0)
  br label %72

72:                                               ; preds = %71, %65, %46, %12
  %73 = phi ptr [ %63, %65 ], [ %63, %71 ], [ %0, %46 ], [ %13, %12 ]
  ret ptr %73
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @skb_cow_head(ptr noundef %0, i32 noundef %1) unnamed_addr #14 {
  %3 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 11
  %4 = load i8, ptr %3, align 2
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.skb_shared_info, ptr %9, i32 0, i32 10
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = ashr i32 %11, 16
  %14 = sub nsw i32 %12, %13
  %15 = icmp ne i32 %14, 1
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %7, %2
  %18 = phi i32 [ %16, %7 ], [ 0, %2 ]
  %19 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %22 = load ptr, ptr %21, align 8
  %23 = ptrtoint ptr %20 to i32
  %24 = ptrtoint ptr %22 to i32
  %25 = sub i32 %23, %24
  %26 = tail call i32 @llvm.usub.sat.i32(i32 %1, i32 %25) #39
  %27 = or i32 %26, %18
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %17
  %30 = add i32 %26, 63
  %31 = and i32 %30, -64
  %32 = tail call i32 @pskb_expand_head(ptr noundef %0, i32 noundef %31, i32 noundef 0, i32 noundef 2592) #39
  br label %33

33:                                               ; preds = %29, %17
  %34 = phi i32 [ %32, %29 ], [ 0, %17 ]
  ret i32 %34
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_mac_gso_segment(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_rx_csum_fault(ptr noundef %0, ptr noundef %1) #1 {
  %3 = load i1, ptr @netdev_rx_csum_fault.__already_done, align 1
  br i1 %3, label %5, label %4, !prof !22

4:                                                ; preds = %2
  store i1 true, ptr @netdev_rx_csum_fault.__already_done, align 1
  tail call fastcc void @do_netdev_rx_csum_fault(ptr noundef %0, ptr noundef %1)
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @do_netdev_rx_csum_fault(ptr noundef %0, ptr noundef %1) unnamed_addr #1 {
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %0, ptr noundef nonnull @.str.80) #43
  tail call void @skb_dump(ptr noundef nonnull @.str.48, ptr noundef %1, i1 noundef zeroext true) #39
  tail call void @dump_stack() #42
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @passthru_features_check(ptr nocapture readnone %0, ptr nocapture readnone %1, i64 noundef returned %2) #16 {
  ret i64 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @netif_skb_features(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 23
  %5 = load i64, ptr %4, align 16
  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 4
  %9 = load i16, ptr %8, align 4
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %56, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 5
  %13 = load i16, ptr %12, align 2
  %14 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 116
  %15 = load volatile i16, ptr %14, align 4
  %16 = icmp ugt i16 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = and i64 %5, -34359672833
  br label %56

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 8
  %21 = load i32, ptr %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call fastcc void @skb_warn_bad_offload(ptr noundef %0) #39
  %24 = and i64 %5, -34359672833
  br label %56

25:                                               ; preds = %19
  %26 = and i32 %21, 4096
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 29
  %30 = load i64, ptr %29, align 64
  %31 = xor i64 %30, -1
  %32 = and i64 %5, %31
  br label %33

33:                                               ; preds = %28, %25
  %34 = phi i64 [ %5, %25 ], [ %32, %28 ]
  %35 = and i32 %21, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %39 = load i16, ptr %38, align 8
  %40 = and i16 %39, 8192
  %41 = icmp eq i16 %40, 0
  %42 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %45 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 14
  %46 = select i1 %41, ptr %44, ptr %45
  %47 = load i16, ptr %46, align 4
  %48 = zext i16 %47 to i32
  %49 = getelementptr i8, ptr %43, i32 %48
  %50 = getelementptr inbounds %struct.iphdr, ptr %49, i32 0, i32 4
  %51 = load i16, ptr %50, align 2
  %52 = and i16 %51, 64
  %53 = icmp eq i16 %52, 0
  %54 = and i64 %34, -524289
  %55 = select i1 %53, i64 %54, i64 %34
  br label %56

56:                                               ; preds = %37, %33, %23, %17, %1
  %57 = phi i64 [ %5, %1 ], [ %18, %17 ], [ %24, %23 ], [ %55, %37 ], [ %34, %33 ]
  %58 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %59 = load i16, ptr %58, align 8
  %60 = and i16 %59, 8192
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 27
  %64 = load i64, ptr %63, align 16
  %65 = and i64 %64, %57
  br label %66

66:                                               ; preds = %62, %56
  %67 = phi i64 [ %65, %62 ], [ %57, %56 ]
  %68 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %69 = load i16, ptr %68, align 2
  %70 = and i16 %69, 1
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 16
  %74 = load i16, ptr %73, align 8
  switch i16 %74, label %98 [
    i16 -22392, label %75
    i16 129, label %75
  ]

75:                                               ; preds = %72, %72, %66
  %76 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 26
  %77 = load i64, ptr %76, align 8
  %78 = or i64 %77, 35184372088960
  %79 = xor i64 %77, %67
  %80 = and i64 %79, 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %75
  %83 = and i64 %67, 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = or i64 %67, 18
  br label %89

87:                                               ; preds = %82
  %88 = or i64 %77, 35184372088978
  br label %89

89:                                               ; preds = %87, %85, %75
  %90 = phi i64 [ %86, %85 ], [ %67, %87 ], [ %67, %75 ]
  %91 = phi i64 [ %78, %85 ], [ %88, %87 ], [ %78, %75 ]
  %92 = and i64 %91, %90
  %93 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 16
  %94 = load ptr, ptr %93, align 8
  %95 = getelementptr inbounds %struct.net_device_ops, ptr %94, i32 0, i32 5
  %96 = load ptr, ptr %95, align 4
  %97 = icmp eq ptr %96, null
  br i1 %97, label %108, label %104

98:                                               ; preds = %72
  %99 = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 16
  %100 = load ptr, ptr %99, align 8
  %101 = getelementptr inbounds %struct.net_device_ops, ptr %100, i32 0, i32 5
  %102 = load ptr, ptr %101, align 4
  %103 = icmp eq ptr %102, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %98, %89
  %105 = phi ptr [ %102, %98 ], [ %96, %89 ]
  %106 = phi i64 [ %67, %98 ], [ %92, %89 ]
  %107 = tail call i64 %105(ptr noundef %0, ptr noundef %3, i64 noundef %106) #39
  br label %137

108:                                              ; preds = %89
  %109 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 16
  %110 = load i16, ptr %109, align 8
  br i1 %71, label %111, label %132

111:                                              ; preds = %108, %98
  %112 = phi i16 [ %110, %108 ], [ %74, %98 ]
  %113 = phi i64 [ %92, %108 ], [ %67, %98 ]
  switch i16 %112, label %137 [
    i16 -22392, label %114
    i16 129, label %114
  ]

114:                                              ; preds = %111, %111
  %115 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %116 = load i32, ptr %115, align 8
  %117 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %118 = load i32, ptr %117, align 4
  %119 = sub i32 %116, %118
  %120 = icmp ult i32 %119, 18
  br i1 %120, label %121, label %127, !prof !15

121:                                              ; preds = %114
  %122 = icmp ult i32 %116, 18
  br i1 %122, label %137, label %123, !prof !15

123:                                              ; preds = %121
  %124 = sub nuw nsw i32 18, %119
  %125 = tail call ptr @__pskb_pull_tail(ptr noundef %0, i32 noundef %124) #39
  %126 = icmp eq ptr %125, null
  br i1 %126, label %137, label %127, !prof !15

127:                                              ; preds = %123, %114
  %128 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %129 = load ptr, ptr %128, align 4
  %130 = getelementptr inbounds %struct.vlan_ethhdr, ptr %129, i32 0, i32 3
  %131 = load i16, ptr %130, align 2
  br label %132

132:                                              ; preds = %127, %108
  %133 = phi i64 [ %92, %108 ], [ %113, %127 ]
  %134 = phi i16 [ %110, %108 ], [ %131, %127 ]
  switch i16 %134, label %137 [
    i16 -22392, label %135
    i16 129, label %135
  ]

135:                                              ; preds = %132, %132
  %136 = and i64 %133, 35184372089065
  br label %137

137:                                              ; preds = %135, %132, %123, %121, %111, %104
  %138 = phi i64 [ %106, %104 ], [ %133, %135 ], [ %133, %132 ], [ %113, %111 ], [ %113, %123 ], [ %113, %121 ]
  %139 = phi i64 [ %107, %104 ], [ %136, %135 ], [ %133, %132 ], [ %113, %111 ], [ %113, %123 ], [ %113, %121 ]
  %140 = and i64 %139, %138
  %141 = tail call zeroext i16 @skb_network_protocol(ptr noundef %0, ptr noundef null) #39
  %142 = load i16, ptr %58, align 8
  %143 = and i16 %142, 96
  %144 = icmp eq i16 %143, 0
  br i1 %144, label %166, label %145

145:                                              ; preds = %137
  %146 = icmp eq i16 %141, 1673
  br i1 %146, label %147, label %151

147:                                              ; preds = %145
  %148 = and i64 %140, 34359738368
  %149 = icmp eq i64 %148, 0
  %150 = and i64 %140, -34359672859
  br i1 %149, label %166, label %165

151:                                              ; preds = %145
  %152 = and i64 %140, 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %165

154:                                              ; preds = %151
  switch i16 %141, label %155 [
    i16 8, label %161
    i16 -8826, label %157
  ]

155:                                              ; preds = %154
  %156 = and i64 %140, -34359672859
  br label %166

157:                                              ; preds = %154
  %158 = and i64 %140, 16
  %159 = icmp eq i64 %158, 0
  %160 = and i64 %140, -34359672859
  br i1 %159, label %166, label %165

161:                                              ; preds = %154
  %162 = and i64 %140, 2
  %163 = icmp eq i64 %162, 0
  %164 = and i64 %140, -34359672859
  br i1 %163, label %166, label %165

165:                                              ; preds = %161, %157, %151, %147
  br label %166

166:                                              ; preds = %165, %161, %157, %155, %147, %137
  %167 = phi i64 [ %140, %137 ], [ %140, %165 ], [ %164, %161 ], [ %156, %155 ], [ %150, %147 ], [ %160, %157 ]
  %168 = load ptr, ptr %2, align 8
  %169 = getelementptr inbounds %struct.net_device, ptr %168, i32 0, i32 23
  %170 = load i64, ptr %169, align 16
  %171 = and i64 %170, 32
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %197

173:                                              ; preds = %166
  %174 = load ptr, ptr %6, align 4
  %175 = getelementptr inbounds %struct.skb_shared_info, ptr %174, i32 0, i32 2
  %176 = load i8, ptr %175, align 2
  %177 = zext i8 %176 to i32
  %178 = icmp eq i8 %176, 0
  br i1 %178, label %197, label %179

179:                                              ; preds = %173
  %180 = load i32, ptr @movable_zone, align 4
  %181 = icmp ne i32 %180, 2
  br label %185

182:                                              ; preds = %185
  %183 = add nuw nsw i32 %186, 1
  %184 = icmp eq i32 %183, %177
  br i1 %184, label %197, label %185

185:                                              ; preds = %182, %179
  %186 = phi i32 [ 0, %179 ], [ %183, %182 ]
  %187 = getelementptr %struct.skb_shared_info, ptr %174, i32 0, i32 12, i32 %186
  %188 = load ptr, ptr %187, align 4
  %189 = load i32, ptr %188, align 4
  %190 = lshr i32 %189, 30
  %191 = icmp ne i32 %190, 2
  %192 = icmp ne i32 %190, 3
  %193 = select i1 %192, i1 true, i1 %181
  %194 = select i1 %191, i1 %193, i1 false
  br i1 %194, label %182, label %195

195:                                              ; preds = %185
  %196 = and i64 %167, -2
  br label %197

197:                                              ; preds = %195, %182, %173, %166
  %198 = phi i64 [ %196, %195 ], [ %167, %166 ], [ %167, %173 ], [ %167, %182 ]
  ret i64 %198
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_hard_start_xmit(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #1 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %103, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %1 to i32
  %9 = ptrtoint ptr %2 to i32
  %10 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %11 = getelementptr inbounds %struct.netdev_queue, ptr %2, i32 0, i32 10
  %12 = getelementptr inbounds %struct.netdev_queue, ptr %2, i32 0, i32 11
  %13 = getelementptr inbounds %struct.netdev_queue, ptr %2, i32 0, i32 12
  br label %16

14:                                               ; preds = %98
  %15 = icmp eq ptr %18, null
  br i1 %15, label %103, label %16

16:                                               ; preds = %14, %6
  %17 = phi ptr [ %0, %6 ], [ %18, %14 ]
  %18 = load ptr, ptr %17, align 8
  store ptr null, ptr %17, align 8
  %19 = icmp ne ptr %18, null
  %20 = load volatile ptr, ptr @ptype_all, align 4
  %21 = icmp eq ptr %20, @ptype_all
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = load volatile ptr, ptr %7, align 4
  %24 = icmp eq ptr %23, %7
  br i1 %24, label %26, label %25

25:                                               ; preds = %22, %16
  tail call void @dev_queue_xmit_nit(ptr noundef nonnull %17, ptr noundef %1) #39
  br label %26

26:                                               ; preds = %25, %22
  %27 = getelementptr inbounds %struct.sk_buff, ptr %17, i32 0, i32 5
  %28 = load i32, ptr %27, align 8
  %29 = ptrtoint ptr %17 to i32
  %30 = load volatile i32, ptr @jiffies, align 64
  %31 = add i32 %30, %28
  %32 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %33 = inttoptr i32 %32 to ptr
  %34 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %33) #34, !srcloc !18
  %35 = add i32 %34, ptrtoint (ptr @net_rand_noise to i32)
  %36 = inttoptr i32 %35 to ptr
  %37 = load i32, ptr %36, align 4
  %38 = xor i32 %37, %29
  %39 = add i32 %38, %8
  %40 = add i32 %31, %9
  %41 = tail call i32 @llvm.fshl.i32(i32 %31, i32 %31, i32 8) #39
  %42 = tail call i32 @llvm.fshl.i32(i32 %39, i32 %39, i32 16) #39
  %43 = xor i32 %41, %40
  %44 = add i32 %42, %43
  %45 = tail call i32 @llvm.fshl.i32(i32 %43, i32 %43, i32 7) #39
  %46 = xor i32 %44, %45
  store i32 %46, ptr %36, align 4
  %47 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_start_xmit, i32 0, i32 1), align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %62

49:                                               ; preds = %26
  %50 = tail call ptr @llvm.thread.pointer() #39
  %51 = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 2
  %52 = load i32, ptr %51, align 8
  %53 = lshr i32 %52, 5
  %54 = getelementptr i32, ptr @__cpu_online_mask, i32 %53
  %55 = load volatile i32, ptr %54, align 4
  %56 = and i32 %52, 31
  %57 = shl nuw i32 1, %56
  %58 = and i32 %57, %55
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %49
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !49
  %61 = tail call i32 @__traceiter_net_dev_start_xmit(ptr noundef null, ptr noundef nonnull %17, ptr noundef %1) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !50
  br label %62

62:                                               ; preds = %60, %49, %26
  %63 = load ptr, ptr %10, align 8
  %64 = zext i1 %19 to i8
  %65 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %66 = inttoptr i32 %65 to ptr
  %67 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %66) #34, !srcloc !18
  %68 = add i32 %67, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10, i32 1) to i32)
  %69 = inttoptr i32 %68 to ptr
  store i8 %64, ptr %69, align 1
  %70 = getelementptr inbounds %struct.net_device_ops, ptr %63, i32 0, i32 4
  %71 = load ptr, ptr %70, align 4
  %72 = tail call i32 %71(ptr noundef nonnull %17, ptr noundef %1) #39
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %62
  %75 = load i32, ptr %11, align 4
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = load volatile i32, ptr @jiffies, align 64
  store volatile i32 %78, ptr %12, align 8
  br label %79

79:                                               ; preds = %77, %74, %62
  %80 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_xmit, i32 0, i32 1), align 4
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %95

82:                                               ; preds = %79
  %83 = tail call ptr @llvm.thread.pointer() #39
  %84 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 2
  %85 = load i32, ptr %84, align 8
  %86 = lshr i32 %85, 5
  %87 = getelementptr i32, ptr @__cpu_online_mask, i32 %86
  %88 = load volatile i32, ptr %87, align 4
  %89 = and i32 %85, 31
  %90 = shl nuw i32 1, %89
  %91 = and i32 %90, %88
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %82
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !51
  %94 = tail call i32 @__traceiter_net_dev_xmit(ptr noundef null, ptr noundef nonnull %17, i32 noundef %72, ptr noundef %1, i32 noundef %28) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !52
  br label %95

95:                                               ; preds = %93, %82, %79
  %96 = icmp slt i32 %72, 15
  br i1 %96, label %98, label %97, !prof !22

97:                                               ; preds = %95
  store ptr %18, ptr %17, align 8
  br label %103

98:                                               ; preds = %95
  %99 = load volatile i32, ptr %13, align 4
  %100 = and i32 %99, 1
  %101 = icmp ne i32 %100, 0
  %102 = and i1 %19, %101
  br i1 %102, label %103, label %14

103:                                              ; preds = %98, %97, %14, %4
  %104 = phi ptr [ %17, %97 ], [ null, %4 ], [ null, %14 ], [ %18, %98 ]
  %105 = phi i32 [ %72, %97 ], [ 0, %4 ], [ %72, %14 ], [ 16, %98 ]
  store i32 %105, ptr %3, align 4
  ret ptr %104
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @skb_csum_hwoffload_help(ptr noundef %0, i64 noundef %1) #1 {
  %3 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %4 = load i16, ptr %3, align 2
  %5 = and i16 %4, 16
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %12, label %7, !prof !22

7:                                                ; preds = %2
  %8 = and i64 %1, 68719476736
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %7
  %11 = tail call i32 @skb_crc32c_csum_help(ptr noundef %0)
  br label %24

12:                                               ; preds = %2
  %13 = and i64 %1, 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = and i64 %1, 18
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %20 = getelementptr inbounds %struct.anon.184, ptr %19, i32 0, i32 1
  %21 = load i16, ptr %20, align 2
  switch i16 %21, label %22 [
    i16 16, label %24
    i16 6, label %24
  ]

22:                                               ; preds = %18, %15
  %23 = tail call i32 @skb_checksum_help(ptr noundef %0)
  br label %24

24:                                               ; preds = %22, %18, %18, %12, %10, %7
  %25 = phi i32 [ %23, %22 ], [ %11, %10 ], [ 0, %7 ], [ 0, %12 ], [ 0, %18 ], [ 0, %18 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @validate_xmit_skb_list(ptr noundef %0, ptr noundef %1, ptr nocapture readnone %2) #1 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %20, %3
  %6 = phi ptr [ %22, %20 ], [ null, %3 ]
  %7 = phi ptr [ %21, %20 ], [ null, %3 ]
  %8 = phi ptr [ %9, %20 ], [ %0, %3 ]
  %9 = load ptr, ptr %8, align 8
  store ptr null, ptr %8, align 8
  %10 = getelementptr inbounds %struct.anon.76, ptr %8, i32 0, i32 1
  store ptr %8, ptr %10, align 4
  %11 = tail call fastcc ptr @validate_xmit_skb(ptr noundef nonnull %8, ptr noundef %1)
  %12 = icmp eq ptr %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %5
  %14 = icmp eq ptr %7, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %13
  store ptr %11, ptr %6, align 8
  br label %16

16:                                               ; preds = %15, %13
  %17 = phi ptr [ %7, %15 ], [ %11, %13 ]
  %18 = getelementptr inbounds %struct.anon.76, ptr %11, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  br label %20

20:                                               ; preds = %16, %5
  %21 = phi ptr [ %17, %16 ], [ %7, %5 ]
  %22 = phi ptr [ %19, %16 ], [ %6, %5 ]
  %23 = icmp eq ptr %9, null
  br i1 %23, label %24, label %5

24:                                               ; preds = %20, %3
  %25 = phi ptr [ null, %3 ], [ %21, %20 ]
  ret ptr %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @validate_xmit_skb(ptr noundef %0, ptr noundef %1) unnamed_addr #1 {
  %3 = tail call i64 @netif_skb_features(ptr noundef %0)
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %5 = load i16, ptr %4, align 2
  %6 = and i16 %5, 1
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %71, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 8
  %10 = load i16, ptr %9, align 4
  %11 = icmp ne i16 %10, 129
  %12 = and i64 %3, 128
  %13 = icmp eq i64 %12, 0
  %14 = or i1 %13, %11
  br i1 %14, label %15, label %71

15:                                               ; preds = %8
  %16 = icmp eq i16 %10, -22392
  %17 = and i64 %3, 35184372088832
  %18 = icmp ne i64 %17, 0
  %19 = and i1 %18, %16
  br i1 %19, label %71, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 9
  %22 = load i16, ptr %21, align 2
  %23 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 11
  %24 = load i8, ptr %23, align 2
  %25 = and i8 %24, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 10
  %31 = load volatile i32, ptr %30, align 4
  %32 = and i32 %31, 65535
  %33 = ashr i32 %31, 16
  %34 = sub nsw i32 %32, %33
  %35 = icmp ne i32 %34, 1
  %36 = zext i1 %35 to i32
  br label %37

37:                                               ; preds = %27, %20
  %38 = phi i32 [ %36, %27 ], [ 0, %20 ]
  %39 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %40 = load ptr, ptr %39, align 4
  %41 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %42 = load ptr, ptr %41, align 8
  %43 = ptrtoint ptr %40 to i32
  %44 = ptrtoint ptr %42 to i32
  %45 = sub i32 %43, %44
  %46 = tail call i32 @llvm.usub.sat.i32(i32 4, i32 %45) #39
  %47 = or i32 %46, %38
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %37
  %50 = add nuw nsw i32 %46, 63
  %51 = and i32 %50, 64
  %52 = tail call i32 @pskb_expand_head(ptr noundef %0, i32 noundef %51, i32 noundef 0, i32 noundef 2592) #39
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  tail call void @__dev_kfree_skb_any(ptr noundef %0, i32 noundef 1) #39
  br label %175

55:                                               ; preds = %49, %37
  %56 = tail call ptr @skb_push(ptr noundef %0, i32 noundef 4) #39
  %57 = load ptr, ptr %39, align 4
  %58 = getelementptr i8, ptr %57, i32 4
  tail call void @llvm.memmove.p0.p0.i32(ptr noundef align 1 dereferenceable(12) %57, ptr noundef align 1 dereferenceable(12) %58, i32 12, i1 false) #39
  %59 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  %60 = load i16, ptr %59, align 2
  %61 = add i16 %60, -4
  store i16 %61, ptr %59, align 2
  %62 = load ptr, ptr %39, align 4
  %63 = getelementptr inbounds %struct.vlan_ethhdr, ptr %62, i32 0, i32 1
  store i16 %10, ptr %63, align 2
  %64 = tail call i16 @llvm.bswap.i16(i16 %22) #39
  %65 = getelementptr inbounds %struct.vlan_ethhdr, ptr %62, i32 0, i32 2
  store i16 %64, ptr %65, align 2
  %66 = icmp eq ptr %0, null
  br i1 %66, label %175, label %67

67:                                               ; preds = %55
  %68 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 16
  store i16 %10, ptr %68, align 8
  %69 = load i16, ptr %4, align 2
  %70 = and i16 %69, -2
  store i16 %70, ptr %4, align 2
  br label %73

71:                                               ; preds = %15, %8, %2
  %72 = icmp eq ptr %0, null
  br i1 %72, label %175, label %73, !prof !15

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 4
  %77 = load i16, ptr %76, align 4
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %104, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 8
  %81 = load i32, ptr %80, align 8
  %82 = sext i32 %81 to i64
  %83 = shl nsw i64 %82, 16
  %84 = and i64 %83, %3
  %85 = icmp eq i64 %84, %83
  br i1 %85, label %86, label %98

86:                                               ; preds = %79
  %87 = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 6
  %88 = load ptr, ptr %87, align 8
  %89 = icmp eq ptr %88, null
  %90 = and i64 %3, 64
  %91 = icmp ne i64 %90, 0
  %92 = or i1 %91, %89
  br i1 %92, label %93, label %98

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %95 = load i16, ptr %94, align 8
  %96 = and i16 %95, 32
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %93, %86, %79
  %99 = tail call ptr @__skb_gso_segment(ptr noundef nonnull %0, i64 noundef %3, i1 noundef zeroext true) #39
  %100 = icmp ugt ptr %99, inttoptr (i32 -4096 to ptr)
  br i1 %100, label %174, label %101

101:                                              ; preds = %98
  %102 = icmp eq ptr %99, null
  br i1 %102, label %178, label %103

103:                                              ; preds = %101
  tail call void @consume_skb(ptr noundef nonnull %0) #39
  br label %178

104:                                              ; preds = %93, %73
  %105 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %106 = load i32, ptr %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %125, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 6
  %110 = load ptr, ptr %109, align 8
  %111 = icmp ne ptr %110, null
  %112 = and i64 %3, 64
  %113 = icmp eq i64 %112, 0
  %114 = and i1 %113, %111
  br i1 %114, label %122, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 2
  %117 = load i8, ptr %116, align 2
  %118 = icmp ne i8 %117, 0
  %119 = and i64 %3, 1
  %120 = icmp eq i64 %119, 0
  %121 = select i1 %118, i1 %120, i1 false
  br i1 %121, label %122, label %125

122:                                              ; preds = %115, %108
  %123 = tail call ptr @__pskb_pull_tail(ptr noundef nonnull %0, i32 noundef %106) #39
  %124 = icmp eq ptr %123, null
  br i1 %124, label %174, label %125

125:                                              ; preds = %122, %115, %104
  %126 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %127 = load i16, ptr %126, align 8
  %128 = and i16 %127, 96
  %129 = icmp eq i16 %128, 96
  br i1 %129, label %130, label %178

130:                                              ; preds = %125
  %131 = and i16 %127, 8192
  %132 = icmp eq i16 %131, 0
  %133 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %134 = load i16, ptr %133, align 4
  %135 = zext i16 %134 to i32
  %136 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %137 = load ptr, ptr %136, align 4
  %138 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %139 = load ptr, ptr %138, align 8
  %140 = ptrtoint ptr %137 to i32
  %141 = ptrtoint ptr %139 to i32
  %142 = sub i32 %135, %140
  %143 = add i32 %142, %141
  %144 = sub i32 %140, %141
  %145 = trunc i32 %144 to i16
  %146 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 17
  %147 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 13
  %148 = select i1 %132, ptr %146, ptr %147
  %149 = trunc i32 %143 to i16
  %150 = add i16 %145, %149
  store i16 %150, ptr %148, align 2
  %151 = load i16, ptr %4, align 2
  %152 = and i16 %151, 16
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %159, label %154, !prof !22

154:                                              ; preds = %130
  %155 = and i64 %3, 68719476736
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %178

157:                                              ; preds = %154
  %158 = tail call i32 @skb_crc32c_csum_help(ptr noundef nonnull %0) #39
  br label %171

159:                                              ; preds = %130
  %160 = and i64 %3, 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %178

162:                                              ; preds = %159
  %163 = and i64 %3, 18
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %167 = getelementptr inbounds %struct.anon.184, ptr %166, i32 0, i32 1
  %168 = load i16, ptr %167, align 2
  switch i16 %168, label %169 [
    i16 16, label %178
    i16 6, label %178
  ]

169:                                              ; preds = %165, %162
  %170 = tail call i32 @skb_checksum_help(ptr noundef nonnull %0) #39
  br label %171

171:                                              ; preds = %169, %157
  %172 = phi i32 [ %170, %169 ], [ %158, %157 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %178, label %174

174:                                              ; preds = %171, %122, %98
  tail call void @kfree_skb_reason(ptr noundef nonnull %0, i32 noundef 0) #39
  br label %175

175:                                              ; preds = %174, %71, %55, %54
  %176 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %176) #39, !srcloc !29
  %177 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %176, ptr %176, i32 1, ptr elementtype(i32) %176) #39, !srcloc !30
  br label %178

178:                                              ; preds = %175, %171, %165, %165, %159, %154, %125, %103, %101
  %179 = phi ptr [ null, %175 ], [ %0, %171 ], [ %0, %125 ], [ %0, %101 ], [ %99, %103 ], [ %0, %154 ], [ %0, %159 ], [ %0, %165 ], [ %0, %165 ]
  ret ptr %179
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_loopback_xmit(ptr nocapture readnone %0, ptr nocapture readnone %1, ptr noundef %2) #1 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 17
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 16
  %7 = load ptr, ptr %6, align 8
  %8 = ptrtoint ptr %5 to i32
  %9 = ptrtoint ptr %7 to i32
  %10 = sub i32 %8, %9
  %11 = trunc i32 %10 to i16
  %12 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 13, i32 0, i32 19
  store i16 %11, ptr %12, align 2
  %13 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 13, i32 0, i32 18
  %14 = load i16, ptr %13, align 4
  %15 = zext i16 %14 to i32
  %16 = getelementptr i8, ptr %7, i32 %15
  %17 = ptrtoint ptr %16 to i32
  %18 = sub i32 %17, %8
  %19 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 5
  %20 = load i32, ptr %19, align 8
  %21 = sub i32 %20, %18
  store i32 %21, ptr %19, align 8
  %22 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = icmp ult i32 %21, %23
  br i1 %24, label %25, label %26, !prof !15

25:                                               ; preds = %3
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #39, !srcloc !53
  unreachable

26:                                               ; preds = %3
  %27 = getelementptr i8, ptr %5, i32 %18
  store ptr %27, ptr %4, align 4
  %28 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 13
  %29 = load i16, ptr %28, align 8
  %30 = and i16 %29, -8
  %31 = or i16 %30, 5
  %32 = and i16 %29, 96
  %33 = icmp eq i16 %32, 0
  %34 = and i16 %31, -99
  %35 = or i16 %34, 32
  %36 = select i1 %33, i16 %35, i16 %31
  store i16 %36, ptr %28, align 8
  %37 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 4
  %38 = load i32, ptr %37, align 8
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %40, label %42, !prof !15

40:                                               ; preds = %26
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3812, i32 noundef 9, ptr noundef null) #39
  %41 = load i32, ptr %37, align 8
  br label %42

42:                                               ; preds = %40, %26
  %43 = phi i32 [ %41, %40 ], [ %38, %26 ]
  %44 = and i32 %43, 1
  %45 = icmp ne i32 %44, 0
  %46 = icmp ugt i32 %43, 1
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %71

48:                                               ; preds = %42
  %49 = and i32 %43, -2
  %50 = inttoptr i32 %49 to ptr
  %51 = getelementptr inbounds %struct.dst_entry, ptr %50, i32 0, i32 18
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !54
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %51) #39, !srcloc !29
  %52 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %51, ptr %51, i32 0, i32 1, ptr elementtype(i32) %51) #39, !srcloc !55
  %53 = extractvalue { i32, i32, i32 } %52, 0
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !56
  br label %56

56:                                               ; preds = %55, %48
  %57 = phi ptr [ null, %48 ], [ %50, %55 ]
  %58 = ptrtoint ptr %57 to i32
  store i32 %58, ptr %37, align 8
  %59 = icmp ne ptr %57, null
  %60 = zext i1 %59 to i8
  %61 = getelementptr inbounds %struct.sk_buff, ptr %2, i32 0, i32 13, i32 0, i32 3
  %62 = load i16, ptr %61, align 2
  %63 = lshr i16 %62, 14
  %64 = trunc i16 %63 to i8
  %65 = and i8 %64, 1
  %66 = or i8 %65, %60
  %67 = zext i8 %66 to i16
  %68 = shl nuw nsw i16 %67, 14
  %69 = and i16 %62, -16385
  %70 = or i16 %68, %69
  store i16 %70, ptr %61, align 2
  br label %71

71:                                               ; preds = %56, %42
  %72 = tail call i32 @netif_rx_ni(ptr noundef %2)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_rx_ni(ptr noundef %0) #1 {
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_entry, i32 0, i32 1), align 4
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = tail call ptr @llvm.thread.pointer() #39
  %6 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %7 = load i32, ptr %6, align 8
  %8 = lshr i32 %7, 5
  %9 = getelementptr i32, ptr @__cpu_online_mask, i32 %8
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %7, 31
  %12 = shl nuw i32 1, %11
  %13 = and i32 %12, %10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !57
  %16 = tail call i32 @__traceiter_netif_rx_ni_entry(ptr noundef null, ptr noundef %0) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !58
  br label %17

17:                                               ; preds = %15, %4, %1
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !59
  %18 = tail call fastcc i32 @netif_rx_internal(ptr noundef %0)
  %19 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %20 = inttoptr i32 %19 to ptr
  %21 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %20) #34, !srcloc !18
  %22 = add i32 %21, ptrtoint (ptr @irq_stat to i32)
  %23 = inttoptr i32 %22 to ptr
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %17
  tail call void @do_softirq() #39
  br label %27

27:                                               ; preds = %26, %17
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !60
  %28 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_exit, i32 0, i32 1), align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %43

30:                                               ; preds = %27
  %31 = tail call ptr @llvm.thread.pointer() #39
  %32 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %33 = load i32, ptr %32, align 8
  %34 = lshr i32 %33, 5
  %35 = getelementptr i32, ptr @__cpu_online_mask, i32 %34
  %36 = load volatile i32, ptr %35, align 4
  %37 = and i32 %33, 31
  %38 = shl nuw i32 1, %37
  %39 = and i32 %38, %36
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %30
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !61
  %42 = tail call i32 @__traceiter_netif_rx_ni_exit(ptr noundef null, i32 noundef %18) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !62
  br label %43

43:                                               ; preds = %41, %30, %27
  ret i32 %18
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @dev_pick_tx_zero(ptr nocapture readnone %0, ptr nocapture readnone %1, ptr nocapture readnone %2) #16 {
  ret i16 0
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @dev_pick_tx_cpu_id(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, ptr nocapture readnone %2) #23 {
  %4 = tail call ptr @llvm.thread.pointer() #39
  %5 = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %6 = load i32, ptr %5, align 8
  %7 = and i32 %6, 65535
  %8 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %9 = load i32, ptr %8, align 8
  %10 = urem i32 %7, %9
  %11 = trunc i32 %10 to i16
  ret i16 %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i16 @netdev_pick_tx(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 1
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sock_common, ptr %5, i32 0, i32 16
  %9 = load i16, ptr %8, align 4
  %10 = icmp eq i16 %9, -1
  %11 = zext i16 %9 to i32
  br i1 %10, label %12, label %15

12:                                               ; preds = %7, %3
  %13 = icmp eq ptr %2, null
  %14 = select i1 %13, ptr %0, ptr %2
  br label %26

15:                                               ; preds = %7
  %16 = icmp eq ptr %2, null
  %17 = select i1 %16, ptr %0, ptr %2
  %18 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13
  %19 = load i16, ptr %18, align 8
  %20 = and i16 %19, 128
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %24 = load i32, ptr %23, align 8
  %25 = icmp ugt i32 %24, %11
  br i1 %25, label %245, label %26

26:                                               ; preds = %22, %15, %12
  %27 = phi ptr [ %14, %12 ], [ %17, %22 ], [ %17, %15 ]
  %28 = phi i32 [ -1, %12 ], [ %11, %22 ], [ %11, %15 ]
  %29 = load volatile i32, ptr @xps_needed, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %154

31:                                               ; preds = %26
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %32 = load volatile i32, ptr @xps_rxqs_needed, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %94

34:                                               ; preds = %31
  %35 = getelementptr %struct.net_device, ptr %27, i32 0, i32 94, i32 1
  %36 = load volatile ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  %38 = select i1 %37, i1 true, i1 %6
  br i1 %38, label %94, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.sock_common, ptr %5, i32 0, i32 17
  %41 = load volatile i16, ptr %40, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp eq i16 %41, -1
  br i1 %43, label %94, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 5
  %46 = load i32, ptr %45, align 8
  %47 = and i32 %46, 15
  %48 = getelementptr %struct.net_device, ptr %0, i32 0, i32 119, i32 %47
  %49 = load i8, ptr %48, align 1
  %50 = zext i8 %49 to i32
  %51 = getelementptr inbounds %struct.xps_dev_maps, ptr %36, i32 0, i32 2
  %52 = load i16, ptr %51, align 4
  %53 = sext i16 %52 to i32
  %54 = icmp slt i32 %50, %53
  br i1 %54, label %55, label %94

55:                                               ; preds = %44
  %56 = getelementptr inbounds %struct.xps_dev_maps, ptr %36, i32 0, i32 1
  %57 = load i32, ptr %56, align 4
  %58 = icmp ugt i32 %57, %42
  br i1 %58, label %59, label %94

59:                                               ; preds = %55
  %60 = mul nsw i32 %53, %42
  %61 = add nsw i32 %60, %50
  %62 = getelementptr %struct.xps_dev_maps, ptr %36, i32 0, i32 3, i32 %61
  %63 = load volatile ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, null
  br i1 %64, label %94, label %65

65:                                               ; preds = %59
  %66 = load i32, ptr %63, align 4
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.xps_map, ptr %63, i32 0, i32 3
  br label %87

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13
  %72 = load i16, ptr %71, align 8
  %73 = and i16 %72, 768
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  tail call void @__skb_get_hash(ptr noundef %1) #39
  %76 = load i32, ptr %63, align 4
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i32 [ %66, %70 ], [ %76, %75 ]
  %79 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 7
  %80 = load i32, ptr %79, align 8
  %81 = zext i32 %80 to i64
  %82 = zext i32 %78 to i64
  %83 = mul nuw i64 %81, %82
  %84 = lshr i64 %83, 32
  %85 = trunc i64 %84 to i32
  %86 = getelementptr %struct.xps_map, ptr %63, i32 0, i32 3, i32 %85
  br label %87

87:                                               ; preds = %77, %68
  %88 = phi ptr [ %69, %68 ], [ %86, %77 ]
  %89 = load i16, ptr %88, align 2
  %90 = zext i16 %89 to i32
  %91 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %92 = load i32, ptr %91, align 8
  %93 = icmp ugt i32 %92, %90
  br i1 %93, label %152, label %94, !prof !22

94:                                               ; preds = %87, %59, %55, %44, %39, %34, %31
  %95 = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 94
  %96 = load volatile ptr, ptr %95, align 4
  %97 = icmp eq ptr %96, null
  br i1 %97, label %151, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 10
  %100 = load i32, ptr %99, align 8
  %101 = add i32 %100, -1
  %102 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 5
  %103 = load i32, ptr %102, align 8
  %104 = and i32 %103, 15
  %105 = getelementptr %struct.net_device, ptr %0, i32 0, i32 119, i32 %104
  %106 = load i8, ptr %105, align 1
  %107 = zext i8 %106 to i32
  %108 = getelementptr inbounds %struct.xps_dev_maps, ptr %96, i32 0, i32 2
  %109 = load i16, ptr %108, align 4
  %110 = sext i16 %109 to i32
  %111 = icmp slt i32 %107, %110
  br i1 %111, label %112, label %151

112:                                              ; preds = %98
  %113 = getelementptr inbounds %struct.xps_dev_maps, ptr %96, i32 0, i32 1
  %114 = load i32, ptr %113, align 4
  %115 = icmp ugt i32 %114, %101
  br i1 %115, label %116, label %151

116:                                              ; preds = %112
  %117 = mul i32 %101, %110
  %118 = add i32 %117, %107
  %119 = getelementptr %struct.xps_dev_maps, ptr %96, i32 0, i32 3, i32 %118
  %120 = load volatile ptr, ptr %119, align 4
  %121 = icmp eq ptr %120, null
  br i1 %121, label %151, label %122

122:                                              ; preds = %116
  %123 = load i32, ptr %120, align 4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.xps_map, ptr %120, i32 0, i32 3
  br label %144

127:                                              ; preds = %122
  %128 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13
  %129 = load i16, ptr %128, align 8
  %130 = and i16 %129, 768
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  tail call void @__skb_get_hash(ptr noundef %1) #39
  %133 = load i32, ptr %120, align 4
  br label %134

134:                                              ; preds = %132, %127
  %135 = phi i32 [ %123, %127 ], [ %133, %132 ]
  %136 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 7
  %137 = load i32, ptr %136, align 8
  %138 = zext i32 %137 to i64
  %139 = zext i32 %135 to i64
  %140 = mul nuw i64 %138, %139
  %141 = lshr i64 %140, 32
  %142 = trunc i64 %141 to i32
  %143 = getelementptr %struct.xps_map, ptr %120, i32 0, i32 3, i32 %142
  br label %144

144:                                              ; preds = %134, %125
  %145 = phi ptr [ %126, %125 ], [ %143, %134 ]
  %146 = load i16, ptr %145, align 2
  %147 = zext i16 %146 to i32
  %148 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %149 = load i32, ptr %148, align 8
  %150 = icmp ugt i32 %149, %147
  br i1 %150, label %152, label %151, !prof !22

151:                                              ; preds = %144, %116, %112, %98, %94
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %154

152:                                              ; preds = %144, %87
  %153 = phi i32 [ %90, %87 ], [ %147, %144 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %219

154:                                              ; preds = %151, %26
  %155 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %156 = load i32, ptr %155, align 8
  %157 = trunc i32 %156 to i16
  %158 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 117
  %159 = load i16, ptr %158, align 2
  %160 = icmp eq i16 %159, 0
  br i1 %160, label %182, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 5
  %163 = load i32, ptr %162, align 8
  %164 = and i32 %163, 15
  %165 = getelementptr %struct.net_device, ptr %0, i32 0, i32 119, i32 %164
  %166 = load i8, ptr %165, align 1
  %167 = zext i8 %166 to i32
  %168 = getelementptr %struct.net_device, ptr %27, i32 0, i32 118, i32 %167
  %169 = getelementptr %struct.net_device, ptr %27, i32 0, i32 118, i32 %167, i32 1
  %170 = load i16, ptr %169, align 2
  %171 = load i16, ptr %168, align 4
  %172 = icmp eq i16 %171, 0
  br i1 %172, label %173, label %182, !prof !15

173:                                              ; preds = %161
  %174 = tail call i32 @net_ratelimit() #39
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %179, label %176

176:                                              ; preds = %173
  %177 = zext i16 %170 to i32
  %178 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.84, ptr noundef %27, i32 noundef %177, i32 noundef %167) #42
  br label %179

179:                                              ; preds = %176, %173
  %180 = load i32, ptr %155, align 8
  %181 = trunc i32 %180 to i16
  br label %182

182:                                              ; preds = %179, %161, %154
  %183 = phi i16 [ 0, %154 ], [ 0, %179 ], [ %170, %161 ]
  %184 = phi i16 [ %157, %154 ], [ %181, %179 ], [ %171, %161 ]
  %185 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 9
  %186 = load i16, ptr %185, align 4
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %200, label %188

188:                                              ; preds = %182
  %189 = add i16 %186, -1
  %190 = zext i16 %189 to i32
  %191 = icmp ult i16 %189, %183
  %192 = select i1 %191, i16 0, i16 %183
  %193 = zext i16 %192 to i32
  %194 = sub nsw i32 %190, %193
  %195 = zext i16 %184 to i32
  br label %196

196:                                              ; preds = %196, %188
  %197 = phi i32 [ %194, %188 ], [ %199, %196 ]
  %198 = icmp ult i32 %197, %195
  %199 = sub i32 %197, %195
  br i1 %198, label %214, label %196, !prof !22

200:                                              ; preds = %182
  %201 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13
  %202 = load i16, ptr %201, align 8
  %203 = and i16 %202, 768
  %204 = icmp eq i16 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %200
  tail call void @__skb_get_hash(ptr noundef %1) #39
  br label %206

206:                                              ; preds = %205, %200
  %207 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 7
  %208 = load i32, ptr %207, align 8
  %209 = zext i32 %208 to i64
  %210 = zext i16 %184 to i64
  %211 = mul nuw nsw i64 %209, %210
  %212 = lshr i64 %211, 32
  %213 = trunc i64 %212 to i32
  br label %214

214:                                              ; preds = %206, %196
  %215 = phi i32 [ %213, %206 ], [ %197, %196 ]
  %216 = trunc i32 %215 to i16
  %217 = add i16 %183, %216
  %218 = zext i16 %217 to i32
  br label %219

219:                                              ; preds = %214, %152
  %220 = phi i32 [ %218, %214 ], [ %153, %152 ]
  %221 = icmp ne i32 %28, %220
  %222 = icmp ne ptr %5, null
  %223 = and i1 %222, %221
  br i1 %223, label %224, label %245

224:                                              ; preds = %219
  %225 = getelementptr inbounds %struct.sock_common, ptr %5, i32 0, i32 4
  %226 = load volatile i8, ptr %225, align 2
  %227 = zext i8 %226 to i32
  %228 = shl nuw i32 1, %227
  %229 = and i32 %228, -4161
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %245, label %231

231:                                              ; preds = %224
  %232 = getelementptr inbounds %struct.sock, ptr %5, i32 0, i32 19
  %233 = load volatile ptr, ptr %232, align 8
  %234 = icmp eq ptr %233, null
  br i1 %234, label %245, label %235

235:                                              ; preds = %231
  %236 = trunc i32 %220 to i16
  %237 = icmp eq i32 %220, 65535
  %238 = load i1, ptr @sk_tx_queue_set.__already_done, align 1
  %239 = xor i1 %238, true
  %240 = select i1 %237, i1 %239, i1 false
  br i1 %240, label %241, label %242, !prof !15

241:                                              ; preds = %235
  store i1 true, ptr @sk_tx_queue_set.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.85, i32 noundef 1930, i32 noundef 9, ptr noundef null) #39
  br label %242

242:                                              ; preds = %241, %235
  br i1 %237, label %245, label %243

243:                                              ; preds = %242
  %244 = getelementptr inbounds %struct.sock_common, ptr %5, i32 0, i32 16
  store i16 %236, ptr %244, align 4
  br label %245

245:                                              ; preds = %243, %242, %231, %224, %219, %22
  %246 = phi i32 [ %11, %22 ], [ %220, %231 ], [ %220, %224 ], [ %220, %219 ], [ 65535, %242 ], [ %220, %243 ]
  %247 = trunc i32 %246 to i16
  ret i16 %247
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @netdev_core_pick_tx(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 10
  %5 = load i32, ptr %4, align 8
  %6 = add i32 %5, -17
  %7 = icmp ult i32 %6, -16
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = tail call ptr @llvm.thread.pointer() #39
  %10 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %11 = load i32, ptr %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, ptr %4, align 8
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 89
  %15 = load i32, ptr %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %41, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.net_device_ops, ptr %19, i32 0, i32 6
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = tail call zeroext i16 %21(ptr noundef %0, ptr noundef %1, ptr noundef %2) #39
  br label %27

25:                                               ; preds = %17
  %26 = tail call zeroext i16 @netdev_pick_tx(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i16 [ %24, %23 ], [ %26, %25 ]
  %29 = zext i16 %28 to i32
  %30 = load i32, ptr %14, align 8
  %31 = icmp ugt i32 %30, %29
  br i1 %31, label %38, label %32, !prof !22

32:                                               ; preds = %27
  %33 = tail call i32 @net_ratelimit() #39
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = load i32, ptr %14, align 8
  %37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.86, ptr noundef %0, i32 noundef %29, i32 noundef %36) #42
  br label %38

38:                                               ; preds = %35, %32, %27
  %39 = phi i16 [ 0, %32 ], [ 0, %35 ], [ %28, %27 ]
  %40 = zext i16 %39 to i32
  br label %41

41:                                               ; preds = %38, %13
  %42 = phi i32 [ %40, %38 ], [ 0, %13 ]
  %43 = trunc i32 %42 to i16
  %44 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 9
  store i16 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %46 = load ptr, ptr %45, align 64
  %47 = getelementptr %struct.netdev_queue, ptr %46, i32 %42
  ret ptr %47
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_queue_xmit(ptr noundef %0) #1 {
  %2 = tail call fastcc i32 @__dev_queue_xmit(ptr noundef %0, ptr noundef null)
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__dev_queue_xmit(ptr noundef %0, ptr noundef %1) unnamed_addr #1 {
  %3 = alloca ptr, align 4
  %4 = alloca %struct.tcphdr, align 4
  %5 = alloca %struct.udphdr, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %8 = load ptr, ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #39
  store i32 -12, ptr %6, align 4
  %9 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %12 = load ptr, ptr %11, align 8
  %13 = ptrtoint ptr %10 to i32
  %14 = ptrtoint ptr %12 to i32
  %15 = sub i32 %13, %14
  %16 = trunc i32 %15 to i16
  %17 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  store i16 %16, ptr %17, align 2
  %18 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 3
  %21 = load i8, ptr %20, align 1
  %22 = and i8 %21, 64
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24, !prof !22

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  tail call void @__skb_tstamp_tx(ptr noundef %0, ptr noundef null, ptr noundef null, ptr noundef %26, i32 noundef 1) #39
  br label %27

27:                                               ; preds = %24, %2
  %28 = tail call ptr @llvm.thread.pointer() #39
  %29 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %30 = load volatile i32, ptr %29, align 4
  %31 = add i32 %30, 512
  store volatile i32 %31, ptr %29, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  %32 = load ptr, ptr %18, align 4
  %33 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %34 = load i32, ptr %33, align 8
  %35 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 3
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.skb_shared_info, ptr %32, i32 0, i32 4
  %37 = load i16, ptr %36, align 4
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %113, label %39

39:                                               ; preds = %27
  %40 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 17
  %41 = load i16, ptr %40, align 2
  %42 = icmp eq i16 %41, -1
  br i1 %42, label %113, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.skb_shared_info, ptr %32, i32 0, i32 5
  %45 = load i16, ptr %44, align 2
  %46 = load ptr, ptr %11, align 8
  %47 = zext i16 %41 to i32
  %48 = getelementptr i8, ptr %46, i32 %47
  %49 = load i16, ptr %17, align 2
  %50 = zext i16 %49 to i32
  %51 = ptrtoint ptr %48 to i32
  %52 = sub nsw i32 %47, %50
  %53 = getelementptr inbounds %struct.skb_shared_info, ptr %32, i32 0, i32 8
  %54 = load i32, ptr %53, align 8
  %55 = and i32 %54, 17
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %84, label %57, !prof !15

57:                                               ; preds = %43
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false) #39, !annotation !21
  %58 = load ptr, ptr %9, align 4
  %59 = ptrtoint ptr %58 to i32
  %60 = sub i32 %51, %59
  %61 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %62 = load i32, ptr %61, align 4
  %63 = add i32 %62, %60
  %64 = sub i32 %34, %63
  %65 = icmp slt i32 %64, 20
  br i1 %65, label %66, label %71, !prof !15

66:                                               ; preds = %57
  %67 = icmp eq ptr %0, null
  br i1 %67, label %82, label %68

68:                                               ; preds = %66
  %69 = call i32 @skb_copy_bits(ptr noundef nonnull %0, i32 noundef %60, ptr noundef nonnull %4, i32 noundef 20) #39
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %82, label %74

71:                                               ; preds = %57
  %72 = getelementptr i8, ptr %58, i32 %60
  %73 = icmp eq ptr %72, null
  br i1 %73, label %82, label %74, !prof !15

74:                                               ; preds = %71, %68
  %75 = phi ptr [ %72, %71 ], [ %4, %68 ]
  %76 = getelementptr inbounds %struct.tcphdr, ptr %75, i32 0, i32 4
  %77 = load i16, ptr %76, align 4
  %78 = lshr i16 %77, 2
  %79 = and i16 %78, 60
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 %52, %80
  br label %82

82:                                               ; preds = %74, %71, %68, %66
  %83 = phi i32 [ %81, %74 ], [ %52, %71 ], [ %52, %66 ], [ %52, %68 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #39
  br label %92

84:                                               ; preds = %43
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store i64 0, ptr %5, align 8, !annotation !21
  %85 = load ptr, ptr %9, align 4
  %86 = ptrtoint ptr %85 to i32
  %87 = sub i32 %51, %86
  %88 = call fastcc ptr @skb_header_pointer(ptr noundef %0, i32 noundef %87, i32 noundef 8, ptr noundef nonnull %5) #39
  %89 = icmp eq ptr %88, null
  %90 = add nsw i32 %52, 8
  %91 = select i1 %89, i32 %52, i32 %90
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  br label %92

92:                                               ; preds = %84, %82
  %93 = phi i32 [ %83, %82 ], [ %91, %84 ]
  %94 = load i32, ptr %53, align 8
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %92
  %98 = load i32, ptr %33, align 8
  %99 = load i16, ptr %36, align 4
  %100 = zext i16 %99 to i32
  %101 = xor i32 %93, -1
  %102 = add i32 %98, %101
  %103 = add i32 %102, %100
  %104 = udiv i32 %103, %100
  %105 = trunc i32 %104 to i16
  br label %106

106:                                              ; preds = %97, %92
  %107 = phi i16 [ %105, %97 ], [ %45, %92 ]
  %108 = zext i16 %107 to i32
  %109 = add nsw i32 %108, -1
  %110 = mul i32 %109, %93
  %111 = load i32, ptr %35, align 4
  %112 = add i32 %110, %111
  store i32 %112, ptr %35, align 4
  br label %113

113:                                              ; preds = %106, %39, %27
  %114 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 15
  %115 = load i64, ptr %114, align 16
  %116 = and i64 %115, 32
  %117 = icmp eq i64 %116, 0
  %118 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 4
  %119 = load i32, ptr %118, align 8
  br i1 %117, label %129, label %120

120:                                              ; preds = %113
  %121 = icmp eq i32 %119, 0
  br i1 %121, label %157, label %122

122:                                              ; preds = %120
  %123 = and i32 %119, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %122
  %126 = and i32 %119, -2
  %127 = inttoptr i32 %126 to ptr
  call void @dst_release(ptr noundef %127) #39
  br label %128

128:                                              ; preds = %125, %122
  store i32 0, ptr %118, align 8
  br label %157

129:                                              ; preds = %113
  %130 = and i32 %119, 1
  %131 = icmp ne i32 %130, 0
  %132 = icmp ugt i32 %119, 1
  %133 = and i1 %132, %131
  br i1 %133, label %134, label %157

134:                                              ; preds = %129
  %135 = and i32 %119, -2
  %136 = inttoptr i32 %135 to ptr
  %137 = getelementptr inbounds %struct.dst_entry, ptr %136, i32 0, i32 18
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !54
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %137) #39, !srcloc !29
  %138 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %137, ptr %137, i32 0, i32 1, ptr elementtype(i32) %137) #39, !srcloc !55
  %139 = extractvalue { i32, i32, i32 } %138, 0
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %134
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !56
  br label %142

142:                                              ; preds = %141, %134
  %143 = phi ptr [ null, %134 ], [ %136, %141 ]
  %144 = ptrtoint ptr %143 to i32
  store i32 %144, ptr %118, align 8
  %145 = icmp ne ptr %143, null
  %146 = zext i1 %145 to i8
  %147 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %148 = load i16, ptr %147, align 2
  %149 = lshr i16 %148, 14
  %150 = trunc i16 %149 to i8
  %151 = and i8 %150, 1
  %152 = or i8 %151, %146
  %153 = zext i8 %152 to i16
  %154 = shl nuw nsw i16 %153, 14
  %155 = and i16 %148, -16385
  %156 = or i16 %154, %155
  store i16 %156, ptr %147, align 2
  br label %157

157:                                              ; preds = %142, %129, %128, %120
  %158 = call ptr @netdev_core_pick_tx(ptr noundef %8, ptr noundef %0, ptr noundef %1)
  %159 = getelementptr inbounds %struct.netdev_queue, ptr %158, i32 0, i32 2
  %160 = load volatile ptr, ptr %159, align 4
  %161 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_queue, i32 0, i32 1), align 4
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %163, label %175

163:                                              ; preds = %157
  %164 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %165 = load i32, ptr %164, align 8
  %166 = lshr i32 %165, 5
  %167 = getelementptr i32, ptr @__cpu_online_mask, i32 %166
  %168 = load volatile i32, ptr %167, align 4
  %169 = and i32 %165, 31
  %170 = shl nuw i32 1, %169
  %171 = and i32 %170, %168
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %163
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !64
  %174 = call i32 @__traceiter_net_dev_queue(ptr noundef null, ptr noundef %0) #39
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !65
  br label %175

175:                                              ; preds = %173, %163, %157
  %176 = load ptr, ptr %160, align 64
  %177 = icmp eq ptr %176, null
  br i1 %177, label %451, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 16, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store ptr null, ptr %3, align 4
  %180 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 2
  %181 = load i32, ptr %180, align 8
  %182 = and i32 %181, 256
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %288, label %184

184:                                              ; preds = %178
  %185 = and i32 %181, 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %262, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 19
  %189 = load volatile i32, ptr %188, align 4
  %190 = and i32 %189, 12
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %262

192:                                              ; preds = %187
  %193 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 25
  %194 = call i32 @_raw_spin_trylock(ptr noundef %193) #39
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %203

196:                                              ; preds = %192
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !66
  %197 = load volatile i32, ptr %188, align 4
  %198 = and i32 %197, 4
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %262

200:                                              ; preds = %196
  call void @_set_bit(i32 noundef 2, ptr noundef %188) #39
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !67
  %201 = call i32 @_raw_spin_trylock(ptr noundef %193) #39
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %262, label %203

203:                                              ; preds = %200, %192
  %204 = load volatile i32, ptr %188, align 4
  %205 = and i32 %204, 12
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %209, label %207, !prof !22

207:                                              ; preds = %203
  %208 = call fastcc i32 @dev_qdisc_enqueue(ptr noundef %0, ptr noundef %160, ptr noundef nonnull %3, ptr noundef %158) #39
  call void @__qdisc_run(ptr noundef %160) #39
  call fastcc void @qdisc_run_end(ptr noundef %160) #39
  br label %283

209:                                              ; preds = %203
  %210 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 11
  %211 = load ptr, ptr %210, align 16
  %212 = call i32 @llvm.read_register.i32(metadata !0) #39
  %213 = inttoptr i32 %212 to ptr
  %214 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %213) #34, !srcloc !18
  %215 = load i32, ptr %35, align 4
  %216 = load ptr, ptr %18, align 4
  %217 = getelementptr inbounds %struct.skb_shared_info, ptr %216, i32 0, i32 4
  %218 = load i16, ptr %217, align 4
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %224, label %220

220:                                              ; preds = %209
  %221 = getelementptr inbounds %struct.skb_shared_info, ptr %216, i32 0, i32 5
  %222 = load i16, ptr %221, align 2
  %223 = zext i16 %222 to i32
  br label %224

224:                                              ; preds = %220, %209
  %225 = phi i32 [ %223, %220 ], [ 1, %209 ]
  %226 = ptrtoint ptr %211 to i32
  %227 = add i32 %214, %226
  %228 = inttoptr i32 %227 to ptr
  %229 = zext i32 %215 to i64
  %230 = getelementptr inbounds %struct.gnet_stats_basic_sync, ptr %228, i32 0, i32 2
  %231 = load i32, ptr %230, align 4
  %232 = add i32 %231, 1
  store i32 %232, ptr %230, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #39, !srcloc !68
  %233 = load i64, ptr %228, align 8
  %234 = add i64 %233, %229
  store i64 %234, ptr %228, align 8
  %235 = getelementptr inbounds %struct.gnet_stats_basic_sync, ptr %228, i32 0, i32 1
  %236 = zext i32 %225 to i64
  %237 = load i64, ptr %235, align 8
  %238 = add i64 %237, %236
  store i64 %238, ptr %235, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #39, !srcloc !69
  %239 = load i32, ptr %230, align 4
  %240 = add i32 %239, 1
  store i32 %240, ptr %230, align 4
  %241 = call zeroext i1 @sch_direct_xmit(ptr noundef %0, ptr noundef %160, ptr noundef %8, ptr noundef %158, ptr noundef null, i1 noundef zeroext true) #39
  br i1 %241, label %242, label %247

242:                                              ; preds = %224
  %243 = load volatile i32, ptr %188, align 4
  %244 = and i32 %243, 12
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %242
  call void @__qdisc_run(ptr noundef %160) #39
  br label %247

247:                                              ; preds = %246, %242, %224
  %248 = load i32, ptr %180, align 8
  %249 = and i32 %248, 256
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %258, label %251

251:                                              ; preds = %247
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %252 = load i16, ptr %193, align 4
  %253 = add i16 %252, 1
  store i16 %253, ptr %193, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %254 = load volatile i32, ptr %188, align 4
  %255 = and i32 %254, 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %449, label %257, !prof !22

257:                                              ; preds = %251
  call void @__netif_schedule(ptr noundef %160) #39
  br label %449

258:                                              ; preds = %247
  %259 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 20
  %260 = load i32, ptr %259, align 4
  %261 = and i32 %260, -2
  store i32 %261, ptr %259, align 4
  br label %449

262:                                              ; preds = %200, %196, %187, %184
  %263 = load ptr, ptr %160, align 64
  %264 = call i32 %263(ptr noundef %0, ptr noundef %160, ptr noundef nonnull %3) #39
  %265 = and i32 %264, 15
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %282

267:                                              ; preds = %262
  %268 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_qdisc_enqueue, i32 0, i32 1), align 4
  %269 = icmp sgt i32 %268, 0
  br i1 %269, label %270, label %282

270:                                              ; preds = %267
  %271 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %272 = load i32, ptr %271, align 8
  %273 = lshr i32 %272, 5
  %274 = getelementptr i32, ptr @__cpu_online_mask, i32 %273
  %275 = load volatile i32, ptr %274, align 4
  %276 = and i32 %272, 31
  %277 = shl nuw i32 1, %276
  %278 = and i32 %277, %275
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %282, label %280

280:                                              ; preds = %270
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !70
  %281 = call i32 @__traceiter_qdisc_enqueue(ptr noundef null, ptr noundef %160, ptr noundef %158, ptr noundef %0) #39
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !71
  br label %282

282:                                              ; preds = %280, %270, %267, %262
  call fastcc void @qdisc_run(ptr noundef %160) #39
  br label %283

283:                                              ; preds = %282, %207
  %284 = phi i32 [ %208, %207 ], [ %265, %282 ]
  %285 = load ptr, ptr %3, align 4
  %286 = icmp eq ptr %285, null
  br i1 %286, label %449, label %287, !prof !22

287:                                              ; preds = %283
  call void @kfree_skb_list(ptr noundef nonnull %285) #39
  br label %449

288:                                              ; preds = %178
  %289 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 20
  %290 = load volatile i32, ptr %289, align 4
  %291 = and i32 %290, 1
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %293, label %295, !prof !15

293:                                              ; preds = %288
  %294 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 24
  call void @_raw_spin_lock(ptr noundef %294) #39
  br label %295

295:                                              ; preds = %293, %288
  call void @_raw_spin_lock(ptr noundef %179) #39
  %296 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 19
  %297 = load volatile i32, ptr %296, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %301, label %300, !prof !22

300:                                              ; preds = %295
  store ptr null, ptr %0, align 8
  store ptr %0, ptr %3, align 4
  br label %436

301:                                              ; preds = %295
  %302 = load i32, ptr %180, align 8
  %303 = and i32 %302, 4
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %376, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 16, i32 2
  %307 = load i32, ptr %306, align 8
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %376

309:                                              ; preds = %305
  %310 = and i32 %302, 256
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %323, label %312

312:                                              ; preds = %309
  %313 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 25
  %314 = call i32 @_raw_spin_trylock(ptr noundef %313) #39
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %328

316:                                              ; preds = %312
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !66
  %317 = load volatile i32, ptr %296, align 4
  %318 = and i32 %317, 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %376

320:                                              ; preds = %316
  call void @_set_bit(i32 noundef 2, ptr noundef %296) #39
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !67
  %321 = call i32 @_raw_spin_trylock(ptr noundef %313) #39
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %376, label %328

323:                                              ; preds = %309
  %324 = load i32, ptr %289, align 4
  %325 = or i32 %324, 1
  store i32 %325, ptr %289, align 4
  %326 = and i32 %324, 1
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %376

328:                                              ; preds = %323, %320, %312
  %329 = load i32, ptr %35, align 4
  %330 = load ptr, ptr %18, align 4
  %331 = getelementptr inbounds %struct.skb_shared_info, ptr %330, i32 0, i32 4
  %332 = load i16, ptr %331, align 4
  %333 = icmp eq i16 %332, 0
  br i1 %333, label %338, label %334

334:                                              ; preds = %328
  %335 = getelementptr inbounds %struct.skb_shared_info, ptr %330, i32 0, i32 5
  %336 = load i16, ptr %335, align 2
  %337 = zext i16 %336 to i32
  br label %338

338:                                              ; preds = %334, %328
  %339 = phi i32 [ %337, %334 ], [ 1, %328 ]
  %340 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 17
  %341 = zext i32 %329 to i64
  %342 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 17, i32 2
  %343 = load i32, ptr %342, align 4
  %344 = add i32 %343, 1
  store i32 %344, ptr %342, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #39, !srcloc !68
  %345 = load i64, ptr %340, align 8
  %346 = add i64 %345, %341
  store i64 %346, ptr %340, align 8
  %347 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 17, i32 1
  %348 = zext i32 %339 to i64
  %349 = load i64, ptr %347, align 8
  %350 = add i64 %349, %348
  store i64 %350, ptr %347, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #39, !srcloc !69
  %351 = load i32, ptr %342, align 4
  %352 = add i32 %351, 1
  store i32 %352, ptr %342, align 4
  %353 = call zeroext i1 @sch_direct_xmit(ptr noundef %0, ptr noundef %160, ptr noundef %8, ptr noundef %158, ptr noundef %179, i1 noundef zeroext true) #39
  br i1 %353, label %354, label %360

354:                                              ; preds = %338
  br i1 %292, label %355, label %359, !prof !15

355:                                              ; preds = %354
  %356 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 24
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %357 = load i16, ptr %356, align 4
  %358 = add i16 %357, 1
  store i16 %358, ptr %356, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %359

359:                                              ; preds = %355, %354
  call void @__qdisc_run(ptr noundef %160) #39
  br label %360

360:                                              ; preds = %359, %338
  %361 = phi i1 [ false, %359 ], [ %292, %338 ]
  %362 = load i32, ptr %180, align 8
  %363 = and i32 %362, 256
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %373, label %365

365:                                              ; preds = %360
  %366 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 25
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %367 = load i16, ptr %366, align 4
  %368 = add i16 %367, 1
  store i16 %368, ptr %366, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %369 = load volatile i32, ptr %296, align 4
  %370 = and i32 %369, 4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %436, label %372, !prof !22

372:                                              ; preds = %365
  call void @__netif_schedule(ptr noundef %160) #39
  br label %436

373:                                              ; preds = %360
  %374 = load i32, ptr %289, align 4
  %375 = and i32 %374, -2
  store i32 %375, ptr %289, align 4
  br label %436

376:                                              ; preds = %323, %320, %316, %305, %301
  %377 = load ptr, ptr %160, align 64
  %378 = call i32 %377(ptr noundef %0, ptr noundef %160, ptr noundef nonnull %3) #39
  %379 = and i32 %378, 15
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %396

381:                                              ; preds = %376
  %382 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_qdisc_enqueue, i32 0, i32 1), align 4
  %383 = icmp sgt i32 %382, 0
  br i1 %383, label %384, label %396

384:                                              ; preds = %381
  %385 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %386 = load i32, ptr %385, align 8
  %387 = lshr i32 %386, 5
  %388 = getelementptr i32, ptr @__cpu_online_mask, i32 %387
  %389 = load volatile i32, ptr %388, align 4
  %390 = and i32 %386, 31
  %391 = shl nuw i32 1, %390
  %392 = and i32 %391, %389
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %396, label %394

394:                                              ; preds = %384
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !70
  %395 = call i32 @__traceiter_qdisc_enqueue(ptr noundef null, ptr noundef %160, ptr noundef %158, ptr noundef %0) #39
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !71
  br label %396

396:                                              ; preds = %394, %384, %381, %376
  %397 = load i32, ptr %180, align 8
  %398 = and i32 %397, 256
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %411, label %400

400:                                              ; preds = %396
  %401 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 25
  %402 = call i32 @_raw_spin_trylock(ptr noundef %401) #39
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %416

404:                                              ; preds = %400
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !66
  %405 = load volatile i32, ptr %296, align 4
  %406 = and i32 %405, 4
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %436

408:                                              ; preds = %404
  call void @_set_bit(i32 noundef 2, ptr noundef %296) #39
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !67
  %409 = call i32 @_raw_spin_trylock(ptr noundef %401) #39
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %436, label %416

411:                                              ; preds = %396
  %412 = load i32, ptr %289, align 4
  %413 = or i32 %412, 1
  store i32 %413, ptr %289, align 4
  %414 = and i32 %412, 1
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %436

416:                                              ; preds = %411, %408, %400
  br i1 %292, label %417, label %421, !prof !15

417:                                              ; preds = %416
  %418 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 24
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %419 = load i16, ptr %418, align 4
  %420 = add i16 %419, 1
  store i16 %420, ptr %418, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %421

421:                                              ; preds = %417, %416
  call void @__qdisc_run(ptr noundef %160) #39
  %422 = load i32, ptr %180, align 8
  %423 = and i32 %422, 256
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %433, label %425

425:                                              ; preds = %421
  %426 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 25
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %427 = load i16, ptr %426, align 4
  %428 = add i16 %427, 1
  store i16 %428, ptr %426, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %429 = load volatile i32, ptr %296, align 4
  %430 = and i32 %429, 4
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %436, label %432, !prof !22

432:                                              ; preds = %425
  call void @__netif_schedule(ptr noundef %160) #39
  br label %436

433:                                              ; preds = %421
  %434 = load i32, ptr %289, align 4
  %435 = and i32 %434, -2
  store i32 %435, ptr %289, align 4
  br label %436

436:                                              ; preds = %433, %432, %425, %411, %408, %404, %373, %372, %365, %300
  %437 = phi i1 [ %292, %300 ], [ %292, %411 ], [ %361, %365 ], [ %361, %372 ], [ %361, %373 ], [ %292, %408 ], [ false, %425 ], [ false, %432 ], [ false, %433 ], [ %292, %404 ]
  %438 = phi i32 [ 1, %300 ], [ %379, %411 ], [ 0, %365 ], [ 0, %372 ], [ 0, %373 ], [ %379, %408 ], [ %379, %425 ], [ %379, %432 ], [ %379, %433 ], [ %379, %404 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %439 = load i16, ptr %179, align 4
  %440 = add i16 %439, 1
  store i16 %440, ptr %179, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %441 = load ptr, ptr %3, align 4
  %442 = icmp eq ptr %441, null
  br i1 %442, label %444, label %443, !prof !22

443:                                              ; preds = %436
  call void @kfree_skb_list(ptr noundef nonnull %441) #39
  br label %444

444:                                              ; preds = %443, %436
  br i1 %437, label %445, label %449, !prof !15

445:                                              ; preds = %444
  %446 = getelementptr inbounds %struct.Qdisc, ptr %160, i32 0, i32 24
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %447 = load i16, ptr %446, align 4
  %448 = add i16 %447, 1
  store i16 %448, ptr %446, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %449

449:                                              ; preds = %445, %444, %287, %283, %258, %257, %251
  %450 = phi i32 [ %284, %287 ], [ %284, %283 ], [ %438, %445 ], [ %438, %444 ], [ 0, %251 ], [ 0, %257 ], [ 0, %258 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  store i32 %450, ptr %6, align 4
  br label %553

451:                                              ; preds = %175
  %452 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 14
  %453 = load i32, ptr %452, align 8
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %549, label %456

456:                                              ; preds = %451
  %457 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %458 = load i32, ptr %457, align 8
  %459 = getelementptr inbounds %struct.netdev_queue, ptr %158, i32 0, i32 10
  %460 = load volatile i32, ptr %459, align 4
  %461 = icmp eq i32 %460, %458
  br i1 %461, label %542, label %462

462:                                              ; preds = %456
  %463 = call i32 @llvm.read_register.i32(metadata !0) #39
  %464 = inttoptr i32 %463 to ptr
  %465 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %464) #34, !srcloc !18
  %466 = add i32 %465, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %467 = inttoptr i32 %466 to ptr
  %468 = load i16, ptr %467, align 2
  %469 = icmp ugt i16 %468, 8
  br i1 %469, label %542, label %470

470:                                              ; preds = %462
  %471 = call fastcc ptr @validate_xmit_skb(ptr noundef %0, ptr noundef %8)
  %472 = icmp eq ptr %471, null
  br i1 %472, label %553, label %473

473:                                              ; preds = %470
  %474 = ptrtoint ptr %471 to i32
  %475 = ptrtoint ptr %8 to i32
  %476 = ptrtoint ptr %158 to i32
  %477 = load volatile i32, ptr @jiffies, align 64
  %478 = call i32 @llvm.read_register.i32(metadata !0) #39
  %479 = inttoptr i32 %478 to ptr
  %480 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %479) #34, !srcloc !18
  %481 = add i32 %480, ptrtoint (ptr @net_rand_noise to i32)
  %482 = inttoptr i32 %481 to ptr
  %483 = load i32, ptr %482, align 4
  %484 = xor i32 %483, %474
  %485 = add i32 %484, %475
  %486 = add i32 %477, %476
  %487 = call i32 @llvm.fshl.i32(i32 %477, i32 %477, i32 8) #39
  %488 = call i32 @llvm.fshl.i32(i32 %485, i32 %485, i32 16) #39
  %489 = xor i32 %487, %486
  %490 = add i32 %488, %489
  %491 = call i32 @llvm.fshl.i32(i32 %489, i32 %489, i32 7) #39
  %492 = xor i32 %490, %491
  store i32 %492, ptr %482, align 4
  %493 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 23
  %494 = load i64, ptr %493, align 16
  %495 = and i64 %494, 4096
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %499

497:                                              ; preds = %473
  %498 = getelementptr inbounds %struct.netdev_queue, ptr %158, i32 0, i32 9
  call void @_raw_spin_lock(ptr noundef %498) #39
  store volatile i32 %458, ptr %459, align 4
  br label %499

499:                                              ; preds = %497, %473
  %500 = getelementptr inbounds %struct.netdev_queue, ptr %158, i32 0, i32 12
  %501 = load i32, ptr %500, align 4
  %502 = and i32 %501, 3
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %530

504:                                              ; preds = %499
  %505 = call i32 @llvm.read_register.i32(metadata !0) #39
  %506 = inttoptr i32 %505 to ptr
  %507 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %506) #34, !srcloc !18
  %508 = add i32 %507, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %509 = inttoptr i32 %508 to ptr
  %510 = load i16, ptr %509, align 2
  %511 = add i16 %510, 1
  store i16 %511, ptr %509, align 2
  %512 = call ptr @dev_hard_start_xmit(ptr noundef nonnull %471, ptr noundef %8, ptr noundef %158, ptr noundef nonnull %6)
  %513 = call i32 @llvm.read_register.i32(metadata !0) #39
  %514 = inttoptr i32 %513 to ptr
  %515 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %514) #34, !srcloc !18
  %516 = add i32 %515, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %517 = inttoptr i32 %516 to ptr
  %518 = load i16, ptr %517, align 2
  %519 = add i16 %518, -1
  store i16 %519, ptr %517, align 2
  %520 = load i32, ptr %6, align 4
  %521 = icmp slt i32 %520, 15
  br i1 %521, label %522, label %530

522:                                              ; preds = %504
  %523 = load i64, ptr %493, align 16
  %524 = and i64 %523, 4096
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %526, label %553

526:                                              ; preds = %522
  store volatile i32 -1, ptr %459, align 4
  %527 = getelementptr inbounds %struct.netdev_queue, ptr %158, i32 0, i32 9
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %528 = load i16, ptr %527, align 4
  %529 = add i16 %528, 1
  store i16 %529, ptr %527, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %553

530:                                              ; preds = %504, %499
  %531 = phi ptr [ %471, %499 ], [ %512, %504 ]
  %532 = load i64, ptr %493, align 16
  %533 = and i64 %532, 4096
  %534 = icmp eq i64 %533, 0
  br i1 %534, label %535, label %539

535:                                              ; preds = %530
  store volatile i32 -1, ptr %459, align 4
  %536 = getelementptr inbounds %struct.netdev_queue, ptr %158, i32 0, i32 9
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %537 = load i16, ptr %536, align 4
  %538 = add i16 %537, 1
  store i16 %538, ptr %536, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %539

539:                                              ; preds = %535, %530
  %540 = call i32 @net_ratelimit() #39
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %549, label %545

542:                                              ; preds = %462, %456
  %543 = call i32 @net_ratelimit() #39
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %549, label %545

545:                                              ; preds = %542, %539
  %546 = phi ptr [ @.str.87, %539 ], [ @.str.88, %542 ]
  %547 = phi ptr [ %531, %539 ], [ %0, %542 ]
  %548 = call i32 (ptr, ...) @_printk(ptr noundef nonnull %546, ptr noundef %8) #42
  br label %549

549:                                              ; preds = %545, %542, %539, %451
  %550 = phi ptr [ %0, %451 ], [ %531, %539 ], [ %0, %542 ], [ %547, %545 ]
  call fastcc void @local_bh_enable() #39
  %551 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 38
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %551) #39, !srcloc !29
  %552 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %551, ptr %551, i32 1, ptr elementtype(i32) %551) #39, !srcloc !30
  call void @kfree_skb_list(ptr noundef %550) #39
  br label %555

553:                                              ; preds = %526, %522, %470, %449
  %554 = phi i32 [ -12, %470 ], [ %520, %526 ], [ %520, %522 ], [ %450, %449 ]
  call fastcc void @local_bh_enable() #39
  br label %555

555:                                              ; preds = %553, %549
  %556 = phi i32 [ %554, %553 ], [ -100, %549 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #39
  ret i32 %556
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_queue_xmit_accel(ptr noundef %0, ptr noundef %1) #1 {
  %3 = tail call fastcc i32 @__dev_queue_xmit(ptr noundef %0, ptr noundef %1)
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__dev_direct_xmit(ptr noundef %0, i16 noundef zeroext %1) #1 {
  %3 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 6
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %124, label %9, !prof !15

9:                                                ; preds = %2
  %10 = load volatile i32, ptr %5, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %124, !prof !22

13:                                               ; preds = %9
  %14 = icmp eq ptr %0, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %30, %13
  %16 = phi ptr [ %32, %30 ], [ null, %13 ]
  %17 = phi ptr [ %31, %30 ], [ null, %13 ]
  %18 = phi ptr [ %19, %30 ], [ %0, %13 ]
  %19 = load ptr, ptr %18, align 8
  store ptr null, ptr %18, align 8
  %20 = getelementptr inbounds %struct.anon.76, ptr %18, i32 0, i32 1
  store ptr %18, ptr %20, align 4
  %21 = tail call fastcc ptr @validate_xmit_skb(ptr noundef nonnull %18, ptr noundef %4) #39
  %22 = icmp eq ptr %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %15
  %24 = icmp eq ptr %17, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %23
  store ptr %21, ptr %16, align 8
  br label %26

26:                                               ; preds = %25, %23
  %27 = phi ptr [ %17, %25 ], [ %21, %23 ]
  %28 = getelementptr inbounds %struct.anon.76, ptr %21, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  br label %30

30:                                               ; preds = %26, %15
  %31 = phi ptr [ %27, %26 ], [ %17, %15 ]
  %32 = phi ptr [ %29, %26 ], [ %16, %15 ]
  %33 = icmp eq ptr %19, null
  br i1 %33, label %34, label %15

34:                                               ; preds = %30, %13
  %35 = phi ptr [ null, %13 ], [ %31, %30 ]
  %36 = icmp eq ptr %35, %0
  br i1 %36, label %37, label %124

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 9
  store i16 %1, ptr %38, align 4
  %39 = zext i16 %1 to i32
  %40 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 87
  %41 = load ptr, ptr %40, align 64
  %42 = getelementptr %struct.netdev_queue, ptr %41, i32 %39
  %43 = ptrtoint ptr %0 to i32
  %44 = ptrtoint ptr %4 to i32
  %45 = ptrtoint ptr %42 to i32
  %46 = load volatile i32, ptr @jiffies, align 64
  %47 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %48 = inttoptr i32 %47 to ptr
  %49 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %48) #34, !srcloc !18
  %50 = add i32 %49, ptrtoint (ptr @net_rand_noise to i32)
  %51 = inttoptr i32 %50 to ptr
  %52 = load i32, ptr %51, align 4
  %53 = xor i32 %52, %43
  %54 = add i32 %53, %44
  %55 = add i32 %46, %45
  %56 = tail call i32 @llvm.fshl.i32(i32 %46, i32 %46, i32 8) #39
  %57 = tail call i32 @llvm.fshl.i32(i32 %54, i32 %54, i32 16) #39
  %58 = xor i32 %55, %56
  %59 = add i32 %57, %58
  %60 = tail call i32 @llvm.fshl.i32(i32 %58, i32 %58, i32 7) #39
  %61 = xor i32 %59, %60
  store i32 %61, ptr %51, align 4
  %62 = tail call ptr @llvm.thread.pointer() #39
  %63 = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 1
  %64 = load volatile i32, ptr %63, align 4
  %65 = add i32 %64, 512
  store volatile i32 %65, ptr %63, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  %66 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %67 = inttoptr i32 %66 to ptr
  %68 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %67) #34, !srcloc !18
  %69 = add i32 %68, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %70 = inttoptr i32 %69 to ptr
  %71 = load i16, ptr %70, align 2
  %72 = add i16 %71, 1
  store i16 %72, ptr %70, align 2
  %73 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %74 = load i64, ptr %73, align 16
  %75 = and i64 %74, 4096
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %37
  %78 = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 2
  %79 = load i32, ptr %78, align 8
  %80 = getelementptr %struct.netdev_queue, ptr %41, i32 %39, i32 9
  tail call void @_raw_spin_lock(ptr noundef %80) #39
  %81 = getelementptr %struct.netdev_queue, ptr %41, i32 %39, i32 10
  store volatile i32 %79, ptr %81, align 4
  br label %82

82:                                               ; preds = %77, %37
  %83 = getelementptr %struct.netdev_queue, ptr %41, i32 %39, i32 12
  %84 = load i32, ptr %83, align 4
  %85 = and i32 %84, 5
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %106

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 16
  %89 = load ptr, ptr %88, align 8
  %90 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %91 = inttoptr i32 %90 to ptr
  %92 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %91) #34, !srcloc !18
  %93 = add i32 %92, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10, i32 1) to i32)
  %94 = inttoptr i32 %93 to ptr
  store i8 0, ptr %94, align 1
  %95 = getelementptr inbounds %struct.net_device_ops, ptr %89, i32 0, i32 4
  %96 = load ptr, ptr %95, align 4
  %97 = tail call i32 %96(ptr noundef %0, ptr noundef %4) #39
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %106

99:                                               ; preds = %87
  %100 = getelementptr %struct.netdev_queue, ptr %41, i32 %39, i32 10
  %101 = load i32, ptr %100, align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = load volatile i32, ptr @jiffies, align 64
  %105 = getelementptr %struct.netdev_queue, ptr %41, i32 %39, i32 11
  store volatile i32 %104, ptr %105, align 8
  br label %106

106:                                              ; preds = %103, %99, %87, %82
  %107 = phi i32 [ 16, %82 ], [ %97, %87 ], [ 0, %99 ], [ 0, %103 ]
  %108 = load i64, ptr %73, align 16
  %109 = and i64 %108, 4096
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %106
  %112 = getelementptr %struct.netdev_queue, ptr %41, i32 %39, i32 10
  store volatile i32 -1, ptr %112, align 4
  %113 = getelementptr %struct.netdev_queue, ptr %41, i32 %39, i32 9
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %114 = load i16, ptr %113, align 4
  %115 = add i16 %114, 1
  store i16 %115, ptr %113, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %116

116:                                              ; preds = %111, %106
  %117 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %118 = inttoptr i32 %117 to ptr
  %119 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %118) #34, !srcloc !18
  %120 = add i32 %119, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %121 = inttoptr i32 %120 to ptr
  %122 = load i16, ptr %121, align 2
  %123 = add i16 %122, -1
  store i16 %123, ptr %121, align 2
  tail call fastcc void @local_bh_enable()
  br label %128

124:                                              ; preds = %34, %9, %2
  %125 = phi ptr [ %0, %9 ], [ %35, %34 ], [ %0, %2 ]
  %126 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %126) #39, !srcloc !29
  %127 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %126, ptr %126, i32 1, ptr elementtype(i32) %126) #39, !srcloc !30
  tail call void @kfree_skb_list(ptr noundef %125) #39
  br label %128

128:                                              ; preds = %124, %116
  %129 = phi i32 [ 1, %124 ], [ %107, %116 ]
  ret i32 %129
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #14 {
  br label %1

1:                                                ; preds = %0
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %1) to i32), i32 noundef 512) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_list(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @rps_may_expire_flow(ptr nocapture noundef readonly %0, i16 noundef zeroext %1, i32 noundef %2, i16 noundef zeroext %3) #1 {
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 73
  %6 = load ptr, ptr %5, align 4
  %7 = zext i16 %1 to i32
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %8 = getelementptr %struct.netdev_rx_queue, ptr %6, i32 %7, i32 2
  %9 = load volatile ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %36, label %11

11:                                               ; preds = %4
  %12 = load i32, ptr %9, align 4
  %13 = icmp ult i32 %12, %2
  br i1 %13, label %36, label %14

14:                                               ; preds = %11
  %15 = getelementptr %struct.rps_dev_flow_table, ptr %9, i32 0, i32 2, i32 %2
  %16 = load volatile i16, ptr %15, align 4
  %17 = zext i16 %16 to i32
  %18 = getelementptr %struct.rps_dev_flow_table, ptr %9, i32 0, i32 2, i32 %2, i32 1
  %19 = load i16, ptr %18, align 2
  %20 = icmp eq i16 %19, %3
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %22 = icmp ugt i32 %21, %17
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %36

24:                                               ; preds = %14
  %25 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, ptrtoint (ptr @softnet_data to i32)
  %28 = inttoptr i32 %27 to ptr
  %29 = getelementptr inbounds %struct.softnet_data, ptr %28, i32 0, i32 12
  %30 = load i32, ptr %29, align 64
  %31 = getelementptr %struct.rps_dev_flow_table, ptr %9, i32 0, i32 2, i32 %2, i32 2
  %32 = load i32, ptr %31, align 4
  %33 = sub i32 %30, %32
  %34 = mul i32 %12, 10
  %35 = icmp sge i32 %33, %34
  br label %36

36:                                               ; preds = %24, %14, %11, %4
  %37 = phi i1 [ true, %14 ], [ true, %11 ], [ true, %4 ], [ %35, %24 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret i1 %37
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @bpf_prog_run_generic_xdp(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  %9 = load i16, ptr %8, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr i8, ptr %7, i32 %10
  %12 = ptrtoint ptr %5 to i32
  %13 = ptrtoint ptr %11 to i32
  %14 = sub i32 %12, %13
  %15 = sub i32 0, %14
  %16 = ptrtoint ptr %7 to i32
  %17 = sub i32 %16, %12
  %18 = getelementptr i8, ptr %5, i32 %17
  %19 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %20 = load ptr, ptr %19, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = ptrtoint ptr %18 to i32
  %23 = add i32 %21, 256
  %24 = sub i32 %23, %22
  %25 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 73
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 9
  %30 = load i16, ptr %29, align 4
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %3
  %33 = add i16 %30, -1
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 75
  %36 = load i32, ptr %35, align 4
  %37 = icmp ugt i32 %36, %34
  br i1 %37, label %44, label %38, !prof !22

38:                                               ; preds = %32
  %39 = icmp ugt i32 %36, 1
  %40 = load i1, ptr @netif_get_rxqueue.__already_done, align 1
  %41 = xor i1 %40, true
  %42 = select i1 %39, i1 %41, i1 false
  br i1 %42, label %43, label %46, !prof !15

43:                                               ; preds = %38
  store i1 true, ptr @netif_get_rxqueue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4579, i32 noundef 9, ptr noundef nonnull @.str.90, ptr noundef %26, i32 noundef %34, i32 noundef %36) #39
  br label %46

44:                                               ; preds = %32
  %45 = getelementptr %struct.netdev_rx_queue, ptr %28, i32 %34
  br label %46

46:                                               ; preds = %44, %43, %38, %3
  %47 = phi ptr [ %45, %44 ], [ %28, %3 ], [ %28, %38 ], [ %28, %43 ]
  %48 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 6
  store i32 %24, ptr %48, align 4
  %49 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 4
  store ptr %47, ptr %49, align 4
  %50 = load ptr, ptr %4, align 4
  %51 = load ptr, ptr %6, align 8
  %52 = ptrtoint ptr %50 to i32
  %53 = ptrtoint ptr %51 to i32
  %54 = add i32 %14, %53
  %55 = sub i32 %52, %54
  %56 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %57 = load i32, ptr %56, align 8
  %58 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %59 = load i32, ptr %58, align 4
  %60 = add i32 %57, %14
  %61 = sub i32 %60, %59
  %62 = getelementptr i8, ptr %18, i32 %55
  %63 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 3
  store ptr %18, ptr %63, align 4
  store ptr %62, ptr %1, align 4
  %64 = getelementptr i8, ptr %62, i32 %61
  %65 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 1
  store ptr %64, ptr %65, align 4
  %66 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 2
  store ptr %62, ptr %66, align 4
  %67 = load ptr, ptr %25, align 8
  %68 = getelementptr inbounds %struct.net_device, ptr %67, i32 0, i32 72
  %69 = load ptr, ptr %68, align 32
  %70 = load i32, ptr %62, align 4
  %71 = load i32, ptr %69, align 4
  %72 = xor i32 %71, %70
  %73 = getelementptr i8, ptr %62, i32 4
  %74 = load i16, ptr %73, align 2
  %75 = getelementptr i8, ptr %69, i32 4
  %76 = load i16, ptr %75, align 2
  %77 = xor i16 %76, %74
  %78 = zext i16 %77 to i32
  %79 = or i32 %72, %78
  %80 = icmp eq i32 %79, 0
  %81 = and i32 %70, 1
  %82 = icmp ne i32 %81, 0
  %83 = getelementptr inbounds %struct.ethhdr, ptr %62, i32 0, i32 2
  %84 = load i16, ptr %83, align 1
  %85 = load volatile i32, ptr @bpf_stats_enabled_key, align 4
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %87, label %115, !prof !15

87:                                               ; preds = %46
  %88 = tail call i64 @sched_clock() #39
  %89 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 1
  %90 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 0, i32 9
  %91 = load ptr, ptr %90, align 4
  %92 = tail call i32 %91(ptr noundef %1, ptr noundef %89) #39
  %93 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 0, i32 7
  %94 = load ptr, ptr %93, align 4
  %95 = ptrtoint ptr %94 to i32
  %96 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %97 = inttoptr i32 %96 to ptr
  %98 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %97) #34, !srcloc !18
  %99 = add i32 %98, %95
  %100 = inttoptr i32 %99 to ptr
  %101 = getelementptr inbounds %struct.bpf_prog_stats, ptr %100, i32 0, i32 3
  %102 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %103 = load i32, ptr %101, align 4
  %104 = add i32 %103, 1
  store i32 %104, ptr %101, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #39, !srcloc !68
  %105 = load i64, ptr %100, align 8
  %106 = add i64 %105, 1
  store i64 %106, ptr %100, align 8
  %107 = getelementptr inbounds %struct.bpf_prog_stats, ptr %100, i32 0, i32 1
  %108 = tail call i64 @sched_clock() #39
  %109 = sub i64 %108, %88
  %110 = and i64 %109, 4294967295
  %111 = load i64, ptr %107, align 8
  %112 = add i64 %110, %111
  store i64 %112, ptr %107, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #39, !srcloc !69
  %113 = load i32, ptr %101, align 4
  %114 = add i32 %113, 1
  store i32 %114, ptr %101, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %102) #39, !srcloc !19
  br label %120

115:                                              ; preds = %46
  %116 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 1
  %117 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 0, i32 9
  %118 = load ptr, ptr %117, align 4
  %119 = tail call i32 %118(ptr noundef %1, ptr noundef %116) #39
  br label %120

120:                                              ; preds = %115, %87
  %121 = phi i32 [ %92, %87 ], [ %119, %115 ]
  %122 = load volatile i32, ptr @bpf_master_redirect_enabled_key, align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %140, !prof !15

124:                                              ; preds = %120
  %125 = icmp eq i32 %121, 3
  br i1 %125, label %126, label %140

126:                                              ; preds = %124
  %127 = load ptr, ptr %49, align 4
  %128 = load ptr, ptr %127, align 64
  %129 = getelementptr inbounds %struct.net_device, ptr %128, i32 0, i32 14
  %130 = load i32, ptr %129, align 8
  %131 = and i32 %130, 2048
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %140, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %struct.net_device, ptr %128, i32 0, i32 15
  %135 = load i64, ptr %134, align 16
  %136 = and i64 %135, 4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %133
  %139 = tail call i32 @xdp_master_redirect(ptr noundef %1) #39
  br label %140

140:                                              ; preds = %138, %133, %126, %124, %120
  %141 = phi i32 [ %139, %138 ], [ 3, %133 ], [ %121, %124 ], [ %121, %120 ], [ 3, %126 ]
  %142 = load ptr, ptr %1, align 4
  %143 = ptrtoint ptr %142 to i32
  %144 = ptrtoint ptr %62 to i32
  %145 = sub i32 %143, %144
  %146 = icmp eq ptr %142, %62
  br i1 %146, label %174, label %147

147:                                              ; preds = %140
  %148 = icmp sgt i32 %145, 0
  br i1 %148, label %149, label %158

149:                                              ; preds = %147
  %150 = load i32, ptr %56, align 8
  %151 = sub i32 %150, %145
  store i32 %151, ptr %56, align 8
  %152 = load i32, ptr %58, align 4
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %154, label %155, !prof !15

154:                                              ; preds = %149
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #39, !srcloc !53
  unreachable

155:                                              ; preds = %149
  %156 = load ptr, ptr %4, align 4
  %157 = getelementptr i8, ptr %156, i32 %145
  store ptr %157, ptr %4, align 4
  br label %163

158:                                              ; preds = %147
  %159 = load ptr, ptr %4, align 4
  %160 = getelementptr i8, ptr %159, i32 %145
  store ptr %160, ptr %4, align 4
  %161 = load i32, ptr %56, align 8
  %162 = sub i32 %161, %145
  store i32 %162, ptr %56, align 8
  br label %163

163:                                              ; preds = %158, %155
  %164 = phi ptr [ %160, %158 ], [ %157, %155 ]
  %165 = load i16, ptr %8, align 2
  %166 = trunc i32 %145 to i16
  %167 = add i16 %165, %166
  store i16 %167, ptr %8, align 2
  %168 = load ptr, ptr %6, align 8
  %169 = ptrtoint ptr %164 to i32
  %170 = ptrtoint ptr %168 to i32
  %171 = sub i32 %169, %170
  %172 = trunc i32 %171 to i16
  %173 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  store i16 %172, ptr %173, align 4
  br label %174

174:                                              ; preds = %163, %140
  %175 = load ptr, ptr %65, align 4
  %176 = icmp eq ptr %175, %64
  br i1 %176, label %189, label %177

177:                                              ; preds = %174
  %178 = ptrtoint ptr %64 to i32
  %179 = ptrtoint ptr %175 to i32
  %180 = sub i32 %179, %178
  %181 = load ptr, ptr %1, align 4
  %182 = ptrtoint ptr %181 to i32
  %183 = sub i32 %179, %182
  %184 = load ptr, ptr %4, align 4
  %185 = getelementptr i8, ptr %184, i32 %183
  %186 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  store ptr %185, ptr %186, align 8
  %187 = load i32, ptr %56, align 8
  %188 = add i32 %180, %187
  store i32 %188, ptr %56, align 8
  br label %189

189:                                              ; preds = %177, %174
  %190 = load ptr, ptr %1, align 4
  %191 = getelementptr inbounds %struct.ethhdr, ptr %190, i32 0, i32 2
  %192 = load i16, ptr %191, align 1
  %193 = icmp eq i16 %84, %192
  %194 = load ptr, ptr %25, align 8
  br i1 %193, label %195, label %214

195:                                              ; preds = %189
  %196 = getelementptr inbounds %struct.net_device, ptr %194, i32 0, i32 72
  %197 = load ptr, ptr %196, align 32
  %198 = load i32, ptr %190, align 4
  %199 = load i32, ptr %197, align 4
  %200 = xor i32 %199, %198
  %201 = getelementptr i8, ptr %190, i32 4
  %202 = load i16, ptr %201, align 2
  %203 = getelementptr i8, ptr %197, i32 4
  %204 = load i16, ptr %203, align 2
  %205 = xor i16 %204, %202
  %206 = zext i16 %205 to i32
  %207 = or i32 %200, %206
  %208 = icmp eq i32 %207, 0
  %209 = xor i1 %80, %208
  br i1 %209, label %214, label %210

210:                                              ; preds = %195
  %211 = and i32 %198, 1
  %212 = icmp ne i32 %211, 0
  %213 = xor i1 %82, %212
  br i1 %213, label %214, label %224

214:                                              ; preds = %210, %195, %189
  %215 = load ptr, ptr %4, align 4
  %216 = getelementptr i8, ptr %215, i32 -14
  store ptr %216, ptr %4, align 4
  %217 = load i32, ptr %56, align 8
  %218 = add i32 %217, 14
  store i32 %218, ptr %56, align 8
  %219 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %220 = load i16, ptr %219, align 8
  %221 = and i16 %220, -8
  store i16 %221, ptr %219, align 8
  %222 = tail call zeroext i16 @eth_type_trans(ptr noundef %0, ptr noundef %194) #39
  %223 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 16
  store i16 %222, ptr %223, align 8
  br label %224

224:                                              ; preds = %214, %210
  switch i32 %141, label %241 [
    i32 4, label %225
    i32 3, label %225
    i32 2, label %230
  ]

225:                                              ; preds = %224, %224
  %226 = load ptr, ptr %4, align 4
  %227 = getelementptr i8, ptr %226, i32 %15
  store ptr %227, ptr %4, align 4
  %228 = load i32, ptr %56, align 8
  %229 = add i32 %228, %14
  store i32 %229, ptr %56, align 8
  br label %241

230:                                              ; preds = %224
  %231 = load ptr, ptr %1, align 4
  %232 = load ptr, ptr %66, align 4
  %233 = icmp eq ptr %231, %232
  br i1 %233, label %241, label %234

234:                                              ; preds = %230
  %235 = ptrtoint ptr %232 to i32
  %236 = ptrtoint ptr %231 to i32
  %237 = sub i32 %236, %235
  %238 = trunc i32 %237 to i8
  %239 = load ptr, ptr %19, align 4
  %240 = getelementptr inbounds %struct.skb_shared_info, ptr %239, i32 0, i32 1
  store i8 %238, ptr %240, align 1
  br label %241

241:                                              ; preds = %234, %230, %225, %224
  ret i32 %141
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @generic_xdp_tx(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = tail call ptr @netdev_core_pick_tx(ptr noundef %4, ptr noundef %0, ptr noundef null)
  %6 = tail call ptr @llvm.thread.pointer() #39
  %7 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %8 = load i64, ptr %7, align 16
  %9 = and i64 %8, 4096
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %13 = load i32, ptr %12, align 8
  %14 = getelementptr inbounds %struct.netdev_queue, ptr %5, i32 0, i32 9
  tail call void @_raw_spin_lock(ptr noundef %14) #39
  %15 = getelementptr inbounds %struct.netdev_queue, ptr %5, i32 0, i32 10
  store volatile i32 %13, ptr %15, align 4
  br label %16

16:                                               ; preds = %11, %2
  %17 = getelementptr inbounds %struct.netdev_queue, ptr %5, i32 0, i32 12
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, 3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 16
  %23 = load ptr, ptr %22, align 8
  %24 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %25 = inttoptr i32 %24 to ptr
  %26 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %25) #34, !srcloc !18
  %27 = add i32 %26, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10, i32 1) to i32)
  %28 = inttoptr i32 %27 to ptr
  store i8 0, ptr %28, align 1
  %29 = getelementptr inbounds %struct.net_device_ops, ptr %23, i32 0, i32 4
  %30 = load ptr, ptr %29, align 4
  %31 = tail call i32 %30(ptr noundef %0, ptr noundef %4) #39
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.netdev_queue, ptr %5, i32 0, i32 10
  %35 = load i32, ptr %34, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = load volatile i32, ptr @jiffies, align 64
  %39 = getelementptr inbounds %struct.netdev_queue, ptr %5, i32 0, i32 11
  store volatile i32 %38, ptr %39, align 8
  br label %40

40:                                               ; preds = %37, %33, %21
  %41 = icmp sgt i32 %31, 14
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi i1 [ true, %16 ], [ %41, %40 ]
  %44 = load i64, ptr %7, align 16
  %45 = and i64 %44, 4096
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.netdev_queue, ptr %5, i32 0, i32 10
  store volatile i32 -1, ptr %48, align 4
  %49 = getelementptr inbounds %struct.netdev_queue, ptr %5, i32 0, i32 9
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %50 = load i16, ptr %49, align 4
  %51 = add i16 %50, 1
  store i16 %51, ptr %49, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %52

52:                                               ; preds = %47, %42
  br i1 %43, label %53, label %69

53:                                               ; preds = %52
  %54 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 1), align 4
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %58 = load i32, ptr %57, align 8
  %59 = lshr i32 %58, 5
  %60 = getelementptr i32, ptr @__cpu_online_mask, i32 %59
  %61 = load volatile i32, ptr %60, align 4
  %62 = and i32 %58, 31
  %63 = shl nuw i32 1, %62
  %64 = and i32 %63, %61
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !72
  %67 = tail call i32 @__traceiter_xdp_exception(ptr noundef null, ptr noundef %4, ptr noundef %1, i32 noundef 3) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !73
  br label %68

68:                                               ; preds = %66, %56, %53
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #39
  br label %69

69:                                               ; preds = %68, %52
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @do_xdp_generic(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.xdp_buff, align 4
  %4 = icmp eq ptr %0, null
  br i1 %4, label %108, label %5

5:                                                ; preds = %2
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %3) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(28) %3, i8 0, i32 28, i1 false), !annotation !21
  %6 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 3
  %7 = load i16, ptr %6, align 2
  %8 = and i16 %7, 8192
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %106

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 11
  %12 = load i8, ptr %11, align 2
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.skb_shared_info, ptr %17, i32 0, i32 10
  %19 = load volatile i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 6
  %24 = load i32, ptr %23, align 4
  br label %38

25:                                               ; preds = %15, %10
  %26 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 6
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %38

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 16
  %33 = load ptr, ptr %32, align 8
  %34 = ptrtoint ptr %31 to i32
  %35 = ptrtoint ptr %33 to i32
  %36 = sub i32 %34, %35
  %37 = icmp ult i32 %36, 256
  br i1 %37, label %38, label %72

38:                                               ; preds = %29, %25, %22
  %39 = phi i32 [ %24, %22 ], [ 0, %29 ], [ %27, %25 ]
  %40 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 16
  %43 = load ptr, ptr %42, align 8
  %44 = ptrtoint ptr %41 to i32
  %45 = ptrtoint ptr %43 to i32
  %46 = sub i32 %44, %45
  %47 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 14
  %48 = load ptr, ptr %47, align 8
  %49 = getelementptr i8, ptr %48, i32 %39
  %50 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 15
  %51 = load ptr, ptr %50, align 4
  %52 = ptrtoint ptr %49 to i32
  %53 = ptrtoint ptr %51 to i32
  %54 = sub i32 %52, %53
  %55 = add i32 %46, -257
  %56 = icmp slt i32 %55, -1
  %57 = sub i32 319, %46
  %58 = and i32 %57, -64
  %59 = select i1 %56, i32 %58, i32 0
  %60 = icmp sgt i32 %54, 0
  %61 = add i32 %54, 128
  %62 = select i1 %60, i32 %61, i32 0
  %63 = tail call i32 @pskb_expand_head(ptr noundef %1, i32 noundef %59, i32 noundef %62, i32 noundef 2592) #39
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %95

65:                                               ; preds = %38
  %66 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 6
  %67 = load i32, ptr %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = tail call ptr @__pskb_pull_tail(ptr noundef %1, i32 noundef %67) #39
  %71 = icmp eq ptr %70, null
  br i1 %71, label %95, label %72

72:                                               ; preds = %69, %65, %29
  %73 = call i32 @bpf_prog_run_generic_xdp(ptr noundef %1, ptr noundef nonnull %3, ptr noundef nonnull %0) #39
  switch i32 %73, label %74 [
    i32 4, label %97
    i32 3, label %97
    i32 2, label %97
    i32 0, label %77
    i32 1, label %95
  ]

74:                                               ; preds = %72
  %75 = getelementptr inbounds %struct.anon.76, ptr %1, i32 0, i32 2
  %76 = load ptr, ptr %75, align 8
  call void @bpf_warn_invalid_xdp_action(ptr noundef %76, ptr noundef nonnull %0, i32 noundef %73) #39
  br label %77

77:                                               ; preds = %74, %72
  %78 = getelementptr inbounds %struct.anon.76, ptr %1, i32 0, i32 2
  %79 = load ptr, ptr %78, align 8
  %80 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 1), align 4
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %95

82:                                               ; preds = %77
  %83 = tail call ptr @llvm.thread.pointer() #39
  %84 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 2
  %85 = load i32, ptr %84, align 8
  %86 = lshr i32 %85, 5
  %87 = getelementptr i32, ptr @__cpu_online_mask, i32 %86
  %88 = load volatile i32, ptr %87, align 4
  %89 = and i32 %85, 31
  %90 = shl nuw i32 1, %89
  %91 = and i32 %90, %88
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %82
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !72
  %94 = call i32 @__traceiter_xdp_exception(ptr noundef null, ptr noundef %79, ptr noundef nonnull %0, i32 noundef %73) #39
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !73
  br label %95

95:                                               ; preds = %93, %82, %77, %72, %69, %38
  %96 = phi i32 [ %73, %72 ], [ %73, %77 ], [ %73, %82 ], [ %73, %93 ], [ 1, %38 ], [ 1, %69 ]
  call void @kfree_skb_reason(ptr noundef %1, i32 noundef 0) #39
  br label %97

97:                                               ; preds = %95, %72, %72, %72
  %98 = phi i32 [ %96, %95 ], [ %73, %72 ], [ %73, %72 ], [ %73, %72 ]
  switch i32 %98, label %105 [
    i32 2, label %106
    i32 4, label %99
    i32 3, label %104
  ]

99:                                               ; preds = %97
  %100 = getelementptr inbounds %struct.anon.76, ptr %1, i32 0, i32 2
  %101 = load ptr, ptr %100, align 8
  %102 = call i32 @xdp_do_generic_redirect(ptr noundef %101, ptr noundef %1, ptr noundef nonnull %3, ptr noundef nonnull %0) #39
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %107

104:                                              ; preds = %97
  call void @generic_xdp_tx(ptr noundef %1, ptr noundef nonnull %0)
  br label %105

105:                                              ; preds = %104, %99, %97
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %3) #39
  br label %108

106:                                              ; preds = %97, %5
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %3) #39
  br label %108

107:                                              ; preds = %99
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %3) #39
  call void @kfree_skb_reason(ptr noundef %1, i32 noundef 0) #39
  br label %108

108:                                              ; preds = %107, %106, %105, %2
  %109 = phi i32 [ 1, %107 ], [ 1, %105 ], [ 2, %106 ], [ 2, %2 ]
  ret i32 %109
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_do_generic_redirect(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_rx(ptr noundef %0) #1 {
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_entry, i32 0, i32 1), align 4
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = tail call ptr @llvm.thread.pointer() #39
  %6 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %7 = load i32, ptr %6, align 8
  %8 = lshr i32 %7, 5
  %9 = getelementptr i32, ptr @__cpu_online_mask, i32 %8
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %7, 31
  %12 = shl nuw i32 1, %11
  %13 = and i32 %12, %10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !74
  %16 = tail call i32 @__traceiter_netif_rx_entry(ptr noundef null, ptr noundef %0) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !75
  br label %17

17:                                               ; preds = %15, %4, %1
  %18 = tail call fastcc i32 @netif_rx_internal(ptr noundef %0), !range !76
  %19 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_exit, i32 0, i32 1), align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %17
  %22 = tail call ptr @llvm.thread.pointer() #39
  %23 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %24 = load i32, ptr %23, align 8
  %25 = lshr i32 %24, 5
  %26 = getelementptr i32, ptr @__cpu_online_mask, i32 %25
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %24, 31
  %29 = shl nuw i32 1, %28
  %30 = and i32 %29, %27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %21
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !77
  %33 = tail call i32 @__traceiter_netif_rx_exit(ptr noundef null, i32 noundef %18) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !78
  br label %34

34:                                               ; preds = %32, %21, %17
  ret i32 %18
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_softirq() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_rx_any_context(ptr noundef %0) #1 {
  %2 = tail call ptr @llvm.thread.pointer() #39
  %3 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 15728640
  %6 = load volatile i32, ptr %3, align 4
  %7 = and i32 %6, 983040
  %8 = or i32 %7, %5
  %9 = load volatile i32, ptr %3, align 4
  %10 = and i32 %9, 65280
  %11 = or i32 %8, %10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  %14 = tail call i32 @netif_rx(ptr noundef %0)
  br label %17

15:                                               ; preds = %1
  %16 = tail call i32 @netif_rx_ni(ptr noundef %0)
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_is_rx_handler_busy(ptr noundef readonly %0) #1 {
  %2 = tail call i32 @rtnl_is_locked() #39
  %3 = icmp eq i32 %2, 0
  %4 = load i1, ptr @netdev_is_rx_handler_busy.__already_done, align 1
  %5 = xor i1 %4, true
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %8, !prof !15

7:                                                ; preds = %1
  store i1 true, ptr @netdev_is_rx_handler_busy.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5043, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 5043) #39
  br label %8

8:                                                ; preds = %7, %1
  %9 = icmp eq ptr %0, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 80
  %12 = load ptr, ptr %11, align 64
  %13 = icmp ne ptr %12, null
  br label %14

14:                                               ; preds = %10, %8
  %15 = phi i1 [ false, %8 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_rx_handler_register(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  %4 = tail call i32 @rtnl_is_locked() #39
  %5 = icmp eq i32 %4, 0
  %6 = load i1, ptr @netdev_is_rx_handler_busy.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !15

9:                                                ; preds = %3
  store i1 true, ptr @netdev_is_rx_handler_busy.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5043, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 5043) #39
  br label %10

10:                                               ; preds = %9, %3
  %11 = icmp eq ptr %0, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 80
  %14 = load ptr, ptr %13, align 64
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %12, %10
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 15
  %18 = load i64, ptr %17, align 16
  %19 = and i64 %18, 67108864
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !79
  %22 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 81
  store volatile ptr %2, ptr %22, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !80
  %23 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 80
  store volatile ptr %1, ptr %23, align 64
  br label %24

24:                                               ; preds = %21, %16, %12
  %25 = phi i32 [ 0, %21 ], [ -16, %12 ], [ -22, %16 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_rx_handler_unregister(ptr noundef %0) #1 {
  %2 = tail call i32 @rtnl_is_locked() #39
  %3 = icmp eq i32 %2, 0
  %4 = load i1, ptr @netdev_rx_handler_unregister.__already_done, align 1
  %5 = xor i1 %4, true
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %8, !prof !15

7:                                                ; preds = %1
  store i1 true, ptr @netdev_rx_handler_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5091, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 5091) #39
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 80
  store volatile ptr null, ptr %9, align 64
  %10 = tail call i32 @rtnl_is_locked() #39
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @synchronize_rcu_expedited() #39
  br label %14

13:                                               ; preds = %8
  tail call void @synchronize_rcu() #39
  br label %14

14:                                               ; preds = %13, %12
  %15 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 81
  store volatile ptr null, ptr %15, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_receive_skb_core(ptr noundef %0) #1 {
  %2 = alloca ptr, align 4
  %3 = alloca ptr, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2)
  store ptr %0, ptr %2, align 4
  %4 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %5 = load ptr, ptr %4, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store ptr null, ptr %3, align 4
  %6 = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %2, i1 noundef zeroext false, ptr noundef nonnull %3) #39
  %7 = load ptr, ptr %3, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.packet_type, ptr %7, i32 0, i32 4
  %11 = load ptr, ptr %10, align 4
  %12 = load ptr, ptr %2, align 4
  %13 = getelementptr inbounds %struct.anon.76, ptr %12, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = tail call i32 %11(ptr noundef %12, ptr noundef %14, ptr noundef nonnull %7, ptr noundef %5) #39
  br label %16

16:                                               ; preds = %9, %1
  %17 = phi i32 [ %15, %9 ], [ %6, %1 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2)
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  ret i32 %17
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_receive_skb_list_internal(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca %struct.list_head, align 8
  %3 = alloca %struct.list_head, align 8
  %4 = alloca %struct.rps_dev_flow, align 8
  %5 = alloca ptr, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store volatile ptr %3, ptr %3, align 8
  %6 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  store ptr %3, ptr %6, align 4
  %7 = load ptr, ptr %0, align 4
  %8 = icmp eq ptr %7, %0
  br i1 %8, label %31, label %9

9:                                                ; preds = %24, %1
  %10 = phi ptr [ %11, %24 ], [ %7, %1 ]
  %11 = load ptr, ptr %10, align 8
  %12 = load volatile i32, ptr @netstamp_needed_key, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %24, !prof !15

14:                                               ; preds = %9
  %15 = load i32, ptr @netdev_tstamp_prequeue, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 2
  %19 = load i64, ptr %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = call i64 @ktime_get_with_offset(i32 noundef 0) #39
  store i64 %22, ptr %18, align 8
  %23 = load ptr, ptr %10, align 4
  br label %24

24:                                               ; preds = %21, %17, %14, %9
  %25 = phi ptr [ %11, %14 ], [ %11, %17 ], [ %23, %21 ], [ %11, %9 ]
  %26 = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  store ptr %27, ptr %28, align 4
  store volatile ptr %25, ptr %27, align 4
  store ptr null, ptr %10, align 8
  %29 = load ptr, ptr %6, align 4
  store ptr %10, ptr %6, align 4
  store ptr %3, ptr %10, align 4
  store ptr %29, ptr %26, align 4
  store volatile ptr %10, ptr %29, align 4
  %30 = icmp eq ptr %11, %0
  br i1 %30, label %31, label %9

31:                                               ; preds = %24, %1
  %32 = load volatile ptr, ptr %3, align 8
  %33 = icmp eq ptr %32, %3
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = load ptr, ptr %0, align 4
  %36 = load ptr, ptr %6, align 4
  %37 = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  store ptr %0, ptr %37, align 4
  store ptr %32, ptr %0, align 4
  store ptr %35, ptr %36, align 4
  %38 = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  store ptr %36, ptr %38, align 4
  store volatile ptr %3, ptr %3, align 8
  store ptr %3, ptr %6, align 4
  br label %39

39:                                               ; preds = %34, %31
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %40 = load volatile i32, ptr @rps_needed, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %62, !prof !15

42:                                               ; preds = %39
  %43 = load ptr, ptr %0, align 4
  %44 = icmp eq ptr %43, %0
  br i1 %44, label %62, label %45

45:                                               ; preds = %60, %42
  %46 = phi ptr [ %47, %60 ], [ %43, %42 ]
  %47 = load ptr, ptr %46, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store i64 0, ptr %4, align 8, !annotation !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #39
  store ptr %4, ptr %5, align 4
  %48 = getelementptr inbounds %struct.anon.76, ptr %46, i32 0, i32 2
  %49 = load ptr, ptr %48, align 8
  %50 = call fastcc i32 @get_rps_cpu(ptr noundef %49, ptr noundef %46, ptr noundef nonnull %5)
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %52, label %60

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.list_head, ptr %46, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = load ptr, ptr %46, align 4
  %56 = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  store ptr %54, ptr %56, align 4
  store volatile ptr %55, ptr %54, align 4
  store ptr null, ptr %46, align 8
  %57 = load ptr, ptr %5, align 4
  %58 = getelementptr inbounds %struct.rps_dev_flow, ptr %57, i32 0, i32 2
  %59 = call fastcc i32 @enqueue_to_backlog(ptr noundef %46, i32 noundef %50, ptr noundef %58)
  br label %60

60:                                               ; preds = %52, %45
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  %61 = icmp eq ptr %47, %0
  br i1 %61, label %62, label %45

62:                                               ; preds = %60, %42, %39
  %63 = load ptr, ptr %0, align 4
  %64 = icmp eq ptr %63, %0
  br i1 %64, label %108, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  br label %67

67:                                               ; preds = %104, %65
  %68 = phi i32 [ 0, %65 ], [ %106, %104 ]
  %69 = phi ptr [ %63, %65 ], [ %71, %104 ]
  %70 = phi i1 [ false, %65 ], [ %105, %104 ]
  %71 = load ptr, ptr %69, align 8
  %72 = load volatile i32, ptr @memalloc_socks_key, align 4
  %73 = icmp slt i32 %72, 1
  br i1 %73, label %74, label %75

74:                                               ; preds = %67
  br i1 %70, label %81, label %104

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.sk_buff, ptr %69, i32 0, i32 11
  %77 = load i8, ptr %76, align 2
  %78 = and i8 %77, 64
  %79 = icmp ne i8 %78, 0
  %80 = xor i1 %70, %79
  br i1 %80, label %81, label %104

81:                                               ; preds = %75, %74
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store i64 0, ptr %2, align 8, !annotation !21
  %82 = load ptr, ptr %0, align 4
  %83 = icmp eq ptr %82, %69
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  store volatile ptr %2, ptr %2, align 8
  store ptr %2, ptr %66, align 4
  br label %89

85:                                               ; preds = %81
  store ptr %82, ptr %2, align 8
  %86 = getelementptr inbounds %struct.list_head, ptr %82, i32 0, i32 1
  store ptr %2, ptr %86, align 4
  %87 = getelementptr inbounds %struct.list_head, ptr %69, i32 0, i32 1
  %88 = load ptr, ptr %87, align 4
  store ptr %88, ptr %66, align 4
  store ptr %2, ptr %88, align 4
  store ptr %69, ptr %0, align 4
  store ptr %0, ptr %87, align 4
  br label %89

89:                                               ; preds = %85, %84
  %90 = load volatile ptr, ptr %2, align 8
  %91 = icmp eq ptr %90, %2
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  call fastcc void @__netif_receive_skb_list_core(ptr noundef nonnull %2, i1 noundef zeroext %70) #39
  br label %93

93:                                               ; preds = %92, %89
  %94 = xor i1 %70, true
  %95 = tail call ptr @llvm.thread.pointer() #39
  %96 = getelementptr inbounds %struct.task_struct, ptr %95, i32 0, i32 4
  %97 = load i32, ptr %96, align 4
  %98 = and i32 %97, -2049
  %99 = or i32 %98, %68
  %100 = and i32 %97, 2048
  %101 = or i32 %97, 2048
  %102 = select i1 %70, i32 %99, i32 %101
  %103 = select i1 %70, i32 %68, i32 %100
  store i32 %102, ptr %96, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  br label %104

104:                                              ; preds = %93, %75, %74
  %105 = phi i1 [ %94, %93 ], [ %70, %75 ], [ false, %74 ]
  %106 = phi i32 [ %103, %93 ], [ %68, %75 ], [ %68, %74 ]
  %107 = icmp eq ptr %71, %0
  br i1 %107, label %108, label %67

108:                                              ; preds = %104, %62
  %109 = phi i1 [ false, %62 ], [ %105, %104 ]
  %110 = phi i32 [ 0, %62 ], [ %106, %104 ]
  %111 = load volatile ptr, ptr %0, align 4
  %112 = icmp eq ptr %111, %0
  br i1 %112, label %114, label %113

113:                                              ; preds = %108
  call fastcc void @__netif_receive_skb_list_core(ptr noundef %0, i1 noundef zeroext %109) #39
  br label %114

114:                                              ; preds = %113, %108
  br i1 %109, label %115, label %121

115:                                              ; preds = %114
  %116 = tail call ptr @llvm.thread.pointer() #39
  %117 = getelementptr inbounds %struct.task_struct, ptr %116, i32 0, i32 4
  %118 = load i32, ptr %117, align 4
  %119 = and i32 %118, -2049
  %120 = or i32 %119, %110
  store i32 %120, ptr %117, align 4
  br label %121

121:                                              ; preds = %115, %114
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @get_rps_cpu(ptr noundef %0, ptr noundef %1, ptr nocapture noundef writeonly %2) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 73
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 9
  %7 = load i16, ptr %6, align 4
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = add i16 %7, -1
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 75
  %13 = load i32, ptr %12, align 4
  %14 = icmp ugt i32 %13, %11
  br i1 %14, label %21, label %15, !prof !22

15:                                               ; preds = %9
  %16 = icmp ugt i32 %13, 1
  %17 = load i1, ptr @get_rps_cpu.__already_done, align 1
  %18 = xor i1 %17, true
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %20, label %131, !prof !15

20:                                               ; preds = %15
  store i1 true, ptr @get_rps_cpu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4326, i32 noundef 9, ptr noundef nonnull @.str.90, ptr noundef %0, i32 noundef %11, i32 noundef %13) #39
  br label %131

21:                                               ; preds = %9
  %22 = getelementptr %struct.netdev_rx_queue, ptr %5, i32 %11
  br label %23

23:                                               ; preds = %21, %3
  %24 = phi ptr [ %22, %21 ], [ %5, %3 ]
  %25 = getelementptr inbounds %struct.netdev_rx_queue, ptr %24, i32 0, i32 2
  %26 = load volatile ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.netdev_rx_queue, ptr %24, i32 0, i32 1
  %28 = load volatile ptr, ptr %27, align 64
  %29 = icmp ne ptr %26, null
  %30 = icmp ne ptr %28, null
  %31 = select i1 %29, i1 true, i1 %30
  br i1 %31, label %32, label %131

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 16
  %36 = load ptr, ptr %35, align 8
  %37 = ptrtoint ptr %34 to i32
  %38 = ptrtoint ptr %36 to i32
  %39 = sub i32 %37, %38
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 18
  store i16 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13
  %43 = load i16, ptr %42, align 8
  %44 = and i16 %43, 768
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %32
  tail call void @__skb_get_hash(ptr noundef %1) #39
  br label %47

47:                                               ; preds = %46, %32
  %48 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 7
  %49 = load i32, ptr %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %131, label %51

51:                                               ; preds = %47
  %52 = load volatile ptr, ptr @rps_sock_flow_table, align 4
  %53 = icmp ne ptr %52, null
  %54 = select i1 %29, i1 %53, i1 false
  br i1 %54, label %55, label %112

55:                                               ; preds = %51
  %56 = load i32, ptr %52, align 64
  %57 = and i32 %56, %49
  %58 = getelementptr %struct.rps_sock_flow_table, ptr %52, i32 0, i32 2, i32 %57
  %59 = load i32, ptr %58, align 4
  %60 = xor i32 %59, %49
  %61 = load i32, ptr @rps_cpu_mask, align 4
  %62 = xor i32 %61, -1
  %63 = and i32 %60, %62
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %112

65:                                               ; preds = %55
  %66 = and i32 %61, %59
  %67 = load i32, ptr %26, align 4
  %68 = and i32 %67, %49
  %69 = getelementptr %struct.rps_dev_flow_table, ptr %26, i32 0, i32 2, i32 %68
  %70 = load i16, ptr %69, align 4
  %71 = zext i16 %70 to i32
  %72 = icmp eq i32 %66, %71
  br i1 %72, label %98, label %73, !prof !22

73:                                               ; preds = %65
  %74 = load i32, ptr @nr_cpu_ids, align 4
  %75 = icmp ugt i32 %74, %71
  br i1 %75, label %76, label %95

76:                                               ; preds = %73
  %77 = lshr i32 %71, 5
  %78 = getelementptr i32, ptr @__cpu_online_mask, i32 %77
  %79 = load volatile i32, ptr %78, align 4
  %80 = and i32 %71, 31
  %81 = shl nuw i32 1, %80
  %82 = and i32 %79, %81
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %76
  %85 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %71
  %86 = load i32, ptr %85, align 4
  %87 = add i32 %86, ptrtoint (ptr @softnet_data to i32)
  %88 = inttoptr i32 %87 to ptr
  %89 = getelementptr inbounds %struct.softnet_data, ptr %88, i32 0, i32 12
  %90 = load i32, ptr %89, align 64
  %91 = getelementptr %struct.rps_dev_flow_table, ptr %26, i32 0, i32 2, i32 %68, i32 2
  %92 = load i32, ptr %91, align 4
  %93 = sub i32 %90, %92
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %98

95:                                               ; preds = %84, %76, %73
  %96 = trunc i32 %66 to i16
  %97 = tail call fastcc ptr @set_rps_cpu(ptr noundef %0, ptr noundef %1, ptr noundef %69, i16 noundef zeroext %96)
  br label %98

98:                                               ; preds = %95, %84, %65
  %99 = phi i32 [ %66, %95 ], [ %71, %84 ], [ %66, %65 ]
  %100 = phi ptr [ %97, %95 ], [ %69, %84 ], [ %69, %65 ]
  %101 = load i32, ptr @nr_cpu_ids, align 4
  %102 = icmp ult i32 %99, %101
  br i1 %102, label %103, label %112

103:                                              ; preds = %98
  %104 = lshr i32 %99, 5
  %105 = getelementptr i32, ptr @__cpu_online_mask, i32 %104
  %106 = load volatile i32, ptr %105, align 4
  %107 = and i32 %99, 31
  %108 = shl nuw i32 1, %107
  %109 = and i32 %106, %108
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %103
  store ptr %100, ptr %2, align 4
  br label %131

112:                                              ; preds = %103, %98, %55, %51
  br i1 %30, label %113, label %131

113:                                              ; preds = %112
  %114 = load i32, ptr %28, align 4
  %115 = zext i32 %49 to i64
  %116 = zext i32 %114 to i64
  %117 = mul nuw i64 %116, %115
  %118 = lshr i64 %117, 32
  %119 = trunc i64 %118 to i32
  %120 = getelementptr %struct.rps_map, ptr %28, i32 0, i32 2, i32 %119
  %121 = load i16, ptr %120, align 2
  %122 = zext i16 %121 to i32
  %123 = lshr i32 %122, 5
  %124 = getelementptr i32, ptr @__cpu_online_mask, i32 %123
  %125 = load volatile i32, ptr %124, align 4
  %126 = and i32 %122, 31
  %127 = shl nuw i32 1, %126
  %128 = and i32 %127, %125
  %129 = icmp eq i32 %128, 0
  %130 = select i1 %129, i32 -1, i32 %122
  br label %131

131:                                              ; preds = %113, %112, %111, %47, %23, %20, %15
  %132 = phi i32 [ %99, %111 ], [ -1, %112 ], [ -1, %47 ], [ -1, %23 ], [ %130, %113 ], [ -1, %20 ], [ -1, %15 ]
  ret i32 %132
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @enqueue_to_backlog(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2) unnamed_addr #1 {
  %4 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %1
  %5 = load i32, ptr %4, align 4
  %6 = add i32 %5, ptrtoint (ptr @softnet_data to i32)
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %9 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 19, i32 2
  tail call void @_raw_spin_lock(ptr noundef %9) #39
  %10 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 6
  %13 = load volatile i32, ptr %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %102, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 19
  %18 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 19, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = load i32, ptr @netdev_max_backlog, align 4
  %21 = icmp ugt i32 %19, %20
  br i1 %21, label %102, label %22

22:                                               ; preds = %16
  %23 = ashr i32 %20, 1
  %24 = icmp ugt i32 %23, %19
  br i1 %24, label %70, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #34, !srcloc !18
  %29 = add i32 %28, ptrtoint (ptr @softnet_data to i32)
  %30 = inttoptr i32 %29 to ptr
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %31 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 6
  %32 = load volatile ptr, ptr %31, align 8
  %33 = icmp eq ptr %32, null
  br i1 %33, label %66, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %36 = load i16, ptr %35, align 8
  %37 = and i16 %36, 768
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  tail call void @__skb_get_hash(ptr noundef %0) #39
  br label %40

40:                                               ; preds = %39, %34
  %41 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 7
  %42 = load i32, ptr %41, align 8
  %43 = getelementptr inbounds %struct.sd_flow_limit, ptr %32, i32 0, i32 1
  %44 = load i32, ptr %43, align 8
  %45 = add i32 %44, -1
  %46 = and i32 %45, %42
  %47 = getelementptr inbounds %struct.sd_flow_limit, ptr %32, i32 0, i32 2
  %48 = load i32, ptr %47, align 4
  %49 = getelementptr %struct.sd_flow_limit, ptr %32, i32 0, i32 3, i32 %48
  %50 = load i16, ptr %49, align 2
  %51 = zext i16 %50 to i32
  %52 = trunc i32 %46 to i16
  store i16 %52, ptr %49, align 2
  %53 = load i32, ptr %47, align 4
  %54 = add i32 %53, 1
  %55 = and i32 %54, 127
  store i32 %55, ptr %47, align 4
  %56 = getelementptr %struct.sd_flow_limit, ptr %32, i32 0, i32 4, i32 %51
  %57 = load i8, ptr %56, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59, !prof !15

59:                                               ; preds = %40
  %60 = add i8 %57, -1
  store i8 %60, ptr %56, align 1
  br label %61

61:                                               ; preds = %59, %40
  %62 = getelementptr %struct.sd_flow_limit, ptr %32, i32 0, i32 4, i32 %46
  %63 = load i8, ptr %62, align 1
  %64 = add i8 %63, 1
  store i8 %64, ptr %62, align 1
  %65 = icmp ugt i8 %64, 64
  br i1 %65, label %67, label %66

66:                                               ; preds = %61, %25
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %70

67:                                               ; preds = %61
  %68 = load i64, ptr %32, align 8
  %69 = add i64 %68, 1
  store i64 %69, ptr %32, align 8
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %102

70:                                               ; preds = %66, %22
  %71 = icmp eq i32 %19, 0
  br i1 %71, label %83, label %72

72:                                               ; preds = %101, %97, %83, %70
  %73 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 19, i32 0, i32 0, i32 1
  %74 = load ptr, ptr %73, align 4
  store volatile ptr %17, ptr %0, align 8
  %75 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 1
  store volatile ptr %74, ptr %75, align 4
  store volatile ptr %0, ptr %73, align 4
  store volatile ptr %0, ptr %74, align 4
  %76 = load i32, ptr %18, align 4
  %77 = add i32 %76, 1
  store volatile i32 %77, ptr %18, align 4
  %78 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 17
  %79 = load i32, ptr %78, align 8
  %80 = add i32 %79, 1
  store i32 %80, ptr %78, align 8
  store i32 %80, ptr %2, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %81 = load i16, ptr %9, align 4
  %82 = add i16 %81, 1
  store i16 %82, ptr %9, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #39, !srcloc !19
  br label %111

83:                                               ; preds = %70
  %84 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 20
  %85 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 20, i32 1
  %86 = load i32, ptr %85, align 4
  %87 = or i32 %86, 1
  store i32 %87, ptr %85, align 4
  %88 = and i32 %86, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %72

90:                                               ; preds = %83
  %91 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %92 = inttoptr i32 %91 to ptr
  %93 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %92) #34, !srcloc !18
  %94 = add i32 %93, ptrtoint (ptr @softnet_data to i32)
  %95 = inttoptr i32 %94 to ptr
  %96 = icmp eq ptr %95, %7
  br i1 %96, label %101, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %struct.softnet_data, ptr %95, i32 0, i32 5
  %99 = load ptr, ptr %98, align 4
  %100 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 15
  store ptr %99, ptr %100, align 16
  store ptr %7, ptr %98, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %72

101:                                              ; preds = %90
  tail call fastcc void @____napi_schedule(ptr noundef %7, ptr noundef %84)
  br label %72

102:                                              ; preds = %67, %16, %3
  %103 = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 18
  %104 = load i32, ptr %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, ptr %103, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %106 = load i16, ptr %9, align 4
  %107 = add i16 %106, 1
  store i16 %107, ptr %9, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #39, !srcloc !19
  %108 = load ptr, ptr %10, align 8
  %109 = getelementptr inbounds %struct.net_device, ptr %108, i32 0, i32 37
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %109) #39, !srcloc !29
  %110 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %109, ptr %109, i32 1, ptr elementtype(i32) %109) #39, !srcloc !30
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #39
  br label %111

111:                                              ; preds = %102, %72
  %112 = phi i32 [ 1, %102 ], [ 0, %72 ]
  ret i32 %112
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netif_receive_skb(ptr noundef %0) #1 {
  %2 = alloca %struct.rps_dev_flow, align 8
  %3 = alloca ptr, align 4
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_entry, i32 0, i32 1), align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = tail call ptr @llvm.thread.pointer() #39
  %8 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %9 = load i32, ptr %8, align 8
  %10 = lshr i32 %9, 5
  %11 = getelementptr i32, ptr @__cpu_online_mask, i32 %10
  %12 = load volatile i32, ptr %11, align 4
  %13 = and i32 %9, 31
  %14 = shl nuw i32 1, %13
  %15 = and i32 %14, %12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !81
  %18 = tail call i32 @__traceiter_netif_receive_skb_entry(ptr noundef null, ptr noundef %0) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !82
  br label %19

19:                                               ; preds = %17, %6, %1
  %20 = load volatile i32, ptr @netstamp_needed_key, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %31, !prof !15

22:                                               ; preds = %19
  %23 = load i32, ptr @netdev_tstamp_prequeue, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 2
  %27 = load i64, ptr %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #39
  store i64 %30, ptr %26, align 8
  br label %31

31:                                               ; preds = %29, %25, %22, %19
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %32 = load volatile i32, ptr @rps_needed, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %44, !prof !15

34:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store i64 0, ptr %2, align 8, !annotation !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store ptr %2, ptr %3, align 4
  %35 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %36 = load ptr, ptr %35, align 8
  %37 = call fastcc i32 @get_rps_cpu(ptr noundef %36, ptr noundef %0, ptr noundef nonnull %3) #39
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = load ptr, ptr %3, align 4
  %41 = getelementptr inbounds %struct.rps_dev_flow, ptr %40, i32 0, i32 2
  %42 = call fastcc i32 @enqueue_to_backlog(ptr noundef %0, i32 noundef %37, ptr noundef %41) #39
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  br label %46

43:                                               ; preds = %34
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  br label %44

44:                                               ; preds = %43, %31
  %45 = call fastcc i32 @__netif_receive_skb(ptr noundef %0) #39
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i32 [ %45, %44 ], [ %42, %39 ]
  %48 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_exit, i32 0, i32 1), align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %46
  %51 = tail call ptr @llvm.thread.pointer() #39
  %52 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 2
  %53 = load i32, ptr %52, align 8
  %54 = lshr i32 %53, 5
  %55 = getelementptr i32, ptr @__cpu_online_mask, i32 %54
  %56 = load volatile i32, ptr %55, align 4
  %57 = and i32 %53, 31
  %58 = shl nuw i32 1, %57
  %59 = and i32 %58, %56
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %50
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !83
  %62 = call i32 @__traceiter_netif_receive_skb_exit(ptr noundef null, i32 noundef %47) #39
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !84
  br label %63

63:                                               ; preds = %61, %50, %46
  ret i32 %47
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_receive_skb_list(ptr noundef %0) #1 {
  %2 = load volatile ptr, ptr %0, align 4
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %43, label %4

4:                                                ; preds = %1
  %5 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_entry, i32 0, i32 1), align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %27

7:                                                ; preds = %24, %4
  %8 = phi ptr [ %25, %24 ], [ %2, %4 ]
  %9 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_entry, i32 0, i32 1), align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = tail call ptr @llvm.thread.pointer() #39
  %13 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %14 = load i32, ptr %13, align 8
  %15 = lshr i32 %14, 5
  %16 = getelementptr i32, ptr @__cpu_online_mask, i32 %15
  %17 = load volatile i32, ptr %16, align 4
  %18 = and i32 %14, 31
  %19 = shl nuw i32 1, %18
  %20 = and i32 %19, %17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %11
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !85
  %23 = tail call i32 @__traceiter_netif_receive_skb_list_entry(ptr noundef null, ptr noundef %8) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !86
  br label %24

24:                                               ; preds = %22, %11, %7
  %25 = load ptr, ptr %8, align 4
  %26 = icmp eq ptr %25, %0
  br i1 %26, label %27, label %7

27:                                               ; preds = %24, %4
  tail call void @netif_receive_skb_list_internal(ptr noundef %0)
  %28 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_exit, i32 0, i32 1), align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %43

30:                                               ; preds = %27
  %31 = tail call ptr @llvm.thread.pointer() #39
  %32 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %33 = load i32, ptr %32, align 8
  %34 = lshr i32 %33, 5
  %35 = getelementptr i32, ptr @__cpu_online_mask, i32 %34
  %36 = load volatile i32, ptr %35, align 4
  %37 = and i32 %33, 31
  %38 = shl nuw i32 1, %37
  %39 = and i32 %38, %36
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %30
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !87
  %42 = tail call i32 @__traceiter_netif_receive_skb_list_exit(ptr noundef null, i32 noundef 0) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !88
  br label %43

43:                                               ; preds = %41, %30, %27, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__napi_schedule(ptr noundef %0) #1 {
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %3 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %4 = inttoptr i32 %3 to ptr
  %5 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %4) #34, !srcloc !18
  %6 = add i32 %5, ptrtoint (ptr @softnet_data to i32)
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  %9 = load volatile i32, ptr %8, align 4
  %10 = and i32 %9, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 15
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 1
  %18 = load volatile i32, ptr %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_set_bit(i32 noundef 9, ptr noundef %8) #39
  br label %21

21:                                               ; preds = %20, %16
  %22 = tail call i32 @wake_up_process(ptr noundef nonnull %14) #39
  br label %27

23:                                               ; preds = %12, %1
  %24 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %25 = load ptr, ptr %24, align 4
  store ptr %0, ptr %24, align 4
  store ptr %7, ptr %0, align 4
  %26 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  store ptr %25, ptr %26, align 4
  store volatile ptr %0, ptr %25, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %27

27:                                               ; preds = %23, %21
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %2) #39, !srcloc !19
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @____napi_schedule(ptr noundef %0, ptr noundef %1) unnamed_addr #14 {
  %3 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 1
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 15
  %9 = load volatile ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 1
  %13 = load volatile i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_set_bit(i32 noundef 9, ptr noundef %3) #39
  br label %16

16:                                               ; preds = %15, %11
  %17 = tail call i32 @wake_up_process(ptr noundef nonnull %9) #39
  br label %22

18:                                               ; preds = %7, %2
  %19 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  store ptr %1, ptr %19, align 4
  store ptr %0, ptr %1, align 4
  %21 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  store ptr %20, ptr %21, align 4
  store volatile ptr %1, ptr %20, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %22

22:                                               ; preds = %18, %16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @napi_schedule_prep(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  br label %3

3:                                                ; preds = %16, %1
  %4 = load volatile i32, ptr %2, align 8
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %21, !prof !22

7:                                                ; preds = %3
  %8 = and i32 %4, 1
  %9 = shl nuw nsw i32 %8, 1
  %10 = or i32 %4, %9
  %11 = or i32 %10, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !89
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #39, !srcloc !29
  br label %12

12:                                               ; preds = %12, %7
  %13 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %2, i32 %4, i32 %11) #39, !srcloc !90
  %14 = extractvalue { i32, i32 } %13, 0
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = extractvalue { i32, i32 } %13, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !91
  %18 = icmp eq i32 %17, %4
  br i1 %18, label %19, label %3

19:                                               ; preds = %16
  %20 = icmp eq i32 %8, 0
  br label %21

21:                                               ; preds = %19, %3
  %22 = phi i1 [ %20, %19 ], [ false, %3 ]
  ret i1 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__napi_schedule_irqoff(ptr noundef %0) #1 {
  %2 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %3 = inttoptr i32 %2 to ptr
  %4 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %3) #34, !srcloc !18
  %5 = add i32 %4, ptrtoint (ptr @softnet_data to i32)
  %6 = inttoptr i32 %5 to ptr
  %7 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  %8 = load volatile i32, ptr %7, align 4
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 15
  %13 = load volatile ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 1
  %17 = load volatile i32, ptr %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_set_bit(i32 noundef 9, ptr noundef %7) #39
  br label %20

20:                                               ; preds = %19, %15
  %21 = tail call i32 @wake_up_process(ptr noundef nonnull %13) #39
  br label %26

22:                                               ; preds = %11, %1
  %23 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  store ptr %0, ptr %23, align 4
  store ptr %6, ptr %0, align 4
  %25 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  store ptr %24, ptr %25, align 4
  store volatile ptr %0, ptr %24, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %26

26:                                               ; preds = %22, %20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @napi_complete_done(ptr noundef %0, i32 noundef %1) #1 {
  %3 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  %4 = load i32, ptr %3, align 8
  %5 = and i32 %4, 72
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %91, !prof !22

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 3
  %11 = load i32, ptr %10, align 8
  br label %26

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 6
  %17 = load ptr, ptr %16, align 4
  br i1 %15, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.net_device, ptr %17, i32 0, i32 77
  %20 = load volatile i32, ptr %19, align 4
  br label %21

21:                                               ; preds = %18, %12
  %22 = phi i32 [ %20, %18 ], [ 0, %12 ]
  %23 = getelementptr inbounds %struct.net_device, ptr %17, i32 0, i32 78
  %24 = load volatile i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 3
  store i32 %24, ptr %25, align 8
  br label %26

26:                                               ; preds = %21, %9
  %27 = phi i32 [ %24, %21 ], [ %11, %9 ]
  %28 = phi i32 [ %22, %21 ], [ 0, %9 ]
  %29 = icmp sgt i32 %27, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 3
  %32 = add nsw i32 %27, -1
  store i32 %32, ptr %31, align 8
  %33 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 6
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.net_device, ptr %34, i32 0, i32 77
  %36 = load volatile i32, ptr %35, align 4
  %37 = icmp eq i32 %36, 0
  br label %38

38:                                               ; preds = %30, %26
  %39 = phi i1 [ true, %26 ], [ %37, %30 ]
  %40 = phi i32 [ %28, %26 ], [ %36, %30 ]
  %41 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 4
  %42 = load i32, ptr %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = icmp ne i32 %40, 0
  tail call void @napi_gro_flush(ptr noundef %0, i1 noundef zeroext %45) #39
  br label %46

46:                                               ; preds = %44, %38
  %47 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 10
  %48 = load i32, ptr %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9
  tail call void @netif_receive_skb_list_internal(ptr noundef %51) #39
  store volatile ptr %51, ptr %51, align 4
  %52 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9, i32 1
  store ptr %51, ptr %52, align 4
  store i32 0, ptr %47, align 4
  br label %53

53:                                               ; preds = %50, %46
  %54 = load volatile ptr, ptr %0, align 4
  %55 = icmp eq ptr %54, %0
  br i1 %55, label %62, label %56, !prof !22

56:                                               ; preds = %53
  %57 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %58 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %59 = load ptr, ptr %58, align 4
  %60 = load ptr, ptr %0, align 4
  %61 = getelementptr inbounds %struct.list_head, ptr %60, i32 0, i32 1
  store ptr %59, ptr %61, align 4
  store volatile ptr %60, ptr %59, align 4
  store volatile ptr %0, ptr %0, align 4
  store ptr %0, ptr %58, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %57) #39, !srcloc !19
  br label %62

62:                                               ; preds = %56, %53
  br label %63

63:                                               ; preds = %80, %62
  %64 = load volatile i32, ptr %3, align 8
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = load i1, ptr @napi_complete_done.__already_done, align 1
  %68 = xor i1 %67, true
  %69 = select i1 %66, i1 %68, i1 false
  br i1 %69, label %70, label %71, !prof !15

70:                                               ; preds = %63
  store i1 true, ptr @napi_complete_done.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5944, i32 noundef 9, ptr noundef null) #39
  br label %71

71:                                               ; preds = %70, %63
  %72 = and i32 %64, -644
  %73 = and i32 %64, 2
  %74 = lshr exact i32 %73, 1
  %75 = or i32 %74, %72
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !92
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #39, !srcloc !29
  br label %76

76:                                               ; preds = %76, %71
  %77 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %3, i32 %64, i32 %75) #39, !srcloc !90
  %78 = extractvalue { i32, i32 } %77, 0
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %76

80:                                               ; preds = %76
  %81 = extractvalue { i32, i32 } %77, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !93
  %82 = icmp eq i32 %81, %64
  br i1 %82, label %83, label %63

83:                                               ; preds = %80
  %84 = icmp eq i32 %73, 0
  br i1 %84, label %86, label %85, !prof !22

85:                                               ; preds = %83
  tail call void @__napi_schedule(ptr noundef %0)
  br label %91

86:                                               ; preds = %83
  %87 = icmp eq i32 %40, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 11
  %90 = zext i32 %40 to i64
  tail call void @hrtimer_start_range_ns(ptr noundef %89, i64 noundef %90, i64 noundef 0, i32 noundef 3) #39
  br label %91

91:                                               ; preds = %88, %86, %85, %2
  %92 = phi i1 [ false, %85 ], [ false, %2 ], [ %39, %88 ], [ %39, %86 ]
  ret i1 %92
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_gro_flush(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @napi_busy_loop(i32 noundef %0, ptr noundef readonly %1, ptr noundef %2, i1 noundef zeroext %3, i16 noundef zeroext %4) #1 {
  %6 = icmp eq ptr %1, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = tail call i64 @sched_clock() #39
  %9 = lshr i64 %8, 10
  %10 = trunc i64 %9 to i32
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi i32 [ %10, %7 ], [ 0, %5 ]
  %13 = and i32 %0, 255
  %14 = getelementptr [256 x %struct.hlist_head], ptr @napi_hash, i32 0, i32 %13
  %15 = zext i16 %4 to i32
  br label %16

16:                                               ; preds = %111, %11
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %17 = load volatile ptr, ptr %14, align 4
  %18 = icmp eq ptr %17, null
  %19 = getelementptr i8, ptr %17, i32 -200
  %20 = icmp eq ptr %19, null
  %21 = or i1 %18, %20
  br i1 %21, label %119, label %22

22:                                               ; preds = %27, %16
  %23 = phi ptr [ %31, %27 ], [ %19, %16 ]
  %24 = getelementptr inbounds %struct.napi_struct, ptr %23, i32 0, i32 14
  %25 = load i32, ptr %24, align 8
  %26 = icmp eq i32 %25, %0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.napi_struct, ptr %23, i32 0, i32 13
  %29 = load volatile ptr, ptr %28, align 8
  %30 = icmp eq ptr %29, null
  %31 = getelementptr i8, ptr %29, i32 -200
  %32 = icmp eq ptr %31, null
  %33 = or i1 %30, %32
  br i1 %33, label %119, label %22

34:                                               ; preds = %22
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !94
  %35 = tail call ptr @llvm.thread.pointer() #39
  %36 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %37 = getelementptr inbounds %struct.napi_struct, ptr %23, i32 0, i32 1
  %38 = getelementptr inbounds %struct.napi_struct, ptr %23, i32 0, i32 5
  %39 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %40 = getelementptr inbounds %struct.napi_struct, ptr %23, i32 0, i32 10
  %41 = getelementptr inbounds %struct.napi_struct, ptr %23, i32 0, i32 9
  %42 = getelementptr inbounds %struct.napi_struct, ptr %23, i32 0, i32 9, i32 1
  br label %43

43:                                               ; preds = %114, %34
  %44 = phi ptr [ null, %34 ], [ %101, %114 ]
  %45 = load volatile i32, ptr %36, align 4
  %46 = add i32 %45, 512
  store volatile i32 %46, ptr %36, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  %47 = icmp eq ptr %44, null
  br i1 %47, label %48, label %67

48:                                               ; preds = %43
  %49 = load volatile i32, ptr %37, align 8
  %50 = and i32 %49, 69
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  br i1 %3, label %53, label %100

53:                                               ; preds = %52
  tail call void @_set_bit(i32 noundef 7, ptr noundef %37) #39
  br label %100

54:                                               ; preds = %48
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !95
  %55 = or i32 %49, 65
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %37) #39, !srcloc !29
  br label %56

56:                                               ; preds = %56, %54
  %57 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %37, i32 %49, i32 %55) #39, !srcloc !90
  %58 = extractvalue { i32, i32 } %57, 0
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %56

60:                                               ; preds = %56
  %61 = extractvalue { i32, i32 } %57, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !96
  %62 = icmp eq i32 %61, %49
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  br i1 %3, label %64, label %100

64:                                               ; preds = %63
  tail call void @_set_bit(i32 noundef 7, ptr noundef %37) #39
  br label %100

65:                                               ; preds = %60
  %66 = load ptr, ptr %38, align 8
  br label %67

67:                                               ; preds = %65, %43
  %68 = phi ptr [ %44, %43 ], [ %66, %65 ]
  %69 = tail call i32 %68(ptr noundef nonnull %23, i32 noundef %15) #39
  %70 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_napi_poll, i32 0, i32 1), align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %83

72:                                               ; preds = %67
  %73 = load i32, ptr %39, align 8
  %74 = lshr i32 %73, 5
  %75 = getelementptr i32, ptr @__cpu_online_mask, i32 %74
  %76 = load volatile i32, ptr %75, align 4
  %77 = and i32 %73, 31
  %78 = shl nuw i32 1, %77
  %79 = and i32 %78, %76
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %72
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !97
  %82 = tail call i32 @__traceiter_napi_poll(ptr noundef null, ptr noundef %23, i32 noundef %69, i32 noundef %15) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !98
  br label %83

83:                                               ; preds = %81, %72, %67
  %84 = load i32, ptr %40, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %83
  tail call void @netif_receive_skb_list_internal(ptr noundef %41) #39
  store volatile ptr %41, ptr %41, align 4
  store ptr %41, ptr %42, align 4
  store i32 0, ptr %40, align 4
  br label %87

87:                                               ; preds = %86, %83
  %88 = icmp sgt i32 %69, 0
  br i1 %88, label %89, label %100

89:                                               ; preds = %87
  %90 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 30, i32 3), align 4
  %91 = getelementptr [126 x i32], ptr %90, i32 0, i32 92
  %92 = ptrtoint ptr %91 to i32
  %93 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %94 = inttoptr i32 %93 to ptr
  %95 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %94) #34, !srcloc !18
  %96 = add i32 %95, %92
  %97 = inttoptr i32 %96 to ptr
  %98 = load i32, ptr %97, align 4
  %99 = add i32 %98, %69
  store i32 %99, ptr %97, align 4
  br label %100

100:                                              ; preds = %89, %87, %64, %63, %53, %52
  %101 = phi ptr [ %68, %89 ], [ %68, %87 ], [ null, %63 ], [ null, %64 ], [ null, %52 ], [ null, %53 ]
  tail call fastcc void @local_bh_enable()
  br i1 %6, label %115, label %102

102:                                              ; preds = %100
  %103 = tail call zeroext i1 %1(ptr noundef %2, i32 noundef %12) #39
  br i1 %103, label %115, label %104

104:                                              ; preds = %102
  %105 = load volatile i32, ptr %35, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %114, label %108, !prof !22

108:                                              ; preds = %104
  %109 = icmp eq ptr %101, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %108
  tail call fastcc void @busy_poll_stop(ptr noundef nonnull %23, i1 noundef zeroext %3, i16 noundef zeroext %4)
  br label %111

111:                                              ; preds = %110, %108
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !99
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  %112 = tail call i32 @__cond_resched() #39
  %113 = tail call zeroext i1 %1(ptr noundef %2, i32 noundef %12) #39
  br i1 %113, label %120, label %16

114:                                              ; preds = %104
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !100
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #39, !srcloc !101
  br label %43

115:                                              ; preds = %102, %100
  %116 = icmp eq ptr %101, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %115
  tail call fastcc void @busy_poll_stop(ptr noundef nonnull %23, i1 noundef zeroext %3, i16 noundef zeroext %4)
  br label %118

118:                                              ; preds = %117, %115
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !102
  br label %119

119:                                              ; preds = %118, %27, %16
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %120

120:                                              ; preds = %119, %111
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @busy_poll_stop(ptr noundef %0, i1 noundef zeroext %1, i16 noundef zeroext %2) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %4) #39
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %4) #39
  %5 = tail call ptr @llvm.thread.pointer() #39
  %6 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %7 = load volatile i32, ptr %6, align 4
  %8 = add i32 %7, 512
  store volatile i32 %8, ptr %6, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  br i1 %1, label %9, label %23

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 6
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 78
  %13 = load volatile i32, ptr %12, align 8
  %14 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 3
  store i32 %13, ptr %14, align 8
  %15 = getelementptr inbounds %struct.net_device, ptr %11, i32 0, i32 77
  %16 = load volatile i32, ptr %15, align 4
  %17 = icmp ne i32 %13, 0
  %18 = icmp ne i32 %16, 0
  %19 = select i1 %17, i1 %18, i1 false
  br i1 %19, label %20, label %23

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 11
  %22 = zext i32 %16 to i64
  tail call void @hrtimer_start_range_ns(ptr noundef %21, i64 noundef %22, i64 noundef 0, i32 noundef 3) #39
  br label %23

23:                                               ; preds = %20, %9, %3
  %24 = phi i1 [ true, %20 ], [ false, %9 ], [ false, %3 ]
  %25 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 5
  %26 = load ptr, ptr %25, align 8
  %27 = zext i16 %2 to i32
  %28 = tail call i32 %26(ptr noundef %0, i32 noundef %27) #39
  %29 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_napi_poll, i32 0, i32 1), align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %33 = load i32, ptr %32, align 8
  %34 = lshr i32 %33, 5
  %35 = getelementptr i32, ptr @__cpu_online_mask, i32 %34
  %36 = load volatile i32, ptr %35, align 4
  %37 = and i32 %33, 31
  %38 = shl nuw i32 1, %37
  %39 = and i32 %38, %36
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %31
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !97
  %42 = tail call i32 @__traceiter_napi_poll(ptr noundef null, ptr noundef %0, i32 noundef %28, i32 noundef %27) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !98
  br label %43

43:                                               ; preds = %41, %31, %23
  %44 = icmp eq i32 %28, %27
  br i1 %44, label %45, label %92

45:                                               ; preds = %43
  br i1 %24, label %79, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 10
  %48 = load i32, ptr %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9
  tail call void @netif_receive_skb_list_internal(ptr noundef %51) #39
  store volatile ptr %51, ptr %51, align 4
  %52 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9, i32 1
  store ptr %51, ptr %52, align 4
  store i32 0, ptr %47, align 4
  br label %53

53:                                               ; preds = %50, %46
  %54 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %55 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %56 = inttoptr i32 %55 to ptr
  %57 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %56) #34, !srcloc !18
  %58 = add i32 %57, ptrtoint (ptr @softnet_data to i32)
  %59 = inttoptr i32 %58 to ptr
  %60 = load volatile i32, ptr %4, align 4
  %61 = and i32 %60, 256
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 15
  %65 = load volatile ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %74, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.task_struct, ptr %65, i32 0, i32 1
  %69 = load volatile i32, ptr %68, align 8
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  tail call void @_set_bit(i32 noundef 9, ptr noundef %4) #39
  br label %72

72:                                               ; preds = %71, %67
  %73 = tail call i32 @wake_up_process(ptr noundef nonnull %65) #39
  br label %78

74:                                               ; preds = %63, %53
  %75 = getelementptr inbounds %struct.list_head, ptr %59, i32 0, i32 1
  %76 = load ptr, ptr %75, align 4
  store ptr %0, ptr %75, align 4
  store ptr %59, ptr %0, align 4
  %77 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  store ptr %76, ptr %77, align 4
  store volatile ptr %0, ptr %76, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %78

78:                                               ; preds = %74, %72
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %54) #39, !srcloc !19
  br label %92

79:                                               ; preds = %45
  %80 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 4
  %81 = load i32, ptr %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  tail call void @napi_gro_flush(ptr noundef %0, i1 noundef zeroext false) #39
  br label %84

84:                                               ; preds = %83, %79
  %85 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 10
  %86 = load i32, ptr %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9
  tail call void @netif_receive_skb_list_internal(ptr noundef %89) #39
  store volatile ptr %89, ptr %89, align 4
  %90 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9, i32 1
  store ptr %89, ptr %90, align 4
  store i32 0, ptr %85, align 4
  br label %91

91:                                               ; preds = %88, %84
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %4) #39
  br label %92

92:                                               ; preds = %91, %78, %43
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_threaded(ptr noundef %0, i1 noundef zeroext %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 124
  %4 = load i8, ptr %3, align 1
  %5 = and i8 %4, 2
  %6 = icmp eq i8 %5, 0
  %7 = xor i1 %6, %1
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  br i1 %1, label %9, label %34

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 8
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, %10
  br i1 %12, label %34, label %13

13:                                               ; preds = %31, %9
  %14 = phi ptr [ %32, %31 ], [ %11, %9 ]
  %15 = getelementptr i8, ptr %14, i32 20
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %13
  %19 = getelementptr i8, ptr %14, i32 -192
  %20 = getelementptr i8, ptr %14, i32 -164
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr i8, ptr %14, i32 16
  %23 = load i32, ptr %22, align 8
  %24 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @napi_threaded_poll, ptr noundef %19, i32 noundef -1, ptr noundef nonnull @.str.93, ptr noundef %21, i32 noundef %23) #39
  %25 = icmp ugt ptr %24, inttoptr (i32 -4096 to ptr)
  br i1 %25, label %28, label %26

26:                                               ; preds = %18
  %27 = tail call i32 @wake_up_process(ptr noundef %24) #39
  store ptr %24, ptr %15, align 4
  br label %31

28:                                               ; preds = %18
  store ptr %24, ptr %15, align 4
  %29 = ptrtoint ptr %24 to i32
  %30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.94, i32 noundef %29) #42
  store ptr null, ptr %15, align 4
  br label %34

31:                                               ; preds = %26, %13
  %32 = load ptr, ptr %14, align 8
  %33 = icmp eq ptr %32, %10
  br i1 %33, label %34, label %13

34:                                               ; preds = %31, %28, %9, %8
  %35 = phi i1 [ false, %28 ], [ false, %8 ], [ true, %9 ], [ true, %31 ]
  %36 = phi i32 [ %29, %28 ], [ 0, %8 ], [ 0, %9 ], [ 0, %31 ]
  %37 = phi i8 [ 0, %28 ], [ 0, %8 ], [ 2, %9 ], [ 2, %31 ]
  %38 = load i8, ptr %3, align 1
  %39 = and i8 %38, -3
  %40 = or i8 %39, %37
  store i8 %40, ptr %3, align 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !103
  %41 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 8
  %42 = load ptr, ptr %41, align 8
  %43 = icmp eq ptr %42, %41
  br i1 %43, label %52, label %44

44:                                               ; preds = %49, %34
  %45 = phi ptr [ %50, %49 ], [ %42, %34 ]
  %46 = getelementptr i8, ptr %45, i32 -184
  br i1 %35, label %47, label %48

47:                                               ; preds = %44
  tail call void @_set_bit(i32 noundef 8, ptr noundef %46) #39
  br label %49

48:                                               ; preds = %44
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %46) #39
  br label %49

49:                                               ; preds = %48, %47
  %50 = load ptr, ptr %45, align 8
  %51 = icmp eq ptr %50, %41
  br i1 %51, label %52, label %44

52:                                               ; preds = %49, %34, %2
  %53 = phi i32 [ 0, %2 ], [ %36, %34 ], [ %36, %49 ]
  ret i32 %53
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_napi_add(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #1 {
  %5 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 1
  %6 = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %5) #39
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8, !prof !22

8:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6236, i32 noundef 9, ptr noundef null) #39
  br label %117

9:                                                ; preds = %4
  store volatile ptr %1, ptr %1, align 4
  %10 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  store ptr %1, ptr %10, align 4
  %11 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 13
  store ptr null, ptr %11, align 4
  %12 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 13, i32 1
  store ptr null, ptr %12, align 4
  %13 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 11
  tail call void @hrtimer_init(ptr noundef %13, i32 noundef 1, i32 noundef 3) #39
  %14 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 11, i32 2
  store ptr @napi_watchdog, ptr %14, align 8
  %15 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 0
  store volatile ptr %15, ptr %15, align 4
  %16 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 0, i32 0, i32 1
  store ptr %15, ptr %16, align 4
  %17 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 0, i32 1
  store i32 0, ptr %17, align 4
  %18 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 1
  store volatile ptr %18, ptr %18, align 4
  %19 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 1, i32 0, i32 1
  store ptr %18, ptr %19, align 4
  %20 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 1, i32 1
  store i32 0, ptr %20, align 4
  %21 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 2
  store volatile ptr %21, ptr %21, align 4
  %22 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 2, i32 0, i32 1
  store ptr %21, ptr %22, align 4
  %23 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 2, i32 1
  store i32 0, ptr %23, align 4
  %24 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 3
  store volatile ptr %24, ptr %24, align 4
  %25 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 3, i32 0, i32 1
  store ptr %24, ptr %25, align 4
  %26 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 3, i32 1
  store i32 0, ptr %26, align 4
  %27 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 4
  store volatile ptr %27, ptr %27, align 4
  %28 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 4, i32 0, i32 1
  store ptr %27, ptr %28, align 4
  %29 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 4, i32 1
  store i32 0, ptr %29, align 4
  %30 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 5
  store volatile ptr %30, ptr %30, align 4
  %31 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 5, i32 0, i32 1
  store ptr %30, ptr %31, align 4
  %32 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 5, i32 1
  store i32 0, ptr %32, align 4
  %33 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 6
  store volatile ptr %33, ptr %33, align 4
  %34 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 6, i32 0, i32 1
  store ptr %33, ptr %34, align 4
  %35 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 6, i32 1
  store i32 0, ptr %35, align 4
  %36 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 7
  store volatile ptr %36, ptr %36, align 4
  %37 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 7, i32 0, i32 1
  store ptr %36, ptr %37, align 4
  %38 = getelementptr %struct.napi_struct, ptr %1, i32 0, i32 7, i32 7, i32 1
  store i32 0, ptr %38, align 4
  %39 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 4
  store i32 0, ptr %39, align 4
  %40 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 8
  store ptr null, ptr %40, align 8
  %41 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 9
  store volatile ptr %41, ptr %41, align 4
  %42 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 9, i32 1
  store ptr %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 10
  store i32 0, ptr %43, align 4
  %44 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 5
  store ptr %2, ptr %44, align 8
  %45 = icmp sgt i32 %3, 64
  br i1 %45, label %46, label %49

46:                                               ; preds = %9
  %47 = load i1, ptr @netif_napi_add.__print_once, align 1
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  store i1 true, ptr @netif_napi_add.__print_once, align 1
  tail call void (ptr, ptr, ptr, ...) @netdev_printk(ptr noundef nonnull @.str.48, ptr noundef %0, ptr noundef nonnull @.str.49, ptr noundef nonnull @__func__.netif_napi_add, i32 noundef %3) #43
  br label %49

49:                                               ; preds = %48, %46, %9
  %50 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 2
  store i32 %3, ptr %50, align 4
  %51 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 6
  store ptr %0, ptr %51, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %5) #39
  tail call void @_set_bit(i32 noundef 3, ptr noundef %5) #39
  %52 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 12
  %53 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 8
  %54 = load ptr, ptr %53, align 4
  store ptr %54, ptr %52, align 4
  %55 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 12, i32 1
  store ptr %53, ptr %55, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !10
  store volatile ptr %52, ptr %53, align 4
  %56 = getelementptr inbounds %struct.list_head, ptr %54, i32 0, i32 1
  store ptr %52, ptr %56, align 4
  %57 = load volatile i32, ptr %5, align 4
  %58 = and i32 %57, 32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %97

60:                                               ; preds = %49
  tail call void @_raw_spin_lock(ptr noundef nonnull @napi_hash_lock) #39
  %61 = load i32, ptr @napi_gen_id, align 4
  br label %62

62:                                               ; preds = %76, %60
  %63 = phi i32 [ %61, %60 ], [ %68, %76 ]
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 17
  br i1 %65, label %66, label %67, !prof !15

66:                                               ; preds = %62
  br label %67

67:                                               ; preds = %66, %62
  %68 = phi i32 [ 17, %66 ], [ %64, %62 ]
  %69 = and i32 %68, 255
  %70 = getelementptr [256 x %struct.hlist_head], ptr @napi_hash, i32 0, i32 %69
  %71 = load volatile ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, null
  %73 = getelementptr i8, ptr %71, i32 -200
  %74 = icmp eq ptr %73, null
  %75 = or i1 %72, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %81, %67
  %77 = phi ptr [ %85, %81 ], [ %73, %67 ]
  %78 = getelementptr inbounds %struct.napi_struct, ptr %77, i32 0, i32 14
  %79 = load i32, ptr %78, align 8
  %80 = icmp eq i32 %79, %68
  br i1 %80, label %62, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.napi_struct, ptr %77, i32 0, i32 13
  %83 = load volatile ptr, ptr %82, align 8
  %84 = icmp eq ptr %83, null
  %85 = getelementptr i8, ptr %83, i32 -200
  %86 = icmp eq ptr %85, null
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %76

88:                                               ; preds = %81, %67
  store i32 %68, ptr @napi_gen_id, align 4
  %89 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 14
  store i32 %68, ptr %89, align 8
  %90 = load ptr, ptr %70, align 4
  store ptr %90, ptr %11, align 4
  store volatile ptr %70, ptr %12, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !9
  store volatile ptr %11, ptr %70, align 4
  %91 = icmp eq ptr %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.hlist_node, ptr %90, i32 0, i32 1
  store volatile ptr %11, ptr %93, align 4
  br label %94

94:                                               ; preds = %92, %88
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %95 = load i16, ptr @napi_hash_lock, align 4
  %96 = add i16 %95, 1
  store i16 %96, ptr @napi_hash_lock, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %97

97:                                               ; preds = %94, %49
  %98 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 124
  %99 = load i8, ptr %98, align 1
  %100 = and i8 %99, 2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %117, label %102

102:                                              ; preds = %97
  %103 = load ptr, ptr %51, align 4
  %104 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 14
  %105 = load i32, ptr %104, align 8
  %106 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @napi_threaded_poll, ptr noundef %1, i32 noundef -1, ptr noundef nonnull @.str.93, ptr noundef %103, i32 noundef %105) #39
  %107 = icmp ugt ptr %106, inttoptr (i32 -4096 to ptr)
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = tail call i32 @wake_up_process(ptr noundef %106) #39
  %110 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 15
  store ptr %106, ptr %110, align 4
  br label %117

111:                                              ; preds = %102
  %112 = getelementptr inbounds %struct.napi_struct, ptr %1, i32 0, i32 15
  store ptr %106, ptr %112, align 4
  %113 = ptrtoint ptr %106 to i32
  %114 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.94, i32 noundef %113) #42
  store ptr null, ptr %112, align 4
  %115 = load i8, ptr %98, align 1
  %116 = and i8 %115, -3
  store i8 %116, ptr %98, align 1
  br label %117

117:                                              ; preds = %111, %108, %97, %8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_init(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @napi_watchdog(ptr noundef %0) #1 {
  %2 = getelementptr i8, ptr %0, i32 -144
  %3 = getelementptr i8, ptr %0, i32 -136
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %34

7:                                                ; preds = %1
  %8 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %3) #39
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %7
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %3) #39
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #34, !srcloc !18
  %14 = add i32 %13, ptrtoint (ptr @softnet_data to i32)
  %15 = inttoptr i32 %14 to ptr
  %16 = load volatile i32, ptr %3, align 4
  %17 = and i32 %16, 256
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %10
  %20 = getelementptr i8, ptr %0, i32 68
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 1
  %25 = load volatile i32, ptr %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_set_bit(i32 noundef 9, ptr noundef %3) #39
  br label %28

28:                                               ; preds = %27, %23
  %29 = tail call i32 @wake_up_process(ptr noundef nonnull %21) #39
  br label %34

30:                                               ; preds = %19, %10
  %31 = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  store ptr %2, ptr %31, align 4
  store ptr %15, ptr %2, align 4
  %33 = getelementptr i8, ptr %0, i32 -140
  store ptr %32, ptr %33, align 4
  store volatile ptr %2, ptr %32, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %34

34:                                               ; preds = %30, %28, %7, %1
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_printk(ptr noundef %0, ptr noundef %1, ptr noundef %2, ...) #12 {
  %4 = alloca %struct.va_format, align 8
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #39
  store i32 0, ptr %5, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %5)
  store ptr %2, ptr %4, align 8
  %6 = getelementptr inbounds %struct.va_format, ptr %4, i32 0, i32 1
  store ptr %5, ptr %6, align 4
  call fastcc void @__netdev_printk(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %4)
  call void @llvm.va_end(ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @napi_disable(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  tail call void @_set_bit(i32 noundef 2, ptr noundef %2) #39
  br label %3

3:                                                ; preds = %8, %1
  %4 = load volatile i32, ptr %2, align 8
  %5 = and i32 %4, 9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  tail call void @usleep_range_state(i32 noundef 20, i32 noundef 200, i32 noundef 2) #39
  br label %8

8:                                                ; preds = %16, %7
  br label %3

9:                                                ; preds = %3
  %10 = and i32 %4, -394
  %11 = or i32 %10, 9
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !104
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #39, !srcloc !29
  br label %12

12:                                               ; preds = %12, %9
  %13 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %2, i32 %4, i32 %11) #39, !srcloc !90
  %14 = extractvalue { i32, i32 } %13, 0
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = extractvalue { i32, i32 } %13, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !105
  %18 = icmp eq i32 %17, %4
  br i1 %18, label %19, label %8

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 11
  %21 = tail call i32 @hrtimer_cancel(ptr noundef %20) #39
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %2) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hrtimer_cancel(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @napi_enable(ptr noundef %0) #1 {
  %2 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2)
  %3 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  %4 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 15
  br label %6

6:                                                ; preds = %30, %1
  %7 = load volatile i32, ptr %3, align 8
  store i32 %7, ptr %2, align 4
  %8 = load volatile i32, ptr %2, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %6
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6309, 0\0A.popsection", ""() #39, !srcloc !106
  unreachable

12:                                               ; preds = %6
  %13 = and i32 %8, -10
  %14 = load ptr, ptr %4, align 4
  %15 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 124
  %16 = load i8, ptr %15, align 1
  %17 = and i8 %16, 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = load ptr, ptr %5, align 4
  %21 = icmp eq ptr %20, null
  %22 = or i32 %13, 256
  %23 = select i1 %21, i32 %13, i32 %22
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi i32 [ %13, %12 ], [ %23, %19 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !107
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #39, !srcloc !29
  br label %26

26:                                               ; preds = %26, %24
  %27 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %3, i32 %8, i32 %25) #39, !srcloc !90
  %28 = extractvalue { i32, i32 } %27, 0
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %26

30:                                               ; preds = %26
  %31 = extractvalue { i32, i32 } %27, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !108
  %32 = icmp eq i32 %31, %8
  br i1 %32, label %33, label %6

33:                                               ; preds = %30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__netif_napi_del(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  %3 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %2) #39
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %104, label %5

5:                                                ; preds = %1
  tail call void @_raw_spin_lock(ptr noundef nonnull @napi_hash_lock) #39
  %6 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 13, i32 1
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 13
  %11 = load ptr, ptr %10, align 4
  store volatile ptr %11, ptr %7, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hlist_node, ptr %11, i32 0, i32 1
  store volatile ptr %7, ptr %14, align 4
  br label %15

15:                                               ; preds = %13, %9
  store volatile ptr null, ptr %6, align 4
  br label %16

16:                                               ; preds = %15, %5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %17 = load i16, ptr @napi_hash_lock, align 4
  %18 = add i16 %17, 1
  store i16 %18, ptr @napi_hash_lock, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %19 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 12
  %20 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 12, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = load ptr, ptr %19, align 4
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  store ptr %21, ptr %23, align 4
  store volatile ptr %22, ptr %21, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %20, align 4
  %24 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 8
  %25 = load ptr, ptr %24, align 8
  tail call void @kfree_skb_reason(ptr noundef %25, i32 noundef 0) #39
  store ptr null, ptr %24, align 8
  %26 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 0
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, %26
  br i1 %28, label %33, label %29

29:                                               ; preds = %29, %16
  %30 = phi ptr [ %31, %29 ], [ %27, %16 ]
  %31 = load ptr, ptr %30, align 8
  tail call void @kfree_skb_reason(ptr noundef %30, i32 noundef 0) #39
  %32 = icmp eq ptr %31, %26
  br i1 %32, label %33, label %29

33:                                               ; preds = %29, %16
  %34 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 0, i32 1
  store i32 0, ptr %34, align 4
  %35 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 1
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, %35
  br i1 %37, label %42, label %38

38:                                               ; preds = %38, %33
  %39 = phi ptr [ %40, %38 ], [ %36, %33 ]
  %40 = load ptr, ptr %39, align 8
  tail call void @kfree_skb_reason(ptr noundef %39, i32 noundef 0) #39
  %41 = icmp eq ptr %40, %35
  br i1 %41, label %42, label %38

42:                                               ; preds = %38, %33
  %43 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 1, i32 1
  store i32 0, ptr %43, align 4
  %44 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 2
  %45 = load ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, %44
  br i1 %46, label %51, label %47

47:                                               ; preds = %47, %42
  %48 = phi ptr [ %49, %47 ], [ %45, %42 ]
  %49 = load ptr, ptr %48, align 8
  tail call void @kfree_skb_reason(ptr noundef %48, i32 noundef 0) #39
  %50 = icmp eq ptr %49, %44
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %42
  %52 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 2, i32 1
  store i32 0, ptr %52, align 4
  %53 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 3
  %54 = load ptr, ptr %53, align 4
  %55 = icmp eq ptr %54, %53
  br i1 %55, label %60, label %56

56:                                               ; preds = %56, %51
  %57 = phi ptr [ %58, %56 ], [ %54, %51 ]
  %58 = load ptr, ptr %57, align 8
  tail call void @kfree_skb_reason(ptr noundef %57, i32 noundef 0) #39
  %59 = icmp eq ptr %58, %53
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %51
  %61 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 3, i32 1
  store i32 0, ptr %61, align 4
  %62 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 4
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, %62
  br i1 %64, label %69, label %65

65:                                               ; preds = %65, %60
  %66 = phi ptr [ %67, %65 ], [ %63, %60 ]
  %67 = load ptr, ptr %66, align 8
  tail call void @kfree_skb_reason(ptr noundef %66, i32 noundef 0) #39
  %68 = icmp eq ptr %67, %62
  br i1 %68, label %69, label %65

69:                                               ; preds = %65, %60
  %70 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 4, i32 1
  store i32 0, ptr %70, align 4
  %71 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 5
  %72 = load ptr, ptr %71, align 4
  %73 = icmp eq ptr %72, %71
  br i1 %73, label %78, label %74

74:                                               ; preds = %74, %69
  %75 = phi ptr [ %76, %74 ], [ %72, %69 ]
  %76 = load ptr, ptr %75, align 8
  tail call void @kfree_skb_reason(ptr noundef %75, i32 noundef 0) #39
  %77 = icmp eq ptr %76, %71
  br i1 %77, label %78, label %74

78:                                               ; preds = %74, %69
  %79 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 5, i32 1
  store i32 0, ptr %79, align 4
  %80 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 6
  %81 = load ptr, ptr %80, align 4
  %82 = icmp eq ptr %81, %80
  br i1 %82, label %87, label %83

83:                                               ; preds = %83, %78
  %84 = phi ptr [ %85, %83 ], [ %81, %78 ]
  %85 = load ptr, ptr %84, align 8
  tail call void @kfree_skb_reason(ptr noundef %84, i32 noundef 0) #39
  %86 = icmp eq ptr %85, %80
  br i1 %86, label %87, label %83

87:                                               ; preds = %83, %78
  %88 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 6, i32 1
  store i32 0, ptr %88, align 4
  %89 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 7
  %90 = load ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, %89
  br i1 %91, label %96, label %92

92:                                               ; preds = %92, %87
  %93 = phi ptr [ %94, %92 ], [ %90, %87 ]
  %94 = load ptr, ptr %93, align 8
  tail call void @kfree_skb_reason(ptr noundef %93, i32 noundef 0) #39
  %95 = icmp eq ptr %94, %89
  br i1 %95, label %96, label %92

96:                                               ; preds = %92, %87
  %97 = getelementptr %struct.napi_struct, ptr %0, i32 0, i32 7, i32 7, i32 1
  store i32 0, ptr %97, align 4
  %98 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 4
  store i32 0, ptr %98, align 4
  %99 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 15
  %100 = load ptr, ptr %99, align 4
  %101 = icmp eq ptr %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %96
  %103 = tail call i32 @kthread_stop(ptr noundef nonnull %100) #39
  store ptr null, ptr %99, align 4
  br label %104

104:                                              ; preds = %102, %96, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kthread_stop(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_has_upper_dev(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca [9 x ptr], align 4
  %4 = alloca [9 x ptr], align 4
  %5 = tail call i32 @rtnl_is_locked() #39
  %6 = icmp eq i32 %5, 0
  %7 = load i1, ptr @netdev_has_upper_dev.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !15

10:                                               ; preds = %2
  store i1 true, ptr @netdev_has_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6599, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6599) #39
  br label %11

11:                                               ; preds = %10, %2
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %3, i8 0, i32 36, i1 false) #39, !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %4, i8 0, i32 36, i1 false) #39, !annotation !21
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %13

13:                                               ; preds = %37, %11
  %14 = phi i32 [ 0, %11 ], [ %40, %37 ]
  %15 = phi ptr [ %0, %11 ], [ %38, %37 ]
  %16 = phi ptr [ %12, %11 ], [ %39, %37 ]
  %17 = load volatile ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 13
  %19 = icmp eq ptr %17, %18
  br i1 %19, label %29, label %20

20:                                               ; preds = %13
  %21 = getelementptr i8, ptr %17, i32 -12
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 13
  %26 = getelementptr [9 x ptr], ptr %3, i32 0, i32 %14
  store ptr %15, ptr %26, align 4
  %27 = add i32 %14, 1
  %28 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %14
  store ptr %17, ptr %28, align 4
  br label %37

29:                                               ; preds = %20, %13
  %30 = icmp eq i32 %14, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add i32 %14, -1
  %33 = getelementptr [9 x ptr], ptr %3, i32 0, i32 %32
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %32
  %36 = load ptr, ptr %35, align 4
  br label %37

37:                                               ; preds = %31, %24
  %38 = phi ptr [ %22, %24 ], [ %34, %31 ]
  %39 = phi ptr [ %25, %24 ], [ %36, %31 ]
  %40 = phi i32 [ %27, %24 ], [ %32, %31 ]
  %41 = icmp ne ptr %38, %0
  %42 = icmp eq ptr %38, %1
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %13

44:                                               ; preds = %37, %29
  %45 = phi i1 [ false, %29 ], [ true, %37 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #39
  ret i1 %45
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_walk_all_upper_dev_rcu(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #1 {
  %4 = alloca [9 x ptr], align 4
  %5 = alloca [9 x ptr], align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %4, i8 0, i32 36, i1 false), !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %5, i8 0, i32 36, i1 false), !annotation !21
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %7

7:                                                ; preds = %28, %3
  %8 = phi ptr [ %6, %3 ], [ %29, %28 ]
  %9 = phi ptr [ %0, %3 ], [ %30, %28 ]
  %10 = phi i32 [ 0, %3 ], [ %31, %28 ]
  %11 = icmp eq ptr %9, %0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = tail call i32 %1(ptr noundef %9, ptr noundef %2) #39
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %12, %7
  %16 = load volatile ptr, ptr %8, align 4
  %17 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 13
  %18 = icmp eq ptr %16, %17
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr i8, ptr %16, i32 -12
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 13
  %25 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %10
  store ptr %9, ptr %25, align 4
  %26 = add i32 %10, 1
  %27 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %10
  store ptr %16, ptr %27, align 4
  br label %28

28:                                               ; preds = %34, %23
  %29 = phi ptr [ %24, %23 ], [ %39, %34 ]
  %30 = phi ptr [ %21, %23 ], [ %37, %34 ]
  %31 = phi i32 [ %26, %23 ], [ %35, %34 ]
  br label %7

32:                                               ; preds = %19, %15
  %33 = icmp eq i32 %10, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %32
  %35 = add i32 %10, -1
  %36 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %35
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %35
  %39 = load ptr, ptr %38, align 4
  br label %28

40:                                               ; preds = %32, %12
  %41 = phi i32 [ %13, %12 ], [ 0, %32 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #39
  ret i32 %41
}

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_has_upper_dev_all_rcu(ptr noundef %0, ptr noundef %1) #6 {
  %3 = alloca [9 x ptr], align 4
  %4 = alloca [9 x ptr], align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %3, i8 0, i32 36, i1 false) #39, !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %4, i8 0, i32 36, i1 false) #39, !annotation !21
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %6

6:                                                ; preds = %30, %2
  %7 = phi i32 [ 0, %2 ], [ %33, %30 ]
  %8 = phi ptr [ %0, %2 ], [ %31, %30 ]
  %9 = phi ptr [ %5, %2 ], [ %32, %30 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 13
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %22, label %13

13:                                               ; preds = %6
  %14 = getelementptr i8, ptr %10, i32 -12
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 13
  %19 = getelementptr [9 x ptr], ptr %3, i32 0, i32 %7
  store ptr %8, ptr %19, align 4
  %20 = add i32 %7, 1
  %21 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %7
  store ptr %10, ptr %21, align 4
  br label %30

22:                                               ; preds = %13, %6
  %23 = icmp eq i32 %7, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %22
  %25 = add i32 %7, -1
  %26 = getelementptr [9 x ptr], ptr %3, i32 0, i32 %25
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %25
  %29 = load ptr, ptr %28, align 4
  br label %30

30:                                               ; preds = %24, %17
  %31 = phi ptr [ %15, %17 ], [ %27, %24 ]
  %32 = phi ptr [ %18, %17 ], [ %29, %24 ]
  %33 = phi i32 [ %20, %17 ], [ %25, %24 ]
  %34 = icmp ne ptr %31, %0
  %35 = icmp eq ptr %31, %1
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %6

37:                                               ; preds = %30, %22
  %38 = phi i1 [ false, %22 ], [ true, %30 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #39
  ret i1 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_has_any_upper_dev(ptr noundef %0) #1 {
  %2 = tail call i32 @rtnl_is_locked() #39
  %3 = icmp eq i32 %2, 0
  %4 = load i1, ptr @netdev_has_any_upper_dev.__already_done, align 1
  %5 = xor i1 %4, true
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %8, !prof !15

7:                                                ; preds = %1
  store i1 true, ptr @netdev_has_any_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6637, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6637) #39
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %10 = load volatile ptr, ptr %9, align 4
  %11 = icmp ne ptr %10, %9
  ret i1 %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @netdev_master_upper_dev_get(ptr noundef %0) #1 {
  %2 = tail call i32 @rtnl_is_locked() #39
  %3 = icmp eq i32 %2, 0
  %4 = load i1, ptr @netdev_master_upper_dev_get.__already_done, align 1
  %5 = xor i1 %4, true
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %8, !prof !15

7:                                                ; preds = %1
  store i1 true, ptr @netdev_master_upper_dev_get.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6654, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6654) #39
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %10 = load volatile ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, %9
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr i8, ptr %10, i32 -8
  %14 = load i8, ptr %13, align 4, !range !28
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16, !prof !15

16:                                               ; preds = %12
  %17 = getelementptr i8, ptr %10, i32 -12
  %18 = load ptr, ptr %17, align 4
  br label %19

19:                                               ; preds = %16, %12, %8
  %20 = phi ptr [ %18, %16 ], [ null, %8 ], [ null, %12 ]
  ret ptr %20
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_adjacent_get_private(ptr nocapture noundef readonly %0) #24 {
  %2 = getelementptr i8, ptr %0, i32 -4
  %3 = load ptr, ptr %2, align 4
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_upper_get_next_dev_rcu(ptr noundef readnone %0, ptr nocapture noundef %1) #18 {
  %3 = load ptr, ptr %1, align 4
  %4 = load volatile ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %4, i32 -12
  store ptr %4, ptr %1, align 4
  %9 = load ptr, ptr %8, align 4
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi ptr [ %9, %7 ], [ null, %2 ]
  ret ptr %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_lower_get_next_private(ptr noundef readnone %0, ptr nocapture noundef %1) #15 {
  %3 = load ptr, ptr %1, align 4
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %3, align 4
  store ptr %7, ptr %1, align 4
  %8 = getelementptr i8, ptr %3, i32 -4
  %9 = load ptr, ptr %8, align 4
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi ptr [ %9, %6 ], [ null, %2 ]
  ret ptr %11
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_lower_get_next_private_rcu(ptr noundef readnone %0, ptr nocapture noundef %1) #18 {
  %3 = load ptr, ptr %1, align 4
  %4 = load volatile ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  store ptr %4, ptr %1, align 4
  %8 = getelementptr i8, ptr %4, i32 -4
  %9 = load ptr, ptr %8, align 4
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi ptr [ %9, %7 ], [ null, %2 ]
  ret ptr %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_walk_all_lower_dev(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #1 {
  %4 = alloca [9 x ptr], align 4
  %5 = alloca [9 x ptr], align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %4, i8 0, i32 36, i1 false), !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %5, i8 0, i32 36, i1 false), !annotation !21
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  br label %7

7:                                                ; preds = %28, %3
  %8 = phi ptr [ %6, %3 ], [ %29, %28 ]
  %9 = phi ptr [ %0, %3 ], [ %30, %28 ]
  %10 = phi i32 [ 0, %3 ], [ %31, %28 ]
  %11 = icmp eq ptr %9, %0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = tail call i32 %1(ptr noundef %9, ptr noundef %2) #39
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %12, %7
  %16 = load ptr, ptr %8, align 4
  %17 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 13, i32 1
  %18 = icmp eq ptr %16, %17
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr i8, ptr %16, i32 -12
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 13, i32 1
  %25 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %10
  store ptr %9, ptr %25, align 4
  %26 = add i32 %10, 1
  %27 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %10
  store ptr %16, ptr %27, align 4
  br label %28

28:                                               ; preds = %34, %23
  %29 = phi ptr [ %24, %23 ], [ %39, %34 ]
  %30 = phi ptr [ %21, %23 ], [ %37, %34 ]
  %31 = phi i32 [ %26, %23 ], [ %35, %34 ]
  br label %7

32:                                               ; preds = %19, %15
  %33 = icmp eq i32 %10, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %32
  %35 = add i32 %10, -1
  %36 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %35
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %35
  %39 = load ptr, ptr %38, align 4
  br label %28

40:                                               ; preds = %32, %12
  %41 = phi i32 [ %13, %12 ], [ 0, %32 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #39
  ret i32 %41
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_next_lower_dev_rcu(ptr noundef readnone %0, ptr nocapture noundef %1) #18 {
  %3 = load ptr, ptr %1, align 4
  %4 = load volatile ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %4, i32 -12
  store ptr %4, ptr %1, align 4
  %9 = load ptr, ptr %8, align 4
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi ptr [ %9, %7 ], [ null, %2 ]
  ret ptr %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_walk_all_lower_dev_rcu(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #1 {
  %4 = alloca [9 x ptr], align 4
  %5 = alloca [9 x ptr], align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %4, i8 0, i32 36, i1 false), !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %5, i8 0, i32 36, i1 false), !annotation !21
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  br label %7

7:                                                ; preds = %28, %3
  %8 = phi ptr [ %6, %3 ], [ %29, %28 ]
  %9 = phi ptr [ %0, %3 ], [ %30, %28 ]
  %10 = phi i32 [ 0, %3 ], [ %31, %28 ]
  %11 = icmp eq ptr %9, %0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = tail call i32 %1(ptr noundef %9, ptr noundef %2) #39
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %12, %7
  %16 = load volatile ptr, ptr %8, align 4
  %17 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 13, i32 1
  %18 = icmp eq ptr %16, %17
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr i8, ptr %16, i32 -12
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 13, i32 1
  %25 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %10
  store ptr %9, ptr %25, align 4
  %26 = add i32 %10, 1
  %27 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %10
  store ptr %16, ptr %27, align 4
  br label %28

28:                                               ; preds = %34, %23
  %29 = phi ptr [ %24, %23 ], [ %39, %34 ]
  %30 = phi ptr [ %21, %23 ], [ %37, %34 ]
  %31 = phi i32 [ %26, %23 ], [ %35, %34 ]
  br label %7

32:                                               ; preds = %19, %15
  %33 = icmp eq i32 %10, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %32
  %35 = add i32 %10, -1
  %36 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %35
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %35
  %39 = load ptr, ptr %38, align 4
  br label %28

40:                                               ; preds = %32, %12
  %41 = phi i32 [ %13, %12 ], [ 0, %32 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #39
  ret i32 %41
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_lower_get_first_private_rcu(ptr noundef %0) #22 {
  %2 = alloca ptr, align 4
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2)
  %4 = load volatile ptr, ptr %3, align 4
  store ptr %4, ptr %2, align 4
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %7, !prof !15

6:                                                ; preds = %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2)
  br label %14

7:                                                ; preds = %1
  %8 = load volatile ptr, ptr %2, align 4
  %9 = getelementptr i8, ptr %8, i32 -12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2)
  %10 = icmp eq ptr %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr i8, ptr %8, i32 -4
  %13 = load ptr, ptr %12, align 4
  br label %14

14:                                               ; preds = %11, %7, %6
  %15 = phi ptr [ %13, %11 ], [ null, %7 ], [ null, %6 ]
  ret ptr %15
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_master_upper_dev_get_rcu(ptr noundef %0) #22 {
  %2 = alloca ptr, align 4
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2)
  %4 = load volatile ptr, ptr %3, align 4
  store ptr %4, ptr %2, align 4
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %7, !prof !15

6:                                                ; preds = %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2)
  br label %17

7:                                                ; preds = %1
  %8 = load volatile ptr, ptr %2, align 4
  %9 = getelementptr i8, ptr %8, i32 -12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2)
  %10 = icmp eq ptr %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr i8, ptr %8, i32 -8
  %13 = load i8, ptr %12, align 4, !range !28
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15, !prof !15

15:                                               ; preds = %11
  %16 = load ptr, ptr %9, align 4
  br label %17

17:                                               ; preds = %15, %11, %7, %6
  %18 = phi ptr [ %16, %15 ], [ null, %11 ], [ null, %7 ], [ null, %6 ]
  ret ptr %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_upper_dev_link(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  %4 = alloca %struct.netdev_nested_priv, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  %5 = load i64, ptr @__const.netdev_master_upper_dev_link.priv, align 8
  store i64 %5, ptr %4, align 8
  %6 = call fastcc i32 @__netdev_upper_dev_link(ptr noundef %0, ptr noundef %1, i1 noundef zeroext false, ptr noundef null, ptr noundef null, ptr noundef nonnull %4, ptr noundef %2)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_upper_dev_link(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6) unnamed_addr #1 {
  %8 = alloca [9 x ptr], align 4
  %9 = alloca [9 x ptr], align 4
  %10 = alloca [9 x ptr], align 4
  %11 = alloca [9 x ptr], align 4
  %12 = alloca %struct.netdev_notifier_changeupper_info, align 4
  %13 = zext i1 %2 to i8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %12) #39
  %14 = getelementptr inbounds i8, ptr %12, i32 12
  store i32 0, ptr %14, align 4, !annotation !21
  store ptr %0, ptr %12, align 4
  %15 = getelementptr inbounds %struct.netdev_notifier_info, ptr %12, i32 0, i32 1
  store ptr %6, ptr %15, align 4
  %16 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %12, i32 0, i32 1
  store ptr %1, ptr %16, align 4
  %17 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %12, i32 0, i32 2
  store i8 %13, ptr %17, align 4
  %18 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %12, i32 0, i32 3
  store i8 1, ptr %18, align 1
  %19 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %12, i32 0, i32 4
  store ptr %4, ptr %19, align 4
  %20 = tail call i32 @rtnl_is_locked() #39
  %21 = icmp eq i32 %20, 0
  %22 = load i1, ptr @__netdev_upper_dev_link.__already_done, align 1
  %23 = xor i1 %22, true
  %24 = select i1 %21, i1 %23, i1 false
  br i1 %24, label %25, label %26, !prof !15

25:                                               ; preds = %7
  store i1 true, ptr @__netdev_upper_dev_link.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 7455, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 7455) #39
  br label %26

26:                                               ; preds = %25, %7
  %27 = icmp eq ptr %0, %1
  br i1 %27, label %198, label %28

28:                                               ; preds = %26
  %29 = tail call i32 @rtnl_is_locked() #39
  %30 = icmp eq i32 %29, 0
  %31 = load i1, ptr @__netdev_has_upper_dev.__already_done, align 1
  %32 = xor i1 %31, true
  %33 = select i1 %30, i1 %32, i1 false
  br i1 %33, label %34, label %35, !prof !15

34:                                               ; preds = %28
  store i1 true, ptr @__netdev_has_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6871, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6871) #39
  br label %35

35:                                               ; preds = %34, %28
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %10) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %10, i8 0, i32 36, i1 false) #39, !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %11) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %11, i8 0, i32 36, i1 false) #39, !annotation !21
  %36 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13
  br label %37

37:                                               ; preds = %67, %35
  %38 = phi i32 [ 0, %35 ], [ %70, %67 ]
  %39 = phi ptr [ %1, %35 ], [ %68, %67 ]
  %40 = phi ptr [ %36, %35 ], [ %69, %67 ]
  %41 = getelementptr inbounds %struct.net_device, ptr %39, i32 0, i32 13
  br label %42

42:                                               ; preds = %50, %37
  %43 = phi ptr [ %40, %37 ], [ %44, %50 ]
  %44 = load ptr, ptr %43, align 4
  %45 = icmp eq ptr %44, %41
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr i8, ptr %44, i32 -12
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = getelementptr i8, ptr %44, i32 -7
  %52 = load i8, ptr %51, align 1, !range !28
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %42

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.net_device, ptr %48, i32 0, i32 13
  %56 = getelementptr [9 x ptr], ptr %10, i32 0, i32 %38
  store ptr %39, ptr %56, align 4
  %57 = add i32 %38, 1
  %58 = getelementptr [9 x ptr], ptr %11, i32 0, i32 %38
  store ptr %44, ptr %58, align 4
  br label %67

59:                                               ; preds = %46, %42
  %60 = icmp eq i32 %38, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %59
  %62 = add i32 %38, -1
  %63 = getelementptr [9 x ptr], ptr %10, i32 0, i32 %62
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr [9 x ptr], ptr %11, i32 0, i32 %62
  %66 = load ptr, ptr %65, align 4
  br label %67

67:                                               ; preds = %61, %54
  %68 = phi ptr [ %48, %54 ], [ %64, %61 ]
  %69 = phi ptr [ %55, %54 ], [ %66, %61 ]
  %70 = phi i32 [ %57, %54 ], [ %62, %61 ]
  %71 = icmp ne ptr %68, %1
  %72 = icmp eq ptr %68, %0
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %37

74:                                               ; preds = %67
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %11) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %10) #39
  br label %198

75:                                               ; preds = %59
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %11) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %10) #39
  %76 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 53
  %77 = load i8, ptr %76, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 52
  %80 = load i8, ptr %79, align 2
  %81 = zext i8 %80 to i32
  %82 = add nuw nsw i32 %81, %78
  %83 = icmp ugt i32 %82, 8
  br i1 %83, label %198, label %84

84:                                               ; preds = %75
  %85 = tail call i32 @rtnl_is_locked() #39
  %86 = icmp eq i32 %85, 0
  br i1 %2, label %133, label %87

87:                                               ; preds = %84
  %88 = load i1, ptr @__netdev_has_upper_dev.__already_done, align 1
  %89 = xor i1 %88, true
  %90 = select i1 %86, i1 %89, i1 false
  br i1 %90, label %91, label %92, !prof !15

91:                                               ; preds = %87
  store i1 true, ptr @__netdev_has_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6871, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6871) #39
  br label %92

92:                                               ; preds = %91, %87
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %8) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %8, i8 0, i32 36, i1 false) #39, !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %9) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %9, i8 0, i32 36, i1 false) #39, !annotation !21
  %93 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %94

94:                                               ; preds = %124, %92
  %95 = phi i32 [ 0, %92 ], [ %127, %124 ]
  %96 = phi ptr [ %0, %92 ], [ %125, %124 ]
  %97 = phi ptr [ %93, %92 ], [ %126, %124 ]
  %98 = getelementptr inbounds %struct.net_device, ptr %96, i32 0, i32 13
  br label %99

99:                                               ; preds = %107, %94
  %100 = phi ptr [ %97, %94 ], [ %101, %107 ]
  %101 = load ptr, ptr %100, align 4
  %102 = icmp eq ptr %101, %98
  br i1 %102, label %116, label %103

103:                                              ; preds = %99
  %104 = getelementptr i8, ptr %101, i32 -12
  %105 = load ptr, ptr %104, align 4
  %106 = icmp eq ptr %105, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %103
  %108 = getelementptr i8, ptr %101, i32 -7
  %109 = load i8, ptr %108, align 1, !range !28
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %99

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.net_device, ptr %105, i32 0, i32 13
  %113 = getelementptr [9 x ptr], ptr %8, i32 0, i32 %95
  store ptr %96, ptr %113, align 4
  %114 = add i32 %95, 1
  %115 = getelementptr [9 x ptr], ptr %9, i32 0, i32 %95
  store ptr %101, ptr %115, align 4
  br label %124

116:                                              ; preds = %103, %99
  %117 = icmp eq i32 %95, 0
  br i1 %117, label %132, label %118

118:                                              ; preds = %116
  %119 = add i32 %95, -1
  %120 = getelementptr [9 x ptr], ptr %8, i32 0, i32 %119
  %121 = load ptr, ptr %120, align 4
  %122 = getelementptr [9 x ptr], ptr %9, i32 0, i32 %119
  %123 = load ptr, ptr %122, align 4
  br label %124

124:                                              ; preds = %118, %111
  %125 = phi ptr [ %105, %111 ], [ %121, %118 ]
  %126 = phi ptr [ %112, %111 ], [ %123, %118 ]
  %127 = phi i32 [ %114, %111 ], [ %119, %118 ]
  %128 = icmp ne ptr %125, %0
  %129 = icmp eq ptr %125, %1
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %94

131:                                              ; preds = %124
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %9) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %8) #39
  br label %198

132:                                              ; preds = %116
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %9) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %8) #39
  br label %157

133:                                              ; preds = %84
  %134 = load i1, ptr @__netdev_master_upper_dev_get.__already_done, align 1
  %135 = xor i1 %134, true
  %136 = select i1 %86, i1 %135, i1 false
  br i1 %136, label %137, label %138, !prof !15

137:                                              ; preds = %133
  store i1 true, ptr @__netdev_master_upper_dev_get.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6671, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6671) #39
  br label %138

138:                                              ; preds = %137, %133
  %139 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %140 = load volatile ptr, ptr %139, align 4
  %141 = icmp eq ptr %140, %139
  br i1 %141, label %157, label %142

142:                                              ; preds = %138
  %143 = getelementptr i8, ptr %140, i32 -12
  %144 = getelementptr i8, ptr %140, i32 -8
  %145 = load i8, ptr %144, align 4, !range !28
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %157, label %147, !prof !15

147:                                              ; preds = %142
  %148 = getelementptr i8, ptr %140, i32 -7
  %149 = load i8, ptr %148, align 1, !range !28
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = load ptr, ptr %143, align 4
  %153 = icmp eq ptr %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %151
  %155 = icmp eq ptr %152, %1
  %156 = select i1 %155, i32 -17, i32 -16
  br label %198

157:                                              ; preds = %151, %147, %142, %138, %132
  %158 = tail call i32 @rtnl_is_locked() #39
  %159 = icmp eq i32 %158, 0
  %160 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %161 = xor i1 %160, true
  %162 = select i1 %159, i1 %161, i1 false
  br i1 %162, label %163, label %164, !prof !15

163:                                              ; preds = %157
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %164

164:                                              ; preds = %163, %157
  %165 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 26, ptr noundef nonnull %12) #39
  %166 = and i32 %165, 32768
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 26, ptr noundef nonnull %12) #39
  br label %170

170:                                              ; preds = %168, %164
  %171 = phi i32 [ %169, %168 ], [ %165, %164 ]
  %172 = and i32 %171, -32769
  %173 = icmp sgt i32 %172, 1
  %174 = sub i32 1, %172
  %175 = select i1 %173, i32 %174, i32 0
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %198

177:                                              ; preds = %170
  %178 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %179 = call fastcc i32 @__netdev_adjacent_dev_insert(ptr noundef %0, ptr noundef %1, ptr noundef %178, ptr noundef %3, i1 noundef zeroext %2) #39
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %198

181:                                              ; preds = %177
  %182 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13, i32 1
  %183 = call fastcc i32 @__netdev_adjacent_dev_insert(ptr noundef %1, ptr noundef %0, ptr noundef %182, ptr noundef %3, i1 noundef zeroext false) #39
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %186, label %185

185:                                              ; preds = %181
  call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %0, ptr noundef %1, ptr noundef %178) #39
  br label %198

186:                                              ; preds = %181
  %187 = call fastcc i32 @call_netdevice_notifiers_info(i32 noundef 21, ptr noundef nonnull %12)
  %188 = and i32 %187, -32769
  %189 = icmp sgt i32 %188, 1
  %190 = sub i32 1, %188
  %191 = select i1 %189, i32 %190, i32 0
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %197

193:                                              ; preds = %186
  %194 = call fastcc i32 @__netdev_update_upper_level(ptr noundef %0, ptr noundef null)
  call fastcc void @__netdev_walk_all_lower_dev(ptr noundef %0)
  %195 = call i32 @__netdev_update_lower_level(ptr noundef %1, ptr noundef %5)
  %196 = call fastcc i32 @__netdev_walk_all_upper_dev(ptr noundef %1, ptr noundef nonnull @__netdev_update_lower_level, ptr noundef %5)
  br label %198

197:                                              ; preds = %186
  call fastcc void @__netdev_adjacent_dev_unlink_neighbour(ptr noundef %0, ptr noundef %1)
  br label %198

198:                                              ; preds = %197, %193, %185, %177, %170, %154, %131, %75, %74, %26
  %199 = phi i32 [ %156, %154 ], [ %191, %197 ], [ 0, %193 ], [ -16, %26 ], [ -31, %75 ], [ %175, %170 ], [ -16, %74 ], [ -17, %131 ], [ %179, %177 ], [ %183, %185 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %12) #39
  ret i32 %199
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_master_upper_dev_link(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #1 {
  %6 = alloca %struct.netdev_nested_priv, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  %7 = load i64, ptr @__const.netdev_master_upper_dev_link.priv, align 8
  store i64 %7, ptr %6, align 8
  %8 = call fastcc i32 @__netdev_upper_dev_link(ptr noundef %0, ptr noundef %1, i1 noundef zeroext true, ptr noundef %2, ptr noundef %3, ptr noundef nonnull %6, ptr noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  ret i32 %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_upper_dev_unlink(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.netdev_nested_priv, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call fastcc void @__netdev_upper_dev_unlink(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__netdev_upper_dev_unlink(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readnone %2) unnamed_addr #1 {
  %4 = alloca [9 x ptr], align 4
  %5 = alloca [9 x ptr], align 4
  %6 = alloca [9 x ptr], align 4
  %7 = alloca [9 x ptr], align 4
  %8 = alloca %struct.netdev_notifier_changeupper_info, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %8) #39
  %9 = getelementptr inbounds i8, ptr %8, i32 12
  store i32 0, ptr %9, align 4, !annotation !21
  store ptr %0, ptr %8, align 4
  %10 = getelementptr inbounds %struct.netdev_notifier_info, ptr %8, i32 0, i32 1
  store ptr null, ptr %10, align 4
  %11 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %8, i32 0, i32 1
  store ptr %1, ptr %11, align 4
  %12 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %8, i32 0, i32 2
  %13 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %8, i32 0, i32 4
  store ptr null, ptr %13, align 4
  %14 = tail call i32 @rtnl_is_locked() #39
  %15 = icmp eq i32 %14, 0
  %16 = load i1, ptr @__netdev_upper_dev_unlink.__already_done, align 1
  %17 = xor i1 %16, true
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %19, label %20, !prof !15

19:                                               ; preds = %3
  store i1 true, ptr @__netdev_upper_dev_unlink.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 7574, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 7574) #39
  br label %20

20:                                               ; preds = %19, %3
  %21 = tail call i32 @rtnl_is_locked() #39
  %22 = icmp eq i32 %21, 0
  %23 = load i1, ptr @netdev_master_upper_dev_get.__already_done, align 1
  %24 = xor i1 %23, true
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %27, !prof !15

26:                                               ; preds = %20
  store i1 true, ptr @netdev_master_upper_dev_get.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6654, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6654) #39
  br label %27

27:                                               ; preds = %26, %20
  %28 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %29 = load volatile ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, %28
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = getelementptr i8, ptr %29, i32 -8
  %33 = load i8, ptr %32, align 4, !range !28
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %38, label %35, !prof !15

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %29, i32 -12
  %37 = load ptr, ptr %36, align 4
  br label %38

38:                                               ; preds = %35, %31, %27
  %39 = phi ptr [ %37, %35 ], [ null, %27 ], [ null, %31 ]
  %40 = icmp eq ptr %39, %1
  %41 = zext i1 %40 to i8
  store i8 %41, ptr %12, align 4
  %42 = tail call i32 @rtnl_is_locked() #39
  %43 = icmp eq i32 %42, 0
  %44 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %45 = xor i1 %44, true
  %46 = select i1 %43, i1 %45, i1 false
  br i1 %46, label %47, label %48, !prof !15

47:                                               ; preds = %38
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %48

48:                                               ; preds = %47, %38
  %49 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 26, ptr noundef nonnull %8) #39
  %50 = and i32 %49, 32768
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 26, ptr noundef nonnull %8) #39
  br label %54

54:                                               ; preds = %52, %48
  %55 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13, i32 1
  call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %0, ptr noundef %1, ptr noundef %28) #39
  call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %1, ptr noundef %0, ptr noundef %55) #39
  %56 = call i32 @rtnl_is_locked() #39
  %57 = icmp eq i32 %56, 0
  %58 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %59 = xor i1 %58, true
  %60 = select i1 %57, i1 %59, i1 false
  br i1 %60, label %61, label %62, !prof !15

61:                                               ; preds = %54
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %62

62:                                               ; preds = %61, %54
  %63 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 21, ptr noundef nonnull %8) #39
  %64 = and i32 %63, 32768
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 21, ptr noundef nonnull %8) #39
  br label %68

68:                                               ; preds = %66, %62
  %69 = load ptr, ptr %28, align 4
  %70 = icmp eq ptr %69, %28
  br i1 %70, label %94, label %71

71:                                               ; preds = %68
  %72 = getelementptr i8, ptr %69, i32 -12
  %73 = load ptr, ptr %72, align 4
  %74 = icmp eq ptr %73, null
  br i1 %74, label %94, label %75

75:                                               ; preds = %90, %71
  %76 = phi i8 [ %87, %90 ], [ 0, %71 ]
  %77 = phi ptr [ %92, %90 ], [ %73, %71 ]
  %78 = phi ptr [ %88, %90 ], [ %69, %71 ]
  %79 = getelementptr i8, ptr %78, i32 -7
  %80 = load i8, ptr %79, align 1, !range !28
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 52
  %84 = load i8, ptr %83, align 2
  %85 = call i8 @llvm.umax.i8(i8 %76, i8 %84) #39
  br label %86

86:                                               ; preds = %82, %75
  %87 = phi i8 [ %76, %75 ], [ %85, %82 ]
  %88 = load ptr, ptr %78, align 4
  %89 = icmp eq ptr %88, %28
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = getelementptr i8, ptr %88, i32 -12
  %92 = load ptr, ptr %91, align 4
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %75

94:                                               ; preds = %90, %86, %71, %68
  %95 = phi i8 [ 0, %71 ], [ 0, %68 ], [ %87, %90 ], [ %87, %86 ]
  %96 = add i8 %95, 1
  %97 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 52
  store i8 %96, ptr %97, align 2
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %6) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %6, i8 0, i32 36, i1 false) #39, !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %7) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %7, i8 0, i32 36, i1 false) #39, !annotation !21
  %98 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  br label %99

99:                                               ; preds = %162, %94
  %100 = phi ptr [ %98, %94 ], [ %163, %162 ]
  %101 = phi ptr [ %0, %94 ], [ %164, %162 ]
  %102 = phi i32 [ 0, %94 ], [ %165, %162 ]
  %103 = icmp eq ptr %101, %0
  br i1 %103, label %135, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.net_device, ptr %101, i32 0, i32 13
  %106 = load ptr, ptr %105, align 4
  %107 = icmp eq ptr %106, %105
  br i1 %107, label %131, label %108

108:                                              ; preds = %104
  %109 = getelementptr i8, ptr %106, i32 -12
  %110 = load ptr, ptr %109, align 4
  %111 = icmp eq ptr %110, null
  br i1 %111, label %131, label %112

112:                                              ; preds = %127, %108
  %113 = phi i8 [ %124, %127 ], [ 0, %108 ]
  %114 = phi ptr [ %129, %127 ], [ %110, %108 ]
  %115 = phi ptr [ %125, %127 ], [ %106, %108 ]
  %116 = getelementptr i8, ptr %115, i32 -7
  %117 = load i8, ptr %116, align 1, !range !28
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %112
  %120 = getelementptr inbounds %struct.net_device, ptr %114, i32 0, i32 52
  %121 = load i8, ptr %120, align 2
  %122 = call i8 @llvm.umax.i8(i8 %113, i8 %121) #39
  br label %123

123:                                              ; preds = %119, %112
  %124 = phi i8 [ %113, %112 ], [ %122, %119 ]
  %125 = load ptr, ptr %115, align 4
  %126 = icmp eq ptr %125, %105
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = getelementptr i8, ptr %125, i32 -12
  %129 = load ptr, ptr %128, align 4
  %130 = icmp eq ptr %129, null
  br i1 %130, label %131, label %112

131:                                              ; preds = %127, %123, %108, %104
  %132 = phi i8 [ 0, %108 ], [ 0, %104 ], [ %124, %123 ], [ %124, %127 ]
  %133 = add i8 %132, 1
  %134 = getelementptr inbounds %struct.net_device, ptr %101, i32 0, i32 52
  store i8 %133, ptr %134, align 2
  br label %135

135:                                              ; preds = %131, %99
  %136 = getelementptr inbounds %struct.net_device, ptr %101, i32 0, i32 13, i32 1
  br label %137

137:                                              ; preds = %145, %135
  %138 = phi ptr [ %100, %135 ], [ %139, %145 ]
  %139 = load ptr, ptr %138, align 4
  %140 = icmp eq ptr %139, %136
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr i8, ptr %139, i32 -12
  %143 = load ptr, ptr %142, align 4
  %144 = icmp eq ptr %143, null
  br i1 %144, label %154, label %145

145:                                              ; preds = %141
  %146 = getelementptr i8, ptr %139, i32 -7
  %147 = load i8, ptr %146, align 1, !range !28
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %137

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.net_device, ptr %143, i32 0, i32 13, i32 1
  %151 = getelementptr [9 x ptr], ptr %6, i32 0, i32 %102
  store ptr %101, ptr %151, align 4
  %152 = add i32 %102, 1
  %153 = getelementptr [9 x ptr], ptr %7, i32 0, i32 %102
  store ptr %139, ptr %153, align 4
  br label %162

154:                                              ; preds = %141, %137
  %155 = icmp eq i32 %102, 0
  br i1 %155, label %166, label %156

156:                                              ; preds = %154
  %157 = add i32 %102, -1
  %158 = getelementptr [9 x ptr], ptr %6, i32 0, i32 %157
  %159 = load ptr, ptr %158, align 4
  %160 = getelementptr [9 x ptr], ptr %7, i32 0, i32 %157
  %161 = load ptr, ptr %160, align 4
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi ptr [ %150, %149 ], [ %161, %156 ]
  %164 = phi ptr [ %143, %149 ], [ %159, %156 ]
  %165 = phi i32 [ %152, %149 ], [ %157, %156 ]
  br label %99

166:                                              ; preds = %154
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %7) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %6) #39
  %167 = load ptr, ptr %55, align 4
  %168 = icmp eq ptr %167, %55
  br i1 %168, label %192, label %169

169:                                              ; preds = %166
  %170 = getelementptr i8, ptr %167, i32 -12
  %171 = load ptr, ptr %170, align 4
  %172 = icmp eq ptr %171, null
  br i1 %172, label %192, label %173

173:                                              ; preds = %188, %169
  %174 = phi i8 [ %185, %188 ], [ 0, %169 ]
  %175 = phi ptr [ %190, %188 ], [ %171, %169 ]
  %176 = phi ptr [ %186, %188 ], [ %167, %169 ]
  %177 = getelementptr i8, ptr %176, i32 -7
  %178 = load i8, ptr %177, align 1, !range !28
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %184

180:                                              ; preds = %173
  %181 = getelementptr inbounds %struct.net_device, ptr %175, i32 0, i32 53
  %182 = load i8, ptr %181, align 1
  %183 = call i8 @llvm.umax.i8(i8 %174, i8 %182) #39
  br label %184

184:                                              ; preds = %180, %173
  %185 = phi i8 [ %174, %173 ], [ %183, %180 ]
  %186 = load ptr, ptr %176, align 4
  %187 = icmp eq ptr %186, %55
  br i1 %187, label %192, label %188

188:                                              ; preds = %184
  %189 = getelementptr i8, ptr %186, i32 -12
  %190 = load ptr, ptr %189, align 4
  %191 = icmp eq ptr %190, null
  br i1 %191, label %192, label %173

192:                                              ; preds = %188, %184, %169, %166
  %193 = phi i8 [ 0, %169 ], [ 0, %166 ], [ %185, %188 ], [ %185, %184 ]
  %194 = add i8 %193, 1
  %195 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 53
  store i8 %194, ptr %195, align 1
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %4, i8 0, i32 36, i1 false) #39, !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %5, i8 0, i32 36, i1 false) #39, !annotation !21
  %196 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13
  br label %197

197:                                              ; preds = %260, %192
  %198 = phi ptr [ %196, %192 ], [ %261, %260 ]
  %199 = phi ptr [ %1, %192 ], [ %262, %260 ]
  %200 = phi i32 [ 0, %192 ], [ %263, %260 ]
  %201 = icmp eq ptr %199, %1
  br i1 %201, label %233, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %struct.net_device, ptr %199, i32 0, i32 13, i32 1
  %204 = load ptr, ptr %203, align 4
  %205 = icmp eq ptr %204, %203
  br i1 %205, label %229, label %206

206:                                              ; preds = %202
  %207 = getelementptr i8, ptr %204, i32 -12
  %208 = load ptr, ptr %207, align 4
  %209 = icmp eq ptr %208, null
  br i1 %209, label %229, label %210

210:                                              ; preds = %225, %206
  %211 = phi i8 [ %222, %225 ], [ 0, %206 ]
  %212 = phi ptr [ %227, %225 ], [ %208, %206 ]
  %213 = phi ptr [ %223, %225 ], [ %204, %206 ]
  %214 = getelementptr i8, ptr %213, i32 -7
  %215 = load i8, ptr %214, align 1, !range !28
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %221

217:                                              ; preds = %210
  %218 = getelementptr inbounds %struct.net_device, ptr %212, i32 0, i32 53
  %219 = load i8, ptr %218, align 1
  %220 = call i8 @llvm.umax.i8(i8 %211, i8 %219) #39
  br label %221

221:                                              ; preds = %217, %210
  %222 = phi i8 [ %211, %210 ], [ %220, %217 ]
  %223 = load ptr, ptr %213, align 4
  %224 = icmp eq ptr %223, %203
  br i1 %224, label %229, label %225

225:                                              ; preds = %221
  %226 = getelementptr i8, ptr %223, i32 -12
  %227 = load ptr, ptr %226, align 4
  %228 = icmp eq ptr %227, null
  br i1 %228, label %229, label %210

229:                                              ; preds = %225, %221, %206, %202
  %230 = phi i8 [ 0, %206 ], [ 0, %202 ], [ %222, %225 ], [ %222, %221 ]
  %231 = add i8 %230, 1
  %232 = getelementptr inbounds %struct.net_device, ptr %199, i32 0, i32 53
  store i8 %231, ptr %232, align 1
  br label %233

233:                                              ; preds = %229, %197
  %234 = getelementptr inbounds %struct.net_device, ptr %199, i32 0, i32 13
  br label %235

235:                                              ; preds = %243, %233
  %236 = phi ptr [ %198, %233 ], [ %237, %243 ]
  %237 = load ptr, ptr %236, align 4
  %238 = icmp eq ptr %237, %234
  br i1 %238, label %252, label %239

239:                                              ; preds = %235
  %240 = getelementptr i8, ptr %237, i32 -12
  %241 = load ptr, ptr %240, align 4
  %242 = icmp eq ptr %241, null
  br i1 %242, label %252, label %243

243:                                              ; preds = %239
  %244 = getelementptr i8, ptr %237, i32 -7
  %245 = load i8, ptr %244, align 1, !range !28
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %235

247:                                              ; preds = %243
  %248 = getelementptr inbounds %struct.net_device, ptr %241, i32 0, i32 13
  %249 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %200
  store ptr %199, ptr %249, align 4
  %250 = add i32 %200, 1
  %251 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %200
  store ptr %237, ptr %251, align 4
  br label %260

252:                                              ; preds = %239, %235
  %253 = icmp eq i32 %200, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %252
  %255 = add i32 %200, -1
  %256 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %255
  %257 = load ptr, ptr %256, align 4
  %258 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %255
  %259 = load ptr, ptr %258, align 4
  br label %260

260:                                              ; preds = %254, %247
  %261 = phi ptr [ %248, %247 ], [ %259, %254 ]
  %262 = phi ptr [ %241, %247 ], [ %257, %254 ]
  %263 = phi i32 [ %250, %247 ], [ %255, %254 ]
  br label %197

264:                                              ; preds = %252
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %8) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @netdev_adjacent_change_prepare(ptr noundef readonly %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #1 {
  %5 = alloca %struct.netdev_nested_priv, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store i64 0, ptr %5, align 8
  %6 = icmp eq ptr %1, null
  br i1 %6, label %73, label %7

7:                                                ; preds = %4
  %8 = icmp eq ptr %0, null
  %9 = icmp eq ptr %1, %0
  %10 = or i1 %8, %9
  br i1 %10, label %44, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 13, i32 1
  br label %13

13:                                               ; preds = %17, %11
  %14 = phi ptr [ %12, %11 ], [ %15, %17 ]
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %12
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = getelementptr i8, ptr %15, i32 -12
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, %0
  br i1 %20, label %21, label %13

21:                                               ; preds = %17
  %22 = getelementptr i8, ptr %15, i32 -12
  %23 = icmp eq ptr %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = getelementptr i8, ptr %15, i32 -7
  store i8 1, ptr %25, align 1
  br label %26

26:                                               ; preds = %24, %21, %13
  %27 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %28

28:                                               ; preds = %32, %26
  %29 = phi ptr [ %27, %26 ], [ %30, %32 ]
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, %27
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  %33 = getelementptr i8, ptr %30, i32 -12
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, %2
  br i1 %35, label %36, label %28

36:                                               ; preds = %32
  %37 = getelementptr i8, ptr %30, i32 -12
  %38 = icmp eq ptr %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = getelementptr i8, ptr %30, i32 -7
  store i8 1, ptr %40, align 1
  br label %41

41:                                               ; preds = %39, %36, %28
  %42 = call fastcc i32 @__netdev_upper_dev_link(ptr noundef nonnull %1, ptr noundef %2, i1 noundef zeroext false, ptr noundef null, ptr noundef null, ptr noundef nonnull %5, ptr noundef %3)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %73, label %46

44:                                               ; preds = %7
  %45 = call fastcc i32 @__netdev_upper_dev_link(ptr noundef nonnull %1, ptr noundef %2, i1 noundef zeroext false, ptr noundef null, ptr noundef null, ptr noundef nonnull %5, ptr noundef %3)
  br label %73

46:                                               ; preds = %50, %41
  %47 = phi ptr [ %48, %50 ], [ %12, %41 ]
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, %12
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = getelementptr i8, ptr %48, i32 -12
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, %0
  br i1 %53, label %54, label %46

54:                                               ; preds = %50
  %55 = getelementptr i8, ptr %48, i32 -12
  %56 = icmp eq ptr %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  %58 = getelementptr i8, ptr %48, i32 -7
  store i8 0, ptr %58, align 1
  br label %59

59:                                               ; preds = %57, %54, %46
  br label %60

60:                                               ; preds = %64, %59
  %61 = phi ptr [ %62, %64 ], [ %27, %59 ]
  %62 = load ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, %27
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = getelementptr i8, ptr %62, i32 -12
  %66 = load ptr, ptr %65, align 4
  %67 = icmp eq ptr %66, %2
  br i1 %67, label %68, label %60

68:                                               ; preds = %64
  %69 = getelementptr i8, ptr %62, i32 -12
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = getelementptr i8, ptr %62, i32 -7
  store i8 0, ptr %72, align 1
  br label %73

73:                                               ; preds = %71, %68, %60, %44, %41, %4
  %74 = phi i32 [ 0, %4 ], [ 0, %41 ], [ %42, %68 ], [ %42, %71 ], [ %45, %44 ], [ %42, %60 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  ret i32 %74
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_adjacent_change_commit(ptr noundef %0, ptr noundef readnone %1, ptr noundef %2) #1 {
  %4 = alloca %struct.netdev_nested_priv, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  %5 = icmp eq ptr %1, null
  %6 = icmp eq ptr %0, null
  %7 = or i1 %6, %5
  %8 = icmp eq ptr %1, %0
  %9 = or i1 %8, %7
  br i1 %9, label %41, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 13, i32 1
  br label %12

12:                                               ; preds = %16, %10
  %13 = phi ptr [ %11, %10 ], [ %14, %16 ]
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = getelementptr i8, ptr %14, i32 -12
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %0
  br i1 %19, label %20, label %12

20:                                               ; preds = %16
  %21 = getelementptr i8, ptr %14, i32 -12
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = getelementptr i8, ptr %14, i32 -7
  store i8 0, ptr %24, align 1
  br label %25

25:                                               ; preds = %23, %20, %12
  %26 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %27

27:                                               ; preds = %31, %25
  %28 = phi ptr [ %26, %25 ], [ %29, %31 ]
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, %26
  br i1 %30, label %40, label %31

31:                                               ; preds = %27
  %32 = getelementptr i8, ptr %29, i32 -12
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, %2
  br i1 %34, label %35, label %27

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %29, i32 -12
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = getelementptr i8, ptr %29, i32 -7
  store i8 0, ptr %39, align 1
  br label %40

40:                                               ; preds = %38, %35, %27
  call fastcc void @__netdev_upper_dev_unlink(ptr noundef nonnull %0, ptr noundef %2, ptr noundef nonnull %4)
  br label %41

41:                                               ; preds = %40, %3
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_adjacent_change_abort(ptr noundef readonly %0, ptr noundef %1, ptr noundef %2) #1 {
  %4 = alloca %struct.netdev_nested_priv, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  %5 = icmp eq ptr %1, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %3
  %7 = icmp eq ptr %0, null
  %8 = icmp eq ptr %1, %0
  %9 = or i1 %7, %8
  br i1 %9, label %40, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 13, i32 1
  br label %12

12:                                               ; preds = %16, %10
  %13 = phi ptr [ %11, %10 ], [ %14, %16 ]
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = getelementptr i8, ptr %14, i32 -12
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %0
  br i1 %19, label %20, label %12

20:                                               ; preds = %16
  %21 = getelementptr i8, ptr %14, i32 -12
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = getelementptr i8, ptr %14, i32 -7
  store i8 0, ptr %24, align 1
  br label %25

25:                                               ; preds = %23, %20, %12
  %26 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %27

27:                                               ; preds = %31, %25
  %28 = phi ptr [ %26, %25 ], [ %29, %31 ]
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, %26
  br i1 %30, label %40, label %31

31:                                               ; preds = %27
  %32 = getelementptr i8, ptr %29, i32 -12
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, %2
  br i1 %34, label %35, label %27

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %29, i32 -12
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = getelementptr i8, ptr %29, i32 -7
  store i8 0, ptr %39, align 1
  br label %40

40:                                               ; preds = %38, %35, %27, %6
  call fastcc void @__netdev_upper_dev_unlink(ptr noundef nonnull %1, ptr noundef %2, ptr noundef nonnull %4)
  br label %41

41:                                               ; preds = %40, %3
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_bonding_info_change(ptr noundef %0, ptr nocapture noundef readonly %1) #1 {
  %3 = alloca %struct.netdev_notifier_bonding_info, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #39
  %4 = getelementptr inbounds i8, ptr %3, i32 4
  store i32 0, ptr %4, align 4
  store ptr %0, ptr %3, align 4
  %5 = getelementptr inbounds %struct.netdev_notifier_bonding_info, ptr %3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(40) %5, ptr noundef align 4 dereferenceable(40) %1, i32 40, i1 false)
  %6 = tail call i32 @rtnl_is_locked() #39
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %2
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %12

12:                                               ; preds = %11, %2
  %13 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 25, ptr noundef nonnull %3) #39
  %14 = and i32 %13, 32768
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 25, ptr noundef nonnull %3) #39
  br label %18

18:                                               ; preds = %16, %12
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #39
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @netdev_get_xmit_slave(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #1 {
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.net_device_ops, ptr %5, i32 0, i32 43
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call ptr %7(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #39
  br label %11

11:                                               ; preds = %9, %3
  %12 = phi ptr [ %10, %9 ], [ null, %3 ]
  ret ptr %12
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @netdev_sk_get_lowest_dev(ptr noundef %0, ptr noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 44
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = tail call ptr %6(ptr noundef %0, ptr noundef %1) #39
  %10 = icmp eq ptr %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %18, %8
  %12 = phi ptr [ %19, %18 ], [ %9, %8 ]
  %13 = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 16
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.net_device_ops, ptr %14, i32 0, i32 44
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = tail call ptr %16(ptr noundef nonnull %12, ptr noundef %1) #39
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %11

21:                                               ; preds = %18, %11, %8, %2
  %22 = phi ptr [ %0, %8 ], [ %0, %2 ], [ %12, %18 ], [ %12, %11 ]
  ret ptr %22
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local ptr @netdev_lower_dev_get_private(ptr noundef readonly %0, ptr noundef readnone %1) #7 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  br label %6

6:                                                ; preds = %10, %4
  %7 = phi ptr [ %5, %4 ], [ %8, %10 ]
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %5
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr i8, ptr %8, i32 -12
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, %1
  br i1 %13, label %14, label %6

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %8, i32 -12
  %16 = icmp eq ptr %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = getelementptr i8, ptr %8, i32 -4
  %19 = load ptr, ptr %18, align 4
  br label %20

20:                                               ; preds = %17, %14, %6, %2
  %21 = phi ptr [ %19, %17 ], [ null, %2 ], [ null, %14 ], [ null, %6 ]
  ret ptr %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_lower_state_changed(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.netdev_notifier_changelowerstate_info, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 4
  %4 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr null, ptr %4, align 4
  %5 = getelementptr inbounds %struct.netdev_notifier_changelowerstate_info, ptr %3, i32 0, i32 1
  %6 = tail call i32 @rtnl_is_locked() #39
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @netdev_lower_state_changed.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %2
  store i1 true, ptr @netdev_lower_state_changed.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 7892, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 7892) #39
  br label %12

12:                                               ; preds = %11, %2
  store ptr %1, ptr %5, align 4
  %13 = tail call i32 @rtnl_is_locked() #39
  %14 = icmp eq i32 %13, 0
  %15 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %16 = xor i1 %15, true
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %19, !prof !15

18:                                               ; preds = %12
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %19

19:                                               ; preds = %18, %12
  %20 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 27, ptr noundef nonnull %3) #39
  %21 = and i32 %20, 32768
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 27, ptr noundef nonnull %3) #39
  br label %25

25:                                               ; preds = %23, %19
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_promiscuity(ptr noundef %0, i32 noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %4 = load i32, ptr %3, align 8
  %5 = tail call fastcc i32 @__dev_set_promiscuity(ptr noundef %0, i32 noundef %1, i1 noundef zeroext true)
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = load i32, ptr %3, align 8
  %9 = icmp eq i32 %8, %4
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @dev_set_rx_mode(ptr noundef %0)
  br label %11

11:                                               ; preds = %10, %7, %2
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__dev_set_promiscuity(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %5 = load i32, ptr %4, align 8
  %6 = tail call i32 @rtnl_is_locked() #39
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @__dev_set_promiscuity.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %3
  store i1 true, ptr @__dev_set_promiscuity.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 7913, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 7913) #39
  br label %12

12:                                               ; preds = %11, %3
  %13 = load i32, ptr %4, align 8
  %14 = or i32 %13, 256
  store i32 %14, ptr %4, align 8
  %15 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 64
  %16 = load i32, ptr %15, align 64
  %17 = add i32 %16, %1
  store i32 %17, ptr %15, align 64
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = icmp slt i32 %1, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = and i32 %13, -257
  store i32 %22, ptr %4, align 8
  br label %24

23:                                               ; preds = %19
  store i32 %16, ptr %15, align 64
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.102) #43
  br label %40

24:                                               ; preds = %21, %12
  %25 = phi i32 [ %22, %21 ], [ %14, %12 ]
  %26 = icmp eq i32 %25, %5
  br i1 %26, label %38, label %27

27:                                               ; preds = %24
  %28 = and i32 %25, 256
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, ptr @.str.105, ptr @.str.104
  %31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.103, ptr noundef %0, ptr noundef nonnull %30) #42
  %32 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %struct.net_device_ops, ptr %33, i32 0, i32 7
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %27
  tail call void %35(ptr noundef %0, i32 noundef 256) #39
  br label %38

38:                                               ; preds = %37, %27, %24
  br i1 %2, label %39, label %40

39:                                               ; preds = %38
  tail call void @__dev_notify_flags(ptr noundef %0, i32 noundef %5, i32 noundef 256)
  br label %40

40:                                               ; preds = %39, %38, %23
  %41 = phi i32 [ -75, %23 ], [ 0, %39 ], [ 0, %38 ]
  ret i32 %41
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_set_rx_mode(ptr noundef %0) local_unnamed_addr #1 {
  %2 = tail call ptr @llvm.thread.pointer() #39
  %3 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %4 = load volatile i32, ptr %3, align 4
  %5 = add i32 %4, 512
  store volatile i32 %5, ptr %3, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 58
  tail call void @_raw_spin_lock(ptr noundef %6) #39
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %10 = load i32, ptr %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %15 = load volatile i32, ptr %14, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 15
  %20 = load i64, ptr %19, align 16
  %21 = and i64 %20, 4096
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 60, i32 1
  %25 = load i32, ptr %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 66
  %28 = load i8, ptr %27, align 8, !range !28
  %29 = icmp eq i8 %28, 0
  br i1 %26, label %31, label %30

30:                                               ; preds = %23
  br i1 %29, label %32, label %36

31:                                               ; preds = %23
  br i1 %29, label %36, label %32

32:                                               ; preds = %31, %30
  %33 = phi i32 [ 1, %30 ], [ -1, %31 ]
  %34 = phi i8 [ 1, %30 ], [ 0, %31 ]
  %35 = tail call fastcc i32 @__dev_set_promiscuity(ptr noundef %0, i32 noundef %33, i1 noundef zeroext false) #39
  store i8 %34, ptr %27, align 8
  br label %36

36:                                               ; preds = %32, %31, %30, %18
  %37 = getelementptr inbounds %struct.net_device_ops, ptr %8, i32 0, i32 8
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void %38(ptr noundef %0) #39
  br label %41

41:                                               ; preds = %40, %36, %13, %1
  tail call void @_raw_spin_unlock_bh(ptr noundef %6) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_allmulti(ptr noundef %0, i32 noundef %1) #1 {
  %3 = tail call fastcc i32 @__dev_set_allmulti(ptr noundef %0, i32 noundef %1, i1 noundef zeroext true)
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__dev_set_allmulti(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %5 = load i32, ptr %4, align 8
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 18
  %7 = load i16, ptr %6, align 64
  %8 = tail call i32 @rtnl_is_locked() #39
  %9 = icmp eq i32 %8, 0
  %10 = load i1, ptr @__dev_set_allmulti.__already_done, align 1
  %11 = xor i1 %10, true
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %13, label %14, !prof !15

13:                                               ; preds = %3
  store i1 true, ptr @__dev_set_allmulti.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 7983, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 7983) #39
  br label %14

14:                                               ; preds = %13, %3
  %15 = load i32, ptr %4, align 8
  %16 = or i32 %15, 512
  store i32 %16, ptr %4, align 8
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 65
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, %1
  store i32 %19, ptr %17, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = icmp slt i32 %1, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = and i32 %15, -513
  store i32 %24, ptr %4, align 8
  br label %26

25:                                               ; preds = %21
  store i32 %18, ptr %17, align 4
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.106) #43
  br label %41

26:                                               ; preds = %23, %14
  %27 = phi i32 [ %24, %23 ], [ %16, %14 ]
  %28 = icmp eq i32 %27, %5
  br i1 %28, label %41, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %struct.net_device_ops, ptr %31, i32 0, i32 7
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  tail call void %33(ptr noundef %0, i32 noundef 512) #39
  br label %36

36:                                               ; preds = %35, %29
  tail call void @dev_set_rx_mode(ptr noundef %0)
  br i1 %2, label %37, label %41

37:                                               ; preds = %36
  %38 = load i16, ptr %6, align 64
  %39 = xor i16 %38, %7
  %40 = zext i16 %39 to i32
  tail call void @__dev_notify_flags(ptr noundef %0, i32 noundef %5, i32 noundef %40)
  br label %41

41:                                               ; preds = %37, %36, %26, %25
  %42 = phi i32 [ -75, %25 ], [ 0, %36 ], [ 0, %37 ], [ 0, %26 ]
  ret i32 %42
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__dev_set_rx_mode(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %5 = load i32, ptr %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 15
  %15 = load i64, ptr %14, align 16
  %16 = and i64 %15, 4096
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 60, i32 1
  %20 = load i32, ptr %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 66
  %23 = load i8, ptr %22, align 8, !range !28
  %24 = icmp eq i8 %23, 0
  br i1 %21, label %26, label %25

25:                                               ; preds = %18
  br i1 %24, label %27, label %31

26:                                               ; preds = %18
  br i1 %24, label %31, label %27

27:                                               ; preds = %26, %25
  %28 = phi i32 [ 1, %25 ], [ -1, %26 ]
  %29 = phi i8 [ 1, %25 ], [ 0, %26 ]
  %30 = tail call fastcc i32 @__dev_set_promiscuity(ptr noundef %0, i32 noundef %28, i1 noundef zeroext false)
  store i8 %29, ptr %22, align 8
  br label %31

31:                                               ; preds = %27, %26, %25, %13
  %32 = getelementptr inbounds %struct.net_device_ops, ptr %3, i32 0, i32 8
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void %33(ptr noundef %0) #39
  br label %36

36:                                               ; preds = %35, %31, %8, %1
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @dev_get_flags(ptr noundef %0) #25 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %3 = load i32, ptr %2, align 8
  %4 = and i32 %3, -197441
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 18
  %6 = load i16, ptr %5, align 64
  %7 = and i16 %6, 768
  %8 = zext i16 %7 to i32
  %9 = or i32 %4, %8
  %10 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 45
  %16 = load i8, ptr %15, align 4
  %17 = icmp eq i8 %16, 6
  %18 = icmp eq i8 %16, 0
  %19 = or i1 %17, %18
  %20 = or i32 %9, 64
  %21 = select i1 %19, i32 %20, i32 %9
  %22 = load volatile i32, ptr %10, align 4
  %23 = shl i32 %22, 14
  %24 = and i32 %23, 65536
  %25 = or i32 %24, %21
  %26 = load volatile i32, ptr %10, align 4
  %27 = shl i32 %26, 13
  %28 = and i32 %27, 131072
  %29 = or i32 %25, %28
  %30 = xor i32 %29, 65536
  br label %31

31:                                               ; preds = %14, %1
  %32 = phi i32 [ %9, %1 ], [ %30, %14 ]
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__dev_change_flags(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = alloca %struct.list_head, align 8
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %6 = load i32, ptr %5, align 8
  %7 = tail call i32 @rtnl_is_locked() #39
  %8 = icmp eq i32 %7, 0
  %9 = load i1, ptr @__dev_change_flags.__already_done, align 1
  %10 = xor i1 %9, true
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %13, !prof !15

12:                                               ; preds = %3
  store i1 true, ptr @__dev_change_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8107, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 8107) #39
  br label %13

13:                                               ; preds = %12, %3
  %14 = and i32 %1, 61604
  %15 = load i32, ptr %5, align 8
  %16 = and i32 %15, 462683
  %17 = or i32 %16, %14
  store i32 %17, ptr %5, align 8
  %18 = xor i32 %6, %1
  %19 = and i32 %18, 4096
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.net_device_ops, ptr %23, i32 0, i32 7
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void %25(ptr noundef %0, i32 noundef 4096) #39
  br label %28

28:                                               ; preds = %27, %21, %13
  tail call void @dev_set_rx_mode(ptr noundef %0)
  %29 = and i32 %18, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %28
  %32 = and i32 %6, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  %35 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %36 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 10
  store ptr %36, ptr %35, align 4
  store ptr %4, ptr %36, align 4
  %37 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 10, i32 1
  store ptr %4, ptr %37, align 4
  store volatile ptr %36, ptr %4, align 8
  call fastcc void @__dev_close_many(ptr noundef nonnull %4) #39
  %38 = load ptr, ptr %35, align 4
  %39 = load ptr, ptr %4, align 8
  %40 = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  store ptr %38, ptr %40, align 4
  store volatile ptr %39, ptr %38, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  br label %43

41:                                               ; preds = %31
  %42 = tail call fastcc i32 @__dev_open(ptr noundef %0, ptr noundef %2)
  br label %43

43:                                               ; preds = %41, %34, %28
  %44 = phi i32 [ 0, %34 ], [ %42, %41 ], [ 0, %28 ]
  %45 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 18
  %46 = load i16, ptr %45, align 64
  %47 = zext i16 %46 to i32
  %48 = xor i32 %47, %1
  %49 = and i32 %48, 256
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %63, label %51

51:                                               ; preds = %43
  %52 = and i32 %1, 256
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i32 -1, i32 1
  %55 = load i32, ptr %5, align 8
  %56 = xor i16 %46, 256
  store i16 %56, ptr %45, align 64
  %57 = call fastcc i32 @__dev_set_promiscuity(ptr noundef %0, i32 noundef %54, i1 noundef zeroext false)
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %63

59:                                               ; preds = %51
  %60 = load i32, ptr %5, align 8
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  call void @dev_set_rx_mode(ptr noundef %0)
  br label %63

63:                                               ; preds = %62, %59, %51, %43
  %64 = load i16, ptr %45, align 64
  %65 = zext i16 %64 to i32
  %66 = xor i32 %65, %1
  %67 = and i32 %66, 512
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = and i32 %1, 512
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 -1, i32 1
  %73 = xor i16 %64, 512
  store i16 %73, ptr %45, align 64
  %74 = call fastcc i32 @__dev_set_allmulti(ptr noundef %0, i32 noundef %72, i1 noundef zeroext false)
  br label %75

75:                                               ; preds = %69, %63
  ret i32 %44
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__dev_notify_flags(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca %struct.netdev_notifier_info, align 8
  %5 = alloca %struct.netdev_notifier_info, align 8
  %6 = alloca %struct.netdev_notifier_change_info, align 4
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %8 = load i32, ptr %7, align 8
  %9 = xor i32 %8, %1
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %0, i32 noundef %2, i32 noundef 2592) #39
  br label %12

12:                                               ; preds = %11, %3
  %13 = and i32 %9, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %12
  %16 = load i32, ptr %7, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store ptr %0, ptr %5, align 8
  %20 = getelementptr inbounds %struct.netdev_notifier_info, ptr %5, i32 0, i32 1
  store ptr null, ptr %20, align 4
  %21 = tail call i32 @rtnl_is_locked() #39
  %22 = icmp eq i32 %21, 0
  %23 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %24 = xor i1 %23, true
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %27, !prof !15

26:                                               ; preds = %19
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %27

27:                                               ; preds = %26, %19
  %28 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 1, ptr noundef nonnull %5) #39
  %29 = and i32 %28, 32768
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 1, ptr noundef nonnull %5) #39
  br label %33

33:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  br label %49

34:                                               ; preds = %15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %0, ptr %4, align 8
  %35 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  store ptr null, ptr %35, align 4
  %36 = tail call i32 @rtnl_is_locked() #39
  %37 = icmp eq i32 %36, 0
  %38 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %39 = xor i1 %38, true
  %40 = select i1 %37, i1 %39, i1 false
  br i1 %40, label %41, label %42, !prof !15

41:                                               ; preds = %34
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %42

42:                                               ; preds = %41, %34
  %43 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 2, ptr noundef nonnull %4) #39
  %44 = and i32 %43, 32768
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 2, ptr noundef nonnull %4) #39
  br label %48

48:                                               ; preds = %46, %42
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  br label %49

49:                                               ; preds = %48, %33, %12
  %50 = load i32, ptr %7, align 8
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = and i32 %9, -462684
  %54 = icmp eq i32 %53, 0
  %55 = select i1 %52, i1 true, i1 %54
  br i1 %55, label %72, label %56

56:                                               ; preds = %49
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #39
  store ptr %0, ptr %6, align 4
  %57 = getelementptr inbounds %struct.netdev_notifier_info, ptr %6, i32 0, i32 1
  store ptr null, ptr %57, align 4
  %58 = getelementptr inbounds %struct.netdev_notifier_change_info, ptr %6, i32 0, i32 1
  store i32 %9, ptr %58, align 4
  %59 = call i32 @rtnl_is_locked() #39
  %60 = icmp eq i32 %59, 0
  %61 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %62 = xor i1 %61, true
  %63 = select i1 %60, i1 %62, i1 false
  br i1 %63, label %64, label %65, !prof !15

64:                                               ; preds = %56
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %65

65:                                               ; preds = %64, %56
  %66 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 4, ptr noundef nonnull %6) #39
  %67 = and i32 %66, 32768
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 4, ptr noundef nonnull %6) #39
  br label %71

71:                                               ; preds = %69, %65
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #39
  br label %72

72:                                               ; preds = %71, %49
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_change_flags(ptr noundef %0, i32 noundef %1, ptr noundef %2) #1 {
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %5 = load i32, ptr %4, align 8
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 18
  %7 = load i16, ptr %6, align 64
  %8 = tail call i32 @__dev_change_flags(ptr noundef %0, i32 noundef %1, ptr noundef %2)
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = load i32, ptr %4, align 8
  %12 = xor i32 %11, %5
  %13 = load i16, ptr %6, align 64
  %14 = xor i16 %13, %7
  %15 = zext i16 %14 to i32
  %16 = or i32 %12, %15
  tail call void @__dev_notify_flags(ptr noundef %0, i32 noundef %5, i32 noundef %16)
  br label %17

17:                                               ; preds = %10, %3
  ret i32 %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__dev_set_mtu(ptr noundef %0, i32 noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 17
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 %6(ptr noundef %0, i32 noundef %1) #39
  br label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  store volatile i32 %1, ptr %11, align 4
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %9, %8 ], [ 0, %10 ]
  ret i32 %13
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_validate_mtu(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef writeonly %2) local_unnamed_addr #1 {
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 30
  %7 = load i32, ptr %6, align 8
  %8 = icmp ugt i32 %7, %1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5, %3
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg) #39
  %10 = icmp eq ptr %2, null
  br i1 %10, label %21, label %19

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 31
  %13 = load i32, ptr %12, align 4
  %14 = icmp ne i32 %13, 0
  %15 = icmp ult i32 %13, %1
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %11
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg.50) #39
  %18 = icmp eq ptr %2, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %17, %9
  %20 = phi ptr [ @dev_validate_mtu.__msg, %9 ], [ @dev_validate_mtu.__msg.50, %17 ]
  store ptr %20, ptr %2, align 4
  br label %21

21:                                               ; preds = %19, %17, %11, %9
  %22 = phi i32 [ -22, %9 ], [ -22, %17 ], [ 0, %11 ], [ -22, %19 ]
  ret i32 %22
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_trace_netlink_extack(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_mtu_ext(ptr noundef %0, i32 noundef %1, ptr noundef writeonly %2) local_unnamed_addr #1 {
  %4 = alloca %struct.netdev_notifier_info, align 8
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 20
  %6 = load i32, ptr %5, align 4
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %80, label %8

8:                                                ; preds = %3
  %9 = icmp slt i32 %1, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 30
  %12 = load i32, ptr %11, align 8
  %13 = icmp ugt i32 %12, %1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10, %8
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg) #39
  %15 = icmp eq ptr %2, null
  br i1 %15, label %80, label %24

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 31
  %18 = load i32, ptr %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = icmp ult i32 %18, %1
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg.50) #39
  %23 = icmp eq ptr %2, null
  br i1 %23, label %80, label %24

24:                                               ; preds = %22, %14
  %25 = phi ptr [ @dev_validate_mtu.__msg, %14 ], [ @dev_validate_mtu.__msg.50, %22 ]
  store ptr %25, ptr %2, align 4
  br label %80

26:                                               ; preds = %16
  %27 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %28 = load volatile i32, ptr %27, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %80, label %31

31:                                               ; preds = %26
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %0, ptr %4, align 8
  %32 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  store ptr null, ptr %32, align 4
  %33 = tail call i32 @rtnl_is_locked() #39
  %34 = icmp eq i32 %33, 0
  %35 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %36 = xor i1 %35, true
  %37 = select i1 %34, i1 %36, i1 false
  br i1 %37, label %38, label %39, !prof !15

38:                                               ; preds = %31
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %39

39:                                               ; preds = %38, %31
  %40 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 23, ptr noundef nonnull %4) #39
  %41 = and i32 %40, 32768
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 23, ptr noundef nonnull %4) #39
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i32 [ %44, %43 ], [ %40, %39 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  %47 = and i32 %46, -32769
  %48 = icmp sgt i32 %47, 1
  %49 = sub i32 1, %47
  %50 = select i1 %48, i32 %49, i32 0
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %80

52:                                               ; preds = %45
  %53 = load i32, ptr %5, align 4
  %54 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds %struct.net_device_ops, ptr %55, i32 0, i32 17
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %52
  store volatile i32 %1, ptr %5, align 4
  br label %63

60:                                               ; preds = %52
  %61 = call i32 %57(ptr noundef %0, i32 noundef %1) #39
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %80

63:                                               ; preds = %60, %59
  %64 = call fastcc i32 @call_netdevice_notifiers_mtu(ptr noundef %0, i32 noundef %53)
  %65 = and i32 %64, -32769
  %66 = icmp sgt i32 %65, 1
  %67 = sub i32 1, %65
  %68 = select i1 %66, i32 %67, i32 0
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %63
  %71 = load ptr, ptr %54, align 8
  %72 = getelementptr inbounds %struct.net_device_ops, ptr %71, i32 0, i32 17
  %73 = load ptr, ptr %72, align 4
  %74 = icmp eq ptr %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = call i32 %73(ptr noundef %0, i32 noundef %53) #39
  br label %78

77:                                               ; preds = %70
  store volatile i32 %53, ptr %5, align 4
  br label %78

78:                                               ; preds = %77, %75
  %79 = call fastcc i32 @call_netdevice_notifiers_mtu(ptr noundef %0, i32 noundef %1)
  br label %80

80:                                               ; preds = %78, %63, %60, %45, %26, %24, %22, %14, %3
  %81 = phi i32 [ 0, %3 ], [ -19, %26 ], [ %50, %45 ], [ %61, %60 ], [ %68, %78 ], [ 0, %63 ], [ -22, %14 ], [ -22, %22 ], [ -22, %24 ]
  ret i32 %81
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @call_netdevice_notifiers_mtu(ptr noundef %0, i32 noundef %1) unnamed_addr #1 {
  %3 = alloca %struct.netdev_notifier_info_ext, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 4
  %4 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr null, ptr %4, align 4
  %5 = getelementptr inbounds %struct.netdev_notifier_info_ext, ptr %3, i32 0, i32 1
  store i32 %1, ptr %5, align 4
  %6 = tail call i32 @rtnl_is_locked() #39
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %2
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %12

12:                                               ; preds = %11, %2
  %13 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 7, ptr noundef nonnull %3) #39
  %14 = and i32 %13, 32768
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 7, ptr noundef nonnull %3) #39
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i32 [ %17, %16 ], [ %13, %12 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #39
  ret i32 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_mtu(ptr noundef %0, i32 noundef %1) #1 {
  %3 = alloca %struct.netlink_ext_ack, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(36) %3, i8 0, i64 36, i1 false)
  %4 = call i32 @dev_set_mtu_ext(ptr noundef %0, i32 noundef %1, ptr noundef nonnull %3)
  %5 = icmp ne i32 %4, 0
  %6 = load ptr, ptr %3, align 4
  %7 = icmp ne ptr %6, null
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = call i32 @net_ratelimit() #39
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %3, align 4
  %14 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.51, ptr noundef %0, ptr noundef %13) #42
  br label %15

15:                                               ; preds = %12, %9, %2
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #39
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_change_tx_queue_len(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 91
  %5 = load i32, ptr %4, align 16
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %33, label %7

7:                                                ; preds = %2
  store i32 %1, ptr %4, align 16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 8
  %8 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr null, ptr %8, align 4
  %9 = tail call i32 @rtnl_is_locked() #39
  %10 = icmp eq i32 %9, 0
  %11 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %12 = xor i1 %11, true
  %13 = select i1 %10, i1 %12, i1 false
  br i1 %13, label %14, label %15, !prof !15

14:                                               ; preds = %7
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %15

15:                                               ; preds = %14, %7
  %16 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 30, ptr noundef nonnull %3) #39
  %17 = and i32 %16, 32768
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 30, ptr noundef nonnull %3) #39
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi i32 [ %20, %19 ], [ %16, %15 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  %23 = and i32 %22, -32769
  %24 = icmp sgt i32 %23, 1
  %25 = sub i32 1, %23
  %26 = select i1 %24, i32 %25, i32 0
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = call i32 @dev_qdisc_change_tx_queue_len(ptr noundef %0) #39
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28, %21
  %32 = phi i32 [ %26, %21 ], [ %29, %28 ]
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %0, ptr noundef nonnull @.str.52) #43
  store i32 %5, ptr %4, align 16
  br label %33

33:                                               ; preds = %31, %28, %2
  %34 = phi i32 [ %32, %31 ], [ 0, %28 ], [ 0, %2 ]
  ret i32 %34
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_qdisc_change_tx_queue_len(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define dso_local void @dev_set_group(ptr nocapture noundef writeonly %0, i32 noundef %1) #26 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 35
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_pre_changeaddr_notify(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  %4 = alloca %struct.netdev_notifier_pre_changeaddr_info, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #39
  store ptr %0, ptr %4, align 4
  %5 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  store ptr %2, ptr %5, align 4
  %6 = getelementptr inbounds %struct.netdev_notifier_pre_changeaddr_info, ptr %4, i32 0, i32 1
  store ptr %1, ptr %6, align 4
  %7 = tail call i32 @rtnl_is_locked() #39
  %8 = icmp eq i32 %7, 0
  %9 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %10 = xor i1 %9, true
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %13, !prof !15

12:                                               ; preds = %3
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %13

13:                                               ; preds = %12, %3
  %14 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 9, ptr noundef nonnull %4) #39
  %15 = and i32 %14, 32768
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 9, ptr noundef nonnull %4) #39
  br label %19

19:                                               ; preds = %17, %13
  %20 = phi i32 [ %18, %17 ], [ %14, %13 ]
  %21 = and i32 %20, -32769
  %22 = icmp sgt i32 %21, 1
  %23 = sub i32 1, %21
  %24 = select i1 %22, i32 %23, i32 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #39
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_mac_address(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  %4 = alloca %struct.netdev_notifier_info, align 8
  %5 = alloca %struct.netdev_notifier_pre_changeaddr_info, align 4
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.net_device_ops, ptr %7, i32 0, i32 9
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %69, label %11

11:                                               ; preds = %3
  %12 = load i16, ptr %1, align 2
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 32
  %14 = load i16, ptr %13, align 16
  %15 = icmp eq i16 %12, %14
  br i1 %15, label %16, label %69

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %18 = load volatile i32, ptr %17, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %69, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.sockaddr, ptr %1, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #39
  store ptr %0, ptr %5, align 4
  %23 = getelementptr inbounds %struct.netdev_notifier_info, ptr %5, i32 0, i32 1
  store ptr %2, ptr %23, align 4
  %24 = getelementptr inbounds %struct.netdev_notifier_pre_changeaddr_info, ptr %5, i32 0, i32 1
  store ptr %22, ptr %24, align 4
  %25 = tail call i32 @rtnl_is_locked() #39
  %26 = icmp eq i32 %25, 0
  %27 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %28 = xor i1 %27, true
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %30, label %31, !prof !15

30:                                               ; preds = %21
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %31

31:                                               ; preds = %30, %21
  %32 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 9, ptr noundef nonnull %5) #39
  %33 = and i32 %32, 32768
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 9, ptr noundef nonnull %5) #39
  br label %37

37:                                               ; preds = %35, %31
  %38 = phi i32 [ %36, %35 ], [ %32, %31 ]
  %39 = and i32 %38, -32769
  %40 = icmp sgt i32 %39, 1
  %41 = sub i32 1, %39
  %42 = select i1 %40, i32 %41, i32 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #39
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %69

44:                                               ; preds = %37
  %45 = load ptr, ptr %8, align 4
  %46 = call i32 %45(ptr noundef %0, ptr noundef %1) #39
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %69

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 50
  store i8 3, ptr %49, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %0, ptr %4, align 8
  %50 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  store ptr null, ptr %50, align 4
  %51 = call i32 @rtnl_is_locked() #39
  %52 = icmp eq i32 %51, 0
  %53 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %54 = xor i1 %53, true
  %55 = select i1 %52, i1 %54, i1 false
  br i1 %55, label %56, label %57, !prof !15

56:                                               ; preds = %48
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %57

57:                                               ; preds = %56, %48
  %58 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 8, ptr noundef nonnull %4) #39
  %59 = and i32 %58, 32768
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 8, ptr noundef nonnull %4) #39
  br label %63

63:                                               ; preds = %61, %57
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  %64 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 72
  %65 = load ptr, ptr %64, align 32
  %66 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 51
  %67 = load i8, ptr %66, align 1
  %68 = zext i8 %67 to i32
  call void @add_device_randomness(ptr noundef %65, i32 noundef %68) #39
  br label %69

69:                                               ; preds = %63, %44, %37, %16, %11, %3
  %70 = phi i32 [ 0, %63 ], [ -95, %3 ], [ -22, %11 ], [ -19, %16 ], [ %42, %37 ], [ %46, %44 ]
  ret i32 %70
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_device_randomness(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_set_mac_address_user(ptr noundef %0, ptr noundef %1, ptr noundef %2) #1 {
  tail call void @down_write(ptr noundef nonnull @dev_addr_sem) #39
  %4 = tail call i32 @dev_set_mac_address(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  tail call void @up_write(ptr noundef nonnull @dev_addr_sem) #39
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_get_mac_address(ptr nocapture noundef writeonly %0, ptr noundef %1, ptr noundef %2) #1 {
  tail call void @down_read(ptr noundef nonnull @dev_addr_sem) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %4 = tail call i32 @strnlen(ptr noundef %2, i32 noundef 16) #39
  %5 = tail call i32 @full_name_hash(ptr noundef %1, ptr noundef %2, i32 noundef %4) #40
  %6 = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 23
  %7 = load ptr, ptr %6, align 16
  %8 = mul i32 %5, 1640531527
  %9 = lshr i32 %8, 24
  %10 = getelementptr %struct.hlist_head, ptr %7, i32 %9
  br label %11

11:                                               ; preds = %15, %3
  %12 = phi ptr [ %10, %3 ], [ %13, %15 ]
  %13 = load volatile ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.netdev_name_node, ptr %13, i32 0, i32 3
  %17 = load ptr, ptr %16, align 4
  %18 = tail call i32 @strcmp(ptr noundef %17, ptr noundef %2) #39
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %11

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.netdev_name_node, ptr %13, i32 0, i32 2
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 51
  %26 = load i8, ptr %25, align 1
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %struct.sockaddr, ptr %0, i32 0, i32 1
  br i1 %27, label %29, label %30

29:                                               ; preds = %24
  tail call void @llvm.memset.p0.i32(ptr noundef align 2 dereferenceable(14) %28, i8 0, i32 14, i1 false)
  br label %35

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 72
  %32 = load ptr, ptr %31, align 32
  %33 = tail call i8 @llvm.umin.i8(i8 %26, i8 14)
  %34 = zext i8 %33 to i32
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 2 %28, ptr align 1 %32, i32 %34, i1 false)
  br label %35

35:                                               ; preds = %30, %29
  %36 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 32
  %37 = load i16, ptr %36, align 16
  store i16 %37, ptr %0, align 2
  br label %38

38:                                               ; preds = %35, %20, %11
  %39 = phi i32 [ 0, %35 ], [ -19, %20 ], [ -19, %11 ]
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  tail call void @up_read(ptr noundef nonnull @dev_addr_sem) #39
  ret i32 %39
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_change_carrier(ptr noundef %0, i1 noundef zeroext %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 56
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = tail call i32 %6(ptr noundef %0, i1 noundef zeroext %1) #39
  br label %15

15:                                               ; preds = %13, %8, %2
  %16 = phi i32 [ %14, %13 ], [ -95, %2 ], [ -19, %8 ]
  ret i32 %16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_get_phys_port_id(ptr noundef %0, ptr noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 57
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 %6(ptr noundef %0, ptr noundef %1) #39
  br label %10

10:                                               ; preds = %8, %2
  %11 = phi i32 [ %9, %8 ], [ -95, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_get_phys_port_name(ptr noundef %0, ptr noundef %1, i32 noundef %2) #1 {
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.net_device_ops, ptr %5, i32 0, i32 59
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = tail call i32 %7(ptr noundef %0, ptr noundef %1, i32 noundef %2) #39
  %11 = icmp eq i32 %10, -95
  br i1 %11, label %12, label %14

12:                                               ; preds = %9, %3
  %13 = tail call i32 @devlink_compat_phys_port_name_get(ptr noundef %0, ptr noundef %1, i32 noundef %2) #39
  br label %14

14:                                               ; preds = %12, %9
  %15 = phi i32 [ %13, %12 ], [ %10, %9 ]
  ret i32 %15
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_compat_phys_port_name_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_get_port_parent_id(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #1 {
  %4 = alloca %struct.netdev_phys_item_id, align 1
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %6 = load ptr, ptr %5, align 8
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(33) %4, i8 0, i32 33, i1 false)
  %7 = getelementptr inbounds %struct.net_device_ops, ptr %6, i32 0, i32 58
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call i32 %8(ptr noundef %0, ptr noundef %1) #39
  %12 = icmp eq i32 %11, -95
  br i1 %12, label %13, label %47

13:                                               ; preds = %10, %3
  %14 = tail call i32 @devlink_compat_switch_id_get(ptr noundef %0, ptr noundef %1) #39
  %15 = xor i1 %2, true
  %16 = icmp ne i32 %14, -95
  %17 = select i1 %15, i1 true, i1 %16
  br i1 %17, label %47, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = icmp eq ptr %20, %19
  br i1 %21, label %47, label %22

22:                                               ; preds = %18
  %23 = getelementptr i8, ptr %20, i32 -12
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.netdev_phys_item_id, ptr %4, i32 0, i32 1
  br label %28

28:                                               ; preds = %43, %26
  %29 = phi ptr [ %24, %26 ], [ %45, %43 ]
  %30 = phi ptr [ %20, %26 ], [ %31, %43 ]
  %31 = load ptr, ptr %30, align 4
  %32 = tail call i32 @dev_get_port_parent_id(ptr noundef nonnull %29, ptr noundef %1, i1 noundef zeroext true)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %47

34:                                               ; preds = %28
  %35 = load i8, ptr %27, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 1 dereferenceable(33) %4, ptr noundef align 1 dereferenceable(33) %1, i32 33, i1 false)
  br label %41

38:                                               ; preds = %34
  %39 = call i32 @bcmp(ptr noundef nonnull dereferenceable(33) %4, ptr noundef dereferenceable(33) %1, i32 33)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %38, %37
  %42 = icmp eq ptr %31, %19
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = getelementptr i8, ptr %31, i32 -12
  %45 = load ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %28

47:                                               ; preds = %43, %41, %38, %28, %22, %18, %13, %10
  %48 = phi i32 [ %11, %10 ], [ %14, %13 ], [ -95, %22 ], [ -95, %18 ], [ 0, %41 ], [ -95, %38 ], [ %32, %28 ], [ 0, %43 ]
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %4) #39
  ret i32 %48
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_compat_switch_id_get(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_port_same_parent_id(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.netdev_phys_item_id, align 1
  %4 = alloca %struct.netdev_phys_item_id, align 1
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %3) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(33) %3, i8 0, i32 33, i1 false)
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(33) %4, i8 0, i32 33, i1 false)
  %5 = call i32 @dev_get_port_parent_id(ptr noundef %0, ptr noundef nonnull %3, i1 noundef zeroext true)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %2
  %8 = call i32 @dev_get_port_parent_id(ptr noundef %1, ptr noundef nonnull %4, i1 noundef zeroext true)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.netdev_phys_item_id, ptr %3, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  %13 = getelementptr inbounds %struct.netdev_phys_item_id, ptr %4, i32 0, i32 1
  %14 = load i8, ptr %13, align 1
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = zext i8 %12 to i32
  %18 = call i32 @bcmp(ptr nonnull %3, ptr nonnull %4, i32 %17) #39
  %19 = icmp eq i32 %18, 0
  br label %20

20:                                               ; preds = %16, %10, %7, %2
  %21 = phi i1 [ false, %7 ], [ false, %2 ], [ false, %10 ], [ %19, %16 ]
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %3) #39
  ret i1 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_change_proto_down(ptr noundef %0, i1 noundef zeroext %1) #1 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 15
  %5 = load i64, ptr %4, align 16
  %6 = and i64 %5, 4294967296
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  br i1 %1, label %14, label %15

14:                                               ; preds = %13
  tail call void @netif_carrier_off(ptr noundef %0) #39
  br label %16

15:                                               ; preds = %13
  tail call void @netif_carrier_on(ptr noundef %0) #39
  br label %16

16:                                               ; preds = %15, %14
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 123
  store i8 %3, ptr %17, align 4
  br label %18

18:                                               ; preds = %16, %8, %2
  %19 = phi i32 [ 0, %16 ], [ -95, %2 ], [ -19, %8 ]
  ret i32 %19
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_change_proto_down_reason(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #1 {
  %4 = alloca i32, align 4
  store i32 %1, ptr %4, align 4
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 97
  store i32 %2, ptr %7, align 4
  br label %30

8:                                                ; preds = %3
  %9 = call i32 @_find_next_bit_le(ptr noundef nonnull %4, i32 noundef 32, i32 noundef 0) #39
  %10 = icmp slt i32 %9, 32
  br i1 %10, label %11, label %30

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 97
  br label %13

13:                                               ; preds = %25, %11
  %14 = phi i32 [ %9, %11 ], [ %28, %25 ]
  %15 = shl nuw i32 1, %14
  %16 = and i32 %15, %2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = load i32, ptr %12, align 4
  %20 = or i32 %19, %15
  br label %25

21:                                               ; preds = %13
  %22 = xor i32 %15, -1
  %23 = load i32, ptr %12, align 4
  %24 = and i32 %23, %22
  br label %25

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %20, %18 ], [ %24, %21 ]
  store i32 %26, ptr %12, align 4
  %27 = add nsw i32 %14, 1
  %28 = call i32 @_find_next_bit_le(ptr noundef nonnull %4, i32 noundef 32, i32 noundef %27) #39
  %29 = icmp slt i32 %28, 32
  br i1 %29, label %13, label %30

30:                                               ; preds = %25, %8, %6
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_le(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local zeroext i8 @dev_xdp_prog_count(ptr nocapture noundef readonly %0) #27 {
  %2 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 0, i32 1
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5, %1
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i8 [ 1, %9 ], [ 0, %5 ]
  %12 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 1, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15, %10
  %20 = add nuw nsw i8 %11, 1
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi i8 [ %20, %19 ], [ %11, %15 ]
  %23 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 2, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26, %21
  %31 = add nuw nsw i8 %22, 1
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi i8 [ %31, %30 ], [ %22, %26 ]
  ret i8 %33
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i32 @dev_xdp_prog_id(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 {
  %3 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 %1, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  %6 = getelementptr inbounds %struct.bpf_link, ptr %4, i32 0, i32 4
  %7 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 %1
  %8 = select i1 %5, ptr %7, ptr %6
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.bpf_prog, ptr %9, i32 0, i32 10
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.bpf_prog_aux, ptr %13, i32 0, i32 7
  %15 = load i32, ptr %14, align 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ %15, %11 ], [ 0, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @bpf_xdp_link_attach(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1) local_unnamed_addr #1 {
  %3 = tail call ptr @llvm.thread.pointer() #39
  %4 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 92
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.nsproxy, ptr %5, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  tail call void @rtnl_lock() #39
  %8 = getelementptr inbounds %struct.anon.109, ptr %0, i32 0, i32 1
  %9 = load i32, ptr %8, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %10 = getelementptr inbounds %struct.net, ptr %7, i32 0, i32 24
  %11 = load ptr, ptr %10, align 4
  %12 = and i32 %9, 255
  %13 = getelementptr %struct.hlist_head, ptr %11, i32 %12
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  %16 = getelementptr i8, ptr %14, i32 -560
  %17 = icmp eq ptr %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %31, label %19

19:                                               ; preds = %24, %2
  %20 = phi ptr [ %28, %24 ], [ %16, %2 ]
  %21 = getelementptr inbounds %struct.net_device, ptr %20, i32 0, i32 17
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %9
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.net_device, ptr %20, i32 0, i32 85
  %26 = load volatile ptr, ptr %25, align 16
  %27 = icmp eq ptr %26, null
  %28 = getelementptr i8, ptr %26, i32 -560
  %29 = icmp eq ptr %28, null
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %19

31:                                               ; preds = %24, %2
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  tail call void @rtnl_unlock() #39
  br label %64

32:                                               ; preds = %19
  %33 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %34 = getelementptr inbounds %struct.net_device, ptr %20, i32 0, i32 99
  %35 = load ptr, ptr %34, align 8
  %36 = ptrtoint ptr %35 to i32
  %37 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %38 = inttoptr i32 %37 to ptr
  %39 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %38) #34, !srcloc !18
  %40 = add i32 %39, %36
  %41 = inttoptr i32 %40 to ptr
  %42 = load i32, ptr %41, align 4
  %43 = add i32 %42, 1
  store i32 %43, ptr %41, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %33) #39, !srcloc !19
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  %44 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %45 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %44, i32 noundef 1052096, i32 noundef 48) #41
  %46 = icmp eq ptr %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %32
  %48 = getelementptr inbounds %struct.bpf_xdp_link, ptr %45, i32 0, i32 1
  store ptr %20, ptr %48, align 8
  %49 = getelementptr inbounds %struct.anon.109, ptr %0, i32 0, i32 3
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.bpf_xdp_link, ptr %45, i32 0, i32 2
  store i32 %50, ptr %51, align 4
  tail call void @kfree(ptr noundef nonnull %45) #39
  br label %52

52:                                               ; preds = %47, %32
  %53 = phi i32 [ -95, %47 ], [ -12, %32 ]
  tail call void @rtnl_unlock() #39
  %54 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %55 = load ptr, ptr %34, align 8
  %56 = ptrtoint ptr %55 to i32
  %57 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %58 = inttoptr i32 %57 to ptr
  %59 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %58) #34, !srcloc !18
  %60 = add i32 %59, %56
  %61 = inttoptr i32 %60 to ptr
  %62 = load i32, ptr %61, align 4
  %63 = add i32 %62, -1
  store i32 %63, ptr %61, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %54) #39, !srcloc !19
  br label %64

64:                                               ; preds = %52, %31
  %65 = phi i32 [ %53, %52 ], [ -22, %31 ]
  ret i32 %65
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @dev_change_xdp_fd(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 {
  %6 = and i32 %4, 8
  %7 = icmp eq i32 %6, 0
  %8 = tail call i32 @rtnl_is_locked() #39
  %9 = icmp eq i32 %8, 0
  %10 = load i1, ptr @dev_change_xdp_fd.__already_done, align 1
  %11 = xor i1 %10, true
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %13, label %14, !prof !15

13:                                               ; preds = %5
  store i1 true, ptr @dev_change_xdp_fd.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9090, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 9090) #39
  br label %14

14:                                               ; preds = %13, %5
  %15 = and i32 %2, %3
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %168

17:                                               ; preds = %14
  %18 = and i32 %4, 14
  %19 = tail call i32 @__sw_hweight32(i32 noundef %18) #39
  %20 = tail call i32 @rtnl_is_locked() #39
  %21 = icmp eq i32 %20, 0
  %22 = load i1, ptr @dev_xdp_attach.__already_done, align 1
  %23 = xor i1 %22, true
  %24 = select i1 %21, i1 %23, i1 false
  br i1 %24, label %25, label %26, !prof !15

25:                                               ; preds = %17
  store i1 true, ptr @dev_xdp_attach.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8771, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 8771) #39
  br label %26

26:                                               ; preds = %25, %17
  %27 = icmp ugt i32 %19, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.109) #39
  %29 = icmp eq ptr %1, null
  br i1 %29, label %168, label %30

30:                                               ; preds = %28
  store ptr @dev_xdp_attach.__msg.109, ptr %1, align 4
  br label %168

31:                                               ; preds = %26
  %32 = icmp eq i32 %19, 0
  br i1 %32, label %33, label %70

33:                                               ; preds = %31
  %34 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %37, %33
  br label %42

42:                                               ; preds = %41, %37
  %43 = phi i8 [ 1, %41 ], [ 0, %37 ]
  %44 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 1, i32 1
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47, %42
  %52 = add nuw nsw i8 %43, 1
  br label %53

53:                                               ; preds = %51, %47
  %54 = phi i8 [ %52, %51 ], [ %43, %47 ]
  %55 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 2
  %56 = load ptr, ptr %55, align 8
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 2, i32 1
  %60 = load ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58, %53
  %63 = add nuw nsw i8 %54, 1
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi i8 [ %63, %62 ], [ %54, %58 ]
  %66 = icmp ugt i8 %65, 1
  br i1 %66, label %67, label %70

67:                                               ; preds = %64
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.110) #39
  %68 = icmp eq ptr %1, null
  br i1 %68, label %168, label %69

69:                                               ; preds = %67
  store ptr @dev_xdp_attach.__msg.110, ptr %1, align 4
  br label %168

70:                                               ; preds = %64, %31
  %71 = and i32 %4, 16
  %72 = icmp eq i32 %71, 0
  br i1 %7, label %73, label %86

73:                                               ; preds = %70
  %74 = and i32 %4, 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %86

76:                                               ; preds = %73
  %77 = and i32 %4, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %struct.net_device_ops, ptr %81, i32 0, i32 66
  %83 = load ptr, ptr %82, align 4
  %84 = icmp ne ptr %83, null
  %85 = zext i1 %84 to i32
  br label %86

86:                                               ; preds = %79, %76, %73, %70
  %87 = phi i32 [ %85, %79 ], [ 2, %70 ], [ 1, %73 ], [ 0, %76 ]
  %88 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 %87, i32 1
  %89 = load ptr, ptr %88, align 4
  %90 = icmp eq ptr %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.112) #39
  %92 = icmp eq ptr %1, null
  br i1 %92, label %168, label %93

93:                                               ; preds = %91
  store ptr @dev_xdp_attach.__msg.112, ptr %1, align 4
  br label %168

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %96 = load volatile ptr, ptr %95, align 4
  %97 = icmp eq ptr %96, %95
  br i1 %97, label %144, label %98

98:                                               ; preds = %94
  %99 = getelementptr i8, ptr %96, i32 -12
  %100 = load ptr, ptr %99, align 4
  %101 = icmp eq ptr %100, null
  br i1 %101, label %144, label %102

102:                                              ; preds = %140, %98
  %103 = phi ptr [ %142, %140 ], [ %100, %98 ]
  %104 = phi ptr [ %138, %140 ], [ %96, %98 ]
  %105 = getelementptr %struct.net_device, ptr %103, i32 0, i32 128, i32 0
  %106 = load ptr, ptr %105, align 8
  %107 = icmp eq ptr %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %102
  %109 = getelementptr %struct.net_device, ptr %103, i32 0, i32 128, i32 0, i32 1
  %110 = load ptr, ptr %109, align 4
  %111 = icmp eq ptr %110, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %108, %102
  br label %113

113:                                              ; preds = %112, %108
  %114 = phi i8 [ 1, %112 ], [ 0, %108 ]
  %115 = getelementptr %struct.net_device, ptr %103, i32 0, i32 128, i32 1
  %116 = load ptr, ptr %115, align 8
  %117 = icmp eq ptr %116, null
  br i1 %117, label %118, label %122

118:                                              ; preds = %113
  %119 = getelementptr %struct.net_device, ptr %103, i32 0, i32 128, i32 1, i32 1
  %120 = load ptr, ptr %119, align 4
  %121 = icmp eq ptr %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %118, %113
  br label %123

123:                                              ; preds = %122, %118
  %124 = phi i8 [ 1, %122 ], [ %114, %118 ]
  %125 = getelementptr %struct.net_device, ptr %103, i32 0, i32 128, i32 2
  %126 = load ptr, ptr %125, align 8
  %127 = icmp eq ptr %126, null
  br i1 %127, label %128, label %134

128:                                              ; preds = %123
  %129 = getelementptr %struct.net_device, ptr %103, i32 0, i32 128, i32 2, i32 1
  %130 = load ptr, ptr %129, align 4
  %131 = icmp eq ptr %130, null
  %132 = icmp eq i8 %124, 0
  %133 = and i1 %132, %131
  br i1 %133, label %137, label %134

134:                                              ; preds = %128, %123
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.113) #39
  %135 = icmp eq ptr %1, null
  br i1 %135, label %168, label %136

136:                                              ; preds = %134
  store ptr @dev_xdp_attach.__msg.113, ptr %1, align 4
  br label %168

137:                                              ; preds = %128
  %138 = load volatile ptr, ptr %104, align 4
  %139 = icmp eq ptr %138, %95
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = getelementptr i8, ptr %138, i32 -12
  %142 = load ptr, ptr %141, align 4
  %143 = icmp eq ptr %142, null
  br i1 %143, label %144, label %102

144:                                              ; preds = %140, %137, %98, %94
  %145 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 %87
  %146 = load ptr, ptr %145, align 4
  %147 = icmp eq ptr %146, null
  %148 = select i1 %72, i1 true, i1 %147
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.115) #39
  %150 = icmp eq ptr %1, null
  br i1 %150, label %168, label %151

151:                                              ; preds = %149
  store ptr @dev_xdp_attach.__msg.115, ptr %1, align 4
  br label %168

152:                                              ; preds = %144
  br i1 %147, label %167, label %153

153:                                              ; preds = %152
  switch i32 %87, label %160 [
    i32 0, label %163
    i32 1, label %154
    i32 2, label %154
  ]

154:                                              ; preds = %153, %153
  %155 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %156 = load ptr, ptr %155, align 8
  %157 = getelementptr inbounds %struct.net_device_ops, ptr %156, i32 0, i32 66
  %158 = load ptr, ptr %157, align 4
  %159 = icmp eq ptr %158, null
  br i1 %159, label %160, label %163

160:                                              ; preds = %154, %153
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.121) #39
  %161 = icmp eq ptr %1, null
  br i1 %161, label %168, label %162

162:                                              ; preds = %160
  store ptr @dev_xdp_attach.__msg.121, ptr %1, align 4
  br label %168

163:                                              ; preds = %154, %153
  %164 = phi ptr [ %158, %154 ], [ @generic_xdp_install, %153 ]
  %165 = tail call fastcc i32 @dev_xdp_install(ptr noundef %0, i32 noundef %87, ptr noundef nonnull %164, ptr noundef %1, i32 noundef %4, ptr noundef null) #39
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %163, %152
  store ptr null, ptr %88, align 4
  store ptr null, ptr %145, align 8
  br label %168

168:                                              ; preds = %167, %163, %162, %160, %151, %149, %136, %134, %93, %91, %69, %67, %30, %28, %14
  %169 = phi i32 [ -95, %14 ], [ -22, %30 ], [ -22, %28 ], [ -22, %69 ], [ -22, %67 ], [ -16, %93 ], [ -16, %91 ], [ -17, %136 ], [ -17, %134 ], [ -17, %151 ], [ -17, %149 ], [ -95, %162 ], [ -95, %160 ], [ %165, %163 ], [ 0, %167 ]
  ret i32 %169
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__netdev_update_features(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = alloca %struct.netdev_notifier_info, align 8
  %4 = alloca %struct.netdev_notifier_info, align 8
  %5 = alloca %struct.netdev_notifier_info, align 8
  %6 = alloca %struct.netdev_notifier_info, align 8
  %7 = alloca %struct.netdev_notifier_info, align 8
  %8 = alloca %struct.netdev_notifier_info, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #39
  %11 = tail call i32 @rtnl_is_locked() #39
  %12 = icmp eq i32 %11, 0
  %13 = load i1, ptr @__netdev_update_features.__already_done, align 1
  %14 = xor i1 %13, true
  %15 = select i1 %12, i1 %14, i1 false
  br i1 %15, label %16, label %17, !prof !15

16:                                               ; preds = %1
  store i1 true, ptr @__netdev_update_features.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9300, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 9300) #39
  br label %17

17:                                               ; preds = %16, %1
  %18 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %19 = load i64, ptr %18, align 16
  %20 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 24
  %21 = load i64, ptr %20, align 8
  %22 = xor i64 %21, -1
  %23 = and i64 %19, %22
  %24 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 25
  %25 = load i64, ptr %24, align 32
  %26 = or i64 %23, %25
  %27 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %struct.net_device_ops, ptr %28, i32 0, i32 45
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %17
  %33 = tail call i64 %30(ptr noundef %0, i64 noundef %26) #39
  br label %34

34:                                               ; preds = %32, %17
  %35 = phi i64 [ %33, %32 ], [ %26, %17 ]
  %36 = and i64 %35, 8
  %37 = icmp eq i64 %36, 0
  %38 = and i64 %35, 18
  %39 = icmp eq i64 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %0, ptr noundef nonnull @.str.122) #42
  %42 = and i64 %35, -19
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i64 [ %42, %41 ], [ %35, %34 ]
  %45 = and i64 %44, 1900544
  %46 = icmp ne i64 %45, 0
  %47 = and i64 %44, 1
  %48 = icmp eq i64 %47, 0
  %49 = and i1 %46, %48
  %50 = and i64 %44, -1900545
  %51 = select i1 %49, i64 %50, i64 %44
  %52 = and i64 %51, 65546
  %53 = icmp eq i64 %52, 65536
  %54 = and i64 %51, -327681
  %55 = select i1 %53, i64 %54, i64 %51
  %56 = and i64 %55, 1048600
  %57 = icmp eq i64 %56, 1048576
  %58 = and i64 %55, -1048577
  %59 = select i1 %57, i64 %58, i64 %55
  %60 = and i64 %59, 589824
  %61 = icmp eq i64 %60, 524288
  %62 = and i64 %59, -524289
  %63 = select i1 %61, i64 %62, i64 %59
  %64 = and i64 %63, 1900544
  %65 = icmp eq i64 %64, 262144
  %66 = and i64 %63, -262145
  %67 = select i1 %65, i64 %66, i64 %63
  %68 = and i64 %67, 2049
  %69 = icmp eq i64 %68, 2048
  %70 = and i64 %67, -2049
  %71 = select i1 %69, i64 %70, i64 %67
  %72 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 29
  %73 = load i64, ptr %72, align 64
  %74 = and i64 %71, %73
  %75 = icmp ne i64 %74, 0
  %76 = and i64 %71, 268435456
  %77 = icmp eq i64 %76, 0
  %78 = and i1 %75, %77
  %79 = xor i64 %73, -1
  %80 = select i1 %78, i64 %79, i64 -1
  %81 = and i64 %80, %71
  %82 = and i64 %81, 36029896530591744
  %83 = icmp eq i64 %82, 36028797018963968
  %84 = and i64 %81, -36028797018963969
  %85 = select i1 %83, i64 %84, i64 %81
  %86 = and i64 %85, 8796093022208
  %87 = icmp eq i64 %86, 0
  %88 = and i64 %85, -36028797018996737
  %89 = select i1 %87, i64 %85, i64 %88
  %90 = and i64 %89, 36028797018996736
  %91 = icmp eq i64 %90, 36028797018996736
  %92 = and i64 %89, -32769
  %93 = select i1 %91, i64 %92, i64 %89
  %94 = and i64 %93, 9007199254740992
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %43
  %97 = and i64 %93, 18
  %98 = icmp ne i64 %97, 18
  %99 = and i64 %93, 8
  %100 = icmp eq i64 %99, 0
  %101 = and i1 %98, %100
  %102 = and i64 %93, -9007199254740993
  %103 = select i1 %101, i64 %102, i64 %93
  br label %104

104:                                              ; preds = %96, %43
  %105 = phi i64 [ %103, %96 ], [ %93, %43 ]
  %106 = and i64 %105, 18015498021109760
  %107 = icmp eq i64 %106, 18014398509481984
  %108 = and i64 %105, -18014398509481985
  %109 = select i1 %107, i64 %108, i64 %105
  store i64 %109, ptr %10, align 8
  %110 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %111 = load volatile ptr, ptr %110, align 4
  %112 = icmp eq ptr %111, %110
  br i1 %112, label %136, label %113

113:                                              ; preds = %104
  %114 = getelementptr i8, ptr %111, i32 -12
  %115 = load ptr, ptr %114, align 4
  %116 = icmp eq ptr %115, null
  br i1 %116, label %136, label %117

117:                                              ; preds = %132, %113
  %118 = phi i64 [ %129, %132 ], [ %109, %113 ]
  %119 = phi ptr [ %134, %132 ], [ %115, %113 ]
  %120 = phi ptr [ %130, %132 ], [ %111, %113 ]
  %121 = getelementptr inbounds %struct.net_device, ptr %119, i32 0, i32 25
  %122 = load i64, ptr %121, align 32
  %123 = and i64 %122, 32768
  %124 = icmp ne i64 %123, 0
  %125 = and i64 %118, 32768
  %126 = icmp eq i64 %125, 0
  %127 = or i1 %126, %124
  %128 = select i1 %127, i64 -1, i64 -32769
  %129 = and i64 %128, %118
  store i64 %129, ptr %10, align 8
  %130 = load volatile ptr, ptr %120, align 4
  %131 = icmp eq ptr %130, %110
  br i1 %131, label %136, label %132

132:                                              ; preds = %117
  %133 = getelementptr i8, ptr %130, i32 -12
  %134 = load ptr, ptr %133, align 4
  %135 = icmp eq ptr %134, null
  br i1 %135, label %136, label %117

136:                                              ; preds = %132, %117, %113, %104
  %137 = phi i64 [ %109, %113 ], [ %109, %104 ], [ %129, %132 ], [ %129, %117 ]
  %138 = load i64, ptr %18, align 16
  %139 = icmp eq i64 %138, %137
  br i1 %139, label %149, label %140

140:                                              ; preds = %136
  %141 = load ptr, ptr %27, align 8
  %142 = getelementptr inbounds %struct.net_device_ops, ptr %141, i32 0, i32 46
  %143 = load ptr, ptr %142, align 4
  %144 = icmp eq ptr %143, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %140
  %146 = tail call i32 %143(ptr noundef %0, i64 noundef %137) #39
  %147 = icmp slt i32 %146, 0
  br i1 %147, label %148, label %149, !prof !15

148:                                              ; preds = %145
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %0, ptr noundef nonnull @.str.53, i32 noundef %146, ptr noundef nonnull %10, ptr noundef %18) #43
  br label %402

149:                                              ; preds = %145, %140, %136
  %150 = phi i32 [ -1, %136 ], [ %146, %145 ], [ 0, %140 ]
  %151 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %152 = load ptr, ptr %151, align 8
  %153 = icmp eq ptr %152, %151
  br i1 %153, label %222, label %154

154:                                              ; preds = %149
  %155 = getelementptr i8, ptr %152, i32 -12
  %156 = load ptr, ptr %155, align 4
  %157 = icmp eq ptr %156, null
  br i1 %157, label %222, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %160 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  %161 = and i64 %137, 32768
  %162 = icmp eq i64 %161, 0
  br label %163

163:                                              ; preds = %218, %158
  %164 = phi ptr [ %156, %158 ], [ %220, %218 ]
  %165 = phi ptr [ %152, %158 ], [ %166, %218 ]
  %166 = load ptr, ptr %165, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #39
  %167 = getelementptr inbounds %struct.net_device, ptr %164, i32 0, i32 23
  %168 = getelementptr inbounds %struct.net_device, ptr %164, i32 0, i32 25
  store i64 32768, ptr %9, align 8
  br i1 %162, label %169, label %216

169:                                              ; preds = %163
  %170 = load i64, ptr %167, align 16
  %171 = and i64 %170, 32768
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %216, label %173

173:                                              ; preds = %169
  %174 = load i64, ptr %168, align 32
  %175 = and i64 %174, -32769
  store i64 %175, ptr %168, align 32
  %176 = call i32 @__netdev_update_features(ptr noundef nonnull %164) #39
  %177 = load i64, ptr %167, align 16
  %178 = load i64, ptr %9, align 8
  %179 = and i64 %178, %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %202, label %181, !prof !22

181:                                              ; preds = %173
  %182 = load i8, ptr %0, align 64
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %188, label %184

184:                                              ; preds = %181
  %185 = call ptr @strchr(ptr noundef %0, i32 noundef 37) #39
  %186 = icmp eq ptr %185, null
  %187 = select i1 %186, ptr %0, ptr @.str.65
  br label %188

188:                                              ; preds = %184, %181
  %189 = phi ptr [ @.str.65, %181 ], [ %187, %184 ]
  %190 = load i8, ptr %159, align 4
  %191 = icmp ult i8 %190, 6
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %193, label %200, label %194, !prof !22

194:                                              ; preds = %192
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %195 = zext i8 %190 to i32
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.72, ptr noundef %0, i32 noundef %195) #39
  br label %200

196:                                              ; preds = %188
  %197 = sext i8 %190 to i32
  %198 = getelementptr inbounds [6 x ptr], ptr @switch.table.__netdev_printk.134, i32 0, i32 %197
  %199 = load ptr, ptr %198, align 4
  br label %200

200:                                              ; preds = %196, %194, %192
  %201 = phi ptr [ @.str.73, %194 ], [ @.str.73, %192 ], [ %199, %196 ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9186, i32 noundef 9, ptr noundef nonnull @.str.123, ptr noundef %189, ptr noundef nonnull %201, ptr noundef nonnull %9, ptr noundef nonnull %164) #39
  br label %216

202:                                              ; preds = %173
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %164, ptr %2, align 8
  store ptr null, ptr %160, align 4
  %203 = call i32 @rtnl_is_locked() #39
  %204 = icmp eq i32 %203, 0
  %205 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %206 = xor i1 %205, true
  %207 = select i1 %204, i1 %206, i1 false
  br i1 %207, label %208, label %209, !prof !15

208:                                              ; preds = %202
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %209

209:                                              ; preds = %208, %202
  %210 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 12, ptr noundef nonnull %2) #39
  %211 = and i32 %210, 32768
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %209
  %214 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %2) #39
  br label %215

215:                                              ; preds = %213, %209
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  br label %216

216:                                              ; preds = %215, %200, %169, %163
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #39
  %217 = icmp eq ptr %166, %151
  br i1 %217, label %222, label %218

218:                                              ; preds = %216
  %219 = getelementptr i8, ptr %166, i32 -12
  %220 = load ptr, ptr %219, align 4
  %221 = icmp eq ptr %220, null
  br i1 %221, label %222, label %163

222:                                              ; preds = %218, %216, %154, %149
  %223 = icmp eq i32 %150, 0
  br i1 %223, label %224, label %398

224:                                              ; preds = %222
  %225 = load i64, ptr %18, align 16
  %226 = xor i64 %225, %137
  %227 = and i64 %226, 4503599627370496
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %284, label %229

229:                                              ; preds = %224
  %230 = and i64 %137, 4503599627370496
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %258, label %232

232:                                              ; preds = %229
  store i64 %137, ptr %18, align 16
  %233 = call i32 @rtnl_is_locked() #39
  %234 = icmp eq i32 %233, 0
  %235 = load i1, ptr @udp_tunnel_get_rx_info.__already_done, align 1
  %236 = xor i1 %235, true
  %237 = select i1 %234, i1 %236, i1 false
  br i1 %237, label %238, label %239, !prof !15

238:                                              ; preds = %232
  store i1 true, ptr @udp_tunnel_get_rx_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.124, i32 noundef 131, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.124, i32 noundef 131) #39
  br label %239

239:                                              ; preds = %238, %232
  %240 = load i64, ptr %18, align 16
  %241 = and i64 %240, 4503599627370496
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %284, label %243

243:                                              ; preds = %239
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  store ptr %0, ptr %8, align 8
  %244 = getelementptr inbounds %struct.netdev_notifier_info, ptr %8, i32 0, i32 1
  store ptr null, ptr %244, align 4
  %245 = call i32 @rtnl_is_locked() #39
  %246 = icmp eq i32 %245, 0
  %247 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %248 = xor i1 %247, true
  %249 = select i1 %246, i1 %248, i1 false
  br i1 %249, label %250, label %251, !prof !15

250:                                              ; preds = %243
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %251

251:                                              ; preds = %250, %243
  %252 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 28, ptr noundef nonnull %8) #39
  %253 = and i32 %252, 32768
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %257

255:                                              ; preds = %251
  %256 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 28, ptr noundef nonnull %8) #39
  br label %257

257:                                              ; preds = %255, %251
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #39
  br label %284

258:                                              ; preds = %229
  %259 = call i32 @rtnl_is_locked() #39
  %260 = icmp eq i32 %259, 0
  %261 = load i1, ptr @udp_tunnel_drop_rx_info.__already_done, align 1
  %262 = xor i1 %261, true
  %263 = select i1 %260, i1 %262, i1 false
  br i1 %263, label %264, label %265, !prof !15

264:                                              ; preds = %258
  store i1 true, ptr @udp_tunnel_drop_rx_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.124, i32 noundef 139, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.124, i32 noundef 139) #39
  br label %265

265:                                              ; preds = %264, %258
  %266 = load i64, ptr %18, align 16
  %267 = and i64 %266, 4503599627370496
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %284, label %269

269:                                              ; preds = %265
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  store ptr %0, ptr %7, align 8
  %270 = getelementptr inbounds %struct.netdev_notifier_info, ptr %7, i32 0, i32 1
  store ptr null, ptr %270, align 4
  %271 = call i32 @rtnl_is_locked() #39
  %272 = icmp eq i32 %271, 0
  %273 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %274 = xor i1 %273, true
  %275 = select i1 %272, i1 %274, i1 false
  br i1 %275, label %276, label %277, !prof !15

276:                                              ; preds = %269
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %277

277:                                              ; preds = %276, %269
  %278 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 29, ptr noundef nonnull %7) #39
  %279 = and i32 %278, 32768
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %277
  %282 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 29, ptr noundef nonnull %7) #39
  br label %283

283:                                              ; preds = %281, %277
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  br label %284

284:                                              ; preds = %283, %265, %257, %239, %224
  %285 = and i64 %226, 512
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %339, label %287

287:                                              ; preds = %284
  %288 = and i64 %137, 512
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %317, label %290

290:                                              ; preds = %287
  store i64 %137, ptr %18, align 16
  %291 = call i32 @rtnl_is_locked() #39
  %292 = icmp eq i32 %291, 0
  %293 = load i1, ptr @vlan_get_rx_ctag_filter_info.__already_done, align 1
  %294 = xor i1 %293, true
  %295 = select i1 %292, i1 %294, i1 false
  br i1 %295, label %296, label %297, !prof !15

296:                                              ; preds = %290
  store i1 true, ptr @vlan_get_rx_ctag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.79, i32 noundef 87, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.79, i32 noundef 87) #39
  br label %297

297:                                              ; preds = %296, %290
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  store ptr %0, ptr %6, align 8
  %298 = getelementptr inbounds %struct.netdev_notifier_info, ptr %6, i32 0, i32 1
  store ptr null, ptr %298, align 4
  %299 = call i32 @rtnl_is_locked() #39
  %300 = icmp eq i32 %299, 0
  %301 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %302 = xor i1 %301, true
  %303 = select i1 %300, i1 %302, i1 false
  br i1 %303, label %304, label %305, !prof !15

304:                                              ; preds = %297
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %305

305:                                              ; preds = %304, %297
  %306 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 31, ptr noundef nonnull %6) #39
  %307 = and i32 %306, 32768
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %305
  %310 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 31, ptr noundef nonnull %6) #39
  br label %311

311:                                              ; preds = %309, %305
  %312 = phi i32 [ %310, %309 ], [ %306, %305 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  %313 = and i32 %312, -32769
  %314 = icmp sgt i32 %313, 1
  %315 = sub i32 1, %313
  %316 = select i1 %314, i32 %315, i32 0
  br label %339

317:                                              ; preds = %287
  %318 = call i32 @rtnl_is_locked() #39
  %319 = icmp eq i32 %318, 0
  %320 = load i1, ptr @vlan_drop_rx_ctag_filter_info.__already_done, align 1
  %321 = xor i1 %320, true
  %322 = select i1 %319, i1 %321, i1 false
  br i1 %322, label %323, label %324, !prof !15

323:                                              ; preds = %317
  store i1 true, ptr @vlan_drop_rx_ctag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.79, i32 noundef 93, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.79, i32 noundef 93) #39
  br label %324

324:                                              ; preds = %323, %317
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store ptr %0, ptr %5, align 8
  %325 = getelementptr inbounds %struct.netdev_notifier_info, ptr %5, i32 0, i32 1
  store ptr null, ptr %325, align 4
  %326 = call i32 @rtnl_is_locked() #39
  %327 = icmp eq i32 %326, 0
  %328 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %329 = xor i1 %328, true
  %330 = select i1 %327, i1 %329, i1 false
  br i1 %330, label %331, label %332, !prof !15

331:                                              ; preds = %324
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %332

332:                                              ; preds = %331, %324
  %333 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 32, ptr noundef nonnull %5) #39
  %334 = and i32 %333, 32768
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %332
  %337 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 32, ptr noundef nonnull %5) #39
  br label %338

338:                                              ; preds = %336, %332
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  br label %339

339:                                              ; preds = %338, %311, %284
  %340 = phi i32 [ %316, %311 ], [ 0, %338 ], [ 0, %284 ]
  %341 = and i64 %226, 140737488355328
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %396, label %343

343:                                              ; preds = %339
  %344 = and i64 %137, 140737488355328
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %374, label %346

346:                                              ; preds = %343
  store i64 %137, ptr %18, align 16
  %347 = call i32 @rtnl_is_locked() #39
  %348 = icmp eq i32 %347, 0
  %349 = load i1, ptr @vlan_get_rx_stag_filter_info.__already_done, align 1
  %350 = xor i1 %349, true
  %351 = select i1 %348, i1 %350, i1 false
  br i1 %351, label %352, label %353, !prof !15

352:                                              ; preds = %346
  store i1 true, ptr @vlan_get_rx_stag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.79, i32 noundef 99, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.79, i32 noundef 99) #39
  br label %353

353:                                              ; preds = %352, %346
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %0, ptr %4, align 8
  %354 = getelementptr inbounds %struct.netdev_notifier_info, ptr %4, i32 0, i32 1
  store ptr null, ptr %354, align 4
  %355 = call i32 @rtnl_is_locked() #39
  %356 = icmp eq i32 %355, 0
  %357 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %358 = xor i1 %357, true
  %359 = select i1 %356, i1 %358, i1 false
  br i1 %359, label %360, label %361, !prof !15

360:                                              ; preds = %353
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %361

361:                                              ; preds = %360, %353
  %362 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 33, ptr noundef nonnull %4) #39
  %363 = and i32 %362, 32768
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %367

365:                                              ; preds = %361
  %366 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 33, ptr noundef nonnull %4) #39
  br label %367

367:                                              ; preds = %365, %361
  %368 = phi i32 [ %366, %365 ], [ %362, %361 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  %369 = and i32 %368, -32769
  %370 = icmp sgt i32 %369, 1
  %371 = sub i32 1, %369
  %372 = select i1 %370, i32 %371, i32 0
  %373 = or i32 %372, %340
  br label %396

374:                                              ; preds = %343
  %375 = call i32 @rtnl_is_locked() #39
  %376 = icmp eq i32 %375, 0
  %377 = load i1, ptr @vlan_drop_rx_stag_filter_info.__already_done, align 1
  %378 = xor i1 %377, true
  %379 = select i1 %376, i1 %378, i1 false
  br i1 %379, label %380, label %381, !prof !15

380:                                              ; preds = %374
  store i1 true, ptr @vlan_drop_rx_stag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.79, i32 noundef 105, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.79, i32 noundef 105) #39
  br label %381

381:                                              ; preds = %380, %374
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %0, ptr %3, align 8
  %382 = getelementptr inbounds %struct.netdev_notifier_info, ptr %3, i32 0, i32 1
  store ptr null, ptr %382, align 4
  %383 = call i32 @rtnl_is_locked() #39
  %384 = icmp eq i32 %383, 0
  %385 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %386 = xor i1 %385, true
  %387 = select i1 %384, i1 %386, i1 false
  br i1 %387, label %388, label %389, !prof !15

388:                                              ; preds = %381
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %389

389:                                              ; preds = %388, %381
  %390 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 34, ptr noundef nonnull %3) #39
  %391 = and i32 %390, 32768
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %395

393:                                              ; preds = %389
  %394 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 34, ptr noundef nonnull %3) #39
  br label %395

395:                                              ; preds = %393, %389
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  br label %396

396:                                              ; preds = %395, %367, %339
  %397 = phi i32 [ %373, %367 ], [ %340, %395 ], [ %340, %339 ]
  store i64 %137, ptr %18, align 16
  br label %398

398:                                              ; preds = %396, %222
  %399 = phi i32 [ %150, %222 ], [ %397, %396 ]
  %400 = xor i32 %399, -1
  %401 = lshr i32 %400, 31
  br label %402

402:                                              ; preds = %398, %148
  %403 = phi i32 [ %401, %398 ], [ -1, %148 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #39
  ret i32 %403
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_change_features(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = tail call i32 @__netdev_update_features(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %0, ptr %2, align 8
  %4 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  store ptr null, ptr %4, align 4
  %5 = tail call i32 @rtnl_is_locked() #39
  %6 = icmp eq i32 %5, 0
  %7 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !15

10:                                               ; preds = %1
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %11

11:                                               ; preds = %10, %1
  %12 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 12, ptr noundef nonnull %2) #39
  %13 = and i32 %12, 32768
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %2) #39
  br label %17

17:                                               ; preds = %15, %11
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netif_stacked_transfer_operstate(ptr noundef %0, ptr noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 45
  %4 = load i8, ptr %3, align 4
  %5 = icmp eq i8 %4, 5
  %6 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  br i1 %5, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %6) #39
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %14

10:                                               ; preds = %2
  %11 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %6) #39
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10, %7
  tail call void @linkwatch_fire_event(ptr noundef %1) #39
  br label %14

14:                                               ; preds = %13, %10, %7
  %15 = load i8, ptr %3, align 4
  %16 = icmp eq i8 %15, 4
  %17 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  br i1 %16, label %18, label %21

18:                                               ; preds = %14
  %19 = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %17) #39
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %25

21:                                               ; preds = %14
  %22 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %17) #39
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %21, %18
  tail call void @linkwatch_fire_event(ptr noundef %1) #39
  br label %25

25:                                               ; preds = %24, %21, %18
  %26 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %27, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  tail call void @netif_carrier_on(ptr noundef %1) #39
  br label %32

31:                                               ; preds = %25
  tail call void @netif_carrier_off(ptr noundef %1) #39
  br label %32

32:                                               ; preds = %31, %30
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @register_netdevice(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = load i1, ptr @dev_boot_phase, align 4
  br i1 %3, label %5, label %4, !prof !22

4:                                                ; preds = %1
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9570, 0\0A.popsection", ""() #39, !srcloc !109
  unreachable

5:                                                ; preds = %1
  %6 = tail call i32 @rtnl_is_locked() #39
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @register_netdevice.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %5
  store i1 true, ptr @register_netdevice.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9571, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 9571) #39
  br label %12

12:                                               ; preds = %11, %5
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %14 = load i8, ptr %13, align 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %17, label %16, !prof !22

16:                                               ; preds = %12
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9576, 0\0A.popsection", ""() #39, !srcloc !110
  unreachable

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 42
  %19 = load ptr, ptr %18, align 8
  %20 = tail call i32 @ethtool_check_ops(ptr noundef %19) #39
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %283

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 58
  store i32 0, ptr %23, align 4
  %24 = tail call fastcc i32 @dev_get_valid_name(ptr noundef %0, ptr noundef %0)
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %283, label %26

26:                                               ; preds = %22
  %27 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %28 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %27, i32 noundef 3264, i32 noundef 24) #41
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 1
  store ptr null, ptr %31, align 16
  br label %283

32:                                               ; preds = %26
  store ptr null, ptr %28, align 8
  %33 = getelementptr inbounds %struct.hlist_node, ptr %28, i32 0, i32 1
  store ptr null, ptr %33, align 4
  %34 = getelementptr inbounds %struct.netdev_name_node, ptr %28, i32 0, i32 2
  store ptr %0, ptr %34, align 8
  %35 = getelementptr inbounds %struct.netdev_name_node, ptr %28, i32 0, i32 3
  store ptr %0, ptr %35, align 4
  %36 = getelementptr inbounds %struct.netdev_name_node, ptr %28, i32 0, i32 1
  store volatile ptr %36, ptr %36, align 8
  %37 = getelementptr inbounds %struct.netdev_name_node, ptr %28, i32 0, i32 1, i32 1
  store ptr %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 1
  store ptr %28, ptr %38, align 16
  %39 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %32
  %44 = tail call i32 %41(ptr noundef %0) #39
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = icmp sgt i32 %44, 0
  %48 = select i1 %47, i32 -5, i32 %44
  br label %280

49:                                               ; preds = %43, %32
  %50 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 24
  %51 = load i64, ptr %50, align 8
  %52 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %53 = load i64, ptr %52, align 16
  %54 = or i64 %53, %51
  %55 = and i64 %54, 512
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %87, label %57

57:                                               ; preds = %49
  %58 = load ptr, ptr %39, align 8
  %59 = getelementptr inbounds %struct.net_device_ops, ptr %58, i32 0, i32 24
  %60 = load ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.net_device_ops, ptr %58, i32 0, i32 25
  %64 = load ptr, ptr %63, align 4
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %87

66:                                               ; preds = %62, %57
  %67 = load i8, ptr %0, align 64
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = tail call ptr @strchr(ptr noundef %0, i32 noundef 37) #39
  %71 = icmp eq ptr %70, null
  %72 = select i1 %71, ptr %0, ptr @.str.65
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi ptr [ @.str.65, %66 ], [ %72, %69 ]
  %75 = load i8, ptr %13, align 4
  %76 = icmp ult i8 %75, 6
  br i1 %76, label %81, label %77

77:                                               ; preds = %73
  %78 = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %78, label %85, label %79, !prof !22

79:                                               ; preds = %77
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %80 = zext i8 %75 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.72, ptr noundef %0, i32 noundef %80) #39
  br label %85

81:                                               ; preds = %73
  %82 = sext i8 %75 to i32
  %83 = getelementptr inbounds [6 x ptr], ptr @switch.table.__netdev_printk.134, i32 0, i32 %82
  %84 = load ptr, ptr %83, align 4
  br label %85

85:                                               ; preds = %81, %79, %77
  %86 = phi ptr [ @.str.73, %79 ], [ @.str.73, %77 ], [ %84, %81 ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9609, i32 noundef 9, ptr noundef nonnull @.str.54, ptr noundef %74, ptr noundef nonnull %86) #39
  br label %268

87:                                               ; preds = %62, %49
  %88 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 17
  %89 = load i32, ptr %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %130

91:                                               ; preds = %87
  %92 = load i32, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 4), align 16
  %93 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 24), align 4
  %94 = add i32 %92, 1
  %95 = tail call i32 @llvm.smax.i32(i32 %94, i32 1) #39
  %96 = and i32 %95, 255
  %97 = getelementptr %struct.hlist_head, ptr %93, i32 %96
  %98 = load ptr, ptr %97, align 4
  %99 = icmp eq ptr %98, null
  %100 = getelementptr i8, ptr %98, i32 -560
  %101 = icmp eq ptr %100, null
  %102 = or i1 %99, %101
  br i1 %102, label %128, label %113

103:                                              ; preds = %116
  %104 = add nuw i32 %115, 1
  %105 = tail call i32 @llvm.smax.i32(i32 %104, i32 1) #39
  %106 = and i32 %105, 255
  %107 = getelementptr %struct.hlist_head, ptr %93, i32 %106
  %108 = load ptr, ptr %107, align 4
  %109 = icmp eq ptr %108, null
  %110 = getelementptr i8, ptr %108, i32 -560
  %111 = icmp eq ptr %110, null
  %112 = or i1 %109, %111
  br i1 %112, label %128, label %113

113:                                              ; preds = %103, %91
  %114 = phi ptr [ %110, %103 ], [ %100, %91 ]
  %115 = phi i32 [ %105, %103 ], [ %95, %91 ]
  br label %116

116:                                              ; preds = %121, %113
  %117 = phi ptr [ %125, %121 ], [ %114, %113 ]
  %118 = getelementptr inbounds %struct.net_device, ptr %117, i32 0, i32 17
  %119 = load i32, ptr %118, align 4
  %120 = icmp eq i32 %119, %115
  br i1 %120, label %103, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.net_device, ptr %117, i32 0, i32 85
  %123 = load ptr, ptr %122, align 16
  %124 = icmp eq ptr %123, null
  %125 = getelementptr i8, ptr %123, i32 -560
  %126 = icmp eq ptr %125, null
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %116

128:                                              ; preds = %121, %103, %91
  %129 = phi i32 [ %95, %91 ], [ %115, %121 ], [ %105, %103 ]
  store i32 %129, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 4), align 16
  store i32 %129, ptr %88, align 4
  br label %151

130:                                              ; preds = %87
  %131 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 24), align 4
  %132 = and i32 %89, 255
  %133 = getelementptr %struct.hlist_head, ptr %131, i32 %132
  %134 = load ptr, ptr %133, align 4
  %135 = icmp eq ptr %134, null
  %136 = getelementptr i8, ptr %134, i32 -560
  %137 = icmp eq ptr %136, null
  %138 = or i1 %135, %137
  br i1 %138, label %151, label %139

139:                                              ; preds = %144, %130
  %140 = phi ptr [ %148, %144 ], [ %136, %130 ]
  %141 = getelementptr inbounds %struct.net_device, ptr %140, i32 0, i32 17
  %142 = load i32, ptr %141, align 4
  %143 = icmp eq i32 %142, %89
  br i1 %143, label %268, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %struct.net_device, ptr %140, i32 0, i32 85
  %146 = load ptr, ptr %145, align 16
  %147 = icmp eq ptr %146, null
  %148 = getelementptr i8, ptr %146, i32 -560
  %149 = icmp eq ptr %148, null
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %139

151:                                              ; preds = %144, %130, %128
  %152 = or i64 %51, 720575940379297792
  store i64 %152, ptr %50, align 8
  %153 = or i64 %53, 18432
  store i64 %153, ptr %52, align 16
  %154 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 126
  %155 = load ptr, ptr %154, align 16
  %156 = icmp eq ptr %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %151
  %158 = or i64 %53, 4503599627388928
  store i64 %158, ptr %52, align 16
  %159 = or i64 %51, 725079540006668288
  store i64 %159, ptr %50, align 8
  br label %160

160:                                              ; preds = %157, %151
  %161 = phi i64 [ %159, %157 ], [ %152, %151 ]
  %162 = phi i64 [ %158, %157 ], [ %153, %151 ]
  %163 = and i64 %161, %162
  %164 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 25
  store i64 %163, ptr %164, align 32
  %165 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 14
  %166 = load i32, ptr %165, align 8
  %167 = and i32 %166, 8
  %168 = icmp eq i32 %167, 0
  %169 = or i64 %161, 2199023255552
  %170 = select i1 %168, i64 %169, i64 %161
  %171 = and i64 %170, 65536
  %172 = icmp ne i64 %171, 0
  %173 = or i1 %168, %172
  br i1 %173, label %174, label %177

174:                                              ; preds = %160
  %175 = shl nuw nsw i64 %171, 3
  %176 = or i64 %175, %170
  store i64 %176, ptr %50, align 8
  br label %177

177:                                              ; preds = %174, %160
  %178 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 26
  %179 = load i64, ptr %178, align 8
  %180 = shl i64 %179, 3
  %181 = and i64 %180, 524288
  %182 = or i64 %181, %179
  %183 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 28
  %184 = load i64, ptr %183, align 8
  %185 = shl i64 %184, 3
  %186 = and i64 %185, 524288
  %187 = or i64 %186, %184
  %188 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 27
  %189 = load i64, ptr %188, align 16
  %190 = shl i64 %189, 3
  %191 = and i64 %190, 524288
  %192 = or i64 %191, %189
  %193 = or i64 %182, 32
  store i64 %193, ptr %178, align 8
  %194 = or i64 %192, 268435457
  store i64 %194, ptr %188, align 16
  %195 = or i64 %187, 1
  store i64 %195, ptr %183, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %0, ptr %2, align 8
  %196 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  store ptr null, ptr %196, align 4
  %197 = tail call i32 @rtnl_is_locked() #39
  %198 = icmp eq i32 %197, 0
  %199 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %200 = xor i1 %199, true
  %201 = select i1 %198, i1 %200, i1 false
  br i1 %201, label %202, label %203, !prof !15

202:                                              ; preds = %177
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %203

203:                                              ; preds = %202, %177
  %204 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 17, ptr noundef nonnull %2) #39
  %205 = and i32 %204, 32768
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  %208 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 17, ptr noundef nonnull %2) #39
  br label %209

209:                                              ; preds = %207, %203
  %210 = phi i32 [ %208, %207 ], [ %204, %203 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  %211 = and i32 %210, -32769
  %212 = icmp sgt i32 %211, 1
  %213 = sub i32 1, %211
  %214 = select i1 %212, i32 %213, i32 0
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %268

216:                                              ; preds = %209
  %217 = call i32 @netdev_register_kobject(ptr noundef %0) #39
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %220, label %219

219:                                              ; preds = %216
  store i8 3, ptr %13, align 4
  br label %268

220:                                              ; preds = %216
  store i8 1, ptr %13, align 4
  %221 = call i32 @__netdev_update_features(ptr noundef %0)
  %222 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  call void @_set_bit(i32 noundef 1, ptr noundef %222) #39
  call void @linkwatch_init_dev(ptr noundef %0) #39
  call void @dev_init_scheduler(ptr noundef %0) #39
  %223 = icmp eq ptr %0, null
  br i1 %223, label %236, label %224

224:                                              ; preds = %220
  %225 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %226 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 99
  %227 = load ptr, ptr %226, align 8
  %228 = ptrtoint ptr %227 to i32
  %229 = call i32 @llvm.read_register.i32(metadata !0) #39
  %230 = inttoptr i32 %229 to ptr
  %231 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %230) #34, !srcloc !18
  %232 = add i32 %231, %228
  %233 = inttoptr i32 %232 to ptr
  %234 = load i32, ptr %233, align 4
  %235 = add i32 %234, 1
  store i32 %235, ptr %233, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %225) #39, !srcloc !19
  br label %236

236:                                              ; preds = %224, %220
  call fastcc void @list_netdevice(ptr noundef %0)
  %237 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 72
  %238 = load ptr, ptr %237, align 32
  %239 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 51
  %240 = load i8, ptr %239, align 1
  %241 = zext i8 %240 to i32
  call void @add_device_randomness(ptr noundef %238, i32 noundef %241) #39
  %242 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 50
  %243 = load i8, ptr %242, align 8
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %250

245:                                              ; preds = %236
  %246 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 49
  %247 = load ptr, ptr %237, align 32
  %248 = load i8, ptr %239, align 1
  %249 = zext i8 %248 to i32
  call void @llvm.memcpy.p0.p0.i32(ptr align 8 %246, ptr align 1 %247, i32 %249, i1 false)
  br label %250

250:                                              ; preds = %245, %236
  %251 = call i32 @call_netdevice_notifiers(i32 noundef 5, ptr noundef %0)
  %252 = and i32 %251, -32769
  %253 = icmp sgt i32 %252, 1
  %254 = sub i32 1, %252
  %255 = select i1 %253, i32 %254, i32 0
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %250
  %258 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 105
  store i8 0, ptr %258, align 8
  call void @unregister_netdevice_queue(ptr noundef %0, ptr noundef null)
  br label %283

259:                                              ; preds = %250
  %260 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 114
  %261 = load ptr, ptr %260, align 4
  %262 = icmp eq ptr %261, null
  br i1 %262, label %267, label %263

263:                                              ; preds = %259
  %264 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 104
  %265 = load i16, ptr %264, align 2
  %266 = icmp eq i16 %265, 0
  br i1 %266, label %267, label %283

267:                                              ; preds = %263, %259
  call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %0, i32 noundef -1, i32 noundef 3264) #39
  br label %283

268:                                              ; preds = %219, %209, %139, %85
  %269 = phi i32 [ %214, %209 ], [ %217, %219 ], [ -22, %85 ], [ -16, %139 ]
  %270 = load ptr, ptr %39, align 8
  %271 = getelementptr inbounds %struct.net_device_ops, ptr %270, i32 0, i32 1
  %272 = load ptr, ptr %271, align 4
  %273 = icmp eq ptr %272, null
  br i1 %273, label %275, label %274

274:                                              ; preds = %268
  call void %272(ptr noundef %0) #39
  br label %275

275:                                              ; preds = %274, %268
  %276 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 106
  %277 = load ptr, ptr %276, align 4
  %278 = icmp eq ptr %277, null
  br i1 %278, label %280, label %279

279:                                              ; preds = %275
  call void %277(ptr noundef %0) #39
  br label %280

280:                                              ; preds = %279, %275, %46
  %281 = phi i32 [ %269, %279 ], [ %269, %275 ], [ %48, %46 ]
  %282 = load ptr, ptr %38, align 16
  call void @kfree(ptr noundef %282) #39
  br label %283

283:                                              ; preds = %280, %267, %263, %257, %30, %22, %17
  %284 = phi i32 [ %20, %17 ], [ %24, %22 ], [ %281, %280 ], [ %255, %257 ], [ 0, %267 ], [ 0, %263 ], [ -12, %30 ]
  ret i32 %284
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ethtool_check_ops(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_register_kobject(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_init_dev(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_init_scheduler(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @list_netdevice(ptr noundef %0) unnamed_addr #1 {
  %2 = tail call i32 @rtnl_is_locked() #39
  %3 = icmp eq i32 %2, 0
  %4 = load i1, ptr @list_netdevice.__already_done, align 1
  %5 = xor i1 %4, true
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %8, !prof !15

7:                                                ; preds = %1
  store i1 true, ptr @list_netdevice.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 366, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 366) #39
  br label %8

8:                                                ; preds = %7, %1
  tail call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #39
  %9 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 7
  %10 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16, i32 1), align 4
  store ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16), ptr %9, align 4
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 7, i32 1
  store ptr %10, ptr %11, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !10
  store volatile ptr %9, ptr %10, align 4
  store ptr %9, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 16, i32 1), align 4
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 16
  %14 = getelementptr inbounds %struct.netdev_name_node, ptr %13, i32 0, i32 3
  %15 = load ptr, ptr %14, align 4
  %16 = tail call i32 @strnlen(ptr noundef %15, i32 noundef 16) #39
  %17 = tail call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef %15, i32 noundef %16) #40
  %18 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %19 = mul i32 %17, 1640531527
  %20 = lshr i32 %19, 24
  %21 = getelementptr %struct.hlist_head, ptr %18, i32 %20
  %22 = load ptr, ptr %21, align 4
  store ptr %22, ptr %13, align 4
  %23 = getelementptr inbounds %struct.hlist_node, ptr %13, i32 0, i32 1
  store volatile ptr %21, ptr %23, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !9
  store volatile ptr %13, ptr %21, align 4
  %24 = icmp eq ptr %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.hlist_node, ptr %22, i32 0, i32 1
  store volatile ptr %13, ptr %26, align 4
  br label %27

27:                                               ; preds = %25, %8
  %28 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 85
  %29 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 17
  %30 = load i32, ptr %29, align 4
  %31 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 24), align 4
  %32 = and i32 %30, 255
  %33 = getelementptr %struct.hlist_head, ptr %31, i32 %32
  %34 = load ptr, ptr %33, align 4
  store ptr %34, ptr %28, align 4
  %35 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 85, i32 1
  store volatile ptr %33, ptr %35, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !9
  store volatile ptr %28, ptr %33, align 4
  %36 = icmp eq ptr %34, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.hlist_node, ptr %34, i32 0, i32 1
  store volatile ptr %28, ptr %38, align 4
  br label %39

39:                                               ; preds = %37, %27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !23
  tail call void asm sideeffect "str\09$1, [$0]\0A", "r,r,~{cc}"(ptr nonnull @dev_base_lock, i32 0) #39, !srcloc !24
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !25
  %40 = load i32, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 3), align 4
  %41 = add i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = select i1 %42, i32 1, i32 %41
  store i32 %43, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 3), align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @unregister_netdevice_queue(ptr noundef %0, ptr noundef %1) #1 {
  %3 = alloca %struct.list_head, align 8
  %4 = tail call i32 @rtnl_is_locked() #39
  %5 = icmp eq i32 %4, 0
  %6 = load i1, ptr @unregister_netdevice_queue.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !15

9:                                                ; preds = %2
  store i1 true, ptr @unregister_netdevice_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10341, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 10341) #39
  br label %10

10:                                               ; preds = %9, %2
  %11 = icmp eq ptr %1, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 9
  %14 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 9, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = load ptr, ptr %13, align 4
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  store ptr %15, ptr %17, align 4
  store volatile ptr %16, ptr %15, align 4
  %18 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  store ptr %13, ptr %18, align 4
  store ptr %1, ptr %13, align 4
  store ptr %19, ptr %14, align 4
  store volatile ptr %13, ptr %19, align 4
  br label %24

20:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  %21 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %22 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 9
  store ptr %22, ptr %21, align 4
  store ptr %3, ptr %22, align 4
  %23 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 9, i32 1
  store ptr %3, ptr %23, align 4
  store volatile ptr %22, ptr %3, align 8
  call void @unregister_netdevice_many(ptr noundef nonnull %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  br label %24

24:                                               ; preds = %20, %12
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @init_dummy_netdev(ptr noundef %0) #1 {
  tail call void @llvm.memset.p0.i32(ptr noundef align 64 dereferenceable(1408) %0, i8 0, i32 1408, i1 false)
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  store i8 5, ptr %2, align 4
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 8
  store volatile ptr %3, ptr %3, align 4
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 8, i32 1
  store ptr %3, ptr %4, align 4
  %5 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 1, ptr noundef %5) #39
  tail call void @_set_bit(i32 noundef 0, ptr noundef %5) #39
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @register_netdev(ptr noundef %0) #1 {
  %2 = tail call i32 @rtnl_lock_killable() #39
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call i32 @register_netdevice(ptr noundef %0)
  tail call void @rtnl_unlock() #39
  br label %6

6:                                                ; preds = %4, %1
  %7 = phi i32 [ %5, %4 ], [ -4, %1 ]
  ret i32 %7
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rtnl_lock_killable() local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define dso_local i32 @netdev_refcnt_read(ptr nocapture noundef readonly %0) #0 {
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %3 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #40
  %4 = icmp ult i32 %3, %2
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 99
  %7 = load ptr, ptr %6, align 8
  %8 = ptrtoint ptr %7 to i32
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i32 [ %3, %5 ], [ %18, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %17, %9 ]
  %12 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %13 = load i32, ptr %12, align 4
  %14 = add i32 %13, %8
  %15 = inttoptr i32 %14 to ptr
  %16 = load i32, ptr %15, align 4
  %17 = add i32 %16, %11
  %18 = tail call i32 @cpumask_next(i32 noundef %10, ptr noundef nonnull @__cpu_possible_mask) #40
  %19 = icmp ult i32 %18, %2
  br i1 %19, label %9, label %20

20:                                               ; preds = %9, %1
  %21 = phi i32 [ 0, %1 ], [ %17, %9 ]
  ret i32 %21
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #28

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_run_todo() local_unnamed_addr #1 {
  %1 = alloca %struct.netdev_notifier_info, align 8
  %2 = alloca %struct.list_head, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  %3 = load ptr, ptr @net_todo_list, align 4
  store ptr %3, ptr %2, align 8
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  store ptr %2, ptr %4, align 4
  %5 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  store ptr %5, ptr %6, align 4
  store ptr %2, ptr %5, align 4
  store volatile ptr @net_todo_list, ptr @net_todo_list, align 4
  store ptr @net_todo_list, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  call void @__rtnl_unlock() #39
  %7 = load volatile ptr, ptr %2, align 8
  %8 = icmp eq ptr %7, %2
  br i1 %8, label %10, label %9

9:                                                ; preds = %0
  call void @rcu_barrier() #39
  br label %10

10:                                               ; preds = %9, %0
  %11 = load volatile ptr, ptr %2, align 8
  %12 = icmp eq ptr %11, %2
  br i1 %12, label %181, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.netdev_notifier_info, ptr %1, i32 0, i32 1
  br label %15

15:                                               ; preds = %178, %13
  %16 = phi ptr [ %11, %13 ], [ %179, %178 ]
  %17 = getelementptr i8, ptr %16, i32 -640
  %18 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %16, align 4
  %21 = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  store ptr %19, ptr %21, align 4
  store volatile ptr %20, ptr %19, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %16, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %18, align 4
  %22 = getelementptr i8, ptr %16, i32 20
  %23 = load i8, ptr %22, align 4
  %24 = icmp eq i8 %23, 2
  br i1 %24, label %28, label %25, !prof !22

25:                                               ; preds = %15
  %26 = zext i8 %23 to i32
  %27 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55, ptr noundef %17, i32 noundef %26) #42
  call void @dump_stack() #42
  br label %178

28:                                               ; preds = %15
  store i8 3, ptr %22, align 4
  call void @linkwatch_forget_dev(ptr noundef %17) #39
  %29 = load volatile i32, ptr @jiffies, align 64
  %30 = load i32, ptr @nr_cpu_ids, align 4
  %31 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #40
  %32 = icmp ult i32 %31, %30
  br i1 %32, label %33, label %50

33:                                               ; preds = %28
  %34 = getelementptr i8, ptr %16, i32 8
  %35 = load ptr, ptr %34, align 8
  %36 = ptrtoint ptr %35 to i32
  br label %37

37:                                               ; preds = %37, %33
  %38 = phi i32 [ %31, %33 ], [ %46, %37 ]
  %39 = phi i32 [ 0, %33 ], [ %45, %37 ]
  %40 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %38
  %41 = load i32, ptr %40, align 4
  %42 = add i32 %41, %36
  %43 = inttoptr i32 %42 to ptr
  %44 = load i32, ptr %43, align 4
  %45 = add i32 %44, %39
  %46 = call i32 @cpumask_next(i32 noundef %38, ptr noundef nonnull @__cpu_possible_mask) #40
  %47 = icmp ult i32 %46, %30
  br i1 %47, label %37, label %48

48:                                               ; preds = %37
  %49 = icmp eq i32 %45, 1
  br i1 %49, label %123, label %50

50:                                               ; preds = %48, %28
  %51 = getelementptr i8, ptr %16, i32 -604
  %52 = getelementptr i8, ptr %16, i32 8
  br label %53

53:                                               ; preds = %120, %50
  %54 = phi i32 [ %85, %120 ], [ %29, %50 ]
  %55 = phi i32 [ %122, %120 ], [ %29, %50 ]
  %56 = phi i32 [ %92, %120 ], [ 0, %50 ]
  br label %57

57:                                               ; preds = %112, %53
  %58 = phi i32 [ %85, %112 ], [ %54, %53 ]
  %59 = phi i32 [ %92, %112 ], [ %56, %53 ]
  %60 = add i32 %58, 100
  %61 = load volatile i32, ptr @jiffies, align 64
  %62 = sub i32 %60, %61
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %84

64:                                               ; preds = %57
  call void @rtnl_lock() #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #39
  store ptr %17, ptr %1, align 8
  store ptr null, ptr %14, align 4
  %65 = call i32 @rtnl_is_locked() #39
  %66 = icmp eq i32 %65, 0
  %67 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %68 = xor i1 %67, true
  %69 = select i1 %66, i1 %68, i1 false
  br i1 %69, label %70, label %71, !prof !15

70:                                               ; preds = %64
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %71

71:                                               ; preds = %70, %64
  %72 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 6, ptr noundef nonnull %1) #39
  %73 = and i32 %72, 32768
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 6, ptr noundef nonnull %1) #39
  br label %77

77:                                               ; preds = %75, %71
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #39
  call void @__rtnl_unlock() #39
  call void @rcu_barrier() #39
  call void @rtnl_lock() #39
  %78 = load volatile i32, ptr %51, align 4
  %79 = and i32 %78, 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  call void @linkwatch_run_queue() #39
  br label %82

82:                                               ; preds = %81, %77
  call void @__rtnl_unlock() #39
  %83 = load volatile i32, ptr @jiffies, align 64
  br label %84

84:                                               ; preds = %82, %57
  %85 = phi i32 [ %83, %82 ], [ %58, %57 ]
  %86 = icmp eq i32 %59, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @rcu_barrier() #39
  br label %91

88:                                               ; preds = %84
  call void @msleep(i32 noundef %59) #39
  %89 = shl i32 %59, 1
  %90 = call i32 @llvm.smin.i32(i32 %89, i32 250) #39
  br label %91

91:                                               ; preds = %88, %87
  %92 = phi i32 [ %90, %88 ], [ 1, %87 ]
  %93 = load i32, ptr @nr_cpu_ids, align 4
  %94 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #40
  %95 = icmp ult i32 %94, %93
  br i1 %95, label %96, label %112

96:                                               ; preds = %91
  %97 = load ptr, ptr %52, align 8
  %98 = ptrtoint ptr %97 to i32
  br label %99

99:                                               ; preds = %99, %96
  %100 = phi i32 [ %94, %96 ], [ %108, %99 ]
  %101 = phi i32 [ 0, %96 ], [ %107, %99 ]
  %102 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %100
  %103 = load i32, ptr %102, align 4
  %104 = add i32 %103, %98
  %105 = inttoptr i32 %104 to ptr
  %106 = load i32, ptr %105, align 4
  %107 = add i32 %106, %101
  %108 = call i32 @cpumask_next(i32 noundef %100, ptr noundef nonnull @__cpu_possible_mask) #40
  %109 = icmp ult i32 %108, %93
  br i1 %109, label %99, label %110

110:                                              ; preds = %99
  %111 = icmp eq i32 %107, 1
  br i1 %111, label %123, label %112

112:                                              ; preds = %110, %91
  %113 = phi i32 [ %107, %110 ], [ 0, %91 ]
  %114 = load i32, ptr @netdev_unregister_timeout_secs, align 4
  %115 = mul i32 %114, 100
  %116 = add i32 %115, %55
  %117 = load volatile i32, ptr @jiffies, align 64
  %118 = sub i32 %116, %117
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %120, label %57

120:                                              ; preds = %112
  %121 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.125, ptr noundef %17, i32 noundef %113) #42
  %122 = load volatile i32, ptr @jiffies, align 64
  br label %53

123:                                              ; preds = %110, %48
  %124 = phi ptr [ %35, %48 ], [ %97, %110 ]
  %125 = phi i32 [ %30, %48 ], [ %93, %110 ]
  %126 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #40
  %127 = icmp ult i32 %126, %125
  br i1 %127, label %128, label %143

128:                                              ; preds = %123
  %129 = ptrtoint ptr %124 to i32
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i32 [ %126, %128 ], [ %139, %130 ]
  %132 = phi i32 [ 0, %128 ], [ %138, %130 ]
  %133 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %131
  %134 = load i32, ptr %133, align 4
  %135 = add i32 %134, %129
  %136 = inttoptr i32 %135 to ptr
  %137 = load i32, ptr %136, align 4
  %138 = add i32 %137, %132
  %139 = call i32 @cpumask_next(i32 noundef %131, ptr noundef nonnull @__cpu_possible_mask) #40
  %140 = icmp ult i32 %139, %125
  br i1 %140, label %130, label %141

141:                                              ; preds = %130
  %142 = icmp eq i32 %138, 1
  br i1 %142, label %144, label %143, !prof !22

143:                                              ; preds = %141, %123
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9953, 0\0A.popsection", ""() #39, !srcloc !111
  unreachable

144:                                              ; preds = %141
  %145 = getelementptr i8, ptr %16, i32 -568
  %146 = load volatile ptr, ptr %145, align 4
  %147 = icmp eq ptr %146, %145
  br i1 %147, label %149, label %148, !prof !22

148:                                              ; preds = %144
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9954, 0\0A.popsection", ""() #39, !srcloc !112
  unreachable

149:                                              ; preds = %144
  %150 = getelementptr i8, ptr %16, i32 -560
  %151 = load volatile ptr, ptr %150, align 4
  %152 = icmp eq ptr %151, %150
  br i1 %152, label %154, label %153, !prof !22

153:                                              ; preds = %149
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9955, 0\0A.popsection", ""() #39, !srcloc !113
  unreachable

154:                                              ; preds = %149
  %155 = getelementptr i8, ptr %16, i32 -176
  %156 = load volatile ptr, ptr %155, align 16
  %157 = icmp eq ptr %156, null
  br i1 %157, label %159, label %158, !prof !22

158:                                              ; preds = %154
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9956, i32 noundef 9, ptr noundef null) #39
  br label %159

159:                                              ; preds = %158, %154
  %160 = getelementptr i8, ptr %16, i32 -172
  %161 = load volatile ptr, ptr %160, align 4
  %162 = icmp eq ptr %161, null
  br i1 %162, label %164, label %163, !prof !22

163:                                              ; preds = %159
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9957, i32 noundef 9, ptr noundef null) #39
  br label %164

164:                                              ; preds = %163, %159
  %165 = getelementptr i8, ptr %16, i32 28
  %166 = load ptr, ptr %165, align 4
  %167 = icmp eq ptr %166, null
  br i1 %167, label %169, label %168

168:                                              ; preds = %164
  call void %166(ptr noundef %17) #39
  br label %169

169:                                              ; preds = %168, %164
  %170 = getelementptr i8, ptr %16, i32 24
  %171 = load i8, ptr %170, align 8, !range !28
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %169
  call void @free_netdev(ptr noundef %17)
  br label %174

174:                                              ; preds = %173, %169
  call void @rtnl_lock() #39
  %175 = load i32, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 2), align 8
  %176 = add i32 %175, -1
  store i32 %176, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 2), align 8
  call void @__rtnl_unlock() #39
  call void @__wake_up(ptr noundef nonnull @netdev_unregistering_wq, i32 noundef 3, i32 noundef 1, ptr noundef null) #39
  %177 = getelementptr i8, ptr %16, i32 48
  call void @kobject_put(ptr noundef %177) #39
  br label %178

178:                                              ; preds = %174, %25
  %179 = load volatile ptr, ptr %2, align 8
  %180 = icmp eq ptr %179, %2
  br i1 %180, label %181, label %15

181:                                              ; preds = %178, %10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rtnl_unlock() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @free_netdev(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %3 = load i8, ptr %2, align 4
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = tail call i32 @rtnl_is_locked() #39
  %7 = icmp eq i32 %6, 0
  %8 = load i1, ptr @free_netdev.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %5
  store i1 true, ptr @free_netdev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10272, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 10272) #39
  br label %12

12:                                               ; preds = %11, %5
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 105
  store i8 1, ptr %13, align 8
  br label %64

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 87
  %16 = load ptr, ptr %15, align 64
  tail call void @kvfree(ptr noundef %16) #39
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 74
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 73
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %14
  %23 = icmp eq i32 %18, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %24, %22
  %25 = phi ptr [ %30, %24 ], [ %20, %22 ]
  %26 = phi i32 [ %28, %24 ], [ 0, %22 ]
  %27 = getelementptr %struct.netdev_rx_queue, ptr %25, i32 %26
  tail call void @xdp_rxq_info_unreg(ptr noundef %27) #39
  %28 = add nuw i32 %26, 1
  %29 = icmp eq i32 %28, %18
  %30 = load ptr, ptr %19, align 4
  br i1 %29, label %31, label %24

31:                                               ; preds = %24, %22
  %32 = phi ptr [ %20, %22 ], [ %30, %24 ]
  tail call void @kvfree(ptr noundef %32) #39
  br label %33

33:                                               ; preds = %31, %14
  %34 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 82
  %35 = load ptr, ptr %34, align 8
  tail call void @kfree(ptr noundef %35) #39
  tail call void @dev_addr_flush(ptr noundef %0) #39
  %36 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 8
  %37 = load ptr, ptr %36, align 16
  %38 = icmp eq ptr %37, %36
  br i1 %38, label %49, label %39

39:                                               ; preds = %47, %33
  %40 = phi ptr [ %42, %47 ], [ %37, %33 ]
  %41 = getelementptr i8, ptr %40, i32 -192
  %42 = load ptr, ptr %40, align 8
  tail call void @__netif_napi_del(ptr noundef %41) #39
  %43 = tail call i32 @rtnl_is_locked() #39
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  tail call void @synchronize_rcu_expedited() #39
  br label %47

46:                                               ; preds = %39
  tail call void @synchronize_rcu() #39
  br label %47

47:                                               ; preds = %46, %45
  %48 = icmp eq ptr %42, %36
  br i1 %48, label %49, label %39

49:                                               ; preds = %47, %33
  %50 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 99
  %51 = load ptr, ptr %50, align 8
  tail call void @free_percpu(ptr noundef %51) #39
  store ptr null, ptr %50, align 8
  %52 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 93
  %53 = load ptr, ptr %52, align 8
  tail call void @free_percpu(ptr noundef %53) #39
  store ptr null, ptr %52, align 8
  %54 = load i8, ptr %2, align 4
  switch i8 %54, label %61 [
    i8 0, label %55
    i8 3, label %62
  ], !prof !114

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 57
  %57 = load i16, ptr %56, align 2
  %58 = zext i16 %57 to i32
  %59 = sub nsw i32 0, %58
  %60 = getelementptr i8, ptr %0, i32 %59
  tail call void @kvfree(ptr noundef %60) #39
  br label %64

61:                                               ; preds = %49
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10302, 0\0A.popsection", ""() #39, !srcloc !115
  unreachable

62:                                               ; preds = %49
  store i8 4, ptr %2, align 4
  %63 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  tail call void @put_device(ptr noundef %63) #39
  br label %64

64:                                               ; preds = %62, %55, %12
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_put(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_stats_to_stats64(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) #29 {
  %3 = load i32, ptr %1, align 4
  %4 = zext i32 %3 to i64
  store i64 %4, ptr %0, align 8
  %5 = getelementptr i32, ptr %1, i32 1
  %6 = load i32, ptr %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr i64, ptr %0, i32 1
  store i64 %7, ptr %8, align 8
  %9 = getelementptr i32, ptr %1, i32 2
  %10 = load i32, ptr %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr i64, ptr %0, i32 2
  store i64 %11, ptr %12, align 8
  %13 = getelementptr i32, ptr %1, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr i64, ptr %0, i32 3
  store i64 %15, ptr %16, align 8
  %17 = getelementptr i32, ptr %1, i32 4
  %18 = load i32, ptr %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr i64, ptr %0, i32 4
  store i64 %19, ptr %20, align 8
  %21 = getelementptr i32, ptr %1, i32 5
  %22 = load i32, ptr %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr i64, ptr %0, i32 5
  store i64 %23, ptr %24, align 8
  %25 = getelementptr i32, ptr %1, i32 6
  %26 = load i32, ptr %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr i64, ptr %0, i32 6
  store i64 %27, ptr %28, align 8
  %29 = getelementptr i32, ptr %1, i32 7
  %30 = load i32, ptr %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr i64, ptr %0, i32 7
  store i64 %31, ptr %32, align 8
  %33 = getelementptr i32, ptr %1, i32 8
  %34 = load i32, ptr %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr i64, ptr %0, i32 8
  store i64 %35, ptr %36, align 8
  %37 = getelementptr i32, ptr %1, i32 9
  %38 = load i32, ptr %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr i64, ptr %0, i32 9
  store i64 %39, ptr %40, align 8
  %41 = getelementptr i32, ptr %1, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr i64, ptr %0, i32 10
  store i64 %43, ptr %44, align 8
  %45 = getelementptr i32, ptr %1, i32 11
  %46 = load i32, ptr %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr i64, ptr %0, i32 11
  store i64 %47, ptr %48, align 8
  %49 = getelementptr i32, ptr %1, i32 12
  %50 = load i32, ptr %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr i64, ptr %0, i32 12
  store i64 %51, ptr %52, align 8
  %53 = getelementptr i32, ptr %1, i32 13
  %54 = load i32, ptr %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr i64, ptr %0, i32 13
  store i64 %55, ptr %56, align 8
  %57 = getelementptr i32, ptr %1, i32 14
  %58 = load i32, ptr %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr i64, ptr %0, i32 14
  store i64 %59, ptr %60, align 8
  %61 = getelementptr i32, ptr %1, i32 15
  %62 = load i32, ptr %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr i64, ptr %0, i32 15
  store i64 %63, ptr %64, align 8
  %65 = getelementptr i32, ptr %1, i32 16
  %66 = load i32, ptr %65, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr i64, ptr %0, i32 16
  store i64 %67, ptr %68, align 8
  %69 = getelementptr i32, ptr %1, i32 17
  %70 = load i32, ptr %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr i64, ptr %0, i32 17
  store i64 %71, ptr %72, align 8
  %73 = getelementptr i32, ptr %1, i32 18
  %74 = load i32, ptr %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr i64, ptr %0, i32 18
  store i64 %75, ptr %76, align 8
  %77 = getelementptr i32, ptr %1, i32 19
  %78 = load i32, ptr %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr i64, ptr %0, i32 19
  store i64 %79, ptr %80, align 8
  %81 = getelementptr i32, ptr %1, i32 20
  %82 = load i32, ptr %81, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr i64, ptr %0, i32 20
  store i64 %83, ptr %84, align 8
  %85 = getelementptr i32, ptr %1, i32 21
  %86 = load i32, ptr %85, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr i64, ptr %0, i32 21
  store i64 %87, ptr %88, align 8
  %89 = getelementptr i32, ptr %1, i32 22
  %90 = load i32, ptr %89, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr i64, ptr %0, i32 22
  store i64 %91, ptr %92, align 8
  %93 = getelementptr i8, ptr %0, i32 184
  store i64 0, ptr %93, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @dev_get_stats(ptr noundef %0, ptr noundef returned %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 20
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  tail call void @llvm.memset.p0.i32(ptr noundef align 8 dereferenceable(192) %1, i8 0, i32 192, i1 false)
  %9 = load ptr, ptr %5, align 4
  tail call void %9(ptr noundef %0, ptr noundef %1) #39
  %10 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %1, i32 0, i32 6
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %1, i32 0, i32 7
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %1, i32 0, i32 23
  %15 = load i64, ptr %14, align 8
  br label %206

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 23
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %113, label %20

20:                                               ; preds = %16
  %21 = tail call ptr %18(ptr noundef %0) #39
  %22 = load i32, ptr %21, align 4
  %23 = zext i32 %22 to i64
  store i64 %23, ptr %1, align 8
  %24 = getelementptr i32, ptr %21, i32 1
  %25 = load i32, ptr %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr i64, ptr %1, i32 1
  store i64 %26, ptr %27, align 8
  %28 = getelementptr i32, ptr %21, i32 2
  %29 = load i32, ptr %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr i64, ptr %1, i32 2
  store i64 %30, ptr %31, align 8
  %32 = getelementptr i32, ptr %21, i32 3
  %33 = load i32, ptr %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr i64, ptr %1, i32 3
  store i64 %34, ptr %35, align 8
  %36 = getelementptr i32, ptr %21, i32 4
  %37 = load i32, ptr %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr i64, ptr %1, i32 4
  store i64 %38, ptr %39, align 8
  %40 = getelementptr i32, ptr %21, i32 5
  %41 = load i32, ptr %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr i64, ptr %1, i32 5
  store i64 %42, ptr %43, align 8
  %44 = getelementptr i32, ptr %21, i32 6
  %45 = load i32, ptr %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr i64, ptr %1, i32 6
  store i64 %46, ptr %47, align 8
  %48 = getelementptr i32, ptr %21, i32 7
  %49 = load i32, ptr %48, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr i64, ptr %1, i32 7
  store i64 %50, ptr %51, align 8
  %52 = getelementptr i32, ptr %21, i32 8
  %53 = load i32, ptr %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr i64, ptr %1, i32 8
  store i64 %54, ptr %55, align 8
  %56 = getelementptr i32, ptr %21, i32 9
  %57 = load i32, ptr %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr i64, ptr %1, i32 9
  store i64 %58, ptr %59, align 8
  %60 = getelementptr i32, ptr %21, i32 10
  %61 = load i32, ptr %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr i64, ptr %1, i32 10
  store i64 %62, ptr %63, align 8
  %64 = getelementptr i32, ptr %21, i32 11
  %65 = load i32, ptr %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr i64, ptr %1, i32 11
  store i64 %66, ptr %67, align 8
  %68 = getelementptr i32, ptr %21, i32 12
  %69 = load i32, ptr %68, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr i64, ptr %1, i32 12
  store i64 %70, ptr %71, align 8
  %72 = getelementptr i32, ptr %21, i32 13
  %73 = load i32, ptr %72, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr i64, ptr %1, i32 13
  store i64 %74, ptr %75, align 8
  %76 = getelementptr i32, ptr %21, i32 14
  %77 = load i32, ptr %76, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr i64, ptr %1, i32 14
  store i64 %78, ptr %79, align 8
  %80 = getelementptr i32, ptr %21, i32 15
  %81 = load i32, ptr %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr i64, ptr %1, i32 15
  store i64 %82, ptr %83, align 8
  %84 = getelementptr i32, ptr %21, i32 16
  %85 = load i32, ptr %84, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr i64, ptr %1, i32 16
  store i64 %86, ptr %87, align 8
  %88 = getelementptr i32, ptr %21, i32 17
  %89 = load i32, ptr %88, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr i64, ptr %1, i32 17
  store i64 %90, ptr %91, align 8
  %92 = getelementptr i32, ptr %21, i32 18
  %93 = load i32, ptr %92, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr i64, ptr %1, i32 18
  store i64 %94, ptr %95, align 8
  %96 = getelementptr i32, ptr %21, i32 19
  %97 = load i32, ptr %96, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr i64, ptr %1, i32 19
  store i64 %98, ptr %99, align 8
  %100 = getelementptr i32, ptr %21, i32 20
  %101 = load i32, ptr %100, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr i64, ptr %1, i32 20
  store i64 %102, ptr %103, align 8
  %104 = getelementptr i32, ptr %21, i32 21
  %105 = load i32, ptr %104, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr i64, ptr %1, i32 21
  store i64 %106, ptr %107, align 8
  %108 = getelementptr i32, ptr %21, i32 22
  %109 = load i32, ptr %108, align 4
  %110 = zext i32 %109 to i64
  %111 = getelementptr i64, ptr %1, i32 22
  store i64 %110, ptr %111, align 8
  %112 = getelementptr i8, ptr %1, i32 184
  store i64 0, ptr %112, align 1
  br label %206

113:                                              ; preds = %16
  %114 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 36
  %115 = load i32, ptr %114, align 4
  %116 = zext i32 %115 to i64
  store i64 %116, ptr %1, align 8
  %117 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 1
  %118 = load i32, ptr %117, align 4
  %119 = zext i32 %118 to i64
  %120 = getelementptr i64, ptr %1, i32 1
  store i64 %119, ptr %120, align 8
  %121 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 2
  %122 = load i32, ptr %121, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr i64, ptr %1, i32 2
  store i64 %123, ptr %124, align 8
  %125 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 3
  %126 = load i32, ptr %125, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr i64, ptr %1, i32 3
  store i64 %127, ptr %128, align 8
  %129 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 4
  %130 = load i32, ptr %129, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr i64, ptr %1, i32 4
  store i64 %131, ptr %132, align 8
  %133 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 5
  %134 = load i32, ptr %133, align 4
  %135 = zext i32 %134 to i64
  %136 = getelementptr i64, ptr %1, i32 5
  store i64 %135, ptr %136, align 8
  %137 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 6
  %138 = load i32, ptr %137, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr i64, ptr %1, i32 6
  store i64 %139, ptr %140, align 8
  %141 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 7
  %142 = load i32, ptr %141, align 4
  %143 = zext i32 %142 to i64
  %144 = getelementptr i64, ptr %1, i32 7
  store i64 %143, ptr %144, align 8
  %145 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 8
  %146 = load i32, ptr %145, align 4
  %147 = zext i32 %146 to i64
  %148 = getelementptr i64, ptr %1, i32 8
  store i64 %147, ptr %148, align 8
  %149 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 9
  %150 = load i32, ptr %149, align 4
  %151 = zext i32 %150 to i64
  %152 = getelementptr i64, ptr %1, i32 9
  store i64 %151, ptr %152, align 8
  %153 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 10
  %154 = load i32, ptr %153, align 4
  %155 = zext i32 %154 to i64
  %156 = getelementptr i64, ptr %1, i32 10
  store i64 %155, ptr %156, align 8
  %157 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 11
  %158 = load i32, ptr %157, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr i64, ptr %1, i32 11
  store i64 %159, ptr %160, align 8
  %161 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 12
  %162 = load i32, ptr %161, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr i64, ptr %1, i32 12
  store i64 %163, ptr %164, align 8
  %165 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 13
  %166 = load i32, ptr %165, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr i64, ptr %1, i32 13
  store i64 %167, ptr %168, align 8
  %169 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 14
  %170 = load i32, ptr %169, align 4
  %171 = zext i32 %170 to i64
  %172 = getelementptr i64, ptr %1, i32 14
  store i64 %171, ptr %172, align 8
  %173 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 15
  %174 = load i32, ptr %173, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr i64, ptr %1, i32 15
  store i64 %175, ptr %176, align 8
  %177 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 16
  %178 = load i32, ptr %177, align 4
  %179 = zext i32 %178 to i64
  %180 = getelementptr i64, ptr %1, i32 16
  store i64 %179, ptr %180, align 8
  %181 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 17
  %182 = load i32, ptr %181, align 4
  %183 = zext i32 %182 to i64
  %184 = getelementptr i64, ptr %1, i32 17
  store i64 %183, ptr %184, align 8
  %185 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 18
  %186 = load i32, ptr %185, align 4
  %187 = zext i32 %186 to i64
  %188 = getelementptr i64, ptr %1, i32 18
  store i64 %187, ptr %188, align 8
  %189 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 19
  %190 = load i32, ptr %189, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr i64, ptr %1, i32 19
  store i64 %191, ptr %192, align 8
  %193 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 20
  %194 = load i32, ptr %193, align 4
  %195 = zext i32 %194 to i64
  %196 = getelementptr i64, ptr %1, i32 20
  store i64 %195, ptr %196, align 8
  %197 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 21
  %198 = load i32, ptr %197, align 4
  %199 = zext i32 %198 to i64
  %200 = getelementptr i64, ptr %1, i32 21
  store i64 %199, ptr %200, align 8
  %201 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 22
  %202 = load i32, ptr %201, align 4
  %203 = zext i32 %202 to i64
  %204 = getelementptr i64, ptr %1, i32 22
  store i64 %203, ptr %204, align 8
  %205 = getelementptr i8, ptr %1, i32 184
  store i64 0, ptr %205, align 1
  br label %206

206:                                              ; preds = %113, %20, %8
  %207 = phi i64 [ 0, %20 ], [ 0, %113 ], [ %15, %8 ]
  %208 = phi i64 [ %50, %20 ], [ %143, %113 ], [ %13, %8 ]
  %209 = phi i64 [ %46, %20 ], [ %139, %113 ], [ %11, %8 ]
  %210 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 37
  %211 = load volatile i32, ptr %210, align 4
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %1, i32 0, i32 6
  %214 = add i64 %209, %212
  store i64 %214, ptr %213, align 8
  %215 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 38
  %216 = load volatile i32, ptr %215, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %1, i32 0, i32 7
  %219 = add i64 %208, %217
  store i64 %219, ptr %218, align 8
  %220 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 39
  %221 = load volatile i32, ptr %220, align 4
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %1, i32 0, i32 23
  %224 = add i64 %207, %222
  store i64 %224, ptr %223, align 8
  ret ptr %1
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_fetch_sw_netstats(ptr nocapture noundef %0, ptr noundef %1) #1 {
  %3 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #40
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %5 = icmp ult i32 %3, %4
  br i1 %5, label %6, label %49

6:                                                ; preds = %2
  %7 = ptrtoint ptr %1 to i32
  %8 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %0, i32 0, i32 2
  %9 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %0, i32 0, i32 3
  br label %11

11:                                               ; preds = %37, %6
  %12 = phi i32 [ %3, %6 ], [ %46, %37 ]
  %13 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %14 = load i32, ptr %13, align 4
  %15 = add i32 %14, %7
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %16, i32 0, i32 4
  %18 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %16, i32 0, i32 1
  %19 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %16, i32 0, i32 2
  %20 = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %16, i32 0, i32 3
  br label %21

21:                                               ; preds = %29, %11
  %22 = load volatile i32, ptr %17, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %25, %21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !116
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #39, !srcloc !117
  %26 = load volatile i32, ptr %17, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %25

29:                                               ; preds = %25, %21
  %30 = phi i32 [ %22, %21 ], [ %26, %25 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !118
  %31 = load i64, ptr %16, align 32
  %32 = load i64, ptr %18, align 8
  %33 = load i64, ptr %19, align 16
  %34 = load i64, ptr %20, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !119
  %35 = load volatile i32, ptr %17, align 4
  %36 = icmp eq i32 %35, %30
  br i1 %36, label %37, label %21

37:                                               ; preds = %29
  %38 = load i64, ptr %0, align 8
  %39 = add i64 %38, %31
  store i64 %39, ptr %0, align 8
  %40 = load i64, ptr %8, align 8
  %41 = add i64 %40, %32
  store i64 %41, ptr %8, align 8
  %42 = load i64, ptr %9, align 8
  %43 = add i64 %42, %33
  store i64 %43, ptr %9, align 8
  %44 = load i64, ptr %10, align 8
  %45 = add i64 %44, %34
  store i64 %45, ptr %10, align 8
  %46 = tail call i32 @cpumask_next(i32 noundef %12, ptr noundef nonnull @__cpu_possible_mask) #40
  %47 = load i32, ptr @nr_cpu_ids, align 4
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %11, label %49

49:                                               ; preds = %37, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @dev_get_tstats64(ptr noundef readonly %0, ptr noundef %1) #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 36
  %4 = load i32, ptr %3, align 4
  %5 = zext i32 %4 to i64
  store i64 %5, ptr %1, align 8
  %6 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 1
  %7 = load i32, ptr %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr i64, ptr %1, i32 1
  store i64 %8, ptr %9, align 8
  %10 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 2
  %11 = load i32, ptr %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr i64, ptr %1, i32 2
  store i64 %12, ptr %13, align 8
  %14 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr i64, ptr %1, i32 3
  store i64 %16, ptr %17, align 8
  %18 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr i64, ptr %1, i32 4
  store i64 %20, ptr %21, align 8
  %22 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr i64, ptr %1, i32 5
  store i64 %24, ptr %25, align 8
  %26 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 6
  %27 = load i32, ptr %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr i64, ptr %1, i32 6
  store i64 %28, ptr %29, align 8
  %30 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 7
  %31 = load i32, ptr %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr i64, ptr %1, i32 7
  store i64 %32, ptr %33, align 8
  %34 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 8
  %35 = load i32, ptr %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr i64, ptr %1, i32 8
  store i64 %36, ptr %37, align 8
  %38 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 9
  %39 = load i32, ptr %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr i64, ptr %1, i32 9
  store i64 %40, ptr %41, align 8
  %42 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 10
  %43 = load i32, ptr %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr i64, ptr %1, i32 10
  store i64 %44, ptr %45, align 8
  %46 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 11
  %47 = load i32, ptr %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr i64, ptr %1, i32 11
  store i64 %48, ptr %49, align 8
  %50 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 12
  %51 = load i32, ptr %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr i64, ptr %1, i32 12
  store i64 %52, ptr %53, align 8
  %54 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 13
  %55 = load i32, ptr %54, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr i64, ptr %1, i32 13
  store i64 %56, ptr %57, align 8
  %58 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 14
  %59 = load i32, ptr %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr i64, ptr %1, i32 14
  store i64 %60, ptr %61, align 8
  %62 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 15
  %63 = load i32, ptr %62, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr i64, ptr %1, i32 15
  store i64 %64, ptr %65, align 8
  %66 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 16
  %67 = load i32, ptr %66, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr i64, ptr %1, i32 16
  store i64 %68, ptr %69, align 8
  %70 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 17
  %71 = load i32, ptr %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr i64, ptr %1, i32 17
  store i64 %72, ptr %73, align 8
  %74 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 18
  %75 = load i32, ptr %74, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr i64, ptr %1, i32 18
  store i64 %76, ptr %77, align 8
  %78 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 19
  %79 = load i32, ptr %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr i64, ptr %1, i32 19
  store i64 %80, ptr %81, align 8
  %82 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 20
  %83 = load i32, ptr %82, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr i64, ptr %1, i32 20
  store i64 %84, ptr %85, align 8
  %86 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 21
  %87 = load i32, ptr %86, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr i64, ptr %1, i32 21
  store i64 %88, ptr %89, align 8
  %90 = getelementptr %struct.net_device, ptr %0, i32 0, i32 36, i32 22
  %91 = load i32, ptr %90, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr i64, ptr %1, i32 22
  store i64 %92, ptr %93, align 8
  %94 = getelementptr i8, ptr %1, i32 184
  store i64 0, ptr %94, align 1
  %95 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 110
  %96 = load ptr, ptr %95, align 8
  tail call void @dev_fetch_sw_netstats(ptr noundef %1, ptr noundef %96)
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @dev_ingress_queue_create(ptr nocapture noundef readonly %0) local_unnamed_addr #24 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 82
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @netdev_set_default_ethtool_ops(ptr nocapture noundef %0, ptr noundef %1) #21 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 42
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, @default_ethtool_ops
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store ptr %1, ptr %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @netdev_freemem(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 57
  %3 = load i16, ptr %2, align 2
  %4 = zext i16 %3 to i32
  %5 = sub nsw i32 0, %4
  %6 = getelementptr i8, ptr %0, i32 %5
  tail call void @kvfree(ptr noundef %6) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @alloc_netdev_mqs(i32 noundef %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5) #1 {
  %7 = tail call i32 @strlen(ptr noundef %1)
  %8 = icmp ugt i32 %7, 15
  br i1 %8, label %9, label %10, !prof !15

9:                                                ; preds = %6
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10142, 0\0A.popsection", ""() #39, !srcloc !120
  unreachable

10:                                               ; preds = %6
  %11 = icmp eq i32 %4, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.56) #42
  br label %152

14:                                               ; preds = %10
  %15 = icmp eq i32 %5, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57) #42
  br label %152

18:                                               ; preds = %14
  %19 = add i32 %0, 1439
  %20 = tail call noalias ptr @kvmalloc_node(i32 noundef %19, i32 noundef 4214208, i32 noundef -1) #44
  %21 = icmp eq ptr %20, null
  br i1 %21, label %152, label %22

22:                                               ; preds = %18
  %23 = ptrtoint ptr %20 to i32
  %24 = add i32 %23, 31
  %25 = and i32 %24, -32
  %26 = inttoptr i32 %25 to ptr
  %27 = sub i32 %25, %23
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 57
  store i16 %28, ptr %29, align 2
  %30 = tail call noalias ptr @__alloc_percpu(i32 noundef 4, i32 noundef 4) #44
  %31 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 99
  store ptr %30, ptr %31, align 8
  %32 = icmp eq ptr %30, null
  br i1 %32, label %147, label %33

33:                                               ; preds = %22
  %34 = icmp eq i32 %25, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %33
  %36 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %37 = load ptr, ptr %31, align 8
  %38 = ptrtoint ptr %37 to i32
  %39 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %40 = inttoptr i32 %39 to ptr
  %41 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %40) #34, !srcloc !18
  %42 = add i32 %41, %38
  %43 = inttoptr i32 %42 to ptr
  %44 = load i32, ptr %43, align 4
  %45 = add i32 %44, 1
  store i32 %45, ptr %43, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %36) #39, !srcloc !19
  br label %46

46:                                               ; preds = %35, %33
  %47 = tail call i32 @dev_addr_init(ptr noundef %26) #39
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %145

49:                                               ; preds = %46
  tail call void @dev_mc_init(ptr noundef %26) #39
  tail call void @dev_uc_init(ptr noundef %26) #39
  %50 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 115
  store i32 65536, ptr %50, align 32
  %51 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 116
  store i16 -1, ptr %51, align 4
  %52 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 79
  store i32 65536, ptr %52, align 4
  %53 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 52
  store i8 1, ptr %53, align 2
  %54 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 53
  store i8 1, ptr %54, align 1
  %55 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 8
  store volatile ptr %55, ptr %55, align 16
  %56 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 8, i32 1
  store ptr %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 9
  store volatile ptr %57, ptr %57, align 8
  %58 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 9, i32 1
  store ptr %57, ptr %58, align 4
  %59 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 10
  store volatile ptr %59, ptr %59, align 32
  %60 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 10, i32 1
  store ptr %59, ptr %60, align 4
  %61 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 101
  store volatile ptr %61, ptr %61, align 4
  %62 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 101, i32 1
  store ptr %61, ptr %62, align 16
  %63 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 13
  store volatile ptr %63, ptr %63, align 8
  %64 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 13, i32 0, i32 1
  store ptr %63, ptr %64, align 4
  %65 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 13, i32 1
  store volatile ptr %65, ptr %65, align 32
  %66 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 13, i32 1, i32 1
  store ptr %65, ptr %66, align 4
  %67 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 11
  store volatile ptr %67, ptr %67, align 8
  %68 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 11, i32 1
  store ptr %67, ptr %68, align 4
  %69 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 12
  store volatile ptr %69, ptr %69, align 16
  %70 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 12, i32 1
  store ptr %69, ptr %70, align 4
  %71 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 125
  store volatile ptr %71, ptr %71, align 8
  %72 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 125, i32 1
  store ptr %71, ptr %72, align 4
  %73 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 15
  store i64 131104, ptr %73, align 16
  tail call void %3(ptr noundef %26) #39
  %74 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 91
  %75 = load i32, ptr %74, align 16
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %49
  %78 = load i64, ptr %73, align 16
  %79 = or i64 %78, 524288
  store i64 %79, ptr %73, align 16
  store i32 1000, ptr %74, align 16
  br label %80

80:                                               ; preds = %77, %49
  %81 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 88
  store i32 %4, ptr %81, align 4
  %82 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 89
  store i32 %4, ptr %82, align 8
  %83 = add i32 %4, -65536
  %84 = icmp ult i32 %83, -65535
  br i1 %84, label %144, label %85

85:                                               ; preds = %80
  %86 = shl nuw nsw i32 %4, 8
  %87 = tail call noalias ptr @kvmalloc_node(i32 noundef %86, i32 noundef 4214208, i32 noundef -1) #44
  %88 = icmp eq ptr %87, null
  br i1 %88, label %144, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 87
  store ptr %87, ptr %90, align 64
  %91 = load i32, ptr %81, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %109, label %93

93:                                               ; preds = %89
  %94 = getelementptr %struct.netdev_queue, ptr %87, i32 0, i32 9
  store i32 0, ptr %94, align 64
  %95 = getelementptr %struct.netdev_queue, ptr %87, i32 0, i32 10
  store i32 -1, ptr %95, align 4
  store ptr %26, ptr %87, align 64
  %96 = getelementptr %struct.netdev_queue, ptr %87, i32 0, i32 14
  tail call void @dql_init(ptr noundef %96, i32 noundef 100) #39
  %97 = load i32, ptr %81, align 4
  %98 = icmp ugt i32 %97, 1
  br i1 %98, label %99, label %109

99:                                               ; preds = %99, %93
  %100 = phi i32 [ %106, %99 ], [ 1, %93 ]
  %101 = load ptr, ptr %90, align 64
  %102 = getelementptr %struct.netdev_queue, ptr %101, i32 %100
  %103 = getelementptr %struct.netdev_queue, ptr %101, i32 %100, i32 9
  store i32 0, ptr %103, align 64
  %104 = getelementptr %struct.netdev_queue, ptr %101, i32 %100, i32 10
  store i32 -1, ptr %104, align 4
  store ptr %26, ptr %102, align 64
  %105 = getelementptr %struct.netdev_queue, ptr %101, i32 %100, i32 14
  tail call void @dql_init(ptr noundef %105, i32 noundef 100) #39
  %106 = add nuw i32 %100, 1
  %107 = load i32, ptr %81, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %99, label %109

109:                                              ; preds = %99, %93, %89
  %110 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 92
  store i32 0, ptr %110, align 4
  %111 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 74
  store i32 %5, ptr %111, align 8
  %112 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 75
  store i32 %5, ptr %112, align 4
  %113 = shl i32 %5, 7
  %114 = tail call noalias ptr @kvmalloc_node(i32 noundef %113, i32 noundef 4214208, i32 noundef -1) #44
  %115 = icmp eq ptr %114, null
  br i1 %115, label %144, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 73
  store ptr %114, ptr %117, align 4
  br label %118

118:                                              ; preds = %126, %116
  %119 = phi i32 [ %127, %126 ], [ 0, %116 ]
  %120 = getelementptr %struct.netdev_rx_queue, ptr %114, i32 %119
  %121 = getelementptr %struct.netdev_rx_queue, ptr %114, i32 %119, i32 4
  store ptr %26, ptr %121, align 4
  %122 = tail call i32 @xdp_rxq_info_reg(ptr noundef %120, ptr noundef %26, i32 noundef %119, i32 noundef 0) #39
  %123 = icmp slt i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = icmp eq i32 %119, 0
  br i1 %125, label %134, label %129

126:                                              ; preds = %118
  %127 = add nuw i32 %119, 1
  %128 = icmp eq i32 %127, %5
  br i1 %128, label %136, label %118

129:                                              ; preds = %129, %124
  %130 = phi i32 [ %131, %129 ], [ %119, %124 ]
  %131 = add i32 %130, -1
  %132 = getelementptr %struct.netdev_rx_queue, ptr %114, i32 %131
  tail call void @xdp_rxq_info_unreg(ptr noundef %132) #39
  %133 = icmp eq i32 %131, 0
  br i1 %133, label %134, label %129

134:                                              ; preds = %129, %124
  %135 = load ptr, ptr %117, align 4
  tail call void @kvfree(ptr noundef %135) #39
  store ptr null, ptr %117, align 4
  br label %144

136:                                              ; preds = %126
  %137 = tail call ptr @strcpy(ptr noundef %26, ptr noundef %1)
  %138 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 34
  store i8 %2, ptr %138, align 1
  %139 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 35
  store i32 0, ptr %139, align 4
  %140 = getelementptr inbounds %struct.net_device, ptr %26, i32 0, i32 42
  %141 = load ptr, ptr %140, align 8
  %142 = icmp eq ptr %141, null
  br i1 %142, label %143, label %152

143:                                              ; preds = %136
  store ptr @default_ethtool_ops, ptr %140, align 8
  br label %152

144:                                              ; preds = %134, %109, %85, %80
  tail call void @free_netdev(ptr noundef %26)
  br label %152

145:                                              ; preds = %46
  %146 = load ptr, ptr %31, align 8
  tail call void @free_percpu(ptr noundef %146) #39
  br label %147

147:                                              ; preds = %145, %22
  %148 = load i16, ptr %29, align 2
  %149 = zext i16 %148 to i32
  %150 = sub nsw i32 0, %149
  %151 = getelementptr i8, ptr %26, i32 %150
  tail call void @kvfree(ptr noundef %151) #39
  br label %152

152:                                              ; preds = %147, %144, %143, %136, %18, %16, %12
  %153 = phi ptr [ null, %12 ], [ null, %16 ], [ null, %147 ], [ null, %144 ], [ null, %18 ], [ %26, %143 ], [ %26, %136 ]
  ret ptr %153
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #30

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_addr_init(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_mc_init(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_uc_init(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_flush(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu_expedited() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @unregister_netdevice_many(ptr noundef %0) #1 {
  %2 = alloca %struct.netdev_notifier_info, align 8
  %3 = alloca %struct.netdev_bpf, align 4
  %4 = alloca %struct.list_head, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %4, ptr %4, align 8
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  %6 = load i1, ptr @dev_boot_phase, align 4
  br i1 %6, label %8, label %7, !prof !22

7:                                                ; preds = %1
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10366, 0\0A.popsection", ""() #39, !srcloc !121
  unreachable

8:                                                ; preds = %1
  %9 = call i32 @rtnl_is_locked() #39
  %10 = icmp eq i32 %9, 0
  %11 = load i1, ptr @unregister_netdevice_many.__already_done, align 1
  %12 = xor i1 %11, true
  %13 = select i1 %10, i1 %12, i1 false
  br i1 %13, label %14, label %15, !prof !15

14:                                               ; preds = %8
  store i1 true, ptr @unregister_netdevice_many.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10367, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 10367) #39
  br label %15

15:                                               ; preds = %14, %8
  %16 = load volatile ptr, ptr %0, align 4
  %17 = icmp eq ptr %16, %0
  br i1 %17, label %331, label %21

18:                                               ; preds = %36
  %19 = load ptr, ptr %0, align 4
  %20 = icmp eq ptr %19, %0
  br i1 %20, label %45, label %38

21:                                               ; preds = %36, %15
  %22 = phi ptr [ %23, %36 ], [ %16, %15 ]
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr i8, ptr %22, i32 604
  %25 = load i8, ptr %24, align 4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10381, i32 noundef 9, ptr noundef null) #39
  %28 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = load ptr, ptr %22, align 4
  %31 = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  store ptr %29, ptr %31, align 4
  store volatile ptr %30, ptr %29, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %22, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %28, align 4
  br label %36

32:                                               ; preds = %21
  %33 = getelementptr i8, ptr %22, i32 605
  store i8 1, ptr %33, align 1
  %34 = icmp eq i8 %25, 1
  br i1 %34, label %36, label %35, !prof !22

35:                                               ; preds = %32
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10386, 0\0A.popsection", ""() #39, !srcloc !122
  unreachable

36:                                               ; preds = %32, %27
  %37 = icmp eq ptr %23, %0
  br i1 %37, label %18, label %21

38:                                               ; preds = %38, %18
  %39 = phi ptr [ %43, %38 ], [ %19, %18 ]
  %40 = getelementptr i8, ptr %39, i32 8
  %41 = load ptr, ptr %5, align 4
  store ptr %40, ptr %5, align 4
  store ptr %4, ptr %40, align 4
  %42 = getelementptr i8, ptr %39, i32 12
  store ptr %41, ptr %42, align 4
  store volatile ptr %40, ptr %41, align 4
  %43 = load ptr, ptr %39, align 4
  %44 = icmp eq ptr %43, %0
  br i1 %44, label %45, label %38

45:                                               ; preds = %38, %18
  call void @dev_close_many(ptr noundef nonnull %4, i1 noundef zeroext true)
  %46 = load ptr, ptr %0, align 4
  %47 = icmp eq ptr %46, %0
  br i1 %47, label %86, label %48

48:                                               ; preds = %78, %45
  %49 = phi ptr [ %84, %78 ], [ %46, %45 ]
  %50 = call i32 @rtnl_is_locked() #39
  %51 = icmp eq i32 %50, 0
  %52 = load i1, ptr @unlist_netdevice.__already_done, align 1
  %53 = xor i1 %52, true
  %54 = select i1 %51, i1 %53, i1 false
  br i1 %54, label %55, label %56, !prof !15

55:                                               ; preds = %48
  store i1 true, ptr @unlist_netdevice.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 383, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 383) #39
  br label %56

56:                                               ; preds = %55, %48
  call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #39
  %57 = getelementptr i8, ptr %49, i32 -16
  %58 = getelementptr i8, ptr %49, i32 -12
  %59 = load ptr, ptr %58, align 4
  %60 = load ptr, ptr %57, align 4
  %61 = getelementptr inbounds %struct.list_head, ptr %60, i32 0, i32 1
  store ptr %59, ptr %61, align 4
  store volatile ptr %60, ptr %59, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %58, align 4
  %62 = getelementptr i8, ptr %49, i32 -40
  %63 = load ptr, ptr %62, align 16
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.hlist_node, ptr %63, i32 0, i32 1
  %66 = load ptr, ptr %65, align 4
  store volatile ptr %64, ptr %66, align 4
  %67 = icmp eq ptr %64, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %56
  %69 = getelementptr inbounds %struct.hlist_node, ptr %64, i32 0, i32 1
  store volatile ptr %66, ptr %69, align 4
  br label %70

70:                                               ; preds = %68, %56
  store volatile ptr inttoptr (i32 290 to ptr), ptr %65, align 4
  %71 = getelementptr i8, ptr %49, i32 504
  %72 = load ptr, ptr %71, align 4
  %73 = getelementptr i8, ptr %49, i32 508
  %74 = load ptr, ptr %73, align 4
  store volatile ptr %72, ptr %74, align 4
  %75 = icmp eq ptr %72, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.hlist_node, ptr %72, i32 0, i32 1
  store volatile ptr %74, ptr %77, align 4
  br label %78

78:                                               ; preds = %76, %70
  store volatile ptr inttoptr (i32 290 to ptr), ptr %73, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !23
  call void asm sideeffect "str\09$1, [$0]\0A", "r,r,~{cc}"(ptr nonnull @dev_base_lock, i32 0) #39, !srcloc !24
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !25
  %79 = load i32, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 3), align 4
  %80 = add i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, i32 1, i32 %80
  store i32 %82, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 3), align 4
  %83 = getelementptr i8, ptr %49, i32 604
  store i8 2, ptr %83, align 4
  %84 = load ptr, ptr %49, align 4
  %85 = icmp eq ptr %84, %0
  br i1 %85, label %86, label %48

86:                                               ; preds = %78, %45
  %87 = call i32 @rtnl_is_locked() #39
  %88 = icmp eq i32 %87, 0
  %89 = load i1, ptr @flush_all_backlogs.__already_done, align 1
  %90 = xor i1 %89, true
  %91 = select i1 %88, i1 %90, i1 false
  br i1 %91, label %92, label %93, !prof !15

92:                                               ; preds = %86
  store i1 true, ptr @flush_all_backlogs.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5711, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 5711) #39
  br label %93

93:                                               ; preds = %92, %86
  call void @cpus_read_lock() #39
  store i32 0, ptr @flush_all_backlogs.flush_cpus, align 4
  %94 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #40
  %95 = load i32, ptr @nr_cpu_ids, align 4
  %96 = icmp ult i32 %94, %95
  br i1 %96, label %101, label %97

97:                                               ; preds = %126, %93
  %98 = phi i32 [ %95, %93 ], [ %128, %126 ]
  %99 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @flush_all_backlogs.flush_cpus) #40
  %100 = icmp ult i32 %99, %98
  br i1 %100, label %130, label %140

101:                                              ; preds = %126, %93
  %102 = phi i32 [ %127, %126 ], [ %94, %93 ]
  %103 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %102
  %104 = load i32, ptr %103, align 4
  %105 = add i32 %104, ptrtoint (ptr @softnet_data to i32)
  %106 = inttoptr i32 %105 to ptr
  call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %107 = getelementptr inbounds %struct.softnet_data, ptr %106, i32 0, i32 19, i32 2
  call void @_raw_spin_lock(ptr noundef %107) #39
  %108 = getelementptr inbounds %struct.softnet_data, ptr %106, i32 0, i32 19
  %109 = load ptr, ptr %108, align 4
  %110 = icmp eq ptr %109, %108
  br i1 %110, label %111, label %117

111:                                              ; preds = %101
  %112 = getelementptr inbounds %struct.softnet_data, ptr %106, i32 0, i32 1
  %113 = load volatile ptr, ptr %112, align 4
  %114 = icmp eq ptr %113, %112
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %115 = load i16, ptr %107, align 4
  %116 = add i16 %115, 1
  store i16 %116, ptr %107, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br i1 %114, label %126, label %120

117:                                              ; preds = %101
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %118 = load i16, ptr %107, align 4
  %119 = add i16 %118, 1
  store i16 %119, ptr %107, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br label %120

120:                                              ; preds = %117, %111
  %121 = load ptr, ptr @system_highpri_wq, align 4
  %122 = load i32, ptr %103, align 4
  %123 = add i32 %122, ptrtoint (ptr @flush_works to i32)
  %124 = inttoptr i32 %123 to ptr
  %125 = call zeroext i1 @queue_work_on(i32 noundef %102, ptr noundef %121, ptr noundef %124) #39
  call void @_set_bit(i32 noundef %102, ptr noundef nonnull @flush_all_backlogs.flush_cpus) #39
  br label %126

126:                                              ; preds = %120, %111
  %127 = call i32 @cpumask_next(i32 noundef %102, ptr noundef nonnull @__cpu_online_mask) #40
  %128 = load i32, ptr @nr_cpu_ids, align 4
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %101, label %97

130:                                              ; preds = %130, %97
  %131 = phi i32 [ %137, %130 ], [ %99, %97 ]
  %132 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %131
  %133 = load i32, ptr %132, align 4
  %134 = add i32 %133, ptrtoint (ptr @flush_works to i32)
  %135 = inttoptr i32 %134 to ptr
  %136 = call zeroext i1 @flush_work(ptr noundef %135) #39
  %137 = call i32 @cpumask_next(i32 noundef %131, ptr noundef nonnull @flush_all_backlogs.flush_cpus) #40
  %138 = load i32, ptr @nr_cpu_ids, align 4
  %139 = icmp ult i32 %137, %138
  br i1 %139, label %130, label %140

140:                                              ; preds = %130, %97
  call void @cpus_read_unlock() #39
  %141 = call i32 @rtnl_is_locked() #39
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  call void @synchronize_rcu_expedited() #39
  br label %145

144:                                              ; preds = %140
  call void @synchronize_rcu() #39
  br label %145

145:                                              ; preds = %144, %143
  %146 = load ptr, ptr %0, align 4
  %147 = icmp eq ptr %146, %0
  br i1 %147, label %292, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %struct.netdev_bpf, ptr %3, i32 0, i32 1
  %150 = getelementptr inbounds %struct.netdev_bpf, ptr %3, i32 0, i32 1, i32 0, i32 2
  %151 = getelementptr inbounds %struct.netdev_bpf, ptr %3, i32 0, i32 1, i32 0, i32 1
  %152 = getelementptr inbounds %struct.netdev_notifier_info, ptr %2, i32 0, i32 1
  br label %153

153:                                              ; preds = %289, %148
  %154 = phi ptr [ %146, %148 ], [ %290, %289 ]
  %155 = getelementptr i8, ptr %154, i32 -56
  call void @dev_shutdown(ptr noundef %155) #39
  %156 = call i32 @rtnl_is_locked() #39
  %157 = icmp eq i32 %156, 0
  %158 = load i1, ptr @dev_xdp_uninstall.__already_done, align 1
  %159 = xor i1 %158, true
  %160 = select i1 %157, i1 %159, i1 false
  br i1 %160, label %161, label %162, !prof !15

161:                                              ; preds = %153
  store i1 true, ptr @dev_xdp_uninstall.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8735, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 8735) #39
  br label %162

162:                                              ; preds = %161, %153
  %163 = getelementptr i8, ptr %154, i32 64
  br label %164

164:                                              ; preds = %202, %162
  %165 = phi i32 [ 0, %162 ], [ %203, %202 ]
  %166 = getelementptr %struct.net_device, ptr %155, i32 0, i32 128, i32 %165, i32 1
  %167 = load ptr, ptr %166, align 4
  %168 = icmp eq ptr %167, null
  %169 = getelementptr inbounds %struct.bpf_link, ptr %167, i32 0, i32 4
  %170 = getelementptr %struct.net_device, ptr %155, i32 0, i32 128, i32 %165
  %171 = select i1 %168, ptr %170, ptr %169
  %172 = load ptr, ptr %171, align 4
  %173 = icmp eq ptr %172, null
  br i1 %173, label %202, label %174

174:                                              ; preds = %164
  switch i32 %165, label %202 [
    i32 0, label %180
    i32 1, label %175
    i32 2, label %175
  ]

175:                                              ; preds = %174, %174
  %176 = load ptr, ptr %163, align 8
  %177 = getelementptr inbounds %struct.net_device_ops, ptr %176, i32 0, i32 66
  %178 = load ptr, ptr %177, align 4
  %179 = icmp eq ptr %178, null
  br i1 %179, label %202, label %180

180:                                              ; preds = %175, %174
  %181 = phi ptr [ %178, %175 ], [ @generic_xdp_install, %174 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #39
  %182 = icmp eq i32 %165, 2
  %183 = zext i1 %182 to i32
  store i32 %183, ptr %3, align 4
  store ptr null, ptr %150, align 4
  store i32 0, ptr %149, align 4
  store ptr null, ptr %151, align 4
  %184 = call i32 %181(ptr noundef %155, ptr noundef nonnull %3) #39
  %185 = icmp ne i32 %184, 0
  %186 = or i1 %182, %185
  br i1 %186, label %193, label %187

187:                                              ; preds = %180
  %188 = load ptr, ptr %166, align 4
  %189 = icmp eq ptr %188, null
  %190 = getelementptr inbounds %struct.bpf_link, ptr %188, i32 0, i32 4
  %191 = select i1 %189, ptr %170, ptr %190
  %192 = load ptr, ptr %191, align 4
  call void @bpf_prog_change_xdp(ptr noundef %192, ptr noundef null) #39
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #39
  br label %196

193:                                              ; preds = %180
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #39
  %194 = icmp eq i32 %184, 0
  br i1 %194, label %196, label %195, !prof !22

195:                                              ; preds = %193
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8746, i32 noundef 9, ptr noundef null) #39
  br label %196

196:                                              ; preds = %195, %193, %187
  %197 = load ptr, ptr %166, align 4
  %198 = icmp eq ptr %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %struct.bpf_xdp_link, ptr %197, i32 0, i32 1
  store ptr null, ptr %200, align 8
  br label %201

201:                                              ; preds = %199, %196
  store ptr null, ptr %166, align 4
  store ptr null, ptr %170, align 8
  br label %202

202:                                              ; preds = %201, %175, %174, %164
  %203 = add nuw nsw i32 %165, 1
  %204 = icmp eq i32 %203, 3
  br i1 %204, label %205, label %164

205:                                              ; preds = %202
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %155, ptr %2, align 8
  store ptr null, ptr %152, align 4
  %206 = call i32 @rtnl_is_locked() #39
  %207 = icmp eq i32 %206, 0
  %208 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  %209 = xor i1 %208, true
  %210 = select i1 %207, i1 %209, i1 false
  br i1 %210, label %211, label %212, !prof !15

211:                                              ; preds = %205
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 1910) #39
  br label %212

212:                                              ; preds = %211, %205
  %213 = call i32 @raw_notifier_call_chain(ptr noundef getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 25), i32 noundef 6, ptr noundef nonnull %2) #39
  %214 = and i32 %213, 32768
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 6, ptr noundef nonnull %2) #39
  br label %218

218:                                              ; preds = %216, %212
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  %219 = getelementptr i8, ptr %154, i32 1124
  %220 = load ptr, ptr %219, align 4
  %221 = icmp eq ptr %220, null
  br i1 %221, label %226, label %222

222:                                              ; preds = %218
  %223 = getelementptr i8, ptr %154, i32 606
  %224 = load i16, ptr %223, align 2
  %225 = icmp eq i16 %224, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %222, %218
  %227 = call ptr @rtmsg_ifinfo_build_skb(i32 noundef 17, ptr noundef %155, i32 noundef -1, i32 noundef 0, i32 noundef 3264, ptr noundef null, i32 noundef 0) #39
  br label %228

228:                                              ; preds = %226, %222
  %229 = phi ptr [ %227, %226 ], [ null, %222 ]
  call void @dev_uc_flush(ptr noundef %155) #39
  call void @dev_mc_flush(ptr noundef %155) #39
  %230 = getelementptr i8, ptr %154, i32 -40
  %231 = load ptr, ptr %230, align 16
  %232 = getelementptr inbounds %struct.netdev_name_node, ptr %231, i32 0, i32 1
  %233 = load ptr, ptr %232, align 4
  %234 = getelementptr i8, ptr %233, i32 -8
  %235 = icmp eq ptr %234, %231
  br i1 %235, label %255, label %236

236:                                              ; preds = %249, %228
  %237 = phi ptr [ %252, %249 ], [ %234, %228 ]
  %238 = phi ptr [ %239, %249 ], [ %233, %228 ]
  %239 = load ptr, ptr %238, align 4
  %240 = getelementptr i8, ptr %238, i32 4
  %241 = load ptr, ptr %240, align 4
  %242 = getelementptr inbounds %struct.list_head, ptr %239, i32 0, i32 1
  store ptr %241, ptr %242, align 4
  store volatile ptr %239, ptr %241, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %238, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %240, align 4
  %243 = load ptr, ptr %237, align 4
  %244 = getelementptr i8, ptr %238, i32 -4
  %245 = load ptr, ptr %244, align 4
  store volatile ptr %243, ptr %245, align 4
  %246 = icmp eq ptr %243, null
  br i1 %246, label %249, label %247

247:                                              ; preds = %236
  %248 = getelementptr inbounds %struct.hlist_node, ptr %243, i32 0, i32 1
  store volatile ptr %245, ptr %248, align 4
  br label %249

249:                                              ; preds = %247, %236
  store volatile ptr inttoptr (i32 290 to ptr), ptr %244, align 4
  %250 = getelementptr i8, ptr %238, i32 12
  %251 = load ptr, ptr %250, align 4
  call void @kfree(ptr noundef %251) #39
  call void @kfree(ptr noundef %237) #39
  %252 = getelementptr i8, ptr %239, i32 -8
  %253 = load ptr, ptr %230, align 16
  %254 = icmp eq ptr %252, %253
  br i1 %254, label %255, label %236

255:                                              ; preds = %249, %228
  %256 = phi ptr [ %231, %228 ], [ %252, %249 ]
  call void @kfree(ptr noundef %256) #39
  %257 = load ptr, ptr %163, align 8
  %258 = getelementptr inbounds %struct.net_device_ops, ptr %257, i32 0, i32 1
  %259 = load ptr, ptr %258, align 4
  %260 = icmp eq ptr %259, null
  br i1 %260, label %262, label %261

261:                                              ; preds = %255
  call void %259(ptr noundef %155) #39
  br label %262

262:                                              ; preds = %261, %255
  %263 = icmp eq ptr %229, null
  br i1 %263, label %265, label %264

264:                                              ; preds = %262
  call void @rtmsg_ifinfo_send(ptr noundef nonnull %229, ptr noundef %155, i32 noundef 3264) #39
  br label %265

265:                                              ; preds = %264, %262
  %266 = call i32 @rtnl_is_locked() #39
  %267 = icmp eq i32 %266, 0
  %268 = load i1, ptr @netdev_has_any_upper_dev.__already_done, align 1
  %269 = xor i1 %268, true
  %270 = select i1 %267, i1 %269, i1 false
  br i1 %270, label %271, label %272, !prof !15

271:                                              ; preds = %265
  store i1 true, ptr @netdev_has_any_upper_dev.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6637, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6637) #39
  br label %272

272:                                              ; preds = %271, %265
  %273 = getelementptr i8, ptr %154, i32 32
  %274 = load volatile ptr, ptr %273, align 4
  %275 = icmp eq ptr %274, %273
  br i1 %275, label %277, label %276, !prof !22

276:                                              ; preds = %272
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10438, i32 noundef 9, ptr noundef null) #39
  br label %277

277:                                              ; preds = %276, %272
  %278 = call i32 @rtnl_is_locked() #39
  %279 = icmp eq i32 %278, 0
  %280 = load i1, ptr @netdev_has_any_lower_dev.__already_done, align 1
  %281 = xor i1 %280, true
  %282 = select i1 %279, i1 %281, i1 false
  br i1 %282, label %283, label %284, !prof !15

283:                                              ; preds = %277
  store i1 true, ptr @netdev_has_any_lower_dev.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6692, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 6692) #39
  br label %284

284:                                              ; preds = %283, %277
  %285 = getelementptr i8, ptr %154, i32 40
  %286 = load volatile ptr, ptr %285, align 4
  %287 = icmp eq ptr %286, %285
  br i1 %287, label %289, label %288, !prof !22

288:                                              ; preds = %284
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10439, i32 noundef 9, ptr noundef null) #39
  br label %289

289:                                              ; preds = %288, %284
  call void @netdev_unregister_kobject(ptr noundef %155) #39
  call fastcc void @netif_reset_xps_queues_gt(ptr noundef %155, i16 noundef zeroext 0)
  %290 = load ptr, ptr %154, align 4
  %291 = icmp eq ptr %290, %0
  br i1 %291, label %292, label %153

292:                                              ; preds = %289, %145
  %293 = call i32 @rtnl_is_locked() #39
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  call void @synchronize_rcu_expedited() #39
  br label %297

296:                                              ; preds = %292
  call void @synchronize_rcu() #39
  br label %297

297:                                              ; preds = %296, %295
  %298 = load ptr, ptr %0, align 4
  %299 = icmp eq ptr %298, %0
  br i1 %299, label %326, label %300

300:                                              ; preds = %316, %297
  %301 = phi ptr [ %322, %316 ], [ %298, %297 ]
  %302 = getelementptr i8, ptr %301, i32 -56
  %303 = icmp eq ptr %302, null
  br i1 %303, label %316, label %304

304:                                              ; preds = %300
  %305 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %306 = getelementptr i8, ptr %301, i32 592
  %307 = load ptr, ptr %306, align 8
  %308 = ptrtoint ptr %307 to i32
  %309 = call i32 @llvm.read_register.i32(metadata !0) #39
  %310 = inttoptr i32 %309 to ptr
  %311 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %310) #34, !srcloc !18
  %312 = add i32 %311, %308
  %313 = inttoptr i32 %312 to ptr
  %314 = load i32, ptr %313, align 4
  %315 = add i32 %314, -1
  store i32 %315, ptr %313, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %305) #39, !srcloc !19
  br label %316

316:                                              ; preds = %304, %300
  %317 = getelementptr i8, ptr %301, i32 584
  %318 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  store ptr %317, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  store ptr @net_todo_list, ptr %317, align 4
  %319 = getelementptr i8, ptr %301, i32 588
  store ptr %318, ptr %319, align 4
  store volatile ptr %317, ptr %318, align 4
  %320 = load i32, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 2), align 8
  %321 = add i32 %320, 1
  store i32 %321, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 2), align 8
  %322 = load ptr, ptr %301, align 4
  %323 = icmp eq ptr %322, %0
  br i1 %323, label %324, label %300

324:                                              ; preds = %316
  %325 = load ptr, ptr %0, align 4
  br label %326

326:                                              ; preds = %324, %297
  %327 = phi ptr [ %325, %324 ], [ %0, %297 ]
  %328 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %329 = load ptr, ptr %328, align 4
  %330 = getelementptr inbounds %struct.list_head, ptr %327, i32 0, i32 1
  store ptr %329, ptr %330, align 4
  store volatile ptr %327, ptr %329, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %0, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %328, align 4
  br label %331

331:                                              ; preds = %326, %15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_shutdown(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rtmsg_ifinfo_build_skb(i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_uc_flush(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_mc_flush(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtmsg_ifinfo_send(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_unregister_kobject(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @unregister_netdev(ptr noundef %0) #1 {
  %2 = alloca %struct.list_head, align 8
  tail call void @rtnl_lock() #39
  %3 = tail call i32 @rtnl_is_locked() #39
  %4 = icmp eq i32 %3, 0
  %5 = load i1, ptr @unregister_netdevice_queue.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %9, !prof !15

8:                                                ; preds = %1
  store i1 true, ptr @unregister_netdevice_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10341, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 10341) #39
  br label %9

9:                                                ; preds = %8, %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  %10 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 9
  store ptr %11, ptr %10, align 4
  store ptr %2, ptr %11, align 4
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 9, i32 1
  store ptr %2, ptr %12, align 4
  store volatile ptr %11, ptr %2, align 8
  call void @unregister_netdevice_many(ptr noundef nonnull %2) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  call void @rtnl_unlock() #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__dev_change_net_namespace(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, ptr nocapture readnone %2, i32 %3) #1 {
  %5 = tail call i32 @rtnl_is_locked() #39
  %6 = icmp eq i32 %5, 0
  %7 = load i1, ptr @__dev_change_net_namespace.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !15

10:                                               ; preds = %4
  store i1 true, ptr @__dev_change_net_namespace.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10501, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 10501) #39
  br label %11

11:                                               ; preds = %10, %4
  %12 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %13 = load i64, ptr %12, align 16
  %14 = and i64 %13, 8192
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 102
  %18 = load i8, ptr %17, align 4
  %19 = icmp eq i8 %18, 1
  %20 = select i1 %19, i32 0, i32 -22
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi i32 [ -22, %11 ], [ %20, %16 ]
  ret i32 %22
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @netdev_increment_features(i64 noundef %0, i64 noundef %1, i64 noundef %2) #16 {
  %4 = and i64 %2, 8
  %5 = icmp eq i64 %4, 0
  %6 = or i64 %2, 26
  %7 = select i1 %5, i64 %2, i64 %6
  %8 = or i64 %7, 1024
  %9 = and i64 %1, 26845578363
  %10 = and i64 %9, %8
  %11 = or i64 %10, %0
  %12 = or i64 %1, -2199025352705
  %13 = and i64 %11, %12
  %14 = and i64 %11, 8
  %15 = icmp eq i64 %14, 0
  %16 = and i64 %13, -19
  %17 = select i1 %15, i64 %13, i64 %16
  ret i64 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_drivername(ptr nocapture noundef readonly %0) local_unnamed_addr #17 {
  %2 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111, i32 1
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 6
  %7 = load ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = load ptr, ptr %7, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9, %5
  br label %13

13:                                               ; preds = %12, %9, %1
  %14 = phi ptr [ @.str.58, %12 ], [ @.str.58, %1 ], [ %10, %9 ]
  ret ptr %14
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #31

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__netdev_printk(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #1 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %68, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 111, i32 1
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %45, label %9

9:                                                ; preds = %5
  %10 = getelementptr i8, ptr %0, i32 1
  %11 = load i8, ptr %10, align 1
  %12 = zext i8 %11 to i32
  %13 = add nsw i32 %12, -48
  %14 = tail call ptr @dev_driver_string(ptr noundef nonnull %7) #39
  %15 = load ptr, ptr %6, align 4
  %16 = getelementptr inbounds %struct.device, ptr %15, i32 0, i32 3
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %9
  %20 = load ptr, ptr %15, align 4
  br label %21

21:                                               ; preds = %19, %9
  %22 = phi ptr [ %20, %19 ], [ %17, %9 ]
  %23 = load i8, ptr %1, align 64
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = tail call ptr @strchr(ptr noundef nonnull %1, i32 noundef 37) #39
  %27 = icmp eq ptr %26, null
  %28 = select i1 %27, ptr %1, ptr @.str.65
  br label %29

29:                                               ; preds = %25, %21
  %30 = phi ptr [ @.str.65, %21 ], [ %28, %25 ]
  %31 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 102
  %32 = load i8, ptr %31, align 4
  %33 = icmp ult i8 %32, 6
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %35, label %42, label %36, !prof !22

36:                                               ; preds = %34
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %37 = zext i8 %32 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.72, ptr noundef nonnull %1, i32 noundef %37) #39
  br label %42

38:                                               ; preds = %29
  %39 = sext i8 %32 to i32
  %40 = getelementptr inbounds [6 x ptr], ptr @switch.table.__netdev_printk.134, i32 0, i32 %39
  %41 = load ptr, ptr %40, align 4
  br label %42

42:                                               ; preds = %38, %36, %34
  %43 = phi ptr [ @.str.73, %36 ], [ @.str.73, %34 ], [ %41, %38 ]
  %44 = tail call i32 (i32, ptr, ptr, ...) @dev_printk_emit(i32 noundef %13, ptr noundef nonnull %7, ptr noundef nonnull @.str.126, ptr noundef %14, ptr noundef %22, ptr noundef %30, ptr noundef nonnull %43, ptr noundef %2) #42
  br label %70

45:                                               ; preds = %5
  %46 = load i8, ptr %1, align 64
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = tail call ptr @strchr(ptr noundef nonnull %1, i32 noundef 37) #39
  %50 = icmp eq ptr %49, null
  %51 = select i1 %50, ptr %1, ptr @.str.65
  br label %52

52:                                               ; preds = %48, %45
  %53 = phi ptr [ @.str.65, %45 ], [ %51, %48 ]
  %54 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 102
  %55 = load i8, ptr %54, align 4
  %56 = icmp ult i8 %55, 6
  br i1 %56, label %61, label %57

57:                                               ; preds = %52
  %58 = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %58, label %65, label %59, !prof !22

59:                                               ; preds = %57
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %60 = zext i8 %55 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.72, ptr noundef nonnull %1, i32 noundef %60) #39
  br label %65

61:                                               ; preds = %52
  %62 = sext i8 %55 to i32
  %63 = getelementptr inbounds [6 x ptr], ptr @switch.table.__netdev_printk.134, i32 0, i32 %62
  %64 = load ptr, ptr %63, align 4
  br label %65

65:                                               ; preds = %61, %59, %57
  %66 = phi ptr [ @.str.73, %59 ], [ @.str.73, %57 ], [ %64, %61 ]
  %67 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.127, ptr noundef %0, ptr noundef %53, ptr noundef nonnull %66, ptr noundef %2) #42
  br label %70

68:                                               ; preds = %3
  %69 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.128, ptr noundef %0, ptr noundef %2) #42
  br label %70

70:                                               ; preds = %68, %65, %42
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #31

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_emerg(ptr noundef %0, ptr noundef %1, ...) #12 {
  %3 = alloca %struct.va_format, align 8
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %4)
  store ptr %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.va_format, ptr %3, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.59, ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_alert(ptr noundef %0, ptr noundef %1, ...) #12 {
  %3 = alloca %struct.va_format, align 8
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %4)
  store ptr %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.va_format, ptr %3, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.60, ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_crit(ptr noundef %0, ptr noundef %1, ...) #12 {
  %3 = alloca %struct.va_format, align 8
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %4)
  store ptr %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.va_format, ptr %3, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.61, ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_warn(ptr noundef %0, ptr noundef %1, ...) #12 {
  %3 = alloca %struct.va_format, align 8
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %4)
  store ptr %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.va_format, ptr %3, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.62, ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @netdev_notice(ptr noundef %0, ptr noundef %1, ...) #12 {
  %3 = alloca %struct.va_format, align 8
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !annotation !21
  call void @llvm.va_start(ptr nonnull %4)
  store ptr %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.va_format, ptr %3, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.63, ptr noundef %0, ptr noundef nonnull %3)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @net_dev_init() #12 section ".init.text" {
  %1 = load i1, ptr @dev_boot_phase, align 4
  br i1 %1, label %2, label %3, !prof !15

2:                                                ; preds = %0
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10969, 0\0A.popsection", ""() #39, !srcloc !125
  unreachable

3:                                                ; preds = %0
  %4 = tail call i32 @dev_proc_init() #42
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %90

6:                                                ; preds = %3
  %7 = tail call i32 @netdev_kobject_init() #42
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %90

9:                                                ; preds = %6
  store volatile ptr @ptype_all, ptr @ptype_all, align 4
  store ptr @ptype_all, ptr getelementptr inbounds (%struct.list_head, ptr @ptype_all, i32 0, i32 1), align 4
  br label %10

10:                                               ; preds = %10, %9
  %11 = phi i32 [ 0, %9 ], [ %14, %10 ]
  %12 = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %11
  store volatile ptr %12, ptr %12, align 4
  %13 = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %11, i32 1
  store ptr %12, ptr %13, align 4
  %14 = add nuw nsw i32 %11, 1
  %15 = icmp eq i32 %14, 16
  br i1 %15, label %16, label %10

16:                                               ; preds = %10
  %17 = tail call i32 @register_pernet_subsys(ptr noundef nonnull @netdev_net_ops) #39
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %90

19:                                               ; preds = %16
  %20 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #40
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %23, label %80

23:                                               ; preds = %23, %19
  %24 = phi i32 [ %77, %23 ], [ %20, %19 ]
  %25 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %24
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, ptrtoint (ptr @flush_works to i32)
  %28 = inttoptr i32 %27 to ptr
  %29 = add i32 %26, ptrtoint (ptr @softnet_data to i32)
  %30 = inttoptr i32 %29 to ptr
  store i32 -32, ptr %28, align 4
  %31 = getelementptr inbounds %struct.work_struct, ptr %28, i32 0, i32 1
  store volatile ptr %31, ptr %31, align 4
  %32 = getelementptr inbounds %struct.work_struct, ptr %28, i32 0, i32 1, i32 1
  store ptr %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.work_struct, ptr %28, i32 0, i32 2
  store ptr @flush_backlog, ptr %33, align 4
  %34 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 19
  %35 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 19, i32 2
  store i32 0, ptr %35, align 4
  store ptr %34, ptr %34, align 4
  %36 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 19, i32 0, i32 0, i32 1
  store ptr %34, ptr %36, align 4
  %37 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 19, i32 1
  store i32 0, ptr %37, align 4
  %38 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 1
  %39 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 1, i32 2
  store i32 0, ptr %39, align 4
  store ptr %38, ptr %38, align 4
  %40 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 1, i32 0, i32 0, i32 1
  store ptr %38, ptr %40, align 4
  %41 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 1, i32 1
  store i32 0, ptr %41, align 4
  store volatile ptr %30, ptr %30, align 4
  %42 = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  store ptr %30, ptr %42, align 4
  %43 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 7
  %44 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 8
  store ptr %43, ptr %44, align 16
  %45 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 14
  store i64 0, ptr %45, align 64
  %46 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 14, i32 1
  store ptr @rps_trigger_softirq, ptr %46, align 8
  %47 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 14, i32 2
  store ptr %30, ptr %47, align 4
  %48 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 16
  store i32 %24, ptr %48, align 4
  %49 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7
  store volatile ptr %49, ptr %49, align 4
  %50 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 0, i32 0, i32 1
  store ptr %49, ptr %50, align 4
  %51 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 0, i32 1
  store i32 0, ptr %51, align 4
  %52 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 1
  store volatile ptr %52, ptr %52, align 4
  %53 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 1, i32 0, i32 1
  store ptr %52, ptr %53, align 4
  %54 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 1, i32 1
  store i32 0, ptr %54, align 4
  %55 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 2
  store volatile ptr %55, ptr %55, align 4
  %56 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 2, i32 0, i32 1
  store ptr %55, ptr %56, align 4
  %57 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 2, i32 1
  store i32 0, ptr %57, align 4
  %58 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 3
  store volatile ptr %58, ptr %58, align 4
  %59 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 3, i32 0, i32 1
  store ptr %58, ptr %59, align 4
  %60 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 3, i32 1
  store i32 0, ptr %60, align 4
  %61 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 4
  store volatile ptr %61, ptr %61, align 4
  %62 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 4, i32 0, i32 1
  store ptr %61, ptr %62, align 4
  %63 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 4, i32 1
  store i32 0, ptr %63, align 4
  %64 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 5
  store volatile ptr %64, ptr %64, align 4
  %65 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 5, i32 0, i32 1
  store ptr %64, ptr %65, align 4
  %66 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 5, i32 1
  store i32 0, ptr %66, align 4
  %67 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 6
  store volatile ptr %67, ptr %67, align 4
  %68 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 6, i32 0, i32 1
  store ptr %67, ptr %68, align 4
  %69 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 6, i32 1
  store i32 0, ptr %69, align 4
  %70 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 7
  store volatile ptr %70, ptr %70, align 4
  %71 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 7, i32 0, i32 1
  store ptr %70, ptr %71, align 4
  %72 = getelementptr %struct.softnet_data, ptr %30, i32 0, i32 20, i32 7, i32 7, i32 1
  store i32 0, ptr %72, align 4
  %73 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 20, i32 4
  store i32 0, ptr %73, align 4
  %74 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 20, i32 5
  store ptr @process_backlog, ptr %74, align 8
  %75 = load i32, ptr @weight_p, align 4
  %76 = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 20, i32 2
  store i32 %75, ptr %76, align 4
  %77 = tail call i32 @cpumask_next(i32 noundef %24, ptr noundef nonnull @__cpu_possible_mask) #40
  %78 = load i32, ptr @nr_cpu_ids, align 4
  %79 = icmp ult i32 %77, %78
  br i1 %79, label %23, label %80

80:                                               ; preds = %23, %19
  store i1 true, ptr @dev_boot_phase, align 4
  %81 = tail call i32 @register_pernet_device(ptr noundef nonnull @loopback_net_ops) #39
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %90

83:                                               ; preds = %80
  %84 = tail call i32 @register_pernet_device(ptr noundef nonnull @default_device_ops) #39
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %83
  tail call void @open_softirq(i32 noundef 2, ptr noundef nonnull @net_tx_action) #39
  tail call void @open_softirq(i32 noundef 3, ptr noundef nonnull @net_rx_action) #39
  %87 = tail call i32 @__cpuhp_setup_state(i32 noundef 34, ptr noundef nonnull @.str.129, i1 noundef zeroext false, ptr noundef null, ptr noundef nonnull @dev_cpu_dead, i1 noundef zeroext false) #39
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %89, label %90, !prof !15

89:                                               ; preds = %86
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 11033, i32 noundef 9, ptr noundef null) #39
  br label %90

90:                                               ; preds = %89, %86, %83, %80, %16, %6, %3
  %91 = phi i32 [ -12, %3 ], [ -12, %6 ], [ -12, %16 ], [ -12, %80 ], [ -12, %83 ], [ 0, %89 ], [ 0, %86 ]
  ret i32 %91
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @full_name_hash(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #28

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @metadata_dst_alloc(i8 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dst_cache_init(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @metadata_dst_free(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dst_release(ptr noundef) local_unnamed_addr #5

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #32

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_zeroed_page(i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_le(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #33

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #30

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_check(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_activate(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_deactivate_many(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raw_notifier_call_chain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_scrub_packet(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @msg_zerocopy_callback(ptr noundef, ptr noundef, i1 noundef zeroext) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_ubufs(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @csum_partial(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @clean_xps_maps(ptr noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3) unnamed_addr #1 {
  %5 = getelementptr %struct.net_device, ptr %0, i32 0, i32 94, i32 %1
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %80, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.xps_dev_maps, ptr %6, i32 0, i32 1
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %79, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.xps_dev_maps, ptr %6, i32 0, i32 2
  %14 = zext i16 %3 to i32
  %15 = zext i16 %2 to i32
  %16 = add nsw i32 %14, -1
  %17 = icmp eq i16 %3, 0
  br label %18

18:                                               ; preds = %72, %12
  %19 = phi i32 [ %10, %12 ], [ %73, %72 ]
  %20 = phi i32 [ 0, %12 ], [ %76, %72 ]
  %21 = phi i1 [ false, %12 ], [ %75, %72 ]
  %22 = load i16, ptr %13, align 4
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %72, label %24

24:                                               ; preds = %18
  %25 = sext i16 %22 to i32
  %26 = mul i32 %20, %25
  br label %27

27:                                               ; preds = %62, %24
  %28 = phi i32 [ %25, %24 ], [ %31, %62 ]
  %29 = phi i32 [ %26, %24 ], [ %68, %62 ]
  %30 = phi i1 [ false, %24 ], [ %67, %62 ]
  %31 = add i32 %28, -1
  br i1 %17, label %62, label %32

32:                                               ; preds = %27
  %33 = getelementptr %struct.xps_dev_maps, ptr %6, i32 0, i32 3, i32 %29
  br label %34

34:                                               ; preds = %58, %32
  %35 = phi i32 [ %16, %32 ], [ %60, %58 ]
  %36 = phi i32 [ %15, %32 ], [ %59, %58 ]
  %37 = trunc i32 %36 to i16
  %38 = load ptr, ptr %33, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %34
  %41 = load i32, ptr %38, align 4
  br label %42

42:                                               ; preds = %45, %40
  %43 = phi i32 [ %41, %40 ], [ %46, %45 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = add i32 %43, -1
  %47 = getelementptr %struct.xps_map, ptr %38, i32 0, i32 3, i32 %46
  %48 = load i16, ptr %47, align 2
  %49 = icmp eq i16 %48, %37
  br i1 %49, label %50, label %42

50:                                               ; preds = %45
  %51 = icmp ugt i32 %41, 1
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = add i32 %41, -1
  store i32 %53, ptr %38, align 4
  %54 = getelementptr %struct.xps_map, ptr %38, i32 0, i32 3, i32 %53
  %55 = load i16, ptr %54, align 2
  store i16 %55, ptr %47, align 2
  br label %58

56:                                               ; preds = %50
  store volatile ptr null, ptr %33, align 4
  %57 = getelementptr inbounds %struct.xps_map, ptr %38, i32 0, i32 2
  tail call void @kvfree_call_rcu(ptr noundef %57, ptr noundef nonnull inttoptr (i32 8 to ptr)) #39
  br label %62

58:                                               ; preds = %52, %42
  %59 = add nuw nsw i32 %36, 1
  %60 = add nsw i32 %35, -1
  %61 = icmp eq i32 %35, 0
  br i1 %61, label %62, label %34

62:                                               ; preds = %58, %56, %34, %27
  %63 = phi i32 [ %35, %56 ], [ %16, %27 ], [ %35, %34 ], [ -1, %58 ]
  %64 = lshr i32 %63, 31
  %65 = zext i1 %30 to i32
  %66 = or i32 %64, %65
  %67 = icmp ne i32 %66, 0
  %68 = add i32 %29, 1
  %69 = icmp eq i32 %31, 0
  br i1 %69, label %70, label %27

70:                                               ; preds = %62
  %71 = load i32, ptr %9, align 4
  br label %72

72:                                               ; preds = %70, %18
  %73 = phi i32 [ %19, %18 ], [ %71, %70 ]
  %74 = phi i1 [ false, %18 ], [ %67, %70 ]
  %75 = or i1 %21, %74
  %76 = add nuw i32 %20, 1
  %77 = icmp ult i32 %76, %73
  br i1 %77, label %18, label %78

78:                                               ; preds = %72
  br i1 %75, label %80, label %79

79:                                               ; preds = %78, %8
  tail call fastcc void @reset_xps_maps(ptr noundef %0, ptr noundef nonnull %6, i32 noundef %1)
  br label %80

80:                                               ; preds = %79, %78, %4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @qdisc_reset(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #34

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_dump(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__pskb_pull_tail(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @skb_header_pointer(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) unnamed_addr #14 {
  %5 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %6 = load i32, ptr %5, align 8
  %7 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %8 = load i32, ptr %7, align 4
  %9 = add i32 %8, %1
  %10 = sub i32 %6, %9
  %11 = icmp slt i32 %10, %2
  br i1 %11, label %16, label %12, !prof !15

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %14, i32 %1
  br label %22

16:                                               ; preds = %4
  %17 = icmp eq ptr %0, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = tail call i32 @skb_copy_bits(ptr noundef nonnull %0, i32 noundef %1, ptr noundef %3, i32 noundef %2) #39
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, ptr null, ptr %3, !prof !15
  br label %22

22:                                               ; preds = %18, %16, %12
  %23 = phi ptr [ %15, %12 ], [ null, %16 ], [ %21, %18 ]
  ret ptr %23
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_net_dev_start_xmit(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_net_dev_xmit(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_push(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i32(ptr nocapture writeonly, ptr nocapture readonly, i32, i1 immarg) #11

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #35

; Function Attrs: null_pointer_is_valid
declare dso_local void @__skb_get_hash(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__skb_tstamp_tx(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_net_dev_queue(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @dev_qdisc_enqueue(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #1 {
  %5 = load ptr, ptr %1, align 64
  %6 = tail call i32 %5(ptr noundef %0, ptr noundef %1, ptr noundef %2) #39
  %7 = and i32 %6, 15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %25

9:                                                ; preds = %4
  %10 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_qdisc_enqueue, i32 0, i32 1), align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %9
  %13 = tail call ptr @llvm.thread.pointer() #39
  %14 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %15 = load i32, ptr %14, align 8
  %16 = lshr i32 %15, 5
  %17 = getelementptr i32, ptr @__cpu_online_mask, i32 %16
  %18 = load volatile i32, ptr %17, align 4
  %19 = and i32 %15, 31
  %20 = shl nuw i32 1, %19
  %21 = and i32 %20, %18
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !70
  %24 = tail call i32 @__traceiter_qdisc_enqueue(ptr noundef null, ptr noundef %1, ptr noundef %3, ptr noundef %0) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !71
  br label %25

25:                                               ; preds = %23, %12, %9, %4
  ret i32 %7
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__qdisc_run(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @qdisc_run_end(ptr noundef %0) unnamed_addr #14 {
  %2 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 2
  %3 = load i32, ptr %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 25
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %8 = load i16, ptr %7, align 4
  %9 = add i16 %8, 1
  store i16 %9, ptr %7, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %10 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 19
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14, !prof !22

14:                                               ; preds = %6
  tail call void @__netif_schedule(ptr noundef %0)
  br label %19

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 20
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, -2
  store i32 %18, ptr %16, align 4
  br label %19

19:                                               ; preds = %15, %14, %6
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sch_direct_xmit(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @qdisc_run(ptr noundef %0) unnamed_addr #14 {
  %2 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 2
  %3 = load i32, ptr %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 25
  %8 = tail call i32 @_raw_spin_trylock(ptr noundef %7) #39
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !66
  %11 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 19
  %12 = load volatile i32, ptr %11, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %53

15:                                               ; preds = %10
  tail call void @_set_bit(i32 noundef 2, ptr noundef %11) #39
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !67
  %16 = tail call i32 @_raw_spin_trylock(ptr noundef %7) #39
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %53, label %24

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 20
  %20 = load i32, ptr %19, align 4
  %21 = or i32 %20, 1
  store i32 %21, ptr %19, align 4
  %22 = and i32 %20, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %53

24:                                               ; preds = %18, %15, %6
  tail call void @__qdisc_run(ptr noundef %0) #39
  %25 = load i32, ptr %2, align 8
  %26 = and i32 %25, 256
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %49, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 25
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %30 = load i16, ptr %29, align 4
  %31 = add i16 %30, 1
  store i16 %31, ptr %29, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  %32 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 19
  %33 = load volatile i32, ptr %32, align 4
  %34 = and i32 %33, 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %53, label %36, !prof !22

36:                                               ; preds = %28
  %37 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %32) #39
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %53

39:                                               ; preds = %36
  %40 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %41 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %42 = inttoptr i32 %41 to ptr
  %43 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %42) #34, !srcloc !18
  %44 = add i32 %43, ptrtoint (ptr @softnet_data to i32)
  %45 = inttoptr i32 %44 to ptr
  %46 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 21
  store ptr null, ptr %46, align 4
  %47 = getelementptr inbounds %struct.softnet_data, ptr %45, i32 0, i32 8
  %48 = load ptr, ptr %47, align 16
  store ptr %0, ptr %48, align 4
  store ptr %46, ptr %47, align 16
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %40) #39, !srcloc !19
  br label %53

49:                                               ; preds = %24
  %50 = getelementptr inbounds %struct.Qdisc, ptr %0, i32 0, i32 20
  %51 = load i32, ptr %50, align 4
  %52 = and i32 %51, -2
  store i32 %52, ptr %50, align 4
  br label %53

53:                                               ; preds = %49, %39, %36, %28, %18, %15, %10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_qdisc_enqueue(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_master_redirect(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xdp_exception(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_warn_invalid_xdp_action(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_entry(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_exit(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_ni_entry(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_ni_exit(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__netif_receive_skb_core(ptr nocapture noundef %0, i1 noundef zeroext %1, ptr nocapture noundef writeonly %2) unnamed_addr #1 {
  %4 = alloca ptr, align 4
  %5 = alloca ptr, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store ptr null, ptr %4, align 4, !annotation !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #39
  %6 = load ptr, ptr %0, align 4
  store ptr %6, ptr %5, align 4
  %7 = load volatile i32, ptr @netstamp_needed_key, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %18, !prof !15

9:                                                ; preds = %3
  %10 = load i32, ptr @netdev_tstamp_prequeue, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 2
  %14 = load i64, ptr %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #39
  store i64 %17, ptr %13, align 8
  br label %18

18:                                               ; preds = %16, %12, %9, %3
  %19 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb, i32 0, i32 1), align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = tail call ptr @llvm.thread.pointer() #39
  %23 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %24 = load i32, ptr %23, align 8
  %25 = lshr i32 %24, 5
  %26 = getelementptr i32, ptr @__cpu_online_mask, i32 %25
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %24, 31
  %29 = shl nuw i32 1, %28
  %30 = and i32 %29, %27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %21
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !126
  %33 = tail call i32 @__traceiter_netif_receive_skb(ptr noundef null, ptr noundef %6) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !127
  br label %34

34:                                               ; preds = %32, %21, %18
  %35 = getelementptr inbounds %struct.anon.76, ptr %6, i32 0, i32 2
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 17
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 16
  %40 = load ptr, ptr %39, align 8
  %41 = ptrtoint ptr %38 to i32
  %42 = ptrtoint ptr %40 to i32
  %43 = sub i32 %41, %42
  %44 = trunc i32 %43 to i16
  %45 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 13, i32 0, i32 18
  store i16 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 13, i32 0, i32 17
  %47 = load i16, ptr %46, align 2
  %48 = icmp eq i16 %47, -1
  br i1 %48, label %49, label %50

49:                                               ; preds = %34
  store i16 %44, ptr %46, align 2
  br label %50

50:                                               ; preds = %49, %34
  %51 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 13, i32 0, i32 19
  %52 = load i16, ptr %51, align 2
  %53 = sub i16 %44, %52
  %54 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 7
  store i16 %53, ptr %54, align 8
  store ptr null, ptr %4, align 4
  br label %55

55:                                               ; preds = %300, %50
  %56 = phi ptr [ %36, %50 ], [ %303, %300 ]
  %57 = phi ptr [ %6, %50 ], [ %301, %300 ]
  %58 = phi i32 [ 1, %50 ], [ %298, %300 ]
  %59 = getelementptr inbounds %struct.net_device, ptr %56, i32 0, i32 17
  %60 = load i32, ptr %59, align 4
  %61 = getelementptr inbounds %struct.sk_buff, ptr %57, i32 0, i32 13, i32 0, i32 6
  store i32 %60, ptr %61, align 4
  %62 = call i32 @llvm.read_register.i32(metadata !0) #39
  %63 = inttoptr i32 %62 to ptr
  %64 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %63) #34, !srcloc !18
  %65 = add i32 %64, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 2) to i32)
  %66 = inttoptr i32 %65 to ptr
  %67 = load i32, ptr %66, align 4
  %68 = add i32 %67, 1
  store i32 %68, ptr %66, align 4
  %69 = load volatile i32, ptr @generic_xdp_needed_key, align 4
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %79, !prof !15

71:                                               ; preds = %55
  call void @migrate_disable() #39
  %72 = load ptr, ptr %5, align 4
  %73 = getelementptr inbounds %struct.anon.76, ptr %72, i32 0, i32 2
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr inbounds %struct.net_device, ptr %74, i32 0, i32 76
  %76 = load volatile ptr, ptr %75, align 16
  %77 = call i32 @do_xdp_generic(ptr noundef %76, ptr noundef %72)
  call void @migrate_enable() #39
  %78 = icmp eq i32 %77, 2
  br i1 %78, label %79, label %506

79:                                               ; preds = %71, %55
  %80 = load ptr, ptr %5, align 4
  %81 = getelementptr inbounds %struct.sk_buff, ptr %80, i32 0, i32 13, i32 0, i32 16
  %82 = load i16, ptr %81, align 8
  switch i16 %82, label %86 [
    i16 -22392, label %83
    i16 129, label %83
  ]

83:                                               ; preds = %79, %79
  %84 = call ptr @skb_vlan_untag(ptr noundef %80) #39
  store ptr %84, ptr %5, align 4
  %85 = icmp eq ptr %84, null
  br i1 %85, label %506, label %86, !prof !15

86:                                               ; preds = %83, %79
  %87 = phi ptr [ %80, %79 ], [ %84, %83 ]
  br i1 %1, label %199, label %88

88:                                               ; preds = %86
  %89 = load volatile ptr, ptr @ptype_all, align 4
  %90 = icmp eq ptr %89, @ptype_all
  br i1 %90, label %136, label %91

91:                                               ; preds = %130, %88
  %92 = phi ptr [ %132, %130 ], [ %89, %88 ]
  %93 = phi i32 [ %131, %130 ], [ %58, %88 ]
  %94 = phi ptr [ %95, %130 ], [ null, %88 ]
  %95 = getelementptr i8, ptr %92, i32 -28
  %96 = icmp eq ptr %94, null
  br i1 %96, label %130, label %97

97:                                               ; preds = %91
  %98 = load ptr, ptr %5, align 4
  %99 = icmp eq ptr %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %struct.sk_buff, ptr %98, i32 0, i32 15
  %102 = load ptr, ptr %101, align 4
  %103 = load i8, ptr %102, align 8
  %104 = and i8 %103, 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.skb_shared_info, ptr %102, i32 0, i32 11
  %108 = load ptr, ptr %107, align 4
  %109 = icmp eq ptr %108, null
  br i1 %109, label %113, label %110, !prof !22

110:                                              ; preds = %106
  %111 = call i32 @skb_copy_ubufs(ptr noundef nonnull %98, i32 noundef 2592) #39
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %130, !prof !22

113:                                              ; preds = %110, %106, %100, %97
  %114 = getelementptr inbounds %struct.sk_buff, ptr %98, i32 0, i32 19
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %114) #39, !srcloc !29
  %115 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %114, ptr %114, i32 1, ptr elementtype(i32) %114) #39, !srcloc !38
  %116 = extractvalue { i32, i32, i32 } %115, 0
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %122, label %118, !prof !15

118:                                              ; preds = %113
  %119 = add i32 %116, 1
  %120 = or i32 %119, %116
  %121 = icmp sgt i32 %120, -1
  br i1 %121, label %124, label %122, !prof !22

122:                                              ; preds = %118, %113
  %123 = phi i32 [ 2, %113 ], [ 1, %118 ]
  call void @refcount_warn_saturate(ptr noundef %114, i32 noundef %123) #39
  br label %124

124:                                              ; preds = %122, %118
  %125 = getelementptr inbounds %struct.packet_type, ptr %94, i32 0, i32 4
  %126 = load ptr, ptr %125, align 4
  %127 = getelementptr inbounds %struct.anon.76, ptr %98, i32 0, i32 2
  %128 = load ptr, ptr %127, align 8
  %129 = call i32 %126(ptr noundef %98, ptr noundef %128, ptr noundef nonnull %94, ptr noundef %36) #39
  br label %130

130:                                              ; preds = %124, %110, %91
  %131 = phi i32 [ %93, %91 ], [ %129, %124 ], [ -12, %110 ]
  %132 = load volatile ptr, ptr %92, align 4
  %133 = icmp eq ptr %132, @ptype_all
  br i1 %133, label %134, label %91

134:                                              ; preds = %130
  %135 = load ptr, ptr %5, align 4
  br label %136

136:                                              ; preds = %134, %88
  %137 = phi ptr [ %87, %88 ], [ %135, %134 ]
  %138 = phi ptr [ null, %88 ], [ %95, %134 ]
  %139 = phi i32 [ %58, %88 ], [ %131, %134 ]
  %140 = getelementptr inbounds %struct.anon.76, ptr %137, i32 0, i32 2
  %141 = load ptr, ptr %140, align 8
  %142 = getelementptr inbounds %struct.net_device, ptr %141, i32 0, i32 11
  %143 = load volatile ptr, ptr %142, align 4
  %144 = icmp eq ptr %143, %142
  br i1 %144, label %192, label %145

145:                                              ; preds = %184, %136
  %146 = phi ptr [ %188, %184 ], [ %140, %136 ]
  %147 = phi ptr [ %187, %184 ], [ %143, %136 ]
  %148 = phi i32 [ %185, %184 ], [ %139, %136 ]
  %149 = phi ptr [ %186, %184 ], [ %137, %136 ]
  %150 = phi ptr [ %151, %184 ], [ %138, %136 ]
  %151 = getelementptr i8, ptr %147, i32 -28
  %152 = icmp eq ptr %150, null
  br i1 %152, label %184, label %153

153:                                              ; preds = %145
  %154 = icmp eq ptr %149, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %153
  %156 = getelementptr inbounds %struct.sk_buff, ptr %149, i32 0, i32 15
  %157 = load ptr, ptr %156, align 4
  %158 = load i8, ptr %157, align 8
  %159 = and i8 %158, 1
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %168, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.skb_shared_info, ptr %157, i32 0, i32 11
  %163 = load ptr, ptr %162, align 4
  %164 = icmp eq ptr %163, null
  br i1 %164, label %168, label %165, !prof !22

165:                                              ; preds = %161
  %166 = call i32 @skb_copy_ubufs(ptr noundef nonnull %149, i32 noundef 2592) #39
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %184, !prof !22

168:                                              ; preds = %165, %161, %155, %153
  %169 = getelementptr inbounds %struct.sk_buff, ptr %149, i32 0, i32 19
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %169) #39, !srcloc !29
  %170 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %169, ptr %169, i32 1, ptr elementtype(i32) %169) #39, !srcloc !38
  %171 = extractvalue { i32, i32, i32 } %170, 0
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %173, !prof !15

173:                                              ; preds = %168
  %174 = add i32 %171, 1
  %175 = or i32 %174, %171
  %176 = icmp sgt i32 %175, -1
  br i1 %176, label %179, label %177, !prof !22

177:                                              ; preds = %173, %168
  %178 = phi i32 [ 2, %168 ], [ 1, %173 ]
  call void @refcount_warn_saturate(ptr noundef %169, i32 noundef %178) #39
  br label %179

179:                                              ; preds = %177, %173
  %180 = getelementptr inbounds %struct.packet_type, ptr %150, i32 0, i32 4
  %181 = load ptr, ptr %180, align 4
  %182 = load ptr, ptr %146, align 8
  %183 = call i32 %181(ptr noundef %149, ptr noundef %182, ptr noundef nonnull %150, ptr noundef %36) #39
  br label %184

184:                                              ; preds = %179, %165, %145
  %185 = phi i32 [ %148, %145 ], [ %183, %179 ], [ -12, %165 ]
  %186 = load ptr, ptr %5, align 4
  %187 = load volatile ptr, ptr %147, align 4
  %188 = getelementptr inbounds %struct.anon.76, ptr %186, i32 0, i32 2
  %189 = load ptr, ptr %188, align 8
  %190 = getelementptr inbounds %struct.net_device, ptr %189, i32 0, i32 11
  %191 = icmp eq ptr %187, %190
  br i1 %191, label %192, label %145

192:                                              ; preds = %184, %136
  %193 = phi ptr [ %137, %136 ], [ %186, %184 ]
  %194 = phi ptr [ %138, %136 ], [ %151, %184 ]
  %195 = phi i32 [ %139, %136 ], [ %185, %184 ]
  %196 = getelementptr inbounds %struct.sk_buff, ptr %193, i32 0, i32 13, i32 0, i32 3
  %197 = load i16, ptr %196, align 2
  %198 = and i16 %197, -8193
  store i16 %198, ptr %196, align 2
  br label %205

199:                                              ; preds = %86
  %200 = getelementptr inbounds %struct.sk_buff, ptr %87, i32 0, i32 13, i32 0, i32 3
  %201 = load i16, ptr %200, align 2
  %202 = and i16 %201, -8193
  store i16 %202, ptr %200, align 2
  %203 = getelementptr inbounds %struct.sk_buff, ptr %87, i32 0, i32 13, i32 0, i32 16
  %204 = load i16, ptr %203, align 8
  switch i16 %204, label %492 [
    i16 1544, label %205
    i16 8, label %205
    i16 -8826, label %205
    i16 129, label %205
    i16 -22392, label %205
  ]

205:                                              ; preds = %199, %199, %199, %199, %199, %192
  %206 = phi ptr [ %193, %192 ], [ %87, %199 ], [ %87, %199 ], [ %87, %199 ], [ %87, %199 ], [ %87, %199 ]
  %207 = phi ptr [ %194, %192 ], [ null, %199 ], [ null, %199 ], [ null, %199 ], [ null, %199 ], [ null, %199 ]
  %208 = phi i16 [ %198, %192 ], [ %202, %199 ], [ %202, %199 ], [ %202, %199 ], [ %202, %199 ], [ %202, %199 ]
  %209 = phi i32 [ %195, %192 ], [ %58, %199 ], [ %58, %199 ], [ %58, %199 ], [ %58, %199 ], [ %58, %199 ]
  %210 = and i16 %208, 1
  %211 = icmp eq i16 %210, 0
  br i1 %211, label %250, label %212

212:                                              ; preds = %205
  %213 = icmp eq ptr %207, null
  br i1 %213, label %246, label %214

214:                                              ; preds = %212
  %215 = icmp eq ptr %206, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds %struct.sk_buff, ptr %206, i32 0, i32 15
  %218 = load ptr, ptr %217, align 4
  %219 = load i8, ptr %218, align 8
  %220 = and i8 %219, 1
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %216
  %223 = getelementptr inbounds %struct.skb_shared_info, ptr %218, i32 0, i32 11
  %224 = load ptr, ptr %223, align 4
  %225 = icmp eq ptr %224, null
  br i1 %225, label %229, label %226, !prof !22

226:                                              ; preds = %222
  %227 = call i32 @skb_copy_ubufs(ptr noundef nonnull %206, i32 noundef 2592) #39
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %246, !prof !22

229:                                              ; preds = %226, %222, %216, %214
  %230 = getelementptr inbounds %struct.sk_buff, ptr %206, i32 0, i32 19
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %230) #39, !srcloc !29
  %231 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %230, ptr %230, i32 1, ptr elementtype(i32) %230) #39, !srcloc !38
  %232 = extractvalue { i32, i32, i32 } %231, 0
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %238, label %234, !prof !15

234:                                              ; preds = %229
  %235 = add i32 %232, 1
  %236 = or i32 %235, %232
  %237 = icmp sgt i32 %236, -1
  br i1 %237, label %240, label %238, !prof !22

238:                                              ; preds = %234, %229
  %239 = phi i32 [ 2, %229 ], [ 1, %234 ]
  call void @refcount_warn_saturate(ptr noundef %230, i32 noundef %239) #39
  br label %240

240:                                              ; preds = %238, %234
  %241 = getelementptr inbounds %struct.packet_type, ptr %207, i32 0, i32 4
  %242 = load ptr, ptr %241, align 4
  %243 = getelementptr inbounds %struct.anon.76, ptr %206, i32 0, i32 2
  %244 = load ptr, ptr %243, align 8
  %245 = call i32 %242(ptr noundef %206, ptr noundef %244, ptr noundef nonnull %207, ptr noundef %36) #39
  br label %246

246:                                              ; preds = %240, %226, %212
  %247 = phi i32 [ %209, %212 ], [ -12, %226 ], [ %245, %240 ]
  %248 = load ptr, ptr %5, align 4
  %249 = icmp eq ptr %248, null
  br i1 %249, label %506, label %256, !prof !15

250:                                              ; preds = %205
  %251 = getelementptr inbounds %struct.anon.76, ptr %206, i32 0, i32 2
  %252 = load ptr, ptr %251, align 8
  %253 = getelementptr inbounds %struct.net_device, ptr %252, i32 0, i32 80
  %254 = load volatile ptr, ptr %253, align 64
  %255 = icmp eq ptr %254, null
  br i1 %255, label %306, label %262

256:                                              ; preds = %246
  %257 = getelementptr inbounds %struct.anon.76, ptr %248, i32 0, i32 2
  %258 = load ptr, ptr %257, align 8
  %259 = getelementptr inbounds %struct.net_device, ptr %258, i32 0, i32 80
  %260 = load volatile ptr, ptr %259, align 64
  %261 = icmp eq ptr %260, null
  br i1 %261, label %306, label %296

262:                                              ; preds = %250
  %263 = icmp eq ptr %207, null
  br i1 %263, label %296, label %264

264:                                              ; preds = %262
  %265 = icmp eq ptr %206, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %264
  %267 = getelementptr inbounds %struct.sk_buff, ptr %206, i32 0, i32 15
  %268 = load ptr, ptr %267, align 4
  %269 = load i8, ptr %268, align 8
  %270 = and i8 %269, 1
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %279, label %272

272:                                              ; preds = %266
  %273 = getelementptr inbounds %struct.skb_shared_info, ptr %268, i32 0, i32 11
  %274 = load ptr, ptr %273, align 4
  %275 = icmp eq ptr %274, null
  br i1 %275, label %279, label %276, !prof !22

276:                                              ; preds = %272
  %277 = call i32 @skb_copy_ubufs(ptr noundef nonnull %206, i32 noundef 2592) #39
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %296, !prof !22

279:                                              ; preds = %276, %272, %266, %264
  %280 = phi ptr [ %206, %276 ], [ %206, %272 ], [ %206, %266 ], [ null, %264 ]
  %281 = getelementptr inbounds %struct.sk_buff, ptr %280, i32 0, i32 19
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %281) #39, !srcloc !29
  %282 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %281, ptr %281, i32 1, ptr elementtype(i32) %281) #39, !srcloc !38
  %283 = extractvalue { i32, i32, i32 } %282, 0
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %289, label %285, !prof !15

285:                                              ; preds = %279
  %286 = add i32 %283, 1
  %287 = or i32 %286, %283
  %288 = icmp sgt i32 %287, -1
  br i1 %288, label %291, label %289, !prof !22

289:                                              ; preds = %285, %279
  %290 = phi i32 [ 2, %279 ], [ 1, %285 ]
  call void @refcount_warn_saturate(ptr noundef %281, i32 noundef %290) #39
  br label %291

291:                                              ; preds = %289, %285
  %292 = getelementptr inbounds %struct.packet_type, ptr %207, i32 0, i32 4
  %293 = load ptr, ptr %292, align 4
  %294 = load ptr, ptr %251, align 8
  %295 = call i32 %293(ptr noundef %280, ptr noundef %294, ptr noundef nonnull %207, ptr noundef %36) #39
  br label %296

296:                                              ; preds = %291, %276, %262, %256
  %297 = phi ptr [ %254, %262 ], [ %254, %276 ], [ %254, %291 ], [ %260, %256 ]
  %298 = phi i32 [ %209, %262 ], [ -12, %276 ], [ %295, %291 ], [ %247, %256 ]
  %299 = call i32 %297(ptr noundef nonnull %5) #39
  switch i32 %299, label %304 [
    i32 0, label %506
    i32 1, label %300
    i32 2, label %305
    i32 3, label %306
  ]

300:                                              ; preds = %296
  %301 = load ptr, ptr %5, align 4
  %302 = getelementptr inbounds %struct.anon.76, ptr %301, i32 0, i32 2
  %303 = load ptr, ptr %302, align 8
  br label %55

304:                                              ; preds = %296
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5257, 0\0A.popsection", ""() #39, !srcloc !128
  unreachable

305:                                              ; preds = %296
  br label %306

306:                                              ; preds = %305, %296, %256, %250
  %307 = phi ptr [ null, %305 ], [ null, %256 ], [ null, %296 ], [ %207, %250 ]
  %308 = phi i32 [ %298, %305 ], [ %247, %256 ], [ %298, %296 ], [ %209, %250 ]
  %309 = phi i1 [ true, %305 ], [ false, %256 ], [ false, %250 ], [ false, %296 ]
  %310 = load ptr, ptr %5, align 4
  %311 = getelementptr inbounds %struct.sk_buff, ptr %310, i32 0, i32 13, i32 0, i32 3
  %312 = load i16, ptr %311, align 2
  %313 = and i16 %312, 1
  %314 = icmp eq i16 %313, 0
  br i1 %314, label %350, label %315, !prof !22

315:                                              ; preds = %306
  %316 = getelementptr inbounds %struct.anon.76, ptr %310, i32 0, i32 2
  %317 = load ptr, ptr %316, align 8
  %318 = getelementptr inbounds %struct.net_device, ptr %317, i32 0, i32 67
  %319 = load ptr, ptr %318, align 4
  %320 = icmp eq ptr %319, null
  br i1 %320, label %325, label %321

321:                                              ; preds = %315
  %322 = getelementptr inbounds %struct.dsa_port, ptr %319, i32 0, i32 3
  %323 = load ptr, ptr %322, align 4
  %324 = icmp eq ptr %323, null
  br i1 %324, label %325, label %350

325:                                              ; preds = %321, %315
  br label %326

326:                                              ; preds = %340, %325
  %327 = phi ptr [ %344, %340 ], [ %310, %325 ]
  %328 = getelementptr inbounds %struct.sk_buff, ptr %327, i32 0, i32 13, i32 0, i32 9
  %329 = load i16, ptr %328, align 2
  %330 = and i16 %329, 4095
  %331 = icmp eq i16 %330, 0
  br i1 %331, label %337, label %332

332:                                              ; preds = %326
  %333 = getelementptr inbounds %struct.sk_buff, ptr %327, i32 0, i32 13
  %334 = load i16, ptr %333, align 8
  %335 = and i16 %334, -8
  %336 = or i16 %335, 3
  store i16 %336, ptr %333, align 8
  br label %346

337:                                              ; preds = %326
  %338 = getelementptr inbounds %struct.sk_buff, ptr %327, i32 0, i32 13, i32 0, i32 16
  %339 = load i16, ptr %338, align 8
  switch i16 %339, label %346 [
    i16 -22392, label %340
    i16 129, label %340
  ]

340:                                              ; preds = %337, %337
  %341 = getelementptr inbounds %struct.sk_buff, ptr %327, i32 0, i32 13, i32 0, i32 3
  %342 = load i16, ptr %341, align 2
  %343 = and i16 %342, -2
  store i16 %343, ptr %341, align 2
  %344 = call ptr @skb_vlan_untag(ptr noundef %327) #39
  store ptr %344, ptr %5, align 4
  %345 = icmp eq ptr %344, null
  br i1 %345, label %506, label %326, !prof !15

346:                                              ; preds = %337, %332
  %347 = getelementptr inbounds %struct.sk_buff, ptr %327, i32 0, i32 13, i32 0, i32 3
  %348 = load i16, ptr %347, align 2
  %349 = and i16 %348, -2
  store i16 %349, ptr %347, align 2
  br label %350

350:                                              ; preds = %346, %321, %306
  %351 = phi ptr [ %310, %306 ], [ %327, %346 ], [ %310, %321 ]
  %352 = getelementptr inbounds %struct.sk_buff, ptr %351, i32 0, i32 13, i32 0, i32 16
  %353 = load i16, ptr %352, align 8
  br i1 %309, label %408, label %354, !prof !15

354:                                              ; preds = %350
  %355 = lshr i16 %353, 8
  %356 = and i16 %355, 15
  %357 = zext i16 %356 to i32
  %358 = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %357
  %359 = load volatile ptr, ptr %358, align 4
  %360 = icmp eq ptr %359, %358
  br i1 %360, label %408, label %361

361:                                              ; preds = %354
  %362 = icmp eq ptr %351, null
  %363 = getelementptr inbounds %struct.sk_buff, ptr %351, i32 0, i32 15
  %364 = getelementptr inbounds %struct.sk_buff, ptr %351, i32 0, i32 19
  %365 = getelementptr inbounds %struct.anon.76, ptr %351, i32 0, i32 2
  br label %366

366:                                              ; preds = %402, %361
  %367 = phi ptr [ %359, %361 ], [ %404, %402 ]
  %368 = phi ptr [ %307, %361 ], [ %403, %402 ]
  %369 = getelementptr i8, ptr %367, i32 -28
  %370 = load i16, ptr %369, align 4
  %371 = icmp eq i16 %370, %353
  br i1 %371, label %372, label %402

372:                                              ; preds = %366
  %373 = icmp eq ptr %368, null
  br i1 %373, label %402, label %374

374:                                              ; preds = %372
  br i1 %362, label %387, label %375

375:                                              ; preds = %374
  %376 = load ptr, ptr %363, align 4
  %377 = load i8, ptr %376, align 8
  %378 = and i8 %377, 1
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %387, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %struct.skb_shared_info, ptr %376, i32 0, i32 11
  %382 = load ptr, ptr %381, align 4
  %383 = icmp eq ptr %382, null
  br i1 %383, label %387, label %384, !prof !22

384:                                              ; preds = %380
  %385 = call i32 @skb_copy_ubufs(ptr noundef nonnull %351, i32 noundef 2592) #39
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %402, !prof !22

387:                                              ; preds = %384, %380, %375, %374
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %364) #39, !srcloc !29
  %388 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %364, ptr %364, i32 1, ptr elementtype(i32) %364) #39, !srcloc !38
  %389 = extractvalue { i32, i32, i32 } %388, 0
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %395, label %391, !prof !15

391:                                              ; preds = %387
  %392 = add i32 %389, 1
  %393 = or i32 %392, %389
  %394 = icmp sgt i32 %393, -1
  br i1 %394, label %397, label %395, !prof !22

395:                                              ; preds = %391, %387
  %396 = phi i32 [ 2, %387 ], [ 1, %391 ]
  call void @refcount_warn_saturate(ptr noundef %364, i32 noundef %396) #39
  br label %397

397:                                              ; preds = %395, %391
  %398 = getelementptr inbounds %struct.packet_type, ptr %368, i32 0, i32 4
  %399 = load ptr, ptr %398, align 4
  %400 = load ptr, ptr %365, align 8
  %401 = call i32 %399(ptr noundef %351, ptr noundef %400, ptr noundef nonnull %368, ptr noundef %36) #39
  br label %402

402:                                              ; preds = %397, %384, %372, %366
  %403 = phi ptr [ %368, %366 ], [ %369, %372 ], [ %369, %384 ], [ %369, %397 ]
  %404 = load volatile ptr, ptr %367, align 4
  %405 = icmp eq ptr %404, %358
  br i1 %405, label %406, label %366

406:                                              ; preds = %402
  %407 = load ptr, ptr %5, align 4
  br label %408

408:                                              ; preds = %406, %354, %350
  %409 = phi ptr [ %307, %350 ], [ %307, %354 ], [ %403, %406 ]
  %410 = phi ptr [ %351, %350 ], [ %351, %354 ], [ %407, %406 ]
  %411 = getelementptr inbounds %struct.net_device, ptr %36, i32 0, i32 12
  %412 = load volatile ptr, ptr %411, align 4
  %413 = icmp eq ptr %412, %411
  br i1 %413, label %461, label %414

414:                                              ; preds = %408
  %415 = icmp eq ptr %410, null
  %416 = getelementptr inbounds %struct.sk_buff, ptr %410, i32 0, i32 15
  %417 = getelementptr inbounds %struct.sk_buff, ptr %410, i32 0, i32 19
  %418 = getelementptr inbounds %struct.anon.76, ptr %410, i32 0, i32 2
  br label %419

419:                                              ; preds = %455, %414
  %420 = phi ptr [ %412, %414 ], [ %457, %455 ]
  %421 = phi ptr [ %409, %414 ], [ %456, %455 ]
  %422 = getelementptr i8, ptr %420, i32 -28
  %423 = load i16, ptr %422, align 4
  %424 = icmp eq i16 %423, %353
  br i1 %424, label %425, label %455

425:                                              ; preds = %419
  %426 = icmp eq ptr %421, null
  br i1 %426, label %455, label %427

427:                                              ; preds = %425
  br i1 %415, label %440, label %428

428:                                              ; preds = %427
  %429 = load ptr, ptr %416, align 4
  %430 = load i8, ptr %429, align 8
  %431 = and i8 %430, 1
  %432 = icmp eq i8 %431, 0
  br i1 %432, label %440, label %433

433:                                              ; preds = %428
  %434 = getelementptr inbounds %struct.skb_shared_info, ptr %429, i32 0, i32 11
  %435 = load ptr, ptr %434, align 4
  %436 = icmp eq ptr %435, null
  br i1 %436, label %440, label %437, !prof !22

437:                                              ; preds = %433
  %438 = call i32 @skb_copy_ubufs(ptr noundef nonnull %410, i32 noundef 2592) #39
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %455, !prof !22

440:                                              ; preds = %437, %433, %428, %427
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %417) #39, !srcloc !29
  %441 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %417, ptr %417, i32 1, ptr elementtype(i32) %417) #39, !srcloc !38
  %442 = extractvalue { i32, i32, i32 } %441, 0
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %448, label %444, !prof !15

444:                                              ; preds = %440
  %445 = add i32 %442, 1
  %446 = or i32 %445, %442
  %447 = icmp sgt i32 %446, -1
  br i1 %447, label %450, label %448, !prof !22

448:                                              ; preds = %444, %440
  %449 = phi i32 [ 2, %440 ], [ 1, %444 ]
  call void @refcount_warn_saturate(ptr noundef %417, i32 noundef %449) #39
  br label %450

450:                                              ; preds = %448, %444
  %451 = getelementptr inbounds %struct.packet_type, ptr %421, i32 0, i32 4
  %452 = load ptr, ptr %451, align 4
  %453 = load ptr, ptr %418, align 8
  %454 = call i32 %452(ptr noundef %410, ptr noundef %453, ptr noundef nonnull %421, ptr noundef %36) #39
  br label %455

455:                                              ; preds = %450, %437, %425, %419
  %456 = phi ptr [ %421, %419 ], [ %422, %425 ], [ %422, %437 ], [ %422, %450 ]
  %457 = load volatile ptr, ptr %420, align 4
  %458 = icmp eq ptr %457, %411
  br i1 %458, label %459, label %419

459:                                              ; preds = %455
  %460 = load ptr, ptr %5, align 4
  br label %461

461:                                              ; preds = %459, %408
  %462 = phi ptr [ %410, %408 ], [ %460, %459 ]
  %463 = phi ptr [ %409, %408 ], [ %456, %459 ]
  store ptr %463, ptr %4, align 4
  %464 = getelementptr inbounds %struct.anon.76, ptr %462, i32 0, i32 2
  %465 = load ptr, ptr %464, align 8
  %466 = icmp eq ptr %465, %36
  br i1 %466, label %470, label %467, !prof !22

467:                                              ; preds = %461
  %468 = getelementptr inbounds %struct.net_device, ptr %465, i32 0, i32 12
  call fastcc void @deliver_ptype_list_skb(ptr noundef %462, ptr noundef nonnull %4, ptr noundef %36, i16 noundef zeroext %353, ptr noundef %468)
  %469 = load ptr, ptr %4, align 4
  br label %470

470:                                              ; preds = %467, %461
  %471 = phi ptr [ %469, %467 ], [ %463, %461 ]
  %472 = icmp eq ptr %471, null
  br i1 %472, label %490, label %473

473:                                              ; preds = %470
  %474 = load ptr, ptr %5, align 4
  %475 = icmp eq ptr %474, null
  br i1 %475, label %489, label %476

476:                                              ; preds = %473
  %477 = getelementptr inbounds %struct.sk_buff, ptr %474, i32 0, i32 15
  %478 = load ptr, ptr %477, align 4
  %479 = load i8, ptr %478, align 8
  %480 = and i8 %479, 1
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %489, label %482

482:                                              ; preds = %476
  %483 = getelementptr inbounds %struct.skb_shared_info, ptr %478, i32 0, i32 11
  %484 = load ptr, ptr %483, align 4
  %485 = icmp eq ptr %484, null
  br i1 %485, label %489, label %486, !prof !22

486:                                              ; preds = %482
  %487 = call i32 @skb_copy_ubufs(ptr noundef nonnull %474, i32 noundef 2592) #39
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %490, !prof !22

489:                                              ; preds = %486, %482, %476, %473
  store ptr %471, ptr %2, align 4
  br label %506

490:                                              ; preds = %486, %470
  %491 = load ptr, ptr %5, align 4
  br i1 %309, label %499, label %493

492:                                              ; preds = %199
  store ptr null, ptr %4, align 4
  br label %493

493:                                              ; preds = %492, %490
  %494 = phi ptr [ %87, %492 ], [ %491, %490 ]
  %495 = getelementptr inbounds %struct.anon.76, ptr %494, i32 0, i32 2
  %496 = load ptr, ptr %495, align 8
  %497 = getelementptr inbounds %struct.net_device, ptr %496, i32 0, i32 37
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %497) #39, !srcloc !29
  %498 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %497, ptr %497, i32 1, ptr elementtype(i32) %497) #39, !srcloc !30
  br label %504

499:                                              ; preds = %490
  %500 = getelementptr inbounds %struct.anon.76, ptr %491, i32 0, i32 2
  %501 = load ptr, ptr %500, align 8
  %502 = getelementptr inbounds %struct.net_device, ptr %501, i32 0, i32 39
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %502) #39, !srcloc !29
  %503 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %502, ptr %502, i32 1, ptr elementtype(i32) %502) #39, !srcloc !30
  br label %504

504:                                              ; preds = %499, %493
  %505 = load ptr, ptr %5, align 4
  call void @kfree_skb_reason(ptr noundef %505, i32 noundef 0) #39
  br label %506

506:                                              ; preds = %504, %489, %340, %296, %246, %83, %71
  %507 = phi i32 [ 1, %504 ], [ %308, %489 ], [ %308, %340 ], [ %299, %296 ], [ %247, %246 ], [ %58, %83 ], [ 1, %71 ]
  %508 = load ptr, ptr %5, align 4
  store ptr %508, ptr %0, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  ret i32 %507
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_disable() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_enable() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_vlan_untag(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @deliver_ptype_list_skb(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, i16 noundef zeroext %3, ptr noundef %4) unnamed_addr #14 {
  %6 = load ptr, ptr %1, align 4
  %7 = load volatile ptr, ptr %4, align 4
  %8 = icmp eq ptr %7, %4
  br i1 %8, label %54, label %9

9:                                                ; preds = %5
  %10 = icmp eq ptr %0, null
  %11 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %12 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 19
  %13 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  br label %14

14:                                               ; preds = %50, %9
  %15 = phi ptr [ %7, %9 ], [ %52, %50 ]
  %16 = phi ptr [ %6, %9 ], [ %51, %50 ]
  %17 = getelementptr i8, ptr %15, i32 -28
  %18 = load i16, ptr %17, align 4
  %19 = icmp eq i16 %18, %3
  br i1 %19, label %20, label %50

20:                                               ; preds = %14
  %21 = icmp eq ptr %16, null
  br i1 %21, label %50, label %22

22:                                               ; preds = %20
  br i1 %10, label %35, label %23

23:                                               ; preds = %22
  %24 = load ptr, ptr %11, align 4
  %25 = load i8, ptr %24, align 8
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.skb_shared_info, ptr %24, i32 0, i32 11
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %35, label %32, !prof !22

32:                                               ; preds = %28
  %33 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %0, i32 noundef 2592) #39
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %50, !prof !22

35:                                               ; preds = %32, %28, %23, %22
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %12) #39, !srcloc !29
  %36 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %12, ptr %12, i32 1, ptr elementtype(i32) %12) #39, !srcloc !38
  %37 = extractvalue { i32, i32, i32 } %36, 0
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39, !prof !15

39:                                               ; preds = %35
  %40 = add i32 %37, 1
  %41 = or i32 %40, %37
  %42 = icmp sgt i32 %41, -1
  br i1 %42, label %45, label %43, !prof !22

43:                                               ; preds = %39, %35
  %44 = phi i32 [ 2, %35 ], [ 1, %39 ]
  tail call void @refcount_warn_saturate(ptr noundef %12, i32 noundef %44) #39
  br label %45

45:                                               ; preds = %43, %39
  %46 = getelementptr inbounds %struct.packet_type, ptr %16, i32 0, i32 4
  %47 = load ptr, ptr %46, align 4
  %48 = load ptr, ptr %13, align 8
  %49 = tail call i32 %47(ptr noundef %0, ptr noundef %48, ptr noundef nonnull %16, ptr noundef %2) #39
  br label %50

50:                                               ; preds = %45, %32, %20, %14
  %51 = phi ptr [ %16, %14 ], [ %17, %20 ], [ %17, %32 ], [ %17, %45 ]
  %52 = load volatile ptr, ptr %15, align 4
  %53 = icmp eq ptr %52, %4
  br i1 %53, label %54, label %14

54:                                               ; preds = %50, %5
  %55 = phi ptr [ %6, %5 ], [ %51, %50 ]
  store ptr %55, ptr %1, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @set_rps_cpu(ptr noundef %0, ptr noundef %1, ptr noundef %2, i16 noundef zeroext %3) unnamed_addr #1 {
  %5 = zext i16 %3 to i32
  %6 = load i32, ptr @nr_cpu_ids, align 4
  %7 = icmp ugt i32 %6, %5
  br i1 %7, label %8, label %67

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 9
  %10 = load i16, ptr %9, align 4
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 84
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %58, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %18 = load i64, ptr %17, align 16
  %19 = and i64 %18, 274877906944
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %58, label %21

21:                                               ; preds = %16
  %22 = getelementptr %struct.cpu_rmap, ptr %14, i32 0, i32 4, i32 %5
  %23 = load i16, ptr %22, align 4
  %24 = add i16 %10, -1
  %25 = icmp eq i16 %23, %24
  br i1 %25, label %58, label %26

26:                                               ; preds = %21
  %27 = zext i16 %23 to i32
  %28 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 73
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr %struct.netdev_rx_queue, ptr %29, i32 %27, i32 2
  %31 = load volatile ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %58, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13
  %35 = load i16, ptr %34, align 8
  %36 = and i16 %35, 768
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  tail call void @__skb_get_hash(ptr noundef %1) #39
  br label %39

39:                                               ; preds = %38, %33
  %40 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 13, i32 0, i32 7
  %41 = load i32, ptr %40, align 8
  %42 = load i32, ptr %31, align 4
  %43 = and i32 %42, %41
  %44 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %struct.net_device_ops, ptr %45, i32 0, i32 40
  %47 = load ptr, ptr %46, align 4
  %48 = tail call i32 %47(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %23, i32 noundef %43) #39
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %39
  %51 = getelementptr %struct.rps_dev_flow_table, ptr %31, i32 0, i32 2, i32 %43
  %52 = trunc i32 %48 to i16
  %53 = getelementptr %struct.rps_dev_flow_table, ptr %31, i32 0, i32 2, i32 %43, i32 1
  store i16 %52, ptr %53, align 2
  %54 = getelementptr inbounds %struct.rps_dev_flow, ptr %2, i32 0, i32 1
  %55 = load i16, ptr %54, align 2
  %56 = icmp eq i16 %55, %52
  br i1 %56, label %57, label %58

57:                                               ; preds = %50
  store i16 -1, ptr %54, align 2
  br label %58

58:                                               ; preds = %57, %50, %39, %26, %21, %16, %12, %8
  %59 = phi ptr [ %2, %21 ], [ %2, %39 ], [ %51, %57 ], [ %51, %50 ], [ %2, %26 ], [ %2, %16 ], [ %2, %12 ], [ %2, %8 ]
  %60 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %5
  %61 = load i32, ptr %60, align 4
  %62 = add i32 %61, ptrtoint (ptr @softnet_data to i32)
  %63 = inttoptr i32 %62 to ptr
  %64 = getelementptr inbounds %struct.softnet_data, ptr %63, i32 0, i32 12
  %65 = load i32, ptr %64, align 64
  %66 = getelementptr inbounds %struct.rps_dev_flow, ptr %59, i32 0, i32 2
  store i32 %65, ptr %66, align 4
  br label %67

67:                                               ; preds = %58, %4
  %68 = phi ptr [ %59, %58 ], [ %2, %4 ]
  store i16 %3, ptr %68, align 4
  ret ptr %68
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raise_softirq_irqoff(i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__netif_receive_skb_list_core(ptr noundef readonly %0, i1 noundef zeroext %1) unnamed_addr #1 {
  %3 = alloca %struct.list_head, align 8
  %4 = alloca ptr, align 4
  %5 = alloca ptr, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store volatile ptr %3, ptr %3, align 8
  %6 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  store ptr %3, ptr %6, align 4
  %7 = load ptr, ptr %0, align 4
  store ptr %7, ptr %4, align 4
  %8 = icmp eq ptr %7, %0
  br i1 %8, label %85, label %9

9:                                                ; preds = %58, %2
  %10 = phi ptr [ %60, %58 ], [ null, %2 ]
  %11 = phi ptr [ %59, %58 ], [ null, %2 ]
  %12 = phi ptr [ %13, %58 ], [ %7, %2 ]
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %struct.anon.76, ptr %12, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #39
  store ptr null, ptr %5, align 4
  %16 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  store ptr %17, ptr %18, align 4
  store volatile ptr %13, ptr %17, align 4
  store ptr null, ptr %12, align 8
  %19 = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %4, i1 noundef zeroext %1, ptr noundef nonnull %5)
  %20 = load ptr, ptr %5, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %58, label %22

22:                                               ; preds = %9
  %23 = icmp eq ptr %10, %20
  %24 = icmp eq ptr %11, %15
  %25 = select i1 %23, i1 %24, i1 false
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = load ptr, ptr %6, align 4
  br label %52

28:                                               ; preds = %22
  %29 = icmp eq ptr %10, null
  br i1 %29, label %51, label %30

30:                                               ; preds = %28
  %31 = load volatile ptr, ptr %3, align 8
  %32 = icmp eq ptr %31, %3
  br i1 %32, label %51, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.packet_type, ptr %10, i32 0, i32 5
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.packet_type, ptr %10, i32 0, i32 4
  br label %40

39:                                               ; preds = %33
  call void %35(ptr noundef nonnull %3, ptr noundef nonnull %10, ptr noundef %11) #39
  br label %51

40:                                               ; preds = %40, %37
  %41 = phi ptr [ %31, %37 ], [ %42, %40 ]
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.list_head, ptr %41, i32 0, i32 1
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  store ptr %44, ptr %45, align 4
  store volatile ptr %42, ptr %44, align 4
  store ptr null, ptr %41, align 8
  %46 = load ptr, ptr %38, align 4
  %47 = getelementptr inbounds %struct.anon.76, ptr %41, i32 0, i32 2
  %48 = load ptr, ptr %47, align 8
  %49 = call i32 %46(ptr noundef %41, ptr noundef %48, ptr noundef nonnull %10, ptr noundef %11) #39
  %50 = icmp eq ptr %42, %3
  br i1 %50, label %51, label %40

51:                                               ; preds = %40, %39, %30, %28
  store volatile ptr %3, ptr %3, align 8
  br label %52

52:                                               ; preds = %51, %26
  %53 = phi ptr [ %3, %51 ], [ %27, %26 ]
  %54 = phi ptr [ %15, %51 ], [ %11, %26 ]
  %55 = phi ptr [ %20, %51 ], [ %10, %26 ]
  %56 = load ptr, ptr %4, align 4
  store ptr %56, ptr %6, align 4
  store ptr %3, ptr %56, align 4
  %57 = getelementptr inbounds %struct.list_head, ptr %56, i32 0, i32 1
  store ptr %53, ptr %57, align 4
  store volatile ptr %56, ptr %53, align 4
  br label %58

58:                                               ; preds = %52, %9
  %59 = phi ptr [ %54, %52 ], [ %11, %9 ]
  %60 = phi ptr [ %55, %52 ], [ %10, %9 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #39
  store ptr %13, ptr %4, align 4
  %61 = icmp eq ptr %13, %0
  br i1 %61, label %62, label %9

62:                                               ; preds = %58
  %63 = icmp eq ptr %60, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %62
  %65 = load volatile ptr, ptr %3, align 8
  %66 = icmp eq ptr %65, %3
  br i1 %66, label %85, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.packet_type, ptr %60, i32 0, i32 5
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.packet_type, ptr %60, i32 0, i32 4
  br label %74

73:                                               ; preds = %67
  call void %69(ptr noundef nonnull %3, ptr noundef nonnull %60, ptr noundef %59) #39
  br label %85

74:                                               ; preds = %74, %71
  %75 = phi ptr [ %65, %71 ], [ %76, %74 ]
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds %struct.list_head, ptr %75, i32 0, i32 1
  %78 = load ptr, ptr %77, align 4
  %79 = getelementptr inbounds %struct.list_head, ptr %76, i32 0, i32 1
  store ptr %78, ptr %79, align 4
  store volatile ptr %76, ptr %78, align 4
  store ptr null, ptr %75, align 8
  %80 = load ptr, ptr %72, align 4
  %81 = getelementptr inbounds %struct.anon.76, ptr %75, i32 0, i32 2
  %82 = load ptr, ptr %81, align 8
  %83 = call i32 %80(ptr noundef %75, ptr noundef %82, ptr noundef nonnull %60, ptr noundef %59) #39
  %84 = icmp eq ptr %76, %3
  br i1 %84, label %85, label %74

85:                                               ; preds = %74, %73, %64, %62, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_entry(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__netif_receive_skb(ptr noundef %0) unnamed_addr #1 {
  %2 = alloca ptr, align 4
  %3 = alloca ptr, align 4
  %4 = alloca ptr, align 4
  %5 = alloca ptr, align 4
  %6 = load volatile i32, ptr @memalloc_socks_key, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 11
  %10 = load i8, ptr %9, align 2
  %11 = and i8 %10, 64
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %8
  %14 = tail call ptr @llvm.thread.pointer() #39
  %15 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 4
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 2048
  %18 = or i32 %16, 2048
  store i32 %18, ptr %15, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4)
  store ptr %0, ptr %4, align 4
  %19 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #39
  store ptr null, ptr %5, align 4
  %21 = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %4, i1 noundef zeroext true, ptr noundef nonnull %5) #39
  %22 = load ptr, ptr %5, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %struct.packet_type, ptr %22, i32 0, i32 4
  %26 = load ptr, ptr %25, align 4
  %27 = load ptr, ptr %4, align 4
  %28 = getelementptr inbounds %struct.anon.76, ptr %27, i32 0, i32 2
  %29 = load ptr, ptr %28, align 8
  %30 = tail call i32 %26(ptr noundef %27, ptr noundef %29, ptr noundef nonnull %22, ptr noundef %20) #39
  br label %31

31:                                               ; preds = %24, %13
  %32 = phi i32 [ %30, %24 ], [ %21, %13 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4)
  %33 = load i32, ptr %15, align 4
  %34 = and i32 %33, -2049
  %35 = or i32 %34, %17
  store i32 %35, ptr %15, align 4
  br label %51

36:                                               ; preds = %8, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2)
  store ptr %0, ptr %2, align 4
  %37 = getelementptr inbounds %struct.anon.76, ptr %0, i32 0, i32 2
  %38 = load ptr, ptr %37, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store ptr null, ptr %3, align 4
  %39 = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %2, i1 noundef zeroext false, ptr noundef nonnull %3) #39
  %40 = load ptr, ptr %3, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.packet_type, ptr %40, i32 0, i32 4
  %44 = load ptr, ptr %43, align 4
  %45 = load ptr, ptr %2, align 4
  %46 = getelementptr inbounds %struct.anon.76, ptr %45, i32 0, i32 2
  %47 = load ptr, ptr %46, align 8
  %48 = tail call i32 %44(ptr noundef %45, ptr noundef %47, ptr noundef nonnull %40, ptr noundef %38) #39
  br label %49

49:                                               ; preds = %42, %36
  %50 = phi i32 [ %48, %42 ], [ %39, %36 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2)
  br label %51

51:                                               ; preds = %49, %31
  %52 = phi i32 [ %32, %31 ], [ %50, %49 ]
  ret i32 %52
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_exit(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_list_entry(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_list_exit(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_start_range_ns(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_napi_poll(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @napi_threaded_poll(ptr noundef %0) #1 {
  %2 = alloca i8, align 1
  %3 = tail call ptr @llvm.thread.pointer() #39
  %4 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 1
  store volatile i32 1, ptr %4, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !129
  %5 = tail call zeroext i1 @kthread_should_stop() #39
  br i1 %5, label %38, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  %8 = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  br label %11

9:                                                ; preds = %31, %25
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #39
  store volatile i32 1, ptr %4, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !129
  %10 = tail call zeroext i1 @kthread_should_stop() #39
  br i1 %10, label %38, label %23

11:                                               ; preds = %23, %6
  %12 = phi i1 [ false, %6 ], [ %24, %23 ]
  %13 = load volatile i32, ptr %7, align 4
  %14 = and i32 %13, 512
  %15 = icmp ne i32 %14, 0
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %11
  %18 = load volatile ptr, ptr %0, align 4
  %19 = icmp eq ptr %18, %0
  br i1 %19, label %25, label %20, !prof !22

20:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 6455, i32 noundef 9, ptr noundef null) #39
  br label %25

21:                                               ; preds = %11
  tail call void @schedule() #39
  store volatile i32 1, ptr %4, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !130
  %22 = tail call zeroext i1 @kthread_should_stop() #39
  br i1 %22, label %38, label %23

23:                                               ; preds = %21, %9
  %24 = xor i1 %16, true
  br label %11

25:                                               ; preds = %20, %17
  store volatile i32 0, ptr %4, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #39
  store i8 0, ptr %2, align 1
  %26 = load volatile i32, ptr %8, align 4
  %27 = add i32 %26, 512
  store volatile i32 %27, ptr %8, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  %28 = call fastcc i32 @__napi_poll(ptr noundef %0, ptr noundef nonnull %2)
  tail call fastcc void @local_bh_enable()
  %29 = load i8, ptr %2, align 1, !range !28
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %9, label %31

31:                                               ; preds = %31, %25
  %32 = tail call i32 @__cond_resched() #39
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #39
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #39
  store i8 0, ptr %2, align 1
  %33 = load volatile i32, ptr %8, align 4
  %34 = add i32 %33, 512
  store volatile i32 %34, ptr %8, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  %35 = call fastcc i32 @__napi_poll(ptr noundef %0, ptr noundef nonnull %2)
  tail call fastcc void @local_bh_enable()
  %36 = load i8, ptr %2, align 1, !range !28
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %9, label %31

38:                                               ; preds = %21, %9, %1
  store volatile i32 0, ptr %4, align 8
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__napi_poll(ptr noundef %0, ptr nocapture noundef writeonly %1) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 2
  %4 = load i32, ptr %3, align 4
  %5 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  %6 = load volatile i32, ptr %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 5
  %11 = load ptr, ptr %10, align 8
  %12 = tail call i32 %11(ptr noundef %0, i32 noundef %4) #39
  %13 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_napi_poll, i32 0, i32 1), align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %9
  %16 = tail call ptr @llvm.thread.pointer() #39
  %17 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = lshr i32 %18, 5
  %20 = getelementptr i32, ptr @__cpu_online_mask, i32 %19
  %21 = load volatile i32, ptr %20, align 4
  %22 = and i32 %18, 31
  %23 = shl nuw i32 1, %22
  %24 = and i32 %23, %21
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %15
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !97
  %27 = tail call i32 @__traceiter_napi_poll(ptr noundef null, ptr noundef %0, i32 noundef %12, i32 noundef %4) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !98
  br label %28

28:                                               ; preds = %26, %15, %9, %2
  %29 = phi i32 [ 0, %2 ], [ %12, %9 ], [ %12, %15 ], [ %12, %26 ]
  %30 = icmp sgt i32 %29, %4
  br i1 %30, label %31, label %38, !prof !15

31:                                               ; preds = %28
  %32 = load i1, ptr @__napi_poll.__print_once, align 1
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  store i1 true, ptr @__napi_poll.__print_once, align 1
  %34 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 6
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 5
  %37 = load ptr, ptr %36, align 8
  tail call void (ptr, ptr, ptr, ...) @netdev_printk(ptr noundef nonnull @.str.48, ptr noundef %35, ptr noundef nonnull @.str.95, ptr noundef %37, i32 noundef %29, i32 noundef %4) #43
  br label %38

38:                                               ; preds = %33, %31, %28
  %39 = icmp slt i32 %29, %4
  br i1 %39, label %77, label %40, !prof !22

40:                                               ; preds = %38
  %41 = load volatile i32, ptr %5, align 4
  %42 = and i32 %41, 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44, !prof !22

44:                                               ; preds = %40
  %45 = tail call zeroext i1 @napi_complete_done(ptr noundef %0, i32 noundef 0) #39
  br label %77

46:                                               ; preds = %40
  %47 = load volatile i32, ptr %5, align 4
  %48 = and i32 %47, 128
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = tail call zeroext i1 @napi_complete_done(ptr noundef %0, i32 noundef %29)
  br i1 %51, label %52, label %77

52:                                               ; preds = %50
  tail call fastcc void @napi_schedule(ptr noundef %0)
  br label %77

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 4
  %55 = load i32, ptr %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  tail call void @napi_gro_flush(ptr noundef %0, i1 noundef zeroext false) #39
  br label %58

58:                                               ; preds = %57, %53
  %59 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 10
  %60 = load i32, ptr %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9
  tail call void @netif_receive_skb_list_internal(ptr noundef %63) #39
  store volatile ptr %63, ptr %63, align 4
  %64 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 9, i32 1
  store ptr %63, ptr %64, align 4
  store i32 0, ptr %59, align 4
  br label %65

65:                                               ; preds = %62, %58
  %66 = load volatile ptr, ptr %0, align 4
  %67 = icmp eq ptr %66, %0
  br i1 %67, label %76, label %68, !prof !22

68:                                               ; preds = %65
  %69 = load i1, ptr @__napi_poll.__already_done, align 1
  br i1 %69, label %77, label %70, !prof !22

70:                                               ; preds = %68
  store i1 true, ptr @__napi_poll.__already_done, align 1
  %71 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 6
  %72 = load ptr, ptr %71, align 4
  %73 = icmp eq ptr %72, null
  %74 = select i1 %73, ptr @.str.97, ptr %72
  %75 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.96, ptr noundef nonnull %74) #42
  br label %77

76:                                               ; preds = %65
  store i8 1, ptr %1, align 1
  br label %77

77:                                               ; preds = %76, %70, %68, %52, %50, %44, %38
  ret i32 %29
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_should_stop() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @napi_schedule(ptr noundef %0) unnamed_addr #14 {
  %2 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  br label %3

3:                                                ; preds = %16, %1
  %4 = load volatile i32, ptr %2, align 8
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %47, !prof !22

7:                                                ; preds = %3
  %8 = and i32 %4, 1
  %9 = shl nuw nsw i32 %8, 1
  %10 = or i32 %4, %9
  %11 = or i32 %10, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !89
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #39, !srcloc !29
  br label %12

12:                                               ; preds = %12, %7
  %13 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %2, i32 %4, i32 %11) #39, !srcloc !90
  %14 = extractvalue { i32, i32 } %13, 0
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = extractvalue { i32, i32 } %13, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !91
  %18 = icmp eq i32 %17, %4
  br i1 %18, label %19, label %3

19:                                               ; preds = %16
  %20 = icmp eq i32 %8, 0
  br i1 %20, label %21, label %47

21:                                               ; preds = %19
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %23 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %24 = inttoptr i32 %23 to ptr
  %25 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %24) #34, !srcloc !18
  %26 = add i32 %25, ptrtoint (ptr @softnet_data to i32)
  %27 = inttoptr i32 %26 to ptr
  %28 = load volatile i32, ptr %2, align 4
  %29 = and i32 %28, 256
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 15
  %33 = load volatile ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 1
  %37 = load volatile i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @_set_bit(i32 noundef 9, ptr noundef %2) #39
  br label %40

40:                                               ; preds = %39, %35
  %41 = tail call i32 @wake_up_process(ptr noundef nonnull %33) #39
  br label %46

42:                                               ; preds = %31, %21
  %43 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %44 = load ptr, ptr %43, align 4
  store ptr %0, ptr %43, align 4
  store ptr %27, ptr %0, align 4
  %45 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  store ptr %44, ptr %45, align 4
  store volatile ptr %0, ptr %44, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %46

46:                                               ; preds = %42, %40
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #39, !srcloc !19
  br label %47

47:                                               ; preds = %46, %19, %3
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_update_upper_level(ptr noundef %0, ptr nocapture noundef readnone %1) unnamed_addr #36 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr i8, ptr %4, i32 -12
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %25, %6
  %11 = phi i8 [ %22, %25 ], [ 0, %6 ]
  %12 = phi ptr [ %27, %25 ], [ %8, %6 ]
  %13 = phi ptr [ %23, %25 ], [ %4, %6 ]
  %14 = getelementptr i8, ptr %13, i32 -7
  %15 = load i8, ptr %14, align 1, !range !28
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 52
  %19 = load i8, ptr %18, align 2
  %20 = tail call i8 @llvm.umax.i8(i8 %11, i8 %19) #39
  br label %21

21:                                               ; preds = %17, %10
  %22 = phi i8 [ %11, %10 ], [ %20, %17 ]
  %23 = load ptr, ptr %13, align 4
  %24 = icmp eq ptr %23, %3
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr i8, ptr %23, i32 -12
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %10

29:                                               ; preds = %25, %21, %6, %2
  %30 = phi i8 [ 0, %6 ], [ 0, %2 ], [ %22, %25 ], [ %22, %21 ]
  %31 = add i8 %30, 1
  %32 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 52
  store i8 %31, ptr %32, align 2
  ret i32 0
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__netdev_walk_all_lower_dev(ptr noundef %0) unnamed_addr #36 {
  %2 = alloca [9 x ptr], align 4
  %3 = alloca [9 x ptr], align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %2) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %2, i8 0, i32 36, i1 false), !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %3, i8 0, i32 36, i1 false), !annotation !21
  %4 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  br label %5

5:                                                ; preds = %60, %1
  %6 = phi ptr [ %4, %1 ], [ %61, %60 ]
  %7 = phi ptr [ %0, %1 ], [ %62, %60 ]
  %8 = phi i32 [ 0, %1 ], [ %63, %60 ]
  %9 = icmp eq ptr %7, %0
  br i1 %9, label %41, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 13
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, %11
  br i1 %13, label %37, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %12, i32 -12
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %33, %14
  %19 = phi i8 [ %30, %33 ], [ 0, %14 ]
  %20 = phi ptr [ %35, %33 ], [ %16, %14 ]
  %21 = phi ptr [ %31, %33 ], [ %12, %14 ]
  %22 = getelementptr i8, ptr %21, i32 -7
  %23 = load i8, ptr %22, align 1, !range !28
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.net_device, ptr %20, i32 0, i32 52
  %27 = load i8, ptr %26, align 2
  %28 = tail call i8 @llvm.umax.i8(i8 %19, i8 %27) #39
  br label %29

29:                                               ; preds = %25, %18
  %30 = phi i8 [ %19, %18 ], [ %28, %25 ]
  %31 = load ptr, ptr %21, align 4
  %32 = icmp eq ptr %31, %11
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr i8, ptr %31, i32 -12
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %18

37:                                               ; preds = %33, %29, %14, %10
  %38 = phi i8 [ 0, %14 ], [ 0, %10 ], [ %30, %33 ], [ %30, %29 ]
  %39 = add i8 %38, 1
  %40 = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 52
  store i8 %39, ptr %40, align 2
  br label %41

41:                                               ; preds = %37, %5
  %42 = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 13, i32 1
  br label %43

43:                                               ; preds = %51, %41
  %44 = phi ptr [ %6, %41 ], [ %45, %51 ]
  %45 = load ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, %42
  br i1 %46, label %64, label %47

47:                                               ; preds = %43
  %48 = getelementptr i8, ptr %45, i32 -12
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr i8, ptr %45, i32 -7
  %53 = load i8, ptr %52, align 1, !range !28
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %43

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.net_device, ptr %49, i32 0, i32 13, i32 1
  %57 = getelementptr [9 x ptr], ptr %2, i32 0, i32 %8
  store ptr %7, ptr %57, align 4
  %58 = add i32 %8, 1
  %59 = getelementptr [9 x ptr], ptr %3, i32 0, i32 %8
  store ptr %45, ptr %59, align 4
  br label %60

60:                                               ; preds = %66, %55
  %61 = phi ptr [ %56, %55 ], [ %71, %66 ]
  %62 = phi ptr [ %49, %55 ], [ %69, %66 ]
  %63 = phi i32 [ %58, %55 ], [ %67, %66 ]
  br label %5

64:                                               ; preds = %47, %43
  %65 = icmp eq i32 %8, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %64
  %67 = add i32 %8, -1
  %68 = getelementptr [9 x ptr], ptr %2, i32 0, i32 %67
  %69 = load ptr, ptr %68, align 4
  %70 = getelementptr [9 x ptr], ptr %3, i32 0, i32 %67
  %71 = load ptr, ptr %70, align 4
  br label %60

72:                                               ; preds = %64
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %2) #39
  ret void
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @__netdev_update_lower_level(ptr noundef %0, ptr nocapture noundef readnone %1) #36 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr i8, ptr %4, i32 -12
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %25, %6
  %11 = phi i8 [ %22, %25 ], [ 0, %6 ]
  %12 = phi ptr [ %27, %25 ], [ %8, %6 ]
  %13 = phi ptr [ %23, %25 ], [ %4, %6 ]
  %14 = getelementptr i8, ptr %13, i32 -7
  %15 = load i8, ptr %14, align 1, !range !28
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 53
  %19 = load i8, ptr %18, align 1
  %20 = tail call i8 @llvm.umax.i8(i8 %11, i8 %19) #39
  br label %21

21:                                               ; preds = %17, %10
  %22 = phi i8 [ %11, %10 ], [ %20, %17 ]
  %23 = load ptr, ptr %13, align 4
  %24 = icmp eq ptr %23, %3
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr i8, ptr %23, i32 -12
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %10

29:                                               ; preds = %25, %21, %6, %2
  %30 = phi i8 [ 0, %6 ], [ 0, %2 ], [ %22, %25 ], [ %22, %21 ]
  %31 = add i8 %30, 1
  %32 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 53
  store i8 %31, ptr %32, align 1
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_walk_all_upper_dev(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) unnamed_addr #1 {
  %4 = alloca [9 x ptr], align 4
  %5 = alloca [9 x ptr], align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %4, i8 0, i32 36, i1 false), !annotation !21
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %5, i8 0, i32 36, i1 false), !annotation !21
  %6 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  br label %7

7:                                                ; preds = %34, %3
  %8 = phi ptr [ %6, %3 ], [ %35, %34 ]
  %9 = phi ptr [ %0, %3 ], [ %36, %34 ]
  %10 = phi i32 [ 0, %3 ], [ %37, %34 ]
  %11 = icmp eq ptr %9, %0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = tail call i32 %1(ptr noundef %9, ptr noundef %2) #39, !callees !131
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %46

15:                                               ; preds = %12, %7
  %16 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 13
  br label %17

17:                                               ; preds = %25, %15
  %18 = phi ptr [ %8, %15 ], [ %19, %25 ]
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, %16
  br i1 %20, label %38, label %21

21:                                               ; preds = %17
  %22 = getelementptr i8, ptr %19, i32 -12
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr i8, ptr %19, i32 -7
  %27 = load i8, ptr %26, align 1, !range !28
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.net_device, ptr %23, i32 0, i32 13
  %31 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %10
  store ptr %9, ptr %31, align 4
  %32 = add i32 %10, 1
  %33 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %10
  store ptr %19, ptr %33, align 4
  br label %34

34:                                               ; preds = %40, %29
  %35 = phi ptr [ %30, %29 ], [ %45, %40 ]
  %36 = phi ptr [ %23, %29 ], [ %43, %40 ]
  %37 = phi i32 [ %32, %29 ], [ %41, %40 ]
  br label %7

38:                                               ; preds = %21, %17
  %39 = icmp eq i32 %10, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %38
  %41 = add i32 %10, -1
  %42 = getelementptr [9 x ptr], ptr %4, i32 0, i32 %41
  %43 = load ptr, ptr %42, align 4
  %44 = getelementptr [9 x ptr], ptr %5, i32 0, i32 %41
  %45 = load ptr, ptr %44, align 4
  br label %34

46:                                               ; preds = %38, %12
  %47 = phi i32 [ %13, %12 ], [ 0, %38 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #39
  ret i32 %47
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__netdev_adjacent_dev_unlink_neighbour(ptr noundef %0, ptr noundef %1) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %4 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13, i32 1
  tail call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %0, ptr noundef %1, ptr noundef %3) #39
  tail call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %1, ptr noundef %0, ptr noundef %4) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_adjacent_dev_insert(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i1 noundef zeroext %4) unnamed_addr #1 {
  %6 = alloca [23 x i8], align 1
  %7 = alloca [23 x i8], align 1
  %8 = zext i1 %4 to i8
  br label %9

9:                                                ; preds = %13, %5
  %10 = phi ptr [ %2, %5 ], [ %11, %13 ]
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, %2
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr i8, ptr %11, i32 -12
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %1
  br i1 %16, label %17, label %9

17:                                               ; preds = %13
  %18 = getelementptr i8, ptr %11, i32 -12
  %19 = icmp eq ptr %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = getelementptr i8, ptr %11, i32 -6
  %22 = load i16, ptr %21, align 2
  %23 = add i16 %22, 1
  store i16 %23, ptr %21, align 2
  br label %94

24:                                               ; preds = %17, %9
  %25 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %26 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %25, i32 noundef 3264, i32 noundef 28) #41
  %27 = icmp eq ptr %26, null
  br i1 %27, label %94, label %28

28:                                               ; preds = %24
  store ptr %1, ptr %26, align 8
  %29 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 2
  store i8 %8, ptr %29, align 4
  %30 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 4
  store i16 1, ptr %30, align 2
  %31 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 5
  store ptr %3, ptr %31, align 8
  %32 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 3
  store i8 0, ptr %32, align 1
  %33 = icmp eq ptr %1, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %28
  %35 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %36 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 99
  %37 = load ptr, ptr %36, align 8
  %38 = ptrtoint ptr %37 to i32
  %39 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %40 = inttoptr i32 %39 to ptr
  %41 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %40) #34, !srcloc !18
  %42 = add i32 %41, %38
  %43 = inttoptr i32 %42 to ptr
  %44 = load i32, ptr %43, align 4
  %45 = add i32 %44, 1
  store i32 %45, ptr %43, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %35) #39, !srcloc !19
  br label %46

46:                                               ; preds = %34, %28
  %47 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %48 = icmp eq ptr %47, %2
  %49 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %50 = icmp eq ptr %49, %2
  %51 = select i1 %48, i1 true, i1 %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %7) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(23) %7, i8 0, i32 23, i1 false) #39, !annotation !21
  %53 = select i1 %48, ptr @.str.100, ptr @.str.101
  %54 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %7, ptr noundef nonnull %53, ptr noundef %1) #39
  %55 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  %56 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 111
  %57 = call i32 @sysfs_create_link(ptr noundef %55, ptr noundef %56, ptr noundef nonnull %7) #39
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %7) #39
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %79

59:                                               ; preds = %52, %46
  br i1 %4, label %60, label %70

60:                                               ; preds = %59
  %61 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  %62 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 111
  %63 = call i32 @sysfs_create_link(ptr noundef %61, ptr noundef %62, ptr noundef nonnull @.str.98) #39
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 6
  %67 = load ptr, ptr %2, align 4
  store ptr %67, ptr %66, align 4
  %68 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 6, i32 1
  store ptr %2, ptr %68, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !10
  store volatile ptr %66, ptr %2, align 4
  %69 = getelementptr inbounds %struct.list_head, ptr %67, i32 0, i32 1
  store ptr %66, ptr %69, align 4
  br label %94

70:                                               ; preds = %59
  %71 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 6
  %72 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  %73 = load ptr, ptr %72, align 4
  store ptr %2, ptr %71, align 4
  %74 = getelementptr inbounds %struct.netdev_adjacent, ptr %26, i32 0, i32 6, i32 1
  store ptr %73, ptr %74, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !10
  store volatile ptr %71, ptr %73, align 4
  store ptr %71, ptr %72, align 4
  br label %94

75:                                               ; preds = %60
  br i1 %51, label %76, label %79

76:                                               ; preds = %75
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %6) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(23) %6, i8 0, i32 23, i1 false) #39, !annotation !21
  %77 = select i1 %48, ptr @.str.100, ptr @.str.101
  %78 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %6, ptr noundef nonnull %77, ptr noundef %1) #39
  call void @sysfs_remove_link(ptr noundef %61, ptr noundef nonnull %6) #39
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %6) #39
  br label %79

79:                                               ; preds = %76, %75, %52
  %80 = phi i32 [ %57, %52 ], [ %63, %76 ], [ %63, %75 ]
  br i1 %33, label %93, label %81

81:                                               ; preds = %79
  %82 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %83 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 99
  %84 = load ptr, ptr %83, align 8
  %85 = ptrtoint ptr %84 to i32
  %86 = call i32 @llvm.read_register.i32(metadata !0) #39
  %87 = inttoptr i32 %86 to ptr
  %88 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %87) #34, !srcloc !18
  %89 = add i32 %88, %85
  %90 = inttoptr i32 %89 to ptr
  %91 = load i32, ptr %90, align 4
  %92 = add i32 %91, -1
  store i32 %92, ptr %90, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %82) #39, !srcloc !19
  br label %93

93:                                               ; preds = %81, %79
  call void @kfree(ptr noundef nonnull %26) #39
  br label %94

94:                                               ; preds = %93, %70, %65, %24, %20
  %95 = phi i32 [ 0, %20 ], [ %80, %93 ], [ -12, %24 ], [ 0, %70 ], [ 0, %65 ]
  ret i32 %95
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__netdev_adjacent_dev_remove(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) unnamed_addr #1 {
  %4 = alloca [23 x i8], align 1
  br label %5

5:                                                ; preds = %9, %3
  %6 = phi ptr [ %2, %3 ], [ %7, %9 ]
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, %2
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr i8, ptr %7, i32 -12
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, %1
  br i1 %12, label %13, label %5

13:                                               ; preds = %9
  %14 = getelementptr i8, ptr %7, i32 -12
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13, %5
  %17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.99, ptr noundef %0, ptr noundef %1) #42
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 7360, i32 noundef 9, ptr noundef null) #39
  br label %60

18:                                               ; preds = %13
  %19 = getelementptr i8, ptr %7, i32 -6
  %20 = load i16, ptr %19, align 2
  %21 = icmp ugt i16 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = add i16 %20, -1
  store i16 %23, ptr %19, align 2
  br label %60

24:                                               ; preds = %18
  %25 = getelementptr i8, ptr %7, i32 -8
  %26 = load i8, ptr %25, align 4, !range !28
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  tail call void @sysfs_remove_link(ptr noundef %29, ptr noundef nonnull @.str.98) #39
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13
  %32 = icmp eq ptr %31, %2
  %33 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 13, i32 1
  %34 = icmp eq ptr %33, %2
  %35 = select i1 %32, i1 true, i1 %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %4) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(23) %4, i8 0, i32 23, i1 false) #39, !annotation !21
  %37 = select i1 %32, ptr @.str.100, ptr @.str.101
  %38 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %4, ptr noundef nonnull %37, ptr noundef %1) #39
  %39 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 111
  call void @sysfs_remove_link(ptr noundef %39, ptr noundef nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %4) #39
  br label %40

40:                                               ; preds = %36, %30
  %41 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = load ptr, ptr %7, align 4
  %44 = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  store ptr %42, ptr %44, align 4
  store volatile ptr %43, ptr %42, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %41, align 4
  %45 = icmp eq ptr %1, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %40
  %47 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %48 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 99
  %49 = load ptr, ptr %48, align 8
  %50 = ptrtoint ptr %49 to i32
  %51 = call i32 @llvm.read_register.i32(metadata !0) #39
  %52 = inttoptr i32 %51 to ptr
  %53 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %52) #34, !srcloc !18
  %54 = add i32 %53, %50
  %55 = inttoptr i32 %54 to ptr
  %56 = load i32, ptr %55, align 4
  %57 = add i32 %56, -1
  store i32 %57, ptr %55, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %47) #39, !srcloc !19
  br label %58

58:                                               ; preds = %46, %40
  %59 = getelementptr i8, ptr %7, i32 8
  call void @kvfree_call_rcu(ptr noundef %59, ptr noundef nonnull inttoptr (i32 20 to ptr)) #39
  br label %60

60:                                               ; preds = %58, %22, %16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_link(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @dev_xdp_install(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3, i32 noundef %4, ptr noundef %5) unnamed_addr #1 {
  %7 = alloca %struct.netdev_bpf, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #39
  %8 = icmp eq i32 %1, 2
  %9 = zext i1 %8 to i32
  store i32 %9, ptr %7, align 4
  %10 = getelementptr inbounds %struct.netdev_bpf, ptr %7, i32 0, i32 1
  %11 = getelementptr inbounds %struct.netdev_bpf, ptr %7, i32 0, i32 1, i32 0, i32 2
  store ptr %3, ptr %11, align 4
  store i32 %4, ptr %10, align 4
  %12 = getelementptr inbounds %struct.netdev_bpf, ptr %7, i32 0, i32 1, i32 0, i32 1
  store ptr %5, ptr %12, align 4
  %13 = call i32 %2(ptr noundef %0, ptr noundef nonnull %7) #39
  %14 = icmp ne i32 %13, 0
  %15 = or i1 %8, %14
  br i1 %15, label %24, label %16

16:                                               ; preds = %6
  %17 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 %1, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  %20 = getelementptr inbounds %struct.bpf_link, ptr %18, i32 0, i32 4
  %21 = getelementptr %struct.net_device, ptr %0, i32 0, i32 128, i32 %1
  %22 = select i1 %19, ptr %21, ptr %20
  %23 = load ptr, ptr %22, align 4
  call void @bpf_prog_change_xdp(ptr noundef %23, ptr noundef %5) #39
  br label %24

24:                                               ; preds = %16, %6
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #39
  ret i32 %13
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @generic_xdp_install(ptr noundef %0, ptr nocapture noundef readonly %1) #1 {
  %3 = getelementptr inbounds %struct.netdev_bpf, ptr %1, i32 0, i32 1, i32 0, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = load i32, ptr %1, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %46

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 76
  %9 = load ptr, ptr %8, align 16
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !132
  store volatile ptr %4, ptr %8, align 16
  %10 = icmp eq ptr %9, null
  %11 = icmp ne ptr %4, null
  %12 = select i1 %10, i1 true, i1 %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = load i8, ptr @static_key_initialized, align 1, !range !28
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17, !prof !15

16:                                               ; preds = %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 296, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_dec, ptr noundef nonnull @generic_xdp_needed_key) #39
  br label %17

17:                                               ; preds = %16, %13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @generic_xdp_needed_key) #39, !srcloc !29
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @generic_xdp_needed_key, ptr nonnull @generic_xdp_needed_key, i32 1, ptr nonnull elementtype(i32) @generic_xdp_needed_key) #39, !srcloc !31
  br label %46

19:                                               ; preds = %7
  %20 = icmp ne ptr %9, null
  %21 = icmp eq ptr %4, null
  %22 = select i1 %21, i1 true, i1 %20
  br i1 %22, label %46, label %23

23:                                               ; preds = %19
  %24 = load i8, ptr @static_key_initialized, align 1, !range !28
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27, !prof !15

26:                                               ; preds = %23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.74, i32 noundef 290, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef nonnull @__func__.static_key_slow_inc, ptr noundef nonnull @generic_xdp_needed_key) #39
  br label %27

27:                                               ; preds = %26, %23
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @generic_xdp_needed_key) #39, !srcloc !29
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @generic_xdp_needed_key, ptr nonnull @generic_xdp_needed_key, i32 1, ptr nonnull elementtype(i32) @generic_xdp_needed_key) #39, !srcloc !30
  tail call void @dev_disable_lro(ptr noundef %0)
  %29 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 25
  %30 = load i64, ptr %29, align 32
  %31 = and i64 %30, -36028797018963969
  store i64 %31, ptr %29, align 32
  tail call void @netdev_update_features(ptr noundef %0) #39
  %32 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 23
  %33 = load i64, ptr %32, align 16
  %34 = and i64 %33, 36028797018963968
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %46, label %36, !prof !22

36:                                               ; preds = %27
  %37 = load i8, ptr %0, align 64
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = tail call ptr @strchr(ptr noundef %0, i32 noundef 37) #39
  %41 = icmp eq ptr %40, null
  %42 = select i1 %41, ptr %0, ptr @.str.65
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi ptr [ @.str.65, %36 ], [ %42, %39 ]
  %45 = tail call fastcc ptr @netdev_reg_state(ptr noundef %0) #39
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1587, i32 noundef 9, ptr noundef nonnull @.str.107, ptr noundef %44, ptr noundef nonnull %45) #39
  br label %46

46:                                               ; preds = %43, %27, %19, %17, %2
  %47 = phi i32 [ 0, %19 ], [ 0, %17 ], [ -22, %2 ], [ 0, %27 ], [ 0, %43 ]
  ret i32 %47
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_change_xdp(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_fire_event(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_forget_dev(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_run_queue() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #30

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_init(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_rxq_info_reg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @dev_printk_emit(i32 noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @dev_proc_init() local_unnamed_addr #3 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @netdev_kobject_init() local_unnamed_addr #3 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_subsys(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @flush_backlog(ptr nocapture noundef readnone %0) #1 {
  %2 = tail call ptr @llvm.thread.pointer() #39
  %3 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %4 = load volatile i32, ptr %3, align 4
  %5 = add i32 %4, 512
  store volatile i32 %5, ptr %3, align 4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !63
  %6 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %7) #34, !srcloc !18
  %9 = add i32 %8, ptrtoint (ptr @softnet_data to i32)
  %10 = inttoptr i32 %9 to ptr
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %11 = getelementptr inbounds %struct.softnet_data, ptr %10, i32 0, i32 19, i32 2
  tail call void @_raw_spin_lock(ptr noundef %11) #39
  %12 = getelementptr inbounds %struct.softnet_data, ptr %10, i32 0, i32 19
  %13 = load ptr, ptr %12, align 32
  %14 = icmp eq ptr %13, %12
  br i1 %14, label %66, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.softnet_data, ptr %10, i32 0, i32 19, i32 1
  %17 = getelementptr inbounds %struct.softnet_data, ptr %10, i32 0, i32 12
  br label %18

18:                                               ; preds = %64, %15
  %19 = phi ptr [ %13, %15 ], [ %20, %64 ]
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %struct.anon.76, ptr %19, i32 0, i32 2
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 102
  %24 = load i8, ptr %23, align 4
  %25 = icmp eq i8 %24, 2
  br i1 %25, label %26, label %64

26:                                               ; preds = %18
  %27 = load i32, ptr %16, align 4
  %28 = add i32 %27, -1
  store volatile i32 %28, ptr %16, align 4
  %29 = load ptr, ptr %19, align 8
  %30 = getelementptr inbounds %struct.anon.76, ptr %19, i32 0, i32 1
  %31 = load ptr, ptr %30, align 4
  store ptr null, ptr %30, align 4
  store ptr null, ptr %19, align 8
  %32 = getelementptr inbounds %struct.anon.76, ptr %29, i32 0, i32 1
  store volatile ptr %31, ptr %32, align 4
  store volatile ptr %29, ptr %31, align 8
  %33 = icmp eq ptr %19, null
  br i1 %33, label %61, label %34, !prof !15

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.sk_buff, ptr %19, i32 0, i32 19
  %36 = load volatile i32, ptr %35, align 4
  %37 = icmp eq i32 %36, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39
  br i1 %37, label %38, label %39, !prof !22

38:                                               ; preds = %34
  store volatile i32 0, ptr %35, align 4
  br label %47

39:                                               ; preds = %34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %35) #39, !srcloc !29
  %40 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %35, ptr %35, i32 1, ptr elementtype(i32) %35) #39, !srcloc !42
  %41 = extractvalue { i32, i32, i32 } %40, 0
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = icmp sgt i32 %41, 0
  br i1 %44, label %61, label %45, !prof !22

45:                                               ; preds = %43
  tail call void @refcount_warn_saturate(ptr noundef %35, i32 noundef 3) #39
  br label %61

46:                                               ; preds = %39
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !43
  br label %47

47:                                               ; preds = %46, %38
  %48 = getelementptr inbounds %struct.sk_buff, ptr %19, i32 0, i32 3
  store i32 1, ptr %48, align 4
  %49 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #39, !srcloc !17
  %50 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %51 = inttoptr i32 %50 to ptr
  %52 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %51) #34, !srcloc !18
  %53 = add i32 %52, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %54 = inttoptr i32 %53 to ptr
  %55 = load ptr, ptr %54, align 4
  store ptr %55, ptr %19, align 8
  %56 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %57 = inttoptr i32 %56 to ptr
  %58 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %57) #34, !srcloc !18
  %59 = add i32 %58, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %60 = inttoptr i32 %59 to ptr
  store ptr %19, ptr %60, align 4
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %49) #39, !srcloc !19
  br label %61

61:                                               ; preds = %47, %45, %43, %26
  %62 = load i32, ptr %17, align 64
  %63 = add i32 %62, 1
  store i32 %63, ptr %17, align 64
  br label %64

64:                                               ; preds = %61, %18
  %65 = icmp eq ptr %20, %12
  br i1 %65, label %66, label %18

66:                                               ; preds = %64, %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %67 = load i16, ptr %11, align 4
  %68 = add i16 %67, 1
  store i16 %68, ptr %11, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  %69 = getelementptr inbounds %struct.softnet_data, ptr %10, i32 0, i32 1
  %70 = load ptr, ptr %69, align 8
  %71 = icmp eq ptr %70, %69
  br i1 %71, label %94, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.softnet_data, ptr %10, i32 0, i32 1, i32 1
  %74 = getelementptr inbounds %struct.softnet_data, ptr %10, i32 0, i32 12
  br label %75

75:                                               ; preds = %92, %72
  %76 = phi ptr [ %70, %72 ], [ %77, %92 ]
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %struct.anon.76, ptr %76, i32 0, i32 2
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %struct.net_device, ptr %79, i32 0, i32 102
  %81 = load i8, ptr %80, align 4
  %82 = icmp eq i8 %81, 2
  br i1 %82, label %83, label %92

83:                                               ; preds = %75
  %84 = load i32, ptr %73, align 4
  %85 = add i32 %84, -1
  store volatile i32 %85, ptr %73, align 4
  %86 = load ptr, ptr %76, align 8
  %87 = getelementptr inbounds %struct.anon.76, ptr %76, i32 0, i32 1
  %88 = load ptr, ptr %87, align 4
  store ptr null, ptr %87, align 4
  store ptr null, ptr %76, align 8
  %89 = getelementptr inbounds %struct.anon.76, ptr %86, i32 0, i32 1
  store volatile ptr %88, ptr %89, align 4
  store volatile ptr %86, ptr %88, align 8
  tail call void @kfree_skb_reason(ptr noundef %76, i32 noundef 0) #39
  %90 = load i32, ptr %74, align 64
  %91 = add i32 %90, 1
  store i32 %91, ptr %74, align 64
  br label %92

92:                                               ; preds = %83, %75
  %93 = icmp eq ptr %77, %69
  br i1 %93, label %94, label %75

94:                                               ; preds = %92, %66
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rps_trigger_softirq(ptr noundef %0) #1 {
  %2 = getelementptr inbounds %struct.softnet_data, ptr %0, i32 0, i32 20
  %3 = getelementptr inbounds %struct.softnet_data, ptr %0, i32 0, i32 20, i32 1
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.softnet_data, ptr %0, i32 0, i32 20, i32 15
  %9 = load volatile ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 1
  %13 = load volatile i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_set_bit(i32 noundef 9, ptr noundef %3) #39
  br label %16

16:                                               ; preds = %15, %11
  %17 = tail call i32 @wake_up_process(ptr noundef nonnull %9) #39
  br label %22

18:                                               ; preds = %7, %1
  %19 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  store ptr %2, ptr %19, align 4
  store ptr %0, ptr %2, align 4
  %21 = getelementptr inbounds %struct.softnet_data, ptr %0, i32 0, i32 20, i32 0, i32 1
  store ptr %20, ptr %21, align 4
  store volatile ptr %2, ptr %20, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %22

22:                                               ; preds = %18, %16
  %23 = getelementptr inbounds %struct.softnet_data, ptr %0, i32 0, i32 4
  %24 = load i32, ptr %23, align 32
  %25 = add i32 %24, 1
  store i32 %25, ptr %23, align 32
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @process_backlog(ptr noundef %0, i32 noundef %1) #1 {
  %3 = getelementptr i8, ptr %0, i32 -140
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %7 = load ptr, ptr %3, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %6
  store ptr null, ptr %3, align 4
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br label %10

10:                                               ; preds = %26, %9
  %11 = phi ptr [ %13, %26 ], [ %7, %9 ]
  %12 = getelementptr inbounds %struct.softnet_data, ptr %11, i32 0, i32 15
  %13 = load ptr, ptr %12, align 16
  %14 = getelementptr inbounds %struct.softnet_data, ptr %11, i32 0, i32 16
  %15 = load i32, ptr %14, align 4
  %16 = lshr i32 %15, 5
  %17 = getelementptr i32, ptr @__cpu_online_mask, i32 %16
  %18 = load volatile i32, ptr %17, align 4
  %19 = and i32 %15, 31
  %20 = shl nuw i32 1, %19
  %21 = and i32 %20, %18
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.softnet_data, ptr %11, i32 0, i32 14
  %25 = tail call i32 @smp_call_function_single_async(i32 noundef %15, ptr noundef %24) #39
  br label %26

26:                                               ; preds = %23, %10
  %27 = icmp eq ptr %13, null
  br i1 %27, label %29, label %10

28:                                               ; preds = %6
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br label %29

29:                                               ; preds = %28, %26, %2
  %30 = load i32, ptr @dev_rx_weight, align 4
  %31 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 2
  store i32 %30, ptr %31, align 4
  %32 = getelementptr i8, ptr %0, i32 -168
  %33 = getelementptr i8, ptr %0, i32 -160
  %34 = getelementptr i8, ptr %0, i32 -112
  %35 = getelementptr i8, ptr %0, i32 -4
  %36 = getelementptr i8, ptr %0, i32 -16
  %37 = getelementptr i8, ptr %0, i32 -164
  %38 = getelementptr i8, ptr %0, i32 -12
  %39 = getelementptr i8, ptr %0, i32 -8
  %40 = getelementptr inbounds %struct.napi_struct, ptr %0, i32 0, i32 1
  br label %41

41:                                               ; preds = %67, %29
  %42 = phi i32 [ 0, %29 ], [ %44, %67 ]
  br label %43

43:                                               ; preds = %49, %41
  %44 = phi i32 [ %59, %49 ], [ %42, %41 ]
  %45 = load ptr, ptr %32, align 4
  %46 = icmp eq ptr %45, %32
  %47 = icmp eq ptr %45, null
  %48 = or i1 %46, %47
  br i1 %48, label %61, label %49

49:                                               ; preds = %43
  %50 = load i32, ptr %33, align 4
  %51 = add i32 %50, -1
  store volatile i32 %51, ptr %33, align 4
  %52 = load ptr, ptr %45, align 8
  %53 = getelementptr inbounds %struct.anon.76, ptr %45, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  store ptr null, ptr %53, align 4
  store ptr null, ptr %45, align 8
  %55 = getelementptr inbounds %struct.anon.76, ptr %52, i32 0, i32 1
  store volatile ptr %54, ptr %55, align 4
  store volatile ptr %52, ptr %54, align 8
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %56 = tail call fastcc i32 @__netif_receive_skb(ptr noundef nonnull %45)
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  %57 = load i32, ptr %34, align 64
  %58 = add i32 %57, 1
  store i32 %58, ptr %34, align 64
  %59 = add i32 %44, 1
  %60 = icmp slt i32 %59, %1
  br i1 %60, label %43, label %76

61:                                               ; preds = %43
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  tail call void @_raw_spin_lock(ptr noundef %35) #39
  %62 = load ptr, ptr %36, align 4
  %63 = icmp eq ptr %62, %36
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  store i32 0, ptr %40, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %65 = load i16, ptr %35, align 4
  %66 = add i16 %65, 1
  store i16 %66, ptr %35, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br label %79

67:                                               ; preds = %61
  %68 = load ptr, ptr %37, align 4
  %69 = load ptr, ptr %38, align 4
  %70 = getelementptr inbounds %struct.anon.76, ptr %62, i32 0, i32 1
  store volatile ptr %68, ptr %70, align 4
  store volatile ptr %62, ptr %68, align 8
  store volatile ptr %32, ptr %69, align 8
  store volatile ptr %69, ptr %37, align 4
  %71 = load i32, ptr %39, align 4
  %72 = load i32, ptr %33, align 4
  %73 = add i32 %72, %71
  store i32 %73, ptr %33, align 4
  store ptr %36, ptr %36, align 4
  store ptr %36, ptr %38, align 4
  store i32 0, ptr %39, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %74 = load i16, ptr %35, align 4
  %75 = add i16 %74, 1
  store i16 %75, ptr %35, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br label %41

76:                                               ; preds = %49
  %77 = add i32 %42, 1
  %78 = call i32 @llvm.smax.i32(i32 %1, i32 %77)
  br label %79

79:                                               ; preds = %76, %64
  %80 = phi i32 [ %78, %76 ], [ %44, %64 ]
  ret i32 %80
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_device(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @open_softirq(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @net_tx_action(ptr nocapture noundef readnone %0) #1 {
  %2 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %3 = inttoptr i32 %2 to ptr
  %4 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %3) #34, !srcloc !18
  %5 = add i32 %4, ptrtoint (ptr @softnet_data to i32)
  %6 = inttoptr i32 %5 to ptr
  %7 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 9
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %50, label %10

10:                                               ; preds = %1
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %11 = load ptr, ptr %7, align 4
  store ptr null, ptr %7, align 4
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  %12 = icmp eq ptr %11, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %48, %10
  %14 = phi ptr [ %15, %48 ], [ %11, %10 ]
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 19
  %17 = load volatile i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19, !prof !22

19:                                               ; preds = %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4898, i32 noundef 9, ptr noundef null) #39
  br label %20

20:                                               ; preds = %19, %13
  %21 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40, !prof !22

24:                                               ; preds = %20
  %25 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_consume_skb, i32 0, i32 1), align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %24
  %28 = tail call ptr @llvm.thread.pointer() #39
  %29 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %30 = load i32, ptr %29, align 8
  %31 = lshr i32 %30, 5
  %32 = getelementptr i32, ptr @__cpu_online_mask, i32 %31
  %33 = load volatile i32, ptr %32, align 4
  %34 = and i32 %30, 31
  %35 = shl nuw i32 1, %34
  %36 = and i32 %35, %33
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %27
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !133
  %39 = tail call i32 @__traceiter_consume_skb(ptr noundef null, ptr noundef nonnull %14) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !134
  br label %41

40:                                               ; preds = %20
  tail call fastcc void @trace_kfree_skb(ptr noundef nonnull %14)
  br label %41

41:                                               ; preds = %40, %38, %27, %24
  %42 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 11
  %43 = load i8, ptr %42, align 2
  %44 = and i8 %43, 12
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  tail call void @__kfree_skb(ptr noundef nonnull %14) #39
  br label %48

47:                                               ; preds = %41
  tail call void @__kfree_skb_defer(ptr noundef nonnull %14) #39
  br label %48

48:                                               ; preds = %47, %46
  %49 = icmp eq ptr %15, null
  br i1 %49, label %50, label %13

50:                                               ; preds = %48, %10, %1
  %51 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 7
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %84, label %54

54:                                               ; preds = %50
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %55 = load ptr, ptr %51, align 4
  store ptr null, ptr %51, align 4
  %56 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 8
  store ptr %51, ptr %56, align 16
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !16
  %57 = icmp eq ptr %55, null
  br i1 %57, label %83, label %58

58:                                               ; preds = %81, %54
  %59 = phi ptr [ %61, %81 ], [ %55, %54 ]
  %60 = getelementptr inbounds %struct.Qdisc, ptr %59, i32 0, i32 21
  %61 = load ptr, ptr %60, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !135
  %62 = getelementptr inbounds %struct.Qdisc, ptr %59, i32 0, i32 2
  %63 = load i32, ptr %62, align 8
  %64 = and i32 %63, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  %67 = getelementptr inbounds %struct.Qdisc, ptr %59, i32 0, i32 16, i32 3
  tail call void @_raw_spin_lock(ptr noundef %67) #39
  br label %74

68:                                               ; preds = %58
  %69 = getelementptr inbounds %struct.Qdisc, ptr %59, i32 0, i32 19
  %70 = load volatile i32, ptr %69, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73, !prof !22

73:                                               ; preds = %68
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %69) #39
  br label %81

74:                                               ; preds = %68, %66
  %75 = phi ptr [ null, %68 ], [ %67, %66 ]
  %76 = getelementptr inbounds %struct.Qdisc, ptr %59, i32 0, i32 19
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %76) #39
  tail call fastcc void @qdisc_run(ptr noundef nonnull %59)
  %77 = icmp eq ptr %75, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  tail call void asm sideeffect "dmb ish", "~{memory}"() #39, !srcloc !11
  %79 = load i16, ptr %75, align 4
  %80 = add i16 %79, 1
  store i16 %80, ptr %75, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #39, !srcloc !12
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #39, !srcloc !13
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !14
  br label %81

81:                                               ; preds = %78, %74, %73
  %82 = icmp eq ptr %61, null
  br i1 %82, label %83, label %58

83:                                               ; preds = %81, %54
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !20
  br label %84

84:                                               ; preds = %83, %50
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @net_rx_action(ptr nocapture noundef readnone %0) #1 {
  %2 = alloca i8, align 1
  %3 = alloca %struct.list_head, align 8
  %4 = alloca %struct.list_head, align 8
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #39
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #34, !srcloc !18
  %8 = add i32 %7, ptrtoint (ptr @softnet_data to i32)
  %9 = inttoptr i32 %8 to ptr
  %10 = load volatile i32, ptr @jiffies, align 64
  %11 = load i32, ptr @netdev_budget_usecs, align 4
  %12 = tail call i32 @__usecs_to_jiffies(i32 noundef %11) #39
  %13 = load i32, ptr @netdev_budget, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  store ptr %3, ptr %3, align 8
  %14 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  store ptr %3, ptr %14, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store ptr %4, ptr %4, align 8
  %15 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  store ptr %4, ptr %15, align 4
  call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %16 = load volatile ptr, ptr %9, align 4
  %17 = icmp eq ptr %16, %9
  br i1 %17, label %24, label %18

18:                                               ; preds = %1
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  store ptr %3, ptr %22, align 4
  store ptr %16, ptr %3, align 8
  store ptr %19, ptr %21, align 4
  %23 = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  store ptr %21, ptr %23, align 4
  store volatile ptr %9, ptr %9, align 4
  store ptr %9, ptr %20, align 4
  br label %24

24:                                               ; preds = %18, %1
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  %25 = add i32 %12, %10
  br label %26

26:                                               ; preds = %50, %24
  %27 = phi i32 [ %13, %24 ], [ %48, %50 ]
  %28 = load volatile ptr, ptr %3, align 8
  %29 = icmp eq ptr %28, %3
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.softnet_data, ptr %9, i32 0, i32 5
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %58

34:                                               ; preds = %30
  %35 = load volatile ptr, ptr %4, align 8
  %36 = icmp eq ptr %35, %4
  br i1 %36, label %109, label %58

37:                                               ; preds = %26
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #39
  store i8 0, ptr %2, align 1
  %38 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = load ptr, ptr %28, align 4
  %41 = getelementptr inbounds %struct.list_head, ptr %40, i32 0, i32 1
  store ptr %39, ptr %41, align 4
  store volatile ptr %40, ptr %39, align 4
  store volatile ptr %28, ptr %28, align 4
  store ptr %28, ptr %38, align 4
  %42 = call fastcc i32 @__napi_poll(ptr noundef %28, ptr noundef nonnull %2) #39
  %43 = load i8, ptr %2, align 1, !range !28
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %37
  %46 = load ptr, ptr %15, align 4
  store ptr %28, ptr %15, align 4
  store ptr %4, ptr %28, align 4
  store ptr %46, ptr %38, align 4
  store volatile ptr %28, ptr %46, align 4
  br label %47

47:                                               ; preds = %45, %37
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #39
  %48 = sub i32 %27, %42
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %54, label %50, !prof !15

50:                                               ; preds = %47
  %51 = load volatile i32, ptr @jiffies, align 64
  %52 = sub i32 %51, %25
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %26, !prof !15

54:                                               ; preds = %50, %47
  %55 = getelementptr inbounds %struct.softnet_data, ptr %9, i32 0, i32 3
  %56 = load i32, ptr %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, ptr %55, align 4
  br label %58

58:                                               ; preds = %54, %34, %30
  call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %59 = load volatile ptr, ptr %9, align 4
  %60 = icmp eq ptr %59, %9
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = load ptr, ptr %14, align 4
  %63 = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.list_head, ptr %59, i32 0, i32 1
  store ptr %62, ptr %65, align 4
  store ptr %59, ptr %62, align 4
  store ptr %3, ptr %64, align 4
  store ptr %64, ptr %14, align 4
  store volatile ptr %9, ptr %9, align 4
  store ptr %9, ptr %63, align 4
  br label %66

66:                                               ; preds = %61, %58
  %67 = load volatile ptr, ptr %4, align 8
  %68 = icmp eq ptr %67, %4
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = load ptr, ptr %14, align 4
  %71 = load ptr, ptr %15, align 4
  %72 = getelementptr inbounds %struct.list_head, ptr %67, i32 0, i32 1
  store ptr %70, ptr %72, align 4
  store ptr %67, ptr %70, align 4
  store ptr %3, ptr %71, align 4
  store ptr %71, ptr %14, align 4
  br label %73

73:                                               ; preds = %69, %66
  %74 = load volatile ptr, ptr %3, align 8
  %75 = icmp eq ptr %74, %3
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  %77 = load ptr, ptr %9, align 4
  %78 = load ptr, ptr %14, align 4
  %79 = getelementptr inbounds %struct.list_head, ptr %74, i32 0, i32 1
  store ptr %9, ptr %79, align 4
  store ptr %74, ptr %9, align 4
  store ptr %77, ptr %78, align 4
  %80 = getelementptr inbounds %struct.list_head, ptr %77, i32 0, i32 1
  store ptr %78, ptr %80, align 4
  br label %81

81:                                               ; preds = %76, %73
  %82 = load volatile ptr, ptr %9, align 4
  %83 = icmp eq ptr %82, %9
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %85

85:                                               ; preds = %84, %81
  %86 = getelementptr inbounds %struct.softnet_data, ptr %9, i32 0, i32 5
  %87 = load ptr, ptr %86, align 4
  %88 = icmp eq ptr %87, null
  br i1 %88, label %108, label %89

89:                                               ; preds = %85
  store ptr null, ptr %86, align 4
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br label %90

90:                                               ; preds = %106, %89
  %91 = phi ptr [ %93, %106 ], [ %87, %89 ]
  %92 = getelementptr inbounds %struct.softnet_data, ptr %91, i32 0, i32 15
  %93 = load ptr, ptr %92, align 16
  %94 = getelementptr inbounds %struct.softnet_data, ptr %91, i32 0, i32 16
  %95 = load i32, ptr %94, align 4
  %96 = lshr i32 %95, 5
  %97 = getelementptr i32, ptr @__cpu_online_mask, i32 %96
  %98 = load volatile i32, ptr %97, align 4
  %99 = and i32 %95, 31
  %100 = shl nuw i32 1, %99
  %101 = and i32 %100, %98
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %90
  %104 = getelementptr inbounds %struct.softnet_data, ptr %91, i32 0, i32 14
  %105 = call i32 @smp_call_function_single_async(i32 noundef %95, ptr noundef %104) #39
  br label %106

106:                                              ; preds = %103, %90
  %107 = icmp eq ptr %93, null
  br i1 %107, label %109, label %90

108:                                              ; preds = %85
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  br label %109

109:                                              ; preds = %108, %106, %34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @dev_cpu_dead(i32 noundef %0) #1 {
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #39, !srcloc !123
  %2 = tail call ptr @llvm.thread.pointer() #39
  %3 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %4 = load i32, ptr %3, align 8
  %5 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %6 = load i32, ptr %5, align 4
  %7 = add i32 %6, ptrtoint (ptr @softnet_data to i32)
  %8 = inttoptr i32 %7 to ptr
  %9 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  %10 = load i32, ptr %9, align 4
  %11 = add i32 %10, ptrtoint (ptr @softnet_data to i32)
  %12 = getelementptr inbounds %struct.softnet_data, ptr %8, i32 0, i32 9
  br label %13

13:                                               ; preds = %13, %1
  %14 = phi ptr [ %12, %1 ], [ %15, %13 ]
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %13

17:                                               ; preds = %13
  %18 = inttoptr i32 %11 to ptr
  %19 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 9
  %20 = load ptr, ptr %19, align 4
  store ptr %20, ptr %14, align 4
  store ptr null, ptr %19, align 4
  %21 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 7
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.softnet_data, ptr %8, i32 0, i32 8
  %26 = load ptr, ptr %25, align 16
  store ptr %22, ptr %26, align 4
  %27 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 8
  %28 = load ptr, ptr %27, align 16
  store ptr %28, ptr %25, align 16
  store ptr null, ptr %21, align 4
  store ptr %21, ptr %27, align 16
  br label %29

29:                                               ; preds = %24, %17
  %30 = load volatile ptr, ptr %18, align 4
  %31 = icmp eq ptr %30, %18
  br i1 %31, label %65, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  br label %34

34:                                               ; preds = %62, %32
  %35 = phi ptr [ %30, %32 ], [ %63, %62 ]
  %36 = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = load ptr, ptr %35, align 4
  %39 = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  store ptr %37, ptr %39, align 4
  store volatile ptr %38, ptr %37, align 4
  store volatile ptr %35, ptr %35, align 4
  store ptr %35, ptr %36, align 4
  %40 = getelementptr inbounds %struct.napi_struct, ptr %35, i32 0, i32 5
  %41 = load ptr, ptr %40, align 8
  %42 = icmp eq ptr %41, @process_backlog
  %43 = getelementptr inbounds %struct.napi_struct, ptr %35, i32 0, i32 1
  br i1 %42, label %44, label %45

44:                                               ; preds = %34
  store i32 0, ptr %43, align 8
  br label %62

45:                                               ; preds = %34
  %46 = load volatile i32, ptr %43, align 4
  %47 = and i32 %46, 256
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.napi_struct, ptr %35, i32 0, i32 15
  %51 = load volatile ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.task_struct, ptr %51, i32 0, i32 1
  %55 = load volatile i32, ptr %54, align 8
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  tail call void @_set_bit(i32 noundef 9, ptr noundef %43) #39
  br label %58

58:                                               ; preds = %57, %53
  %59 = tail call i32 @wake_up_process(ptr noundef nonnull %51) #39
  br label %62

60:                                               ; preds = %49, %45
  %61 = load ptr, ptr %33, align 4
  store ptr %35, ptr %33, align 4
  store ptr %8, ptr %35, align 4
  store ptr %61, ptr %36, align 4
  store volatile ptr %35, ptr %61, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #39
  br label %62

62:                                               ; preds = %60, %58, %44
  %63 = load volatile ptr, ptr %18, align 4
  %64 = icmp eq ptr %63, %18
  br i1 %64, label %65, label %34

65:                                               ; preds = %62, %29
  tail call void @raise_softirq_irqoff(i32 noundef 2) #39
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #39, !srcloc !124
  %66 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 5
  %67 = load ptr, ptr %66, align 4
  store ptr null, ptr %66, align 4
  %68 = icmp eq ptr %67, null
  br i1 %68, label %87, label %69

69:                                               ; preds = %85, %65
  %70 = phi ptr [ %72, %85 ], [ %67, %65 ]
  %71 = getelementptr inbounds %struct.softnet_data, ptr %70, i32 0, i32 15
  %72 = load ptr, ptr %71, align 16
  %73 = getelementptr inbounds %struct.softnet_data, ptr %70, i32 0, i32 16
  %74 = load i32, ptr %73, align 4
  %75 = lshr i32 %74, 5
  %76 = getelementptr i32, ptr @__cpu_online_mask, i32 %75
  %77 = load volatile i32, ptr %76, align 4
  %78 = and i32 %74, 31
  %79 = shl nuw i32 1, %78
  %80 = and i32 %79, %77
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %69
  %83 = getelementptr inbounds %struct.softnet_data, ptr %70, i32 0, i32 14
  %84 = tail call i32 @smp_call_function_single_async(i32 noundef %74, ptr noundef %83) #39
  br label %85

85:                                               ; preds = %82, %69
  %86 = icmp eq ptr %72, null
  br i1 %86, label %87, label %69

87:                                               ; preds = %85, %65
  %88 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 1
  %89 = load ptr, ptr %88, align 4
  %90 = icmp eq ptr %89, %88
  %91 = icmp eq ptr %89, null
  %92 = or i1 %90, %91
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 1, i32 1
  %95 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 12
  br label %102

96:                                               ; preds = %102, %87
  %97 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 19
  %98 = tail call ptr @skb_dequeue(ptr noundef %97) #39
  %99 = icmp eq ptr %98, null
  br i1 %99, label %124, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 12
  br label %117

102:                                              ; preds = %102, %93
  %103 = phi ptr [ %89, %93 ], [ %113, %102 ]
  %104 = load i32, ptr %94, align 4
  %105 = add i32 %104, -1
  store volatile i32 %105, ptr %94, align 4
  %106 = load ptr, ptr %103, align 8
  %107 = getelementptr inbounds %struct.anon.76, ptr %103, i32 0, i32 1
  %108 = load ptr, ptr %107, align 4
  store ptr null, ptr %107, align 4
  store ptr null, ptr %103, align 8
  %109 = getelementptr inbounds %struct.anon.76, ptr %106, i32 0, i32 1
  store volatile ptr %108, ptr %109, align 4
  store volatile ptr %106, ptr %108, align 8
  %110 = tail call i32 @netif_rx_ni(ptr noundef nonnull %103)
  %111 = load i32, ptr %95, align 64
  %112 = add i32 %111, 1
  store i32 %112, ptr %95, align 64
  %113 = load ptr, ptr %88, align 4
  %114 = icmp eq ptr %113, %88
  %115 = icmp eq ptr %113, null
  %116 = or i1 %114, %115
  br i1 %116, label %96, label %102

117:                                              ; preds = %117, %100
  %118 = phi ptr [ %98, %100 ], [ %122, %117 ]
  %119 = tail call i32 @netif_rx_ni(ptr noundef nonnull %118)
  %120 = load i32, ptr %101, align 64
  %121 = add i32 %120, 1
  store i32 %121, ptr %101, align 64
  %122 = tail call ptr @skb_dequeue(ptr noundef %97) #39
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %117

124:                                              ; preds = %117, %96
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @netdev_init(ptr noundef %0) #12 section ".init.text" {
  %2 = icmp eq ptr %0, @init_net
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16
  store volatile ptr %4, ptr %4, align 4
  %5 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16, i32 1
  store ptr %4, ptr %5, align 4
  br label %6

6:                                                ; preds = %3, %1
  %7 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %8 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3264, i32 noundef 1024) #41
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 23
  store ptr null, ptr %11, align 16
  br label %23

12:                                               ; preds = %6
  tail call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(1024) %8, i8 0, i32 1024, i1 false) #39
  %13 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 23
  store ptr %8, ptr %13, align 16
  %14 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %15 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %14, i32 noundef 3264, i32 noundef 1024) #41
  %16 = icmp eq ptr %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  tail call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(1024) %15, i8 0, i32 1024, i1 false) #39
  %18 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 24
  store ptr %15, ptr %18, align 4
  %19 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 25
  store ptr null, ptr %19, align 8
  br label %23

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 24
  store ptr null, ptr %21, align 4
  %22 = load ptr, ptr %13, align 16
  tail call void @kfree(ptr noundef %22) #39
  br label %23

23:                                               ; preds = %20, %17, %10
  %24 = phi i32 [ 0, %17 ], [ -12, %20 ], [ -12, %10 ]
  ret i32 %24
}

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @netdev_exit(ptr noundef %0) #37 section ".ref.text" {
  %2 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 23
  %3 = load ptr, ptr %2, align 16
  tail call void @kfree(ptr noundef %3) #39
  %4 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 24
  %5 = load ptr, ptr %4, align 4
  tail call void @kfree(ptr noundef %5) #39
  %6 = icmp eq ptr %0, @init_net
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16
  %9 = load volatile ptr, ptr %8, align 4
  %10 = icmp ne ptr %9, %8
  %11 = load i1, ptr @netdev_exit.__already_done, align 1
  %12 = xor i1 %11, true
  %13 = select i1 %10, i1 %12, i1 false
  br i1 %13, label %14, label %15, !prof !15

14:                                               ; preds = %7
  store i1 true, ptr @netdev_exit.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10844, i32 noundef 9, ptr noundef null) #39
  br label %15

15:                                               ; preds = %14, %7, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smp_call_function_single_async(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @default_device_exit(ptr noundef readonly %0) #37 section ".ref.text" {
  %2 = alloca [16 x i8], align 1
  tail call void @rtnl_lock() #39
  %3 = getelementptr inbounds %struct.net, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 32
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %62, label %6

6:                                                ; preds = %60, %1
  %7 = phi ptr [ %8, %60 ], [ %4, %1 ]
  %8 = load ptr, ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #39
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %2, i8 0, i32 16, i1 false), !annotation !21
  %9 = getelementptr i8, ptr %7, i32 104
  %10 = load i64, ptr %9, align 16
  %11 = and i64 %10, 8192
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %60

13:                                               ; preds = %6
  %14 = getelementptr i8, ptr %7, i32 1140
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.rtnl_link_ops, ptr %15, i32 0, i32 5
  %19 = load i8, ptr %18, align 4, !range !28
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %60, label %21

21:                                               ; preds = %17, %13
  %22 = getelementptr i8, ptr %7, i32 84
  %23 = load i32, ptr %22, align 4
  %24 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %2, i32 noundef 16, ptr noundef nonnull @.str.130, i32 noundef %23)
  %25 = call i32 @strnlen(ptr noundef nonnull %2, i32 noundef 16) #39
  %26 = call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef nonnull %2, i32 noundef %25) #40
  %27 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 16
  %28 = mul i32 %26, 1640531527
  %29 = lshr i32 %28, 24
  %30 = getelementptr %struct.hlist_head, ptr %27, i32 %29
  br label %31

31:                                               ; preds = %35, %21
  %32 = phi ptr [ %30, %21 ], [ %33, %35 ]
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.netdev_name_node, ptr %33, i32 0, i32 3
  %37 = load ptr, ptr %36, align 4
  %38 = call i32 @strcmp(ptr noundef %37, ptr noundef nonnull %2) #39
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %31

40:                                               ; preds = %35
  %41 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %2, i32 noundef 16, ptr noundef nonnull @.str.131)
  br label %42

42:                                               ; preds = %40, %31
  %43 = call i32 @rtnl_is_locked() #39
  %44 = icmp eq i32 %43, 0
  %45 = load i1, ptr @__dev_change_net_namespace.__already_done, align 1
  %46 = xor i1 %45, true
  %47 = select i1 %44, i1 %46, i1 false
  br i1 %47, label %48, label %49, !prof !15

48:                                               ; preds = %42
  store i1 true, ptr @__dev_change_net_namespace.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10501, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 10501) #39
  br label %49

49:                                               ; preds = %48, %42
  %50 = load i64, ptr %9, align 16
  %51 = and i64 %50, 8192
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr i8, ptr %7, i32 620
  %55 = load i8, ptr %54, align 4
  %56 = icmp eq i8 %55, 1
  br i1 %56, label %60, label %57

57:                                               ; preds = %53, %49
  %58 = getelementptr i8, ptr %7, i32 -40
  %59 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132, ptr noundef nonnull @__func__.default_device_exit, ptr noundef %58, i32 noundef -22) #42
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10880, 0\0A.popsection", ""() #39, !srcloc !136
  unreachable

60:                                               ; preds = %53, %17, %6
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #39
  %61 = icmp eq ptr %8, %3
  br i1 %61, label %62, label %6

62:                                               ; preds = %60, %1
  call void @rtnl_unlock() #39
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @default_device_exit_batch(ptr noundef %0) #37 section ".ref.text" {
  %2 = alloca %struct.list_head, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  store ptr %2, ptr %2, align 8
  %3 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  store ptr %2, ptr %3, align 4
  call fastcc void @rtnl_lock_unregistering(ptr noundef %0)
  %4 = load ptr, ptr %0, align 4
  %5 = icmp eq ptr %4, %0
  br i1 %5, label %44, label %9

6:                                                ; preds = %40, %9
  %7 = load ptr, ptr %10, align 4
  %8 = icmp eq ptr %7, %0
  br i1 %8, label %44, label %9

9:                                                ; preds = %6, %1
  %10 = phi ptr [ %7, %6 ], [ %4, %1 ]
  %11 = getelementptr i8, ptr %10, i32 60
  %12 = getelementptr i8, ptr %10, i32 64
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, %11
  br i1 %14, label %6, label %15

15:                                               ; preds = %40, %9
  %16 = phi ptr [ %42, %40 ], [ %13, %9 ]
  %17 = getelementptr i8, ptr %16, i32 -40
  %18 = getelementptr i8, ptr %16, i32 1140
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.rtnl_link_ops, ptr %19, i32 0, i32 11
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  call void %23(ptr noundef %17, ptr noundef nonnull %2) #39
  br label %40

26:                                               ; preds = %21, %15
  %27 = call i32 @rtnl_is_locked() #39
  %28 = icmp eq i32 %27, 0
  %29 = load i1, ptr @unregister_netdevice_queue.__already_done, align 1
  %30 = xor i1 %29, true
  %31 = select i1 %28, i1 %30, i1 false
  br i1 %31, label %32, label %33, !prof !15

32:                                               ; preds = %26
  store i1 true, ptr @unregister_netdevice_queue.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 10341, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 10341) #39
  br label %33

33:                                               ; preds = %32, %26
  %34 = getelementptr i8, ptr %16, i32 16
  %35 = getelementptr i8, ptr %16, i32 20
  %36 = load ptr, ptr %35, align 4
  %37 = load ptr, ptr %34, align 4
  %38 = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  store ptr %36, ptr %38, align 4
  store volatile ptr %37, ptr %36, align 4
  %39 = load ptr, ptr %3, align 4
  store ptr %34, ptr %3, align 4
  store ptr %2, ptr %34, align 4
  store ptr %39, ptr %35, align 4
  store volatile ptr %34, ptr %39, align 4
  br label %40

40:                                               ; preds = %33, %25
  %41 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, %11
  br i1 %43, label %6, label %15

44:                                               ; preds = %6, %1
  call void @unregister_netdevice_many(ptr noundef nonnull %2)
  call void @rtnl_unlock() #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rtnl_lock_unregistering(ptr noundef readonly %0) unnamed_addr #37 section ".ref.text" {
  %2 = alloca %struct.wait_queue_entry, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #39
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %2, i32 0, i32 1
  %4 = tail call ptr @llvm.thread.pointer() #39
  store i32 0, ptr %2, align 4
  store ptr %4, ptr %3, align 4
  %5 = getelementptr inbounds %struct.wait_queue_entry, ptr %2, i32 0, i32 2
  store ptr @woken_wake_function, ptr %5, align 4
  %6 = getelementptr inbounds %struct.wait_queue_entry, ptr %2, i32 0, i32 3
  store ptr %6, ptr %6, align 4
  %7 = getelementptr inbounds %struct.wait_queue_entry, ptr %2, i32 0, i32 3, i32 1
  store ptr %6, ptr %7, align 4
  call void @add_wait_queue(ptr noundef nonnull @netdev_unregistering_wq, ptr noundef nonnull %2) #39
  br label %8

8:                                                ; preds = %17, %1
  call void @rtnl_lock() #39
  br label %9

9:                                                ; preds = %13, %8
  %10 = phi ptr [ %0, %8 ], [ %11, %13 ]
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, %0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr i8, ptr %11, i32 -28
  %15 = load i32, ptr %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %9, label %17

17:                                               ; preds = %13
  call void @__rtnl_unlock() #39
  %18 = call i32 @wait_woken(ptr noundef nonnull %2, i32 noundef 2, i32 noundef 2147483647) #39
  br label %8

19:                                               ; preds = %9
  call void @remove_wait_queue(ptr noundef nonnull @netdev_unregistering_wq, ptr noundef nonnull %2) #39
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #39
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @woken_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_woken(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @trace_kfree_skb(ptr noundef %0) unnamed_addr #14 {
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_kfree_skb, i32 0, i32 1), align 4
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = tail call ptr @llvm.thread.pointer() #39
  %6 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %7 = load i32, ptr %6, align 8
  %8 = lshr i32 %7, 5
  %9 = getelementptr i32, ptr @__cpu_online_mask, i32 %8
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %7, 31
  %12 = shl nuw i32 1, %11
  %13 = and i32 %12, %10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !137
  %16 = tail call i32 @__traceiter_kfree_skb(ptr noundef null, ptr noundef %0, ptr noundef nonnull @net_tx_action, i32 noundef 0) #39
  tail call void asm sideeffect "", "~{memory}"() #39, !srcloc !138
  br label %17

17:                                               ; preds = %15, %4, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kfree_skb(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kfree_skb_defer(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_consume_skb(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_kfree_skb(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__usecs_to_jiffies(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_setup_state(i32 noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_dequeue(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #38

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umin.i8(i8, i8) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umax.i8(i8, i8) #19

attributes #0 = { nofree nounwind null_pointer_is_valid readonly sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { argmemonly nofree nounwind willreturn }
attributes #12 = { cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nofree nounwind null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #20 = { nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #22 = { mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #23 = { mustprogress nofree nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #24 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #25 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #26 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #27 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #28 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #29 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #30 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #31 = { nocallback nofree nosync nounwind willreturn }
attributes #32 = { nofree null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #33 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #34 = { nounwind readonly }
attributes #35 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #36 = { nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #37 = { noinline nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #38 = { argmemonly nofree nounwind readonly willreturn }
attributes #39 = { nounwind }
attributes #40 = { nounwind readonly willreturn }
attributes #41 = { nounwind allocsize(2) }
attributes #42 = { cold nounwind }
attributes #43 = { cold }
attributes #44 = { nounwind allocsize(0) }
attributes #45 = { nounwind readnone }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{i64 2149334043}
!10 = !{i64 2149257980}
!11 = !{i64 2149458938}
!12 = !{i64 2149454762}
!13 = !{i64 2149454837, i64 2149454864, i64 2149454911, i64 2149454933, i64 2149454961, i64 2149454981}
!14 = !{i64 2149481941}
!15 = !{!"branch_weights", i32 1, i32 2000}
!16 = !{i64 2149232739}
!17 = !{i64 849562, i64 849623}
!18 = !{i64 856667}
!19 = !{i64 852579}
!20 = !{i64 2149232956}
!21 = !{!"auto-init"}
!22 = !{!"branch_weights", i32 2000, i32 1}
!23 = !{i64 2149466015}
!24 = !{i64 1969229}
!25 = !{i64 2149503984}
!26 = !{i64 2159968555}
!27 = !{i64 2159998013}
!28 = !{i8 0, i8 2}
!29 = !{i64 820815, i64 2148322381, i64 2148322407, i64 2148322454, i64 2148322476, i64 2148322504, i64 2148322524}
!30 = !{i64 2148385643, i64 2148385669, i64 2148385698, i64 2148385732, i64 2148385763, i64 2148385786}
!31 = !{i64 2148388000, i64 2148388026, i64 2148388055, i64 2148388089, i64 2148388120, i64 2148388143}
!32 = !{i64 2159121967}
!33 = !{i64 2159122101}
!34 = !{i64 2160391062}
!35 = !{i64 2160391230}
!36 = !{i64 2160391325}
!37 = !{i64 2160391489}
!38 = !{i64 2148387101, i64 2148387133, i64 2148387162, i64 2148387196, i64 2148387227, i64 2148387250}
!39 = !{i64 2160189359}
!40 = !{i64 2160241771}
!41 = !{i64 2148487323}
!42 = !{i64 2148389458, i64 2148389490, i64 2148389519, i64 2148389553, i64 2148389584, i64 2148389607}
!43 = !{i64 2149532853}
!44 = !{i64 852294}
!45 = !{i64 2160261452, i64 2160261932, i64 2160261489, i64 2160261545, i64 2160261579, i64 2160261603, i64 2160261644, i64 2160261665, i64 2160261693, i64 2160261727}
!46 = !{i64 2160262518, i64 2160262998, i64 2160262555, i64 2160262611, i64 2160262645, i64 2160262669, i64 2160262710, i64 2160262731, i64 2160262759, i64 2160262793}
!47 = !{i64 5957815}
!48 = !{!"branch_weights", i32 1, i32 4001}
!49 = !{i64 2159036964}
!50 = !{i64 2159037128}
!51 = !{i64 2159053936}
!52 = !{i64 2159054114}
!53 = !{i64 2153729007, i64 2153729495, i64 2153729044, i64 2153729100, i64 2153729134, i64 2153729158, i64 2153729199, i64 2153729220, i64 2153729248, i64 2153729282}
!54 = !{i64 2148385150}
!55 = !{i64 807384, i64 807409, i64 807431, i64 807447, i64 807459, i64 807479, i64 807503, i64 807519, i64 807531}
!56 = !{i64 2148385276}
!57 = !{i64 2159223854}
!58 = !{i64 2159224006}
!59 = !{i64 2160392584}
!60 = !{i64 2160397813}
!61 = !{i64 2159311428}
!62 = !{i64 2159311578}
!63 = !{i64 2149046319}
!64 = !{i64 2159086556}
!65 = !{i64 2159086700}
!66 = !{i64 2155804591}
!67 = !{i64 2155804884}
!68 = !{i64 2149878300}
!69 = !{i64 2149878601}
!70 = !{i64 2159465985}
!71 = !{i64 2159466153}
!72 = !{i64 2156015519}
!73 = !{i64 2156015683}
!74 = !{i64 2159207966}
!75 = !{i64 2159208112}
!76 = !{i32 0, i32 2}
!77 = !{i64 2159295920}
!78 = !{i64 2159296064}
!79 = !{i64 2160417514}
!80 = !{i64 2160425386}
!81 = !{i64 2159174644}
!82 = !{i64 2159174808}
!83 = !{i64 2159275979}
!84 = !{i64 2159276141}
!85 = !{i64 2159191436}
!86 = !{i64 2159191610}
!87 = !{i64 2159327516}
!88 = !{i64 2159327688}
!89 = !{i64 2160590595}
!90 = !{i64 895631, i64 895652, i64 895675, i64 895694, i64 895713}
!91 = !{i64 2160590974}
!92 = !{i64 2160610096}
!93 = !{i64 2160610475}
!94 = !{i64 2160639666}
!95 = !{i64 2160643778}
!96 = !{i64 2160644211}
!97 = !{i64 2158985961}
!98 = !{i64 2158986127}
!99 = !{i64 2160652979}
!100 = !{i64 2160653305}
!101 = !{i64 2160653147}
!102 = !{i64 2160653373}
!103 = !{i64 2160660155}
!104 = !{i64 2160675457}
!105 = !{i64 2160675836}
!106 = !{i64 2160680179, i64 2160680659, i64 2160680216, i64 2160680272, i64 2160680306, i64 2160680330, i64 2160680371, i64 2160680392, i64 2160680420, i64 2160680454}
!107 = !{i64 2160681770}
!108 = !{i64 2160682149}
!109 = !{i64 2161019871, i64 2161020351, i64 2161019908, i64 2161019964, i64 2161019998, i64 2161020022, i64 2161020063, i64 2161020084, i64 2161020112, i64 2161020146}
!110 = !{i64 2161022313, i64 2161022793, i64 2161022350, i64 2161022406, i64 2161022440, i64 2161022464, i64 2161022505, i64 2161022526, i64 2161022554, i64 2161022588}
!111 = !{i64 2161044594, i64 2161045074, i64 2161044631, i64 2161044687, i64 2161044721, i64 2161044745, i64 2161044786, i64 2161044807, i64 2161044835, i64 2161044869}
!112 = !{i64 2161045630, i64 2161046110, i64 2161045667, i64 2161045723, i64 2161045757, i64 2161045781, i64 2161045822, i64 2161045843, i64 2161045871, i64 2161045905}
!113 = !{i64 2161046676, i64 2161047156, i64 2161046713, i64 2161046769, i64 2161046803, i64 2161046827, i64 2161046868, i64 2161046889, i64 2161046917, i64 2161046951}
!114 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!115 = !{i64 2161083141, i64 2161083622, i64 2161083178, i64 2161083234, i64 2161083268, i64 2161083292, i64 2161083333, i64 2161083354, i64 2161083382, i64 2161083416}
!116 = !{i64 2154043348}
!117 = !{i64 2154043190}
!118 = !{i64 2154043492}
!119 = !{i64 2149878001}
!120 = !{i64 2161067837, i64 2161068318, i64 2161067874, i64 2161067930, i64 2161067964, i64 2161067988, i64 2161068029, i64 2161068050, i64 2161068078, i64 2161068112}
!121 = !{i64 2161089505, i64 2161089986, i64 2161089542, i64 2161089598, i64 2161089632, i64 2161089656, i64 2161089697, i64 2161089718, i64 2161089746, i64 2161089780}
!122 = !{i64 2161098117, i64 2161098598, i64 2161098154, i64 2161098210, i64 2161098244, i64 2161098268, i64 2161098309, i64 2161098330, i64 2161098358, i64 2161098392}
!123 = !{i64 849997}
!124 = !{i64 849807}
!125 = !{i64 2161172941, i64 2161173422, i64 2161172978, i64 2161173034, i64 2161173068, i64 2161173092, i64 2161173133, i64 2161173154, i64 2161173182, i64 2161173216}
!126 = !{i64 2159106355}
!127 = !{i64 2159106507}
!128 = !{i64 2160526258, i64 2160526738, i64 2160526295, i64 2160526351, i64 2160526385, i64 2160526409, i64 2160526450, i64 2160526471, i64 2160526499, i64 2160526533}
!129 = !{i64 2160694507}
!130 = !{i64 2160700410}
!131 = distinct !{null, ptr @__netdev_update_lower_level}
!132 = !{i64 2160549091}
!133 = !{i64 2159389426}
!134 = !{i64 2159389566}
!135 = !{i64 2160402628}
!136 = !{i64 2161156752, i64 2161157233, i64 2161156789, i64 2161156845, i64 2161156879, i64 2161156903, i64 2161156944, i64 2161156965, i64 2161156993, i64 2161157027}
!137 = !{i64 2159369833}
!138 = !{i64 2159370005}
