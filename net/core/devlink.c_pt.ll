; ModuleID = '/llk/IR/net/core/devlink.c_pt.bc'
source_filename = "../net/core/devlink.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_priv:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_priv\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_priv:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_priv_to_devlink:\09\09\09\09\09"
module asm "\09.asciz \09\22priv_to_devlink\22\09\09\09\09\09"
module asm "__kstrtabns_priv_to_devlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_to_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_to_dev\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_to_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_header_ethernet:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_header_ethernet\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_header_ethernet:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_header_ipv4:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_header_ipv4\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_header_ipv4:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_header_ipv6:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_header_ipv6\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_header_ipv6:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_devlink_hwmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_devlink_hwmsg\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_devlink_hwmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_devlink_hwmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_devlink_hwmsg\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_devlink_hwmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_devlink_hwmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_devlink_hwmsg\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_devlink_hwmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_devlink_hwerr:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_devlink_hwerr\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_devlink_hwerr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_devlink_hwerr:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_devlink_hwerr\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_devlink_hwerr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_devlink_hwerr:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_devlink_hwerr\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_devlink_hwerr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_devlink_trap_report\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_devlink_trap_report\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_devlink_trap_report\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_net:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_net\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_match_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_match_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_match_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_action_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_action_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_action_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_entry_ctx_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_entry_ctx_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_entry_ctx_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_entry_ctx_append:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_entry_ctx_append\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_entry_ctx_append:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_entry_ctx_close:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_entry_ctx_close\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_entry_ctx_close:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_entry_clear:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_entry_clear\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_entry_clear:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_is_reload_failed:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_is_reload_failed\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_is_reload_failed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_remote_reload_actions_performed:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_remote_reload_actions_performed\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_remote_reload_actions_performed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_flash_update_status_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_flash_update_status_notify\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_flash_update_status_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_flash_update_timeout_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_flash_update_timeout_notify\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_flash_update_timeout_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_info_driver_name_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_info_driver_name_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_info_driver_name_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_info_serial_number_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_info_serial_number_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_info_serial_number_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_info_board_serial_number_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_info_board_serial_number_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_info_board_serial_number_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_info_version_fixed_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_info_version_fixed_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_info_version_fixed_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_info_version_stored_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_info_version_stored_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_info_version_stored_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_info_version_running_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_info_version_running_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_info_version_running_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_obj_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_obj_nest_start\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_obj_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_obj_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_obj_nest_end\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_obj_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_pair_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_pair_nest_start\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_pair_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_pair_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_pair_nest_end\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_pair_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_arr_pair_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_arr_pair_nest_start\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_arr_pair_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_arr_pair_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_arr_pair_nest_end\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_arr_pair_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_binary_pair_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_binary_pair_nest_start\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_binary_pair_nest_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_binary_pair_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_binary_pair_nest_end\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_binary_pair_nest_end:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_u32_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_u32_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_u32_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_string_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_string_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_string_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_binary_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_binary_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_binary_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_bool_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_bool_pair_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_bool_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_u8_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_u8_pair_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_u8_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_u32_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_u32_pair_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_u32_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_u64_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_u64_pair_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_u64_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_string_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_string_pair_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_string_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_fmsg_binary_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_fmsg_binary_pair_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_fmsg_binary_pair_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_health_reporter_priv:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_health_reporter_priv\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_health_reporter_priv:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_health_reporter_create:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_health_reporter_create\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_health_reporter_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_health_reporter_create:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_health_reporter_create\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_health_reporter_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_health_reporter_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_health_reporter_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_health_reporter_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_health_reporter_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_health_reporter_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_health_reporter_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_health_reporter_recovery_done:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_health_reporter_recovery_done\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_health_reporter_recovery_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_health_report:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_health_report\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_health_report:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_health_reporter_state_update:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_health_reporter_state_update\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_health_reporter_state_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_set_features:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_set_features\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_set_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_alloc_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_alloc_ns\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_alloc_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_free:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_free\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_type_eth_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_type_eth_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_type_eth_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_type_ib_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_type_ib_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_type_ib_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_type_clear:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_type_clear\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_type_clear:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_attrs_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_attrs_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_attrs_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_attrs_pci_pf_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_attrs_pci_pf_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_attrs_pci_pf_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_attrs_pci_vf_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_attrs_pci_vf_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_attrs_pci_vf_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_attrs_pci_sf_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_attrs_pci_sf_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_attrs_pci_sf_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_rate_leaf_create:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_rate_leaf_create\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_rate_leaf_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_rate_leaf_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_rate_leaf_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_rate_leaf_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_rate_nodes_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_rate_nodes_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_rate_nodes_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_sb_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_sb_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_sb_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_sb_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_sb_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_sb_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_headers_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_headers_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_headers_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_headers_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_headers_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_headers_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_table_counter_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_table_counter_enabled\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_table_counter_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_table_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_table_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_table_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_table_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_table_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_table_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_resource_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_resource_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_resource_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_resources_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_resources_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_resources_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_resource_size_get:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_resource_size_get\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_resource_size_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_dpipe_table_resource_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_dpipe_table_resource_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_dpipe_table_resource_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_resource_occ_get_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_resource_occ_get_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_resource_occ_get_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_resource_occ_get_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_resource_occ_get_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_resource_occ_get_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_params_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_params_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_params_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_params_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_params_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_params_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_param_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_param_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_param_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_param_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_param_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_param_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_param_driverinit_value_get:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_param_driverinit_value_get\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_param_driverinit_value_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_param_driverinit_value_set:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_param_driverinit_value_set\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_param_driverinit_value_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_param_value_changed:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_param_value_changed\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_param_value_changed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_region_create:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_region_create\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_region_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_port_region_create:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_port_region_create\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_port_region_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_region_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_region_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_region_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_region_snapshot_id_get:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_region_snapshot_id_get\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_region_snapshot_id_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_region_snapshot_id_put:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_region_snapshot_id_put\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_region_snapshot_id_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_region_snapshot_create:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_region_snapshot_create\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_region_snapshot_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_traps_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_traps_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_traps_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_traps_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_traps_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_traps_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_trap_report\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_trap_report:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_trap_ctx_priv:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_trap_ctx_priv\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_trap_ctx_priv:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_trap_groups_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_trap_groups_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_trap_groups_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_trap_groups_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_trap_groups_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_trap_groups_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_trap_policers_register:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_trap_policers_register\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_trap_policers_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devlink_trap_policers_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22devlink_trap_policers_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_devlink_trap_policers_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.162 }
%union.anon.162 = type { %struct.anon.163 }
%struct.anon.163 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.164, %struct.trace_event, ptr, ptr, %union.anon.165, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.164 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.165 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.devlink_dpipe_field = type { ptr, i32, i32, i32 }
%struct.devlink_dpipe_header = type { ptr, i32, ptr, i32, i8 }
%struct.genl_family = type { i32, i32, [16 x i8], i32, i32, i32, i8, i8, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.7 }
%union.anon.7 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.8 }
%union.anon.8 = type { i32 }
%struct.lock_class_key = type {}
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [40 x i8], %struct.netns_ipv4, %struct.netns_ipv6, ptr, %struct.netns_bpf, [28 x i8], %struct.netns_xfrm, i64, %struct.netns_can, ptr, ptr, [32 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type {}
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.36, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [40 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [60 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.60, ptr, [60 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [32 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.60 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [36 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex, [28 x i8] }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.cpumask = type { [1 x i32] }
%struct.genl_small_ops = type { ptr, ptr, i8, i8, i8, i8 }
%struct.genl_multicast_group = type { [16 x i8], i8 }
%struct.anon.10 = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.9 }
%union.anon.9 = type { i32 }
%struct.devlink_param = type { i32, ptr, i8, i32, i32, ptr, ptr, ptr }
%struct.devlink_trap = type { i32, i32, i8, i16, ptr, i16, i32 }
%struct.devlink_trap_group = type { ptr, i16, i8, i32 }
%struct.pernet_operations = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.devlink = type { i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, ptr, %struct.list_head, %struct.list_head, %struct.list_head, ptr, i64, %struct.xarray, %struct.devlink_dev_stats, ptr, %struct.possible_net_t, %struct.mutex, i8, %struct.refcount_struct, %struct.completion, [20 x i8], [0 x i8] }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.possible_net_t = type {}
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.trace_event_raw_devlink_hwmsg = type { %struct.trace_entry, i32, i32, i32, i8, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.trace_event_raw_devlink_hwerr = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_data_offsets_devlink_health_report = type { i32, i32, i32, i32, i32 }
%struct.trace_event_raw_devlink_health_report = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_devlink_health_recover_aborted = type { %struct.trace_entry, i32, i32, i32, i32, i8, i64, [0 x i8] }
%struct.trace_event_raw_devlink_health_reporter_state_update = type { %struct.trace_entry, i32, i32, i32, i32, i8, [0 x i8] }
%struct.trace_event_data_offsets_devlink_trap_report = type { i32, i32, i32, i32, i32, i32 }
%struct.trace_event_raw_devlink_trap_report = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.devlink_trap_metadata = type { ptr, ptr, ptr, %struct.netdevice_tracker, ptr, i32 }
%struct.netdevice_tracker = type {}
%struct.devlink_dpipe_match = type { i32, i32, ptr, i32 }
%struct.sk_buff = type { %union.anon, %union.anon.121, %union.anon.122, [48 x i8], %union.anon.123, i32, i32, i16, i16, i16, [0 x i8], i8, i8, %union.anon.125, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon = type { %struct.anon }
%struct.anon = type { ptr, ptr, %union.anon.0 }
%union.anon.0 = type { ptr }
%union.anon.121 = type { ptr }
%union.anon.122 = type { i64 }
%union.anon.123 = type { %struct.anon.124 }
%struct.anon.124 = type { i32, ptr }
%union.anon.125 = type { %struct.anon.126 }
%struct.anon.126 = type { [0 x i8], i16, [0 x i8], i16, %union.anon.127, i32, i32, i32, i16, i16, %union.anon.129, %union.anon.130, %union.anon.131, i16, i16, i16, i16, i16, i16, i16 }
%union.anon.127 = type { i32 }
%union.anon.129 = type { i32 }
%union.anon.130 = type { i32 }
%union.anon.131 = type { i16 }
%struct.devlink_dpipe_action = type { i32, i32, ptr, i32 }
%struct.devlink_dpipe_dump_ctx = type { ptr, i32, ptr, ptr, ptr }
%struct.genl_info = type { i32, i32, ptr, ptr, ptr, ptr, %struct.possible_net_t, [2 x ptr], ptr }
%struct.devlink_dpipe_entry = type { i64, ptr, i32, ptr, i32, i64, i8 }
%struct.devlink_dpipe_value = type { %union.anon.166, i32, i8, i32, ptr, ptr }
%union.anon.166 = type { ptr }
%struct.devlink_flash_notify = type { ptr, ptr, i32, i32, i32 }
%struct.devlink_fmsg = type { %struct.list_head, i8 }
%struct.devlink_fmsg_item = type { %struct.list_head, i32, i8, i16, [0 x i32] }
%struct.devlink_health_reporter = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.mutex, i64, i8, i8, i8, i64, i64, i64, i64, i64, %struct.refcount_struct }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, %struct.spinlock, i32, i32, ptr, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex, ptr }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.109 }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%union.anon.109 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.devlink_health_reporter_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.devlink_ops = type { i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.1, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [8 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, %struct.possible_net_t, ptr, i32, %union.anon.120, %struct.device, [4 x ptr], ptr, ptr, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], %struct.netdevice_tracker, %struct.netdevice_tracker, [48 x i8] }
%struct.anon.1 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%union.anon.120 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.devlink_port_pci_sf_attrs = type { i32, i32, i16, i8 }
%struct.devlink_rate = type { %struct.list_head, i32, ptr, ptr, i64, i64, ptr, %union.anon.110 }
%union.anon.110 = type { %struct.anon.111 }
%struct.anon.111 = type { ptr, %struct.refcount_struct }
%struct.devlink_sb = type { %struct.list_head, i32, i32, i16, i16, i16, i16 }
%struct.devlink_dpipe_table_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.devlink_dpipe_table = type { ptr, %struct.list_head, ptr, i8, i8, i8, i64, i64, ptr, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.devlink_resource = type { ptr, i64, i64, i64, i8, ptr, %struct.devlink_resource_size_params, %struct.list_head, %struct.list_head, ptr, ptr }
%struct.devlink_resource_size_params = type { i64, i64, i64, i32 }
%struct.devlink_param_item = type { %struct.list_head, ptr, %union.devlink_param_value, i8 }
%union.devlink_param_value = type { i32, [28 x i8] }
%struct.devlink_region_ops = type { ptr, ptr, ptr, ptr }
%struct.devlink_region = type { ptr, ptr, %struct.list_head, %union.anon.190, %struct.list_head, i32, i32, i64 }
%union.anon.190 = type { ptr }
%struct.devlink_port_region_ops = type { ptr, ptr, ptr, ptr }
%struct.devlink_snapshot = type { %struct.list_head, ptr, ptr, i32 }
%struct.devlink_trap_item = type { ptr, ptr, %struct.list_head, i32, ptr, ptr }
%struct.devlink_stats = type { i64, i64, %struct.u64_stats_sync }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.devlink_trap_group_item = type { ptr, ptr, %struct.list_head, ptr }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.devlink_trap_policer_item = type { ptr, i64, i64, %struct.list_head }
%struct.devlink_info_req = type { ptr }
%struct.nlattr = type { i16, i16 }
%struct.devlink_flash_update_params = type { ptr, ptr, i32 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, [1 x %struct.cpumask], i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.genl_ops = type { ptr, ptr, ptr, ptr, ptr, i32, i8, i8, i8, i8 }
%struct.netlink_callback = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, i32, i32, i8, %union.anon.104 }
%union.anon.104 = type { [6 x i32], [24 x i8] }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.netlink_ext_ack = type { ptr, ptr, ptr, [20 x i8], i8 }
%struct.devlink_port_new_attrs = type { i32, i32, i32, i32, i16, i8 }
%struct.devlink_dpipe_headers = type { ptr, i32 }
%struct.nla_bitfield32 = type { i32, i32 }
%struct.genl_dumpit_info = type { ptr, %struct.genl_ops, ptr }
%struct.ib_device = type { ptr, %struct.ib_device_ops, [64 x i8], %struct.callback_head, %struct.list_head, %struct.rw_semaphore, %struct.spinlock, %struct.rw_semaphore, %struct.xarray, %struct.mutex, %struct.rwlock_t, ptr, i32, %union.anon.189, [4 x ptr], i64, [64 x i8], i64, i32, i8, i8, i32, %struct.ib_device_attr, ptr, i32, %struct.spinlock, [3 x %struct.list_head], ptr, ptr, %struct.refcount_struct, %struct.completion, %struct.work_struct, ptr, %struct.mutex, %struct.xarray, [16 x i8], i32, i32 }
%struct.ib_device_ops = type { ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.189 = type { %struct.ib_core_device }
%struct.ib_core_device = type { %struct.device, %struct.possible_net_t, ptr, %struct.list_head, ptr }
%struct.ib_device_attr = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, i32, i32, %struct.ib_odp_caps, i64, i64, %struct.ib_rss_caps, i32, i32, %struct.ib_tm_caps, %struct.ib_cq_caps, i64, i32 }
%struct.ib_odp_caps = type { i64, %struct.anon.180 }
%struct.anon.180 = type { i32, i32, i32, i32 }
%struct.ib_rss_caps = type { i32, i32, i32 }
%struct.ib_tm_caps = type { i32, i32, i32, i32, i32 }
%struct.ib_cq_caps = type { i16, i16 }
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_param_gset_ctx = type { %union.devlink_param_value, i32 }

@__tpstrtab_devlink_hwmsg = internal constant [14 x i8] c"devlink_hwmsg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_devlink_hwmsg = dso_local global %struct.static_call_key { ptr @__traceiter_devlink_hwmsg }, align 4
@__tracepoint_devlink_hwmsg = dso_local global %struct.tracepoint { ptr @__tpstrtab_devlink_hwmsg, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_devlink_hwmsg, ptr null, ptr @__traceiter_devlink_hwmsg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_devlink_hwmsg = internal constant ptr @__tracepoint_devlink_hwmsg, section "__tracepoints_ptrs", align 4
@__tpstrtab_devlink_hwerr = internal constant [14 x i8] c"devlink_hwerr\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_devlink_hwerr = dso_local global %struct.static_call_key { ptr @__traceiter_devlink_hwerr }, align 4
@__tracepoint_devlink_hwerr = dso_local global %struct.tracepoint { ptr @__tpstrtab_devlink_hwerr, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_devlink_hwerr, ptr null, ptr @__traceiter_devlink_hwerr, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_devlink_hwerr = internal constant ptr @__tracepoint_devlink_hwerr, section "__tracepoints_ptrs", align 4
@__tpstrtab_devlink_health_report = internal constant [22 x i8] c"devlink_health_report\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_devlink_health_report = dso_local global %struct.static_call_key { ptr @__traceiter_devlink_health_report }, align 4
@__tracepoint_devlink_health_report = dso_local global %struct.tracepoint { ptr @__tpstrtab_devlink_health_report, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_devlink_health_report, ptr null, ptr @__traceiter_devlink_health_report, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_devlink_health_report = internal constant ptr @__tracepoint_devlink_health_report, section "__tracepoints_ptrs", align 4
@__tpstrtab_devlink_health_recover_aborted = internal constant [31 x i8] c"devlink_health_recover_aborted\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_devlink_health_recover_aborted = dso_local global %struct.static_call_key { ptr @__traceiter_devlink_health_recover_aborted }, align 4
@__tracepoint_devlink_health_recover_aborted = dso_local global %struct.tracepoint { ptr @__tpstrtab_devlink_health_recover_aborted, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_devlink_health_recover_aborted, ptr null, ptr @__traceiter_devlink_health_recover_aborted, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_devlink_health_recover_aborted = internal constant ptr @__tracepoint_devlink_health_recover_aborted, section "__tracepoints_ptrs", align 4
@__tpstrtab_devlink_health_reporter_state_update = internal constant [37 x i8] c"devlink_health_reporter_state_update\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_devlink_health_reporter_state_update = dso_local global %struct.static_call_key { ptr @__traceiter_devlink_health_reporter_state_update }, align 4
@__tracepoint_devlink_health_reporter_state_update = dso_local global %struct.tracepoint { ptr @__tpstrtab_devlink_health_reporter_state_update, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_devlink_health_reporter_state_update, ptr null, ptr @__traceiter_devlink_health_reporter_state_update, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_devlink_health_reporter_state_update = internal constant ptr @__tracepoint_devlink_health_reporter_state_update, section "__tracepoints_ptrs", align 4
@__tpstrtab_devlink_trap_report = internal constant [20 x i8] c"devlink_trap_report\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_devlink_trap_report = dso_local global %struct.static_call_key { ptr @__traceiter_devlink_trap_report }, align 4
@__tracepoint_devlink_trap_report = dso_local global %struct.tracepoint { ptr @__tpstrtab_devlink_trap_report, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_devlink_trap_report, ptr null, ptr @__traceiter_devlink_trap_report, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_devlink_trap_report = internal constant ptr @__tracepoint_devlink_trap_report, section "__tracepoints_ptrs", align 4
@str__devlink__trace_system_name = internal constant [8 x i8] c"devlink\00", align 1
@trace_event_fields_devlink_hwmsg = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.12, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.13, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.14, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.15, %union.anon.162 { %struct.anon.163 { ptr @.str.16, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.17, %union.anon.162 { %struct.anon.163 { ptr @.str.18, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.19, %union.anon.162 { %struct.anon.163 { ptr @.str.20, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.21, %union.anon.162 { %struct.anon.163 { ptr @.str.22, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_devlink_hwmsg = internal global %struct.trace_event_class { ptr @str__devlink__trace_system_name, ptr @trace_event_raw_event_devlink_hwmsg, ptr @perf_trace_devlink_hwmsg, ptr @trace_event_reg, ptr @trace_event_fields_devlink_hwmsg, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_devlink_hwmsg, i64 24), ptr getelementptr (i8, ptr @event_class_devlink_hwmsg, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_devlink_hwmsg = internal global %struct.trace_event_functions { ptr @trace_raw_output_devlink_hwmsg, ptr null, ptr null, ptr null }, align 4
@print_fmt_devlink_hwmsg = internal global [228 x i8] c"\22bus_name=%s dev_name=%s driver_name=%s incoming=%d type=%lu buf=0x[%*phD] len=%zu\22, __get_str(bus_name), __get_str(dev_name), __get_str(driver_name), REC->incoming, REC->type, (int) REC->len, __get_dynamic_array(buf), REC->len\00", align 1
@event_devlink_hwmsg = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_devlink_hwmsg, %union.anon.164 { ptr @__tracepoint_devlink_hwmsg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_devlink_hwmsg }, ptr @print_fmt_devlink_hwmsg, ptr null, %union.anon.165 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_devlink_hwmsg = internal global ptr @event_devlink_hwmsg, section "_ftrace_events", align 4
@trace_event_fields_devlink_hwerr = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.12, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.13, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.14, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.162 { %struct.anon.163 { ptr @.str.25, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.26, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_devlink_hwerr = internal global %struct.trace_event_class { ptr @str__devlink__trace_system_name, ptr @trace_event_raw_event_devlink_hwerr, ptr @perf_trace_devlink_hwerr, ptr @trace_event_reg, ptr @trace_event_fields_devlink_hwerr, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_devlink_hwerr, i64 24), ptr getelementptr (i8, ptr @event_class_devlink_hwerr, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_devlink_hwerr = internal global %struct.trace_event_functions { ptr @trace_raw_output_devlink_hwerr, ptr null, ptr null, ptr null }, align 4
@print_fmt_devlink_hwerr = internal global [143 x i8] c"\22bus_name=%s dev_name=%s driver_name=%s err=%d %s\22, __get_str(bus_name), __get_str(dev_name), __get_str(driver_name), REC->err, __get_str(msg)\00", align 1
@event_devlink_hwerr = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_devlink_hwerr, %union.anon.164 { ptr @__tracepoint_devlink_hwerr }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_devlink_hwerr }, ptr @print_fmt_devlink_hwerr, ptr null, %union.anon.165 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_devlink_hwerr = internal global ptr @event_devlink_hwerr, section "_ftrace_events", align 4
@trace_event_fields_devlink_health_report = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.12, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.13, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.14, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.28, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.26, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_devlink_health_report = internal global %struct.trace_event_class { ptr @str__devlink__trace_system_name, ptr @trace_event_raw_event_devlink_health_report, ptr @perf_trace_devlink_health_report, ptr @trace_event_reg, ptr @trace_event_fields_devlink_health_report, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_devlink_health_report, i64 24), ptr getelementptr (i8, ptr @event_class_devlink_health_report, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_devlink_health_report = internal global %struct.trace_event_functions { ptr @trace_raw_output_devlink_health_report, ptr null, ptr null, ptr null }, align 4
@print_fmt_devlink_health_report = internal global [170 x i8] c"\22bus_name=%s dev_name=%s driver_name=%s reporter_name=%s: %s\22, __get_str(bus_name), __get_str(dev_name), __get_str(driver_name), __get_str(reporter_name), __get_str(msg)\00", align 1
@event_devlink_health_report = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_devlink_health_report, %union.anon.164 { ptr @__tracepoint_devlink_health_report }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_devlink_health_report }, ptr @print_fmt_devlink_health_report, ptr null, %union.anon.165 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_devlink_health_report = internal global ptr @event_devlink_health_report, section "_ftrace_events", align 4
@trace_event_fields_devlink_health_recover_aborted = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.12, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.13, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.14, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.28, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.15, %union.anon.162 { %struct.anon.163 { ptr @.str.30, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.162 { %struct.anon.163 { ptr @.str.32, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_devlink_health_recover_aborted = internal global %struct.trace_event_class { ptr @str__devlink__trace_system_name, ptr @trace_event_raw_event_devlink_health_recover_aborted, ptr @perf_trace_devlink_health_recover_aborted, ptr @trace_event_reg, ptr @trace_event_fields_devlink_health_recover_aborted, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_devlink_health_recover_aborted, i64 24), ptr getelementptr (i8, ptr @event_class_devlink_health_recover_aborted, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_devlink_health_recover_aborted = internal global %struct.trace_event_functions { ptr @trace_raw_output_devlink_health_recover_aborted, ptr null, ptr null, ptr null }, align 4
@print_fmt_devlink_health_recover_aborted = internal global [261 x i8] c"\22bus_name=%s dev_name=%s driver_name=%s reporter_name=%s: health_state=%d time_since_last_recover=%llu recover aborted\22, __get_str(bus_name), __get_str(dev_name), __get_str(driver_name), __get_str(reporter_name), REC->health_state, REC->time_since_last_recover\00", align 1
@event_devlink_health_recover_aborted = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_devlink_health_recover_aborted, %union.anon.164 { ptr @__tracepoint_devlink_health_recover_aborted }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_devlink_health_recover_aborted }, ptr @print_fmt_devlink_health_recover_aborted, ptr null, %union.anon.165 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_devlink_health_recover_aborted = internal global ptr @event_devlink_health_recover_aborted, section "_ftrace_events", align 4
@trace_event_fields_devlink_health_reporter_state_update = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.12, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.13, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.14, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.28, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.162 { %struct.anon.163 { ptr @.str.35, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_devlink_health_reporter_state_update = internal global %struct.trace_event_class { ptr @str__devlink__trace_system_name, ptr @trace_event_raw_event_devlink_health_reporter_state_update, ptr @perf_trace_devlink_health_reporter_state_update, ptr @trace_event_reg, ptr @trace_event_fields_devlink_health_reporter_state_update, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_devlink_health_reporter_state_update, i64 24), ptr getelementptr (i8, ptr @event_class_devlink_health_reporter_state_update, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_devlink_health_reporter_state_update = internal global %struct.trace_event_functions { ptr @trace_raw_output_devlink_health_reporter_state_update, ptr null, ptr null, ptr null }, align 4
@print_fmt_devlink_health_reporter_state_update = internal global [180 x i8] c"\22bus_name=%s dev_name=%s driver_name=%s reporter_name=%s: new_state=%d\22, __get_str(bus_name), __get_str(dev_name), __get_str(driver_name), __get_str(reporter_name), REC->new_state\00", align 1
@event_devlink_health_reporter_state_update = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_devlink_health_reporter_state_update, %union.anon.164 { ptr @__tracepoint_devlink_health_reporter_state_update }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_devlink_health_reporter_state_update }, ptr @print_fmt_devlink_health_reporter_state_update, ptr null, %union.anon.165 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_devlink_health_reporter_state_update = internal global ptr @event_devlink_health_reporter_state_update, section "_ftrace_events", align 4
@trace_event_fields_devlink_trap_report = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.12, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.13, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.14, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.38, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.11, %union.anon.162 { %struct.anon.163 { ptr @.str.40, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_devlink_trap_report = internal global %struct.trace_event_class { ptr @str__devlink__trace_system_name, ptr @trace_event_raw_event_devlink_trap_report, ptr @perf_trace_devlink_trap_report, ptr @trace_event_reg, ptr @trace_event_fields_devlink_trap_report, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_devlink_trap_report, i64 24), ptr getelementptr (i8, ptr @event_class_devlink_trap_report, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_devlink_trap_report = internal global %struct.trace_event_functions { ptr @trace_raw_output_devlink_trap_report, ptr null, ptr null, ptr null }, align 4
@print_fmt_devlink_trap_report = internal global [234 x i8] c"\22bus_name=%s dev_name=%s driver_name=%s trap_name=%s trap_group_name=%s input_dev_name=%s\22, __get_str(bus_name), __get_str(dev_name), __get_str(driver_name), __get_str(trap_name), __get_str(trap_group_name), __get_str(input_dev_name)\00", align 1
@event_devlink_trap_report = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_devlink_trap_report, %union.anon.164 { ptr @__tracepoint_devlink_trap_report }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_devlink_trap_report }, ptr @print_fmt_devlink_trap_report, ptr null, %union.anon.165 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_devlink_trap_report = internal global ptr @event_devlink_trap_report, section "_ftrace_events", align 4
@__kstrtab_devlink_priv = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_priv = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_priv = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_priv to i32), ptr @__kstrtab_devlink_priv, ptr @__kstrtabns_devlink_priv }, section "___ksymtab_gpl+devlink_priv", align 4
@__kstrtab_priv_to_devlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_priv_to_devlink = external dso_local constant [0 x i8], align 1
@__ksymtab_priv_to_devlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @priv_to_devlink to i32), ptr @__kstrtab_priv_to_devlink, ptr @__kstrtabns_priv_to_devlink }, section "___ksymtab_gpl+priv_to_devlink", align 4
@__kstrtab_devlink_to_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_to_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_to_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_to_dev to i32), ptr @__kstrtab_devlink_to_dev, ptr @__kstrtabns_devlink_to_dev }, section "___ksymtab_gpl+devlink_to_dev", align 4
@.str = private unnamed_addr constant [9 x i8] c"ethernet\00", align 1
@devlink_dpipe_fields_ethernet = internal global [1 x %struct.devlink_dpipe_field] [%struct.devlink_dpipe_field { ptr @.str.42, i32 0, i32 48, i32 0 }], align 4
@devlink_dpipe_header_ethernet = dso_local global %struct.devlink_dpipe_header { ptr @.str, i32 0, ptr @devlink_dpipe_fields_ethernet, i32 1, i8 1 }, align 4
@__kstrtab_devlink_dpipe_header_ethernet = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_header_ethernet = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_header_ethernet = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_header_ethernet to i32), ptr @__kstrtab_devlink_dpipe_header_ethernet, ptr @__kstrtabns_devlink_dpipe_header_ethernet }, section "___ksymtab_gpl+devlink_dpipe_header_ethernet", align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"ipv4\00", align 1
@devlink_dpipe_fields_ipv4 = internal global [1 x %struct.devlink_dpipe_field] [%struct.devlink_dpipe_field { ptr @.str.43, i32 0, i32 32, i32 0 }], align 4
@devlink_dpipe_header_ipv4 = dso_local global %struct.devlink_dpipe_header { ptr @.str.1, i32 1, ptr @devlink_dpipe_fields_ipv4, i32 1, i8 1 }, align 4
@__kstrtab_devlink_dpipe_header_ipv4 = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_header_ipv4 = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_header_ipv4 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_header_ipv4 to i32), ptr @__kstrtab_devlink_dpipe_header_ipv4, ptr @__kstrtabns_devlink_dpipe_header_ipv4 }, section "___ksymtab_gpl+devlink_dpipe_header_ipv4", align 4
@.str.2 = private unnamed_addr constant [5 x i8] c"ipv6\00", align 1
@devlink_dpipe_fields_ipv6 = internal global [1 x %struct.devlink_dpipe_field] [%struct.devlink_dpipe_field { ptr @.str.43, i32 0, i32 128, i32 0 }], align 4
@devlink_dpipe_header_ipv6 = dso_local global %struct.devlink_dpipe_header { ptr @.str.2, i32 2, ptr @devlink_dpipe_fields_ipv6, i32 1, i8 1 }, align 4
@__kstrtab_devlink_dpipe_header_ipv6 = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_header_ipv6 = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_header_ipv6 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_header_ipv6 to i32), ptr @__kstrtab_devlink_dpipe_header_ipv6, ptr @__kstrtabns_devlink_dpipe_header_ipv6 }, section "___ksymtab_gpl+devlink_dpipe_header_ipv6", align 4
@__kstrtab___tracepoint_devlink_hwmsg = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_devlink_hwmsg = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_devlink_hwmsg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_devlink_hwmsg to i32), ptr @__kstrtab___tracepoint_devlink_hwmsg, ptr @__kstrtabns___tracepoint_devlink_hwmsg }, section "___ksymtab_gpl+__tracepoint_devlink_hwmsg", align 4
@__kstrtab___traceiter_devlink_hwmsg = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_devlink_hwmsg = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_devlink_hwmsg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_devlink_hwmsg to i32), ptr @__kstrtab___traceiter_devlink_hwmsg, ptr @__kstrtabns___traceiter_devlink_hwmsg }, section "___ksymtab_gpl+__traceiter_devlink_hwmsg", align 4
@__kstrtab___SCK__tp_func_devlink_hwmsg = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_devlink_hwmsg = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_devlink_hwmsg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_devlink_hwmsg to i32), ptr @__kstrtab___SCK__tp_func_devlink_hwmsg, ptr @__kstrtabns___SCK__tp_func_devlink_hwmsg }, section "___ksymtab_gpl+__SCK__tp_func_devlink_hwmsg", align 4
@__kstrtab___tracepoint_devlink_hwerr = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_devlink_hwerr = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_devlink_hwerr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_devlink_hwerr to i32), ptr @__kstrtab___tracepoint_devlink_hwerr, ptr @__kstrtabns___tracepoint_devlink_hwerr }, section "___ksymtab_gpl+__tracepoint_devlink_hwerr", align 4
@__kstrtab___traceiter_devlink_hwerr = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_devlink_hwerr = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_devlink_hwerr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_devlink_hwerr to i32), ptr @__kstrtab___traceiter_devlink_hwerr, ptr @__kstrtabns___traceiter_devlink_hwerr }, section "___ksymtab_gpl+__traceiter_devlink_hwerr", align 4
@__kstrtab___SCK__tp_func_devlink_hwerr = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_devlink_hwerr = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_devlink_hwerr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_devlink_hwerr to i32), ptr @__kstrtab___SCK__tp_func_devlink_hwerr, ptr @__kstrtabns___SCK__tp_func_devlink_hwerr }, section "___ksymtab_gpl+__SCK__tp_func_devlink_hwerr", align 4
@__kstrtab___tracepoint_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_devlink_trap_report = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_devlink_trap_report to i32), ptr @__kstrtab___tracepoint_devlink_trap_report, ptr @__kstrtabns___tracepoint_devlink_trap_report }, section "___ksymtab_gpl+__tracepoint_devlink_trap_report", align 4
@__kstrtab___traceiter_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_devlink_trap_report = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_devlink_trap_report to i32), ptr @__kstrtab___traceiter_devlink_trap_report, ptr @__kstrtabns___traceiter_devlink_trap_report }, section "___ksymtab_gpl+__traceiter_devlink_trap_report", align 4
@__kstrtab___SCK__tp_func_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_devlink_trap_report = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_devlink_trap_report to i32), ptr @__kstrtab___SCK__tp_func_devlink_trap_report, ptr @__kstrtabns___SCK__tp_func_devlink_trap_report }, section "___ksymtab_gpl+__SCK__tp_func_devlink_trap_report", align 4
@__kstrtab_devlink_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_net = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_net to i32), ptr @__kstrtab_devlink_net, ptr @__kstrtabns_devlink_net }, section "___ksymtab_gpl+devlink_net", align 4
@__kstrtab_devlink_dpipe_match_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_match_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_match_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_match_put to i32), ptr @__kstrtab_devlink_dpipe_match_put, ptr @__kstrtabns_devlink_dpipe_match_put }, section "___ksymtab_gpl+devlink_dpipe_match_put", align 4
@__kstrtab_devlink_dpipe_action_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_action_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_action_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_action_put to i32), ptr @__kstrtab_devlink_dpipe_action_put, ptr @__kstrtabns_devlink_dpipe_action_put }, section "___ksymtab_gpl+devlink_dpipe_action_put", align 4
@devlink_nl_family = internal global %struct.genl_family { i32 0, i32 0, [16 x i8] c"devlink\00\00\00\00\00\00\00\00\00", i32 1, i32 170, i32 0, i8 1, i8 0, i8 52, i8 1, ptr @devlink_nl_policy, ptr @devlink_nl_pre_doit, ptr @devlink_nl_post_doit, ptr null, ptr @devlink_nl_ops, ptr @devlink_nl_mcgrps, ptr null }, section ".data..ro_after_init", align 4
@__kstrtab_devlink_dpipe_entry_ctx_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_entry_ctx_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_entry_ctx_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_entry_ctx_prepare to i32), ptr @__kstrtab_devlink_dpipe_entry_ctx_prepare, ptr @__kstrtabns_devlink_dpipe_entry_ctx_prepare }, section "___ksymtab_gpl+devlink_dpipe_entry_ctx_prepare", align 4
@__kstrtab_devlink_dpipe_entry_ctx_append = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_entry_ctx_append = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_entry_ctx_append = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_entry_ctx_append to i32), ptr @__kstrtab_devlink_dpipe_entry_ctx_append, ptr @__kstrtabns_devlink_dpipe_entry_ctx_append }, section "___ksymtab_gpl+devlink_dpipe_entry_ctx_append", align 4
@__kstrtab_devlink_dpipe_entry_ctx_close = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_entry_ctx_close = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_entry_ctx_close = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_entry_ctx_close to i32), ptr @__kstrtab_devlink_dpipe_entry_ctx_close, ptr @__kstrtabns_devlink_dpipe_entry_ctx_close }, section "___ksymtab_gpl+devlink_dpipe_entry_ctx_close", align 4
@__kstrtab_devlink_dpipe_entry_clear = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_entry_clear = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_entry_clear = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_entry_clear to i32), ptr @__kstrtab_devlink_dpipe_entry_clear, ptr @__kstrtabns_devlink_dpipe_entry_clear }, section "___ksymtab_gpl+devlink_dpipe_entry_clear", align 4
@__kstrtab_devlink_is_reload_failed = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_is_reload_failed = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_is_reload_failed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_is_reload_failed to i32), ptr @__kstrtab_devlink_is_reload_failed, ptr @__kstrtabns_devlink_is_reload_failed }, section "___ksymtab_gpl+devlink_is_reload_failed", align 4
@.str.3 = private unnamed_addr constant [19 x i8] c"net/core/devlink.c\00", align 1
@__kstrtab_devlink_remote_reload_actions_performed = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_remote_reload_actions_performed = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_remote_reload_actions_performed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_remote_reload_actions_performed to i32), ptr @__kstrtab_devlink_remote_reload_actions_performed, ptr @__kstrtabns_devlink_remote_reload_actions_performed }, section "___ksymtab_gpl+devlink_remote_reload_actions_performed", align 4
@__kstrtab_devlink_flash_update_status_notify = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_flash_update_status_notify = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_flash_update_status_notify = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_flash_update_status_notify to i32), ptr @__kstrtab_devlink_flash_update_status_notify, ptr @__kstrtabns_devlink_flash_update_status_notify }, section "___ksymtab_gpl+devlink_flash_update_status_notify", align 4
@__kstrtab_devlink_flash_update_timeout_notify = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_flash_update_timeout_notify = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_flash_update_timeout_notify = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_flash_update_timeout_notify to i32), ptr @__kstrtab_devlink_flash_update_timeout_notify, ptr @__kstrtabns_devlink_flash_update_timeout_notify }, section "___ksymtab_gpl+devlink_flash_update_timeout_notify", align 4
@__kstrtab_devlink_info_driver_name_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_info_driver_name_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_info_driver_name_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_info_driver_name_put to i32), ptr @__kstrtab_devlink_info_driver_name_put, ptr @__kstrtabns_devlink_info_driver_name_put }, section "___ksymtab_gpl+devlink_info_driver_name_put", align 4
@__kstrtab_devlink_info_serial_number_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_info_serial_number_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_info_serial_number_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_info_serial_number_put to i32), ptr @__kstrtab_devlink_info_serial_number_put, ptr @__kstrtabns_devlink_info_serial_number_put }, section "___ksymtab_gpl+devlink_info_serial_number_put", align 4
@__kstrtab_devlink_info_board_serial_number_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_info_board_serial_number_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_info_board_serial_number_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_info_board_serial_number_put to i32), ptr @__kstrtab_devlink_info_board_serial_number_put, ptr @__kstrtabns_devlink_info_board_serial_number_put }, section "___ksymtab_gpl+devlink_info_board_serial_number_put", align 4
@__kstrtab_devlink_info_version_fixed_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_info_version_fixed_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_info_version_fixed_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_info_version_fixed_put to i32), ptr @__kstrtab_devlink_info_version_fixed_put, ptr @__kstrtabns_devlink_info_version_fixed_put }, section "___ksymtab_gpl+devlink_info_version_fixed_put", align 4
@__kstrtab_devlink_info_version_stored_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_info_version_stored_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_info_version_stored_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_info_version_stored_put to i32), ptr @__kstrtab_devlink_info_version_stored_put, ptr @__kstrtabns_devlink_info_version_stored_put }, section "___ksymtab_gpl+devlink_info_version_stored_put", align 4
@__kstrtab_devlink_info_version_running_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_info_version_running_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_info_version_running_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_info_version_running_put to i32), ptr @__kstrtab_devlink_info_version_running_put, ptr @__kstrtabns_devlink_info_version_running_put }, section "___ksymtab_gpl+devlink_info_version_running_put", align 4
@__kstrtab_devlink_fmsg_obj_nest_start = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_obj_nest_start = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_obj_nest_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_obj_nest_start to i32), ptr @__kstrtab_devlink_fmsg_obj_nest_start, ptr @__kstrtabns_devlink_fmsg_obj_nest_start }, section "___ksymtab_gpl+devlink_fmsg_obj_nest_start", align 4
@__kstrtab_devlink_fmsg_obj_nest_end = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_obj_nest_end = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_obj_nest_end = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_obj_nest_end to i32), ptr @__kstrtab_devlink_fmsg_obj_nest_end, ptr @__kstrtabns_devlink_fmsg_obj_nest_end }, section "___ksymtab_gpl+devlink_fmsg_obj_nest_end", align 4
@__kstrtab_devlink_fmsg_pair_nest_start = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_pair_nest_start = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_pair_nest_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_pair_nest_start to i32), ptr @__kstrtab_devlink_fmsg_pair_nest_start, ptr @__kstrtabns_devlink_fmsg_pair_nest_start }, section "___ksymtab_gpl+devlink_fmsg_pair_nest_start", align 4
@__kstrtab_devlink_fmsg_pair_nest_end = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_pair_nest_end = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_pair_nest_end = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_pair_nest_end to i32), ptr @__kstrtab_devlink_fmsg_pair_nest_end, ptr @__kstrtabns_devlink_fmsg_pair_nest_end }, section "___ksymtab_gpl+devlink_fmsg_pair_nest_end", align 4
@__kstrtab_devlink_fmsg_arr_pair_nest_start = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_arr_pair_nest_start = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_arr_pair_nest_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_arr_pair_nest_start to i32), ptr @__kstrtab_devlink_fmsg_arr_pair_nest_start, ptr @__kstrtabns_devlink_fmsg_arr_pair_nest_start }, section "___ksymtab_gpl+devlink_fmsg_arr_pair_nest_start", align 4
@__kstrtab_devlink_fmsg_arr_pair_nest_end = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_arr_pair_nest_end = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_arr_pair_nest_end = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_arr_pair_nest_end to i32), ptr @__kstrtab_devlink_fmsg_arr_pair_nest_end, ptr @__kstrtabns_devlink_fmsg_arr_pair_nest_end }, section "___ksymtab_gpl+devlink_fmsg_arr_pair_nest_end", align 4
@__kstrtab_devlink_fmsg_binary_pair_nest_start = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_binary_pair_nest_start = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_binary_pair_nest_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_binary_pair_nest_start to i32), ptr @__kstrtab_devlink_fmsg_binary_pair_nest_start, ptr @__kstrtabns_devlink_fmsg_binary_pair_nest_start }, section "___ksymtab_gpl+devlink_fmsg_binary_pair_nest_start", align 4
@__kstrtab_devlink_fmsg_binary_pair_nest_end = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_binary_pair_nest_end = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_binary_pair_nest_end = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_binary_pair_nest_end to i32), ptr @__kstrtab_devlink_fmsg_binary_pair_nest_end, ptr @__kstrtabns_devlink_fmsg_binary_pair_nest_end }, section "___ksymtab_gpl+devlink_fmsg_binary_pair_nest_end", align 4
@__kstrtab_devlink_fmsg_u32_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_u32_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_u32_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_u32_put to i32), ptr @__kstrtab_devlink_fmsg_u32_put, ptr @__kstrtabns_devlink_fmsg_u32_put }, section "___ksymtab_gpl+devlink_fmsg_u32_put", align 4
@__kstrtab_devlink_fmsg_string_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_string_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_string_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_string_put to i32), ptr @__kstrtab_devlink_fmsg_string_put, ptr @__kstrtabns_devlink_fmsg_string_put }, section "___ksymtab_gpl+devlink_fmsg_string_put", align 4
@__kstrtab_devlink_fmsg_binary_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_binary_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_binary_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_binary_put to i32), ptr @__kstrtab_devlink_fmsg_binary_put, ptr @__kstrtabns_devlink_fmsg_binary_put }, section "___ksymtab_gpl+devlink_fmsg_binary_put", align 4
@__kstrtab_devlink_fmsg_bool_pair_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_bool_pair_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_bool_pair_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_bool_pair_put to i32), ptr @__kstrtab_devlink_fmsg_bool_pair_put, ptr @__kstrtabns_devlink_fmsg_bool_pair_put }, section "___ksymtab_gpl+devlink_fmsg_bool_pair_put", align 4
@__kstrtab_devlink_fmsg_u8_pair_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_u8_pair_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_u8_pair_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_u8_pair_put to i32), ptr @__kstrtab_devlink_fmsg_u8_pair_put, ptr @__kstrtabns_devlink_fmsg_u8_pair_put }, section "___ksymtab_gpl+devlink_fmsg_u8_pair_put", align 4
@__kstrtab_devlink_fmsg_u32_pair_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_u32_pair_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_u32_pair_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_u32_pair_put to i32), ptr @__kstrtab_devlink_fmsg_u32_pair_put, ptr @__kstrtabns_devlink_fmsg_u32_pair_put }, section "___ksymtab_gpl+devlink_fmsg_u32_pair_put", align 4
@__kstrtab_devlink_fmsg_u64_pair_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_u64_pair_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_u64_pair_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_u64_pair_put to i32), ptr @__kstrtab_devlink_fmsg_u64_pair_put, ptr @__kstrtabns_devlink_fmsg_u64_pair_put }, section "___ksymtab_gpl+devlink_fmsg_u64_pair_put", align 4
@__kstrtab_devlink_fmsg_string_pair_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_string_pair_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_string_pair_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_string_pair_put to i32), ptr @__kstrtab_devlink_fmsg_string_pair_put, ptr @__kstrtabns_devlink_fmsg_string_pair_put }, section "___ksymtab_gpl+devlink_fmsg_string_pair_put", align 4
@__kstrtab_devlink_fmsg_binary_pair_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_fmsg_binary_pair_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_fmsg_binary_pair_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_fmsg_binary_pair_put to i32), ptr @__kstrtab_devlink_fmsg_binary_pair_put, ptr @__kstrtabns_devlink_fmsg_binary_pair_put }, section "___ksymtab_gpl+devlink_fmsg_binary_pair_put", align 4
@__kstrtab_devlink_health_reporter_priv = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_health_reporter_priv = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_health_reporter_priv = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_health_reporter_priv to i32), ptr @__kstrtab_devlink_health_reporter_priv, ptr @__kstrtabns_devlink_health_reporter_priv }, section "___ksymtab_gpl+devlink_health_reporter_priv", align 4
@__kstrtab_devlink_port_health_reporter_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_health_reporter_create = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_health_reporter_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_health_reporter_create to i32), ptr @__kstrtab_devlink_port_health_reporter_create, ptr @__kstrtabns_devlink_port_health_reporter_create }, section "___ksymtab_gpl+devlink_port_health_reporter_create", align 4
@__kstrtab_devlink_health_reporter_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_health_reporter_create = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_health_reporter_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_health_reporter_create to i32), ptr @__kstrtab_devlink_health_reporter_create, ptr @__kstrtabns_devlink_health_reporter_create }, section "___ksymtab_gpl+devlink_health_reporter_create", align 4
@__kstrtab_devlink_health_reporter_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_health_reporter_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_health_reporter_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_health_reporter_destroy to i32), ptr @__kstrtab_devlink_health_reporter_destroy, ptr @__kstrtabns_devlink_health_reporter_destroy }, section "___ksymtab_gpl+devlink_health_reporter_destroy", align 4
@__kstrtab_devlink_port_health_reporter_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_health_reporter_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_health_reporter_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_health_reporter_destroy to i32), ptr @__kstrtab_devlink_port_health_reporter_destroy, ptr @__kstrtabns_devlink_port_health_reporter_destroy }, section "___ksymtab_gpl+devlink_port_health_reporter_destroy", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 64
@__kstrtab_devlink_health_reporter_recovery_done = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_health_reporter_recovery_done = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_health_reporter_recovery_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_health_reporter_recovery_done to i32), ptr @__kstrtab_devlink_health_reporter_recovery_done, ptr @__kstrtabns_devlink_health_reporter_recovery_done }, section "___ksymtab_gpl+devlink_health_reporter_recovery_done", align 4
@__kstrtab_devlink_health_report = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_health_report = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_health_report = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_health_report to i32), ptr @__kstrtab_devlink_health_report, ptr @__kstrtabns_devlink_health_report }, section "___ksymtab_gpl+devlink_health_report", align 4
@__kstrtab_devlink_health_reporter_state_update = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_health_reporter_state_update = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_health_reporter_state_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_health_reporter_state_update to i32), ptr @__kstrtab_devlink_health_reporter_state_update, ptr @__kstrtabns_devlink_health_reporter_state_update }, section "___ksymtab_gpl+devlink_health_reporter_state_update", align 4
@devlink_set_features.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlinks = internal global %struct.xarray { %struct.spinlock zeroinitializer, i32 33554436, ptr null }, align 4
@__kstrtab_devlink_set_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_set_features = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_set_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_set_features to i32), ptr @__kstrtab_devlink_set_features, ptr @__kstrtabns_devlink_set_features }, section "___ksymtab_gpl+devlink_set_features", align 4
@devlink_alloc_ns.last_id = internal global i32 0, align 4
@devlink_alloc_ns.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"&devlink->lock\00", align 1
@devlink_alloc_ns.__key.5 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"&devlink->reporters_lock\00", align 1
@__kstrtab_devlink_alloc_ns = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_alloc_ns = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_alloc_ns = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_alloc_ns to i32), ptr @__kstrtab_devlink_alloc_ns, ptr @__kstrtabns_devlink_alloc_ns }, section "___ksymtab_gpl+devlink_alloc_ns", align 4
@devlink_register.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_mutex = internal global %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @devlink_mutex, i64 12), ptr getelementptr (i8, ptr @devlink_mutex, i64 12) } }, align 4
@__kstrtab_devlink_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_register to i32), ptr @__kstrtab_devlink_register, ptr @__kstrtabns_devlink_register }, section "___ksymtab_gpl+devlink_register", align 4
@devlink_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_devlink_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_unregister to i32), ptr @__kstrtab_devlink_unregister, ptr @__kstrtabns_devlink_unregister }, section "___ksymtab_gpl+devlink_unregister", align 4
@devlink_free.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_devlink_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_free = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_free to i32), ptr @__kstrtab_devlink_free, ptr @__kstrtabns_devlink_free }, section "___ksymtab_gpl+devlink_free", align 4
@devlink_port_register.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"&devlink_port->reporters_lock\00", align 1
@__kstrtab_devlink_port_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_register to i32), ptr @__kstrtab_devlink_port_register, ptr @__kstrtabns_devlink_port_register }, section "___ksymtab_gpl+devlink_port_register", align 4
@__kstrtab_devlink_port_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_unregister to i32), ptr @__kstrtab_devlink_port_unregister, ptr @__kstrtabns_devlink_port_unregister }, section "___ksymtab_gpl+devlink_port_unregister", align 4
@.str.8 = private unnamed_addr constant [128 x i8] c"devlink port type for port %d set to Ethernet without a software interface reference, device type not supported by the kernel?\0A\00", align 1
@__kstrtab_devlink_port_type_eth_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_type_eth_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_type_eth_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_type_eth_set to i32), ptr @__kstrtab_devlink_port_type_eth_set, ptr @__kstrtabns_devlink_port_type_eth_set }, section "___ksymtab_gpl+devlink_port_type_eth_set", align 4
@__kstrtab_devlink_port_type_ib_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_type_ib_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_type_ib_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_type_ib_set to i32), ptr @__kstrtab_devlink_port_type_ib_set, ptr @__kstrtabns_devlink_port_type_ib_set }, section "___ksymtab_gpl+devlink_port_type_ib_set", align 4
@__kstrtab_devlink_port_type_clear = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_type_clear = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_type_clear = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_type_clear to i32), ptr @__kstrtab_devlink_port_type_clear, ptr @__kstrtabns_devlink_port_type_clear }, section "___ksymtab_gpl+devlink_port_type_clear", align 4
@__kstrtab_devlink_port_attrs_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_attrs_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_attrs_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_attrs_set to i32), ptr @__kstrtab_devlink_port_attrs_set, ptr @__kstrtabns_devlink_port_attrs_set }, section "___ksymtab_gpl+devlink_port_attrs_set", align 4
@__kstrtab_devlink_port_attrs_pci_pf_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_attrs_pci_pf_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_attrs_pci_pf_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_attrs_pci_pf_set to i32), ptr @__kstrtab_devlink_port_attrs_pci_pf_set, ptr @__kstrtabns_devlink_port_attrs_pci_pf_set }, section "___ksymtab_gpl+devlink_port_attrs_pci_pf_set", align 4
@__kstrtab_devlink_port_attrs_pci_vf_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_attrs_pci_vf_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_attrs_pci_vf_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_attrs_pci_vf_set to i32), ptr @__kstrtab_devlink_port_attrs_pci_vf_set, ptr @__kstrtabns_devlink_port_attrs_pci_vf_set }, section "___ksymtab_gpl+devlink_port_attrs_pci_vf_set", align 4
@__kstrtab_devlink_port_attrs_pci_sf_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_attrs_pci_sf_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_attrs_pci_sf_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_attrs_pci_sf_set to i32), ptr @__kstrtab_devlink_port_attrs_pci_sf_set, ptr @__kstrtabns_devlink_port_attrs_pci_sf_set }, section "___ksymtab_gpl+devlink_port_attrs_pci_sf_set", align 4
@__kstrtab_devlink_rate_leaf_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_rate_leaf_create = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_rate_leaf_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_rate_leaf_create to i32), ptr @__kstrtab_devlink_rate_leaf_create, ptr @__kstrtabns_devlink_rate_leaf_create }, section "___ksymtab_gpl+devlink_rate_leaf_create", align 4
@__kstrtab_devlink_rate_leaf_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_rate_leaf_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_rate_leaf_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_rate_leaf_destroy to i32), ptr @__kstrtab_devlink_rate_leaf_destroy, ptr @__kstrtabns_devlink_rate_leaf_destroy }, section "___ksymtab_gpl+devlink_rate_leaf_destroy", align 4
@devlink_rate_nodes_destroy.devlink_rate = internal unnamed_addr global ptr null, align 4
@devlink_rate_nodes_destroy.tmp = internal unnamed_addr global ptr null, align 4
@__kstrtab_devlink_rate_nodes_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_rate_nodes_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_rate_nodes_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_rate_nodes_destroy to i32), ptr @__kstrtab_devlink_rate_nodes_destroy, ptr @__kstrtabns_devlink_rate_nodes_destroy }, section "___ksymtab_gpl+devlink_rate_nodes_destroy", align 4
@__kstrtab_devlink_sb_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_sb_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_sb_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_sb_register to i32), ptr @__kstrtab_devlink_sb_register, ptr @__kstrtabns_devlink_sb_register }, section "___ksymtab_gpl+devlink_sb_register", align 4
@__kstrtab_devlink_sb_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_sb_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_sb_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_sb_unregister to i32), ptr @__kstrtab_devlink_sb_unregister, ptr @__kstrtabns_devlink_sb_unregister }, section "___ksymtab_gpl+devlink_sb_unregister", align 4
@__kstrtab_devlink_dpipe_headers_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_headers_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_headers_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_headers_register to i32), ptr @__kstrtab_devlink_dpipe_headers_register, ptr @__kstrtabns_devlink_dpipe_headers_register }, section "___ksymtab_gpl+devlink_dpipe_headers_register", align 4
@__kstrtab_devlink_dpipe_headers_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_headers_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_headers_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_headers_unregister to i32), ptr @__kstrtab_devlink_dpipe_headers_unregister, ptr @__kstrtabns_devlink_dpipe_headers_unregister }, section "___ksymtab_gpl+devlink_dpipe_headers_unregister", align 4
@__kstrtab_devlink_dpipe_table_counter_enabled = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_table_counter_enabled = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_table_counter_enabled = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_table_counter_enabled to i32), ptr @__kstrtab_devlink_dpipe_table_counter_enabled, ptr @__kstrtabns_devlink_dpipe_table_counter_enabled }, section "___ksymtab_gpl+devlink_dpipe_table_counter_enabled", align 4
@__kstrtab_devlink_dpipe_table_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_table_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_table_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_table_register to i32), ptr @__kstrtab_devlink_dpipe_table_register, ptr @__kstrtabns_devlink_dpipe_table_register }, section "___ksymtab_gpl+devlink_dpipe_table_register", align 4
@__kstrtab_devlink_dpipe_table_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_table_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_table_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_table_unregister to i32), ptr @__kstrtab_devlink_dpipe_table_unregister, ptr @__kstrtabns_devlink_dpipe_table_unregister }, section "___ksymtab_gpl+devlink_dpipe_table_unregister", align 4
@__kstrtab_devlink_resource_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_resource_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_resource_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_resource_register to i32), ptr @__kstrtab_devlink_resource_register, ptr @__kstrtabns_devlink_resource_register }, section "___ksymtab_gpl+devlink_resource_register", align 4
@__kstrtab_devlink_resources_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_resources_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_resources_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_resources_unregister to i32), ptr @__kstrtab_devlink_resources_unregister, ptr @__kstrtabns_devlink_resources_unregister }, section "___ksymtab_gpl+devlink_resources_unregister", align 4
@__kstrtab_devlink_resource_size_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_resource_size_get = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_resource_size_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_resource_size_get to i32), ptr @__kstrtab_devlink_resource_size_get, ptr @__kstrtabns_devlink_resource_size_get }, section "___ksymtab_gpl+devlink_resource_size_get", align 4
@__kstrtab_devlink_dpipe_table_resource_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_dpipe_table_resource_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_dpipe_table_resource_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_dpipe_table_resource_set to i32), ptr @__kstrtab_devlink_dpipe_table_resource_set, ptr @__kstrtabns_devlink_dpipe_table_resource_set }, section "___ksymtab_gpl+devlink_dpipe_table_resource_set", align 4
@__kstrtab_devlink_resource_occ_get_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_resource_occ_get_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_resource_occ_get_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_resource_occ_get_register to i32), ptr @__kstrtab_devlink_resource_occ_get_register, ptr @__kstrtabns_devlink_resource_occ_get_register }, section "___ksymtab_gpl+devlink_resource_occ_get_register", align 4
@__kstrtab_devlink_resource_occ_get_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_resource_occ_get_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_resource_occ_get_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_resource_occ_get_unregister to i32), ptr @__kstrtab_devlink_resource_occ_get_unregister, ptr @__kstrtabns_devlink_resource_occ_get_unregister }, section "___ksymtab_gpl+devlink_resource_occ_get_unregister", align 4
@devlink_params_register.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_devlink_params_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_params_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_params_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_params_register to i32), ptr @__kstrtab_devlink_params_register, ptr @__kstrtabns_devlink_params_register }, section "___ksymtab_gpl+devlink_params_register", align 4
@devlink_params_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_devlink_params_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_params_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_params_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_params_unregister to i32), ptr @__kstrtab_devlink_params_unregister, ptr @__kstrtabns_devlink_params_unregister }, section "___ksymtab_gpl+devlink_params_unregister", align 4
@devlink_param_register.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_devlink_param_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_param_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_param_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_param_register to i32), ptr @__kstrtab_devlink_param_register, ptr @__kstrtabns_devlink_param_register }, section "___ksymtab_gpl+devlink_param_register", align 4
@devlink_param_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_devlink_param_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_param_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_param_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_param_unregister to i32), ptr @__kstrtab_devlink_param_unregister, ptr @__kstrtabns_devlink_param_unregister }, section "___ksymtab_gpl+devlink_param_unregister", align 4
@__kstrtab_devlink_param_driverinit_value_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_param_driverinit_value_get = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_param_driverinit_value_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_param_driverinit_value_get to i32), ptr @__kstrtab_devlink_param_driverinit_value_get, ptr @__kstrtabns_devlink_param_driverinit_value_get }, section "___ksymtab_gpl+devlink_param_driverinit_value_get", align 4
@devlink_param_driverinit_value_set.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_devlink_param_driverinit_value_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_param_driverinit_value_set = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_param_driverinit_value_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_param_driverinit_value_set to i32), ptr @__kstrtab_devlink_param_driverinit_value_set, ptr @__kstrtabns_devlink_param_driverinit_value_set }, section "___ksymtab_gpl+devlink_param_driverinit_value_set", align 4
@__kstrtab_devlink_param_value_changed = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_param_value_changed = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_param_value_changed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_param_value_changed to i32), ptr @__kstrtab_devlink_param_value_changed, ptr @__kstrtabns_devlink_param_value_changed }, section "___ksymtab_gpl+devlink_param_value_changed", align 4
@__kstrtab_devlink_region_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_region_create = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_region_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_region_create to i32), ptr @__kstrtab_devlink_region_create, ptr @__kstrtabns_devlink_region_create }, section "___ksymtab_gpl+devlink_region_create", align 4
@__kstrtab_devlink_port_region_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_port_region_create = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_port_region_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_port_region_create to i32), ptr @__kstrtab_devlink_port_region_create, ptr @__kstrtabns_devlink_port_region_create }, section "___ksymtab_gpl+devlink_port_region_create", align 4
@__kstrtab_devlink_region_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_region_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_region_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_region_destroy to i32), ptr @__kstrtab_devlink_region_destroy, ptr @__kstrtabns_devlink_region_destroy }, section "___ksymtab_gpl+devlink_region_destroy", align 4
@__kstrtab_devlink_region_snapshot_id_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_region_snapshot_id_get = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_region_snapshot_id_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_region_snapshot_id_get to i32), ptr @__kstrtab_devlink_region_snapshot_id_get, ptr @__kstrtabns_devlink_region_snapshot_id_get }, section "___ksymtab_gpl+devlink_region_snapshot_id_get", align 4
@__kstrtab_devlink_region_snapshot_id_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_region_snapshot_id_put = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_region_snapshot_id_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_region_snapshot_id_put to i32), ptr @__kstrtab_devlink_region_snapshot_id_put, ptr @__kstrtabns_devlink_region_snapshot_id_put }, section "___ksymtab_gpl+devlink_region_snapshot_id_put", align 4
@__kstrtab_devlink_region_snapshot_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_region_snapshot_create = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_region_snapshot_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_region_snapshot_create to i32), ptr @__kstrtab_devlink_region_snapshot_create, ptr @__kstrtabns_devlink_region_snapshot_create }, section "___ksymtab_gpl+devlink_region_snapshot_create", align 4
@__kstrtab_devlink_traps_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_traps_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_traps_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_traps_register to i32), ptr @__kstrtab_devlink_traps_register, ptr @__kstrtabns_devlink_traps_register }, section "___ksymtab_gpl+devlink_traps_register", align 4
@__kstrtab_devlink_traps_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_traps_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_traps_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_traps_unregister to i32), ptr @__kstrtab_devlink_traps_unregister, ptr @__kstrtabns_devlink_traps_unregister }, section "___ksymtab_gpl+devlink_traps_unregister", align 4
@__kstrtab_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_trap_report = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_trap_report = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_trap_report to i32), ptr @__kstrtab_devlink_trap_report, ptr @__kstrtabns_devlink_trap_report }, section "___ksymtab_gpl+devlink_trap_report", align 4
@__kstrtab_devlink_trap_ctx_priv = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_trap_ctx_priv = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_trap_ctx_priv = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_trap_ctx_priv to i32), ptr @__kstrtab_devlink_trap_ctx_priv, ptr @__kstrtabns_devlink_trap_ctx_priv }, section "___ksymtab_gpl+devlink_trap_ctx_priv", align 4
@__kstrtab_devlink_trap_groups_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_trap_groups_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_trap_groups_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_trap_groups_register to i32), ptr @__kstrtab_devlink_trap_groups_register, ptr @__kstrtabns_devlink_trap_groups_register }, section "___ksymtab_gpl+devlink_trap_groups_register", align 4
@__kstrtab_devlink_trap_groups_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_trap_groups_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_trap_groups_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_trap_groups_unregister to i32), ptr @__kstrtab_devlink_trap_groups_unregister, ptr @__kstrtabns_devlink_trap_groups_unregister }, section "___ksymtab_gpl+devlink_trap_groups_unregister", align 4
@__kstrtab_devlink_trap_policers_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_trap_policers_register = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_trap_policers_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_trap_policers_register to i32), ptr @__kstrtab_devlink_trap_policers_register, ptr @__kstrtabns_devlink_trap_policers_register }, section "___ksymtab_gpl+devlink_trap_policers_register", align 4
@__kstrtab_devlink_trap_policers_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_devlink_trap_policers_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_devlink_trap_policers_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devlink_trap_policers_unregister to i32), ptr @__kstrtab_devlink_trap_policers_unregister, ptr @__kstrtabns_devlink_trap_policers_unregister }, section "___ksymtab_gpl+devlink_trap_policers_unregister", align 4
@devlink_compat_phys_port_name_get.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"RTNL: assertion failed at %s (%d)\0A\00", align 1
@__initcall__kmod_devlink__494_11454_devlink_init4 = internal global ptr @devlink_init, section ".initcall4.init", align 4
@.str.10 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"__data_loc char[]\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"bus_name\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"dev_name\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"driver_name\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"incoming\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"__data_loc u8[]\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"buf\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"size_t\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str.23 = private unnamed_addr constant [83 x i8] c"bus_name=%s dev_name=%s driver_name=%s incoming=%d type=%lu buf=0x[%*phD] len=%zu\0A\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"err\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"msg\00", align 1
@.str.27 = private unnamed_addr constant [50 x i8] c"bus_name=%s dev_name=%s driver_name=%s err=%d %s\0A\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"reporter_name\00", align 1
@.str.29 = private unnamed_addr constant [61 x i8] c"bus_name=%s dev_name=%s driver_name=%s reporter_name=%s: %s\0A\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"health_state\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"time_since_last_recover\00", align 1
@.str.33 = private unnamed_addr constant [119 x i8] c"bus_name=%s dev_name=%s driver_name=%s reporter_name=%s: health_state=%d time_since_last_recover=%llu recover aborted\0A\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"u8\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"new_state\00", align 1
@.str.36 = private unnamed_addr constant [71 x i8] c"bus_name=%s dev_name=%s driver_name=%s reporter_name=%s: new_state=%d\0A\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"trap_name\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"trap_group_name\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"input_dev_name\00", align 1
@.str.41 = private unnamed_addr constant [90 x i8] c"bus_name=%s dev_name=%s driver_name=%s trap_name=%s trap_group_name=%s input_dev_name=%s\0A\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"destination mac\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"destination ip\00", align 1
@init_net = external dso_local global %struct.net, align 64
@.str.44 = private unnamed_addr constant [22 x i8] c"include/net/netlink.h\00", align 1
@genlmsg_multicast_netns.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"include/net/genetlink.h\00", align 1
@__devlink_health_reporter_create.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"&reporter->dump_lock\00", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@devlink_nl_ops = internal constant [52 x %struct.genl_small_ops] [%struct.genl_small_ops { ptr @devlink_nl_cmd_get_doit, ptr @devlink_nl_cmd_get_dumpit, i8 1, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_get_doit, ptr @devlink_nl_cmd_port_get_dumpit, i8 5, i8 1, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_set_doit, ptr null, i8 6, i8 1, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_rate_get_doit, ptr @devlink_nl_cmd_rate_get_dumpit, i8 74, i8 4, i8 0, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_rate_set_doit, ptr null, i8 75, i8 4, i8 1, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_rate_new_doit, ptr null, i8 76, i8 0, i8 1, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_rate_del_doit, ptr null, i8 77, i8 8, i8 1, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_split_doit, ptr null, i8 9, i8 16, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_unsplit_doit, ptr null, i8 10, i8 16, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_new_doit, ptr null, i8 7, i8 16, i8 1, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_del_doit, ptr null, i8 8, i8 16, i8 1, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_get_doit, ptr @devlink_nl_cmd_sb_get_dumpit, i8 11, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_pool_get_doit, ptr @devlink_nl_cmd_sb_pool_get_dumpit, i8 15, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_pool_set_doit, ptr null, i8 16, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_port_pool_get_doit, ptr @devlink_nl_cmd_sb_port_pool_get_dumpit, i8 19, i8 1, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_port_pool_set_doit, ptr null, i8 20, i8 1, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_tc_pool_bind_get_doit, ptr @devlink_nl_cmd_sb_tc_pool_bind_get_dumpit, i8 23, i8 1, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_tc_pool_bind_set_doit, ptr null, i8 24, i8 1, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_occ_snapshot_doit, ptr null, i8 27, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_sb_occ_max_clear_doit, ptr null, i8 28, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_eswitch_get_doit, ptr null, i8 29, i8 16, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_eswitch_set_doit, ptr null, i8 30, i8 16, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_dpipe_table_get, ptr null, i8 31, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_dpipe_entries_get, ptr null, i8 32, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_dpipe_headers_get, ptr null, i8 33, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_dpipe_table_counters_set, ptr null, i8 34, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_resource_set, ptr null, i8 35, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_resource_dump, ptr null, i8 36, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_reload, ptr null, i8 37, i8 16, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_param_get_doit, ptr @devlink_nl_cmd_param_get_dumpit, i8 38, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_param_set_doit, ptr null, i8 39, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_param_get_doit, ptr @devlink_nl_cmd_port_param_get_dumpit, i8 47, i8 1, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_port_param_set_doit, ptr null, i8 48, i8 1, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_region_get_doit, ptr @devlink_nl_cmd_region_get_dumpit, i8 42, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_region_new, ptr null, i8 44, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_region_del, ptr null, i8 45, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr null, ptr @devlink_nl_cmd_region_read_dumpit, i8 46, i8 0, i8 1, i8 5 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_info_get_doit, ptr @devlink_nl_cmd_info_get_dumpit, i8 51, i8 0, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_health_reporter_get_doit, ptr @devlink_nl_cmd_health_reporter_get_dumpit, i8 52, i8 18, i8 0, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_health_reporter_set_doit, ptr null, i8 53, i8 18, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_health_reporter_recover_doit, ptr null, i8 54, i8 18, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_health_reporter_diagnose_doit, ptr null, i8 55, i8 18, i8 1, i8 3 }, %struct.genl_small_ops { ptr null, ptr @devlink_nl_cmd_health_reporter_dump_get_dumpit, i8 56, i8 0, i8 1, i8 5 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_health_reporter_dump_clear_doit, ptr null, i8 57, i8 18, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_health_reporter_test_doit, ptr null, i8 73, i8 18, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_flash_update, ptr null, i8 58, i8 0, i8 1, i8 3 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_trap_get_doit, ptr @devlink_nl_cmd_trap_get_dumpit, i8 61, i8 0, i8 0, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_trap_set_doit, ptr null, i8 62, i8 0, i8 1, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_trap_group_get_doit, ptr @devlink_nl_cmd_trap_group_get_dumpit, i8 65, i8 0, i8 0, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_trap_group_set_doit, ptr null, i8 66, i8 0, i8 1, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_trap_policer_get_doit, ptr @devlink_nl_cmd_trap_policer_get_dumpit, i8 69, i8 0, i8 0, i8 0 }, %struct.genl_small_ops { ptr @devlink_nl_cmd_trap_policer_set_doit, ptr null, i8 70, i8 0, i8 1, i8 0 }], align 4
@devlink_nl_mcgrps = internal constant [1 x %struct.genl_multicast_group] [%struct.genl_multicast_group { [16 x i8] c"config\00\00\00\00\00\00\00\00\00\00", i8 0 }], align 1
@devlink_nl_policy = internal constant <{ { i8, i8, i16, { i16, [2 x i8] } }, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, { i8, i8, i16, { %struct.anon.10 } }, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, { i8, i8, i16, { %struct.anon.10 } }, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, { i8, i8, i16, { %struct.anon.10 } }, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy, %struct.nla_policy }> <{ { i8, i8, i16, { i16, [2 x i8] } } { i8 0, i8 0, i16 0, { i16, [2 x i8] } { i16 142, [2 x i8] undef } }, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, { i8, i8, i16, { %struct.anon.10 } } { i8 2, i8 1, i16 0, { %struct.anon.10 } { %struct.anon.10 { i16 1, i16 3 } } }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 2, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 2, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, { i8, i8, i16, { %struct.anon.10 } } { i8 2, i8 1, i16 0, { %struct.anon.10 } { %struct.anon.10 { i16 0, i16 1 } } }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 2, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 2, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 1, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 8, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 16, i8 0, i16 0, %union.anon.9 { i32 3 } }, { i8, i8, i16, { %struct.anon.10 } } { i8 1, i8 1, i16 0, { %struct.anon.10 } { %struct.anon.10 { i16 1, i16 2 } } }, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 16, i8 0, i16 0, %union.anon.9 { i32 3 } }, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 3, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 2, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 4, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy { i8 10, i8 0, i16 0, %union.anon.9 zeroinitializer }, %struct.nla_policy zeroinitializer }>, align 4
@.str.49 = private unnamed_addr constant [11 x i8] c"0123456789\00", align 1
@devlink_rate_node_get_by_name.devlink_rate = internal unnamed_addr global ptr null, align 4
@devlink_port_fn_state_fill.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_port_fn_state_fill.__msg = internal constant [40 x i8] c"devlink: Invalid state read from driver\00", align 1
@devlink_port_fn_state_fill.__already_done.50 = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_port_fn_state_fill.__msg.51 = internal constant [52 x i8] c"devlink: Invalid operational state read from driver\00", align 1
@devlink_port_function_set.__msg = internal constant [48 x i8] c"devlink: Fail to parse port function attributes\00", align 1
@nla_parse_nested.__msg = internal constant [24 x i8] c"NLA_F_NESTED is missing\00", align 1
@devlink_function_nl_policy = internal constant <{ %struct.nla_policy, %struct.nla_policy, { i8, i8, i16, { %struct.anon.10 } }, %struct.nla_policy }> <{ %struct.nla_policy zeroinitializer, %struct.nla_policy { i8 11, i8 0, i16 0, %union.anon.9 zeroinitializer }, { i8, i8, i16, { %struct.anon.10 } } { i8 1, i8 1, i16 0, { %struct.anon.10 } { %struct.anon.10 { i16 0, i16 1 } } }, %struct.nla_policy zeroinitializer }>, align 4
@devlink_port_function_hw_addr_set.__msg = internal constant [49 x i8] c"devlink: Port function hardware address too long\00", align 1
@devlink_port_function_hw_addr_set.__msg.53 = internal constant [53 x i8] c"devlink: Address must be 6 bytes for Ethernet device\00", align 1
@devlink_port_function_hw_addr_set.__msg.54 = internal constant [50 x i8] c"devlink: Non-unicast hardware address unsupported\00", align 1
@devlink_port_function_hw_addr_set.__msg.55 = internal constant [50 x i8] c"devlink: Port doesn't support function attributes\00", align 1
@devlink_port_fn_state_set.__msg = internal constant [49 x i8] c"devlink: Function does not support state setting\00", align 1
@devlink_rate_set_ops_supported.__msg = internal constant [52 x i8] c"devlink: TX share set isn't supported for the leafs\00", align 1
@devlink_rate_set_ops_supported.__msg.56 = internal constant [50 x i8] c"devlink: TX max set isn't supported for the leafs\00", align 1
@devlink_rate_set_ops_supported.__msg.57 = internal constant [50 x i8] c"devlink: Parent set isn't supported for the leafs\00", align 1
@devlink_rate_set_ops_supported.__msg.58 = internal constant [52 x i8] c"devlink: TX share set isn't supported for the nodes\00", align 1
@devlink_rate_set_ops_supported.__msg.59 = internal constant [50 x i8] c"devlink: TX max set isn't supported for the nodes\00", align 1
@devlink_rate_set_ops_supported.__msg.60 = internal constant [50 x i8] c"devlink: Parent set isn't supported for the nodes\00", align 1
@.str.61 = private unnamed_addr constant [28 x i8] c"Unknown type of rate object\00", align 1
@devlink_nl_rate_parent_node_set.__msg = internal constant [41 x i8] c"devlink: Rate object already has parent.\00", align 1
@devlink_nl_rate_parent_node_set.__msg.62 = internal constant [39 x i8] c"devlink: Parent to self is not allowed\00", align 1
@devlink_nl_rate_parent_node_set.__msg.63 = internal constant [50 x i8] c"devlink: Node is already a parent of parent node.\00", align 1
@devlink_nl_cmd_rate_new_doit.__msg = internal constant [37 x i8] c"devlink: Rate nodes aren't supported\00", align 1
@devlink_nl_cmd_rate_del_doit.__msg = internal constant [48 x i8] c"devlink: Node has children. Cannot delete node.\00", align 1
@devlink_nl_cmd_port_split_doit.__msg = internal constant [38 x i8] c"devlink: Port cannot be split further\00", align 1
@devlink_nl_cmd_port_split_doit.__msg.64 = internal constant [30 x i8] c"devlink: Port cannot be split\00", align 1
@devlink_nl_cmd_port_split_doit.__msg.65 = internal constant [29 x i8] c"devlink: Invalid split count\00", align 1
@devlink_nl_cmd_port_new_doit.__msg = internal constant [50 x i8] c"devlink: Port flavour or PCI PF are not specified\00", align 1
@devlink_nl_cmd_port_del_doit.__msg = internal constant [37 x i8] c"devlink: Port index is not specified\00", align 1
@devlink_rate_nodes_check.__msg = internal constant [30 x i8] c"devlink: Rate node(s) exists.\00", align 1
@devlink_resource_validate_size.__msg = internal constant [34 x i8] c"devlink: Size larger than maximum\00", align 1
@devlink_resource_validate_size.__msg.66 = internal constant [35 x i8] c"devlink: Size smaller than minimum\00", align 1
@devlink_resource_validate_size.__msg.67 = internal constant [27 x i8] c"devlink: Wrong granularity\00", align 1
@devlink_nl_cmd_reload.__msg = internal constant [42 x i8] c"devlink: resources size validation failed\00", align 1
@devlink_nl_cmd_reload.__msg.68 = internal constant [64 x i8] c"devlink: Requested reload action is not supported by the driver\00", align 1
@devlink_nl_cmd_reload.__msg.69 = internal constant [32 x i8] c"devlink: Invalid limit selected\00", align 1
@devlink_nl_cmd_reload.__msg.70 = internal constant [50 x i8] c"devlink: Multiselection of limit is not supported\00", align 1
@devlink_nl_cmd_reload.__msg.71 = internal constant [56 x i8] c"devlink: Requested limit is not supported by the driver\00", align 1
@devlink_nl_cmd_reload.__msg.72 = internal constant [52 x i8] c"devlink: Requested limit is invalid for this action\00", align 1
@devlink_netns_get.__msg = internal constant [57 x i8] c"devlink: multiple netns identifying attributes specified\00", align 1
@devlink_netns_get.__msg.73 = internal constant [35 x i8] c"devlink: Unknown network namespace\00", align 1
@devlink_nl_cmd_region_new.__msg = internal constant [33 x i8] c"devlink: No region name provided\00", align 1
@devlink_nl_cmd_region_new.__msg.74 = internal constant [45 x i8] c"devlink: The requested region does not exist\00", align 1
@devlink_nl_cmd_region_new.__msg.75 = internal constant [76 x i8] c"devlink: The requested region does not support taking an immediate snapshot\00", align 1
@devlink_nl_cmd_region_new.__msg.76 = internal constant [71 x i8] c"devlink: The region has reached the maximum number of stored snapshots\00", align 1
@devlink_nl_cmd_region_new.__msg.77 = internal constant [53 x i8] c"devlink: The requested snapshot id is already in use\00", align 1
@devlink_nl_cmd_region_new.__msg.78 = internal constant [46 x i8] c"devlink: Failed to allocate a new snapshot id\00", align 1
@.str.79 = private unnamed_addr constant [23 x i8] c"include/linux/xarray.h\00", align 1
@devlink_nl_cmd_health_reporter_dump_get_dumpit.__msg = internal constant [37 x i8] c"devlink: Dump trampled, please retry\00", align 1
@devlink_nl_cmd_flash_update.__msg = internal constant [49 x i8] c"component update is not supported by this device\00", align 1
@devlink_nl_cmd_flash_update.__msg.80 = internal constant [52 x i8] c"overwrite settings are not supported by this device\00", align 1
@devlink_nl_cmd_flash_update.__msg.81 = internal constant [45 x i8] c"failed to locate the requested firmware file\00", align 1
@devlink_nl_cmd_trap_get_doit.__msg = internal constant [43 x i8] c"devlink: Device did not register this trap\00", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [16 x i32], align 4
@devlink_nl_cmd_trap_set_doit.__msg = internal constant [43 x i8] c"devlink: Device did not register this trap\00", align 1
@devlink_trap_action_set.__msg = internal constant [29 x i8] c"devlink: Invalid trap action\00", align 1
@__devlink_trap_action_set.__msg = internal constant [58 x i8] c"devlink: Cannot change action of non-drop traps. Skipping\00", align 1
@devlink_nl_cmd_trap_group_get_doit.__msg = internal constant [49 x i8] c"devlink: Device did not register this trap group\00", align 1
@devlink_nl_cmd_trap_group_set_doit.__msg = internal constant [49 x i8] c"devlink: Device did not register this trap group\00", align 1
@devlink_nl_cmd_trap_group_set_doit.__msg.82 = internal constant [72 x i8] c"devlink: Trap group set failed, but some changes were committed already\00", align 1
@devlink_trap_group_action_set.__msg = internal constant [29 x i8] c"devlink: Invalid trap action\00", align 1
@devlink_trap_group_set.__msg = internal constant [51 x i8] c"devlink: Device did not register this trap policer\00", align 1
@devlink_nl_cmd_trap_policer_get_doit.__msg = internal constant [51 x i8] c"devlink: Device did not register this trap policer\00", align 1
@devlink_nl_cmd_trap_policer_set_doit.__msg = internal constant [51 x i8] c"devlink: Device did not register this trap policer\00", align 1
@devlink_trap_policer_set.__msg = internal constant [39 x i8] c"devlink: Policer rate lower than limit\00", align 1
@devlink_trap_policer_set.__msg.83 = internal constant [40 x i8] c"devlink: Policer rate higher than limit\00", align 1
@devlink_trap_policer_set.__msg.84 = internal constant [45 x i8] c"devlink: Policer burst size lower than limit\00", align 1
@devlink_trap_policer_set.__msg.85 = internal constant [46 x i8] c"devlink: Policer burst size higher than limit\00", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@devlink_trap_policer_notify.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_group_notify.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_notify.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.87 = private unnamed_addr constant [35 x i8] c"Type was not set for devlink port.\00", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@devlink_param_generic = internal unnamed_addr constant [17 x %struct.devlink_param] [%struct.devlink_param { i32 0, ptr @.str.88, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 1, ptr @.str.89, i8 0, i32 2, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 2, ptr @.str.90, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 3, ptr @.str.91, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 4, ptr @.str.92, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 5, ptr @.str.93, i8 0, i32 2, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 6, ptr @.str.94, i8 0, i32 2, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 7, ptr @.str.95, i8 0, i32 0, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 8, ptr @.str.96, i8 0, i32 0, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 9, ptr @.str.97, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 10, ptr @.str.98, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 11, ptr @.str.99, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 12, ptr @.str.100, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 13, ptr @.str.101, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 14, ptr @.str.102, i8 0, i32 4, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 15, ptr @.str.103, i8 0, i32 2, i32 0, ptr null, ptr null, ptr null }, %struct.devlink_param { i32 16, ptr @.str.104, i8 0, i32 2, i32 0, ptr null, ptr null, ptr null }], align 4
@.str.88 = private unnamed_addr constant [21 x i8] c"internal_error_reset\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"max_macs\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"enable_sriov\00", align 1
@.str.91 = private unnamed_addr constant [23 x i8] c"region_snapshot_enable\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c"ignore_ari\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"msix_vec_per_pf_max\00", align 1
@.str.94 = private unnamed_addr constant [20 x i8] c"msix_vec_per_pf_min\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"fw_load_policy\00", align 1
@.str.96 = private unnamed_addr constant [23 x i8] c"reset_dev_on_drv_probe\00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"enable_roce\00", align 1
@.str.98 = private unnamed_addr constant [24 x i8] c"enable_remote_dev_reset\00", align 1
@.str.99 = private unnamed_addr constant [11 x i8] c"enable_eth\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"enable_rdma\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"enable_vnet\00", align 1
@.str.102 = private unnamed_addr constant [13 x i8] c"enable_iwarp\00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"io_eq_size\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c"event_eq_size\00", align 1
@devlink_param_notify.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_generic = internal unnamed_addr constant [92 x %struct.devlink_trap] [%struct.devlink_trap { i32 0, i32 0, i8 0, i16 0, ptr @.str.105, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 1, ptr @.str.106, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 2, ptr @.str.107, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 3, ptr @.str.108, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 4, ptr @.str.109, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 5, ptr @.str.110, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 6, ptr @.str.111, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 7, ptr @.str.112, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 8, ptr @.str.113, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 9, ptr @.str.114, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 10, ptr @.str.115, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 11, ptr @.str.116, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 12, ptr @.str.117, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 13, ptr @.str.118, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 14, ptr @.str.119, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 15, ptr @.str.120, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 16, ptr @.str.121, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 17, ptr @.str.122, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 18, ptr @.str.123, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 19, ptr @.str.124, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 20, ptr @.str.125, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 21, ptr @.str.126, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 22, ptr @.str.127, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 23, ptr @.str.128, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 24, ptr @.str.129, i16 0, i32 0 }, %struct.devlink_trap { i32 1, i32 0, i8 0, i16 25, ptr @.str.130, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 26, ptr @.str.131, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 27, ptr @.str.132, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 28, ptr @.str.133, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 29, ptr @.str.134, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 30, ptr @.str.135, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 31, ptr @.str.136, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 32, ptr @.str.137, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 33, ptr @.str.138, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 34, ptr @.str.139, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 35, ptr @.str.140, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 36, ptr @.str.141, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 37, ptr @.str.142, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 38, ptr @.str.143, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 39, ptr @.str.144, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 40, ptr @.str.145, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 41, ptr @.str.146, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 42, ptr @.str.147, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 43, ptr @.str.148, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 44, ptr @.str.149, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 45, ptr @.str.150, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 46, ptr @.str.151, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 47, ptr @.str.152, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 48, ptr @.str.153, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 49, ptr @.str.154, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 50, ptr @.str.155, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 51, ptr @.str.156, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 52, ptr @.str.157, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 53, ptr @.str.158, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 54, ptr @.str.159, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 55, ptr @.str.160, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 56, ptr @.str.161, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 57, ptr @.str.162, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 58, ptr @.str.163, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 59, ptr @.str.164, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 60, ptr @.str.165, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 61, ptr @.str.166, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 62, ptr @.str.167, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 63, ptr @.str.168, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 64, ptr @.str.169, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 65, ptr @.str.170, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 66, ptr @.str.171, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 67, ptr @.str.172, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 68, ptr @.str.173, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 69, ptr @.str.174, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 70, ptr @.str.175, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 71, ptr @.str.176, i16 0, i32 0 }, %struct.devlink_trap { i32 2, i32 0, i8 0, i16 72, ptr @.str.177, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 73, ptr @.str.178, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 74, ptr @.str.179, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 75, ptr @.str.180, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 76, ptr @.str.181, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 77, ptr @.str.182, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 78, ptr @.str.183, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 79, ptr @.str.184, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 80, ptr @.str.185, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 81, ptr @.str.186, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 82, ptr @.str.187, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 83, ptr @.str.188, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 84, ptr @.str.189, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 85, ptr @.str.190, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 86, ptr @.str.191, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 87, ptr @.str.192, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 88, ptr @.str.193, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 89, ptr @.str.194, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 90, ptr @.str.195, i16 0, i32 0 }, %struct.devlink_trap { i32 0, i32 0, i8 0, i16 91, ptr @.str.196, i16 0, i32 0 }], align 4
@.str.105 = private unnamed_addr constant [24 x i8] c"source_mac_is_multicast\00", align 1
@.str.106 = private unnamed_addr constant [18 x i8] c"vlan_tag_mismatch\00", align 1
@.str.107 = private unnamed_addr constant [20 x i8] c"ingress_vlan_filter\00", align 1
@.str.108 = private unnamed_addr constant [29 x i8] c"ingress_spanning_tree_filter\00", align 1
@.str.109 = private unnamed_addr constant [19 x i8] c"port_list_is_empty\00", align 1
@.str.110 = private unnamed_addr constant [21 x i8] c"port_loopback_filter\00", align 1
@.str.111 = private unnamed_addr constant [16 x i8] c"blackhole_route\00", align 1
@.str.112 = private unnamed_addr constant [23 x i8] c"ttl_value_is_too_small\00", align 1
@.str.113 = private unnamed_addr constant [10 x i8] c"tail_drop\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"non_ip\00", align 1
@.str.115 = private unnamed_addr constant [20 x i8] c"uc_dip_over_mc_dmac\00", align 1
@.str.116 = private unnamed_addr constant [24 x i8] c"dip_is_loopback_address\00", align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"sip_is_mc\00", align 1
@.str.118 = private unnamed_addr constant [24 x i8] c"sip_is_loopback_address\00", align 1
@.str.119 = private unnamed_addr constant [20 x i8] c"ip_header_corrupted\00", align 1
@.str.120 = private unnamed_addr constant [23 x i8] c"ipv4_sip_is_limited_bc\00", align 1
@.str.121 = private unnamed_addr constant [27 x i8] c"ipv6_mc_dip_reserved_scope\00", align 1
@.str.122 = private unnamed_addr constant [34 x i8] c"ipv6_mc_dip_interface_local_scope\00", align 1
@.str.123 = private unnamed_addr constant [23 x i8] c"mtu_value_is_too_small\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"unresolved_neigh\00", align 1
@.str.125 = private unnamed_addr constant [27 x i8] c"mc_reverse_path_forwarding\00", align 1
@.str.126 = private unnamed_addr constant [13 x i8] c"reject_route\00", align 1
@.str.127 = private unnamed_addr constant [14 x i8] c"ipv4_lpm_miss\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"ipv6_lpm_miss\00", align 1
@.str.129 = private unnamed_addr constant [20 x i8] c"non_routable_packet\00", align 1
@.str.130 = private unnamed_addr constant [12 x i8] c"decap_error\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"overlay_smac_is_mc\00", align 1
@.str.132 = private unnamed_addr constant [25 x i8] c"ingress_flow_action_drop\00", align 1
@.str.133 = private unnamed_addr constant [24 x i8] c"egress_flow_action_drop\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"stp\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"lacp\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c"lldp\00", align 1
@.str.137 = private unnamed_addr constant [11 x i8] c"igmp_query\00", align 1
@.str.138 = private unnamed_addr constant [15 x i8] c"igmp_v1_report\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"igmp_v2_report\00", align 1
@.str.140 = private unnamed_addr constant [15 x i8] c"igmp_v3_report\00", align 1
@.str.141 = private unnamed_addr constant [14 x i8] c"igmp_v2_leave\00", align 1
@.str.142 = private unnamed_addr constant [10 x i8] c"mld_query\00", align 1
@.str.143 = private unnamed_addr constant [14 x i8] c"mld_v1_report\00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"mld_v2_report\00", align 1
@.str.145 = private unnamed_addr constant [12 x i8] c"mld_v1_done\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"ipv4_dhcp\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"ipv6_dhcp\00", align 1
@.str.148 = private unnamed_addr constant [12 x i8] c"arp_request\00", align 1
@.str.149 = private unnamed_addr constant [13 x i8] c"arp_response\00", align 1
@.str.150 = private unnamed_addr constant [12 x i8] c"arp_overlay\00", align 1
@.str.151 = private unnamed_addr constant [19 x i8] c"ipv6_neigh_solicit\00", align 1
@.str.152 = private unnamed_addr constant [18 x i8] c"ipv6_neigh_advert\00", align 1
@.str.153 = private unnamed_addr constant [9 x i8] c"ipv4_bfd\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"ipv6_bfd\00", align 1
@.str.155 = private unnamed_addr constant [10 x i8] c"ipv4_ospf\00", align 1
@.str.156 = private unnamed_addr constant [10 x i8] c"ipv6_ospf\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c"ipv4_bgp\00", align 1
@.str.158 = private unnamed_addr constant [9 x i8] c"ipv6_bgp\00", align 1
@.str.159 = private unnamed_addr constant [10 x i8] c"ipv4_vrrp\00", align 1
@.str.160 = private unnamed_addr constant [10 x i8] c"ipv6_vrrp\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"ipv4_pim\00", align 1
@.str.162 = private unnamed_addr constant [9 x i8] c"ipv6_pim\00", align 1
@.str.163 = private unnamed_addr constant [12 x i8] c"uc_loopback\00", align 1
@.str.164 = private unnamed_addr constant [12 x i8] c"local_route\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"external_route\00", align 1
@.str.166 = private unnamed_addr constant [29 x i8] c"ipv6_uc_dip_link_local_scope\00", align 1
@.str.167 = private unnamed_addr constant [19 x i8] c"ipv6_dip_all_nodes\00", align 1
@.str.168 = private unnamed_addr constant [21 x i8] c"ipv6_dip_all_routers\00", align 1
@.str.169 = private unnamed_addr constant [20 x i8] c"ipv6_router_solicit\00", align 1
@.str.170 = private unnamed_addr constant [19 x i8] c"ipv6_router_advert\00", align 1
@.str.171 = private unnamed_addr constant [14 x i8] c"ipv6_redirect\00", align 1
@.str.172 = private unnamed_addr constant [18 x i8] c"ipv4_router_alert\00", align 1
@.str.173 = private unnamed_addr constant [18 x i8] c"ipv6_router_alert\00", align 1
@.str.174 = private unnamed_addr constant [10 x i8] c"ptp_event\00", align 1
@.str.175 = private unnamed_addr constant [12 x i8] c"ptp_general\00", align 1
@.str.176 = private unnamed_addr constant [19 x i8] c"flow_action_sample\00", align 1
@.str.177 = private unnamed_addr constant [17 x i8] c"flow_action_trap\00", align 1
@.str.178 = private unnamed_addr constant [11 x i8] c"early_drop\00", align 1
@.str.179 = private unnamed_addr constant [14 x i8] c"vxlan_parsing\00", align 1
@.str.180 = private unnamed_addr constant [17 x i8] c"llc_snap_parsing\00", align 1
@.str.181 = private unnamed_addr constant [13 x i8] c"vlan_parsing\00", align 1
@.str.182 = private unnamed_addr constant [18 x i8] c"pppoe_ppp_parsing\00", align 1
@.str.183 = private unnamed_addr constant [13 x i8] c"mpls_parsing\00", align 1
@.str.184 = private unnamed_addr constant [12 x i8] c"arp_parsing\00", align 1
@.str.185 = private unnamed_addr constant [13 x i8] c"ip_1_parsing\00", align 1
@.str.186 = private unnamed_addr constant [13 x i8] c"ip_n_parsing\00", align 1
@.str.187 = private unnamed_addr constant [12 x i8] c"gre_parsing\00", align 1
@.str.188 = private unnamed_addr constant [12 x i8] c"udp_parsing\00", align 1
@.str.189 = private unnamed_addr constant [12 x i8] c"tcp_parsing\00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"ipsec_parsing\00", align 1
@.str.191 = private unnamed_addr constant [13 x i8] c"sctp_parsing\00", align 1
@.str.192 = private unnamed_addr constant [13 x i8] c"dccp_parsing\00", align 1
@.str.193 = private unnamed_addr constant [12 x i8] c"gtp_parsing\00", align 1
@.str.194 = private unnamed_addr constant [12 x i8] c"esp_parsing\00", align 1
@.str.195 = private unnamed_addr constant [18 x i8] c"blackhole_nexthop\00", align 1
@.str.196 = private unnamed_addr constant [12 x i8] c"dmac_filter\00", align 1
@devlink_trap_item_group_link.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_disable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_group_generic = internal unnamed_addr constant [26 x %struct.devlink_trap_group] [%struct.devlink_trap_group { ptr @.str.197, i16 0, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.198, i16 1, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.199, i16 2, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.200, i16 3, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.201, i16 4, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.202, i16 5, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.134, i16 6, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.135, i16 7, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.136, i16 8, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.203, i16 9, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.204, i16 10, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.205, i16 11, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.206, i16 12, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.207, i16 13, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.208, i16 14, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.209, i16 15, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.210, i16 16, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.163, i16 17, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.211, i16 18, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.212, i16 19, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.2, i16 20, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.174, i16 21, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.175, i16 22, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.213, i16 23, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.214, i16 24, i8 0, i32 0 }, %struct.devlink_trap_group { ptr @.str.215, i16 25, i8 0, i32 0 }], align 4
@.str.197 = private unnamed_addr constant [9 x i8] c"l2_drops\00", align 1
@.str.198 = private unnamed_addr constant [9 x i8] c"l3_drops\00", align 1
@.str.199 = private unnamed_addr constant [14 x i8] c"l3_exceptions\00", align 1
@.str.200 = private unnamed_addr constant [13 x i8] c"buffer_drops\00", align 1
@.str.201 = private unnamed_addr constant [13 x i8] c"tunnel_drops\00", align 1
@.str.202 = private unnamed_addr constant [10 x i8] c"acl_drops\00", align 1
@.str.203 = private unnamed_addr constant [12 x i8] c"mc_snooping\00", align 1
@.str.204 = private unnamed_addr constant [5 x i8] c"dhcp\00", align 1
@.str.205 = private unnamed_addr constant [16 x i8] c"neigh_discovery\00", align 1
@.str.206 = private unnamed_addr constant [4 x i8] c"bfd\00", align 1
@.str.207 = private unnamed_addr constant [5 x i8] c"ospf\00", align 1
@.str.208 = private unnamed_addr constant [4 x i8] c"bgp\00", align 1
@.str.209 = private unnamed_addr constant [5 x i8] c"vrrp\00", align 1
@.str.210 = private unnamed_addr constant [4 x i8] c"pim\00", align 1
@.str.211 = private unnamed_addr constant [15 x i8] c"local_delivery\00", align 1
@.str.212 = private unnamed_addr constant [18 x i8] c"external_delivery\00", align 1
@.str.213 = private unnamed_addr constant [11 x i8] c"acl_sample\00", align 1
@.str.214 = private unnamed_addr constant [9 x i8] c"acl_trap\00", align 1
@.str.215 = private unnamed_addr constant [19 x i8] c"parser_error_drops\00", align 1
@devlink_trap_group_item_policer_link.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_group_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@devlink_trap_policer_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.216 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.217 = private unnamed_addr constant [4 x i8] c"p%u\00", align 1
@.str.218 = private unnamed_addr constant [4 x i8] c"s%u\00", align 1
@.str.219 = private unnamed_addr constant [4 x i8] c"c%u\00", align 1
@.str.220 = private unnamed_addr constant [5 x i8] c"pf%u\00", align 1
@.str.221 = private unnamed_addr constant [9 x i8] c"pf%uvf%u\00", align 1
@.str.222 = private unnamed_addr constant [9 x i8] c"pf%usf%u\00", align 1
@devlink_pernet_ops = internal global %struct.pernet_operations { %struct.list_head zeroinitializer, ptr null, ptr @devlink_pernet_pre_exit, ptr null, ptr null, ptr null, i32 0 }, section ".init.data", align 4
@.str.223 = private unnamed_addr constant [51 x i8] c"\014Failed to reload devlink instance into init_net\0A\00", align 1
@llvm.compiler.used = appending global [139 x ptr] [ptr @__event_devlink_health_recover_aborted, ptr @__event_devlink_health_report, ptr @__event_devlink_health_reporter_state_update, ptr @__event_devlink_hwerr, ptr @__event_devlink_hwmsg, ptr @__event_devlink_trap_report, ptr @__initcall__kmod_devlink__494_11454_devlink_init4, ptr @__ksymtab___SCK__tp_func_devlink_hwerr, ptr @__ksymtab___SCK__tp_func_devlink_hwmsg, ptr @__ksymtab___SCK__tp_func_devlink_trap_report, ptr @__ksymtab___traceiter_devlink_hwerr, ptr @__ksymtab___traceiter_devlink_hwmsg, ptr @__ksymtab___traceiter_devlink_trap_report, ptr @__ksymtab___tracepoint_devlink_hwerr, ptr @__ksymtab___tracepoint_devlink_hwmsg, ptr @__ksymtab___tracepoint_devlink_trap_report, ptr @__ksymtab_devlink_alloc_ns, ptr @__ksymtab_devlink_dpipe_action_put, ptr @__ksymtab_devlink_dpipe_entry_clear, ptr @__ksymtab_devlink_dpipe_entry_ctx_append, ptr @__ksymtab_devlink_dpipe_entry_ctx_close, ptr @__ksymtab_devlink_dpipe_entry_ctx_prepare, ptr @__ksymtab_devlink_dpipe_header_ethernet, ptr @__ksymtab_devlink_dpipe_header_ipv4, ptr @__ksymtab_devlink_dpipe_header_ipv6, ptr @__ksymtab_devlink_dpipe_headers_register, ptr @__ksymtab_devlink_dpipe_headers_unregister, ptr @__ksymtab_devlink_dpipe_match_put, ptr @__ksymtab_devlink_dpipe_table_counter_enabled, ptr @__ksymtab_devlink_dpipe_table_register, ptr @__ksymtab_devlink_dpipe_table_resource_set, ptr @__ksymtab_devlink_dpipe_table_unregister, ptr @__ksymtab_devlink_flash_update_status_notify, ptr @__ksymtab_devlink_flash_update_timeout_notify, ptr @__ksymtab_devlink_fmsg_arr_pair_nest_end, ptr @__ksymtab_devlink_fmsg_arr_pair_nest_start, ptr @__ksymtab_devlink_fmsg_binary_pair_nest_end, ptr @__ksymtab_devlink_fmsg_binary_pair_nest_start, ptr @__ksymtab_devlink_fmsg_binary_pair_put, ptr @__ksymtab_devlink_fmsg_binary_put, ptr @__ksymtab_devlink_fmsg_bool_pair_put, ptr @__ksymtab_devlink_fmsg_obj_nest_end, ptr @__ksymtab_devlink_fmsg_obj_nest_start, ptr @__ksymtab_devlink_fmsg_pair_nest_end, ptr @__ksymtab_devlink_fmsg_pair_nest_start, ptr @__ksymtab_devlink_fmsg_string_pair_put, ptr @__ksymtab_devlink_fmsg_string_put, ptr @__ksymtab_devlink_fmsg_u32_pair_put, ptr @__ksymtab_devlink_fmsg_u32_put, ptr @__ksymtab_devlink_fmsg_u64_pair_put, ptr @__ksymtab_devlink_fmsg_u8_pair_put, ptr @__ksymtab_devlink_free, ptr @__ksymtab_devlink_health_report, ptr @__ksymtab_devlink_health_reporter_create, ptr @__ksymtab_devlink_health_reporter_destroy, ptr @__ksymtab_devlink_health_reporter_priv, ptr @__ksymtab_devlink_health_reporter_recovery_done, ptr @__ksymtab_devlink_health_reporter_state_update, ptr @__ksymtab_devlink_info_board_serial_number_put, ptr @__ksymtab_devlink_info_driver_name_put, ptr @__ksymtab_devlink_info_serial_number_put, ptr @__ksymtab_devlink_info_version_fixed_put, ptr @__ksymtab_devlink_info_version_running_put, ptr @__ksymtab_devlink_info_version_stored_put, ptr @__ksymtab_devlink_is_reload_failed, ptr @__ksymtab_devlink_net, ptr @__ksymtab_devlink_param_driverinit_value_get, ptr @__ksymtab_devlink_param_driverinit_value_set, ptr @__ksymtab_devlink_param_register, ptr @__ksymtab_devlink_param_unregister, ptr @__ksymtab_devlink_param_value_changed, ptr @__ksymtab_devlink_params_register, ptr @__ksymtab_devlink_params_unregister, ptr @__ksymtab_devlink_port_attrs_pci_pf_set, ptr @__ksymtab_devlink_port_attrs_pci_sf_set, ptr @__ksymtab_devlink_port_attrs_pci_vf_set, ptr @__ksymtab_devlink_port_attrs_set, ptr @__ksymtab_devlink_port_health_reporter_create, ptr @__ksymtab_devlink_port_health_reporter_destroy, ptr @__ksymtab_devlink_port_region_create, ptr @__ksymtab_devlink_port_register, ptr @__ksymtab_devlink_port_type_clear, ptr @__ksymtab_devlink_port_type_eth_set, ptr @__ksymtab_devlink_port_type_ib_set, ptr @__ksymtab_devlink_port_unregister, ptr @__ksymtab_devlink_priv, ptr @__ksymtab_devlink_rate_leaf_create, ptr @__ksymtab_devlink_rate_leaf_destroy, ptr @__ksymtab_devlink_rate_nodes_destroy, ptr @__ksymtab_devlink_region_create, ptr @__ksymtab_devlink_region_destroy, ptr @__ksymtab_devlink_region_snapshot_create, ptr @__ksymtab_devlink_region_snapshot_id_get, ptr @__ksymtab_devlink_region_snapshot_id_put, ptr @__ksymtab_devlink_register, ptr @__ksymtab_devlink_remote_reload_actions_performed, ptr @__ksymtab_devlink_resource_occ_get_register, ptr @__ksymtab_devlink_resource_occ_get_unregister, ptr @__ksymtab_devlink_resource_register, ptr @__ksymtab_devlink_resource_size_get, ptr @__ksymtab_devlink_resources_unregister, ptr @__ksymtab_devlink_sb_register, ptr @__ksymtab_devlink_sb_unregister, ptr @__ksymtab_devlink_set_features, ptr @__ksymtab_devlink_to_dev, ptr @__ksymtab_devlink_trap_ctx_priv, ptr @__ksymtab_devlink_trap_groups_register, ptr @__ksymtab_devlink_trap_groups_unregister, ptr @__ksymtab_devlink_trap_policers_register, ptr @__ksymtab_devlink_trap_policers_unregister, ptr @__ksymtab_devlink_trap_report, ptr @__ksymtab_devlink_traps_register, ptr @__ksymtab_devlink_traps_unregister, ptr @__ksymtab_devlink_unregister, ptr @__ksymtab_priv_to_devlink, ptr @__tracepoint_devlink_health_recover_aborted, ptr @__tracepoint_devlink_health_report, ptr @__tracepoint_devlink_health_reporter_state_update, ptr @__tracepoint_devlink_hwerr, ptr @__tracepoint_devlink_hwmsg, ptr @__tracepoint_devlink_trap_report, ptr @__tracepoint_ptr_devlink_health_recover_aborted, ptr @__tracepoint_ptr_devlink_health_report, ptr @__tracepoint_ptr_devlink_health_reporter_state_update, ptr @__tracepoint_ptr_devlink_hwerr, ptr @__tracepoint_ptr_devlink_hwmsg, ptr @__tracepoint_ptr_devlink_trap_report, ptr @event_class_devlink_health_recover_aborted, ptr @event_class_devlink_health_report, ptr @event_class_devlink_health_reporter_state_update, ptr @event_class_devlink_hwerr, ptr @event_class_devlink_hwmsg, ptr @event_class_devlink_trap_report, ptr @event_devlink_health_recover_aborted, ptr @event_devlink_health_report, ptr @event_devlink_health_reporter_state_update, ptr @event_devlink_hwerr, ptr @event_devlink_hwmsg, ptr @event_devlink_trap_report], section "llvm.metadata"
@switch.table.devlink_nl_param_fill = private unnamed_addr constant [5 x i8] c"\01\02\03\05\06", align 1

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_devlink_hwmsg(ptr nocapture readnone %0, ptr noundef %1, i1 noundef zeroext %2, i32 noundef %3, ptr noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_hwmsg, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, i1 noundef zeroext %2, i32 noundef %3, ptr noundef %4, i32 noundef %5) #27
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_devlink_hwerr(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_hwerr, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, ptr noundef %3) #27
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_devlink_health_report(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_report, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, ptr noundef %3) #27
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_devlink_health_recover_aborted(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3, i64 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_recover_aborted, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3, i64 noundef %4) #27
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_devlink_health_reporter_state_update(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_reporter_state_update, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3) #27
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_devlink_trap_report(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_trap_report, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, ptr noundef %3) #27
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_devlink_hwmsg(ptr noundef %0, ptr nocapture noundef readonly %1, i1 noundef zeroext %2, i32 noundef %3, ptr nocapture noundef readonly %4, i32 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  %8 = zext i1 %2 to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 704
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13, !prof !10

13:                                               ; preds = %6
  %14 = and i32 %10, 256
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18, !prof !11

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #27
  br i1 %17, label %104, label %18

18:                                               ; preds = %16, %13, %6
  %19 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.device, ptr %20, i32 0, i32 5
  %22 = load ptr, ptr %21, align 4
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  %25 = select i1 %24, ptr @.str.10, ptr %23
  %26 = tail call i32 @strlen(ptr noundef nonnull %25) #27
  %27 = add i32 %26, 1
  %28 = shl i32 %27, 16
  %29 = or i32 %28, 36
  %30 = getelementptr inbounds %struct.device, ptr %20, i32 0, i32 3
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %18
  %34 = load ptr, ptr %20, align 4
  %35 = icmp eq ptr %34, null
  %36 = select i1 %35, ptr @.str.10, ptr %34
  br label %37

37:                                               ; preds = %33, %18
  %38 = phi ptr [ %31, %18 ], [ %36, %33 ]
  %39 = tail call i32 @strlen(ptr noundef nonnull %38) #27
  %40 = add i32 %39, 1
  %41 = getelementptr inbounds %struct.device, ptr %20, i32 0, i32 6
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %42, align 4
  %44 = icmp eq ptr %43, null
  %45 = select i1 %44, ptr @.str.10, ptr %43
  %46 = add i32 %40, %27
  %47 = tail call i32 @strlen(ptr noundef nonnull %45) #27
  %48 = add i32 %47, 1
  %49 = add i32 %48, %46
  %50 = add i32 %49, 36
  %51 = add i32 %50, %5
  %52 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef %51) #27
  %53 = icmp eq ptr %52, null
  br i1 %53, label %104, label %54

54:                                               ; preds = %37
  %55 = shl i32 %5, 16
  %56 = or i32 %50, %55
  %57 = shl i32 %48, 16
  %58 = add i32 %46, 36
  %59 = or i32 %57, %58
  %60 = shl i32 %40, 16
  %61 = add i32 %26, 37
  %62 = or i32 %60, %61
  %63 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %52, i32 0, i32 1
  store i32 %29, ptr %63, align 4
  %64 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %52, i32 0, i32 2
  store i32 %62, ptr %64, align 4
  %65 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %52, i32 0, i32 3
  store i32 %59, ptr %65, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %52, i32 0, i32 6
  store i32 %56, ptr %66, align 4
  %67 = getelementptr i8, ptr %52, i32 36
  %68 = load ptr, ptr %19, align 4
  %69 = getelementptr inbounds %struct.device, ptr %68, i32 0, i32 5
  %70 = load ptr, ptr %69, align 4
  %71 = load ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, null
  %73 = select i1 %72, ptr @.str.10, ptr %71
  %74 = call ptr @strcpy(ptr noundef %67, ptr noundef nonnull %73)
  %75 = and i32 %61, 65535
  %76 = getelementptr i8, ptr %52, i32 %75
  %77 = load ptr, ptr %19, align 4
  %78 = getelementptr inbounds %struct.device, ptr %77, i32 0, i32 3
  %79 = load ptr, ptr %78, align 4
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %54
  %82 = load ptr, ptr %77, align 4
  %83 = icmp eq ptr %82, null
  %84 = select i1 %83, ptr @.str.10, ptr %82
  br label %85

85:                                               ; preds = %81, %54
  %86 = phi ptr [ %79, %54 ], [ %84, %81 ]
  %87 = call ptr @strcpy(ptr noundef %76, ptr noundef nonnull %86)
  %88 = load i32, ptr %65, align 4
  %89 = and i32 %88, 65535
  %90 = getelementptr i8, ptr %52, i32 %89
  %91 = load ptr, ptr %19, align 4
  %92 = getelementptr inbounds %struct.device, ptr %91, i32 0, i32 6
  %93 = load ptr, ptr %92, align 8
  %94 = load ptr, ptr %93, align 4
  %95 = icmp eq ptr %94, null
  %96 = select i1 %95, ptr @.str.10, ptr %94
  %97 = call ptr @strcpy(ptr noundef %90, ptr noundef nonnull %96)
  %98 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %52, i32 0, i32 4
  store i8 %8, ptr %98, align 4
  %99 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %52, i32 0, i32 5
  store i32 %3, ptr %99, align 4
  %100 = load i32, ptr %66, align 4
  %101 = and i32 %100, 65535
  %102 = getelementptr i8, ptr %52, i32 %101
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %102, ptr align 1 %4, i32 %5, i1 false)
  %103 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %52, i32 0, i32 7
  store i32 %5, ptr %103, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #27
  br label %104

104:                                              ; preds = %85, %37, %16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_devlink_hwmsg(ptr noundef %0, ptr nocapture noundef readonly %1, i1 noundef zeroext %2, i32 noundef %3, ptr nocapture noundef readonly %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  %9 = zext i1 %2 to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #27
  store i32 0, ptr %8, align 4, !annotation !9
  %10 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.device, ptr %11, i32 0, i32 5
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  %16 = select i1 %15, ptr @.str.10, ptr %14
  %17 = tail call i32 @strlen(ptr noundef nonnull %16) #27
  %18 = add i32 %17, 1
  %19 = shl i32 %18, 16
  %20 = or i32 %19, 36
  %21 = getelementptr inbounds %struct.device, ptr %11, i32 0, i32 3
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %6
  %25 = load ptr, ptr %11, align 4
  %26 = icmp eq ptr %25, null
  %27 = select i1 %26, ptr @.str.10, ptr %25
  br label %28

28:                                               ; preds = %24, %6
  %29 = phi ptr [ %22, %6 ], [ %27, %24 ]
  %30 = tail call i32 @strlen(ptr noundef nonnull %29) #27
  %31 = add i32 %30, 1
  %32 = add i32 %17, 37
  %33 = shl i32 %31, 16
  %34 = or i32 %33, %32
  %35 = getelementptr inbounds %struct.device, ptr %11, i32 0, i32 6
  %36 = load ptr, ptr %35, align 8
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  %39 = select i1 %38, ptr @.str.10, ptr %37
  %40 = add i32 %31, %18
  %41 = tail call i32 @strlen(ptr noundef nonnull %39) #27
  %42 = add i32 %41, 1
  %43 = add i32 %40, 36
  %44 = shl i32 %42, 16
  %45 = or i32 %44, %43
  %46 = add i32 %42, %40
  %47 = add i32 %46, 36
  %48 = shl i32 %5, 16
  %49 = or i32 %47, %48
  %50 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %51 = load ptr, ptr %50, align 4
  %52 = ptrtoint ptr %51 to i32
  %53 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %54 = inttoptr i32 %53 to ptr
  %55 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %54) #17, !srcloc !12
  %56 = add i32 %55, %52
  %57 = inttoptr i32 %56 to ptr
  %58 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %59 = load volatile ptr, ptr %58, align 4
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %28
  %62 = load volatile ptr, ptr %57, align 4
  %63 = icmp eq ptr %62, null
  br i1 %63, label %125, label %64

64:                                               ; preds = %61, %28
  %65 = add i32 %5, 47
  %66 = add i32 %65, %46
  %67 = and i32 %66, -8
  %68 = add i32 %67, -4
  %69 = call ptr @perf_trace_buf_alloc(i32 noundef %68, ptr noundef nonnull %7, ptr noundef nonnull %8) #27
  %70 = icmp eq ptr %69, null
  br i1 %70, label %125, label %71

71:                                               ; preds = %64
  %72 = load ptr, ptr %7, align 4
  %73 = call ptr @llvm.returnaddress(i32 0) #27
  %74 = ptrtoint ptr %73 to i32
  %75 = getelementptr [18 x i32], ptr %72, i32 0, i32 15
  store i32 %74, ptr %75, align 4
  %76 = call ptr @llvm.frameaddress.p0(i32 0) #27
  %77 = ptrtoint ptr %76 to i32
  %78 = getelementptr [18 x i32], ptr %72, i32 0, i32 11
  store i32 %77, ptr %78, align 4
  %79 = call i32 @llvm.read_register.i32(metadata !0) #27
  %80 = getelementptr [18 x i32], ptr %72, i32 0, i32 13
  store i32 %79, ptr %80, align 4
  %81 = getelementptr [18 x i32], ptr %72, i32 0, i32 16
  store i32 19, ptr %81, align 4
  %82 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %69, i32 0, i32 1
  store i32 %20, ptr %82, align 4
  %83 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %69, i32 0, i32 2
  store i32 %34, ptr %83, align 4
  %84 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %69, i32 0, i32 3
  store i32 %45, ptr %84, align 4
  %85 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %69, i32 0, i32 6
  store i32 %49, ptr %85, align 4
  %86 = getelementptr i8, ptr %69, i32 36
  %87 = load ptr, ptr %10, align 4
  %88 = getelementptr inbounds %struct.device, ptr %87, i32 0, i32 5
  %89 = load ptr, ptr %88, align 4
  %90 = load ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, null
  %92 = select i1 %91, ptr @.str.10, ptr %90
  %93 = call ptr @strcpy(ptr noundef %86, ptr noundef nonnull %92)
  %94 = and i32 %32, 65535
  %95 = getelementptr i8, ptr %69, i32 %94
  %96 = load ptr, ptr %10, align 4
  %97 = getelementptr inbounds %struct.device, ptr %96, i32 0, i32 3
  %98 = load ptr, ptr %97, align 4
  %99 = icmp eq ptr %98, null
  br i1 %99, label %100, label %104

100:                                              ; preds = %71
  %101 = load ptr, ptr %96, align 4
  %102 = icmp eq ptr %101, null
  %103 = select i1 %102, ptr @.str.10, ptr %101
  br label %104

104:                                              ; preds = %100, %71
  %105 = phi ptr [ %98, %71 ], [ %103, %100 ]
  %106 = call ptr @strcpy(ptr noundef %95, ptr noundef nonnull %105)
  %107 = load i32, ptr %84, align 4
  %108 = and i32 %107, 65535
  %109 = getelementptr i8, ptr %69, i32 %108
  %110 = load ptr, ptr %10, align 4
  %111 = getelementptr inbounds %struct.device, ptr %110, i32 0, i32 6
  %112 = load ptr, ptr %111, align 8
  %113 = load ptr, ptr %112, align 4
  %114 = icmp eq ptr %113, null
  %115 = select i1 %114, ptr @.str.10, ptr %113
  %116 = call ptr @strcpy(ptr noundef %109, ptr noundef nonnull %115)
  %117 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %69, i32 0, i32 4
  store i8 %9, ptr %117, align 4
  %118 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %69, i32 0, i32 5
  store i32 %3, ptr %118, align 4
  %119 = load i32, ptr %85, align 4
  %120 = and i32 %119, 65535
  %121 = getelementptr i8, ptr %69, i32 %120
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %121, ptr align 1 %4, i32 %5, i1 false)
  %122 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %69, i32 0, i32 7
  store i32 %5, ptr %122, align 4
  %123 = load i32, ptr %8, align 4
  %124 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %69, i32 noundef %68, i32 noundef %123, ptr noundef %0, i64 noundef 1, ptr noundef %124, ptr noundef %57, ptr noundef null) #27
  br label %125

125:                                              ; preds = %104, %64, %61
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_devlink_hwerr(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr noundef readonly %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #27
  br i1 %14, label %104, label %15

15:                                               ; preds = %13, %10, %4
  %16 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.device, ptr %17, i32 0, i32 5
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  %22 = select i1 %21, ptr @.str.10, ptr %20
  %23 = tail call i32 @strlen(ptr noundef nonnull %22) #27
  %24 = add i32 %23, 1
  %25 = shl i32 %24, 16
  %26 = or i32 %25, 28
  %27 = getelementptr inbounds %struct.device, ptr %17, i32 0, i32 3
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %15
  %31 = load ptr, ptr %17, align 4
  %32 = icmp eq ptr %31, null
  %33 = select i1 %32, ptr @.str.10, ptr %31
  br label %34

34:                                               ; preds = %30, %15
  %35 = phi ptr [ %28, %15 ], [ %33, %30 ]
  %36 = tail call i32 @strlen(ptr noundef nonnull %35) #27
  %37 = add i32 %36, 1
  %38 = getelementptr inbounds %struct.device, ptr %17, i32 0, i32 6
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  %42 = select i1 %41, ptr @.str.10, ptr %40
  %43 = add i32 %37, %24
  %44 = tail call i32 @strlen(ptr noundef nonnull %42) #27
  %45 = add i32 %44, 1
  %46 = add i32 %45, %43
  %47 = icmp eq ptr %3, null
  %48 = select i1 %47, ptr @.str.10, ptr %3
  %49 = tail call i32 @strlen(ptr noundef %48) #27
  %50 = add i32 %49, 1
  %51 = add i32 %46, 28
  %52 = add i32 %51, %50
  %53 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %52) #27
  %54 = icmp eq ptr %53, null
  br i1 %54, label %104, label %55

55:                                               ; preds = %34
  %56 = shl i32 %50, 16
  %57 = or i32 %56, %51
  %58 = shl i32 %45, 16
  %59 = add i32 %43, 28
  %60 = or i32 %58, %59
  %61 = shl i32 %37, 16
  %62 = add i32 %23, 29
  %63 = or i32 %61, %62
  %64 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %53, i32 0, i32 1
  store i32 %26, ptr %64, align 4
  %65 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %53, i32 0, i32 2
  store i32 %63, ptr %65, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %53, i32 0, i32 3
  store i32 %60, ptr %66, align 4
  %67 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %53, i32 0, i32 5
  store i32 %57, ptr %67, align 4
  %68 = getelementptr i8, ptr %53, i32 28
  %69 = load ptr, ptr %16, align 4
  %70 = getelementptr inbounds %struct.device, ptr %69, i32 0, i32 5
  %71 = load ptr, ptr %70, align 4
  %72 = load ptr, ptr %71, align 4
  %73 = icmp eq ptr %72, null
  %74 = select i1 %73, ptr @.str.10, ptr %72
  %75 = call ptr @strcpy(ptr noundef %68, ptr noundef nonnull %74)
  %76 = and i32 %62, 65535
  %77 = getelementptr i8, ptr %53, i32 %76
  %78 = load ptr, ptr %16, align 4
  %79 = getelementptr inbounds %struct.device, ptr %78, i32 0, i32 3
  %80 = load ptr, ptr %79, align 4
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %55
  %83 = load ptr, ptr %78, align 4
  %84 = icmp eq ptr %83, null
  %85 = select i1 %84, ptr @.str.10, ptr %83
  br label %86

86:                                               ; preds = %82, %55
  %87 = phi ptr [ %80, %55 ], [ %85, %82 ]
  %88 = call ptr @strcpy(ptr noundef %77, ptr noundef nonnull %87)
  %89 = load i32, ptr %66, align 4
  %90 = and i32 %89, 65535
  %91 = getelementptr i8, ptr %53, i32 %90
  %92 = load ptr, ptr %16, align 4
  %93 = getelementptr inbounds %struct.device, ptr %92, i32 0, i32 6
  %94 = load ptr, ptr %93, align 8
  %95 = load ptr, ptr %94, align 4
  %96 = icmp eq ptr %95, null
  %97 = select i1 %96, ptr @.str.10, ptr %95
  %98 = call ptr @strcpy(ptr noundef %91, ptr noundef nonnull %97)
  %99 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %53, i32 0, i32 4
  store i32 %2, ptr %99, align 4
  %100 = load i32, ptr %67, align 4
  %101 = and i32 %100, 65535
  %102 = getelementptr i8, ptr %53, i32 %101
  %103 = call ptr @strcpy(ptr noundef %102, ptr noundef %48)
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #27
  br label %104

104:                                              ; preds = %86, %34, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_devlink_hwerr(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr noundef readonly %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.device, ptr %8, i32 0, i32 5
  %10 = load ptr, ptr %9, align 4
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  %13 = select i1 %12, ptr @.str.10, ptr %11
  %14 = tail call i32 @strlen(ptr noundef nonnull %13) #27
  %15 = add i32 %14, 1
  %16 = shl i32 %15, 16
  %17 = or i32 %16, 28
  %18 = getelementptr inbounds %struct.device, ptr %8, i32 0, i32 3
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %4
  %22 = load ptr, ptr %8, align 4
  %23 = icmp eq ptr %22, null
  %24 = select i1 %23, ptr @.str.10, ptr %22
  br label %25

25:                                               ; preds = %21, %4
  %26 = phi ptr [ %19, %4 ], [ %24, %21 ]
  %27 = tail call i32 @strlen(ptr noundef nonnull %26) #27
  %28 = add i32 %27, 1
  %29 = add i32 %14, 29
  %30 = shl i32 %28, 16
  %31 = or i32 %30, %29
  %32 = getelementptr inbounds %struct.device, ptr %8, i32 0, i32 6
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  %36 = select i1 %35, ptr @.str.10, ptr %34
  %37 = add i32 %28, %15
  %38 = tail call i32 @strlen(ptr noundef nonnull %36) #27
  %39 = add i32 %38, 1
  %40 = add i32 %37, 28
  %41 = shl i32 %39, 16
  %42 = or i32 %41, %40
  %43 = add i32 %39, %37
  %44 = icmp eq ptr %3, null
  %45 = select i1 %44, ptr @.str.10, ptr %3
  %46 = tail call i32 @strlen(ptr noundef %45) #27
  %47 = add i32 %46, 1
  %48 = add i32 %43, 28
  %49 = shl i32 %47, 16
  %50 = or i32 %49, %48
  %51 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %52 = load ptr, ptr %51, align 4
  %53 = ptrtoint ptr %52 to i32
  %54 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %55 = inttoptr i32 %54 to ptr
  %56 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %55) #17, !srcloc !12
  %57 = add i32 %56, %53
  %58 = inttoptr i32 %57 to ptr
  %59 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %60 = load volatile ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %25
  %63 = load volatile ptr, ptr %58, align 4
  %64 = icmp eq ptr %63, null
  br i1 %64, label %125, label %65

65:                                               ; preds = %62, %25
  %66 = add i32 %43, 39
  %67 = add i32 %66, %47
  %68 = and i32 %67, -8
  %69 = add i32 %68, -4
  %70 = call ptr @perf_trace_buf_alloc(i32 noundef %69, ptr noundef nonnull %5, ptr noundef nonnull %6) #27
  %71 = icmp eq ptr %70, null
  br i1 %71, label %125, label %72

72:                                               ; preds = %65
  %73 = load ptr, ptr %5, align 4
  %74 = call ptr @llvm.returnaddress(i32 0) #27
  %75 = ptrtoint ptr %74 to i32
  %76 = getelementptr [18 x i32], ptr %73, i32 0, i32 15
  store i32 %75, ptr %76, align 4
  %77 = call ptr @llvm.frameaddress.p0(i32 0) #27
  %78 = ptrtoint ptr %77 to i32
  %79 = getelementptr [18 x i32], ptr %73, i32 0, i32 11
  store i32 %78, ptr %79, align 4
  %80 = call i32 @llvm.read_register.i32(metadata !0) #27
  %81 = getelementptr [18 x i32], ptr %73, i32 0, i32 13
  store i32 %80, ptr %81, align 4
  %82 = getelementptr [18 x i32], ptr %73, i32 0, i32 16
  store i32 19, ptr %82, align 4
  %83 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %70, i32 0, i32 1
  store i32 %17, ptr %83, align 4
  %84 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %70, i32 0, i32 2
  store i32 %31, ptr %84, align 4
  %85 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %70, i32 0, i32 3
  store i32 %42, ptr %85, align 4
  %86 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %70, i32 0, i32 5
  store i32 %50, ptr %86, align 4
  %87 = getelementptr i8, ptr %70, i32 28
  %88 = load ptr, ptr %7, align 4
  %89 = getelementptr inbounds %struct.device, ptr %88, i32 0, i32 5
  %90 = load ptr, ptr %89, align 4
  %91 = load ptr, ptr %90, align 4
  %92 = icmp eq ptr %91, null
  %93 = select i1 %92, ptr @.str.10, ptr %91
  %94 = call ptr @strcpy(ptr noundef %87, ptr noundef nonnull %93)
  %95 = and i32 %29, 65535
  %96 = getelementptr i8, ptr %70, i32 %95
  %97 = load ptr, ptr %7, align 4
  %98 = getelementptr inbounds %struct.device, ptr %97, i32 0, i32 3
  %99 = load ptr, ptr %98, align 4
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %105

101:                                              ; preds = %72
  %102 = load ptr, ptr %97, align 4
  %103 = icmp eq ptr %102, null
  %104 = select i1 %103, ptr @.str.10, ptr %102
  br label %105

105:                                              ; preds = %101, %72
  %106 = phi ptr [ %99, %72 ], [ %104, %101 ]
  %107 = call ptr @strcpy(ptr noundef %96, ptr noundef nonnull %106)
  %108 = load i32, ptr %85, align 4
  %109 = and i32 %108, 65535
  %110 = getelementptr i8, ptr %70, i32 %109
  %111 = load ptr, ptr %7, align 4
  %112 = getelementptr inbounds %struct.device, ptr %111, i32 0, i32 6
  %113 = load ptr, ptr %112, align 8
  %114 = load ptr, ptr %113, align 4
  %115 = icmp eq ptr %114, null
  %116 = select i1 %115, ptr @.str.10, ptr %114
  %117 = call ptr @strcpy(ptr noundef %110, ptr noundef nonnull %116)
  %118 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %70, i32 0, i32 4
  store i32 %2, ptr %118, align 4
  %119 = load i32, ptr %86, align 4
  %120 = and i32 %119, 65535
  %121 = getelementptr i8, ptr %70, i32 %120
  %122 = call ptr @strcpy(ptr noundef %121, ptr noundef %45)
  %123 = load i32, ptr %6, align 4
  %124 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %70, i32 noundef %69, i32 noundef %123, ptr noundef %0, i64 noundef 1, ptr noundef %124, ptr noundef %58, ptr noundef null) #27
  br label %125

125:                                              ; preds = %105, %65, %62
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_devlink_health_report(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, ptr noundef %3) #0 {
  %5 = alloca %struct.trace_event_data_offsets_devlink_health_report, align 4
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %5, i8 0, i32 20, i1 false), !annotation !9
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %4
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #27
  br i1 %15, label %82, label %16

16:                                               ; preds = %14, %11, %4
  %17 = call fastcc i32 @trace_event_get_offsets_devlink_health_report(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %3)
  %18 = add i32 %17, 28
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef %18) #27
  %20 = icmp eq ptr %19, null
  br i1 %20, label %82, label %21

21:                                               ; preds = %16
  %22 = load i32, ptr %5, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %19, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 1
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %19, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 2
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %19, i32 0, i32 3
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 3
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %19, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 4
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %19, i32 0, i32 5
  store i32 %34, ptr %35, align 4
  %36 = and i32 %22, 65535
  %37 = getelementptr i8, ptr %19, i32 %36
  %38 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.device, ptr %39, i32 0, i32 5
  %41 = load ptr, ptr %40, align 4
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  %44 = select i1 %43, ptr @.str.10, ptr %42
  %45 = call ptr @strcpy(ptr noundef %37, ptr noundef nonnull %44)
  %46 = load i32, ptr %26, align 4
  %47 = and i32 %46, 65535
  %48 = getelementptr i8, ptr %19, i32 %47
  %49 = load ptr, ptr %38, align 4
  %50 = getelementptr inbounds %struct.device, ptr %49, i32 0, i32 3
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %21
  %54 = load ptr, ptr %49, align 4
  %55 = icmp eq ptr %54, null
  %56 = select i1 %55, ptr @.str.10, ptr %54
  br label %57

57:                                               ; preds = %53, %21
  %58 = phi ptr [ %51, %21 ], [ %56, %53 ]
  %59 = call ptr @strcpy(ptr noundef %48, ptr noundef nonnull %58)
  %60 = load i32, ptr %29, align 4
  %61 = and i32 %60, 65535
  %62 = getelementptr i8, ptr %19, i32 %61
  %63 = load ptr, ptr %38, align 4
  %64 = getelementptr inbounds %struct.device, ptr %63, i32 0, i32 6
  %65 = load ptr, ptr %64, align 8
  %66 = load ptr, ptr %65, align 4
  %67 = icmp eq ptr %66, null
  %68 = select i1 %67, ptr @.str.10, ptr %66
  %69 = call ptr @strcpy(ptr noundef %62, ptr noundef nonnull %68)
  %70 = load i32, ptr %32, align 4
  %71 = and i32 %70, 65535
  %72 = getelementptr i8, ptr %19, i32 %71
  %73 = icmp eq ptr %2, null
  %74 = select i1 %73, ptr @.str.10, ptr %2
  %75 = call ptr @strcpy(ptr noundef %72, ptr noundef %74)
  %76 = load i32, ptr %35, align 4
  %77 = and i32 %76, 65535
  %78 = getelementptr i8, ptr %19, i32 %77
  %79 = icmp eq ptr %3, null
  %80 = select i1 %79, ptr @.str.10, ptr %3
  %81 = call ptr @strcpy(ptr noundef %78, ptr noundef %80)
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #27
  br label %82

82:                                               ; preds = %57, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_devlink_health_report(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, ptr noundef %3) #0 {
  %5 = alloca %struct.trace_event_data_offsets_devlink_health_report, align 4
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %5, i8 0, i32 20, i1 false), !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = call fastcc i32 @trace_event_get_offsets_devlink_health_report(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %3)
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #17, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %102, label %23

23:                                               ; preds = %20, %4
  %24 = add i32 %8, 39
  %25 = and i32 %24, -8
  %26 = add i32 %25, -4
  %27 = call ptr @perf_trace_buf_alloc(i32 noundef %26, ptr noundef nonnull %6, ptr noundef nonnull %7) #27
  %28 = icmp eq ptr %27, null
  br i1 %28, label %102, label %29

29:                                               ; preds = %23
  %30 = load ptr, ptr %6, align 4
  %31 = call ptr @llvm.returnaddress(i32 0) #27
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %30, i32 0, i32 15
  store i32 %32, ptr %33, align 4
  %34 = call ptr @llvm.frameaddress.p0(i32 0) #27
  %35 = ptrtoint ptr %34 to i32
  %36 = getelementptr [18 x i32], ptr %30, i32 0, i32 11
  store i32 %35, ptr %36, align 4
  %37 = call i32 @llvm.read_register.i32(metadata !0) #27
  %38 = getelementptr [18 x i32], ptr %30, i32 0, i32 13
  store i32 %37, ptr %38, align 4
  %39 = getelementptr [18 x i32], ptr %30, i32 0, i32 16
  store i32 19, ptr %39, align 4
  %40 = load i32, ptr %5, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %27, i32 0, i32 1
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %27, i32 0, i32 2
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 2
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %27, i32 0, i32 3
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 3
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %27, i32 0, i32 4
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %5, i32 0, i32 4
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %27, i32 0, i32 5
  store i32 %52, ptr %53, align 4
  %54 = and i32 %40, 65535
  %55 = getelementptr i8, ptr %27, i32 %54
  %56 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %57 = load ptr, ptr %56, align 4
  %58 = getelementptr inbounds %struct.device, ptr %57, i32 0, i32 5
  %59 = load ptr, ptr %58, align 4
  %60 = load ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  %62 = select i1 %61, ptr @.str.10, ptr %60
  %63 = call ptr @strcpy(ptr noundef %55, ptr noundef nonnull %62)
  %64 = load i32, ptr %44, align 4
  %65 = and i32 %64, 65535
  %66 = getelementptr i8, ptr %27, i32 %65
  %67 = load ptr, ptr %56, align 4
  %68 = getelementptr inbounds %struct.device, ptr %67, i32 0, i32 3
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %29
  %72 = load ptr, ptr %67, align 4
  %73 = icmp eq ptr %72, null
  %74 = select i1 %73, ptr @.str.10, ptr %72
  br label %75

75:                                               ; preds = %71, %29
  %76 = phi ptr [ %69, %29 ], [ %74, %71 ]
  %77 = call ptr @strcpy(ptr noundef %66, ptr noundef nonnull %76)
  %78 = load i32, ptr %47, align 4
  %79 = and i32 %78, 65535
  %80 = getelementptr i8, ptr %27, i32 %79
  %81 = load ptr, ptr %56, align 4
  %82 = getelementptr inbounds %struct.device, ptr %81, i32 0, i32 6
  %83 = load ptr, ptr %82, align 8
  %84 = load ptr, ptr %83, align 4
  %85 = icmp eq ptr %84, null
  %86 = select i1 %85, ptr @.str.10, ptr %84
  %87 = call ptr @strcpy(ptr noundef %80, ptr noundef nonnull %86)
  %88 = load i32, ptr %50, align 4
  %89 = and i32 %88, 65535
  %90 = getelementptr i8, ptr %27, i32 %89
  %91 = icmp eq ptr %2, null
  %92 = select i1 %91, ptr @.str.10, ptr %2
  %93 = call ptr @strcpy(ptr noundef %90, ptr noundef %92)
  %94 = load i32, ptr %53, align 4
  %95 = and i32 %94, 65535
  %96 = getelementptr i8, ptr %27, i32 %95
  %97 = icmp eq ptr %3, null
  %98 = select i1 %97, ptr @.str.10, ptr %3
  %99 = call ptr @strcpy(ptr noundef %96, ptr noundef %98)
  %100 = load i32, ptr %7, align 4
  %101 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %27, i32 noundef %26, i32 noundef %100, ptr noundef %0, i64 noundef 1, ptr noundef %101, ptr noundef %16, ptr noundef null) #27
  br label %102

102:                                              ; preds = %75, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_devlink_health_recover_aborted(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i1 noundef zeroext %3, i64 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  %7 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %5
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #27
  br i1 %16, label %107, label %17

17:                                               ; preds = %15, %12, %5
  %18 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.device, ptr %19, i32 0, i32 5
  %21 = load ptr, ptr %20, align 4
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  %24 = select i1 %23, ptr @.str.10, ptr %22
  %25 = tail call i32 @strlen(ptr noundef nonnull %24) #27
  %26 = add i32 %25, 1
  %27 = shl i32 %26, 16
  %28 = or i32 %27, 40
  %29 = getelementptr inbounds %struct.device, ptr %19, i32 0, i32 3
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %17
  %33 = load ptr, ptr %19, align 4
  %34 = icmp eq ptr %33, null
  %35 = select i1 %34, ptr @.str.10, ptr %33
  br label %36

36:                                               ; preds = %32, %17
  %37 = phi ptr [ %30, %17 ], [ %35, %32 ]
  %38 = tail call i32 @strlen(ptr noundef nonnull %37) #27
  %39 = add i32 %38, 1
  %40 = getelementptr inbounds %struct.device, ptr %19, i32 0, i32 6
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  %44 = select i1 %43, ptr @.str.10, ptr %42
  %45 = add i32 %39, %26
  %46 = tail call i32 @strlen(ptr noundef nonnull %44) #27
  %47 = add i32 %46, 1
  %48 = add i32 %47, %45
  %49 = icmp eq ptr %2, null
  %50 = select i1 %49, ptr @.str.10, ptr %2
  %51 = tail call i32 @strlen(ptr noundef %50) #27
  %52 = add i32 %51, 1
  %53 = add i32 %48, 40
  %54 = add i32 %53, %52
  %55 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef %54) #27
  %56 = icmp eq ptr %55, null
  br i1 %56, label %107, label %57

57:                                               ; preds = %36
  %58 = shl i32 %52, 16
  %59 = or i32 %58, %53
  %60 = shl i32 %47, 16
  %61 = add i32 %45, 40
  %62 = or i32 %60, %61
  %63 = shl i32 %39, 16
  %64 = add i32 %25, 41
  %65 = or i32 %63, %64
  %66 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %55, i32 0, i32 1
  store i32 %28, ptr %66, align 8
  %67 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %55, i32 0, i32 2
  store i32 %65, ptr %67, align 4
  %68 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %55, i32 0, i32 3
  store i32 %62, ptr %68, align 8
  %69 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %55, i32 0, i32 4
  store i32 %59, ptr %69, align 4
  %70 = getelementptr i8, ptr %55, i32 40
  %71 = load ptr, ptr %18, align 4
  %72 = getelementptr inbounds %struct.device, ptr %71, i32 0, i32 5
  %73 = load ptr, ptr %72, align 4
  %74 = load ptr, ptr %73, align 4
  %75 = icmp eq ptr %74, null
  %76 = select i1 %75, ptr @.str.10, ptr %74
  %77 = call ptr @strcpy(ptr noundef %70, ptr noundef nonnull %76)
  %78 = and i32 %64, 65535
  %79 = getelementptr i8, ptr %55, i32 %78
  %80 = load ptr, ptr %18, align 4
  %81 = getelementptr inbounds %struct.device, ptr %80, i32 0, i32 3
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %57
  %85 = load ptr, ptr %80, align 4
  %86 = icmp eq ptr %85, null
  %87 = select i1 %86, ptr @.str.10, ptr %85
  br label %88

88:                                               ; preds = %84, %57
  %89 = phi ptr [ %82, %57 ], [ %87, %84 ]
  %90 = call ptr @strcpy(ptr noundef %79, ptr noundef nonnull %89)
  %91 = load i32, ptr %68, align 8
  %92 = and i32 %91, 65535
  %93 = getelementptr i8, ptr %55, i32 %92
  %94 = load ptr, ptr %18, align 4
  %95 = getelementptr inbounds %struct.device, ptr %94, i32 0, i32 6
  %96 = load ptr, ptr %95, align 8
  %97 = load ptr, ptr %96, align 4
  %98 = icmp eq ptr %97, null
  %99 = select i1 %98, ptr @.str.10, ptr %97
  %100 = call ptr @strcpy(ptr noundef %93, ptr noundef nonnull %99)
  %101 = load i32, ptr %69, align 4
  %102 = and i32 %101, 65535
  %103 = getelementptr i8, ptr %55, i32 %102
  %104 = call ptr @strcpy(ptr noundef %103, ptr noundef %50)
  %105 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %55, i32 0, i32 5
  store i8 %7, ptr %105, align 8
  %106 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %55, i32 0, i32 6
  store i64 %4, ptr %106, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #27
  br label %107

107:                                              ; preds = %88, %36, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_devlink_health_recover_aborted(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i1 noundef zeroext %3, i64 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  %8 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 0, ptr %7, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.device, ptr %10, i32 0, i32 5
  %12 = load ptr, ptr %11, align 4
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  %15 = select i1 %14, ptr @.str.10, ptr %13
  %16 = tail call i32 @strlen(ptr noundef nonnull %15) #27
  %17 = add i32 %16, 1
  %18 = shl i32 %17, 16
  %19 = or i32 %18, 40
  %20 = getelementptr inbounds %struct.device, ptr %10, i32 0, i32 3
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %5
  %24 = load ptr, ptr %10, align 4
  %25 = icmp eq ptr %24, null
  %26 = select i1 %25, ptr @.str.10, ptr %24
  br label %27

27:                                               ; preds = %23, %5
  %28 = phi ptr [ %21, %5 ], [ %26, %23 ]
  %29 = tail call i32 @strlen(ptr noundef nonnull %28) #27
  %30 = add i32 %29, 1
  %31 = add i32 %16, 41
  %32 = shl i32 %30, 16
  %33 = or i32 %32, %31
  %34 = getelementptr inbounds %struct.device, ptr %10, i32 0, i32 6
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  %38 = select i1 %37, ptr @.str.10, ptr %36
  %39 = add i32 %30, %17
  %40 = tail call i32 @strlen(ptr noundef nonnull %38) #27
  %41 = add i32 %40, 1
  %42 = add i32 %39, 40
  %43 = shl i32 %41, 16
  %44 = or i32 %43, %42
  %45 = add i32 %41, %39
  %46 = icmp eq ptr %2, null
  %47 = select i1 %46, ptr @.str.10, ptr %2
  %48 = tail call i32 @strlen(ptr noundef %47) #27
  %49 = add i32 %48, 1
  %50 = add i32 %45, 40
  %51 = shl i32 %49, 16
  %52 = or i32 %51, %50
  %53 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %54 = load ptr, ptr %53, align 4
  %55 = ptrtoint ptr %54 to i32
  %56 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %57 = inttoptr i32 %56 to ptr
  %58 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %57) #17, !srcloc !12
  %59 = add i32 %58, %55
  %60 = inttoptr i32 %59 to ptr
  %61 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %62 = load volatile ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %27
  %65 = load volatile ptr, ptr %60, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %64, %27
  %68 = add i32 %45, 51
  %69 = add i32 %68, %49
  %70 = and i32 %69, -8
  %71 = add i32 %70, -4
  %72 = call ptr @perf_trace_buf_alloc(i32 noundef %71, ptr noundef nonnull %6, ptr noundef nonnull %7) #27
  %73 = icmp eq ptr %72, null
  br i1 %73, label %128, label %74

74:                                               ; preds = %67
  %75 = load ptr, ptr %6, align 4
  %76 = call ptr @llvm.returnaddress(i32 0) #27
  %77 = ptrtoint ptr %76 to i32
  %78 = getelementptr [18 x i32], ptr %75, i32 0, i32 15
  store i32 %77, ptr %78, align 4
  %79 = call ptr @llvm.frameaddress.p0(i32 0) #27
  %80 = ptrtoint ptr %79 to i32
  %81 = getelementptr [18 x i32], ptr %75, i32 0, i32 11
  store i32 %80, ptr %81, align 4
  %82 = call i32 @llvm.read_register.i32(metadata !0) #27
  %83 = getelementptr [18 x i32], ptr %75, i32 0, i32 13
  store i32 %82, ptr %83, align 4
  %84 = getelementptr [18 x i32], ptr %75, i32 0, i32 16
  store i32 19, ptr %84, align 4
  %85 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %72, i32 0, i32 1
  store i32 %19, ptr %85, align 8
  %86 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %72, i32 0, i32 2
  store i32 %33, ptr %86, align 4
  %87 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %72, i32 0, i32 3
  store i32 %44, ptr %87, align 8
  %88 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %72, i32 0, i32 4
  store i32 %52, ptr %88, align 4
  %89 = getelementptr i8, ptr %72, i32 40
  %90 = load ptr, ptr %9, align 4
  %91 = getelementptr inbounds %struct.device, ptr %90, i32 0, i32 5
  %92 = load ptr, ptr %91, align 4
  %93 = load ptr, ptr %92, align 4
  %94 = icmp eq ptr %93, null
  %95 = select i1 %94, ptr @.str.10, ptr %93
  %96 = call ptr @strcpy(ptr noundef %89, ptr noundef nonnull %95)
  %97 = and i32 %31, 65535
  %98 = getelementptr i8, ptr %72, i32 %97
  %99 = load ptr, ptr %9, align 4
  %100 = getelementptr inbounds %struct.device, ptr %99, i32 0, i32 3
  %101 = load ptr, ptr %100, align 4
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %74
  %104 = load ptr, ptr %99, align 4
  %105 = icmp eq ptr %104, null
  %106 = select i1 %105, ptr @.str.10, ptr %104
  br label %107

107:                                              ; preds = %103, %74
  %108 = phi ptr [ %101, %74 ], [ %106, %103 ]
  %109 = call ptr @strcpy(ptr noundef %98, ptr noundef nonnull %108)
  %110 = load i32, ptr %87, align 8
  %111 = and i32 %110, 65535
  %112 = getelementptr i8, ptr %72, i32 %111
  %113 = load ptr, ptr %9, align 4
  %114 = getelementptr inbounds %struct.device, ptr %113, i32 0, i32 6
  %115 = load ptr, ptr %114, align 8
  %116 = load ptr, ptr %115, align 4
  %117 = icmp eq ptr %116, null
  %118 = select i1 %117, ptr @.str.10, ptr %116
  %119 = call ptr @strcpy(ptr noundef %112, ptr noundef nonnull %118)
  %120 = load i32, ptr %88, align 4
  %121 = and i32 %120, 65535
  %122 = getelementptr i8, ptr %72, i32 %121
  %123 = call ptr @strcpy(ptr noundef %122, ptr noundef %47)
  %124 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %72, i32 0, i32 5
  store i8 %8, ptr %124, align 8
  %125 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %72, i32 0, i32 6
  store i64 %4, ptr %125, align 8
  %126 = load i32, ptr %7, align 4
  %127 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %72, i32 noundef %71, i32 noundef %126, ptr noundef %0, i64 noundef 1, ptr noundef %127, ptr noundef %60, ptr noundef null) #27
  br label %128

128:                                              ; preds = %107, %67, %64
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_devlink_health_reporter_state_update(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i1 noundef zeroext %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  %6 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %4
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #27
  br i1 %15, label %106, label %16

16:                                               ; preds = %14, %11, %4
  %17 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 5
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  %23 = select i1 %22, ptr @.str.10, ptr %21
  %24 = tail call i32 @strlen(ptr noundef nonnull %23) #27
  %25 = add i32 %24, 1
  %26 = shl i32 %25, 16
  %27 = or i32 %26, 25
  %28 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 3
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %16
  %32 = load ptr, ptr %18, align 4
  %33 = icmp eq ptr %32, null
  %34 = select i1 %33, ptr @.str.10, ptr %32
  br label %35

35:                                               ; preds = %31, %16
  %36 = phi ptr [ %29, %16 ], [ %34, %31 ]
  %37 = tail call i32 @strlen(ptr noundef nonnull %36) #27
  %38 = add i32 %37, 1
  %39 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 6
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  %43 = select i1 %42, ptr @.str.10, ptr %41
  %44 = add i32 %38, %25
  %45 = tail call i32 @strlen(ptr noundef nonnull %43) #27
  %46 = add i32 %45, 1
  %47 = add i32 %46, %44
  %48 = icmp eq ptr %2, null
  %49 = select i1 %48, ptr @.str.10, ptr %2
  %50 = tail call i32 @strlen(ptr noundef %49) #27
  %51 = add i32 %50, 1
  %52 = add i32 %47, 28
  %53 = add i32 %52, %51
  %54 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef %53) #27
  %55 = icmp eq ptr %54, null
  br i1 %55, label %106, label %56

56:                                               ; preds = %35
  %57 = shl i32 %51, 16
  %58 = add i32 %47, 25
  %59 = or i32 %57, %58
  %60 = shl i32 %46, 16
  %61 = add i32 %44, 25
  %62 = or i32 %60, %61
  %63 = shl i32 %38, 16
  %64 = add i32 %24, 26
  %65 = or i32 %63, %64
  %66 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %54, i32 0, i32 1
  store i32 %27, ptr %66, align 4
  %67 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %54, i32 0, i32 2
  store i32 %65, ptr %67, align 4
  %68 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %54, i32 0, i32 3
  store i32 %62, ptr %68, align 4
  %69 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %54, i32 0, i32 4
  store i32 %59, ptr %69, align 4
  %70 = getelementptr i8, ptr %54, i32 25
  %71 = load ptr, ptr %17, align 4
  %72 = getelementptr inbounds %struct.device, ptr %71, i32 0, i32 5
  %73 = load ptr, ptr %72, align 4
  %74 = load ptr, ptr %73, align 4
  %75 = icmp eq ptr %74, null
  %76 = select i1 %75, ptr @.str.10, ptr %74
  %77 = call ptr @strcpy(ptr noundef %70, ptr noundef nonnull %76)
  %78 = and i32 %64, 65535
  %79 = getelementptr i8, ptr %54, i32 %78
  %80 = load ptr, ptr %17, align 4
  %81 = getelementptr inbounds %struct.device, ptr %80, i32 0, i32 3
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %56
  %85 = load ptr, ptr %80, align 4
  %86 = icmp eq ptr %85, null
  %87 = select i1 %86, ptr @.str.10, ptr %85
  br label %88

88:                                               ; preds = %84, %56
  %89 = phi ptr [ %82, %56 ], [ %87, %84 ]
  %90 = call ptr @strcpy(ptr noundef %79, ptr noundef nonnull %89)
  %91 = load i32, ptr %68, align 4
  %92 = and i32 %91, 65535
  %93 = getelementptr i8, ptr %54, i32 %92
  %94 = load ptr, ptr %17, align 4
  %95 = getelementptr inbounds %struct.device, ptr %94, i32 0, i32 6
  %96 = load ptr, ptr %95, align 8
  %97 = load ptr, ptr %96, align 4
  %98 = icmp eq ptr %97, null
  %99 = select i1 %98, ptr @.str.10, ptr %97
  %100 = call ptr @strcpy(ptr noundef %93, ptr noundef nonnull %99)
  %101 = load i32, ptr %69, align 4
  %102 = and i32 %101, 65535
  %103 = getelementptr i8, ptr %54, i32 %102
  %104 = call ptr @strcpy(ptr noundef %103, ptr noundef %49)
  %105 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %54, i32 0, i32 5
  store i8 %6, ptr %105, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #27
  br label %106

106:                                              ; preds = %88, %35, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_devlink_health_reporter_state_update(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i1 noundef zeroext %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  %7 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 0, ptr %6, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.device, ptr %9, i32 0, i32 5
  %11 = load ptr, ptr %10, align 4
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  %14 = select i1 %13, ptr @.str.10, ptr %12
  %15 = tail call i32 @strlen(ptr noundef nonnull %14) #27
  %16 = add i32 %15, 1
  %17 = shl i32 %16, 16
  %18 = or i32 %17, 25
  %19 = getelementptr inbounds %struct.device, ptr %9, i32 0, i32 3
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %4
  %23 = load ptr, ptr %9, align 4
  %24 = icmp eq ptr %23, null
  %25 = select i1 %24, ptr @.str.10, ptr %23
  br label %26

26:                                               ; preds = %22, %4
  %27 = phi ptr [ %20, %4 ], [ %25, %22 ]
  %28 = tail call i32 @strlen(ptr noundef nonnull %27) #27
  %29 = add i32 %28, 1
  %30 = add i32 %15, 26
  %31 = shl i32 %29, 16
  %32 = or i32 %31, %30
  %33 = getelementptr inbounds %struct.device, ptr %9, i32 0, i32 6
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  %37 = select i1 %36, ptr @.str.10, ptr %35
  %38 = add i32 %29, %16
  %39 = tail call i32 @strlen(ptr noundef nonnull %37) #27
  %40 = add i32 %39, 1
  %41 = add i32 %38, 25
  %42 = shl i32 %40, 16
  %43 = or i32 %42, %41
  %44 = add i32 %40, %38
  %45 = icmp eq ptr %2, null
  %46 = select i1 %45, ptr @.str.10, ptr %2
  %47 = tail call i32 @strlen(ptr noundef %46) #27
  %48 = add i32 %47, 1
  %49 = add i32 %44, 25
  %50 = shl i32 %48, 16
  %51 = or i32 %50, %49
  %52 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %53 = load ptr, ptr %52, align 4
  %54 = ptrtoint ptr %53 to i32
  %55 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %56 = inttoptr i32 %55 to ptr
  %57 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %56) #17, !srcloc !12
  %58 = add i32 %57, %54
  %59 = inttoptr i32 %58 to ptr
  %60 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %61 = load volatile ptr, ptr %60, align 4
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %66

63:                                               ; preds = %26
  %64 = load volatile ptr, ptr %59, align 4
  %65 = icmp eq ptr %64, null
  br i1 %65, label %126, label %66

66:                                               ; preds = %63, %26
  %67 = add i32 %44, 39
  %68 = add i32 %67, %48
  %69 = and i32 %68, -8
  %70 = add i32 %69, -4
  %71 = call ptr @perf_trace_buf_alloc(i32 noundef %70, ptr noundef nonnull %5, ptr noundef nonnull %6) #27
  %72 = icmp eq ptr %71, null
  br i1 %72, label %126, label %73

73:                                               ; preds = %66
  %74 = load ptr, ptr %5, align 4
  %75 = call ptr @llvm.returnaddress(i32 0) #27
  %76 = ptrtoint ptr %75 to i32
  %77 = getelementptr [18 x i32], ptr %74, i32 0, i32 15
  store i32 %76, ptr %77, align 4
  %78 = call ptr @llvm.frameaddress.p0(i32 0) #27
  %79 = ptrtoint ptr %78 to i32
  %80 = getelementptr [18 x i32], ptr %74, i32 0, i32 11
  store i32 %79, ptr %80, align 4
  %81 = call i32 @llvm.read_register.i32(metadata !0) #27
  %82 = getelementptr [18 x i32], ptr %74, i32 0, i32 13
  store i32 %81, ptr %82, align 4
  %83 = getelementptr [18 x i32], ptr %74, i32 0, i32 16
  store i32 19, ptr %83, align 4
  %84 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %71, i32 0, i32 1
  store i32 %18, ptr %84, align 4
  %85 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %71, i32 0, i32 2
  store i32 %32, ptr %85, align 4
  %86 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %71, i32 0, i32 3
  store i32 %43, ptr %86, align 4
  %87 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %71, i32 0, i32 4
  store i32 %51, ptr %87, align 4
  %88 = getelementptr i8, ptr %71, i32 25
  %89 = load ptr, ptr %8, align 4
  %90 = getelementptr inbounds %struct.device, ptr %89, i32 0, i32 5
  %91 = load ptr, ptr %90, align 4
  %92 = load ptr, ptr %91, align 4
  %93 = icmp eq ptr %92, null
  %94 = select i1 %93, ptr @.str.10, ptr %92
  %95 = call ptr @strcpy(ptr noundef %88, ptr noundef nonnull %94)
  %96 = and i32 %30, 65535
  %97 = getelementptr i8, ptr %71, i32 %96
  %98 = load ptr, ptr %8, align 4
  %99 = getelementptr inbounds %struct.device, ptr %98, i32 0, i32 3
  %100 = load ptr, ptr %99, align 4
  %101 = icmp eq ptr %100, null
  br i1 %101, label %102, label %106

102:                                              ; preds = %73
  %103 = load ptr, ptr %98, align 4
  %104 = icmp eq ptr %103, null
  %105 = select i1 %104, ptr @.str.10, ptr %103
  br label %106

106:                                              ; preds = %102, %73
  %107 = phi ptr [ %100, %73 ], [ %105, %102 ]
  %108 = call ptr @strcpy(ptr noundef %97, ptr noundef nonnull %107)
  %109 = load i32, ptr %86, align 4
  %110 = and i32 %109, 65535
  %111 = getelementptr i8, ptr %71, i32 %110
  %112 = load ptr, ptr %8, align 4
  %113 = getelementptr inbounds %struct.device, ptr %112, i32 0, i32 6
  %114 = load ptr, ptr %113, align 8
  %115 = load ptr, ptr %114, align 4
  %116 = icmp eq ptr %115, null
  %117 = select i1 %116, ptr @.str.10, ptr %115
  %118 = call ptr @strcpy(ptr noundef %111, ptr noundef nonnull %117)
  %119 = load i32, ptr %87, align 4
  %120 = and i32 %119, 65535
  %121 = getelementptr i8, ptr %71, i32 %120
  %122 = call ptr @strcpy(ptr noundef %121, ptr noundef %46)
  %123 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %71, i32 0, i32 5
  store i8 %7, ptr %123, align 4
  %124 = load i32, ptr %6, align 4
  %125 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %71, i32 noundef %70, i32 noundef %124, ptr noundef %0, i64 noundef 1, ptr noundef %125, ptr noundef %59, ptr noundef null) #27
  br label %126

126:                                              ; preds = %106, %66, %63
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_devlink_trap_report(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3) #0 {
  %5 = alloca %struct.trace_event_data_offsets_devlink_trap_report, align 4
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %4
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #27
  br i1 %15, label %96, label %16

16:                                               ; preds = %14, %11, %4
  %17 = call fastcc i32 @trace_event_get_offsets_devlink_trap_report(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %3)
  %18 = add i32 %17, 32
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef %18) #27
  %20 = icmp eq ptr %19, null
  br i1 %20, label %96, label %21

21:                                               ; preds = %16
  %22 = load i32, ptr %5, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %19, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 1
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %19, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 2
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %19, i32 0, i32 3
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 3
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %19, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 4
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %19, i32 0, i32 5
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 5
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %19, i32 0, i32 6
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %3, i32 0, i32 2
  %40 = load ptr, ptr %39, align 4
  %41 = and i32 %22, 65535
  %42 = getelementptr i8, ptr %19, i32 %41
  %43 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.device, ptr %44, i32 0, i32 5
  %46 = load ptr, ptr %45, align 4
  %47 = load ptr, ptr %46, align 4
  %48 = icmp eq ptr %47, null
  %49 = select i1 %48, ptr @.str.10, ptr %47
  %50 = call ptr @strcpy(ptr noundef %42, ptr noundef nonnull %49)
  %51 = load i32, ptr %26, align 4
  %52 = and i32 %51, 65535
  %53 = getelementptr i8, ptr %19, i32 %52
  %54 = load ptr, ptr %43, align 4
  %55 = getelementptr inbounds %struct.device, ptr %54, i32 0, i32 3
  %56 = load ptr, ptr %55, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %21
  %59 = load ptr, ptr %54, align 4
  %60 = icmp eq ptr %59, null
  %61 = select i1 %60, ptr @.str.10, ptr %59
  br label %62

62:                                               ; preds = %58, %21
  %63 = phi ptr [ %56, %21 ], [ %61, %58 ]
  %64 = call ptr @strcpy(ptr noundef %53, ptr noundef nonnull %63)
  %65 = load i32, ptr %29, align 4
  %66 = and i32 %65, 65535
  %67 = getelementptr i8, ptr %19, i32 %66
  %68 = load ptr, ptr %43, align 4
  %69 = getelementptr inbounds %struct.device, ptr %68, i32 0, i32 6
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, null
  %73 = select i1 %72, ptr @.str.10, ptr %71
  %74 = call ptr @strcpy(ptr noundef %67, ptr noundef nonnull %73)
  %75 = load i32, ptr %32, align 4
  %76 = and i32 %75, 65535
  %77 = getelementptr i8, ptr %19, i32 %76
  %78 = load ptr, ptr %3, align 4
  %79 = icmp eq ptr %78, null
  %80 = select i1 %79, ptr @.str.10, ptr %78
  %81 = call ptr @strcpy(ptr noundef %77, ptr noundef nonnull %80)
  %82 = load i32, ptr %35, align 4
  %83 = and i32 %82, 65535
  %84 = getelementptr i8, ptr %19, i32 %83
  %85 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %3, i32 0, i32 1
  %86 = load ptr, ptr %85, align 4
  %87 = icmp eq ptr %86, null
  %88 = select i1 %87, ptr @.str.10, ptr %86
  %89 = call ptr @strcpy(ptr noundef %84, ptr noundef nonnull %88)
  %90 = load i32, ptr %38, align 4
  %91 = and i32 %90, 65535
  %92 = getelementptr i8, ptr %19, i32 %91
  %93 = icmp eq ptr %40, null
  %94 = select i1 %93, ptr @.str.37, ptr %40
  %95 = call ptr @strcpy(ptr noundef %92, ptr noundef %94)
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #27
  br label %96

96:                                               ; preds = %62, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_devlink_trap_report(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3) #0 {
  %5 = alloca %struct.trace_event_data_offsets_devlink_trap_report, align 4
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = call fastcc i32 @trace_event_get_offsets_devlink_trap_report(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %3)
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #17, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %116, label %23

23:                                               ; preds = %20, %4
  %24 = add i32 %8, 43
  %25 = and i32 %24, -8
  %26 = add i32 %25, -4
  %27 = call ptr @perf_trace_buf_alloc(i32 noundef %26, ptr noundef nonnull %6, ptr noundef nonnull %7) #27
  %28 = icmp eq ptr %27, null
  br i1 %28, label %116, label %29

29:                                               ; preds = %23
  %30 = load ptr, ptr %6, align 4
  %31 = call ptr @llvm.returnaddress(i32 0) #27
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %30, i32 0, i32 15
  store i32 %32, ptr %33, align 4
  %34 = call ptr @llvm.frameaddress.p0(i32 0) #27
  %35 = ptrtoint ptr %34 to i32
  %36 = getelementptr [18 x i32], ptr %30, i32 0, i32 11
  store i32 %35, ptr %36, align 4
  %37 = call i32 @llvm.read_register.i32(metadata !0) #27
  %38 = getelementptr [18 x i32], ptr %30, i32 0, i32 13
  store i32 %37, ptr %38, align 4
  %39 = getelementptr [18 x i32], ptr %30, i32 0, i32 16
  store i32 19, ptr %39, align 4
  %40 = load i32, ptr %5, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %27, i32 0, i32 1
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %27, i32 0, i32 2
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 2
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %27, i32 0, i32 3
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 3
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %27, i32 0, i32 4
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 4
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %27, i32 0, i32 5
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %5, i32 0, i32 5
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %27, i32 0, i32 6
  store i32 %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %3, i32 0, i32 2
  %58 = load ptr, ptr %57, align 4
  %59 = and i32 %40, 65535
  %60 = getelementptr i8, ptr %27, i32 %59
  %61 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %62 = load ptr, ptr %61, align 4
  %63 = getelementptr inbounds %struct.device, ptr %62, i32 0, i32 5
  %64 = load ptr, ptr %63, align 4
  %65 = load ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, null
  %67 = select i1 %66, ptr @.str.10, ptr %65
  %68 = call ptr @strcpy(ptr noundef %60, ptr noundef nonnull %67)
  %69 = load i32, ptr %44, align 4
  %70 = and i32 %69, 65535
  %71 = getelementptr i8, ptr %27, i32 %70
  %72 = load ptr, ptr %61, align 4
  %73 = getelementptr inbounds %struct.device, ptr %72, i32 0, i32 3
  %74 = load ptr, ptr %73, align 4
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %29
  %77 = load ptr, ptr %72, align 4
  %78 = icmp eq ptr %77, null
  %79 = select i1 %78, ptr @.str.10, ptr %77
  br label %80

80:                                               ; preds = %76, %29
  %81 = phi ptr [ %74, %29 ], [ %79, %76 ]
  %82 = call ptr @strcpy(ptr noundef %71, ptr noundef nonnull %81)
  %83 = load i32, ptr %47, align 4
  %84 = and i32 %83, 65535
  %85 = getelementptr i8, ptr %27, i32 %84
  %86 = load ptr, ptr %61, align 4
  %87 = getelementptr inbounds %struct.device, ptr %86, i32 0, i32 6
  %88 = load ptr, ptr %87, align 8
  %89 = load ptr, ptr %88, align 4
  %90 = icmp eq ptr %89, null
  %91 = select i1 %90, ptr @.str.10, ptr %89
  %92 = call ptr @strcpy(ptr noundef %85, ptr noundef nonnull %91)
  %93 = load i32, ptr %50, align 4
  %94 = and i32 %93, 65535
  %95 = getelementptr i8, ptr %27, i32 %94
  %96 = load ptr, ptr %3, align 4
  %97 = icmp eq ptr %96, null
  %98 = select i1 %97, ptr @.str.10, ptr %96
  %99 = call ptr @strcpy(ptr noundef %95, ptr noundef nonnull %98)
  %100 = load i32, ptr %53, align 4
  %101 = and i32 %100, 65535
  %102 = getelementptr i8, ptr %27, i32 %101
  %103 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %3, i32 0, i32 1
  %104 = load ptr, ptr %103, align 4
  %105 = icmp eq ptr %104, null
  %106 = select i1 %105, ptr @.str.10, ptr %104
  %107 = call ptr @strcpy(ptr noundef %102, ptr noundef nonnull %106)
  %108 = load i32, ptr %56, align 4
  %109 = and i32 %108, 65535
  %110 = getelementptr i8, ptr %27, i32 %109
  %111 = icmp eq ptr %58, null
  %112 = select i1 %111, ptr @.str.37, ptr %58
  %113 = call ptr @strcpy(ptr noundef %110, ptr noundef %112)
  %114 = load i32, ptr %7, align 4
  %115 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %27, i32 noundef %26, i32 noundef %114, ptr noundef %0, i64 noundef 1, ptr noundef %115, ptr noundef %16, ptr noundef null) #27
  br label %116

116:                                              ; preds = %80, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local ptr @devlink_priv(ptr noundef readnone %0) #3 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 25
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local ptr @priv_to_devlink(ptr noundef readnone %0) #3 {
  %2 = getelementptr i8, ptr %0, i32 -256
  ret ptr %2
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @devlink_to_dev(ptr nocapture noundef readonly %0) #4 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 18
  %3 = load ptr, ptr %2, align 4
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @devlink_net(ptr nocapture noundef readnone %0) #3 {
  ret ptr @init_net
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_put(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #27, !srcloc !14
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 1, ptr elementtype(i32) %2) #27, !srcloc !15
  %4 = extractvalue { i32, i32, i32 } %3, 0
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %11, label %8, !prof !10

8:                                                ; preds = %6
  tail call void @refcount_warn_saturate(ptr noundef %2, i32 noundef 3) #27
  br label %11

9:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %10 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 23
  tail call void @complete(ptr noundef %10) #27
  br label %11

11:                                               ; preds = %9, %8, %6
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @devlink_try_get(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 22
  %3 = load volatile i32, ptr %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %15, %1
  %6 = phi i32 [ %13, %15 ], [ %3, %1 ]
  %7 = add i32 %6, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #27, !srcloc !14
  br label %8

8:                                                ; preds = %8, %5
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 %6, i32 %7, ptr elementtype(i32) %2) #27, !srcloc !17
  %10 = extractvalue { i32, i32 } %9, 0
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %8

12:                                               ; preds = %8
  %13 = extractvalue { i32, i32 } %9, 1
  %14 = icmp eq i32 %13, %6
  br i1 %14, label %17, label %15, !prof !10

15:                                               ; preds = %12
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %17, label %5

17:                                               ; preds = %15, %12, %1
  %18 = phi i32 [ 0, %1 ], [ 0, %15 ], [ %6, %12 ]
  %19 = add i32 %18, 1
  %20 = or i32 %19, %18
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %23, label %22, !prof !10

22:                                               ; preds = %17
  tail call void @refcount_warn_saturate(ptr noundef %2, i32 noundef 0) #27
  br label %23

23:                                               ; preds = %22, %17
  %24 = icmp eq i32 %18, 0
  %25 = select i1 %24, ptr null, ptr %0
  ret ptr %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_dpipe_match_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.devlink_dpipe_match, ptr %1, i32 0, i32 2
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %9, i32 0, i32 2
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_dpipe_match, ptr %1, i32 0, i32 3
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %15 = load ptr, ptr %14, align 8
  %16 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 40, i32 noundef 0, ptr noundef null) #27
  %17 = icmp slt i32 %16, 0
  %18 = icmp eq ptr %15, null
  %19 = select i1 %17, i1 true, i1 %18
  br i1 %19, label %61, label %20

20:                                               ; preds = %2
  %21 = load i32, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 %21, ptr %7, align 4
  %22 = call i32 @nla_put(ptr noundef %0, i32 noundef 42, i32 noundef 4, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %50

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.devlink_dpipe_match, ptr %1, i32 0, i32 1
  %26 = load i32, ptr %25, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 %26, ptr %6, align 4
  %27 = call i32 @nla_put(ptr noundef %0, i32 noundef 55, i32 noundef 4, ptr noundef nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %50

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %9, i32 0, i32 1
  %31 = load i32, ptr %30, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store i32 %31, ptr %5, align 4
  %32 = call i32 @nla_put(ptr noundef %0, i32 noundef 52, i32 noundef 4, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %29
  %35 = getelementptr %struct.devlink_dpipe_field, ptr %11, i32 %13, i32 1
  %36 = load i32, ptr %35, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %36, ptr %4, align 4
  %37 = call i32 @nla_put(ptr noundef %0, i32 noundef 58, i32 noundef 4, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %9, i32 0, i32 4
  %41 = load i8, ptr %40, align 4, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #27
  store i8 %41, ptr %3, align 1
  %42 = call i32 @nla_put(ptr noundef %0, i32 noundef 54, i32 noundef 1, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %39
  %45 = load ptr, ptr %14, align 8
  %46 = ptrtoint ptr %45 to i32
  %47 = ptrtoint ptr %15 to i32
  %48 = sub i32 %46, %47
  %49 = trunc i32 %48 to i16
  store i16 %49, ptr %15, align 2
  br label %61

50:                                               ; preds = %39, %34, %29, %24, %20
  %51 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %52 = load ptr, ptr %51, align 4
  %53 = icmp ugt ptr %52, %15
  br i1 %53, label %54, label %56, !prof !11

54:                                               ; preds = %50
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %55 = load ptr, ptr %51, align 4
  br label %56

56:                                               ; preds = %54, %50
  %57 = phi ptr [ %55, %54 ], [ %52, %50 ]
  %58 = ptrtoint ptr %15 to i32
  %59 = ptrtoint ptr %57 to i32
  %60 = sub i32 %58, %59
  call void @skb_trim(ptr noundef %0, i32 noundef %60) #27
  br label %61

61:                                               ; preds = %56, %44, %2
  %62 = phi i32 [ -90, %56 ], [ 0, %44 ], [ -90, %2 ]
  ret i32 %62
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @nla_nest_cancel(ptr noundef %0, ptr noundef %1) unnamed_addr #5 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %6 = load ptr, ptr %5, align 4
  %7 = icmp ugt ptr %6, %1
  br i1 %7, label %8, label %10, !prof !11

8:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %9 = load ptr, ptr %5, align 4
  br label %10

10:                                               ; preds = %8, %4
  %11 = phi ptr [ %9, %8 ], [ %6, %4 ]
  %12 = ptrtoint ptr %1 to i32
  %13 = ptrtoint ptr %11 to i32
  %14 = sub i32 %12, %13
  tail call void @skb_trim(ptr noundef %0, i32 noundef %14) #27
  br label %15

15:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_dpipe_action_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.devlink_dpipe_action, ptr %1, i32 0, i32 2
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %9, i32 0, i32 2
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_dpipe_action, ptr %1, i32 0, i32 3
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %15 = load ptr, ptr %14, align 8
  %16 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 43, i32 noundef 0, ptr noundef null) #27
  %17 = icmp slt i32 %16, 0
  %18 = icmp eq ptr %15, null
  %19 = select i1 %17, i1 true, i1 %18
  br i1 %19, label %61, label %20

20:                                               ; preds = %2
  %21 = load i32, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 %21, ptr %7, align 4
  %22 = call i32 @nla_put(ptr noundef %0, i32 noundef 45, i32 noundef 4, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %50

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.devlink_dpipe_action, ptr %1, i32 0, i32 1
  %26 = load i32, ptr %25, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 %26, ptr %6, align 4
  %27 = call i32 @nla_put(ptr noundef %0, i32 noundef 55, i32 noundef 4, ptr noundef nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %50

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %9, i32 0, i32 1
  %31 = load i32, ptr %30, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store i32 %31, ptr %5, align 4
  %32 = call i32 @nla_put(ptr noundef %0, i32 noundef 52, i32 noundef 4, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %29
  %35 = getelementptr %struct.devlink_dpipe_field, ptr %11, i32 %13, i32 1
  %36 = load i32, ptr %35, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %36, ptr %4, align 4
  %37 = call i32 @nla_put(ptr noundef %0, i32 noundef 58, i32 noundef 4, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %9, i32 0, i32 4
  %41 = load i8, ptr %40, align 4, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #27
  store i8 %41, ptr %3, align 1
  %42 = call i32 @nla_put(ptr noundef %0, i32 noundef 54, i32 noundef 1, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %39
  %45 = load ptr, ptr %14, align 8
  %46 = ptrtoint ptr %45 to i32
  %47 = ptrtoint ptr %15 to i32
  %48 = sub i32 %46, %47
  %49 = trunc i32 %48 to i16
  store i16 %49, ptr %15, align 2
  br label %61

50:                                               ; preds = %39, %34, %29, %24, %20
  %51 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %52 = load ptr, ptr %51, align 4
  %53 = icmp ugt ptr %52, %15
  br i1 %53, label %54, label %56, !prof !11

54:                                               ; preds = %50
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %55 = load ptr, ptr %51, align 4
  br label %56

56:                                               ; preds = %54, %50
  %57 = phi ptr [ %55, %54 ], [ %52, %50 ]
  %58 = ptrtoint ptr %15 to i32
  %59 = ptrtoint ptr %57 to i32
  %60 = sub i32 %58, %59
  call void @skb_trim(ptr noundef %0, i32 noundef %60) #27
  br label %61

61:                                               ; preds = %56, %44, %2
  %62 = phi i32 [ -90, %56 ], [ 0, %44 ], [ -90, %2 ]
  ret i32 %62
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_dpipe_entry_ctx_prepare(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 2
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %0, align 4
  %7 = getelementptr inbounds %struct.genl_info, ptr %6, i32 0, i32 1
  %8 = load i32, ptr %7, align 4
  %9 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %10 = tail call i32 @netlink_unicast(ptr noundef %9, ptr noundef nonnull %3, i32 noundef %8, i32 noundef 64) #27
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %64

12:                                               ; preds = %5, %1
  %13 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  store ptr %13, ptr %2, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %64, label %15

15:                                               ; preds = %12
  %16 = load ptr, ptr %0, align 4
  %17 = getelementptr inbounds %struct.genl_info, ptr %16, i32 0, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = load i32, ptr %16, align 4
  %20 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 1
  %21 = load i32, ptr %20, align 4
  %22 = trunc i32 %21 to i8
  %23 = tail call ptr @genlmsg_put(ptr noundef nonnull %13, i32 noundef %18, i32 noundef %19, ptr noundef nonnull @devlink_nl_family, i32 noundef 2, i8 noundef zeroext %22) #27
  %24 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 4
  store ptr %23, ptr %24, align 4
  %25 = icmp eq ptr %23, null
  br i1 %25, label %62, label %26

26:                                               ; preds = %15
  %27 = load ptr, ptr %0, align 4
  %28 = getelementptr inbounds %struct.genl_info, ptr %27, i32 0, i32 7
  %29 = load ptr, ptr %28, align 4
  %30 = load ptr, ptr %2, align 4
  %31 = getelementptr inbounds %struct.devlink, ptr %29, i32 0, i32 18
  %32 = load ptr, ptr %31, align 4
  %33 = getelementptr inbounds %struct.device, ptr %32, i32 0, i32 5
  %34 = load ptr, ptr %33, align 4
  %35 = load ptr, ptr %34, align 4
  %36 = tail call i32 @strlen(ptr noundef %35) #27
  %37 = add i32 %36, 1
  %38 = tail call i32 @nla_put(ptr noundef %30, i32 noundef 1, i32 noundef %37, ptr noundef %35) #27
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %62

40:                                               ; preds = %26
  %41 = load ptr, ptr %31, align 4
  %42 = getelementptr inbounds %struct.device, ptr %41, i32 0, i32 3
  %43 = load ptr, ptr %42, align 4
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = load ptr, ptr %41, align 4
  br label %47

47:                                               ; preds = %45, %40
  %48 = phi ptr [ %46, %45 ], [ %43, %40 ]
  %49 = tail call i32 @strlen(ptr noundef %48) #27
  %50 = add i32 %49, 1
  %51 = tail call i32 @nla_put(ptr noundef %30, i32 noundef 2, i32 noundef %50, ptr noundef %48) #27
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %62

53:                                               ; preds = %47
  %54 = load ptr, ptr %2, align 4
  %55 = getelementptr inbounds %struct.sk_buff, ptr %54, i32 0, i32 14
  %56 = load ptr, ptr %55, align 8
  %57 = tail call i32 @nla_put(ptr noundef %54, i32 noundef 34, i32 noundef 0, ptr noundef null) #27
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, ptr null, ptr %56
  %60 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 3
  store ptr %59, ptr %60, align 4
  %61 = icmp eq ptr %59, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %53, %47, %26, %15
  %63 = load ptr, ptr %2, align 4
  tail call void @kfree_skb_reason(ptr noundef %63, i32 noundef 0) #27
  br label %64

64:                                               ; preds = %62, %53, %12, %5
  %65 = phi i32 [ -90, %62 ], [ 0, %53 ], [ -12, %12 ], [ %10, %5 ]
  ret i32 %65
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @genlmsg_put(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_dpipe_entry_ctx_append(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 2
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 14
  %10 = load ptr, ptr %9, align 8
  %11 = tail call i32 @nla_put(ptr noundef %8, i32 noundef 35, i32 noundef 0, ptr noundef null) #27
  %12 = icmp slt i32 %11, 0
  %13 = icmp eq ptr %10, null
  %14 = select i1 %12, i1 true, i1 %13
  br i1 %14, label %218, label %15

15:                                               ; preds = %2
  %16 = load i64, ptr %1, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 %16, ptr %6, align 8
  %17 = call i32 @nla_put_64bit(ptr noundef %8, i32 noundef 36, i32 noundef 8, ptr noundef nonnull %6, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %206

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %1, i32 0, i32 6
  %21 = load i8, ptr %20, align 8, !range !18
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %1, i32 0, i32 5
  %25 = load i64, ptr %24, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 %25, ptr %5, align 8
  %26 = call i32 @nla_put_64bit(ptr noundef %8, i32 noundef 39, i32 noundef 8, ptr noundef nonnull %5, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %206

28:                                               ; preds = %23, %19
  %29 = load ptr, ptr %9, align 8
  %30 = call i32 @nla_put(ptr noundef %8, i32 noundef 37, i32 noundef 0, ptr noundef null) #27
  %31 = icmp slt i32 %30, 0
  %32 = icmp eq ptr %29, null
  %33 = select i1 %31, i1 true, i1 %32
  br i1 %33, label %206, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %1, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %1, i32 0, i32 2
  %38 = load i32, ptr %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %103, label %40

40:                                               ; preds = %78, %34
  %41 = phi i32 [ %84, %78 ], [ 0, %34 ]
  %42 = load ptr, ptr %9, align 8
  %43 = call i32 @nla_put(ptr noundef %8, i32 noundef 41, i32 noundef 0, ptr noundef null) #27
  %44 = icmp slt i32 %43, 0
  %45 = icmp eq ptr %42, null
  %46 = select i1 %44, i1 true, i1 %45
  br i1 %46, label %98, label %47

47:                                               ; preds = %40
  %48 = getelementptr %struct.devlink_dpipe_value, ptr %36, i32 %41
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %86, label %51

51:                                               ; preds = %47
  %52 = call i32 @devlink_dpipe_match_put(ptr noundef %8, ptr noundef nonnull %49) #27
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %86

54:                                               ; preds = %51
  %55 = getelementptr %struct.devlink_dpipe_value, ptr %36, i32 %41, i32 3
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr %struct.devlink_dpipe_value, ptr %36, i32 %41, i32 4
  %58 = load ptr, ptr %57, align 4
  %59 = call i32 @nla_put(ptr noundef %8, i32 noundef 46, i32 noundef %56, ptr noundef %58) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %86

61:                                               ; preds = %54
  %62 = getelementptr %struct.devlink_dpipe_value, ptr %36, i32 %41, i32 5
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = load i32, ptr %55, align 4
  %67 = call i32 @nla_put(ptr noundef %8, i32 noundef 47, i32 noundef %66, ptr noundef nonnull %63) #27
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %86

69:                                               ; preds = %65, %61
  %70 = getelementptr %struct.devlink_dpipe_value, ptr %36, i32 %41, i32 2
  %71 = load i8, ptr %70, align 4, !range !18
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = getelementptr %struct.devlink_dpipe_value, ptr %36, i32 %41, i32 1
  %75 = load i32, ptr %74, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %75, ptr %4, align 4
  %76 = call i32 @nla_put(ptr noundef %8, i32 noundef 48, i32 noundef 4, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %86

78:                                               ; preds = %73, %69
  %79 = load ptr, ptr %9, align 8
  %80 = ptrtoint ptr %79 to i32
  %81 = ptrtoint ptr %42 to i32
  %82 = sub i32 %80, %81
  %83 = trunc i32 %82 to i16
  store i16 %83, ptr %42, align 2
  %84 = add nuw i32 %41, 1
  %85 = icmp eq i32 %84, %38
  br i1 %85, label %103, label %40

86:                                               ; preds = %73, %65, %54, %51, %47
  %87 = phi i32 [ -90, %51 ], [ -22, %47 ], [ -90, %73 ], [ -90, %65 ], [ -90, %54 ]
  %88 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %89 = load ptr, ptr %88, align 4
  %90 = icmp ugt ptr %89, %42
  br i1 %90, label %91, label %93, !prof !11

91:                                               ; preds = %86
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %92 = load ptr, ptr %88, align 4
  br label %93

93:                                               ; preds = %91, %86
  %94 = phi ptr [ %92, %91 ], [ %89, %86 ]
  %95 = ptrtoint ptr %42 to i32
  %96 = ptrtoint ptr %94 to i32
  %97 = sub i32 %95, %96
  call void @skb_trim(ptr noundef %8, i32 noundef %97) #27
  br label %98

98:                                               ; preds = %93, %40
  %99 = phi i32 [ %87, %93 ], [ -90, %40 ]
  %100 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %101 = load ptr, ptr %100, align 4
  %102 = icmp ugt ptr %101, %29
  br i1 %102, label %194, label %199, !prof !11

103:                                              ; preds = %78, %34
  %104 = load ptr, ptr %9, align 8
  %105 = ptrtoint ptr %104 to i32
  %106 = ptrtoint ptr %29 to i32
  %107 = sub i32 %105, %106
  %108 = trunc i32 %107 to i16
  store i16 %108, ptr %29, align 2
  %109 = load ptr, ptr %9, align 8
  %110 = call i32 @nla_put(ptr noundef %8, i32 noundef 38, i32 noundef 0, ptr noundef null) #27
  %111 = icmp slt i32 %110, 0
  %112 = icmp eq ptr %109, null
  %113 = select i1 %111, i1 true, i1 %112
  br i1 %113, label %206, label %114

114:                                              ; preds = %103
  %115 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %1, i32 0, i32 3
  %116 = load ptr, ptr %115, align 8
  %117 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %1, i32 0, i32 4
  %118 = load i32, ptr %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %183, label %120

120:                                              ; preds = %158, %114
  %121 = phi i32 [ %164, %158 ], [ 0, %114 ]
  %122 = load ptr, ptr %9, align 8
  %123 = call i32 @nla_put(ptr noundef %8, i32 noundef 44, i32 noundef 0, ptr noundef null) #27
  %124 = icmp slt i32 %123, 0
  %125 = icmp eq ptr %122, null
  %126 = select i1 %124, i1 true, i1 %125
  br i1 %126, label %178, label %127

127:                                              ; preds = %120
  %128 = getelementptr %struct.devlink_dpipe_value, ptr %116, i32 %121
  %129 = load ptr, ptr %128, align 4
  %130 = icmp eq ptr %129, null
  br i1 %130, label %166, label %131

131:                                              ; preds = %127
  %132 = call i32 @devlink_dpipe_action_put(ptr noundef %8, ptr noundef nonnull %129) #27
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %166

134:                                              ; preds = %131
  %135 = getelementptr %struct.devlink_dpipe_value, ptr %116, i32 %121, i32 3
  %136 = load i32, ptr %135, align 4
  %137 = getelementptr %struct.devlink_dpipe_value, ptr %116, i32 %121, i32 4
  %138 = load ptr, ptr %137, align 4
  %139 = call i32 @nla_put(ptr noundef %8, i32 noundef 46, i32 noundef %136, ptr noundef %138) #27
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %166

141:                                              ; preds = %134
  %142 = getelementptr %struct.devlink_dpipe_value, ptr %116, i32 %121, i32 5
  %143 = load ptr, ptr %142, align 4
  %144 = icmp eq ptr %143, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = load i32, ptr %135, align 4
  %147 = call i32 @nla_put(ptr noundef %8, i32 noundef 47, i32 noundef %146, ptr noundef nonnull %143) #27
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %166

149:                                              ; preds = %145, %141
  %150 = getelementptr %struct.devlink_dpipe_value, ptr %116, i32 %121, i32 2
  %151 = load i8, ptr %150, align 4, !range !18
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = getelementptr %struct.devlink_dpipe_value, ptr %116, i32 %121, i32 1
  %155 = load i32, ptr %154, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 %155, ptr %3, align 4
  %156 = call i32 @nla_put(ptr noundef %8, i32 noundef 48, i32 noundef 4, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %166

158:                                              ; preds = %153, %149
  %159 = load ptr, ptr %9, align 8
  %160 = ptrtoint ptr %159 to i32
  %161 = ptrtoint ptr %122 to i32
  %162 = sub i32 %160, %161
  %163 = trunc i32 %162 to i16
  store i16 %163, ptr %122, align 2
  %164 = add nuw i32 %121, 1
  %165 = icmp eq i32 %164, %118
  br i1 %165, label %183, label %120

166:                                              ; preds = %153, %145, %134, %131, %127
  %167 = phi i32 [ -90, %131 ], [ -22, %127 ], [ -90, %153 ], [ -90, %145 ], [ -90, %134 ]
  %168 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %169 = load ptr, ptr %168, align 4
  %170 = icmp ugt ptr %169, %122
  br i1 %170, label %171, label %173, !prof !11

171:                                              ; preds = %166
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %172 = load ptr, ptr %168, align 4
  br label %173

173:                                              ; preds = %171, %166
  %174 = phi ptr [ %172, %171 ], [ %169, %166 ]
  %175 = ptrtoint ptr %122 to i32
  %176 = ptrtoint ptr %174 to i32
  %177 = sub i32 %175, %176
  call void @skb_trim(ptr noundef %8, i32 noundef %177) #27
  br label %178

178:                                              ; preds = %173, %120
  %179 = phi i32 [ %167, %173 ], [ -90, %120 ]
  %180 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %181 = load ptr, ptr %180, align 4
  %182 = icmp ugt ptr %181, %109
  br i1 %182, label %194, label %199, !prof !11

183:                                              ; preds = %158, %114
  %184 = load ptr, ptr %9, align 8
  %185 = ptrtoint ptr %184 to i32
  %186 = ptrtoint ptr %109 to i32
  %187 = sub i32 %185, %186
  %188 = trunc i32 %187 to i16
  store i16 %188, ptr %109, align 2
  %189 = load ptr, ptr %9, align 8
  %190 = ptrtoint ptr %189 to i32
  %191 = ptrtoint ptr %10 to i32
  %192 = sub i32 %190, %191
  %193 = trunc i32 %192 to i16
  store i16 %193, ptr %10, align 2
  br label %218

194:                                              ; preds = %178, %98
  %195 = phi ptr [ %100, %98 ], [ %180, %178 ]
  %196 = phi ptr [ %29, %98 ], [ %109, %178 ]
  %197 = phi i32 [ %99, %98 ], [ %179, %178 ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %198 = load ptr, ptr %195, align 4
  br label %199

199:                                              ; preds = %194, %178, %98
  %200 = phi ptr [ %29, %98 ], [ %109, %178 ], [ %196, %194 ]
  %201 = phi ptr [ %101, %98 ], [ %181, %178 ], [ %198, %194 ]
  %202 = phi i32 [ %99, %98 ], [ %179, %178 ], [ %197, %194 ]
  %203 = ptrtoint ptr %200 to i32
  %204 = ptrtoint ptr %201 to i32
  %205 = sub i32 %203, %204
  call void @skb_trim(ptr noundef %8, i32 noundef %205) #27
  br label %206

206:                                              ; preds = %199, %103, %28, %23, %15
  %207 = phi i32 [ -90, %103 ], [ -90, %28 ], [ -90, %23 ], [ -90, %15 ], [ %202, %199 ]
  %208 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %209 = load ptr, ptr %208, align 4
  %210 = icmp ugt ptr %209, %10
  br i1 %210, label %211, label %213, !prof !11

211:                                              ; preds = %206
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %212 = load ptr, ptr %208, align 4
  br label %213

213:                                              ; preds = %211, %206
  %214 = phi ptr [ %212, %211 ], [ %209, %206 ]
  %215 = ptrtoint ptr %10 to i32
  %216 = ptrtoint ptr %214 to i32
  %217 = sub i32 %215, %216
  call void @skb_trim(ptr noundef %8, i32 noundef %217) #27
  br label %218

218:                                              ; preds = %213, %183, %2
  %219 = phi i32 [ %207, %213 ], [ 0, %183 ], [ -90, %2 ]
  ret i32 %219
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @devlink_dpipe_entry_ctx_close(ptr nocapture noundef readonly %0) #6 {
  %2 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 2
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 3
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 14
  %7 = load ptr, ptr %6, align 8
  %8 = ptrtoint ptr %7 to i32
  %9 = ptrtoint ptr %5 to i32
  %10 = sub i32 %8, %9
  %11 = trunc i32 %10 to i16
  store i16 %11, ptr %5, align 2
  %12 = load ptr, ptr %2, align 4
  %13 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %0, i32 0, i32 4
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %14, i32 -20
  %16 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 14
  %17 = load ptr, ptr %16, align 8
  %18 = ptrtoint ptr %17 to i32
  %19 = ptrtoint ptr %15 to i32
  %20 = sub i32 %18, %19
  store i32 %20, ptr %15, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_dpipe_entry_clear(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %0, i32 0, i32 4
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %1
  %8 = phi i32 [ %13, %7 ], [ 0, %1 ]
  %9 = getelementptr %struct.devlink_dpipe_value, ptr %3, i32 %8, i32 4
  %10 = load ptr, ptr %9, align 4
  tail call void @kfree(ptr noundef %10) #27
  %11 = getelementptr %struct.devlink_dpipe_value, ptr %3, i32 %8, i32 5
  %12 = load ptr, ptr %11, align 4
  tail call void @kfree(ptr noundef %12) #27
  %13 = add nuw i32 %8, 1
  %14 = icmp eq i32 %13, %5
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %1
  %16 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.devlink_dpipe_entry, ptr %0, i32 0, i32 2
  %19 = load i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %21, %15
  %22 = phi i32 [ %27, %21 ], [ 0, %15 ]
  %23 = getelementptr %struct.devlink_dpipe_value, ptr %17, i32 %22, i32 4
  %24 = load ptr, ptr %23, align 4
  tail call void @kfree(ptr noundef %24) #27
  %25 = getelementptr %struct.devlink_dpipe_value, ptr %17, i32 %22, i32 5
  %26 = load ptr, ptr %25, align 4
  tail call void @kfree(ptr noundef %26) #27
  %27 = add nuw i32 %22, 1
  %28 = icmp eq i32 %27, %19
  br i1 %28, label %29, label %21

29:                                               ; preds = %21, %15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @devlink_is_reload_failed(ptr nocapture noundef readonly %0) #4 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 21
  %3 = load i8, ptr %2, align 4
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_remote_reload_actions_performed(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = icmp eq i32 %2, 0
  %6 = and i32 %2, -7
  %7 = icmp ne i32 %6, 0
  %8 = icmp ugt i32 %1, 1
  %9 = or i1 %5, %7
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %12, !prof !11

11:                                               ; preds = %3
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4051, i32 noundef 9, ptr noundef null) #27
  br label %28

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 17, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %2, ptr %4, align 4
  %14 = call i32 @_find_next_bit_le(ptr noundef nonnull %4, i32 noundef 3, i32 noundef 0) #27
  %15 = icmp slt i32 %14, 3
  br i1 %15, label %16, label %27

16:                                               ; preds = %12
  %17 = mul nuw nsw i32 %1, 3
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i32 [ %14, %16 ], [ %25, %18 ]
  %20 = add i32 %19, %17
  %21 = getelementptr i32, ptr %13, i32 %20
  %22 = load i32, ptr %21, align 4
  %23 = add i32 %22, 1
  store i32 %23, ptr %21, align 4
  %24 = add nsw i32 %19, 1
  %25 = call i32 @_find_next_bit_le(ptr noundef nonnull %4, i32 noundef 3, i32 noundef %24) #27
  %26 = icmp slt i32 %25, 3
  br i1 %26, label %18, label %27

27:                                               ; preds = %18, %12
  call fastcc void @devlink_notify(ptr noundef %0, i32 noundef 3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  br label %28

28:                                               ; preds = %27, %11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_flash_update_status_notify(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.devlink_flash_notify, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %6) #27
  store ptr %1, ptr %6, align 4
  %7 = getelementptr inbounds %struct.devlink_flash_notify, ptr %6, i32 0, i32 1
  store ptr %2, ptr %7, align 4
  %8 = getelementptr inbounds %struct.devlink_flash_notify, ptr %6, i32 0, i32 2
  store i32 %3, ptr %8, align 4
  %9 = getelementptr inbounds %struct.devlink_flash_notify, ptr %6, i32 0, i32 3
  store i32 %4, ptr %9, align 4
  %10 = getelementptr inbounds %struct.devlink_flash_notify, ptr %6, i32 0, i32 4
  store i32 0, ptr %10, align 4
  call fastcc void @__devlink_flash_update_notify(ptr noundef %0, i32 noundef 60, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %6) #27
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #7

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__devlink_flash_update_notify(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = load i32, ptr %0, align 32
  %8 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %7, i32 noundef 1) #27
  br i1 %8, label %9, label %110

9:                                                ; preds = %3
  %10 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %11 = icmp eq ptr %10, null
  br i1 %11, label %110, label %12

12:                                               ; preds = %9
  %13 = trunc i32 %1 to i8
  %14 = tail call ptr @genlmsg_put(ptr noundef nonnull %10, i32 noundef 0, i32 noundef 0, ptr noundef nonnull @devlink_nl_family, i32 noundef 0, i8 noundef zeroext %13) #27
  %15 = icmp eq ptr %14, null
  br i1 %15, label %109, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 18
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 5
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @strlen(ptr noundef %21) #27
  %23 = add i32 %22, 1
  %24 = tail call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 1, i32 noundef %23, ptr noundef %21) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %76

26:                                               ; preds = %16
  %27 = load ptr, ptr %17, align 4
  %28 = getelementptr inbounds %struct.device, ptr %27, i32 0, i32 3
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = load ptr, ptr %27, align 4
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi ptr [ %32, %31 ], [ %29, %26 ]
  %35 = tail call i32 @strlen(ptr noundef %34) #27
  %36 = add i32 %35, 1
  %37 = tail call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 2, i32 noundef %36, ptr noundef %34) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %76

39:                                               ; preds = %33
  %40 = icmp eq i32 %1, 60
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = load ptr, ptr %2, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = tail call i32 @strlen(ptr noundef nonnull %42) #27
  %46 = add i32 %45, 1
  %47 = tail call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 124, i32 noundef %46, ptr noundef nonnull %42) #27
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %76

49:                                               ; preds = %44, %41
  %50 = getelementptr inbounds %struct.devlink_flash_notify, ptr %2, i32 0, i32 1
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = tail call i32 @strlen(ptr noundef nonnull %51) #27
  %55 = add i32 %54, 1
  %56 = tail call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 123, i32 noundef %55, ptr noundef nonnull %51) #27
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %53, %49
  %59 = getelementptr inbounds %struct.devlink_flash_notify, ptr %2, i32 0, i32 2
  %60 = load i32, ptr %59, align 4
  %61 = zext i32 %60 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 %61, ptr %6, align 8
  %62 = call i32 @nla_put_64bit(ptr noundef nonnull %10, i32 noundef 125, i32 noundef 8, ptr noundef nonnull %6, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.devlink_flash_notify, ptr %2, i32 0, i32 3
  %66 = load i32, ptr %65, align 4
  %67 = zext i32 %66 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 %67, ptr %5, align 8
  %68 = call i32 @nla_put_64bit(ptr noundef nonnull %10, i32 noundef 126, i32 noundef 8, ptr noundef nonnull %5, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.devlink_flash_notify, ptr %2, i32 0, i32 4
  %72 = load i32, ptr %71, align 4
  %73 = zext i32 %72 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 %73, ptr %4, align 8
  %74 = call i32 @nla_put_64bit(ptr noundef nonnull %10, i32 noundef 151, i32 noundef 8, ptr noundef nonnull %4, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %90, label %76

76:                                               ; preds = %70, %64, %58, %53, %44, %33, %16
  %77 = getelementptr i8, ptr %14, i32 -20
  %78 = icmp eq ptr %77, null
  br i1 %78, label %109, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 17
  %81 = load ptr, ptr %80, align 4
  %82 = icmp ugt ptr %81, %77
  br i1 %82, label %83, label %85, !prof !11

83:                                               ; preds = %79
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %84 = load ptr, ptr %80, align 4
  br label %85

85:                                               ; preds = %83, %79
  %86 = phi ptr [ %84, %83 ], [ %81, %79 ]
  %87 = ptrtoint ptr %77 to i32
  %88 = ptrtoint ptr %86 to i32
  %89 = sub i32 %87, %88
  call void @skb_trim(ptr noundef nonnull %10, i32 noundef %89) #27
  br label %109

90:                                               ; preds = %70, %39
  %91 = getelementptr i8, ptr %14, i32 -20
  %92 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 14
  %93 = load ptr, ptr %92, align 8
  %94 = ptrtoint ptr %93 to i32
  %95 = ptrtoint ptr %91 to i32
  %96 = sub i32 %94, %95
  store i32 %96, ptr %91, align 4
  %97 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %98 = icmp eq i8 %97, 0
  %99 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %100 = xor i1 %99, true
  %101 = select i1 %98, i1 %100, i1 false
  br i1 %101, label %102, label %103, !prof !11

102:                                              ; preds = %90
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %103

103:                                              ; preds = %102, %90
  br i1 %98, label %110, label %104

104:                                              ; preds = %103
  %105 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %106 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %107 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 3, i32 16
  store i32 %105, ptr %107, align 8
  %108 = call i32 @netlink_broadcast(ptr noundef %106, ptr noundef nonnull %10, i32 noundef 0, i32 noundef %105, i32 noundef 3264) #27
  br label %110

109:                                              ; preds = %85, %76, %12
  call void @kfree_skb_reason(ptr noundef nonnull %10, i32 noundef 0) #27
  br label %110

110:                                              ; preds = %109, %104, %103, %9, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_flash_update_timeout_notify(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.devlink_flash_notify, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %5) #27
  store ptr %1, ptr %5, align 4
  %6 = getelementptr inbounds %struct.devlink_flash_notify, ptr %5, i32 0, i32 1
  store ptr %2, ptr %6, align 4
  %7 = getelementptr inbounds %struct.devlink_flash_notify, ptr %5, i32 0, i32 2
  store i32 0, ptr %7, align 4
  %8 = getelementptr inbounds %struct.devlink_flash_notify, ptr %5, i32 0, i32 3
  store i32 0, ptr %8, align 4
  %9 = getelementptr inbounds %struct.devlink_flash_notify, ptr %5, i32 0, i32 4
  store i32 %3, ptr %9, align 4
  call fastcc void @__devlink_flash_update_notify(ptr noundef %0, i32 noundef 60, ptr noundef nonnull %5)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_info_driver_name_put(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {
  %3 = load ptr, ptr %0, align 4
  %4 = tail call i32 @strlen(ptr noundef %1) #27
  %5 = add i32 %4, 1
  %6 = tail call i32 @nla_put(ptr noundef %3, i32 noundef 98, i32 noundef %5, ptr noundef %1) #27
  ret i32 %6
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @nla_put_string(ptr noundef %0, i32 noundef %1, ptr noundef %2) unnamed_addr #5 {
  %4 = tail call i32 @strlen(ptr noundef %2)
  %5 = add i32 %4, 1
  %6 = tail call i32 @nla_put(ptr noundef %0, i32 noundef %1, i32 noundef %5, ptr noundef %2) #27
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_info_serial_number_put(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {
  %3 = load ptr, ptr %0, align 4
  %4 = tail call i32 @strlen(ptr noundef %1) #27
  %5 = add i32 %4, 1
  %6 = tail call i32 @nla_put(ptr noundef %3, i32 noundef 99, i32 noundef %5, ptr noundef %1) #27
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_info_board_serial_number_put(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {
  %3 = load ptr, ptr %0, align 4
  %4 = tail call i32 @strlen(ptr noundef %1) #27
  %5 = add i32 %4, 1
  %6 = tail call i32 @nla_put(ptr noundef %3, i32 noundef 146, i32 noundef %5, ptr noundef %1) #27
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_info_version_fixed_put(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = tail call fastcc i32 @devlink_info_version_put(ptr noundef %0, i32 noundef 100, ptr noundef %1, ptr noundef %2)
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_info_version_put(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = load ptr, ptr %0, align 4
  %6 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 14
  %7 = load ptr, ptr %6, align 8
  %8 = tail call i32 @nla_put(ptr noundef %5, i32 noundef %1, i32 noundef 0, ptr noundef null) #27
  %9 = icmp slt i32 %8, 0
  %10 = icmp eq ptr %7, null
  %11 = select i1 %9, i1 true, i1 %10
  br i1 %11, label %45, label %12

12:                                               ; preds = %4
  %13 = load ptr, ptr %0, align 4
  %14 = tail call i32 @strlen(ptr noundef %2) #27
  %15 = add i32 %14, 1
  %16 = tail call i32 @nla_put(ptr noundef %13, i32 noundef 103, i32 noundef %15, ptr noundef %2) #27
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %12
  %19 = load ptr, ptr %0, align 4
  %20 = tail call i32 @strlen(ptr noundef %3) #27
  %21 = add i32 %20, 1
  %22 = tail call i32 @nla_put(ptr noundef %19, i32 noundef 104, i32 noundef %21, ptr noundef %3) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %18
  %25 = load ptr, ptr %0, align 4
  %26 = getelementptr inbounds %struct.sk_buff, ptr %25, i32 0, i32 14
  %27 = load ptr, ptr %26, align 8
  %28 = ptrtoint ptr %27 to i32
  %29 = ptrtoint ptr %7 to i32
  %30 = sub i32 %28, %29
  %31 = trunc i32 %30 to i16
  store i16 %31, ptr %7, align 2
  br label %45

32:                                               ; preds = %18, %12
  %33 = phi i32 [ %16, %12 ], [ %22, %18 ]
  %34 = load ptr, ptr %0, align 4
  %35 = getelementptr inbounds %struct.sk_buff, ptr %34, i32 0, i32 17
  %36 = load ptr, ptr %35, align 4
  %37 = icmp ugt ptr %36, %7
  br i1 %37, label %38, label %40, !prof !11

38:                                               ; preds = %32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %39 = load ptr, ptr %35, align 4
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi ptr [ %39, %38 ], [ %36, %32 ]
  %42 = ptrtoint ptr %7 to i32
  %43 = ptrtoint ptr %41 to i32
  %44 = sub i32 %42, %43
  tail call void @skb_trim(ptr noundef %34, i32 noundef %44) #27
  br label %45

45:                                               ; preds = %40, %24, %4
  %46 = phi i32 [ %33, %40 ], [ 0, %24 ], [ -90, %4 ]
  ret i32 %46
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_info_version_stored_put(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = tail call fastcc i32 @devlink_info_version_put(ptr noundef %0, i32 noundef 102, ptr noundef %1, ptr noundef %2)
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_info_version_running_put(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = tail call fastcc i32 @devlink_info_version_put(ptr noundef %0, i32 noundef 101, ptr noundef %1, ptr noundef %2)
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_obj_nest_start(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 4, !range !18
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %7 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 16) #28
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %7, i32 0, i32 1
  store i32 107, ptr %10, align 8
  %11 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  store ptr %7, ptr %11, align 4
  store ptr %0, ptr %7, align 8
  %13 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %12, ptr %13, align 4
  store volatile ptr %7, ptr %12, align 4
  br label %14

14:                                               ; preds = %9, %5, %1
  %15 = phi i32 [ -22, %1 ], [ 0, %9 ], [ -12, %5 ]
  ret i32 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_obj_nest_end(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 4, !range !18
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %7 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 16) #28
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %7, i32 0, i32 1
  store i32 110, ptr %10, align 8
  %11 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  store ptr %7, ptr %11, align 4
  store ptr %0, ptr %7, align 8
  %13 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %12, ptr %13, align 4
  store volatile ptr %7, ptr %12, align 4
  br label %14

14:                                               ; preds = %9, %5, %1
  %15 = phi i32 [ -22, %1 ], [ 0, %9 ], [ -12, %5 ]
  ret i32 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %4 = load i8, ptr %3, align 4, !range !18
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %8 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3520, i32 noundef 16) #28
  %9 = icmp eq ptr %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %8, i32 0, i32 1
  store i32 108, ptr %11, align 8
  %12 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  store ptr %8, ptr %12, align 4
  store ptr %0, ptr %8, align 8
  %14 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  store ptr %13, ptr %14, align 4
  store volatile ptr %8, ptr %13, align 4
  %15 = load i8, ptr %3, align 4, !range !18
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %36

17:                                               ; preds = %10
  %18 = tail call i32 @strlen(ptr noundef %1) #27
  %19 = add i32 %18, -3812
  %20 = icmp ult i32 %19, -3813
  br i1 %20, label %36, label %21

21:                                               ; preds = %17
  %22 = add nsw i32 %18, 17
  %23 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %22, i32 noundef 3520) #29
  %24 = icmp eq ptr %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %23, i32 0, i32 2
  store i8 10, ptr %26, align 4
  %27 = tail call i32 @strlen(ptr noundef %1) #27
  %28 = trunc i32 %27 to i16
  %29 = add i16 %28, 1
  %30 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %23, i32 0, i32 3
  store i16 %29, ptr %30, align 2
  %31 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %23, i32 0, i32 1
  store i32 111, ptr %31, align 8
  %32 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %23, i32 0, i32 4
  %33 = zext i16 %29 to i32
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 16 %32, ptr align 1 %1, i32 %33, i1 false) #27
  %34 = load ptr, ptr %12, align 4
  store ptr %23, ptr %12, align 4
  store ptr %0, ptr %23, align 64
  %35 = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  store ptr %34, ptr %35, align 4
  store volatile ptr %23, ptr %34, align 4
  br label %36

36:                                               ; preds = %25, %21, %17, %10, %6, %2
  %37 = phi i32 [ -22, %2 ], [ -12, %6 ], [ 0, %25 ], [ -22, %10 ], [ -90, %17 ], [ -12, %21 ]
  ret i32 %37
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_pair_nest_end(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 4, !range !18
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %7 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 16) #28
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %7, i32 0, i32 1
  store i32 110, ptr %10, align 8
  %11 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  store ptr %7, ptr %11, align 4
  store ptr %0, ptr %7, align 8
  %13 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %12, ptr %13, align 4
  store volatile ptr %7, ptr %12, align 4
  br label %14

14:                                               ; preds = %9, %5, %1
  %15 = phi i32 [ -22, %1 ], [ 0, %9 ], [ -12, %5 ]
  ret i32 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_arr_pair_nest_start(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %4 = load i8, ptr %3, align 4, !range !18
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  %10 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %11 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3520, i32 noundef 16) #28
  %12 = icmp eq ptr %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %11, i32 0, i32 1
  store i32 109, ptr %14, align 8
  %15 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  store ptr %11, ptr %15, align 4
  store ptr %0, ptr %11, align 8
  %17 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  store ptr %16, ptr %17, align 4
  store volatile ptr %11, ptr %16, align 4
  br label %18

18:                                               ; preds = %13, %9, %6, %2
  %19 = phi i32 [ -22, %2 ], [ %7, %6 ], [ 0, %13 ], [ -12, %9 ]
  ret i32 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_arr_pair_nest_end(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 4, !range !18
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %24

5:                                                ; preds = %1
  %6 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %7 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 16) #28
  %8 = icmp eq ptr %7, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %7, i32 0, i32 1
  store i32 110, ptr %10, align 8
  %11 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  store ptr %7, ptr %11, align 4
  store ptr %0, ptr %7, align 8
  %13 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %12, ptr %13, align 4
  store volatile ptr %7, ptr %12, align 4
  %14 = load i8, ptr %2, align 4, !range !18
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %9
  %17 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %18 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %17, i32 noundef 3520, i32 noundef 16) #28
  %19 = icmp eq ptr %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %18, i32 0, i32 1
  store i32 110, ptr %21, align 8
  %22 = load ptr, ptr %11, align 4
  store ptr %18, ptr %11, align 4
  store ptr %0, ptr %18, align 8
  %23 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  store ptr %22, ptr %23, align 4
  store volatile ptr %18, ptr %22, align 4
  br label %24

24:                                               ; preds = %20, %16, %9, %5, %1
  %25 = phi i32 [ -22, %1 ], [ -12, %5 ], [ -22, %9 ], [ 0, %20 ], [ -12, %16 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_binary_pair_nest_start(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %4 = load i8, ptr %3, align 4, !range !18
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1) #27
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  %10 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %11 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3520, i32 noundef 16) #28
  %12 = icmp eq ptr %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %11, i32 0, i32 1
  store i32 109, ptr %14, align 8
  %15 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  store ptr %11, ptr %15, align 4
  store ptr %0, ptr %11, align 8
  %17 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  store ptr %16, ptr %17, align 4
  store volatile ptr %11, ptr %16, align 4
  store i8 1, ptr %3, align 4
  br label %18

18:                                               ; preds = %13, %9, %6, %2
  %19 = phi i32 [ 0, %13 ], [ -12, %9 ], [ %7, %6 ], [ -22, %2 ]
  ret i32 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_binary_pair_nest_end(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 4, !range !18
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  store i8 0, ptr %2, align 4
  %6 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %7 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 16) #28
  %8 = icmp eq ptr %7, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %7, i32 0, i32 1
  store i32 110, ptr %10, align 8
  %11 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  store ptr %7, ptr %11, align 4
  store ptr %0, ptr %7, align 8
  %13 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %12, ptr %13, align 4
  store volatile ptr %7, ptr %12, align 4
  %14 = load i8, ptr %2, align 4, !range !18
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %9
  %17 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %18 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %17, i32 noundef 3520, i32 noundef 16) #28
  %19 = icmp eq ptr %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %18, i32 0, i32 1
  store i32 110, ptr %21, align 8
  %22 = load ptr, ptr %11, align 4
  store ptr %18, ptr %11, align 4
  store ptr %0, ptr %18, align 8
  %23 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  store ptr %22, ptr %23, align 4
  store volatile ptr %18, ptr %22, align 4
  br label %24

24:                                               ; preds = %20, %16, %9, %5, %1
  %25 = phi i32 [ -22, %1 ], [ -12, %5 ], [ -22, %9 ], [ 0, %20 ], [ -12, %16 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_u32_put(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %4 = load i8, ptr %3, align 4, !range !18
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %8 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3520, i32 noundef 20) #28
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %8, i32 0, i32 2
  store i8 3, ptr %11, align 4
  %12 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %8, i32 0, i32 3
  store i16 4, ptr %12, align 2
  %13 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %8, i32 0, i32 1
  store i32 113, ptr %13, align 8
  %14 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %8, i32 0, i32 4
  store i32 %1, ptr %14, align 8
  %15 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  store ptr %8, ptr %15, align 4
  store ptr %0, ptr %8, align 8
  %17 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  store ptr %16, ptr %17, align 4
  store volatile ptr %8, ptr %16, align 4
  br label %18

18:                                               ; preds = %10, %6, %2
  %19 = phi i32 [ -22, %2 ], [ 0, %10 ], [ -12, %6 ]
  ret i32 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_string_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %4 = load i8, ptr %3, align 4, !range !18
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = tail call i32 @strlen(ptr noundef %1)
  %8 = trunc i32 %7 to i16
  %9 = add i16 %8, 1
  %10 = icmp ugt i16 %9, 3812
  br i1 %10, label %24, label %11

11:                                               ; preds = %6
  %12 = zext i16 %9 to i32
  %13 = add nuw nsw i32 %12, 16
  %14 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %13, i32 noundef 3520) #29
  %15 = icmp eq ptr %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %14, i32 0, i32 2
  store i8 10, ptr %17, align 4
  %18 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %14, i32 0, i32 3
  store i16 %9, ptr %18, align 2
  %19 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %14, i32 0, i32 1
  store i32 113, ptr %19, align 8
  %20 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %14, i32 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 16 %20, ptr align 1 %1, i32 %12, i1 false) #27
  %21 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  store ptr %14, ptr %21, align 4
  store ptr %0, ptr %14, align 64
  %23 = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  store ptr %22, ptr %23, align 4
  store volatile ptr %14, ptr %22, align 4
  br label %24

24:                                               ; preds = %16, %11, %6, %2
  %25 = phi i32 [ -22, %2 ], [ 0, %16 ], [ -90, %6 ], [ -12, %11 ]
  ret i32 %25
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_binary_put(ptr noundef %0, ptr nocapture noundef readonly %1, i16 noundef zeroext %2) #0 {
  %4 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %5 = load i8, ptr %4, align 4, !range !18
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %3
  %8 = icmp ugt i16 %2, 3812
  br i1 %8, label %22, label %9

9:                                                ; preds = %7
  %10 = zext i16 %2 to i32
  %11 = add nuw nsw i32 %10, 16
  %12 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %11, i32 noundef 3520) #29
  %13 = icmp eq ptr %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 2
  store i8 11, ptr %15, align 4
  %16 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 3
  store i16 %2, ptr %16, align 2
  %17 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 1
  store i32 113, ptr %17, align 8
  %18 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 16 %18, ptr align 1 %1, i32 %10, i1 false) #27
  %19 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  store ptr %12, ptr %19, align 4
  store ptr %0, ptr %12, align 64
  %21 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  store ptr %20, ptr %21, align 4
  store volatile ptr %12, ptr %20, align 4
  br label %22

22:                                               ; preds = %14, %9, %7, %3
  %23 = phi i32 [ -22, %3 ], [ 0, %14 ], [ -90, %7 ], [ -12, %9 ]
  ret i32 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_bool_pair_put(ptr noundef %0, ptr nocapture noundef readonly %1, i1 noundef zeroext %2) #0 {
  %4 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %33

6:                                                ; preds = %3
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %9 = load i8, ptr %8, align 4, !range !18
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %6
  %12 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %13 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %12, i32 noundef 3520, i32 noundef 17) #28
  %14 = icmp eq ptr %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %13, i32 0, i32 2
  store i8 6, ptr %16, align 4
  %17 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %13, i32 0, i32 3
  store i16 1, ptr %17, align 2
  %18 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %13, i32 0, i32 1
  store i32 113, ptr %18, align 8
  %19 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %13, i32 0, i32 4
  store i8 %7, ptr %19, align 8
  %20 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  store ptr %13, ptr %20, align 4
  store ptr %0, ptr %13, align 8
  %22 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  store ptr %21, ptr %22, align 4
  store volatile ptr %13, ptr %21, align 4
  %23 = load i8, ptr %8, align 4, !range !18
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %15
  %26 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %27 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %26, i32 noundef 3520, i32 noundef 16) #28
  %28 = icmp eq ptr %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %27, i32 0, i32 1
  store i32 110, ptr %30, align 8
  %31 = load ptr, ptr %20, align 4
  store ptr %27, ptr %20, align 4
  store ptr %0, ptr %27, align 8
  %32 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  store ptr %31, ptr %32, align 4
  store volatile ptr %27, ptr %31, align 4
  br label %33

33:                                               ; preds = %29, %25, %15, %11, %6, %3
  %34 = phi i32 [ %4, %3 ], [ -12, %11 ], [ -22, %6 ], [ -22, %15 ], [ 0, %29 ], [ -12, %25 ]
  ret i32 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_u8_pair_put(ptr noundef %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2) #0 {
  %4 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %8 = load i8, ptr %7, align 4, !range !18
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %12 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %11, i32 noundef 3520, i32 noundef 17) #28
  %13 = icmp eq ptr %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 2
  store i8 1, ptr %15, align 4
  %16 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 3
  store i16 1, ptr %16, align 2
  %17 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 1
  store i32 113, ptr %17, align 8
  %18 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 4
  store i8 %2, ptr %18, align 8
  %19 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  store ptr %12, ptr %19, align 4
  store ptr %0, ptr %12, align 8
  %21 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  store ptr %20, ptr %21, align 4
  store volatile ptr %12, ptr %20, align 4
  %22 = load i8, ptr %7, align 4, !range !18
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %14
  %25 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %26 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %25, i32 noundef 3520, i32 noundef 16) #28
  %27 = icmp eq ptr %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %26, i32 0, i32 1
  store i32 110, ptr %29, align 8
  %30 = load ptr, ptr %19, align 4
  store ptr %26, ptr %19, align 4
  store ptr %0, ptr %26, align 8
  %31 = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  store ptr %30, ptr %31, align 4
  store volatile ptr %26, ptr %30, align 4
  br label %32

32:                                               ; preds = %28, %24, %14, %10, %6, %3
  %33 = phi i32 [ %4, %3 ], [ -12, %10 ], [ -22, %6 ], [ -22, %14 ], [ 0, %28 ], [ -12, %24 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_u32_pair_put(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %8 = load i8, ptr %7, align 4, !range !18
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %12 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %11, i32 noundef 3520, i32 noundef 20) #28
  %13 = icmp eq ptr %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 2
  store i8 3, ptr %15, align 4
  %16 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 3
  store i16 4, ptr %16, align 2
  %17 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 1
  store i32 113, ptr %17, align 8
  %18 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 4
  store i32 %2, ptr %18, align 8
  %19 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  store ptr %12, ptr %19, align 4
  store ptr %0, ptr %12, align 8
  %21 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  store ptr %20, ptr %21, align 4
  store volatile ptr %12, ptr %20, align 4
  %22 = load i8, ptr %7, align 4, !range !18
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %14
  %25 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %26 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %25, i32 noundef 3520, i32 noundef 16) #28
  %27 = icmp eq ptr %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %26, i32 0, i32 1
  store i32 110, ptr %29, align 8
  %30 = load ptr, ptr %19, align 4
  store ptr %26, ptr %19, align 4
  store ptr %0, ptr %26, align 8
  %31 = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  store ptr %30, ptr %31, align 4
  store volatile ptr %26, ptr %30, align 4
  br label %32

32:                                               ; preds = %28, %24, %14, %10, %6, %3
  %33 = phi i32 [ %4, %3 ], [ -12, %10 ], [ -22, %6 ], [ -22, %14 ], [ 0, %28 ], [ -12, %24 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_u64_pair_put(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {
  %4 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %8 = load i8, ptr %7, align 4, !range !18
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %12 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %11, i32 noundef 3520, i32 noundef 24) #28
  %13 = icmp eq ptr %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 2
  store i8 4, ptr %15, align 4
  %16 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 3
  store i16 8, ptr %16, align 2
  %17 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 1
  store i32 113, ptr %17, align 8
  %18 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %12, i32 0, i32 4
  store i64 %2, ptr %18, align 8
  %19 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  store ptr %12, ptr %19, align 4
  store ptr %0, ptr %12, align 8
  %21 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  store ptr %20, ptr %21, align 4
  store volatile ptr %12, ptr %20, align 4
  %22 = load i8, ptr %7, align 4, !range !18
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %14
  %25 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %26 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %25, i32 noundef 3520, i32 noundef 16) #28
  %27 = icmp eq ptr %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %26, i32 0, i32 1
  store i32 110, ptr %29, align 8
  %30 = load ptr, ptr %19, align 4
  store ptr %26, ptr %19, align 4
  store ptr %0, ptr %26, align 8
  %31 = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  store ptr %30, ptr %31, align 4
  store volatile ptr %26, ptr %30, align 4
  br label %32

32:                                               ; preds = %28, %24, %14, %10, %6, %3
  %33 = phi i32 [ %4, %3 ], [ -12, %10 ], [ -22, %6 ], [ -22, %14 ], [ 0, %28 ], [ -12, %24 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_string_pair_put(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %38

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %8 = load i8, ptr %7, align 4, !range !18
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %6
  %11 = tail call i32 @strlen(ptr noundef %2) #27
  %12 = trunc i32 %11 to i16
  %13 = add i16 %12, 1
  %14 = icmp ugt i16 %13, 3812
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = zext i16 %13 to i32
  %17 = add nuw nsw i32 %16, 16
  %18 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %17, i32 noundef 3520) #29
  %19 = icmp eq ptr %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %18, i32 0, i32 2
  store i8 10, ptr %21, align 4
  %22 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %18, i32 0, i32 3
  store i16 %13, ptr %22, align 2
  %23 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %18, i32 0, i32 1
  store i32 113, ptr %23, align 8
  %24 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %18, i32 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 16 %24, ptr align 1 %2, i32 %16, i1 false) #27
  %25 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  store ptr %18, ptr %25, align 4
  store ptr %0, ptr %18, align 64
  %27 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  store ptr %26, ptr %27, align 4
  store volatile ptr %18, ptr %26, align 4
  %28 = load i8, ptr %7, align 4, !range !18
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %20
  %31 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %32 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %31, i32 noundef 3520, i32 noundef 16) #28
  %33 = icmp eq ptr %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %32, i32 0, i32 1
  store i32 110, ptr %35, align 8
  %36 = load ptr, ptr %25, align 4
  store ptr %32, ptr %25, align 4
  store ptr %0, ptr %32, align 8
  %37 = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  store ptr %36, ptr %37, align 4
  store volatile ptr %32, ptr %36, align 4
  br label %38

38:                                               ; preds = %34, %30, %20, %15, %10, %6, %3
  %39 = phi i32 [ %4, %3 ], [ -12, %15 ], [ -90, %10 ], [ -22, %6 ], [ -22, %20 ], [ 0, %34 ], [ -12, %30 ]
  ret i32 %39
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_fmsg_binary_pair_put(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = getelementptr inbounds %struct.devlink_fmsg, ptr %0, i32 0, i32 1
  %6 = load i8, ptr %5, align 4, !range !18
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %69

8:                                                ; preds = %4
  %9 = tail call i32 @devlink_fmsg_pair_nest_start(ptr noundef %0, ptr noundef %1) #27
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %69

11:                                               ; preds = %8
  %12 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %13 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %12, i32 noundef 3520, i32 noundef 16) #28
  %14 = icmp eq ptr %13, null
  br i1 %14, label %69, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %13, i32 0, i32 1
  store i32 109, ptr %16, align 8
  %17 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  store ptr %13, ptr %17, align 4
  store ptr %0, ptr %13, align 8
  %19 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  store ptr %18, ptr %19, align 4
  store volatile ptr %13, ptr %18, align 4
  store i8 1, ptr %5, align 4
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %50, label %21

21:                                               ; preds = %15
  %22 = tail call i32 @llvm.umin.i32(i32 %3, i32 3812)
  br label %23

23:                                               ; preds = %40, %21
  %24 = phi ptr [ %2, %21 ], [ %44, %40 ]
  %25 = phi i32 [ %22, %21 ], [ %43, %40 ]
  %26 = phi i32 [ 0, %21 ], [ %38, %40 ]
  %27 = add nuw nsw i32 %25, 16
  %28 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %27, i32 noundef 3520) #29
  %29 = icmp eq ptr %28, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %23
  %31 = trunc i32 %25 to i16
  %32 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %28, i32 0, i32 2
  store i8 11, ptr %32, align 4
  %33 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %28, i32 0, i32 3
  store i16 %31, ptr %33, align 2
  %34 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %28, i32 0, i32 1
  store i32 113, ptr %34, align 8
  %35 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %28, i32 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 16 %35, ptr align 1 %24, i32 %25, i1 false) #27
  %36 = load ptr, ptr %17, align 4
  store ptr %28, ptr %17, align 4
  store ptr %0, ptr %28, align 64
  %37 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  store ptr %36, ptr %37, align 4
  store volatile ptr %28, ptr %36, align 4
  %38 = add i32 %25, %26
  %39 = icmp ult i32 %38, %3
  br i1 %39, label %40, label %46

40:                                               ; preds = %30
  %41 = load i8, ptr %5, align 4, !range !18
  %42 = sub i32 %3, %38
  %43 = tail call i32 @llvm.umin.i32(i32 %42, i32 3812)
  %44 = getelementptr i8, ptr %2, i32 %38
  %45 = icmp eq i8 %41, 0
  br i1 %45, label %69, label %23

46:                                               ; preds = %30, %23
  %47 = phi i32 [ 0, %30 ], [ -12, %23 ]
  %48 = load i8, ptr %5, align 4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %46, %15
  %51 = phi i32 [ %47, %46 ], [ 0, %15 ]
  store i8 0, ptr %5, align 4
  %52 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %53 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %52, i32 noundef 3520, i32 noundef 16) #28
  %54 = icmp eq ptr %53, null
  br i1 %54, label %69, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %53, i32 0, i32 1
  store i32 110, ptr %56, align 8
  %57 = load ptr, ptr %17, align 4
  store ptr %53, ptr %17, align 4
  store ptr %0, ptr %53, align 8
  %58 = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  store ptr %57, ptr %58, align 4
  store volatile ptr %53, ptr %57, align 4
  %59 = load i8, ptr %5, align 4, !range !18
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %69

61:                                               ; preds = %55
  %62 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %63 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %62, i32 noundef 3520, i32 noundef 16) #28
  %64 = icmp eq ptr %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %63, i32 0, i32 1
  store i32 110, ptr %66, align 8
  %67 = load ptr, ptr %17, align 4
  store ptr %63, ptr %17, align 4
  store ptr %0, ptr %63, align 8
  %68 = getelementptr inbounds %struct.list_head, ptr %63, i32 0, i32 1
  store ptr %67, ptr %68, align 4
  store volatile ptr %63, ptr %67, align 4
  br label %69

69:                                               ; preds = %65, %61, %55, %50, %46, %40, %11, %8, %4
  %70 = phi i32 [ %51, %65 ], [ -22, %4 ], [ %9, %8 ], [ -12, %11 ], [ -12, %61 ], [ -22, %55 ], [ -12, %50 ], [ -22, %46 ], [ -22, %40 ]
  ret i32 %70
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @devlink_health_reporter_priv(ptr nocapture noundef readonly %0) #4 {
  %2 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @devlink_port_health_reporter_create(ptr noundef %0, ptr noundef %1, i64 noundef %2, ptr noundef %3) #0 {
  %5 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 13
  tail call void @mutex_lock(ptr noundef %5) #27
  %6 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 12
  %7 = load ptr, ptr %1, align 4
  br label %8

8:                                                ; preds = %12, %4
  %9 = phi ptr [ %6, %4 ], [ %10, %12 ]
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, %6
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.devlink_health_reporter, ptr %10, i32 0, i32 2
  %14 = load ptr, ptr %13, align 4
  %15 = load ptr, ptr %14, align 4
  %16 = tail call i32 @strcmp(ptr noundef %15, ptr noundef %7) #27
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %8

18:                                               ; preds = %12
  %19 = icmp eq ptr %10, null
  br i1 %19, label %20, label %56

20:                                               ; preds = %18, %8
  %21 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %1, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %29, !prof !11

28:                                               ; preds = %24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6799, i32 noundef 9, ptr noundef null) #27
  br label %56

29:                                               ; preds = %24, %20
  %30 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %31 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %30, i32 noundef 3520, i32 noundef 112) #28
  %32 = icmp eq ptr %31, null
  br i1 %32, label %56, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 1
  store ptr %3, ptr %34, align 8
  %35 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 2
  store ptr %1, ptr %35, align 4
  %36 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 3
  store ptr %22, ptr %36, align 8
  %37 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 7
  store i64 %2, ptr %37, align 8
  %38 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %1, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = icmp ne ptr %39, null
  %41 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 8
  %42 = zext i1 %40 to i8
  store i8 %42, ptr %41, align 8
  %43 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %1, i32 0, i32 2
  %44 = load ptr, ptr %43, align 4
  %45 = icmp ne ptr %44, null
  %46 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 9
  %47 = zext i1 %45 to i8
  store i8 %47, ptr %46, align 1
  %48 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 6
  tail call void @__mutex_init(ptr noundef %48, ptr noundef nonnull @.str.46, ptr noundef nonnull @__devlink_health_reporter_create.__key) #27
  %49 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 16
  store volatile i32 1, ptr %49, align 8
  %50 = icmp ugt ptr %31, inttoptr (i32 -4096 to ptr)
  br i1 %50, label %56, label %51

51:                                               ; preds = %33
  %52 = getelementptr inbounds %struct.devlink_health_reporter, ptr %31, i32 0, i32 4
  store ptr %0, ptr %52, align 4
  %53 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 12, i32 1
  %54 = load ptr, ptr %53, align 4
  store ptr %31, ptr %53, align 4
  store ptr %6, ptr %31, align 8
  %55 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  store ptr %54, ptr %55, align 4
  store volatile ptr %31, ptr %54, align 4
  br label %56

56:                                               ; preds = %51, %33, %29, %28, %18
  %57 = phi ptr [ %31, %33 ], [ %31, %51 ], [ inttoptr (i32 -17 to ptr), %18 ], [ inttoptr (i32 -12 to ptr), %29 ], [ inttoptr (i32 -22 to ptr), %28 ]
  tail call void @mutex_unlock(ptr noundef %5) #27
  ret ptr %57
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @devlink_health_reporter_create(ptr noundef %0, ptr noundef %1, i64 noundef %2, ptr noundef %3) #0 {
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 9
  tail call void @mutex_lock(ptr noundef %5) #27
  %6 = load ptr, ptr %1, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 8
  br label %8

8:                                                ; preds = %12, %4
  %9 = phi ptr [ %7, %4 ], [ %10, %12 ]
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, %7
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.devlink_health_reporter, ptr %10, i32 0, i32 2
  %14 = load ptr, ptr %13, align 4
  %15 = load ptr, ptr %14, align 4
  %16 = tail call i32 @strcmp(ptr noundef %15, ptr noundef %6) #27
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %8

18:                                               ; preds = %12
  %19 = icmp eq ptr %10, null
  br i1 %19, label %20, label %53

20:                                               ; preds = %18, %8
  %21 = icmp eq i64 %2, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %1, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %27, !prof !11

26:                                               ; preds = %22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6799, i32 noundef 9, ptr noundef null) #27
  br label %53

27:                                               ; preds = %22, %20
  %28 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %29 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %28, i32 noundef 3520, i32 noundef 112) #28
  %30 = icmp eq ptr %29, null
  br i1 %30, label %53, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 1
  store ptr %3, ptr %32, align 8
  %33 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 2
  store ptr %1, ptr %33, align 4
  %34 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 3
  store ptr %0, ptr %34, align 8
  %35 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 7
  store i64 %2, ptr %35, align 8
  %36 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %1, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = icmp ne ptr %37, null
  %39 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 8
  %40 = zext i1 %38 to i8
  store i8 %40, ptr %39, align 8
  %41 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %1, i32 0, i32 2
  %42 = load ptr, ptr %41, align 4
  %43 = icmp ne ptr %42, null
  %44 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 9
  %45 = zext i1 %43 to i8
  store i8 %45, ptr %44, align 1
  %46 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 6
  tail call void @__mutex_init(ptr noundef %46, ptr noundef nonnull @.str.46, ptr noundef nonnull @__devlink_health_reporter_create.__key) #27
  %47 = getelementptr inbounds %struct.devlink_health_reporter, ptr %29, i32 0, i32 16
  store volatile i32 1, ptr %47, align 8
  %48 = icmp ugt ptr %29, inttoptr (i32 -4096 to ptr)
  br i1 %48, label %53, label %49

49:                                               ; preds = %31
  %50 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 8, i32 1
  %51 = load ptr, ptr %50, align 4
  store ptr %29, ptr %50, align 4
  store ptr %7, ptr %29, align 8
  %52 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  store ptr %51, ptr %52, align 4
  store volatile ptr %29, ptr %51, align 4
  br label %53

53:                                               ; preds = %49, %31, %27, %26, %18
  %54 = phi ptr [ %29, %31 ], [ %29, %49 ], [ inttoptr (i32 -17 to ptr), %18 ], [ inttoptr (i32 -12 to ptr), %27 ], [ inttoptr (i32 -22 to ptr), %26 ]
  tail call void @mutex_unlock(ptr noundef %5) #27
  ret ptr %54
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_health_reporter_destroy(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.devlink, ptr %3, i32 0, i32 9
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = load ptr, ptr %0, align 4
  %8 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %6, ptr %8, align 4
  store volatile ptr %7, ptr %6, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %0, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %5, align 4
  tail call fastcc void @devlink_health_reporter_put(ptr noundef %0) #27
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_health_reporter_destroy(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.devlink_port, ptr %3, i32 0, i32 13
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = load ptr, ptr %0, align 4
  %8 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  store ptr %6, ptr %8, align 4
  store volatile ptr %7, ptr %6, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %0, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %5, align 4
  tail call fastcc void @devlink_health_reporter_put(ptr noundef %0) #27
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret void
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @devlink_health_reporter_recovery_done(ptr nocapture noundef %0) #9 {
  %2 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 14
  %3 = load i64, ptr %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, ptr %2, align 8
  %5 = load volatile i32, ptr @jiffies, align 64
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 15
  store i64 %6, ptr %7, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_health_report(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 3
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %1, null
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %3
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7125, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 4
  %11 = load ptr, ptr %10, align 4
  %12 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_report, i32 0, i32 1), align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %8
  %15 = tail call ptr @llvm.thread.pointer() #27
  %16 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %17 = load i32, ptr %16, align 8
  %18 = lshr i32 %17, 5
  %19 = getelementptr i32, ptr @__cpu_online_mask, i32 %18
  %20 = load volatile i32, ptr %19, align 4
  %21 = and i32 %17, 31
  %22 = shl nuw i32 1, %21
  %23 = and i32 %22, %20
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %14
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !19
  %26 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_report, i32 0, i32 7), align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %28, %25
  %29 = phi ptr [ %33, %28 ], [ %26, %25 ]
  %30 = load volatile ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.tracepoint_func, ptr %29, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  tail call void %30(ptr noundef %32, ptr noundef %5, ptr noundef %11, ptr noundef %1) #27
  %33 = getelementptr %struct.tracepoint_func, ptr %29, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %28

36:                                               ; preds = %28, %25
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !20
  br label %37

37:                                               ; preds = %36, %14, %8
  %38 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 13
  %39 = load i64, ptr %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, ptr %38, align 8
  %41 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 10
  %42 = load i8, ptr %41, align 2
  store i8 1, ptr %41, align 2
  tail call fastcc void @devlink_recover_notify(ptr noundef %0)
  %43 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 15
  %44 = load i64, ptr %43, align 8
  %45 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 7
  %46 = load i64, ptr %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = tail call i32 @__msecs_to_jiffies(i32 noundef %47) #27
  %49 = trunc i64 %44 to i32
  %50 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 8
  %51 = load i8, ptr %50, align 8, !range !18
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %100, label %53

53:                                               ; preds = %37
  %54 = icmp eq i8 %42, 0
  %55 = load i64, ptr %43, align 8
  br i1 %54, label %56, label %67

56:                                               ; preds = %53
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %100, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 14
  %60 = load i64, ptr %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %100, label %62

62:                                               ; preds = %58
  %63 = load volatile i32, ptr @jiffies, align 64
  %64 = add i32 %48, %49
  %65 = sub i32 %63, %64
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %67, label %100

67:                                               ; preds = %62, %53
  %68 = load ptr, ptr %9, align 4
  %69 = load ptr, ptr %68, align 4
  %70 = load i8, ptr %41, align 2
  %71 = icmp ne i8 %70, 0
  %72 = load volatile i32, ptr @jiffies, align 64
  %73 = zext i32 %72 to i64
  %74 = sub i64 %73, %55
  %75 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_recover_aborted, i32 0, i32 1), align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %128

77:                                               ; preds = %67
  %78 = tail call ptr @llvm.thread.pointer() #27
  %79 = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 2
  %80 = load i32, ptr %79, align 8
  %81 = lshr i32 %80, 5
  %82 = getelementptr i32, ptr @__cpu_online_mask, i32 %81
  %83 = load volatile i32, ptr %82, align 4
  %84 = and i32 %80, 31
  %85 = shl nuw i32 1, %84
  %86 = and i32 %85, %83
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %128, label %88

88:                                               ; preds = %77
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !21
  %89 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_recover_aborted, i32 0, i32 7), align 4
  %90 = icmp eq ptr %89, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %91, %88
  %92 = phi ptr [ %96, %91 ], [ %89, %88 ]
  %93 = load volatile ptr, ptr %92, align 4
  %94 = getelementptr inbounds %struct.tracepoint_func, ptr %92, i32 0, i32 1
  %95 = load ptr, ptr %94, align 4
  tail call void %93(ptr noundef %95, ptr noundef %5, ptr noundef %69, i1 noundef zeroext %71, i64 noundef %74) #27
  %96 = getelementptr %struct.tracepoint_func, ptr %92, i32 1
  %97 = load ptr, ptr %96, align 4
  %98 = icmp eq ptr %97, null
  br i1 %98, label %99, label %91

99:                                               ; preds = %91, %88
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !22
  br label %128

100:                                              ; preds = %62, %58, %56, %37
  store i8 1, ptr %41, align 2
  %101 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 9
  %102 = load i8, ptr %101, align 1, !range !18
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 6
  tail call void @mutex_lock(ptr noundef %105) #27
  %106 = tail call fastcc i32 @devlink_health_do_dump(ptr noundef %0, ptr noundef %2, ptr noundef null)
  tail call void @mutex_unlock(ptr noundef %105) #27
  %107 = load i8, ptr %50, align 8, !range !18
  br label %108

108:                                              ; preds = %104, %100
  %109 = phi i8 [ %107, %104 ], [ %51, %100 ]
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %128, label %111

111:                                              ; preds = %108
  %112 = load i8, ptr %41, align 2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %128, label %114

114:                                              ; preds = %111
  %115 = load ptr, ptr %9, align 4
  %116 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %115, i32 0, i32 1
  %117 = load ptr, ptr %116, align 4
  %118 = icmp eq ptr %117, null
  br i1 %118, label %128, label %119

119:                                              ; preds = %114
  %120 = tail call i32 %117(ptr noundef %0, ptr noundef %2, ptr noundef null) #27
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

122:                                              ; preds = %119
  %123 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 14
  %124 = load i64, ptr %123, align 8
  %125 = add i64 %124, 1
  store i64 %125, ptr %123, align 8
  %126 = load volatile i32, ptr @jiffies, align 64
  %127 = zext i32 %126 to i64
  store i64 %127, ptr %43, align 8
  store i8 0, ptr %41, align 2
  tail call fastcc void @devlink_recover_notify(ptr noundef %0) #27
  br label %128

128:                                              ; preds = %122, %119, %114, %111, %108, %99, %77, %67
  %129 = phi i32 [ 0, %108 ], [ -125, %67 ], [ -125, %77 ], [ -125, %99 ], [ 0, %122 ], [ 0, %111 ], [ -95, %114 ], [ %120, %119 ]
  ret i32 %129
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_recover_notify(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 8
  %4 = load i32, ptr %3, align 32
  %5 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %4, i32 noundef 1) #27
  br i1 %5, label %7, label %6, !prof !10

6:                                                ; preds = %1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7020, i32 noundef 9, ptr noundef null) #27
  br label %7

7:                                                ; preds = %6, %1
  %8 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %9 = icmp eq ptr %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = tail call fastcc i32 @devlink_nl_health_reporter_fill(ptr noundef nonnull %8, ptr noundef %0, i32 noundef 54, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void @kfree_skb_reason(ptr noundef nonnull %8, i32 noundef 0) #27
  br label %27

14:                                               ; preds = %10
  %15 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %16 = icmp eq i8 %15, 0
  %17 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %18 = xor i1 %17, true
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %20, label %21, !prof !11

20:                                               ; preds = %14
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %21

21:                                               ; preds = %20, %14
  br i1 %16, label %27, label %22

22:                                               ; preds = %21
  %23 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %24 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %25 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 3, i32 16
  store i32 %23, ptr %25, align 8
  %26 = tail call i32 @netlink_broadcast(ptr noundef %24, ptr noundef nonnull %8, i32 noundef 0, i32 noundef %23, i32 noundef 3264) #27
  br label %27

27:                                               ; preds = %22, %21, %13, %7
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_health_do_dump(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 2
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %5, i32 0, i32 2
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %76, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 5
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %76

13:                                               ; preds = %9
  %14 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %15 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %14, i32 noundef 3520, i32 noundef 12) #28
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store ptr null, ptr %10, align 8
  br label %76

18:                                               ; preds = %13
  store volatile ptr %15, ptr %15, align 8
  %19 = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  store ptr %15, ptr %19, align 4
  store ptr %15, ptr %10, align 8
  %20 = getelementptr inbounds %struct.devlink_fmsg, ptr %15, i32 0, i32 1
  %21 = load i8, ptr %20, align 8, !range !18
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %73

23:                                               ; preds = %18
  %24 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %25 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %24, i32 noundef 3520, i32 noundef 16) #28
  %26 = icmp eq ptr %25, null
  br i1 %26, label %56, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %25, i32 0, i32 1
  store i32 107, ptr %28, align 8
  %29 = load ptr, ptr %19, align 4
  store ptr %25, ptr %19, align 4
  store ptr %15, ptr %25, align 8
  %30 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  store ptr %29, ptr %30, align 4
  store volatile ptr %25, ptr %29, align 4
  %31 = load ptr, ptr %4, align 4
  %32 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %31, i32 0, i32 2
  %33 = load ptr, ptr %32, align 4
  %34 = load ptr, ptr %10, align 8
  %35 = tail call i32 %33(ptr noundef %0, ptr noundef %34, ptr noundef %1, ptr noundef %2) #27
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %56

37:                                               ; preds = %27
  %38 = load ptr, ptr %10, align 8
  %39 = getelementptr inbounds %struct.devlink_fmsg, ptr %38, i32 0, i32 1
  %40 = load i8, ptr %39, align 4, !range !18
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %59

42:                                               ; preds = %37
  %43 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %44 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %43, i32 noundef 3520, i32 noundef 16) #28
  %45 = icmp eq ptr %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %44, i32 0, i32 1
  store i32 110, ptr %47, align 8
  %48 = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  %49 = load ptr, ptr %48, align 4
  store ptr %44, ptr %48, align 4
  store ptr %38, ptr %44, align 8
  %50 = getelementptr inbounds %struct.list_head, ptr %44, i32 0, i32 1
  store ptr %49, ptr %50, align 4
  store volatile ptr %44, ptr %49, align 4
  %51 = load volatile i32, ptr @jiffies, align 64
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 11
  store i64 %52, ptr %53, align 8
  %54 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #27
  %55 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 12
  store i64 %54, ptr %55, align 8
  br label %76

56:                                               ; preds = %42, %27, %23
  %57 = phi i32 [ -12, %42 ], [ -12, %23 ], [ %35, %27 ]
  %58 = load ptr, ptr %10, align 8
  br label %59

59:                                               ; preds = %56, %37
  %60 = phi ptr [ %58, %56 ], [ %38, %37 ]
  %61 = phi i32 [ %57, %56 ], [ -22, %37 ]
  %62 = icmp eq ptr %60, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = load ptr, ptr %60, align 4
  %65 = icmp eq ptr %64, %60
  br i1 %65, label %73, label %66

66:                                               ; preds = %66, %63
  %67 = phi ptr [ %68, %66 ], [ %64, %63 ]
  %68 = load ptr, ptr %67, align 4
  %69 = getelementptr inbounds %struct.list_head, ptr %67, i32 0, i32 1
  %70 = load ptr, ptr %69, align 4
  %71 = getelementptr inbounds %struct.list_head, ptr %68, i32 0, i32 1
  store ptr %70, ptr %71, align 4
  store volatile ptr %68, ptr %70, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %67, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %69, align 4
  tail call void @kfree(ptr noundef %67) #27
  %72 = icmp eq ptr %68, %60
  br i1 %72, label %73, label %66

73:                                               ; preds = %66, %63, %18
  %74 = phi ptr [ %60, %63 ], [ %15, %18 ], [ %60, %66 ]
  %75 = phi i32 [ %61, %63 ], [ -22, %18 ], [ %61, %66 ]
  tail call void @kfree(ptr noundef nonnull %74) #27
  store ptr null, ptr %10, align 8
  br label %76

76:                                               ; preds = %73, %59, %46, %17, %9, %3
  %77 = phi i32 [ 0, %46 ], [ 0, %3 ], [ 0, %9 ], [ -12, %17 ], [ %61, %59 ], [ %75, %73 ]
  ret i32 %77
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_health_reporter_state_update(ptr nocapture noundef %0, i32 noundef %1) #0 {
  %3 = icmp ne i32 %1, 0
  %4 = icmp ugt i32 %1, 1
  br i1 %4, label %5, label %6, !prof !11

5:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7228, i32 noundef 9, ptr noundef null) #27
  br label %44

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 10
  %8 = load i8, ptr %7, align 2
  %9 = zext i8 %8 to i32
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %44, label %11

11:                                               ; preds = %6
  %12 = trunc i32 %1 to i8
  store i8 %12, ptr %7, align 2
  %13 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 3
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 4
  %17 = load ptr, ptr %16, align 4
  %18 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_reporter_state_update, i32 0, i32 1), align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %11
  %21 = tail call ptr @llvm.thread.pointer() #27
  %22 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %23 = load i32, ptr %22, align 8
  %24 = lshr i32 %23, 5
  %25 = getelementptr i32, ptr @__cpu_online_mask, i32 %24
  %26 = load volatile i32, ptr %25, align 4
  %27 = and i32 %23, 31
  %28 = shl nuw i32 1, %27
  %29 = and i32 %28, %26
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %20
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !23
  %32 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_health_reporter_state_update, i32 0, i32 7), align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %34, %31
  %35 = phi ptr [ %39, %34 ], [ %32, %31 ]
  %36 = load volatile ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.tracepoint_func, ptr %35, i32 0, i32 1
  %38 = load ptr, ptr %37, align 4
  tail call void %36(ptr noundef %38, ptr noundef %14, ptr noundef %17, i1 noundef zeroext %3) #27
  %39 = getelementptr %struct.tracepoint_func, ptr %35, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %34

42:                                               ; preds = %34, %31
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  br label %43

43:                                               ; preds = %42, %20, %11
  tail call fastcc void @devlink_recover_notify(ptr noundef %0)
  br label %44

44:                                               ; preds = %43, %6, %5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_set_features(ptr nocapture noundef %0, i64 noundef %1) #0 {
  %3 = load i32, ptr %0, align 32
  %4 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %3, i32 noundef 1) #27
  %5 = load i1, ptr @devlink_set_features.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %9, !prof !11

8:                                                ; preds = %2
  store i1 true, ptr @devlink_set_features.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9001, i32 noundef 9, ptr noundef null) #27
  br label %9

9:                                                ; preds = %8, %2
  %10 = and i64 %1, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink_ops, ptr %14, i32 0, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.devlink_ops, ptr %14, i32 0, i32 4
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %23, !prof !11

22:                                               ; preds = %18, %12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9004, i32 noundef 9, ptr noundef null) #27
  br label %23

23:                                               ; preds = %22, %18, %9
  %24 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 15
  store i64 %1, ptr %24, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xa_get_mark(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @devlink_alloc_ns(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2, ptr noundef %3) #0 {
  %5 = icmp eq ptr %0, null
  %6 = icmp eq ptr %3, null
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %9, !prof !11

8:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9029, i32 noundef 9, ptr noundef null) #27
  br label %9

9:                                                ; preds = %8, %4
  %10 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 3
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 4
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %13, %9
  %18 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %41, label %21, !prof !10

21:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8967, i32 noundef 9, ptr noundef null) #27
  br label %84

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 1
  %24 = load i32, ptr %23, align 4
  %25 = and i32 %24, 1
  %26 = icmp ne i32 %25, 0
  %27 = add i32 %24, -8
  %28 = icmp ult i32 %27, -7
  %29 = or i1 %28, %26
  br i1 %29, label %30, label %31, !prof !11

30:                                               ; preds = %22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8974, i32 noundef 9, ptr noundef null) #27
  br label %84

31:                                               ; preds = %22
  %32 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 2
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, -3
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !10

36:                                               ; preds = %31
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8978, i32 noundef 9, ptr noundef null) #27
  br label %84

37:                                               ; preds = %31
  %38 = icmp ne i32 %24, 2
  %39 = icmp ne i32 %33, 2
  %40 = select i1 %38, i1 true, i1 %39
  br i1 %40, label %41, label %84

41:                                               ; preds = %37, %17
  %42 = add i32 %1, 256
  %43 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %42, i32 noundef 3520) #29
  %44 = icmp eq ptr %43, null
  br i1 %44, label %84, label %45

45:                                               ; preds = %41
  tail call void @_raw_spin_lock(ptr noundef nonnull @devlinks) #27
  %46 = tail call i32 @__xa_alloc_cyclic(ptr noundef nonnull @devlinks, ptr noundef nonnull %43, ptr noundef nonnull %43, [2 x i32] [i32 2147483647, i32 0], ptr noundef nonnull @devlink_alloc_ns.last_id, i32 noundef 3264) #27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !25
  %47 = load i16, ptr @devlinks, align 4
  %48 = add i16 %47, 1
  store i16 %48, ptr @devlinks, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !28
  %49 = icmp slt i32 %46, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  tail call void @kfree(ptr noundef nonnull %43) #27
  br label %84

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 18
  store ptr %3, ptr %52, align 4
  %53 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 14
  store ptr %0, ptr %53, align 4
  %54 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 16
  store i32 0, ptr %54, align 64
  %55 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 16, i32 1
  store i32 33554436, ptr %55, align 4
  %56 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 16, i32 2
  store ptr null, ptr %56, align 8
  %57 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 1
  store volatile ptr %57, ptr %57, align 4
  %58 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 1, i32 1
  store ptr %57, ptr %58, align 8
  %59 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 2
  store volatile ptr %59, ptr %59, align 4
  %60 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 2, i32 1
  store ptr %59, ptr %60, align 16
  %61 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 3
  store volatile ptr %61, ptr %61, align 4
  %62 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 3, i32 1
  store ptr %61, ptr %62, align 8
  %63 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 4
  store volatile ptr %63, ptr %63, align 4
  %64 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 4, i32 1
  store volatile ptr %63, ptr %64, align 32
  %65 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 5
  store volatile ptr %65, ptr %65, align 4
  %66 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 5, i32 1
  store ptr %65, ptr %66, align 8
  %67 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 6
  store volatile ptr %67, ptr %67, align 4
  %68 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 6, i32 1
  store ptr %67, ptr %68, align 16
  %69 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 7
  store volatile ptr %69, ptr %69, align 4
  %70 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 7, i32 1
  store ptr %69, ptr %70, align 8
  %71 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 8
  store volatile ptr %71, ptr %71, align 4
  %72 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 8, i32 1
  store ptr %71, ptr %72, align 64
  %73 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 11
  store volatile ptr %73, ptr %73, align 4
  %74 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 11, i32 1
  store ptr %73, ptr %74, align 32
  %75 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 12
  store volatile ptr %75, ptr %75, align 4
  %76 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 12, i32 1
  store ptr %75, ptr %76, align 8
  %77 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 13
  store volatile ptr %77, ptr %77, align 4
  %78 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 13, i32 1
  store ptr %77, ptr %78, align 16
  %79 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 20
  tail call void @__mutex_init(ptr noundef %79, ptr noundef nonnull @.str.4, ptr noundef nonnull @devlink_alloc_ns.__key) #27
  %80 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 9
  tail call void @__mutex_init(ptr noundef %80, ptr noundef nonnull @.str.6, ptr noundef nonnull @devlink_alloc_ns.__key.5) #27
  %81 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 22
  store volatile i32 1, ptr %81, align 8
  %82 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 23
  store i32 0, ptr %82, align 4
  %83 = getelementptr inbounds %struct.devlink, ptr %43, i32 0, i32 23, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %83, ptr noundef nonnull @.str.86, ptr noundef nonnull @init_completion.__key) #27
  br label %84

84:                                               ; preds = %51, %50, %41, %37, %36, %30, %21
  %85 = phi ptr [ null, %50 ], [ %43, %51 ], [ null, %37 ], [ null, %41 ], [ null, %30 ], [ null, %36 ], [ null, %21 ]
  ret ptr %85
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_register(ptr noundef %0) #0 {
  %2 = load i32, ptr %0, align 32
  %3 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %2, i32 noundef 1) #27
  %4 = load i1, ptr @devlink_register.__already_done, align 1
  %5 = xor i1 %4, true
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %1
  store i1 true, ptr @devlink_register.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9159, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %7, %1
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  %9 = load i32, ptr %0, align 32
  tail call void @xa_set_mark(ptr noundef nonnull @devlinks, i32 noundef %9, i32 noundef 1) #27
  tail call fastcc void @devlink_notify(ptr noundef %0, i32 noundef 3) #27
  %10 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, %10
  br i1 %12, label %17, label %13

13:                                               ; preds = %13, %8
  %14 = phi ptr [ %15, %13 ], [ %11, %8 ]
  tail call fastcc void @devlink_port_notify(ptr noundef %14, i32 noundef 7) #27
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %10
  br i1 %16, label %17, label %13

17:                                               ; preds = %13, %8
  %18 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %21, %17
  %22 = phi ptr [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr i8, ptr %22, i32 -24
  tail call fastcc void @devlink_trap_policer_notify(ptr noundef %0, ptr noundef %23, i32 noundef 71) #27
  %24 = load ptr, ptr %22, align 4
  %25 = icmp eq ptr %24, %18
  br i1 %25, label %26, label %21

26:                                               ; preds = %21, %17
  %27 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, %27
  br i1 %29, label %35, label %30

30:                                               ; preds = %30, %26
  %31 = phi ptr [ %33, %30 ], [ %28, %26 ]
  %32 = getelementptr i8, ptr %31, i32 -8
  tail call fastcc void @devlink_trap_group_notify(ptr noundef %0, ptr noundef %32, i32 noundef 67) #27
  %33 = load ptr, ptr %31, align 4
  %34 = icmp eq ptr %33, %27
  br i1 %34, label %35, label %30

35:                                               ; preds = %30, %26
  %36 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, %36
  br i1 %38, label %44, label %39

39:                                               ; preds = %39, %35
  %40 = phi ptr [ %42, %39 ], [ %37, %35 ]
  %41 = getelementptr i8, ptr %40, i32 -8
  tail call fastcc void @devlink_trap_notify(ptr noundef %0, ptr noundef %41, i32 noundef 63) #27
  %42 = load ptr, ptr %40, align 4
  %43 = icmp eq ptr %42, %36
  br i1 %43, label %44, label %39

44:                                               ; preds = %39, %35
  %45 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 2
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %45
  br i1 %47, label %52, label %48

48:                                               ; preds = %48, %44
  %49 = phi ptr [ %50, %48 ], [ %46, %44 ]
  tail call fastcc void @devlink_rate_notify(ptr noundef %49, i32 noundef 76) #27
  %50 = load ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, %45
  br i1 %51, label %52, label %48

52:                                               ; preds = %48, %44
  %53 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 7
  %54 = load ptr, ptr %53, align 4
  %55 = icmp eq ptr %54, %53
  br i1 %55, label %61, label %56

56:                                               ; preds = %56, %52
  %57 = phi ptr [ %59, %56 ], [ %54, %52 ]
  %58 = getelementptr i8, ptr %57, i32 -8
  tail call fastcc void @devlink_nl_region_notify(ptr noundef %58, ptr noundef null, i32 noundef 44) #27
  %59 = load ptr, ptr %57, align 4
  %60 = icmp eq ptr %59, %53
  br i1 %60, label %61, label %56

61:                                               ; preds = %56, %52
  %62 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, %62
  br i1 %64, label %69, label %65

65:                                               ; preds = %65, %61
  %66 = phi ptr [ %67, %65 ], [ %63, %61 ]
  tail call fastcc void @devlink_param_notify(ptr noundef %0, i32 noundef 0, ptr noundef %66, i32 noundef 40) #27
  %67 = load ptr, ptr %66, align 4
  %68 = icmp eq ptr %67, %62
  br i1 %68, label %69, label %65

69:                                               ; preds = %65, %61
  tail call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xa_set_mark(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_unregister(ptr noundef %0) #0 {
  %2 = load i32, ptr %0, align 32
  %3 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %2, i32 noundef 1) #27
  %4 = load i1, ptr @devlink_unregister.__already_done, align 1
  %5 = select i1 %3, i1 true, i1 %4
  br i1 %5, label %7, label %6, !prof !10

6:                                                ; preds = %1
  store i1 true, ptr @devlink_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9176, i32 noundef 9, ptr noundef null) #27
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %8) #27, !srcloc !14
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 1, ptr elementtype(i32) %8) #27, !srcloc !15
  %10 = extractvalue { i32, i32, i32 } %9, 0
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %17, label %14, !prof !10

14:                                               ; preds = %12
  tail call void @refcount_warn_saturate(ptr noundef %8, i32 noundef 3) #27
  br label %17

15:                                               ; preds = %7
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %16 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 23
  tail call void @complete(ptr noundef %16) #27
  br label %17

17:                                               ; preds = %15, %14, %12
  %18 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 23
  tail call void @wait_for_completion(ptr noundef %18) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  %19 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, %19
  br i1 %22, label %28, label %23

23:                                               ; preds = %23, %17
  %24 = phi ptr [ %26, %23 ], [ %21, %17 ]
  tail call fastcc void @devlink_param_notify(ptr noundef %0, i32 noundef 0, ptr noundef %24, i32 noundef 41) #27
  %25 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, %19
  br i1 %27, label %28, label %23

28:                                               ; preds = %23, %17
  %29 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 7
  %30 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 7, i32 1
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, %29
  br i1 %32, label %39, label %33

33:                                               ; preds = %33, %28
  %34 = phi ptr [ %37, %33 ], [ %31, %28 ]
  %35 = getelementptr i8, ptr %34, i32 -8
  tail call fastcc void @devlink_nl_region_notify(ptr noundef %35, ptr noundef null, i32 noundef 45) #27
  %36 = getelementptr inbounds %struct.list_head, ptr %34, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, %29
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %28
  %40 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 2
  %41 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 2, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, %40
  br i1 %43, label %49, label %44

44:                                               ; preds = %44, %39
  %45 = phi ptr [ %47, %44 ], [ %42, %39 ]
  tail call fastcc void @devlink_rate_notify(ptr noundef %45, i32 noundef 77) #27
  %46 = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  %47 = load ptr, ptr %46, align 4
  %48 = icmp eq ptr %47, %40
  br i1 %48, label %49, label %44

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11
  %51 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11, i32 1
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, %50
  br i1 %53, label %60, label %54

54:                                               ; preds = %54, %49
  %55 = phi ptr [ %58, %54 ], [ %52, %49 ]
  %56 = getelementptr i8, ptr %55, i32 -8
  tail call fastcc void @devlink_trap_notify(ptr noundef %0, ptr noundef %56, i32 noundef 64) #27
  %57 = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, %50
  br i1 %59, label %60, label %54

60:                                               ; preds = %54, %49
  %61 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12
  %62 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12, i32 1
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, %61
  br i1 %64, label %71, label %65

65:                                               ; preds = %65, %60
  %66 = phi ptr [ %69, %65 ], [ %63, %60 ]
  %67 = getelementptr i8, ptr %66, i32 -8
  tail call fastcc void @devlink_trap_group_notify(ptr noundef %0, ptr noundef %67, i32 noundef 68) #27
  %68 = getelementptr inbounds %struct.list_head, ptr %66, i32 0, i32 1
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, %61
  br i1 %70, label %71, label %65

71:                                               ; preds = %65, %60
  %72 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13
  %73 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13, i32 1
  %74 = load ptr, ptr %73, align 4
  %75 = icmp eq ptr %74, %72
  br i1 %75, label %82, label %76

76:                                               ; preds = %76, %71
  %77 = phi ptr [ %80, %76 ], [ %74, %71 ]
  %78 = getelementptr i8, ptr %77, i32 -24
  tail call fastcc void @devlink_trap_policer_notify(ptr noundef %0, ptr noundef %78, i32 noundef 72) #27
  %79 = getelementptr inbounds %struct.list_head, ptr %77, i32 0, i32 1
  %80 = load ptr, ptr %79, align 4
  %81 = icmp eq ptr %80, %72
  br i1 %81, label %82, label %76

82:                                               ; preds = %76, %71
  %83 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 1
  %84 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 1, i32 1
  %85 = load ptr, ptr %84, align 4
  %86 = icmp eq ptr %85, %83
  br i1 %86, label %92, label %87

87:                                               ; preds = %87, %82
  %88 = phi ptr [ %90, %87 ], [ %85, %82 ]
  tail call fastcc void @devlink_port_notify(ptr noundef %88, i32 noundef 8) #27
  %89 = getelementptr inbounds %struct.list_head, ptr %88, i32 0, i32 1
  %90 = load ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, %83
  br i1 %91, label %92, label %87

92:                                               ; preds = %87, %82
  tail call fastcc void @devlink_notify(ptr noundef %0, i32 noundef 4) #27
  %93 = load i32, ptr %0, align 32
  tail call void @xa_clear_mark(ptr noundef nonnull @devlinks, i32 noundef %93, i32 noundef 1) #27
  tail call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @xa_clear_mark(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_free(ptr noundef %0) #0 {
  %2 = load i32, ptr %0, align 32
  %3 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %2, i32 noundef 1) #27
  %4 = load i1, ptr @devlink_free.__already_done, align 1
  %5 = xor i1 %4, true
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %1
  store i1 true, ptr @devlink_free.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9196, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13
  %10 = load volatile ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, %9
  br i1 %11, label %13, label %12, !prof !10

12:                                               ; preds = %8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9200, i32 noundef 9, ptr noundef null) #27
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %14
  br i1 %16, label %18, label %17, !prof !10

17:                                               ; preds = %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9201, i32 noundef 9, ptr noundef null) #27
  br label %18

18:                                               ; preds = %17, %13
  %19 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, %19
  br i1 %21, label %23, label %22, !prof !10

22:                                               ; preds = %18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9202, i32 noundef 9, ptr noundef null) #27
  br label %23

23:                                               ; preds = %22, %18
  %24 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 8
  %25 = load volatile ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, %24
  br i1 %26, label %28, label %27, !prof !10

27:                                               ; preds = %23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9203, i32 noundef 9, ptr noundef null) #27
  br label %28

28:                                               ; preds = %27, %23
  %29 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 7
  %30 = load volatile ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, %29
  br i1 %31, label %33, label %32, !prof !10

32:                                               ; preds = %28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9204, i32 noundef 9, ptr noundef null) #27
  br label %33

33:                                               ; preds = %32, %28
  %34 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  %35 = load volatile ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, %34
  br i1 %36, label %38, label %37, !prof !10

37:                                               ; preds = %33
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9205, i32 noundef 9, ptr noundef null) #27
  br label %38

38:                                               ; preds = %37, %33
  %39 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 5
  %40 = load volatile ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, %39
  br i1 %41, label %43, label %42, !prof !10

42:                                               ; preds = %38
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9206, i32 noundef 9, ptr noundef null) #27
  br label %43

43:                                               ; preds = %42, %38
  %44 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 4
  %45 = load volatile ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, %44
  br i1 %46, label %48, label %47, !prof !10

47:                                               ; preds = %43
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9207, i32 noundef 9, ptr noundef null) #27
  br label %48

48:                                               ; preds = %47, %43
  %49 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 3
  %50 = load volatile ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, %49
  br i1 %51, label %53, label %52, !prof !10

52:                                               ; preds = %48
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9208, i32 noundef 9, ptr noundef null) #27
  br label %53

53:                                               ; preds = %52, %48
  %54 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 2
  %55 = load volatile ptr, ptr %54, align 4
  %56 = icmp eq ptr %55, %54
  br i1 %56, label %58, label %57, !prof !10

57:                                               ; preds = %53
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9209, i32 noundef 9, ptr noundef null) #27
  br label %58

58:                                               ; preds = %57, %53
  %59 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 1
  %60 = load volatile ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, %59
  br i1 %61, label %63, label %62, !prof !10

62:                                               ; preds = %58
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9210, i32 noundef 9, ptr noundef null) #27
  br label %63

63:                                               ; preds = %62, %58
  %64 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 16
  tail call void @xa_destroy(ptr noundef %64) #27
  %65 = load i32, ptr %0, align 32
  %66 = tail call ptr @xa_erase(ptr noundef nonnull @devlinks, i32 noundef %65) #27
  tail call void @kfree(ptr noundef %0) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xa_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_erase(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_port_register(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 1
  br label %6

6:                                                ; preds = %10, %3
  %7 = phi ptr [ %5, %3 ], [ %8, %10 ]
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %5
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.devlink_port, ptr %8, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, %2
  br i1 %13, label %14, label %6

14:                                               ; preds = %10
  %15 = icmp eq ptr %8, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %14
  tail call void @mutex_unlock(ptr noundef %4) #27
  br label %46

17:                                               ; preds = %14, %6
  %18 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21, !prof !10

21:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9275, i32 noundef 9, ptr noundef null) #27
  br label %22

22:                                               ; preds = %21, %17
  store ptr %0, ptr %18, align 4
  %23 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 4
  store i32 %2, ptr %23, align 4
  %24 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 5
  store i32 0, ptr %24, align 4
  %25 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 12
  store volatile ptr %25, ptr %25, align 4
  %26 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 12, i32 1
  store ptr %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 13
  tail call void @__mutex_init(ptr noundef %27, ptr noundef nonnull @.str.7, ptr noundef nonnull @devlink_port_register.__key) #27
  %28 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 1, i32 1
  %29 = load ptr, ptr %28, align 4
  store ptr %1, ptr %28, align 4
  store ptr %5, ptr %1, align 4
  %30 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  store ptr %29, ptr %30, align 4
  store volatile ptr %1, ptr %29, align 4
  %31 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 1
  store volatile ptr %31, ptr %31, align 4
  %32 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 1, i32 1
  store ptr %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 2
  store volatile ptr %33, ptr %33, align 4
  %34 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 2, i32 1
  store ptr %33, ptr %34, align 4
  tail call void @mutex_unlock(ptr noundef %4) #27
  %35 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 11
  store i32 -32, ptr %35, align 4
  %36 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 11, i32 0, i32 1
  store volatile ptr %36, ptr %36, align 4
  %37 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 11, i32 0, i32 1, i32 1
  store ptr %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 11, i32 0, i32 2
  store ptr @devlink_port_type_warn, ptr %38, align 4
  %39 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 11, i32 1
  tail call void @init_timer_key(ptr noundef %39, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #27
  %40 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 2
  %41 = load i32, ptr %40, align 4
  switch i32 %41, label %42 [
    i32 1, label %45
    i32 2, label %45
    i32 6, label %45
  ]

42:                                               ; preds = %22
  %43 = load ptr, ptr @system_wq, align 4
  %44 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %43, ptr noundef %35, i32 noundef 360000) #27
  br label %45

45:                                               ; preds = %42, %22, %22, %22
  tail call fastcc void @devlink_port_notify(ptr noundef %1, i32 noundef 7)
  br label %46

46:                                               ; preds = %45, %16
  %47 = phi i32 [ -17, %16 ], [ 0, %45 ]
  ret i32 %47
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #10

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @devlink_port_type_warn(ptr nocapture noundef readnone %0) #0 {
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9221, i32 noundef 9, ptr noundef nonnull @.str.87) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_port_notify(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 4
  %5 = add i32 %1, -9
  %6 = icmp ult i32 %5, -2
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1153, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %7, %2
  %9 = load i32, ptr %4, align 32
  %10 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %9, i32 noundef 1) #27
  br i1 %10, label %11, label %31

11:                                               ; preds = %8
  %12 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %13 = icmp eq ptr %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @devlink_nl_port_fill(ptr noundef nonnull %12, ptr noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @kfree_skb_reason(ptr noundef nonnull %12, i32 noundef 0) #27
  br label %31

18:                                               ; preds = %14
  %19 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %20 = icmp eq i8 %19, 0
  %21 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %22 = xor i1 %21, true
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %25, !prof !11

24:                                               ; preds = %18
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %25

25:                                               ; preds = %24, %18
  br i1 %20, label %31, label %26

26:                                               ; preds = %25
  %27 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %28 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %29 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 16
  store i32 %27, ptr %29, align 8
  %30 = tail call i32 @netlink_broadcast(ptr noundef %28, ptr noundef nonnull %12, i32 noundef 0, i32 noundef %27, i32 noundef 3264) #27
  br label %31

31:                                               ; preds = %26, %25, %17, %11, %8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_unregister(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  %5 = load i32, ptr %4, align 4
  switch i32 %5, label %6 [
    i32 1, label %9
    i32 2, label %9
    i32 6, label %9
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 11
  %8 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %7) #27
  br label %9

9:                                                ; preds = %6, %1, %1, %1
  tail call fastcc void @devlink_port_notify(ptr noundef %0, i32 noundef 8)
  %10 = getelementptr inbounds %struct.devlink, ptr %3, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %10) #27
  %11 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = load ptr, ptr %0, align 4
  %14 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  store ptr %12, ptr %14, align 4
  store volatile ptr %13, ptr %12, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %0, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %11, align 4
  tail call void @mutex_unlock(ptr noundef %10) #27
  %15 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 12
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %15
  br i1 %17, label %19, label %18, !prof !10

18:                                               ; preds = %9
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9306, i32 noundef 9, ptr noundef null) #27
  br label %19

19:                                               ; preds = %18, %9
  %20 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 2
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, %20
  br i1 %22, label %24, label %23, !prof !10

23:                                               ; preds = %19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9307, i32 noundef 9, ptr noundef null) #27
  br label %24

24:                                               ; preds = %23, %19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_type_eth_set(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca [16 x i8], align 1
  %4 = alloca %struct.netdev_phys_item_id, align 1
  %5 = icmp eq ptr %1, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.net_device_ops, ptr %8, i32 0, i32 59
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %3, i8 0, i32 16, i1 false) #27, !annotation !9
  %13 = call i32 %10(ptr noundef nonnull %1, ptr noundef nonnull %3, i32 noundef 16) #27
  %14 = icmp eq i32 %13, -95
  br i1 %14, label %16, label %15, !prof !10

15:                                               ; preds = %12
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9346, i32 noundef 9, ptr noundef null) #27
  br label %16

16:                                               ; preds = %15, %12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #27
  br label %17

17:                                               ; preds = %16, %6
  %18 = getelementptr inbounds %struct.net_device_ops, ptr %8, i32 0, i32 58
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(33) %4, i8 0, i32 33, i1 false) #27, !annotation !9
  %22 = call i32 %19(ptr noundef nonnull %1, ptr noundef nonnull %4) #27
  %23 = icmp eq i32 %22, -95
  br i1 %23, label %25, label %24, !prof !10

24:                                               ; preds = %21
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9359, i32 noundef 9, ptr noundef null) #27
  br label %25

25:                                               ; preds = %24, %21
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %4) #27
  br label %33

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.devlink, ptr %28, i32 0, i32 18
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 4
  %32 = load i32, ptr %31, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %30, ptr noundef nonnull @.str.8, i32 noundef %32) #30
  br label %33

33:                                               ; preds = %26, %25, %17
  %34 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %38, !prof !11

37:                                               ; preds = %33
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9316, i32 noundef 9, ptr noundef null) #27
  br label %48

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  %40 = load i32, ptr %39, align 4
  switch i32 %40, label %41 [
    i32 1, label %44
    i32 2, label %44
    i32 6, label %44
  ]

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 11
  %43 = call zeroext i1 @cancel_delayed_work_sync(ptr noundef %42) #27
  br label %44

44:                                               ; preds = %41, %38, %38, %38
  %45 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 5
  call void @_raw_spin_lock_bh(ptr noundef %45) #27
  %46 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 6
  store i32 2, ptr %46, align 4
  %47 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 8
  store ptr %1, ptr %47, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %45) #27
  call fastcc void @devlink_port_notify(ptr noundef %0, i32 noundef 7) #27
  br label %48

48:                                               ; preds = %44, %37
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_type_ib_set(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %7, !prof !11

6:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9316, i32 noundef 9, ptr noundef null) #27
  br label %17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  %9 = load i32, ptr %8, align 4
  switch i32 %9, label %10 [
    i32 1, label %13
    i32 2, label %13
    i32 6, label %13
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 11
  %12 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %11) #27
  br label %13

13:                                               ; preds = %10, %7, %7, %7
  %14 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 5
  tail call void @_raw_spin_lock_bh(ptr noundef %14) #27
  %15 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 6
  store i32 3, ptr %15, align 4
  %16 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 8
  store ptr %1, ptr %16, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %14) #27
  tail call fastcc void @devlink_port_notify(ptr noundef %0, i32 noundef 7) #27
  br label %17

17:                                               ; preds = %13, %6
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_type_clear(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %6, !prof !11

5:                                                ; preds = %1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9316, i32 noundef 9, ptr noundef null) #27
  br label %16

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  %8 = load i32, ptr %7, align 4
  switch i32 %8, label %9 [
    i32 1, label %12
    i32 2, label %12
    i32 6, label %12
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 11
  %11 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %10) #27
  br label %12

12:                                               ; preds = %9, %6, %6, %6
  %13 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 5
  tail call void @_raw_spin_lock_bh(ptr noundef %13) #27
  %14 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 6
  store i32 0, ptr %14, align 4
  %15 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 8
  store ptr null, ptr %15, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %13) #27
  tail call fastcc void @devlink_port_notify(ptr noundef %0, i32 noundef 7) #27
  br label %16

16:                                               ; preds = %12, %5
  %17 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  %18 = load i32, ptr %17, align 4
  switch i32 %18, label %19 [
    i32 1, label %23
    i32 2, label %23
    i32 6, label %23
  ]

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 11
  %21 = load ptr, ptr @system_wq, align 4
  %22 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %21, ptr noundef %20, i32 noundef 360000) #27
  br label %23

23:                                               ; preds = %19, %16, %16, %16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_attrs_set(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %27, !prof !10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(60) %7, ptr noundef align 4 dereferenceable(60) %1, i32 60, i1 false)
  %8 = getelementptr inbounds %struct.devlink_port_attrs, ptr %1, i32 0, i32 2
  %9 = load i32, ptr %8, align 4
  %10 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 10
  %11 = load i8, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  store i32 %9, ptr %12, align 4
  %13 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 3, i32 1
  %14 = load i8, ptr %13, align 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6
  %17 = or i8 %11, 3
  store i8 %17, ptr %10, align 4
  %18 = icmp ugt i8 %14, 32
  br i1 %18, label %19, label %23, !prof !11

19:                                               ; preds = %16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9417, i32 noundef 9, ptr noundef null) #27
  store i8 32, ptr %13, align 4
  br label %23

20:                                               ; preds = %6
  %21 = and i8 %11, -4
  %22 = or i8 %21, 1
  store i8 %22, ptr %10, align 4
  br label %23

23:                                               ; preds = %20, %19, %16
  %24 = load i8, ptr %1, align 4
  %25 = and i8 %24, 3
  %26 = icmp eq i8 %25, 3
  br i1 %26, label %27, label %29, !prof !11

27:                                               ; preds = %23, %2
  %28 = phi i32 [ 9436, %2 ], [ 9442, %23 ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef %28, i32 noundef 9, ptr noundef null) #27
  br label %29

29:                                               ; preds = %27, %23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_attrs_pci_pf_set(ptr nocapture noundef %0, i32 noundef %1, i16 noundef zeroext %2, i1 noundef zeroext %3) #0 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9, !prof !10

9:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9460, i32 noundef 9, ptr noundef null) #27
  br label %31

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 10
  %12 = load i8, ptr %11, align 4
  %13 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  store i32 3, ptr %13, align 4
  %14 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 3, i32 1
  %15 = load i8, ptr %14, align 4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = or i8 %12, 3
  store i8 %18, ptr %11, align 4
  %19 = icmp ugt i8 %15, 32
  br i1 %19, label %20, label %24, !prof !11

20:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9417, i32 noundef 9, ptr noundef null) #27
  store i8 32, ptr %14, align 4
  br label %24

21:                                               ; preds = %10
  %22 = and i8 %12, -4
  %23 = or i8 %22, 1
  store i8 %23, ptr %11, align 4
  br label %24

24:                                               ; preds = %21, %20, %17
  %25 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4
  store i32 %1, ptr %25, align 4
  %26 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4, i32 0, i32 1
  store i16 %2, ptr %26, align 4
  %27 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4, i32 0, i32 2
  %28 = load i8, ptr %27, align 2
  %29 = and i8 %28, -2
  %30 = or i8 %29, %5
  store i8 %30, ptr %27, align 2
  br label %31

31:                                               ; preds = %24, %9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_attrs_pci_vf_set(ptr nocapture noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i1 noundef zeroext %4) #0 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10, !prof !10

10:                                               ; preds = %5
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9487, i32 noundef 9, ptr noundef null) #27
  br label %33

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 10
  %13 = load i8, ptr %12, align 4
  %14 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  store i32 4, ptr %14, align 4
  %15 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 3, i32 1
  %16 = load i8, ptr %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = or i8 %13, 3
  store i8 %19, ptr %12, align 4
  %20 = icmp ugt i8 %16, 32
  br i1 %20, label %21, label %25, !prof !11

21:                                               ; preds = %18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9417, i32 noundef 9, ptr noundef null) #27
  store i8 32, ptr %15, align 4
  br label %25

22:                                               ; preds = %11
  %23 = and i8 %13, -4
  %24 = or i8 %23, 1
  store i8 %24, ptr %12, align 4
  br label %25

25:                                               ; preds = %22, %21, %18
  %26 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4
  store i32 %1, ptr %26, align 4
  %27 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4, i32 0, i32 1
  store i16 %2, ptr %27, align 4
  %28 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4, i32 0, i32 2
  store i16 %3, ptr %28, align 2
  %29 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4, i32 0, i32 3
  %30 = load i8, ptr %29, align 4
  %31 = and i8 %30, -2
  %32 = or i8 %31, %6
  store i8 %32, ptr %29, align 4
  br label %33

33:                                               ; preds = %25, %10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_port_attrs_pci_sf_set(ptr nocapture noundef %0, i32 noundef %1, i16 noundef zeroext %2, i32 noundef %3, i1 noundef zeroext %4) #0 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10, !prof !10

10:                                               ; preds = %5
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9515, i32 noundef 9, ptr noundef null) #27
  br label %33

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 10
  %13 = load i8, ptr %12, align 4
  %14 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 2
  store i32 7, ptr %14, align 4
  %15 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 3, i32 1
  %16 = load i8, ptr %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = or i8 %13, 3
  store i8 %19, ptr %12, align 4
  %20 = icmp ugt i8 %16, 32
  br i1 %20, label %21, label %25, !prof !11

21:                                               ; preds = %18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9417, i32 noundef 9, ptr noundef null) #27
  store i8 32, ptr %15, align 4
  br label %25

22:                                               ; preds = %11
  %23 = and i8 %13, -4
  %24 = or i8 %23, 1
  store i8 %24, ptr %12, align 4
  br label %25

25:                                               ; preds = %22, %21, %18
  %26 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4
  store i32 %1, ptr %26, align 4
  %27 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4, i32 0, i32 3
  store i16 %2, ptr %27, align 4
  %28 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 9, i32 4, i32 0, i32 1
  store i32 %3, ptr %28, align 4
  %29 = getelementptr inbounds %struct.devlink_port_pci_sf_attrs, ptr %26, i32 0, i32 3
  %30 = load i8, ptr %29, align 2
  %31 = and i8 %30, -2
  %32 = or i8 %31, %6
  store i8 %32, ptr %29, align 2
  br label %33

33:                                               ; preds = %25, %10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_rate_leaf_create(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 4
  %5 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %6 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 3520, i32 noundef 56) #28
  %7 = icmp eq ptr %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %9) #27
  %10 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 14
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13, !prof !10

13:                                               ; preds = %8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9552, i32 noundef 9, ptr noundef null) #27
  br label %14

14:                                               ; preds = %13, %8
  %15 = getelementptr inbounds %struct.devlink_rate, ptr %6, i32 0, i32 1
  store i32 0, ptr %15, align 8
  %16 = getelementptr inbounds %struct.devlink_rate, ptr %6, i32 0, i32 2
  store ptr %4, ptr %16, align 4
  %17 = getelementptr inbounds %struct.devlink_rate, ptr %6, i32 0, i32 7
  store ptr %0, ptr %17, align 4
  %18 = getelementptr inbounds %struct.devlink_rate, ptr %6, i32 0, i32 3
  store ptr %1, ptr %18, align 8
  %19 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 2
  %20 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 2, i32 1
  %21 = load ptr, ptr %20, align 4
  store ptr %6, ptr %20, align 4
  store ptr %19, ptr %6, align 8
  %22 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  store ptr %21, ptr %22, align 4
  store volatile ptr %6, ptr %21, align 4
  store ptr %6, ptr %10, align 4
  tail call fastcc void @devlink_rate_notify(ptr noundef nonnull %6, i32 noundef 76)
  tail call void @mutex_unlock(ptr noundef %9) #27
  br label %23

23:                                               ; preds = %14, %2
  %24 = phi i32 [ 0, %14 ], [ -12, %2 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_rate_notify(ptr nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 4
  %5 = add i32 %1, -78
  %6 = icmp ult i32 %5, -2
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1179, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %7, %2
  %9 = load i32, ptr %4, align 32
  %10 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %9, i32 noundef 1) #27
  br i1 %10, label %11, label %31

11:                                               ; preds = %8
  %12 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %13 = icmp eq ptr %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @devlink_nl_rate_fill(ptr noundef nonnull %12, ptr noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @kfree_skb_reason(ptr noundef nonnull %12, i32 noundef 0) #27
  br label %31

18:                                               ; preds = %14
  %19 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %20 = icmp eq i8 %19, 0
  %21 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %22 = xor i1 %21, true
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %25, !prof !11

24:                                               ; preds = %18
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %25

25:                                               ; preds = %24, %18
  br i1 %20, label %31, label %26

26:                                               ; preds = %25
  %27 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %28 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %29 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 16
  store i32 %27, ptr %29, align 8
  %30 = tail call i32 @netlink_broadcast(ptr noundef %28, ptr noundef nonnull %12, i32 noundef 0, i32 noundef %27, i32 noundef 3264) #27
  br label %31

31:                                               ; preds = %26, %25, %17, %11, %8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_rate_leaf_destroy(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 14
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.devlink, ptr %7, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %8) #27
  tail call fastcc void @devlink_rate_notify(ptr noundef nonnull %3, i32 noundef 77)
  %9 = getelementptr inbounds %struct.devlink_rate, ptr %3, i32 0, i32 6
  %10 = load ptr, ptr %9, align 8
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.devlink_rate, ptr %10, i32 0, i32 7, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %15 = extractvalue { i32, i32, i32 } %14, 0
  %16 = icmp slt i32 %15, 2
  br i1 %16, label %17, label %18, !prof !11

17:                                               ; preds = %12
  tail call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 4) #27
  br label %18

18:                                               ; preds = %17, %12, %5
  %19 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %3, align 4
  %22 = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  store ptr %20, ptr %22, align 4
  store volatile ptr %21, ptr %20, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %3, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %19, align 4
  store ptr null, ptr %2, align 4
  tail call void @mutex_unlock(ptr noundef %8) #27
  tail call void @kfree(ptr noundef nonnull %3) #27
  br label %23

23:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_rate_nodes_destroy(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 4
  store ptr %6, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  %7 = icmp eq ptr %6, %5
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store ptr %5, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  store ptr %5, ptr @devlink_rate_nodes_destroy.tmp, align 4
  br label %68

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.devlink_ops, ptr %3, i32 0, i32 50
  %11 = getelementptr inbounds %struct.devlink_ops, ptr %3, i32 0, i32 49
  br label %18

12:                                               ; preds = %40
  %13 = load ptr, ptr %5, align 4
  %14 = load ptr, ptr %13, align 8
  store ptr %13, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  store ptr %14, ptr @devlink_rate_nodes_destroy.tmp, align 4
  %15 = icmp eq ptr %13, %5
  br i1 %15, label %68, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.devlink_ops, ptr %3, i32 0, i32 48
  br label %44

18:                                               ; preds = %40, %9
  %19 = phi ptr [ %6, %9 ], [ %42, %40 ]
  %20 = getelementptr inbounds %struct.devlink_rate, ptr %19, i32 0, i32 6
  %21 = load ptr, ptr %20, align 8
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.devlink_rate, ptr %21, i32 0, i32 7, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %24) #27, !srcloc !14
  %25 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %24, ptr %24, i32 1, ptr elementtype(i32) %24) #27, !srcloc !15
  %26 = extractvalue { i32, i32, i32 } %25, 0
  %27 = icmp slt i32 %26, 2
  br i1 %27, label %28, label %29, !prof !11

28:                                               ; preds = %23
  tail call void @refcount_warn_saturate(ptr noundef %24, i32 noundef 4) #27
  br label %29

29:                                               ; preds = %28, %23
  %30 = load ptr, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  %31 = getelementptr inbounds %struct.devlink_rate, ptr %30, i32 0, i32 1
  %32 = load i32, ptr %31, align 8
  switch i32 %32, label %40 [
    i32 0, label %34
    i32 1, label %33
  ]

33:                                               ; preds = %29
  br label %34

34:                                               ; preds = %33, %29
  %35 = phi ptr [ %10, %33 ], [ %11, %29 ]
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.devlink_rate, ptr %30, i32 0, i32 3
  %38 = load ptr, ptr %37, align 8
  %39 = tail call i32 %36(ptr noundef %30, ptr noundef null, ptr noundef %38, ptr noundef null, ptr noundef null) #27
  br label %40

40:                                               ; preds = %34, %29, %18
  %41 = load ptr, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  %42 = load ptr, ptr %41, align 4
  store ptr %42, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  %43 = icmp eq ptr %42, %5
  br i1 %43, label %12, label %18

44:                                               ; preds = %64, %16
  %45 = phi ptr [ %14, %16 ], [ %66, %64 ]
  %46 = phi ptr [ %13, %16 ], [ %65, %64 ]
  %47 = getelementptr inbounds %struct.devlink_rate, ptr %46, i32 0, i32 1
  %48 = load i32, ptr %47, align 8
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %64

50:                                               ; preds = %44
  %51 = load ptr, ptr %17, align 4
  %52 = getelementptr inbounds %struct.devlink_rate, ptr %46, i32 0, i32 3
  %53 = load ptr, ptr %52, align 8
  %54 = tail call i32 %51(ptr noundef %46, ptr noundef %53, ptr noundef null) #27
  %55 = load ptr, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  %56 = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  %57 = load ptr, ptr %56, align 4
  %58 = load ptr, ptr %55, align 4
  %59 = getelementptr inbounds %struct.list_head, ptr %58, i32 0, i32 1
  store ptr %57, ptr %59, align 4
  store volatile ptr %58, ptr %57, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %55, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %56, align 4
  %60 = getelementptr inbounds %struct.devlink_rate, ptr %55, i32 0, i32 7
  %61 = load ptr, ptr %60, align 4
  tail call void @kfree(ptr noundef %61) #27
  %62 = load ptr, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  tail call void @kfree(ptr noundef %62) #27
  %63 = load ptr, ptr @devlink_rate_nodes_destroy.tmp, align 4
  br label %64

64:                                               ; preds = %50, %44
  %65 = phi ptr [ %45, %44 ], [ %63, %50 ]
  store ptr %65, ptr @devlink_rate_nodes_destroy.devlink_rate, align 4
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr @devlink_rate_nodes_destroy.tmp, align 4
  %67 = icmp eq ptr %65, %5
  br i1 %67, label %68, label %44

68:                                               ; preds = %64, %12, %8
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_sb_register(ptr noundef %0, i32 noundef %1, i32 noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4, i16 noundef zeroext %5, i16 noundef zeroext %6) #0 {
  %8 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %8) #27
  %9 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 3
  br label %10

10:                                               ; preds = %14, %7
  %11 = phi ptr [ %9, %7 ], [ %12, %14 ]
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, %9
  br i1 %13, label %20, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.devlink_sb, ptr %12, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %10

18:                                               ; preds = %14
  %19 = icmp eq ptr %12, null
  br i1 %19, label %20, label %34

20:                                               ; preds = %18, %10
  %21 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %22 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %21, i32 noundef 3520, i32 noundef 24) #28
  %23 = icmp eq ptr %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.devlink_sb, ptr %22, i32 0, i32 1
  store i32 %1, ptr %25, align 8
  %26 = getelementptr inbounds %struct.devlink_sb, ptr %22, i32 0, i32 2
  store i32 %2, ptr %26, align 4
  %27 = getelementptr inbounds %struct.devlink_sb, ptr %22, i32 0, i32 3
  store i16 %3, ptr %27, align 8
  %28 = getelementptr inbounds %struct.devlink_sb, ptr %22, i32 0, i32 4
  store i16 %4, ptr %28, align 2
  %29 = getelementptr inbounds %struct.devlink_sb, ptr %22, i32 0, i32 5
  store i16 %5, ptr %29, align 4
  %30 = getelementptr inbounds %struct.devlink_sb, ptr %22, i32 0, i32 6
  store i16 %6, ptr %30, align 2
  %31 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 3, i32 1
  %32 = load ptr, ptr %31, align 4
  store ptr %22, ptr %31, align 4
  store ptr %9, ptr %22, align 8
  %33 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  store ptr %32, ptr %33, align 4
  store volatile ptr %22, ptr %32, align 4
  br label %34

34:                                               ; preds = %24, %20, %18
  %35 = phi i32 [ 0, %24 ], [ -17, %18 ], [ -12, %20 ]
  tail call void @mutex_unlock(ptr noundef %8) #27
  ret i32 %35
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_sb_unregister(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %3) #27
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 3
  br label %5

5:                                                ; preds = %9, %2
  %6 = phi ptr [ %4, %2 ], [ %7, %9 ]
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, %4
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.devlink_sb, ptr %7, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %13, label %5

13:                                               ; preds = %9
  %14 = icmp eq ptr %7, null
  br i1 %14, label %15, label %16, !prof !11

15:                                               ; preds = %13, %5
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9736, i32 noundef 9, ptr noundef null) #27
  br label %16

16:                                               ; preds = %15, %13
  %17 = phi ptr [ null, %15 ], [ %7, %13 ]
  %18 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %17, align 4
  %21 = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  store ptr %19, ptr %21, align 4
  store volatile ptr %20, ptr %19, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %17, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %18, align 4
  tail call void @mutex_unlock(ptr noundef %3) #27
  tail call void @kfree(ptr noundef %17) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_dpipe_headers_register(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %3) #27
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 10
  store ptr %1, ptr %4, align 8
  tail call void @mutex_unlock(ptr noundef %3) #27
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_dpipe_headers_unregister(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %2) #27
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 10
  store ptr null, ptr %3, align 8
  tail call void @mutex_unlock(ptr noundef %2) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @devlink_dpipe_table_counter_enabled(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !29
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 4
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi ptr [ %3, %2 ], [ %6, %8 ]
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, %3
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = getelementptr i8, ptr %6, i32 8
  %10 = load ptr, ptr %9, align 4
  %11 = tail call i32 @strcmp(ptr noundef %10, ptr noundef %1) #27
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %4

13:                                               ; preds = %8
  %14 = getelementptr i8, ptr %6, i32 -4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr i8, ptr %6, i32 12
  %18 = load i8, ptr %17, align 8, !range !18
  %19 = icmp ne i8 %18, 0
  br label %20

20:                                               ; preds = %16, %13, %4
  %21 = phi i1 [ %19, %16 ], [ false, %13 ], [ false, %4 ]
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  ret i1 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_dpipe_table_register(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i1 noundef zeroext %4) #0 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %struct.devlink_dpipe_table_ops, ptr %2, i32 0, i32 4
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %11, !prof !11

10:                                               ; preds = %5
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9824, i32 noundef 9, ptr noundef null) #27
  br label %40

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %12) #27
  %13 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 4
  br label %14

14:                                               ; preds = %18, %11
  %15 = phi ptr [ %13, %11 ], [ %16, %18 ]
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %13
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr i8, ptr %16, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = tail call i32 @strcmp(ptr noundef %20, ptr noundef %1) #27
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %14

23:                                               ; preds = %18
  %24 = getelementptr i8, ptr %16, i32 -4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %38

26:                                               ; preds = %23, %14
  %27 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %28 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %27, i32 noundef 3520, i32 noundef 56) #28
  %29 = icmp eq ptr %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %28, i32 0, i32 2
  store ptr %1, ptr %31, align 4
  %32 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %28, i32 0, i32 8
  store ptr %2, ptr %32, align 8
  store ptr %3, ptr %28, align 8
  %33 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %28, i32 0, i32 4
  store i8 %6, ptr %33, align 1
  %34 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %28, i32 0, i32 1
  %35 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 4, i32 1
  %36 = load ptr, ptr %35, align 4
  store ptr %13, ptr %34, align 4
  %37 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %28, i32 0, i32 1, i32 1
  store ptr %36, ptr %37, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !31
  store volatile ptr %34, ptr %36, align 4
  store ptr %34, ptr %35, align 4
  br label %38

38:                                               ; preds = %30, %26, %23
  %39 = phi i32 [ 0, %30 ], [ -17, %23 ], [ -12, %26 ]
  tail call void @mutex_unlock(ptr noundef %12) #27
  br label %40

40:                                               ; preds = %38, %10
  %41 = phi i32 [ -22, %10 ], [ %39, %38 ]
  ret i32 %41
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_dpipe_table_unregister(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %3) #27
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 4
  br label %5

5:                                                ; preds = %9, %2
  %6 = phi ptr [ %4, %2 ], [ %7, %9 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, %4
  br i1 %8, label %23, label %9

9:                                                ; preds = %5
  %10 = getelementptr i8, ptr %7, i32 8
  %11 = load ptr, ptr %10, align 4
  %12 = tail call i32 @strcmp(ptr noundef %11, ptr noundef %1) #27
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %5

14:                                               ; preds = %9
  %15 = getelementptr i8, ptr %7, i32 -4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %7, align 4
  %21 = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  store ptr %19, ptr %21, align 4
  store volatile ptr %20, ptr %19, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %18, align 4
  tail call void @mutex_unlock(ptr noundef %3) #27
  %22 = getelementptr i8, ptr %7, i32 40
  tail call void @kvfree_call_rcu(ptr noundef %22, ptr noundef nonnull inttoptr (i32 44 to ptr)) #27
  br label %24

23:                                               ; preds = %14, %5
  tail call void @mutex_unlock(ptr noundef %3) #27
  br label %24

24:                                               ; preds = %23, %17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_resource_register(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4, ptr nocapture noundef readonly %5) #0 {
  %7 = icmp eq i64 %4, 0
  %8 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %8) #27
  %9 = tail call fastcc ptr @devlink_resource_find(ptr noundef %0, ptr noundef null, i64 noundef %3)
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %38

11:                                               ; preds = %6
  %12 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %13 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %12, i32 noundef 3520, i32 noundef 96) #28
  %14 = icmp eq ptr %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %11
  br i1 %7, label %16, label %18

16:                                               ; preds = %15
  %17 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 5
  br label %25

18:                                               ; preds = %15
  %19 = tail call fastcc ptr @devlink_resource_find(ptr noundef %0, ptr noundef null, i64 noundef %4)
  %20 = icmp eq ptr %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.devlink_resource, ptr %19, i32 0, i32 8
  %23 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 5
  store ptr %19, ptr %23, align 4
  br label %25

24:                                               ; preds = %18
  tail call void @kfree(ptr noundef nonnull %13) #27
  br label %38

25:                                               ; preds = %21, %16
  %26 = phi ptr [ %17, %16 ], [ %22, %21 ]
  store ptr %1, ptr %13, align 8
  %27 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 2
  store i64 %2, ptr %27, align 8
  %28 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 3
  store i64 %2, ptr %28, align 8
  %29 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 1
  store i64 %3, ptr %29, align 8
  %30 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 4
  store i8 1, ptr %30, align 8
  %31 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 6
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(32) %31, ptr noundef align 8 dereferenceable(32) %5, i32 32, i1 false)
  %32 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 8
  store volatile ptr %32, ptr %32, align 8
  %33 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 8, i32 1
  store ptr %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 7
  %35 = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %36 = load ptr, ptr %35, align 4
  store ptr %34, ptr %35, align 4
  store ptr %26, ptr %34, align 8
  %37 = getelementptr inbounds %struct.devlink_resource, ptr %13, i32 0, i32 7, i32 1
  store ptr %36, ptr %37, align 4
  store volatile ptr %34, ptr %36, align 4
  br label %38

38:                                               ; preds = %25, %24, %11, %6
  %39 = phi i32 [ 0, %25 ], [ -22, %24 ], [ -22, %6 ], [ -12, %11 ]
  tail call void @mutex_unlock(ptr noundef %8) #27
  ret i32 %39
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define internal fastcc ptr @devlink_resource_find(ptr noundef readonly %0, ptr noundef readonly %1, i64 noundef %2) unnamed_addr #12 {
  %4 = icmp eq ptr %1, null
  %5 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 8
  %6 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 5
  %7 = select i1 %4, ptr %6, ptr %5
  br label %8

8:                                                ; preds = %17, %3
  %9 = phi ptr [ %7, %3 ], [ %10, %17 ]
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr i8, ptr %10, i32 -72
  %12 = icmp eq ptr %10, %7
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr i8, ptr %10, i32 -64
  %15 = load i64, ptr %14, align 8
  %16 = icmp eq i64 %15, %2
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = tail call fastcc ptr @devlink_resource_find(ptr noundef %0, ptr noundef %11, i64 noundef %2)
  %19 = icmp eq ptr %18, null
  br i1 %19, label %8, label %20

20:                                               ; preds = %17, %13, %8
  %21 = phi ptr [ %18, %17 ], [ null, %8 ], [ %11, %13 ]
  ret ptr %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_resources_unregister(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %2) #27
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 5
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %15, label %6

6:                                                ; preds = %6, %1
  %7 = phi ptr [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr i8, ptr %7, i32 -72
  %9 = load ptr, ptr %7, align 8
  tail call fastcc void @devlink_resource_unregister(ptr noundef %8)
  %10 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = load ptr, ptr %7, align 4
  %13 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  store ptr %11, ptr %13, align 4
  store volatile ptr %12, ptr %11, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %7, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %10, align 4
  tail call void @kfree(ptr noundef %8) #27
  %14 = icmp eq ptr %9, %3
  br i1 %14, label %15, label %6

15:                                               ; preds = %6, %1
  tail call void @mutex_unlock(ptr noundef %2) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_resource_unregister(ptr noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.devlink_resource, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, %2
  br i1 %4, label %14, label %5

5:                                                ; preds = %5, %1
  %6 = phi ptr [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr i8, ptr %6, i32 -72
  %8 = load ptr, ptr %6, align 8
  tail call fastcc void @devlink_resource_unregister(ptr noundef %7)
  %9 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  %11 = load ptr, ptr %6, align 4
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  store ptr %10, ptr %12, align 4
  store volatile ptr %11, ptr %10, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %6, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %9, align 4
  tail call void @kfree(ptr noundef %7) #27
  %13 = icmp eq ptr %8, %2
  br i1 %13, label %14, label %5

14:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_resource_size_get(ptr noundef %0, i64 noundef %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = tail call fastcc ptr @devlink_resource_find(ptr noundef %0, ptr noundef null, i64 noundef %1)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.devlink_resource, ptr %5, i32 0, i32 3
  %9 = load i64, ptr %8, align 8
  store i64 %9, ptr %2, align 8
  %10 = load i64, ptr %8, align 8
  %11 = getelementptr inbounds %struct.devlink_resource, ptr %5, i32 0, i32 2
  store i64 %10, ptr %11, align 8
  br label %12

12:                                               ; preds = %7, %3
  %13 = phi i32 [ 0, %7 ], [ -22, %3 ]
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret i32 %13
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_dpipe_table_resource_set(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %5) #27
  %6 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 4
  br label %7

7:                                                ; preds = %11, %4
  %8 = phi ptr [ %6, %4 ], [ %9, %11 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, %6
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr i8, ptr %9, i32 8
  %13 = load ptr, ptr %12, align 4
  %14 = tail call i32 @strcmp(ptr noundef %13, ptr noundef %1) #27
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %7

16:                                               ; preds = %11
  %17 = getelementptr i8, ptr %9, i32 -4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = getelementptr i8, ptr %9, i32 20
  store i64 %2, ptr %20, align 8
  %21 = getelementptr i8, ptr %9, i32 28
  store i64 %3, ptr %21, align 8
  %22 = getelementptr i8, ptr %9, i32 14
  store i8 1, ptr %22, align 2
  br label %23

23:                                               ; preds = %19, %16, %7
  %24 = phi i32 [ 0, %19 ], [ -22, %16 ], [ -22, %7 ]
  tail call void @mutex_unlock(ptr noundef %5) #27
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_resource_occ_get_register(ptr noundef %0, i64 noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %5) #27
  %6 = tail call fastcc ptr @devlink_resource_find(ptr noundef %0, ptr noundef null, i64 noundef %1)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %9, !prof !11

8:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10062, i32 noundef 9, ptr noundef null) #27
  br label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.devlink_resource, ptr %6, i32 0, i32 9
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13, !prof !10

13:                                               ; preds = %9
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10064, i32 noundef 9, ptr noundef null) #27
  br label %14

14:                                               ; preds = %13, %9
  store ptr %2, ptr %10, align 8
  %15 = getelementptr inbounds %struct.devlink_resource, ptr %6, i32 0, i32 10
  store ptr %3, ptr %15, align 4
  br label %16

16:                                               ; preds = %14, %8
  tail call void @mutex_unlock(ptr noundef %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_resource_occ_get_unregister(ptr noundef %0, i64 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %3) #27
  %4 = tail call fastcc ptr @devlink_resource_find(ptr noundef %0, ptr noundef null, i64 noundef %1)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %7, !prof !11

6:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10086, i32 noundef 9, ptr noundef null) #27
  br label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.devlink_resource, ptr %4, i32 0, i32 9
  %9 = load ptr, ptr %8, align 8
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %12, !prof !11

11:                                               ; preds = %7
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10088, i32 noundef 9, ptr noundef null) #27
  br label %12

12:                                               ; preds = %11, %7
  store ptr null, ptr %8, align 8
  %13 = getelementptr inbounds %struct.devlink_resource, ptr %4, i32 0, i32 10
  store ptr null, ptr %13, align 4
  br label %14

14:                                               ; preds = %12, %6
  tail call void @mutex_unlock(ptr noundef %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_params_register(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load i32, ptr %0, align 32
  %5 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %4, i32 noundef 1) #27
  %6 = load i1, ptr @devlink_params_register.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %3
  store i1 true, ptr @devlink_params_register.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10123, i32 noundef 9, ptr noundef null) #27
  br label %10

10:                                               ; preds = %9, %3
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %17, %10
  %13 = phi ptr [ %19, %17 ], [ %1, %10 ]
  %14 = phi i32 [ %18, %17 ], [ 0, %10 ]
  %15 = tail call i32 @devlink_param_register(ptr noundef %0, ptr noundef %13)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = add nuw i32 %14, 1
  %19 = getelementptr %struct.devlink_param, ptr %13, i32 1
  %20 = icmp eq i32 %18, %2
  br i1 %20, label %29, label %12

21:                                               ; preds = %12
  %22 = icmp sgt i32 %14, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %23, %21
  %24 = phi ptr [ %26, %23 ], [ %13, %21 ]
  %25 = phi i32 [ %27, %23 ], [ %14, %21 ]
  %26 = getelementptr %struct.devlink_param, ptr %24, i32 -1
  tail call void @devlink_param_unregister(ptr noundef %0, ptr noundef %26)
  %27 = add nsw i32 %25, -1
  %28 = icmp ugt i32 %25, 1
  br i1 %28, label %23, label %29

29:                                               ; preds = %23, %21, %17, %10
  %30 = phi i32 [ %15, %21 ], [ 0, %10 ], [ %15, %23 ], [ 0, %17 ]
  ret i32 %30
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_param_register(ptr noundef %0, ptr noundef %1) #0 {
  %3 = load i32, ptr %0, align 32
  %4 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %3, i32 noundef 1) #27
  %5 = load i1, ptr @devlink_param_register.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %9, !prof !11

8:                                                ; preds = %2
  store i1 true, ptr @devlink_param_register.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10176, i32 noundef 9, ptr noundef null) #27
  br label %9

9:                                                ; preds = %8, %2
  %10 = icmp eq ptr %1, null
  br i1 %10, label %90, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %90, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %90, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 2
  %21 = load i8, ptr %20, align 4, !range !18
  %22 = icmp eq i8 %21, 0
  %23 = load i32, ptr %1, align 4
  br i1 %22, label %37, label %24

24:                                               ; preds = %19
  %25 = icmp ugt i32 %23, 16
  br i1 %25, label %90, label %26

26:                                               ; preds = %24
  %27 = getelementptr [17 x %struct.devlink_param], ptr @devlink_param_generic, i32 0, i32 %23, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef %28) #27
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %90

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 3
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr [17 x %struct.devlink_param], ptr @devlink_param_generic, i32 0, i32 %23, i32 3
  %35 = load i32, ptr %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %92, label %90, !prof !10

37:                                               ; preds = %19
  %38 = icmp ult i32 %23, 17
  br i1 %38, label %90, label %39

39:                                               ; preds = %37
  %40 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(21) @.str.88) #27
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %90, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(9) @.str.89) #27
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %90, label %45

45:                                               ; preds = %42
  %46 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(13) @.str.90) #27
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %90, label %48

48:                                               ; preds = %45
  %49 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(23) @.str.91) #27
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %90, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(11) @.str.92) #27
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %90, label %54

54:                                               ; preds = %51
  %55 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(20) @.str.93) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %90, label %57

57:                                               ; preds = %54
  %58 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(20) @.str.94) #27
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %90, label %60

60:                                               ; preds = %57
  %61 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(15) @.str.95) #27
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %90, label %63

63:                                               ; preds = %60
  %64 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(23) @.str.96) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %90, label %66

66:                                               ; preds = %63
  %67 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(12) @.str.97) #27
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %90, label %69

69:                                               ; preds = %66
  %70 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(24) @.str.98) #27
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %90, label %72

72:                                               ; preds = %69
  %73 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(11) @.str.99) #27
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(12) @.str.100) #27
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %75
  %79 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(12) @.str.101) #27
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %90, label %81

81:                                               ; preds = %78
  %82 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(13) @.str.102) #27
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %81
  %85 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(11) @.str.103) #27
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = tail call i32 @strcmp(ptr noundef nonnull %13, ptr noundef nonnull dereferenceable(14) @.str.104) #27
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %87, %84, %81, %78, %75, %72, %69, %66, %63, %60, %57, %54, %51, %48, %45, %42, %39, %37, %31, %26, %24, %15, %11, %9
  %91 = phi i32 [ 4490, %31 ], [ 10178, %87 ], [ 10178, %15 ], [ 10178, %11 ], [ 10178, %9 ], [ 10178, %24 ], [ 10178, %26 ], [ 10178, %37 ], [ 10178, %39 ], [ 10178, %42 ], [ 10178, %45 ], [ 10178, %48 ], [ 10178, %51 ], [ 10178, %54 ], [ 10178, %57 ], [ 10178, %60 ], [ 10178, %63 ], [ 10178, %66 ], [ 10178, %69 ], [ 10178, %72 ], [ 10178, %75 ], [ 10178, %78 ], [ 10178, %81 ], [ 10178, %84 ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef %91, i32 noundef 9, ptr noundef null) #27
  br label %92

92:                                               ; preds = %90, %87, %31
  %93 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 1
  %95 = load ptr, ptr %94, align 4
  br label %96

96:                                               ; preds = %100, %92
  %97 = phi ptr [ %93, %92 ], [ %98, %100 ]
  %98 = load ptr, ptr %97, align 4
  %99 = icmp eq ptr %98, %93
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.devlink_param_item, ptr %98, i32 0, i32 1
  %102 = load ptr, ptr %101, align 4
  %103 = getelementptr inbounds %struct.devlink_param, ptr %102, i32 0, i32 1
  %104 = load ptr, ptr %103, align 4
  %105 = tail call i32 @strcmp(ptr noundef %104, ptr noundef %95) #27
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %96

107:                                              ; preds = %100
  %108 = icmp eq ptr %98, null
  br i1 %108, label %110, label %109, !prof !10

109:                                              ; preds = %107
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10179, i32 noundef 9, ptr noundef null) #27
  br label %110

110:                                              ; preds = %109, %107, %96
  %111 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 4
  %112 = load i32, ptr %111, align 4
  %113 = icmp eq i32 %112, 2
  %114 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 5
  %115 = load ptr, ptr %114, align 4
  %116 = icmp eq ptr %115, null
  br i1 %113, label %117, label %122

117:                                              ; preds = %110
  br i1 %116, label %118, label %127

118:                                              ; preds = %117
  %119 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 6
  %120 = load ptr, ptr %119, align 4
  %121 = icmp eq ptr %120, null
  br i1 %121, label %129, label %127, !prof !10

122:                                              ; preds = %110
  br i1 %116, label %127, label %123

123:                                              ; preds = %122
  %124 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 6
  %125 = load ptr, ptr %124, align 4
  %126 = icmp eq ptr %125, null
  br i1 %126, label %127, label %129, !prof !11

127:                                              ; preds = %123, %122, %118, %117
  %128 = phi i32 [ 10182, %117 ], [ 10182, %118 ], [ 10184, %122 ], [ 10184, %123 ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef %128, i32 noundef 9, ptr noundef null) #27
  br label %129

129:                                              ; preds = %127, %123, %118
  %130 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %131 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %130, i32 noundef 3520, i32 noundef 48) #28
  %132 = icmp eq ptr %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct.devlink_param_item, ptr %131, i32 0, i32 1
  store ptr %1, ptr %134, align 8
  %135 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6, i32 1
  %136 = load ptr, ptr %135, align 4
  store ptr %131, ptr %135, align 4
  store ptr %93, ptr %131, align 8
  %137 = getelementptr inbounds %struct.list_head, ptr %131, i32 0, i32 1
  store ptr %136, ptr %137, align 4
  store volatile ptr %131, ptr %136, align 4
  br label %138

138:                                              ; preds = %133, %129
  %139 = phi i32 [ 0, %133 ], [ -12, %129 ]
  ret i32 %139
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_param_unregister(ptr noundef readonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = load i32, ptr %0, align 32
  %4 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %3, i32 noundef 1) #27
  %5 = load i1, ptr @devlink_param_unregister.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %9, !prof !11

8:                                                ; preds = %2
  store i1 true, ptr @devlink_param_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10207, i32 noundef 9, ptr noundef null) #27
  br label %9

9:                                                ; preds = %8, %2
  %10 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.devlink_param, ptr %1, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  br label %13

13:                                               ; preds = %17, %9
  %14 = phi ptr [ %10, %9 ], [ %15, %17 ]
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %10
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.devlink_param_item, ptr %15, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.devlink_param, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @strcmp(ptr noundef %21, ptr noundef %12) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %13

24:                                               ; preds = %17
  %25 = icmp eq ptr %15, null
  br i1 %25, label %26, label %27, !prof !11

26:                                               ; preds = %24, %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10211, i32 noundef 9, ptr noundef null) #27
  br label %27

27:                                               ; preds = %26, %24
  %28 = phi ptr [ null, %26 ], [ %15, %24 ]
  %29 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %30 = load ptr, ptr %29, align 4
  %31 = load ptr, ptr %28, align 4
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  store ptr %30, ptr %32, align 4
  store volatile ptr %31, ptr %30, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %28, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %29, align 4
  tail call void @kfree(ptr noundef %28) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_params_unregister(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = load i32, ptr %0, align 32
  %5 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %4, i32 noundef 1) #27
  %6 = load i1, ptr @devlink_params_unregister.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %3
  store i1 true, ptr @devlink_params_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10155, i32 noundef 9, ptr noundef null) #27
  br label %10

10:                                               ; preds = %9, %3
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %12, %10
  %13 = phi ptr [ %16, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %15, %12 ], [ 0, %10 ]
  tail call void @devlink_param_unregister(ptr noundef %0, ptr noundef %13)
  %15 = add nuw i32 %14, 1
  %16 = getelementptr %struct.devlink_param, ptr %13, i32 1
  %17 = icmp eq i32 %15, %2
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %10
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_param_driverinit_value_get(ptr noundef readonly %0, i32 noundef %1, ptr noundef %2) #13 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.devlink_ops, ptr %5, i32 0, i32 3
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %43, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.devlink_ops, ptr %5, i32 0, i32 4
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  br label %15

15:                                               ; preds = %19, %13
  %16 = phi ptr [ %14, %13 ], [ %17, %19 ]
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, %14
  br i1 %18, label %43, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.devlink_param_item, ptr %17, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %1
  br i1 %23, label %24, label %15

24:                                               ; preds = %19
  %25 = icmp eq ptr %17, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.devlink_param_item, ptr %17, i32 0, i32 3
  %28 = load i8, ptr %27, align 4, !range !18
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.devlink_param, ptr %21, i32 0, i32 4
  %32 = load volatile i32, ptr %31, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.devlink_param, ptr %21, i32 0, i32 3
  %37 = load i32, ptr %36, align 4
  %38 = icmp eq i32 %37, 3
  %39 = getelementptr inbounds %struct.devlink_param_item, ptr %17, i32 0, i32 2
  br i1 %38, label %40, label %42

40:                                               ; preds = %35
  %41 = tail call ptr @strcpy(ptr noundef %2, ptr noundef %39)
  br label %43

42:                                               ; preds = %35
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(32) %2, ptr noundef align 4 dereferenceable(32) %39, i32 32, i1 false)
  br label %43

43:                                               ; preds = %42, %40, %30, %26, %24, %15, %9, %3
  %44 = phi i32 [ -95, %9 ], [ -22, %24 ], [ -95, %30 ], [ -95, %26 ], [ 0, %42 ], [ 0, %40 ], [ -95, %3 ], [ -22, %15 ]
  ret i32 %44
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #14

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_param_driverinit_value_set(ptr noundef readonly %0, i32 noundef %1, [8 x i32] %2) #0 {
  %4 = alloca %union.devlink_param_value, align 4
  %5 = extractvalue [8 x i32] %2, 0
  store i32 %5, ptr %4, align 4
  %6 = extractvalue [8 x i32] %2, 1
  %7 = getelementptr inbounds [8 x i32], ptr %4, i32 0, i32 1
  store i32 %6, ptr %7, align 4
  %8 = extractvalue [8 x i32] %2, 2
  %9 = getelementptr inbounds [8 x i32], ptr %4, i32 0, i32 2
  store i32 %8, ptr %9, align 4
  %10 = extractvalue [8 x i32] %2, 3
  %11 = getelementptr inbounds [8 x i32], ptr %4, i32 0, i32 3
  store i32 %10, ptr %11, align 4
  %12 = extractvalue [8 x i32] %2, 4
  %13 = getelementptr inbounds [8 x i32], ptr %4, i32 0, i32 4
  store i32 %12, ptr %13, align 4
  %14 = extractvalue [8 x i32] %2, 5
  %15 = getelementptr inbounds [8 x i32], ptr %4, i32 0, i32 5
  store i32 %14, ptr %15, align 4
  %16 = extractvalue [8 x i32] %2, 6
  %17 = getelementptr inbounds [8 x i32], ptr %4, i32 0, i32 6
  store i32 %16, ptr %17, align 4
  %18 = extractvalue [8 x i32] %2, 7
  %19 = getelementptr inbounds [8 x i32], ptr %4, i32 0, i32 7
  store i32 %18, ptr %19, align 4
  %20 = load i32, ptr %0, align 32
  %21 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %20, i32 noundef 1) #27
  %22 = load i1, ptr @devlink_param_driverinit_value_set.__already_done, align 1
  %23 = xor i1 %22, true
  %24 = select i1 %21, i1 %23, i1 false
  br i1 %24, label %25, label %26, !prof !11

25:                                               ; preds = %3
  store i1 true, ptr @devlink_param_driverinit_value_set.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10271, i32 noundef 9, ptr noundef null) #27
  br label %26

26:                                               ; preds = %25, %3
  %27 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  br label %28

28:                                               ; preds = %32, %26
  %29 = phi ptr [ %27, %26 ], [ %30, %32 ]
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, %27
  br i1 %31, label %54, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.devlink_param_item, ptr %30, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = load i32, ptr %34, align 4
  %36 = icmp eq i32 %35, %1
  br i1 %36, label %37, label %28

37:                                               ; preds = %32
  %38 = icmp eq ptr %30, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.devlink_param, ptr %34, i32 0, i32 4
  %41 = load volatile i32, ptr %40, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.devlink_param, ptr %34, i32 0, i32 3
  %46 = load i32, ptr %45, align 4
  %47 = icmp eq i32 %46, 3
  %48 = getelementptr inbounds %struct.devlink_param_item, ptr %30, i32 0, i32 2
  br i1 %47, label %49, label %51

49:                                               ; preds = %44
  %50 = call ptr @strcpy(ptr noundef %48, ptr noundef nonnull %4)
  br label %52

51:                                               ; preds = %44
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(32) %48, ptr noundef nonnull align 4 dereferenceable(32) %4, i32 32, i1 false)
  br label %52

52:                                               ; preds = %51, %49
  %53 = getelementptr inbounds %struct.devlink_param_item, ptr %30, i32 0, i32 3
  store i8 1, ptr %53, align 4
  br label %54

54:                                               ; preds = %52, %39, %37, %28
  %55 = phi i32 [ 0, %52 ], [ -22, %37 ], [ -95, %39 ], [ -22, %28 ]
  ret i32 %55
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_param_value_changed(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 6
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi ptr [ %3, %2 ], [ %6, %8 ]
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, %3
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.devlink_param_item, ptr %6, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %13, label %4

13:                                               ; preds = %8
  %14 = icmp eq ptr %6, null
  br i1 %14, label %15, label %16, !prof !11

15:                                               ; preds = %13, %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10307, i32 noundef 9, ptr noundef null) #27
  br label %16

16:                                               ; preds = %15, %13
  %17 = phi ptr [ null, %15 ], [ %6, %13 ]
  tail call fastcc void @devlink_param_notify(ptr noundef %0, i32 noundef 0, ptr noundef %17, i32 noundef 40)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_param_notify(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) unnamed_addr #0 {
  switch i32 %3, label %5 [
    i32 49, label %6
    i32 41, label %6
    i32 40, label %6
    i32 50, label %6
  ]

5:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4726, i32 noundef 9, ptr noundef null) #27
  br label %6

6:                                                ; preds = %5, %4, %4, %4, %4
  %7 = load i32, ptr %0, align 32
  %8 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %7, i32 noundef 1) #27
  %9 = load i1, ptr @devlink_param_notify.__already_done, align 1
  %10 = select i1 %8, i1 true, i1 %9
  br i1 %10, label %12, label %11, !prof !10

11:                                               ; preds = %6
  store i1 true, ptr @devlink_param_notify.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4727, i32 noundef 9, ptr noundef null) #27
  br label %12

12:                                               ; preds = %11, %6
  %13 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %14 = icmp eq ptr %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %12
  %16 = tail call fastcc i32 @devlink_nl_param_fill(ptr noundef nonnull %13, ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void @kfree_skb_reason(ptr noundef nonnull %13, i32 noundef 0) #27
  br label %32

19:                                               ; preds = %15
  %20 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %21 = icmp eq i8 %20, 0
  %22 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %23 = xor i1 %22, true
  %24 = select i1 %21, i1 %23, i1 false
  br i1 %24, label %25, label %26, !prof !11

25:                                               ; preds = %19
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %26

26:                                               ; preds = %25, %19
  br i1 %21, label %32, label %27

27:                                               ; preds = %26
  %28 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %29 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %30 = getelementptr inbounds %struct.sk_buff, ptr %13, i32 0, i32 3, i32 16
  store i32 %28, ptr %30, align 8
  %31 = tail call i32 @netlink_broadcast(ptr noundef %29, ptr noundef nonnull %13, i32 noundef 0, i32 noundef %28, i32 noundef 3264) #27
  br label %32

32:                                               ; preds = %27, %26, %18, %12
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @devlink_region_create(ptr noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = icmp eq ptr %1, null
  br i1 %5, label %6, label %7, !prof !11

6:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10329, i32 noundef 9, ptr noundef null) #27
  br label %45

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.devlink_region_ops, ptr %1, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %12, !prof !11

11:                                               ; preds = %7
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10329, i32 noundef 9, ptr noundef null) #27
  br label %45

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %13) #27
  %14 = load ptr, ptr %1, align 4
  %15 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 7
  br label %16

16:                                               ; preds = %20, %12
  %17 = phi ptr [ %15, %12 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr i8, ptr %18, i32 8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %22, align 4
  %24 = tail call i32 @strcmp(ptr noundef %23, ptr noundef %14) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %16

26:                                               ; preds = %20
  %27 = getelementptr i8, ptr %18, i32 -8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %43

29:                                               ; preds = %26, %16
  %30 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %31 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %30, i32 noundef 3520, i32 noundef 48) #28
  %32 = icmp eq ptr %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  store ptr %0, ptr %31, align 8
  %34 = getelementptr inbounds %struct.devlink_region, ptr %31, i32 0, i32 5
  store i32 %2, ptr %34, align 4
  %35 = getelementptr inbounds %struct.devlink_region, ptr %31, i32 0, i32 3
  store ptr %1, ptr %35, align 8
  %36 = getelementptr inbounds %struct.devlink_region, ptr %31, i32 0, i32 7
  store i64 %3, ptr %36, align 8
  %37 = getelementptr inbounds %struct.devlink_region, ptr %31, i32 0, i32 4
  store volatile ptr %37, ptr %37, align 4
  %38 = getelementptr inbounds %struct.devlink_region, ptr %31, i32 0, i32 4, i32 1
  store ptr %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.devlink_region, ptr %31, i32 0, i32 2
  %40 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 7, i32 1
  %41 = load ptr, ptr %40, align 4
  store ptr %39, ptr %40, align 4
  store ptr %15, ptr %39, align 8
  %42 = getelementptr inbounds %struct.devlink_region, ptr %31, i32 0, i32 2, i32 1
  store ptr %41, ptr %42, align 4
  store volatile ptr %39, ptr %41, align 4
  tail call fastcc void @devlink_nl_region_notify(ptr noundef nonnull %31, ptr noundef null, i32 noundef 44)
  tail call void @mutex_unlock(ptr noundef %13) #27
  br label %45

43:                                               ; preds = %29, %26
  %44 = phi ptr [ inttoptr (i32 -17 to ptr), %26 ], [ inttoptr (i32 -12 to ptr), %29 ]
  tail call void @mutex_unlock(ptr noundef %13) #27
  br label %45

45:                                               ; preds = %43, %33, %11, %6
  %46 = phi ptr [ %44, %43 ], [ %31, %33 ], [ inttoptr (i32 -22 to ptr), %11 ], [ inttoptr (i32 -22 to ptr), %6 ]
  ret ptr %46
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_nl_region_notify(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = load ptr, ptr %0, align 8
  %5 = add i32 %2, -46
  %6 = icmp ult i32 %5, -2
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %3
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5241, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %7, %3
  %9 = load i32, ptr %4, align 32
  %10 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %9, i32 noundef 1) #27
  br i1 %10, label %11, label %27

11:                                               ; preds = %8
  %12 = tail call fastcc ptr @devlink_nl_region_notify_build(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef 0, i32 noundef 0)
  %13 = icmp ugt ptr %12, inttoptr (i32 -4096 to ptr)
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %16 = icmp eq i8 %15, 0
  %17 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %18 = xor i1 %17, true
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %20, label %21, !prof !11

20:                                               ; preds = %14
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %21

21:                                               ; preds = %20, %14
  br i1 %16, label %27, label %22

22:                                               ; preds = %21
  %23 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %24 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %25 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 16
  store i32 %23, ptr %25, align 8
  %26 = tail call i32 @netlink_broadcast(ptr noundef %24, ptr noundef %12, i32 noundef 0, i32 noundef %23, i32 noundef 3264) #27
  br label %27

27:                                               ; preds = %22, %21, %11, %8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @devlink_port_region_create(ptr noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %1, null
  br i1 %7, label %8, label %9, !prof !11

8:                                                ; preds = %4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10379, i32 noundef 9, ptr noundef null) #27
  br label %48

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.devlink_port_region_ops, ptr %1, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %14, !prof !11

13:                                               ; preds = %9
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10379, i32 noundef 9, ptr noundef null) #27
  br label %48

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %15) #27
  %16 = load ptr, ptr %1, align 4
  %17 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 2
  br label %18

18:                                               ; preds = %22, %14
  %19 = phi ptr [ %17, %14 ], [ %20, %22 ]
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, %17
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = getelementptr i8, ptr %20, i32 8
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %24, align 4
  %26 = tail call i32 @strcmp(ptr noundef %25, ptr noundef %16) #27
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %18

28:                                               ; preds = %22
  %29 = getelementptr i8, ptr %20, i32 -8
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %46

31:                                               ; preds = %28, %18
  %32 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %33 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %32, i32 noundef 3520, i32 noundef 48) #28
  %34 = icmp eq ptr %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  store ptr %6, ptr %33, align 8
  %36 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 1
  store ptr %0, ptr %36, align 4
  %37 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 5
  store i32 %2, ptr %37, align 4
  %38 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 3
  store ptr %1, ptr %38, align 8
  %39 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 7
  store i64 %3, ptr %39, align 8
  %40 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 4
  store volatile ptr %40, ptr %40, align 4
  %41 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 4, i32 1
  store ptr %40, ptr %41, align 8
  %42 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 2
  %43 = getelementptr inbounds %struct.devlink_port, ptr %0, i32 0, i32 2, i32 1
  %44 = load ptr, ptr %43, align 4
  store ptr %42, ptr %43, align 4
  store ptr %17, ptr %42, align 8
  %45 = getelementptr inbounds %struct.devlink_region, ptr %33, i32 0, i32 2, i32 1
  store ptr %44, ptr %45, align 4
  store volatile ptr %42, ptr %44, align 4
  tail call fastcc void @devlink_nl_region_notify(ptr noundef nonnull %33, ptr noundef null, i32 noundef 44)
  tail call void @mutex_unlock(ptr noundef %15) #27
  br label %48

46:                                               ; preds = %31, %28
  %47 = phi ptr [ inttoptr (i32 -17 to ptr), %28 ], [ inttoptr (i32 -12 to ptr), %31 ]
  tail call void @mutex_unlock(ptr noundef %15) #27
  br label %48

48:                                               ; preds = %46, %35, %13, %8
  %49 = phi ptr [ %47, %46 ], [ %33, %35 ], [ inttoptr (i32 -22 to ptr), %13 ], [ inttoptr (i32 -22 to ptr), %8 ]
  ret ptr %49
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_region_destroy(ptr noundef %0) #0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %struct.devlink, ptr %2, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %3) #27
  %4 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 4
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, %4
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 6
  %9 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 3
  br label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %5, %7 ], [ %12, %10 ]
  %12 = load ptr, ptr %11, align 4
  %13 = load ptr, ptr %0, align 8
  tail call fastcc void @devlink_nl_region_notify(ptr noundef %0, ptr noundef %11, i32 noundef 45) #27
  %14 = load i32, ptr %8, align 8
  %15 = add i32 %14, -1
  store i32 %15, ptr %8, align 8
  %16 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = load ptr, ptr %11, align 4
  %19 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  store ptr %17, ptr %19, align 4
  store volatile ptr %18, ptr %17, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %11, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %16, align 4
  %20 = load ptr, ptr %9, align 8
  %21 = getelementptr inbounds %struct.devlink_region_ops, ptr %20, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.devlink_snapshot, ptr %11, i32 0, i32 2
  %24 = load ptr, ptr %23, align 4
  tail call void %22(ptr noundef %24) #27
  %25 = getelementptr inbounds %struct.devlink_snapshot, ptr %11, i32 0, i32 3
  %26 = load i32, ptr %25, align 4
  tail call fastcc void @__devlink_snapshot_id_decrement(ptr noundef %13, i32 noundef %26) #27
  tail call void @kfree(ptr noundef %11) #27
  %27 = icmp eq ptr %12, %4
  br i1 %27, label %28, label %10

28:                                               ; preds = %10, %1
  %29 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 2
  %30 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 4
  %32 = load ptr, ptr %29, align 4
  %33 = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  store ptr %31, ptr %33, align 4
  store volatile ptr %32, ptr %31, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %29, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %30, align 4
  tail call fastcc void @devlink_nl_region_notify(ptr noundef %0, ptr noundef null, i32 noundef 45)
  tail call void @mutex_unlock(ptr noundef %3) #27
  tail call void @kfree(ptr noundef %0) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_region_snapshot_del(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = load ptr, ptr %0, align 8
  tail call fastcc void @devlink_nl_region_notify(ptr noundef %0, ptr noundef %1, i32 noundef 45)
  %4 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 6
  %5 = load i32, ptr %4, align 8
  %6 = add i32 %5, -1
  store i32 %6, ptr %4, align 8
  %7 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %8 = load ptr, ptr %7, align 4
  %9 = load ptr, ptr %1, align 4
  %10 = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  store ptr %8, ptr %10, align 4
  store volatile ptr %9, ptr %8, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %1, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %7, align 4
  %11 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 3
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.devlink_region_ops, ptr %12, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink_snapshot, ptr %1, i32 0, i32 2
  %16 = load ptr, ptr %15, align 4
  tail call void %14(ptr noundef %16) #27
  %17 = getelementptr inbounds %struct.devlink_snapshot, ptr %1, i32 0, i32 3
  %18 = load i32, ptr %17, align 4
  tail call fastcc void @__devlink_snapshot_id_decrement(ptr noundef %3, i32 noundef %18)
  tail call void @kfree(ptr noundef %1) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_region_snapshot_id_get(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %3) #27
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 16
  tail call void @_raw_spin_lock(ptr noundef %4) #27
  %5 = tail call i32 @__xa_alloc(ptr noundef %4, ptr noundef %1, ptr noundef nonnull inttoptr (i32 3 to ptr), [2 x i32] [i32 -1, i32 0], i32 noundef 3264) #27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !25
  %6 = load i16, ptr %4, align 4
  %7 = add i16 %6, 1
  store i16 %7, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !28
  tail call void @mutex_unlock(ptr noundef %3) #27
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_region_snapshot_id_put(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %3) #27
  tail call fastcc void @__devlink_snapshot_id_decrement(ptr noundef %0, i32 noundef %1)
  tail call void @mutex_unlock(ptr noundef %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__devlink_snapshot_id_decrement(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 16
  %4 = tail call ptr @xa_load(ptr noundef %3, i32 noundef %1) #27
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %7, !prof !11

6:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5312, i32 noundef 9, ptr noundef null) #27
  br label %21

7:                                                ; preds = %2
  %8 = ptrtoint ptr %4 to i32
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12, !prof !11

11:                                               ; preds = %7
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5315, i32 noundef 9, ptr noundef null) #27
  br label %21

12:                                               ; preds = %7
  %13 = icmp ugt ptr %4, inttoptr (i32 3 to ptr)
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = add i32 %8, -2
  %16 = or i32 %15, 1
  %17 = inttoptr i32 %16 to ptr
  %18 = tail call ptr @xa_store(ptr noundef %3, i32 noundef %1, ptr noundef nonnull %17, i32 noundef 3264) #27
  br label %21

19:                                               ; preds = %12
  %20 = tail call ptr @xa_erase(ptr noundef %3, i32 noundef %1) #27
  br label %21

21:                                               ; preds = %19, %14, %11, %6
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_region_snapshot_create(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load ptr, ptr %0, align 8
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %5) #27
  %6 = tail call fastcc i32 @__devlink_region_snapshot_create(ptr noundef %0, ptr noundef %1, i32 noundef %2)
  tail call void @mutex_unlock(ptr noundef %5) #27
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__devlink_region_snapshot_create(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = load ptr, ptr %0, align 8
  %5 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 6
  %6 = load i32, ptr %5, align 8
  %7 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 5
  %8 = load i32, ptr %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %65, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 4
  br label %12

12:                                               ; preds = %16, %10
  %13 = phi ptr [ %11, %10 ], [ %14, %16 ]
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.devlink_snapshot, ptr %14, i32 0, i32 3
  %18 = load i32, ptr %17, align 4
  %19 = icmp eq i32 %18, %2
  br i1 %19, label %20, label %12

20:                                               ; preds = %16
  %21 = icmp eq ptr %14, null
  br i1 %21, label %22, label %65

22:                                               ; preds = %20, %12
  %23 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %24 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %23, i32 noundef 3520, i32 noundef 20) #28
  %25 = icmp eq ptr %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 16
  %28 = tail call ptr @xa_load(ptr noundef %27, i32 noundef %2) #27
  %29 = icmp eq ptr %28, null
  br i1 %29, label %61, label %30, !prof !11

30:                                               ; preds = %26
  %31 = ptrtoint ptr %28 to i32
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %61, label %34, !prof !11

34:                                               ; preds = %30
  %35 = lshr i32 %31, 1
  %36 = add nuw i32 %35, 1
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %39, !prof !11

38:                                               ; preds = %34
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.79, i32 noundef 54, i32 noundef 9, ptr noundef null) #27
  br label %39

39:                                               ; preds = %38, %34
  %40 = shl i32 %36, 1
  %41 = or i32 %40, 1
  %42 = inttoptr i32 %41 to ptr
  %43 = tail call ptr @xa_store(ptr noundef %27, i32 noundef %2, ptr noundef nonnull %42, i32 noundef 3264) #27
  %44 = ptrtoint ptr %43 to i32
  %45 = and i32 %44, 3
  %46 = icmp ne i32 %45, 2
  %47 = icmp ult ptr %43, inttoptr (i32 -16378 to ptr)
  %48 = ashr i32 %44, 2
  %49 = or i1 %47, %46
  %50 = icmp ult ptr %43, inttoptr (i32 4 to ptr)
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %63

52:                                               ; preds = %39
  %53 = getelementptr inbounds %struct.devlink_snapshot, ptr %24, i32 0, i32 3
  store i32 %2, ptr %53, align 8
  %54 = getelementptr inbounds %struct.devlink_snapshot, ptr %24, i32 0, i32 1
  store ptr %0, ptr %54, align 8
  %55 = getelementptr inbounds %struct.devlink_snapshot, ptr %24, i32 0, i32 2
  store ptr %1, ptr %55, align 4
  %56 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 4, i32 1
  %57 = load ptr, ptr %56, align 4
  store ptr %24, ptr %56, align 4
  store ptr %11, ptr %24, align 8
  %58 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  store ptr %57, ptr %58, align 4
  store volatile ptr %24, ptr %57, align 4
  %59 = load i32, ptr %5, align 8
  %60 = add i32 %59, 1
  store i32 %60, ptr %5, align 8
  tail call fastcc void @devlink_nl_region_notify(ptr noundef %0, ptr noundef nonnull %24, i32 noundef 44)
  br label %65

61:                                               ; preds = %30, %26
  %62 = phi i32 [ 5276, %26 ], [ 5279, %30 ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef %62, i32 noundef 9, ptr noundef null) #27
  br label %63

63:                                               ; preds = %61, %39
  %64 = phi i32 [ %48, %39 ], [ -22, %61 ]
  tail call void @kfree(ptr noundef nonnull %24) #27
  br label %65

65:                                               ; preds = %63, %52, %22, %20, %3
  %66 = phi i32 [ %64, %63 ], [ 0, %52 ], [ -28, %3 ], [ -17, %20 ], [ -12, %22 ]
  ret i32 %66
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_traps_register(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 26
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %158, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 28
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %158, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %15) #27
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %156, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11
  %19 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12
  %20 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11, i32 1
  br label %21

21:                                               ; preds = %141, %17
  %22 = phi i32 [ 0, %17 ], [ %145, %141 ]
  %23 = getelementptr %struct.devlink_trap, ptr %1, i32 %22
  %24 = icmp eq ptr %23, null
  br i1 %24, label %147, label %25

25:                                               ; preds = %21
  %26 = getelementptr %struct.devlink_trap, ptr %1, i32 %22, i32 4
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %147, label %29

29:                                               ; preds = %25
  %30 = getelementptr %struct.devlink_trap, ptr %1, i32 %22, i32 2
  %31 = load i8, ptr %30, align 4, !range !18
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr %struct.devlink_trap, ptr %1, i32 %22, i32 3
  %34 = load i16, ptr %33, align 2
  br i1 %32, label %49, label %35

35:                                               ; preds = %29
  %36 = icmp ugt i16 %34, 91
  br i1 %36, label %147, label %37

37:                                               ; preds = %35
  %38 = zext i16 %34 to i32
  %39 = getelementptr [92 x %struct.devlink_trap], ptr @devlink_trap_generic, i32 0, i32 %38, i32 4
  %40 = load ptr, ptr %39, align 4
  %41 = tail call i32 @strcmp(ptr noundef nonnull %27, ptr noundef %40) #27
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %147

43:                                               ; preds = %37
  %44 = getelementptr [92 x %struct.devlink_trap], ptr @devlink_trap_generic, i32 0, i32 %38
  %45 = load i32, ptr %23, align 4
  %46 = load i32, ptr %44, align 4
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %147

48:                                               ; preds = %51, %43
  br label %60

49:                                               ; preds = %29
  %50 = icmp ult i16 %34, 92
  br i1 %50, label %147, label %54

51:                                               ; preds = %54
  %52 = add nuw nsw i32 %55, 1
  %53 = icmp eq i32 %52, 92
  br i1 %53, label %48, label %54

54:                                               ; preds = %51, %49
  %55 = phi i32 [ %52, %51 ], [ 0, %49 ]
  %56 = getelementptr [92 x %struct.devlink_trap], ptr @devlink_trap_generic, i32 0, i32 %55, i32 4
  %57 = load ptr, ptr %56, align 4
  %58 = tail call i32 @strcmp(ptr noundef nonnull %27, ptr noundef %57) #27
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %147, label %51

60:                                               ; preds = %64, %48
  %61 = phi ptr [ %62, %64 ], [ %18, %48 ]
  %62 = load ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, %18
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = getelementptr i8, ptr %62, i32 -8
  %66 = load ptr, ptr %65, align 4
  %67 = getelementptr inbounds %struct.devlink_trap, ptr %66, i32 0, i32 4
  %68 = load ptr, ptr %67, align 4
  %69 = tail call i32 @strcmp(ptr noundef %68, ptr noundef nonnull %27) #27
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %60

71:                                               ; preds = %64
  %72 = getelementptr i8, ptr %62, i32 -8
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %147

74:                                               ; preds = %71, %60
  %75 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %76 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %75, i32 noundef 3520, i32 noundef 28) #28
  %77 = icmp eq ptr %76, null
  br i1 %77, label %147, label %78

78:                                               ; preds = %74
  %79 = tail call noalias ptr @__alloc_percpu_gfp(i32 noundef 24, i32 noundef 8, i32 noundef 3264) #29
  %80 = icmp eq ptr %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = load i32, ptr @nr_cpu_ids, align 4
  %83 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #31
  %84 = icmp ult i32 %83, %82
  br i1 %84, label %85, label %98

85:                                               ; preds = %81
  %86 = ptrtoint ptr %79 to i32
  br label %89

87:                                               ; preds = %78
  %88 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 4
  store ptr null, ptr %88, align 4
  br label %139

89:                                               ; preds = %89, %85
  %90 = phi i32 [ %83, %85 ], [ %96, %89 ]
  %91 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %90
  %92 = load i32, ptr %91, align 4
  %93 = add i32 %92, %86
  %94 = inttoptr i32 %93 to ptr
  %95 = getelementptr inbounds %struct.devlink_stats, ptr %94, i32 0, i32 2
  store i32 0, ptr %95, align 4
  %96 = tail call i32 @cpumask_next(i32 noundef %90, ptr noundef nonnull @__cpu_possible_mask) #31
  %97 = icmp ult i32 %96, %82
  br i1 %97, label %89, label %98

98:                                               ; preds = %89, %81
  %99 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 4
  store ptr %79, ptr %99, align 4
  store ptr %23, ptr %76, align 8
  %100 = getelementptr %struct.devlink_trap, ptr %1, i32 %22, i32 1
  %101 = load i32, ptr %100, align 4
  %102 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 3
  store i32 %101, ptr %102, align 8
  %103 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 5
  store ptr %3, ptr %103, align 8
  %104 = getelementptr %struct.devlink_trap, ptr %1, i32 %22, i32 5
  %105 = load i16, ptr %104, align 4
  br label %106

106:                                              ; preds = %110, %98
  %107 = phi ptr [ %19, %98 ], [ %108, %110 ]
  %108 = load ptr, ptr %107, align 4
  %109 = icmp eq ptr %108, %19
  br i1 %109, label %118, label %110

110:                                              ; preds = %106
  %111 = getelementptr i8, ptr %108, i32 -8
  %112 = load ptr, ptr %111, align 4
  %113 = getelementptr inbounds %struct.devlink_trap_group, ptr %112, i32 0, i32 1
  %114 = load i16, ptr %113, align 4
  %115 = icmp eq i16 %114, %105
  br i1 %115, label %116, label %106

116:                                              ; preds = %110
  %117 = getelementptr i8, ptr %108, i32 -8
  br label %118

118:                                              ; preds = %116, %106
  %119 = phi ptr [ %117, %116 ], [ null, %106 ]
  %120 = icmp eq ptr %119, null
  %121 = load i1, ptr @devlink_trap_item_group_link.__already_done, align 1
  %122 = xor i1 %121, true
  %123 = select i1 %120, i1 %122, i1 false
  br i1 %123, label %124, label %125, !prof !11

124:                                              ; preds = %118
  store i1 true, ptr @devlink_trap_item_group_link.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10757, i32 noundef 9, ptr noundef null) #27
  br label %125

125:                                              ; preds = %124, %118
  br i1 %120, label %136, label %126

126:                                              ; preds = %125
  %127 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 1
  store ptr %119, ptr %127, align 4
  %128 = load ptr, ptr %5, align 4
  %129 = getelementptr inbounds %struct.devlink_ops, ptr %128, i32 0, i32 26
  %130 = load ptr, ptr %129, align 4
  %131 = tail call i32 %130(ptr noundef %0, ptr noundef nonnull %23, ptr noundef nonnull %76) #27
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 4
  %135 = load ptr, ptr %134, align 4
  br label %136

136:                                              ; preds = %133, %125
  %137 = phi ptr [ %135, %133 ], [ %79, %125 ]
  %138 = phi i32 [ %131, %133 ], [ -22, %125 ]
  tail call void @free_percpu(ptr noundef %137) #27
  br label %139

139:                                              ; preds = %136, %87
  %140 = phi i32 [ %138, %136 ], [ -12, %87 ]
  tail call void @kfree(ptr noundef nonnull %76) #27
  br label %147

141:                                              ; preds = %126
  %142 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 2
  %143 = load ptr, ptr %20, align 4
  store ptr %142, ptr %20, align 4
  store ptr %18, ptr %142, align 8
  %144 = getelementptr inbounds %struct.devlink_trap_item, ptr %76, i32 0, i32 2, i32 1
  store ptr %143, ptr %144, align 4
  store volatile ptr %142, ptr %143, align 4
  tail call fastcc void @devlink_trap_notify(ptr noundef %0, ptr noundef nonnull %76, i32 noundef 63) #27
  %145 = add nuw i32 %22, 1
  %146 = icmp eq i32 %145, %2
  br i1 %146, label %156, label %21

147:                                              ; preds = %139, %74, %71, %54, %49, %43, %37, %35, %25, %21
  %148 = phi i32 [ %140, %139 ], [ -17, %54 ], [ -22, %25 ], [ -22, %21 ], [ -22, %35 ], [ -22, %37 ], [ -22, %43 ], [ -22, %49 ], [ -17, %71 ], [ -12, %74 ]
  %149 = add i32 %22, -1
  %150 = icmp sgt i32 %149, -1
  br i1 %150, label %151, label %156

151:                                              ; preds = %151, %147
  %152 = phi i32 [ %154, %151 ], [ %149, %147 ]
  %153 = getelementptr %struct.devlink_trap, ptr %1, i32 %152
  tail call fastcc void @devlink_trap_unregister(ptr noundef %0, ptr noundef %153)
  %154 = add nsw i32 %152, -1
  %155 = icmp sgt i32 %152, 0
  br i1 %155, label %151, label %156

156:                                              ; preds = %151, %147, %141, %14
  %157 = phi i32 [ 0, %14 ], [ %148, %147 ], [ %148, %151 ], [ 0, %141 ]
  tail call void @mutex_unlock(ptr noundef %15) #27
  br label %158

158:                                              ; preds = %156, %10, %4
  %159 = phi i32 [ -22, %10 ], [ -22, %4 ], [ %157, %156 ]
  ret i32 %159
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_trap_unregister(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.devlink_trap, ptr %1, i32 0, i32 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11
  br label %6

6:                                                ; preds = %10, %2
  %7 = phi ptr [ %5, %2 ], [ %8, %10 ]
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %5
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = getelementptr i8, ptr %8, i32 -8
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.devlink_trap, ptr %12, i32 0, i32 4
  %14 = load ptr, ptr %13, align 4
  %15 = tail call i32 @strcmp(ptr noundef %14, ptr noundef %4) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %6

17:                                               ; preds = %10
  %18 = getelementptr i8, ptr %8, i32 -8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi ptr [ %18, %17 ], [ null, %6 ]
  %21 = icmp eq ptr %20, null
  %22 = load i1, ptr @devlink_trap_unregister.__already_done, align 1
  %23 = xor i1 %22, true
  %24 = select i1 %21, i1 %23, i1 false
  br i1 %24, label %25, label %26, !prof !11

25:                                               ; preds = %19
  store i1 true, ptr @devlink_trap_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10842, i32 noundef 9, ptr noundef null) #27
  br label %26

26:                                               ; preds = %25, %19
  br i1 %21, label %42, label %27

27:                                               ; preds = %26
  tail call fastcc void @devlink_trap_notify(ptr noundef %0, ptr noundef nonnull %20, i32 noundef 64)
  %28 = getelementptr inbounds %struct.devlink_trap_item, ptr %20, i32 0, i32 2
  %29 = getelementptr inbounds %struct.devlink_trap_item, ptr %20, i32 0, i32 2, i32 1
  %30 = load ptr, ptr %29, align 4
  %31 = load ptr, ptr %28, align 4
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  store ptr %30, ptr %32, align 4
  store volatile ptr %31, ptr %30, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %28, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %29, align 4
  %33 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.devlink_ops, ptr %34, i32 0, i32 27
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %27
  tail call void %36(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %20) #27
  br label %39

39:                                               ; preds = %38, %27
  %40 = getelementptr inbounds %struct.devlink_trap_item, ptr %20, i32 0, i32 4
  %41 = load ptr, ptr %40, align 4
  tail call void @free_percpu(ptr noundef %41) #27
  tail call void @kfree(ptr noundef nonnull %20) #27
  br label %42

42:                                               ; preds = %39, %26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_traps_unregister(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = add i32 %2, -1
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @synchronize_rcu() #27
  br label %52

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 11
  %10 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  br label %11

11:                                               ; preds = %43, %8
  %12 = phi i32 [ %5, %8 ], [ %44, %43 ]
  %13 = getelementptr %struct.devlink_trap, ptr %1, i32 %12
  %14 = getelementptr %struct.devlink_trap, ptr %1, i32 %12, i32 4
  %15 = load ptr, ptr %14, align 4
  br label %16

16:                                               ; preds = %20, %11
  %17 = phi ptr [ %9, %11 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %9
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr i8, ptr %18, i32 -8
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.devlink_trap, ptr %22, i32 0, i32 4
  %24 = load ptr, ptr %23, align 4
  %25 = tail call i32 @strcmp(ptr noundef %24, ptr noundef %15) #27
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %16

27:                                               ; preds = %20
  %28 = getelementptr i8, ptr %18, i32 -8
  br label %29

29:                                               ; preds = %27, %16
  %30 = phi ptr [ %28, %27 ], [ null, %16 ]
  %31 = icmp eq ptr %30, null
  %32 = load i1, ptr @devlink_trap_disable.__already_done, align 1
  %33 = xor i1 %32, true
  %34 = select i1 %31, i1 %33, i1 false
  br i1 %34, label %35, label %36, !prof !11

35:                                               ; preds = %29
  store i1 true, ptr @devlink_trap_disable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10859, i32 noundef 9, ptr noundef null) #27
  br label %36

36:                                               ; preds = %35, %29
  br i1 %31, label %43, label %37

37:                                               ; preds = %36
  %38 = load ptr, ptr %10, align 4
  %39 = getelementptr inbounds %struct.devlink_ops, ptr %38, i32 0, i32 28
  %40 = load ptr, ptr %39, align 4
  %41 = tail call i32 %40(ptr noundef %0, ptr noundef %13, i32 noundef 0, ptr noundef null) #27
  %42 = getelementptr inbounds %struct.devlink_trap_item, ptr %30, i32 0, i32 3
  store i32 0, ptr %42, align 4
  br label %43

43:                                               ; preds = %37, %36
  %44 = add i32 %12, -1
  %45 = icmp sgt i32 %44, -1
  br i1 %45, label %11, label %46

46:                                               ; preds = %43
  tail call void @synchronize_rcu() #27
  br i1 %6, label %47, label %52

47:                                               ; preds = %47, %46
  %48 = phi i32 [ %50, %47 ], [ %5, %46 ]
  %49 = getelementptr %struct.devlink_trap, ptr %1, i32 %48
  tail call fastcc void @devlink_trap_unregister(ptr noundef %0, ptr noundef %49)
  %50 = add nsw i32 %48, -1
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %52, label %47

52:                                               ; preds = %47, %46, %7
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_trap_report(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = alloca %struct.devlink_trap_metadata, align 4
  %7 = getelementptr inbounds %struct.devlink_trap_item, ptr %2, i32 0, i32 4
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 5
  %10 = load i32, ptr %9, align 8
  %11 = ptrtoint ptr %8 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #17, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.devlink_stats, ptr %16, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, 1
  store i32 %19, ptr %17, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #27, !srcloc !32
  %20 = zext i32 %10 to i64
  %21 = load i64, ptr %16, align 8
  %22 = add i64 %21, %20
  store i64 %22, ptr %16, align 8
  %23 = getelementptr inbounds %struct.devlink_stats, ptr %16, i32 0, i32 1
  %24 = load i64, ptr %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, ptr %23, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #27, !srcloc !33
  %26 = load i32, ptr %17, align 4
  %27 = add i32 %26, 1
  store i32 %27, ptr %17, align 4
  %28 = getelementptr inbounds %struct.devlink_trap_item, ptr %2, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %29, i32 0, i32 3
  %31 = load ptr, ptr %30, align 4
  %32 = load i32, ptr %9, align 8
  %33 = ptrtoint ptr %31 to i32
  %34 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %35 = inttoptr i32 %34 to ptr
  %36 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %35) #17, !srcloc !12
  %37 = add i32 %36, %33
  %38 = inttoptr i32 %37 to ptr
  %39 = getelementptr inbounds %struct.devlink_stats, ptr %38, i32 0, i32 2
  %40 = load i32, ptr %39, align 4
  %41 = add i32 %40, 1
  store i32 %41, ptr %39, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #27, !srcloc !32
  %42 = zext i32 %32 to i64
  %43 = load i64, ptr %38, align 8
  %44 = add i64 %43, %42
  store i64 %44, ptr %38, align 8
  %45 = getelementptr inbounds %struct.devlink_stats, ptr %38, i32 0, i32 1
  %46 = load i64, ptr %45, align 8
  %47 = add i64 %46, 1
  store i64 %47, ptr %45, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #27, !srcloc !33
  %48 = load i32, ptr %39, align 4
  %49 = add i32 %48, 1
  store i32 %49, ptr %39, align 4
  %50 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_trap_report, i32 0, i32 1), align 4
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %101

52:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %6) #27
  %53 = getelementptr inbounds i8, ptr %6, i32 8
  store i32 0, ptr %53, align 4
  %54 = load ptr, ptr %2, align 4
  %55 = getelementptr inbounds %struct.devlink_trap, ptr %54, i32 0, i32 4
  %56 = load ptr, ptr %55, align 4
  store ptr %56, ptr %6, align 4
  %57 = load ptr, ptr %28, align 4
  %58 = load ptr, ptr %57, align 4
  %59 = load ptr, ptr %58, align 4
  %60 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %6, i32 0, i32 1
  store ptr %59, ptr %60, align 4
  %61 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %6, i32 0, i32 4
  store ptr %4, ptr %61, align 4
  %62 = load i32, ptr %54, align 4
  %63 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %6, i32 0, i32 5
  store i32 %62, ptr %63, align 4
  %64 = getelementptr inbounds %struct.devlink_port, ptr %3, i32 0, i32 5
  tail call void @_raw_spin_lock(ptr noundef %64) #27
  %65 = getelementptr inbounds %struct.devlink_port, ptr %3, i32 0, i32 6
  %66 = load i32, ptr %65, align 4
  %67 = icmp eq i32 %66, 2
  br i1 %67, label %68, label %72

68:                                               ; preds = %52
  %69 = getelementptr inbounds %struct.devlink_port, ptr %3, i32 0, i32 8
  %70 = load ptr, ptr %69, align 4
  %71 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %6, i32 0, i32 2
  store ptr %70, ptr %71, align 4
  br label %72

72:                                               ; preds = %68, %52
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !25
  %73 = load i16, ptr %64, align 4
  %74 = add i16 %73, 1
  store i16 %74, ptr %64, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !28
  %75 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_trap_report, i32 0, i32 1), align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %100

77:                                               ; preds = %72
  %78 = tail call ptr @llvm.thread.pointer() #27
  %79 = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 2
  %80 = load i32, ptr %79, align 8
  %81 = lshr i32 %80, 5
  %82 = getelementptr i32, ptr @__cpu_online_mask, i32 %81
  %83 = load volatile i32, ptr %82, align 4
  %84 = and i32 %80, 31
  %85 = shl nuw i32 1, %84
  %86 = and i32 %85, %83
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %77
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !34
  %89 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_devlink_trap_report, i32 0, i32 7), align 4
  %90 = icmp eq ptr %89, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %91, %88
  %92 = phi ptr [ %96, %91 ], [ %89, %88 ]
  %93 = load volatile ptr, ptr %92, align 4
  %94 = getelementptr inbounds %struct.tracepoint_func, ptr %92, i32 0, i32 1
  %95 = load ptr, ptr %94, align 4
  call void %93(ptr noundef %95, ptr noundef %0, ptr noundef %1, ptr noundef nonnull %6) #27
  %96 = getelementptr %struct.tracepoint_func, ptr %92, i32 1
  %97 = load ptr, ptr %96, align 4
  %98 = icmp eq ptr %97, null
  br i1 %98, label %99, label %91

99:                                               ; preds = %91, %88
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !35
  br label %100

100:                                              ; preds = %99, %77, %72
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %6) #27
  br label %101

101:                                              ; preds = %100, %5
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @devlink_trap_ctx_priv(ptr nocapture noundef readonly %0) #4 {
  %2 = getelementptr inbounds %struct.devlink_trap_item, ptr %0, i32 0, i32 5
  %3 = load ptr, ptr %2, align 4
  ret ptr %3
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_trap_groups_register(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %133, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12
  %8 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13
  %9 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %10 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12, i32 1
  br label %11

11:                                               ; preds = %118, %6
  %12 = phi i32 [ 0, %6 ], [ %122, %118 ]
  %13 = getelementptr %struct.devlink_trap_group, ptr %1, i32 %12
  %14 = getelementptr %struct.devlink_trap_group, ptr %1, i32 %12, i32 2
  %15 = load i8, ptr %14, align 2, !range !18
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr %struct.devlink_trap_group, ptr %1, i32 %12, i32 1
  %18 = load i16, ptr %17, align 4
  br i1 %16, label %28, label %19

19:                                               ; preds = %11
  %20 = icmp ugt i16 %18, 25
  br i1 %20, label %124, label %21

21:                                               ; preds = %19
  %22 = zext i16 %18 to i32
  %23 = load ptr, ptr %13, align 4
  %24 = getelementptr [26 x %struct.devlink_trap_group], ptr @devlink_trap_group_generic, i32 0, i32 %22
  %25 = load ptr, ptr %24, align 4
  %26 = tail call i32 @strcmp(ptr noundef %23, ptr noundef %25) #27
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %41, label %124

28:                                               ; preds = %11
  %29 = icmp ult i16 %18, 26
  br i1 %29, label %124, label %30

30:                                               ; preds = %28
  %31 = load ptr, ptr %13, align 4
  br label %35

32:                                               ; preds = %35
  %33 = add nuw nsw i32 %36, 1
  %34 = icmp eq i32 %33, 26
  br i1 %34, label %41, label %35

35:                                               ; preds = %32, %30
  %36 = phi i32 [ 0, %30 ], [ %33, %32 ]
  %37 = getelementptr [26 x %struct.devlink_trap_group], ptr @devlink_trap_group_generic, i32 0, i32 %36
  %38 = load ptr, ptr %37, align 4
  %39 = tail call i32 @strcmp(ptr noundef %31, ptr noundef %38) #27
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %124, label %32

41:                                               ; preds = %32, %21
  %42 = phi ptr [ %23, %21 ], [ %31, %32 ]
  br label %43

43:                                               ; preds = %47, %41
  %44 = phi ptr [ %7, %41 ], [ %45, %47 ]
  %45 = load ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, %7
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = getelementptr i8, ptr %45, i32 -8
  %49 = load ptr, ptr %48, align 4
  %50 = load ptr, ptr %49, align 4
  %51 = tail call i32 @strcmp(ptr noundef %50, ptr noundef %42) #27
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %43

53:                                               ; preds = %47
  %54 = getelementptr i8, ptr %45, i32 -8
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %124

56:                                               ; preds = %53, %43
  %57 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %58 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %57, i32 noundef 3520, i32 noundef 20) #28
  %59 = icmp eq ptr %58, null
  br i1 %59, label %124, label %60

60:                                               ; preds = %56
  %61 = tail call noalias ptr @__alloc_percpu_gfp(i32 noundef 24, i32 noundef 8, i32 noundef 3264) #29
  %62 = icmp eq ptr %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = load i32, ptr @nr_cpu_ids, align 4
  %65 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #31
  %66 = icmp ult i32 %65, %64
  br i1 %66, label %67, label %80

67:                                               ; preds = %63
  %68 = ptrtoint ptr %61 to i32
  br label %71

69:                                               ; preds = %60
  %70 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %58, i32 0, i32 3
  store ptr null, ptr %70, align 8
  br label %116

71:                                               ; preds = %71, %67
  %72 = phi i32 [ %65, %67 ], [ %78, %71 ]
  %73 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %74 = load i32, ptr %73, align 4
  %75 = add i32 %74, %68
  %76 = inttoptr i32 %75 to ptr
  %77 = getelementptr inbounds %struct.devlink_stats, ptr %76, i32 0, i32 2
  store i32 0, ptr %77, align 4
  %78 = tail call i32 @cpumask_next(i32 noundef %72, ptr noundef nonnull @__cpu_possible_mask) #31
  %79 = icmp ult i32 %78, %64
  br i1 %79, label %71, label %80

80:                                               ; preds = %71, %63
  %81 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %58, i32 0, i32 3
  store ptr %61, ptr %81, align 8
  store ptr %13, ptr %58, align 8
  %82 = getelementptr %struct.devlink_trap_group, ptr %1, i32 %12, i32 3
  %83 = load i32, ptr %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %106, label %85

85:                                               ; preds = %89, %80
  %86 = phi ptr [ %87, %89 ], [ %8, %80 ]
  %87 = load ptr, ptr %86, align 4
  %88 = icmp eq ptr %87, %8
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr i8, ptr %87, i32 -24
  %91 = load ptr, ptr %90, align 8
  %92 = load i32, ptr %91, align 8
  %93 = icmp eq i32 %92, %83
  br i1 %93, label %94, label %85

94:                                               ; preds = %89
  %95 = getelementptr i8, ptr %87, i32 -24
  br label %96

96:                                               ; preds = %94, %85
  %97 = phi ptr [ %95, %94 ], [ null, %85 ]
  %98 = icmp eq ptr %97, null
  %99 = load i1, ptr @devlink_trap_group_item_policer_link.__already_done, align 1
  %100 = xor i1 %99, true
  %101 = select i1 %98, i1 %100, i1 false
  br i1 %101, label %102, label %103, !prof !11

102:                                              ; preds = %96
  store i1 true, ptr @devlink_trap_group_item_policer_link.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11018, i32 noundef 9, ptr noundef null) #27
  br label %103

103:                                              ; preds = %102, %96
  br i1 %98, label %114, label %104

104:                                              ; preds = %103
  %105 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %58, i32 0, i32 1
  store ptr %97, ptr %105, align 4
  br label %106

106:                                              ; preds = %104, %80
  %107 = load ptr, ptr %9, align 4
  %108 = getelementptr inbounds %struct.devlink_ops, ptr %107, i32 0, i32 29
  %109 = load ptr, ptr %108, align 4
  %110 = icmp eq ptr %109, null
  br i1 %110, label %118, label %111

111:                                              ; preds = %106
  %112 = tail call i32 %109(ptr noundef %0, ptr noundef %13) #27
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %111, %103
  %115 = phi i32 [ %112, %111 ], [ -22, %103 ]
  tail call void @free_percpu(ptr noundef nonnull %61) #27
  br label %116

116:                                              ; preds = %114, %69
  %117 = phi i32 [ %115, %114 ], [ -12, %69 ]
  tail call void @kfree(ptr noundef nonnull %58) #27
  br label %124

118:                                              ; preds = %111, %106
  %119 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %58, i32 0, i32 2
  %120 = load ptr, ptr %10, align 4
  store ptr %119, ptr %10, align 4
  store ptr %7, ptr %119, align 8
  %121 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %58, i32 0, i32 2, i32 1
  store ptr %120, ptr %121, align 4
  store volatile ptr %119, ptr %120, align 4
  tail call fastcc void @devlink_trap_group_notify(ptr noundef %0, ptr noundef nonnull %58, i32 noundef 67) #27
  %122 = add nuw i32 %12, 1
  %123 = icmp eq i32 %122, %2
  br i1 %123, label %133, label %11

124:                                              ; preds = %116, %56, %53, %35, %28, %21, %19
  %125 = phi i32 [ %117, %116 ], [ -17, %35 ], [ -22, %19 ], [ -22, %21 ], [ -22, %28 ], [ -17, %53 ], [ -12, %56 ]
  %126 = add i32 %12, -1
  %127 = icmp sgt i32 %126, -1
  br i1 %127, label %128, label %133

128:                                              ; preds = %128, %124
  %129 = phi i32 [ %131, %128 ], [ %126, %124 ]
  %130 = getelementptr %struct.devlink_trap_group, ptr %1, i32 %129
  tail call fastcc void @devlink_trap_group_unregister(ptr noundef %0, ptr noundef %130)
  %131 = add nsw i32 %129, -1
  %132 = icmp sgt i32 %129, 0
  br i1 %132, label %128, label %133

133:                                              ; preds = %128, %124, %118, %3
  %134 = phi i32 [ 0, %3 ], [ %125, %124 ], [ %125, %128 ], [ 0, %118 ]
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret i32 %134
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_trap_group_unregister(ptr noundef readonly %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = load ptr, ptr %1, align 4
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 12
  br label %5

5:                                                ; preds = %9, %2
  %6 = phi ptr [ %4, %2 ], [ %7, %9 ]
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, %4
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr i8, ptr %7, i32 -8
  %11 = load ptr, ptr %10, align 4
  %12 = load ptr, ptr %11, align 4
  %13 = tail call i32 @strcmp(ptr noundef %12, ptr noundef %3) #27
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %5

15:                                               ; preds = %9
  %16 = getelementptr i8, ptr %7, i32 -8
  br label %17

17:                                               ; preds = %15, %5
  %18 = phi ptr [ %16, %15 ], [ null, %5 ]
  %19 = icmp eq ptr %18, null
  %20 = load i1, ptr @devlink_trap_group_unregister.__already_done, align 1
  %21 = xor i1 %20, true
  %22 = select i1 %19, i1 %21, i1 false
  br i1 %22, label %23, label %24, !prof !11

23:                                               ; preds = %17
  store i1 true, ptr @devlink_trap_group_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11079, i32 noundef 9, ptr noundef null) #27
  br label %24

24:                                               ; preds = %23, %17
  br i1 %19, label %33, label %25

25:                                               ; preds = %24
  tail call fastcc void @devlink_trap_group_notify(ptr noundef %0, ptr noundef nonnull %18, i32 noundef 68)
  %26 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %18, i32 0, i32 2
  %27 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %18, i32 0, i32 2, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = load ptr, ptr %26, align 4
  %30 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  store ptr %28, ptr %30, align 4
  store volatile ptr %29, ptr %28, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %26, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %27, align 4
  %31 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %18, i32 0, i32 3
  %32 = load ptr, ptr %31, align 4
  tail call void @free_percpu(ptr noundef %32) #27
  tail call void @kfree(ptr noundef nonnull %18) #27
  br label %33

33:                                               ; preds = %25, %24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_trap_groups_unregister(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = add i32 %2, -1
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %12

7:                                                ; preds = %7, %3
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  %9 = getelementptr %struct.devlink_trap_group, ptr %1, i32 %8
  tail call fastcc void @devlink_trap_group_unregister(ptr noundef %0, ptr noundef %9)
  %10 = add nsw i32 %8, -1
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %7, label %12

12:                                               ; preds = %7, %3
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_trap_policers_register(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %74, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13
  %8 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %9 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13, i32 1
  br label %10

10:                                               ; preds = %59, %6
  %11 = phi i32 [ 0, %6 ], [ %63, %59 ]
  %12 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %11
  %13 = load i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %10
  %16 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %11, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %11, i32 4
  %19 = load i64, ptr %18, align 8
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %11, i32 5
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %11, i32 6
  %25 = load i64, ptr %24, align 8
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %27, label %28, !prof !11

27:                                               ; preds = %21, %15, %10
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11249, i32 noundef 9, ptr noundef null) #27
  br label %65

28:                                               ; preds = %32, %21
  %29 = phi ptr [ %30, %32 ], [ %7, %21 ]
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, %7
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = getelementptr i8, ptr %30, i32 -24
  %34 = load ptr, ptr %33, align 8
  %35 = load i32, ptr %34, align 8
  %36 = icmp eq i32 %35, %13
  br i1 %36, label %37, label %28

37:                                               ; preds = %32
  %38 = getelementptr i8, ptr %30, i32 -24
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %65

40:                                               ; preds = %37, %28
  %41 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %42 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %41, i32 noundef 3520, i32 noundef 32) #28
  %43 = icmp eq ptr %42, null
  br i1 %43, label %65, label %44

44:                                               ; preds = %40
  store ptr %12, ptr %42, align 8
  %45 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %11, i32 1
  %46 = load i64, ptr %45, align 8
  %47 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %42, i32 0, i32 1
  store i64 %46, ptr %47, align 8
  %48 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %11, i32 2
  %49 = load i64, ptr %48, align 8
  %50 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %42, i32 0, i32 2
  store i64 %49, ptr %50, align 8
  %51 = load ptr, ptr %8, align 4
  %52 = getelementptr inbounds %struct.devlink_ops, ptr %51, i32 0, i32 33
  %53 = load ptr, ptr %52, align 4
  %54 = icmp eq ptr %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %44
  %56 = tail call i32 %53(ptr noundef %0, ptr noundef %12) #27
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @kfree(ptr noundef nonnull %42) #27
  br label %65

59:                                               ; preds = %55, %44
  %60 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %42, i32 0, i32 3
  %61 = load ptr, ptr %9, align 4
  store ptr %60, ptr %9, align 4
  store ptr %7, ptr %60, align 8
  %62 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %42, i32 0, i32 3, i32 1
  store ptr %61, ptr %62, align 4
  store volatile ptr %60, ptr %61, align 4
  tail call fastcc void @devlink_trap_policer_notify(ptr noundef %0, ptr noundef nonnull %42, i32 noundef 71) #27
  %63 = add nuw i32 %11, 1
  %64 = icmp eq i32 %63, %2
  br i1 %64, label %74, label %10

65:                                               ; preds = %58, %40, %37, %27
  %66 = phi i32 [ -22, %27 ], [ %56, %58 ], [ -17, %37 ], [ -12, %40 ]
  %67 = add i32 %11, -1
  %68 = icmp sgt i32 %67, -1
  br i1 %68, label %69, label %74

69:                                               ; preds = %69, %65
  %70 = phi i32 [ %72, %69 ], [ %67, %65 ]
  %71 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %70
  tail call fastcc void @devlink_trap_policer_unregister(ptr noundef %0, ptr noundef %71)
  %72 = add nsw i32 %70, -1
  %73 = icmp sgt i32 %70, 0
  br i1 %73, label %69, label %74

74:                                               ; preds = %69, %65, %59, %3
  %75 = phi i32 [ 0, %3 ], [ %66, %65 ], [ %66, %69 ], [ 0, %59 ]
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret i32 %75
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_trap_policer_unregister(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = load i32, ptr %1, align 8
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 13
  br label %5

5:                                                ; preds = %9, %2
  %6 = phi ptr [ %4, %2 ], [ %7, %9 ]
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, %4
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr i8, ptr %7, i32 -24
  %11 = load ptr, ptr %10, align 8
  %12 = load i32, ptr %11, align 8
  %13 = icmp eq i32 %12, %3
  br i1 %13, label %14, label %5

14:                                               ; preds = %9
  %15 = getelementptr i8, ptr %7, i32 -24
  br label %16

16:                                               ; preds = %14, %5
  %17 = phi ptr [ %15, %14 ], [ null, %5 ]
  %18 = icmp eq ptr %17, null
  %19 = load i1, ptr @devlink_trap_policer_unregister.__already_done, align 1
  %20 = xor i1 %19, true
  %21 = select i1 %18, i1 %20, i1 false
  br i1 %21, label %22, label %23, !prof !11

22:                                               ; preds = %16
  store i1 true, ptr @devlink_trap_policer_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11217, i32 noundef 9, ptr noundef null) #27
  br label %23

23:                                               ; preds = %22, %16
  br i1 %18, label %37, label %24

24:                                               ; preds = %23
  tail call fastcc void @devlink_trap_policer_notify(ptr noundef %0, ptr noundef nonnull %17, i32 noundef 72)
  %25 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %17, i32 0, i32 3
  %26 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %17, i32 0, i32 3, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = load ptr, ptr %25, align 4
  %29 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  store ptr %27, ptr %29, align 4
  store volatile ptr %28, ptr %27, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %25, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %26, align 4
  %30 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.devlink_ops, ptr %31, i32 0, i32 34
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %24
  tail call void %33(ptr noundef %0, ptr noundef %1) #27
  br label %36

36:                                               ; preds = %35, %24
  tail call void @kfree(ptr noundef nonnull %17) #27
  br label %37

37:                                               ; preds = %36, %23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_trap_policers_unregister(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = add i32 %2, -1
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %12

7:                                                ; preds = %7, %3
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  %9 = getelementptr %struct.devlink_trap_policer, ptr %1, i32 %8
  tail call fastcc void @devlink_trap_policer_unregister(ptr noundef %0, ptr noundef %9)
  %10 = add nsw i32 %8, -1
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %7, label %12

12:                                               ; preds = %7, %3
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @devlink_compat_running_version(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = alloca %struct.devlink_info_req, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 24
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %83, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %11) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  %12 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %13 = icmp eq ptr %12, null
  br i1 %13, label %82, label %14

14:                                               ; preds = %10
  store ptr %12, ptr %4, align 4
  %15 = load ptr, ptr %5, align 4
  %16 = getelementptr inbounds %struct.devlink_ops, ptr %15, i32 0, i32 24
  %17 = load ptr, ptr %16, align 4
  %18 = call i32 %17(ptr noundef %0, ptr noundef nonnull %4, ptr noundef null) #27
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 5
  %22 = load i32, ptr %21, align 8
  %23 = icmp sgt i32 %22, 3
  br i1 %23, label %24, label %81

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 17
  %26 = load ptr, ptr %25, align 4
  br label %27

27:                                               ; preds = %74, %24
  %28 = phi ptr [ %79, %74 ], [ %26, %24 ]
  %29 = phi i32 [ %78, %74 ], [ %22, %24 ]
  %30 = load i16, ptr %28, align 2
  %31 = icmp ult i16 %30, 4
  %32 = zext i16 %30 to i32
  %33 = icmp ult i32 %29, %32
  %34 = select i1 %31, i1 true, i1 %33
  br i1 %34, label %81, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.nlattr, ptr %28, i32 0, i32 1
  %37 = load i16, ptr %36, align 2
  %38 = and i16 %37, 16383
  %39 = icmp eq i16 %38, 101
  %40 = icmp ugt i16 %30, 7
  %41 = select i1 %39, i1 %40, i1 false
  br i1 %41, label %42, label %74

42:                                               ; preds = %35
  %43 = add nsw i32 %32, -4
  %44 = getelementptr i8, ptr %28, i32 4
  br label %45

45:                                               ; preds = %64, %42
  %46 = phi ptr [ %69, %64 ], [ %44, %42 ]
  %47 = phi i32 [ %68, %64 ], [ %43, %42 ]
  %48 = load i16, ptr %46, align 2
  %49 = icmp ult i16 %48, 4
  %50 = zext i16 %48 to i32
  %51 = icmp ult i32 %47, %50
  %52 = select i1 %49, i1 true, i1 %51
  br i1 %52, label %71, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %struct.nlattr, ptr %46, i32 0, i32 1
  %55 = load i16, ptr %54, align 2
  %56 = and i16 %55, 16383
  %57 = icmp eq i16 %56, 104
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = getelementptr i8, ptr %46, i32 4
  %60 = call i32 @strlcat(ptr noundef %1, ptr noundef %59, i32 noundef %2) #27
  %61 = call i32 @strlcat(ptr noundef %1, ptr noundef nonnull @.str.216, i32 noundef %2) #27
  %62 = load i16, ptr %46, align 2
  %63 = zext i16 %62 to i32
  br label %64

64:                                               ; preds = %58, %53
  %65 = phi i32 [ %50, %53 ], [ %63, %58 ]
  %66 = add nuw nsw i32 %65, 3
  %67 = and i32 %66, 131068
  %68 = sub nsw i32 %47, %67
  %69 = getelementptr i8, ptr %46, i32 %67
  %70 = icmp sgt i32 %68, 3
  br i1 %70, label %45, label %71

71:                                               ; preds = %64, %45
  %72 = load i16, ptr %28, align 2
  %73 = zext i16 %72 to i32
  br label %74

74:                                               ; preds = %71, %35
  %75 = phi i32 [ %73, %71 ], [ %32, %35 ]
  %76 = add nuw nsw i32 %75, 3
  %77 = and i32 %76, 131068
  %78 = sub i32 %29, %77
  %79 = getelementptr i8, ptr %28, i32 %77
  %80 = icmp sgt i32 %78, 3
  br i1 %80, label %27, label %81

81:                                               ; preds = %74, %27, %20, %14
  call void @kfree_skb_reason(ptr noundef nonnull %12, i32 noundef 0) #27
  br label %82

82:                                               ; preds = %81, %10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  call void @mutex_unlock(ptr noundef %11) #27
  br label %83

83:                                               ; preds = %82, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_compat_flash_update(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = alloca %struct.devlink_flash_notify, align 4
  %4 = alloca %struct.devlink_flash_notify, align 4
  %5 = alloca %struct.devlink_flash_update_params, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(12) %5, i8 0, i32 12, i1 false)
  %6 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.devlink_ops, ptr %7, i32 0, i32 25
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 18
  %13 = load ptr, ptr %12, align 4
  %14 = call i32 @request_firmware(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %13) #27
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 20
  call void @mutex_lock(ptr noundef %17) #27
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false) #27
  call fastcc void @__devlink_flash_update_notify(ptr noundef %0, i32 noundef 58, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #27
  %18 = load ptr, ptr %6, align 4
  %19 = getelementptr inbounds %struct.devlink_ops, ptr %18, i32 0, i32 25
  %20 = load ptr, ptr %19, align 4
  %21 = call i32 %20(ptr noundef %0, ptr noundef nonnull %5, ptr noundef null) #27
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %3, i8 0, i32 20, i1 false) #27
  call fastcc void @__devlink_flash_update_notify(ptr noundef %0, i32 noundef 59, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #27
  call void @mutex_unlock(ptr noundef %17) #27
  %22 = load ptr, ptr %5, align 4
  call void @release_firmware(ptr noundef %22) #27
  br label %23

23:                                               ; preds = %16, %11, %2
  %24 = phi i32 [ %21, %16 ], [ -95, %2 ], [ %14, %11 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #27
  ret i32 %24
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_firmware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_firmware(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_compat_phys_port_name_get(ptr noundef %0, ptr nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = tail call i32 @rtnl_is_locked() #27
  %5 = icmp eq i32 %4, 0
  %6 = load i1, ptr @devlink_compat_phys_port_name_get.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %3
  store i1 true, ptr @devlink_compat_phys_port_name_get.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11378, i32 noundef 9, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.3, i32 noundef 11378) #27
  br label %10

10:                                               ; preds = %9, %3
  %11 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.net_device_ops, ptr %12, i32 0, i32 70
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %115, label %16

16:                                               ; preds = %10
  %17 = tail call ptr %14(ptr noundef %0) #27
  %18 = icmp eq ptr %17, null
  br i1 %18, label %115, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9
  %21 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 10
  %22 = load i8, ptr %21, align 4
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %115, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 2
  %27 = load i32, ptr %26, align 4
  switch i32 %27, label %110 [
    i32 0, label %28
    i32 1, label %44
    i32 2, label %44
    i32 6, label %44
    i32 3, label %45
    i32 4, label %65
    i32 7, label %88
    i32 5, label %115
  ]

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4
  %30 = load i32, ptr %29, align 4
  %31 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %1, i32 noundef %2, ptr noundef nonnull @.str.217, i32 noundef %30) #27
  %32 = icmp ult i32 %31, %2
  br i1 %32, label %33, label %110

33:                                               ; preds = %28
  %34 = load i8, ptr %20, align 4
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %110, label %37

37:                                               ; preds = %33
  %38 = getelementptr i8, ptr %1, i32 %31
  %39 = sub i32 %2, %31
  %40 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 1
  %41 = load i32, ptr %40, align 4
  %42 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %38, i32 noundef %39, ptr noundef nonnull @.str.218, i32 noundef %41) #27
  %43 = add i32 %42, %31
  br label %110

44:                                               ; preds = %25, %25, %25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9654, i32 noundef 9, ptr noundef null) #27
  br label %115

45:                                               ; preds = %25
  %46 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 2
  %47 = load i8, ptr %46, align 2
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4
  %52 = load i32, ptr %51, align 4
  %53 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %1, i32 noundef %2, ptr noundef nonnull @.str.219, i32 noundef %52) #27
  %54 = icmp ult i32 %53, %2
  br i1 %54, label %55, label %115

55:                                               ; preds = %50
  %56 = sub i32 %2, %53
  %57 = getelementptr i8, ptr %1, i32 %53
  br label %58

58:                                               ; preds = %55, %45
  %59 = phi ptr [ %57, %55 ], [ %1, %45 ]
  %60 = phi i32 [ %56, %55 ], [ %2, %45 ]
  %61 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 1
  %62 = load i16, ptr %61, align 4
  %63 = zext i16 %62 to i32
  %64 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %59, i32 noundef %60, ptr noundef nonnull @.str.220, i32 noundef %63) #27
  br label %110

65:                                               ; preds = %25
  %66 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 3
  %67 = load i8, ptr %66, align 4
  %68 = and i8 %67, 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4
  %72 = load i32, ptr %71, align 4
  %73 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %1, i32 noundef %2, ptr noundef nonnull @.str.219, i32 noundef %72) #27
  %74 = icmp ult i32 %73, %2
  br i1 %74, label %75, label %115

75:                                               ; preds = %70
  %76 = sub i32 %2, %73
  %77 = getelementptr i8, ptr %1, i32 %73
  br label %78

78:                                               ; preds = %75, %65
  %79 = phi ptr [ %77, %75 ], [ %1, %65 ]
  %80 = phi i32 [ %76, %75 ], [ %2, %65 ]
  %81 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 1
  %82 = load i16, ptr %81, align 4
  %83 = zext i16 %82 to i32
  %84 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 2
  %85 = load i16, ptr %84, align 2
  %86 = zext i16 %85 to i32
  %87 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %79, i32 noundef %80, ptr noundef nonnull @.str.221, i32 noundef %83, i32 noundef %86) #27
  br label %110

88:                                               ; preds = %25
  %89 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4
  %90 = getelementptr inbounds %struct.devlink_port_pci_sf_attrs, ptr %89, i32 0, i32 3
  %91 = load i8, ptr %90, align 2
  %92 = and i8 %91, 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %88
  %95 = load i32, ptr %89, align 4
  %96 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %1, i32 noundef %2, ptr noundef nonnull @.str.219, i32 noundef %95) #27
  %97 = icmp ult i32 %96, %2
  br i1 %97, label %98, label %115

98:                                               ; preds = %94
  %99 = sub i32 %2, %96
  %100 = getelementptr i8, ptr %1, i32 %96
  br label %101

101:                                              ; preds = %98, %88
  %102 = phi ptr [ %100, %98 ], [ %1, %88 ]
  %103 = phi i32 [ %99, %98 ], [ %2, %88 ]
  %104 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 3
  %105 = load i16, ptr %104, align 4
  %106 = zext i16 %105 to i32
  %107 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 9, i32 4, i32 0, i32 1
  %108 = load i32, ptr %107, align 4
  %109 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %102, i32 noundef %103, ptr noundef nonnull @.str.222, i32 noundef %106, i32 noundef %108) #27
  br label %110

110:                                              ; preds = %101, %78, %58, %37, %33, %28, %25
  %111 = phi i32 [ %2, %25 ], [ %103, %101 ], [ %80, %78 ], [ %60, %58 ], [ %2, %37 ], [ %2, %33 ], [ %2, %28 ]
  %112 = phi i32 [ 0, %25 ], [ %109, %101 ], [ %87, %78 ], [ %64, %58 ], [ %43, %37 ], [ %31, %33 ], [ %31, %28 ]
  %113 = icmp ult i32 %112, %111
  %114 = select i1 %113, i32 0, i32 -22
  br label %115

115:                                              ; preds = %110, %94, %70, %50, %44, %25, %19, %16, %10
  %116 = phi i32 [ -95, %16 ], [ -22, %44 ], [ -95, %19 ], [ -22, %50 ], [ -22, %70 ], [ -22, %94 ], [ -95, %25 ], [ %114, %110 ], [ -95, %10 ]
  ret i32 %116
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rtnl_is_locked() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @devlink_compat_switch_id_get(ptr noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.net_device, ptr %0, i32 0, i32 16
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.net_device_ops, ptr %4, i32 0, i32 70
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = tail call ptr %6(ptr noundef %0) #27
  %10 = icmp eq ptr %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.devlink_port, ptr %9, i32 0, i32 10
  %13 = load i8, ptr %12, align 4
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.devlink_port, ptr %9, i32 0, i32 9, i32 3
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(33) %1, ptr noundef align 4 dereferenceable(33) %17, i32 33, i1 false)
  br label %18

18:                                               ; preds = %16, %11, %8, %2
  %19 = phi i32 [ 0, %16 ], [ -95, %11 ], [ -95, %8 ], [ -95, %2 ]
  ret i32 %19
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @devlink_init() #15 section ".init.text" {
  %1 = tail call i32 @genl_register_family(ptr noundef nonnull @devlink_nl_family) #27
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = tail call i32 @register_pernet_subsys(ptr noundef nonnull @devlink_pernet_ops) #27
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !10

6:                                                ; preds = %3, %0
  %7 = phi i32 [ %4, %3 ], [ %1, %0 ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11450, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %6, %3
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ]
  ret i32 %9
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_devlink_hwmsg(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #27
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %34

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  %22 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %5, i32 0, i32 4
  %23 = load i8, ptr %22, align 4, !range !18
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %5, i32 0, i32 5
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %5, i32 0, i32 7
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_devlink_hwmsg, ptr %5, i32 0, i32 6
  %30 = load i32, ptr %29, align 4
  %31 = and i32 %30, 65535
  %32 = getelementptr i8, ptr %5, i32 %31
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.23, ptr noundef %13, ptr noundef %17, ptr noundef %21, i32 noundef %24, i32 noundef %26, i32 noundef %28, ptr noundef %32, i32 noundef %28) #27
  %33 = tail call i32 @trace_handle_return(ptr noundef %9) #27
  br label %34

34:                                               ; preds = %8, %3
  %35 = phi i32 [ %33, %8 ], [ %6, %3 ]
  ret i32 %35
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_devlink_hwerr(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #27
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %29

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  %22 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %5, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_devlink_hwerr, ptr %5, i32 0, i32 5
  %25 = load i32, ptr %24, align 4
  %26 = and i32 %25, 65535
  %27 = getelementptr i8, ptr %5, i32 %26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.27, ptr noundef %13, ptr noundef %17, ptr noundef %21, i32 noundef %23, ptr noundef %27) #27
  %28 = tail call i32 @trace_handle_return(ptr noundef %9) #27
  br label %29

29:                                               ; preds = %8, %3
  %30 = phi i32 [ %28, %8 ], [ %6, %3 ]
  ret i32 %30
}

; Function Attrs: inlinehint mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc i32 @trace_event_get_offsets_devlink_health_report(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2) unnamed_addr #16 {
  %4 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.device, ptr %5, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  %10 = select i1 %9, ptr @.str.10, ptr %8
  %11 = tail call i32 @strlen(ptr noundef nonnull %10)
  %12 = add i32 %11, 1
  %13 = shl i32 %12, 16
  %14 = or i32 %13, 28
  store i32 %14, ptr %0, align 4
  %15 = load ptr, ptr %4, align 4
  %16 = getelementptr inbounds %struct.device, ptr %15, i32 0, i32 3
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = load ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  %22 = select i1 %21, ptr @.str.10, ptr %20
  br label %23

23:                                               ; preds = %19, %3
  %24 = phi ptr [ %17, %3 ], [ %22, %19 ]
  %25 = tail call i32 @strlen(ptr noundef nonnull %24)
  %26 = add i32 %25, 1
  %27 = add i32 %11, 29
  %28 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %0, i32 0, i32 1
  %29 = shl i32 %26, 16
  %30 = or i32 %29, %27
  store i32 %30, ptr %28, align 4
  %31 = load ptr, ptr %4, align 4
  %32 = getelementptr inbounds %struct.device, ptr %31, i32 0, i32 6
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  %36 = select i1 %35, ptr @.str.10, ptr %34
  %37 = add i32 %26, %12
  %38 = tail call i32 @strlen(ptr noundef nonnull %36)
  %39 = add i32 %38, 1
  %40 = add i32 %37, 28
  %41 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %0, i32 0, i32 2
  %42 = shl i32 %39, 16
  %43 = or i32 %42, %40
  store i32 %43, ptr %41, align 4
  %44 = add i32 %39, %37
  %45 = icmp eq ptr %2, null
  %46 = select i1 %45, ptr @.str.10, ptr %2
  %47 = tail call i32 @strlen(ptr noundef %46)
  %48 = add i32 %47, 1
  %49 = add i32 %44, 28
  %50 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %0, i32 0, i32 3
  %51 = shl i32 %48, 16
  %52 = or i32 %51, %49
  store i32 %52, ptr %50, align 4
  %53 = add i32 %48, %44
  %54 = tail call i32 @strlen(ptr noundef %46)
  %55 = add i32 %54, 1
  %56 = add i32 %53, 28
  %57 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_health_report, ptr %0, i32 0, i32 4
  %58 = shl i32 %55, 16
  %59 = or i32 %58, %56
  store i32 %59, ptr %57, align 4
  %60 = add i32 %55, %53
  ret i32 %60
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_devlink_health_report(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #27
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  %22 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %5, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 65535
  %25 = getelementptr i8, ptr %5, i32 %24
  %26 = getelementptr inbounds %struct.trace_event_raw_devlink_health_report, ptr %5, i32 0, i32 5
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 65535
  %29 = getelementptr i8, ptr %5, i32 %28
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.29, ptr noundef %13, ptr noundef %17, ptr noundef %21, ptr noundef %25, ptr noundef %29) #27
  %30 = tail call i32 @trace_handle_return(ptr noundef %9) #27
  br label %31

31:                                               ; preds = %8, %3
  %32 = phi i32 [ %30, %8 ], [ %6, %3 ]
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_devlink_health_recover_aborted(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #27
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %32

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 8
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  %22 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %5, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 65535
  %25 = getelementptr i8, ptr %5, i32 %24
  %26 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %5, i32 0, i32 5
  %27 = load i8, ptr %26, align 8, !range !18
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %struct.trace_event_raw_devlink_health_recover_aborted, ptr %5, i32 0, i32 6
  %30 = load i64, ptr %29, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.33, ptr noundef %13, ptr noundef %17, ptr noundef %21, ptr noundef %25, i32 noundef %28, i64 noundef %30) #27
  %31 = tail call i32 @trace_handle_return(ptr noundef %9) #27
  br label %32

32:                                               ; preds = %8, %3
  %33 = phi i32 [ %31, %8 ], [ %6, %3 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_devlink_health_reporter_state_update(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #27
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %30

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  %22 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %5, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 65535
  %25 = getelementptr i8, ptr %5, i32 %24
  %26 = getelementptr inbounds %struct.trace_event_raw_devlink_health_reporter_state_update, ptr %5, i32 0, i32 5
  %27 = load i8, ptr %26, align 4
  %28 = zext i8 %27 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.36, ptr noundef %13, ptr noundef %17, ptr noundef %21, ptr noundef %25, i32 noundef %28) #27
  %29 = tail call i32 @trace_handle_return(ptr noundef %9) #27
  br label %30

30:                                               ; preds = %8, %3
  %31 = phi i32 [ %29, %8 ], [ %6, %3 ]
  ret i32 %31
}

; Function Attrs: inlinehint mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc i32 @trace_event_get_offsets_devlink_trap_report(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) unnamed_addr #16 {
  %4 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.device, ptr %5, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  %10 = select i1 %9, ptr @.str.10, ptr %8
  %11 = tail call i32 @strlen(ptr noundef nonnull %10)
  %12 = add i32 %11, 1
  %13 = shl i32 %12, 16
  %14 = or i32 %13, 32
  store i32 %14, ptr %0, align 4
  %15 = load ptr, ptr %4, align 4
  %16 = getelementptr inbounds %struct.device, ptr %15, i32 0, i32 3
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = load ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  %22 = select i1 %21, ptr @.str.10, ptr %20
  br label %23

23:                                               ; preds = %19, %3
  %24 = phi ptr [ %17, %3 ], [ %22, %19 ]
  %25 = tail call i32 @strlen(ptr noundef nonnull %24)
  %26 = add i32 %25, 1
  %27 = add i32 %11, 33
  %28 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %0, i32 0, i32 1
  %29 = shl i32 %26, 16
  %30 = or i32 %29, %27
  store i32 %30, ptr %28, align 4
  %31 = add i32 %26, %12
  %32 = load ptr, ptr %4, align 4
  %33 = getelementptr inbounds %struct.device, ptr %32, i32 0, i32 6
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  %37 = select i1 %36, ptr @.str.10, ptr %35
  %38 = tail call i32 @strlen(ptr noundef nonnull %37)
  %39 = add i32 %38, 1
  %40 = add i32 %31, 32
  %41 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %0, i32 0, i32 2
  %42 = shl i32 %39, 16
  %43 = or i32 %42, %40
  store i32 %43, ptr %41, align 4
  %44 = add i32 %39, %31
  %45 = load ptr, ptr %2, align 4
  %46 = icmp eq ptr %45, null
  %47 = select i1 %46, ptr @.str.10, ptr %45
  %48 = tail call i32 @strlen(ptr noundef nonnull %47)
  %49 = add i32 %48, 1
  %50 = add i32 %44, 32
  %51 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %0, i32 0, i32 3
  %52 = shl i32 %49, 16
  %53 = or i32 %52, %50
  store i32 %53, ptr %51, align 4
  %54 = getelementptr inbounds %struct.devlink_trap_metadata, ptr %2, i32 0, i32 1
  %55 = load ptr, ptr %54, align 4
  %56 = icmp eq ptr %55, null
  %57 = select i1 %56, ptr @.str.10, ptr %55
  %58 = add i32 %49, %44
  %59 = tail call i32 @strlen(ptr noundef nonnull %57)
  %60 = add i32 %59, 1
  %61 = add i32 %58, 32
  %62 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %0, i32 0, i32 4
  %63 = shl i32 %60, 16
  %64 = or i32 %63, %61
  store i32 %64, ptr %62, align 4
  %65 = add i32 %60, %58
  %66 = add i32 %65, 32
  %67 = getelementptr inbounds %struct.trace_event_data_offsets_devlink_trap_report, ptr %0, i32 0, i32 5
  %68 = or i32 %66, 1048576
  store i32 %68, ptr %67, align 4
  %69 = add i32 %65, 16
  ret i32 %69
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_devlink_trap_report(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #27
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 65535
  %13 = getelementptr i8, ptr %5, i32 %12
  %14 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 65535
  %17 = getelementptr i8, ptr %5, i32 %16
  %18 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65535
  %21 = getelementptr i8, ptr %5, i32 %20
  %22 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %5, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 65535
  %25 = getelementptr i8, ptr %5, i32 %24
  %26 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %5, i32 0, i32 5
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 65535
  %29 = getelementptr i8, ptr %5, i32 %28
  %30 = getelementptr inbounds %struct.trace_event_raw_devlink_trap_report, ptr %5, i32 0, i32 6
  %31 = load i32, ptr %30, align 4
  %32 = and i32 %31, 65535
  %33 = getelementptr i8, ptr %5, i32 %32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.41, ptr noundef %13, ptr noundef %17, ptr noundef %21, ptr noundef %25, ptr noundef %29, ptr noundef %33) #27
  %34 = tail call i32 @trace_handle_return(ptr noundef %9) #27
  br label %35

35:                                               ; preds = %8, %3
  %36 = phi i32 [ %34, %8 ], [ %6, %3 ]
  ret i32 %36
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #17

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #18

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nla_put(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_trim(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netlink_unicast(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_skb(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nla_put_64bit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_le(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_notify(ptr nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #0 {
  %3 = add i32 %1, -5
  %4 = icmp ult i32 %3, -2
  br i1 %4, label %5, label %6, !prof !11

5:                                                ; preds = %2
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 849, i32 noundef 9, ptr noundef null) #27
  br label %6

6:                                                ; preds = %5, %2
  %7 = load i32, ptr %0, align 32
  %8 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %7, i32 noundef 1) #27
  br i1 %8, label %10, label %9, !prof !10

9:                                                ; preds = %6
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 850, i32 noundef 9, ptr noundef null) #27
  br label %10

10:                                               ; preds = %9, %6
  %11 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %12 = icmp eq ptr %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %10
  %14 = tail call fastcc i32 @devlink_nl_fill(ptr noundef nonnull %11, ptr noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @kfree_skb_reason(ptr noundef nonnull %11, i32 noundef 0) #27
  br label %30

17:                                               ; preds = %13
  %18 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %19 = icmp eq i8 %18, 0
  %20 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %21 = xor i1 %20, true
  %22 = select i1 %19, i1 %21, i1 false
  br i1 %22, label %23, label %24, !prof !11

23:                                               ; preds = %17
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %24

24:                                               ; preds = %23, %17
  br i1 %19, label %30, label %25

25:                                               ; preds = %24
  %26 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %27 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %28 = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 3, i32 16
  store i32 %26, ptr %28, align 8
  %29 = tail call i32 @netlink_broadcast(ptr noundef %27, ptr noundef nonnull %11, i32 noundef 0, i32 noundef %26, i32 noundef 3264) #27
  br label %30

30:                                               ; preds = %25, %24, %16, %10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_fill(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = alloca i8, align 1
  %8 = trunc i32 %2 to i8
  %9 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %3, i32 noundef %4, ptr noundef nonnull @devlink_nl_family, i32 noundef %5, i8 noundef zeroext %8) #27
  %10 = icmp eq ptr %9, null
  br i1 %10, label %89, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.device, ptr %13, i32 0, i32 5
  %15 = load ptr, ptr %14, align 4
  %16 = load ptr, ptr %15, align 4
  %17 = tail call i32 @strlen(ptr noundef %16) #27
  %18 = add i32 %17, 1
  %19 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %18, ptr noundef %16) #27
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %75

21:                                               ; preds = %11
  %22 = load ptr, ptr %12, align 4
  %23 = getelementptr inbounds %struct.device, ptr %22, i32 0, i32 3
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = load ptr, ptr %22, align 4
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi ptr [ %27, %26 ], [ %24, %21 ]
  %30 = tail call i32 @strlen(ptr noundef %29) #27
  %31 = add i32 %30, 1
  %32 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %31, ptr noundef %29) #27
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %75

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 21
  %36 = load i8, ptr %35, align 4
  %37 = and i8 %36, 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #27
  store i8 %37, ptr %7, align 1
  %38 = call i32 @nla_put(ptr noundef %0, i32 noundef 136, i32 noundef 1, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #27
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %75

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %42 = load ptr, ptr %41, align 8
  %43 = call i32 @nla_put(ptr noundef %0, i32 noundef 32924, i32 noundef 0, ptr noundef null) #27
  %44 = icmp slt i32 %43, 0
  %45 = icmp eq ptr %42, null
  %46 = select i1 %44, i1 true, i1 %45
  br i1 %46, label %75, label %47

47:                                               ; preds = %40
  %48 = call fastcc i32 @devlink_reload_stats_put(ptr noundef %0, ptr noundef %1, i1 noundef zeroext false)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %47
  %51 = call fastcc i32 @devlink_reload_stats_put(ptr noundef %0, ptr noundef %1, i1 noundef zeroext true)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %64

53:                                               ; preds = %50
  %54 = load ptr, ptr %41, align 8
  %55 = ptrtoint ptr %54 to i32
  %56 = ptrtoint ptr %42 to i32
  %57 = sub i32 %55, %56
  %58 = trunc i32 %57 to i16
  store i16 %58, ptr %42, align 2
  %59 = getelementptr i8, ptr %9, i32 -20
  %60 = load ptr, ptr %41, align 8
  %61 = ptrtoint ptr %60 to i32
  %62 = ptrtoint ptr %59 to i32
  %63 = sub i32 %61, %62
  store i32 %63, ptr %59, align 4
  br label %89

64:                                               ; preds = %50, %47
  %65 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %66 = load ptr, ptr %65, align 4
  %67 = icmp ugt ptr %66, %42
  br i1 %67, label %68, label %70, !prof !11

68:                                               ; preds = %64
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %69 = load ptr, ptr %65, align 4
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi ptr [ %69, %68 ], [ %66, %64 ]
  %72 = ptrtoint ptr %42 to i32
  %73 = ptrtoint ptr %71 to i32
  %74 = sub i32 %72, %73
  call void @skb_trim(ptr noundef %0, i32 noundef %74) #27
  br label %75

75:                                               ; preds = %70, %40, %34, %28, %11
  %76 = getelementptr i8, ptr %9, i32 -20
  %77 = icmp eq ptr %76, null
  br i1 %77, label %89, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %80 = load ptr, ptr %79, align 4
  %81 = icmp ugt ptr %80, %76
  br i1 %81, label %82, label %84, !prof !11

82:                                               ; preds = %78
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %83 = load ptr, ptr %79, align 4
  br label %84

84:                                               ; preds = %82, %78
  %85 = phi ptr [ %83, %82 ], [ %80, %78 ]
  %86 = ptrtoint ptr %76 to i32
  %87 = ptrtoint ptr %85 to i32
  %88 = sub i32 %86, %87
  call void @skb_trim(ptr noundef %0, i32 noundef %88) #27
  br label %89

89:                                               ; preds = %84, %75, %53, %6
  %90 = phi i32 [ 0, %53 ], [ -90, %6 ], [ -90, %75 ], [ -90, %84 ]
  ret i32 %90
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_reload_stats_put(ptr noundef %0, ptr nocapture noundef readonly %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %8 = load ptr, ptr %7, align 8
  br i1 %2, label %14, label %9

9:                                                ; preds = %3
  %10 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 32925, i32 noundef 0, ptr noundef null) #27
  %11 = icmp slt i32 %10, 0
  %12 = icmp eq ptr %8, null
  %13 = select i1 %11, i1 true, i1 %12
  br i1 %13, label %171, label %19

14:                                               ; preds = %3
  %15 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 32929, i32 noundef 0, ptr noundef null) #27
  %16 = icmp slt i32 %15, 0
  %17 = icmp eq ptr %8, null
  %18 = select i1 %16, i1 true, i1 %17
  br i1 %18, label %171, label %19

19:                                               ; preds = %14, %9
  %20 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 14
  %21 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %22 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 17, i32 1
  %23 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 17
  %24 = select i1 %2, ptr %22, ptr %23
  br label %25

25:                                               ; preds = %129, %19
  %26 = phi i32 [ 0, %19 ], [ %130, %129 ]
  br i1 %2, label %38, label %27

27:                                               ; preds = %25
  %28 = load ptr, ptr %20, align 4
  %29 = getelementptr inbounds %struct.devlink_ops, ptr %28, i32 0, i32 1
  %30 = lshr i32 %26, 5
  %31 = getelementptr i32, ptr %29, i32 %30
  %32 = load volatile i32, ptr %31, align 4
  %33 = shl nuw i32 1, %26
  %34 = and i32 %32, %33
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq i32 %26, 0
  %37 = select i1 %35, i1 true, i1 %36
  br i1 %37, label %129, label %40

38:                                               ; preds = %25
  %39 = icmp eq i32 %26, 0
  br i1 %39, label %129, label %40

40:                                               ; preds = %38, %27
  %41 = load ptr, ptr %21, align 8
  %42 = call i32 @nla_put(ptr noundef %0, i32 noundef 32930, i32 noundef 0, ptr noundef null) #27
  %43 = icmp slt i32 %42, 0
  %44 = icmp eq ptr %41, null
  %45 = select i1 %43, i1 true, i1 %44
  br i1 %45, label %160, label %46

46:                                               ; preds = %40
  %47 = trunc i32 %26 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #27
  store i8 %47, ptr %6, align 1
  %48 = call i32 @nla_put(ptr noundef %0, i32 noundef 153, i32 noundef 1, ptr noundef nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #27
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %149

50:                                               ; preds = %46
  %51 = load ptr, ptr %21, align 8
  %52 = call i32 @nla_put(ptr noundef %0, i32 noundef 32931, i32 noundef 0, ptr noundef null) #27
  %53 = icmp slt i32 %52, 0
  %54 = icmp eq ptr %51, null
  %55 = select i1 %53, i1 true, i1 %54
  br i1 %55, label %149, label %56

56:                                               ; preds = %50
  %57 = icmp eq i32 %26, 1
  %58 = getelementptr [6 x i32], ptr %24, i32 0, i32 %26
  %59 = load i32, ptr %58, align 4
  %60 = load ptr, ptr %21, align 8
  %61 = call i32 @nla_put(ptr noundef %0, i32 noundef 32926, i32 noundef 0, ptr noundef null) #27
  %62 = icmp slt i32 %61, 0
  %63 = icmp eq ptr %60, null
  %64 = select i1 %62, i1 true, i1 %63
  br i1 %64, label %138, label %65

65:                                               ; preds = %56
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #27
  store i8 0, ptr %5, align 1
  %66 = call i32 @nla_put(ptr noundef %0, i32 noundef 159, i32 noundef 1, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #27
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %59, ptr %4, align 4
  %69 = call i32 @nla_put(ptr noundef %0, i32 noundef 160, i32 noundef 4, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %109, %106, %68, %65
  %72 = phi ptr [ %60, %68 ], [ %60, %65 ], [ %101, %106 ], [ %101, %109 ]
  %73 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %74 = load ptr, ptr %73, align 4
  %75 = icmp ugt ptr %74, %72
  br i1 %75, label %76, label %78, !prof !11

76:                                               ; preds = %71
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %77 = load ptr, ptr %73, align 4
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi ptr [ %77, %76 ], [ %74, %71 ]
  %80 = ptrtoint ptr %72 to i32
  %81 = ptrtoint ptr %79 to i32
  %82 = sub i32 %80, %81
  call void @skb_trim(ptr noundef %0, i32 noundef %82) #27
  br label %138

83:                                               ; preds = %68
  %84 = load ptr, ptr %21, align 8
  %85 = ptrtoint ptr %84 to i32
  %86 = ptrtoint ptr %60 to i32
  %87 = sub i32 %85, %86
  %88 = trunc i32 %87 to i16
  store i16 %88, ptr %60, align 2
  br i1 %2, label %89, label %90

89:                                               ; preds = %83
  br i1 %57, label %118, label %97

90:                                               ; preds = %83
  %91 = load ptr, ptr %20, align 4
  %92 = getelementptr inbounds %struct.devlink_ops, ptr %91, i32 0, i32 2
  %93 = load volatile i32, ptr %92, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = select i1 %95, i1 true, i1 %57
  br i1 %96, label %118, label %97

97:                                               ; preds = %90, %89
  %98 = add nuw nsw i32 %26, 3
  %99 = getelementptr [6 x i32], ptr %24, i32 0, i32 %98
  %100 = load i32, ptr %99, align 4
  %101 = load ptr, ptr %21, align 8
  %102 = call i32 @nla_put(ptr noundef %0, i32 noundef 32926, i32 noundef 0, ptr noundef null) #27
  %103 = icmp slt i32 %102, 0
  %104 = icmp eq ptr %101, null
  %105 = select i1 %103, i1 true, i1 %104
  br i1 %105, label %138, label %106

106:                                              ; preds = %97
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #27
  store i8 1, ptr %5, align 1
  %107 = call i32 @nla_put(ptr noundef %0, i32 noundef 159, i32 noundef 1, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #27
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %71

109:                                              ; preds = %106
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %100, ptr %4, align 4
  %110 = call i32 @nla_put(ptr noundef %0, i32 noundef 160, i32 noundef 4, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %71

112:                                              ; preds = %109
  %113 = load ptr, ptr %21, align 8
  %114 = ptrtoint ptr %113 to i32
  %115 = ptrtoint ptr %101 to i32
  %116 = sub i32 %114, %115
  %117 = trunc i32 %116 to i16
  store i16 %117, ptr %101, align 2
  br label %118

118:                                              ; preds = %112, %90, %89
  %119 = load ptr, ptr %21, align 8
  %120 = ptrtoint ptr %119 to i32
  %121 = ptrtoint ptr %51 to i32
  %122 = sub i32 %120, %121
  %123 = trunc i32 %122 to i16
  store i16 %123, ptr %51, align 2
  %124 = load ptr, ptr %21, align 8
  %125 = ptrtoint ptr %124 to i32
  %126 = ptrtoint ptr %41 to i32
  %127 = sub i32 %125, %126
  %128 = trunc i32 %127 to i16
  store i16 %128, ptr %41, align 2
  br label %129

129:                                              ; preds = %118, %38, %27
  %130 = add nuw nsw i32 %26, 1
  %131 = icmp eq i32 %130, 3
  br i1 %131, label %132, label %25

132:                                              ; preds = %129
  %133 = load ptr, ptr %21, align 8
  %134 = ptrtoint ptr %133 to i32
  %135 = ptrtoint ptr %8 to i32
  %136 = sub i32 %134, %135
  %137 = trunc i32 %136 to i16
  store i16 %137, ptr %8, align 2
  br label %171

138:                                              ; preds = %97, %78, %56
  %139 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %140 = load ptr, ptr %139, align 4
  %141 = icmp ugt ptr %140, %51
  br i1 %141, label %142, label %144, !prof !11

142:                                              ; preds = %138
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %143 = load ptr, ptr %139, align 4
  br label %144

144:                                              ; preds = %142, %138
  %145 = phi ptr [ %143, %142 ], [ %140, %138 ]
  %146 = ptrtoint ptr %51 to i32
  %147 = ptrtoint ptr %145 to i32
  %148 = sub i32 %146, %147
  call void @skb_trim(ptr noundef %0, i32 noundef %148) #27
  br label %149

149:                                              ; preds = %144, %50, %46
  %150 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %151 = load ptr, ptr %150, align 4
  %152 = icmp ugt ptr %151, %41
  br i1 %152, label %153, label %155, !prof !11

153:                                              ; preds = %149
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %154 = load ptr, ptr %150, align 4
  br label %155

155:                                              ; preds = %153, %149
  %156 = phi ptr [ %154, %153 ], [ %151, %149 ]
  %157 = ptrtoint ptr %41 to i32
  %158 = ptrtoint ptr %156 to i32
  %159 = sub i32 %157, %158
  call void @skb_trim(ptr noundef %0, i32 noundef %159) #27
  br label %160

160:                                              ; preds = %155, %40
  %161 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %162 = load ptr, ptr %161, align 4
  %163 = icmp ugt ptr %162, %8
  br i1 %163, label %164, label %166, !prof !11

164:                                              ; preds = %160
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %165 = load ptr, ptr %161, align 4
  br label %166

166:                                              ; preds = %164, %160
  %167 = phi ptr [ %165, %164 ], [ %162, %160 ]
  %168 = ptrtoint ptr %8 to i32
  %169 = ptrtoint ptr %167 to i32
  %170 = sub i32 %168, %169
  call void @skb_trim(ptr noundef %0, i32 noundef %170) #27
  br label %171

171:                                              ; preds = %166, %132, %14, %9
  %172 = phi i32 [ -90, %166 ], [ 0, %132 ], [ -90, %14 ], [ -90, %9 ]
  ret i32 %172
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netlink_broadcast(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_health_reporter_put(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 16
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #27, !srcloc !14
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 1, ptr elementtype(i32) %2) #27, !srcloc !15
  %4 = extractvalue { i32, i32, i32 } %3, 0
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %25, label %8, !prof !10

8:                                                ; preds = %6
  tail call void @refcount_warn_saturate(ptr noundef %2, i32 noundef 3) #27
  br label %25

9:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %10 = getelementptr inbounds %struct.devlink_health_reporter, ptr %0, i32 0, i32 5
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = load ptr, ptr %11, align 4
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %23, label %16

16:                                               ; preds = %16, %13
  %17 = phi ptr [ %18, %16 ], [ %14, %13 ]
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  store ptr %20, ptr %21, align 4
  store volatile ptr %18, ptr %20, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %17, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %19, align 4
  tail call void @kfree(ptr noundef %17) #27
  %22 = icmp eq ptr %18, %11
  br i1 %22, label %23, label %16

23:                                               ; preds = %16, %13
  tail call void @kfree(ptr noundef nonnull %11) #27
  br label %24

24:                                               ; preds = %23, %9
  tail call void @kfree(ptr noundef %0) #27
  br label %25

25:                                               ; preds = %24, %8, %6
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #18

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_health_reporter_fill(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = trunc i32 %2 to i8
  %19 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %3, i32 noundef %4, ptr noundef nonnull @devlink_nl_family, i32 noundef %5, i8 noundef zeroext %18) #27
  %20 = icmp eq ptr %19, null
  br i1 %20, label %164, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %struct.devlink, ptr %17, i32 0, i32 18
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.device, ptr %23, i32 0, i32 5
  %25 = load ptr, ptr %24, align 4
  %26 = load ptr, ptr %25, align 4
  %27 = tail call i32 @strlen(ptr noundef %26) #27
  %28 = add i32 %27, 1
  %29 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %28, ptr noundef %26) #27
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %150

31:                                               ; preds = %21
  %32 = load ptr, ptr %22, align 4
  %33 = getelementptr inbounds %struct.device, ptr %32, i32 0, i32 3
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = load ptr, ptr %32, align 4
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi ptr [ %37, %36 ], [ %34, %31 ]
  %40 = tail call i32 @strlen(ptr noundef %39) #27
  %41 = add i32 %40, 1
  %42 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %41, ptr noundef %39) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %150

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 4
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.devlink_port, ptr %46, i32 0, i32 4
  %50 = load i32, ptr %49, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #27
  store i32 %50, ptr %15, align 4
  %51 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %15) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #27
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %150

53:                                               ; preds = %48, %44
  %54 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %55 = load ptr, ptr %54, align 8
  %56 = call i32 @nla_put(ptr noundef %0, i32 noundef 114, i32 noundef 0, ptr noundef null) #27
  %57 = icmp slt i32 %56, 0
  %58 = icmp eq ptr %55, null
  %59 = select i1 %57, i1 true, i1 %58
  br i1 %59, label %150, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 2
  %62 = load ptr, ptr %61, align 4
  %63 = load ptr, ptr %62, align 4
  %64 = call i32 @strlen(ptr noundef %63) #27
  %65 = add i32 %64, 1
  %66 = call i32 @nla_put(ptr noundef %0, i32 noundef 115, i32 noundef %65, ptr noundef %63) #27
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %144

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 10
  %70 = load i8, ptr %69, align 2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %14) #27
  store i8 %70, ptr %14, align 1
  %71 = call i32 @nla_put(ptr noundef %0, i32 noundef 116, i32 noundef 1, ptr noundef nonnull %14) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %14) #27
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %144

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 13
  %75 = load i64, ptr %74, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #27
  store i64 %75, ptr %13, align 8
  %76 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 117, i32 noundef 8, ptr noundef nonnull %13, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #27
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %144

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 14
  %80 = load i64, ptr %79, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #27
  store i64 %80, ptr %12, align 8
  %81 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 118, i32 noundef 8, ptr noundef nonnull %12, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #27
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %144

83:                                               ; preds = %78
  %84 = load ptr, ptr %61, align 4
  %85 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %84, i32 0, i32 1
  %86 = load ptr, ptr %85, align 4
  %87 = icmp eq ptr %86, null
  br i1 %87, label %103, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 7
  %90 = load i64, ptr %89, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #27
  store i64 %90, ptr %11, align 8
  %91 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 120, i32 noundef 8, ptr noundef nonnull %11, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #27
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %144

93:                                               ; preds = %88
  %94 = load ptr, ptr %61, align 4
  %95 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %94, i32 0, i32 1
  %96 = load ptr, ptr %95, align 4
  %97 = icmp eq ptr %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 8
  %100 = load i8, ptr %99, align 8, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %10) #27
  store i8 %100, ptr %10, align 1
  %101 = call i32 @nla_put(ptr noundef %0, i32 noundef 121, i32 noundef 1, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %10) #27
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %144

103:                                              ; preds = %98, %93, %83
  %104 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 5
  %105 = load ptr, ptr %104, align 8
  %106 = icmp eq ptr %105, null
  br i1 %106, label %123, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 11
  %109 = load i64, ptr %108, align 8
  %110 = trunc i64 %109 to i32
  %111 = call i32 @jiffies_to_msecs(i32 noundef %110) #27
  %112 = zext i32 %111 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #27
  store i64 %112, ptr %9, align 8
  %113 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 119, i32 noundef 8, ptr noundef nonnull %9, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #27
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %144

115:                                              ; preds = %107
  %116 = load ptr, ptr %104, align 8
  %117 = icmp eq ptr %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 12
  %120 = load i64, ptr %119, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #27
  store i64 %120, ptr %8, align 8
  %121 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 137, i32 noundef 8, ptr noundef nonnull %8, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #27
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %144

123:                                              ; preds = %118, %115, %103
  %124 = load ptr, ptr %61, align 4
  %125 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %124, i32 0, i32 2
  %126 = load ptr, ptr %125, align 4
  %127 = icmp eq ptr %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.devlink_health_reporter, ptr %1, i32 0, i32 9
  %130 = load i8, ptr %129, align 1, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #27
  store i8 %130, ptr %7, align 1
  %131 = call i32 @nla_put(ptr noundef %0, i32 noundef 141, i32 noundef 1, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #27
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %144

133:                                              ; preds = %128, %123
  %134 = load ptr, ptr %54, align 8
  %135 = ptrtoint ptr %134 to i32
  %136 = ptrtoint ptr %55 to i32
  %137 = sub i32 %135, %136
  %138 = trunc i32 %137 to i16
  store i16 %138, ptr %55, align 2
  %139 = getelementptr i8, ptr %19, i32 -20
  %140 = load ptr, ptr %54, align 8
  %141 = ptrtoint ptr %140 to i32
  %142 = ptrtoint ptr %139 to i32
  %143 = sub i32 %141, %142
  store i32 %143, ptr %139, align 4
  br label %164

144:                                              ; preds = %128, %118, %107, %98, %88, %78, %73, %68, %60
  %145 = load ptr, ptr %54, align 8
  %146 = ptrtoint ptr %145 to i32
  %147 = ptrtoint ptr %55 to i32
  %148 = sub i32 %146, %147
  %149 = trunc i32 %148 to i16
  store i16 %149, ptr %55, align 2
  br label %150

150:                                              ; preds = %144, %53, %48, %38, %21
  %151 = getelementptr i8, ptr %19, i32 -20
  %152 = icmp eq ptr %151, null
  br i1 %152, label %164, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %155 = load ptr, ptr %154, align 4
  %156 = icmp ugt ptr %155, %151
  br i1 %156, label %157, label %159, !prof !11

157:                                              ; preds = %153
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %158 = load ptr, ptr %154, align 4
  br label %159

159:                                              ; preds = %157, %153
  %160 = phi ptr [ %158, %157 ], [ %155, %153 ]
  %161 = ptrtoint ptr %151 to i32
  %162 = ptrtoint ptr %160 to i32
  %163 = sub i32 %161, %162
  call void @skb_trim(ptr noundef %0, i32 noundef %163) #27
  br label %164

164:                                              ; preds = %159, %150, %133, %6
  %165 = phi i32 [ 0, %133 ], [ -90, %6 ], [ -90, %150 ], [ -90, %159 ]
  ret i32 %165
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jiffies_to_msecs(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_pre_doit(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, ptr nocapture noundef %2) #0 {
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  %4 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 5
  %5 = load ptr, ptr %4, align 4
  %6 = tail call fastcc ptr @devlink_get_from_attrs(ptr noundef %5)
  %7 = icmp ugt ptr %6, inttoptr (i32 -4096 to ptr)
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  tail call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %9 = ptrtoint ptr %6 to i32
  br label %191

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.genl_ops, ptr %0, i32 0, i32 7
  %12 = load i8, ptr %11, align 1
  %13 = and i8 %12, 16
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %16) #27
  br label %17

17:                                               ; preds = %15, %10
  %18 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 7
  store ptr %6, ptr %18, align 4
  %19 = load i8, ptr %11, align 1
  %20 = zext i8 %19 to i32
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %46, label %23

23:                                               ; preds = %17
  %24 = load ptr, ptr %4, align 4
  %25 = getelementptr ptr, ptr %24, i32 3
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %173, label %28

28:                                               ; preds = %23
  %29 = getelementptr i8, ptr %26, i32 4
  %30 = load i32, ptr %29, align 4
  %31 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 1
  br label %32

32:                                               ; preds = %36, %28
  %33 = phi ptr [ %31, %28 ], [ %34, %36 ]
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, %31
  br i1 %35, label %173, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.devlink_port, ptr %34, i32 0, i32 4
  %38 = load i32, ptr %37, align 4
  %39 = icmp eq i32 %38, %30
  br i1 %39, label %40, label %32

40:                                               ; preds = %36
  %41 = icmp eq ptr %34, null
  br i1 %41, label %173, label %42

42:                                               ; preds = %40
  %43 = icmp ugt ptr %34, inttoptr (i32 -4096 to ptr)
  br i1 %43, label %173, label %44

44:                                               ; preds = %42
  %45 = getelementptr %struct.genl_info, ptr %2, i32 0, i32 7, i32 1
  store ptr %34, ptr %45, align 4
  br label %191

46:                                               ; preds = %17
  %47 = and i32 %20, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %46
  %50 = load ptr, ptr %4, align 4
  %51 = getelementptr ptr, ptr %50, i32 3
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %191, label %54

54:                                               ; preds = %49
  %55 = getelementptr i8, ptr %52, i32 4
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 1
  br label %58

58:                                               ; preds = %62, %54
  %59 = phi ptr [ %57, %54 ], [ %60, %62 ]
  %60 = load ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, %57
  br i1 %61, label %191, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.devlink_port, ptr %60, i32 0, i32 4
  %64 = load i32, ptr %63, align 4
  %65 = icmp eq i32 %64, %56
  br i1 %65, label %66, label %58

66:                                               ; preds = %62
  %67 = icmp eq ptr %60, null
  %68 = icmp ugt ptr %60, inttoptr (i32 -4096 to ptr)
  %69 = or i1 %67, %68
  br i1 %69, label %191, label %70

70:                                               ; preds = %66
  %71 = getelementptr %struct.genl_info, ptr %2, i32 0, i32 7, i32 1
  store ptr %60, ptr %71, align 4
  br label %191

72:                                               ; preds = %46
  %73 = and i32 %20, 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %136, label %75

75:                                               ; preds = %72
  %76 = load ptr, ptr %4, align 4
  %77 = getelementptr ptr, ptr %76, i32 3
  %78 = load ptr, ptr %77, align 4
  %79 = icmp eq ptr %78, null
  br i1 %79, label %100, label %80

80:                                               ; preds = %75
  %81 = getelementptr i8, ptr %78, i32 4
  %82 = load i32, ptr %81, align 4
  %83 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 1
  br label %84

84:                                               ; preds = %88, %80
  %85 = phi ptr [ %83, %80 ], [ %86, %88 ]
  %86 = load ptr, ptr %85, align 4
  %87 = icmp eq ptr %86, %83
  br i1 %87, label %173, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.devlink_port, ptr %86, i32 0, i32 4
  %90 = load i32, ptr %89, align 4
  %91 = icmp eq i32 %90, %82
  br i1 %91, label %92, label %84

92:                                               ; preds = %88
  %93 = icmp eq ptr %86, null
  br i1 %93, label %173, label %94

94:                                               ; preds = %92
  %95 = icmp ugt ptr %86, inttoptr (i32 -4096 to ptr)
  br i1 %95, label %131, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %struct.devlink_port, ptr %86, i32 0, i32 14
  %98 = load ptr, ptr %97, align 4
  %99 = icmp eq ptr %98, null
  br i1 %99, label %173, label %131

100:                                              ; preds = %75
  %101 = getelementptr ptr, ptr %76, i32 168
  %102 = load ptr, ptr %101, align 4
  %103 = icmp eq ptr %102, null
  br i1 %103, label %173, label %104

104:                                              ; preds = %100
  %105 = getelementptr i8, ptr %102, i32 4
  %106 = tail call i32 @strlen(ptr noundef %105) #27
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %173, label %108

108:                                              ; preds = %104
  %109 = tail call i32 @strspn(ptr noundef %105, ptr noundef nonnull @.str.49) #27
  %110 = icmp eq i32 %109, %106
  br i1 %110, label %173, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 2
  %113 = load ptr, ptr %112, align 4
  %114 = icmp eq ptr %113, %112
  br i1 %114, label %128, label %115

115:                                              ; preds = %125, %111
  %116 = phi ptr [ %126, %125 ], [ %113, %111 ]
  %117 = getelementptr inbounds %struct.devlink_rate, ptr %116, i32 0, i32 1
  %118 = load i32, ptr %117, align 8
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %125

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.devlink_rate, ptr %116, i32 0, i32 7
  %122 = load ptr, ptr %121, align 4
  %123 = tail call i32 @strcmp(ptr noundef %105, ptr noundef %122) #27
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %120, %115
  %126 = load ptr, ptr %116, align 4
  %127 = icmp eq ptr %126, %112
  br i1 %127, label %128, label %115

128:                                              ; preds = %125, %120, %111
  %129 = phi ptr [ %112, %111 ], [ %112, %125 ], [ %116, %120 ]
  %130 = phi ptr [ inttoptr (i32 -19 to ptr), %111 ], [ inttoptr (i32 -19 to ptr), %125 ], [ %116, %120 ]
  store ptr %129, ptr @devlink_rate_node_get_by_name.devlink_rate, align 4
  br label %131

131:                                              ; preds = %128, %96, %94
  %132 = phi ptr [ %86, %94 ], [ %98, %96 ], [ %130, %128 ]
  %133 = icmp ugt ptr %132, inttoptr (i32 -4096 to ptr)
  br i1 %133, label %173, label %134

134:                                              ; preds = %131
  %135 = getelementptr %struct.genl_info, ptr %2, i32 0, i32 7, i32 1
  store ptr %132, ptr %135, align 4
  br label %191

136:                                              ; preds = %72
  %137 = and i32 %20, 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %191, label %139

139:                                              ; preds = %136
  %140 = load ptr, ptr %4, align 4
  %141 = getelementptr ptr, ptr %140, i32 168
  %142 = load ptr, ptr %141, align 4
  %143 = icmp eq ptr %142, null
  br i1 %143, label %173, label %144

144:                                              ; preds = %139
  %145 = getelementptr i8, ptr %142, i32 4
  %146 = tail call i32 @strlen(ptr noundef %145) #27
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %173, label %148

148:                                              ; preds = %144
  %149 = tail call i32 @strspn(ptr noundef %145, ptr noundef nonnull @.str.49) #27
  %150 = icmp eq i32 %149, %146
  br i1 %150, label %173, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 2
  %153 = load ptr, ptr %152, align 4
  %154 = icmp eq ptr %153, %152
  br i1 %154, label %168, label %155

155:                                              ; preds = %165, %151
  %156 = phi ptr [ %166, %165 ], [ %153, %151 ]
  %157 = getelementptr inbounds %struct.devlink_rate, ptr %156, i32 0, i32 1
  %158 = load i32, ptr %157, align 8
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %165

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.devlink_rate, ptr %156, i32 0, i32 7
  %162 = load ptr, ptr %161, align 4
  %163 = tail call i32 @strcmp(ptr noundef %145, ptr noundef %162) #27
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %160, %155
  %166 = load ptr, ptr %156, align 4
  %167 = icmp eq ptr %166, %152
  br i1 %167, label %168, label %155

168:                                              ; preds = %165, %151
  store ptr %152, ptr @devlink_rate_node_get_by_name.devlink_rate, align 4
  br label %173

169:                                              ; preds = %160
  store ptr %156, ptr @devlink_rate_node_get_by_name.devlink_rate, align 4
  %170 = icmp ugt ptr %156, inttoptr (i32 -4096 to ptr)
  br i1 %170, label %173, label %171

171:                                              ; preds = %169
  %172 = getelementptr %struct.genl_info, ptr %2, i32 0, i32 7, i32 1
  store ptr %156, ptr %172, align 4
  br label %191

173:                                              ; preds = %169, %168, %148, %144, %139, %131, %108, %104, %100, %96, %92, %84, %42, %40, %32, %23
  %174 = phi ptr [ %34, %42 ], [ inttoptr (i32 -22 to ptr), %23 ], [ inttoptr (i32 -19 to ptr), %40 ], [ %132, %131 ], [ inttoptr (i32 -22 to ptr), %100 ], [ inttoptr (i32 -22 to ptr), %104 ], [ inttoptr (i32 -22 to ptr), %108 ], [ inttoptr (i32 -19 to ptr), %92 ], [ inttoptr (i32 -19 to ptr), %96 ], [ %156, %169 ], [ inttoptr (i32 -19 to ptr), %168 ], [ inttoptr (i32 -22 to ptr), %139 ], [ inttoptr (i32 -22 to ptr), %148 ], [ inttoptr (i32 -22 to ptr), %144 ], [ inttoptr (i32 -19 to ptr), %84 ], [ inttoptr (i32 -19 to ptr), %32 ]
  %175 = ptrtoint ptr %174 to i32
  %176 = and i8 %19, 16
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 20
  tail call void @mutex_unlock(ptr noundef %179) #27
  br label %180

180:                                              ; preds = %178, %173
  %181 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %181) #27, !srcloc !14
  %182 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %181, ptr %181, i32 1, ptr elementtype(i32) %181) #27, !srcloc !15
  %183 = extractvalue { i32, i32, i32 } %182, 0
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %188, label %185

185:                                              ; preds = %180
  %186 = icmp sgt i32 %183, 0
  br i1 %186, label %190, label %187, !prof !10

187:                                              ; preds = %185
  tail call void @refcount_warn_saturate(ptr noundef %181, i32 noundef 3) #27
  br label %190

188:                                              ; preds = %180
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %189 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 23
  tail call void @complete(ptr noundef %189) #27
  br label %190

190:                                              ; preds = %188, %187, %185
  tail call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %191

191:                                              ; preds = %190, %171, %136, %134, %70, %66, %58, %49, %44, %8
  %192 = phi i32 [ %9, %8 ], [ %175, %190 ], [ 0, %70 ], [ 0, %136 ], [ 0, %44 ], [ 0, %134 ], [ 0, %171 ], [ 0, %49 ], [ 0, %66 ], [ 0, %58 ]
  ret i32 %192
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @devlink_nl_post_doit(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2) #0 {
  %4 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 7
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.genl_ops, ptr %0, i32 0, i32 7
  %7 = load i8, ptr %6, align 1
  %8 = and i8 %7, 16
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.devlink, ptr %5, i32 0, i32 20
  tail call void @mutex_unlock(ptr noundef %11) #27
  br label %12

12:                                               ; preds = %10, %3
  %13 = getelementptr inbounds %struct.devlink, ptr %5, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %15 = extractvalue { i32, i32, i32 } %14, 0
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = icmp sgt i32 %15, 0
  br i1 %18, label %22, label %19, !prof !10

19:                                               ; preds = %17
  tail call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %22

20:                                               ; preds = %12
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %21 = getelementptr inbounds %struct.devlink, ptr %5, i32 0, i32 23
  tail call void @complete(ptr noundef %21) #27
  br label %22

22:                                               ; preds = %20, %19, %17
  tail call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @devlink_get_from_attrs(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #27
  %3 = getelementptr ptr, ptr %0, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %62, label %6

6:                                                ; preds = %1
  %7 = getelementptr ptr, ptr %0, i32 2
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %62, label %10

10:                                               ; preds = %6
  %11 = getelementptr i8, ptr %4, i32 4
  %12 = getelementptr i8, ptr %8, i32 4
  store i32 0, ptr %2, align 4
  %13 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 1) #27
  %14 = icmp eq ptr %13, null
  br i1 %14, label %61, label %15

15:                                               ; preds = %58, %10
  %16 = phi ptr [ %59, %58 ], [ %13, %10 ]
  %17 = getelementptr inbounds %struct.devlink, ptr %16, i32 0, i32 18
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 5
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = call i32 @strcmp(ptr noundef %21, ptr noundef %11)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %58

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 3
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = load ptr, ptr %18, align 4
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi ptr [ %29, %28 ], [ %26, %24 ]
  %32 = call i32 @strcmp(ptr noundef %31, ptr noundef %12)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %58

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.devlink, ptr %16, i32 0, i32 22
  %36 = load volatile i32, ptr %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %48, %34
  %39 = phi i32 [ %46, %48 ], [ %36, %34 ]
  %40 = add i32 %39, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %35) #27, !srcloc !14
  br label %41

41:                                               ; preds = %41, %38
  %42 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %35, ptr %35, i32 %39, i32 %40, ptr elementtype(i32) %35) #27, !srcloc !17
  %43 = extractvalue { i32, i32 } %42, 0
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %41

45:                                               ; preds = %41
  %46 = extractvalue { i32, i32 } %42, 1
  %47 = icmp eq i32 %46, %39
  br i1 %47, label %50, label %48, !prof !10

48:                                               ; preds = %45
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %50, label %38

50:                                               ; preds = %48, %45, %34
  %51 = phi i32 [ 0, %34 ], [ %39, %45 ], [ 0, %48 ]
  %52 = add i32 %51, 1
  %53 = or i32 %52, %51
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %56, label %55, !prof !10

55:                                               ; preds = %50
  call void @refcount_warn_saturate(ptr noundef %35, i32 noundef 0) #27
  br label %56

56:                                               ; preds = %55, %50
  %57 = icmp eq i32 %51, 0
  br i1 %57, label %61, label %62

58:                                               ; preds = %30, %15
  %59 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 1) #27
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %15

61:                                               ; preds = %58, %56, %10
  br label %62

62:                                               ; preds = %61, %56, %6, %1
  %63 = phi ptr [ %16, %56 ], [ inttoptr (i32 -19 to ptr), %61 ], [ inttoptr (i32 -22 to ptr), %6 ], [ inttoptr (i32 -22 to ptr), %1 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #27
  ret ptr %63
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_find(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_find_after(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strspn(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %6 = icmp eq ptr %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %9 = load i32, ptr %8, align 4
  %10 = load i32, ptr %1, align 4
  %11 = tail call fastcc i32 @devlink_nl_fill(ptr noundef nonnull %5, ptr noundef %4, i32 noundef 3, i32 noundef %9, i32 noundef %10, i32 noundef 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @kfree_skb_reason(ptr noundef nonnull %5, i32 noundef 0) #27
  br label %19

14:                                               ; preds = %7
  %15 = load i32, ptr %8, align 4
  %16 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %17 = tail call i32 @netlink_unicast(ptr noundef %16, ptr noundef nonnull %5, i32 noundef %15, i32 noundef 64) #27
  %18 = tail call i32 @llvm.smin.i32(i32 %17, i32 0) #27
  br label %19

19:                                               ; preds = %14, %13, %2
  %20 = phi i32 [ %11, %13 ], [ %18, %14 ], [ -12, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %72, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %10

10:                                               ; preds = %68, %8
  %11 = phi i32 [ 0, %8 ], [ %69, %68 ]
  %12 = phi ptr [ %6, %8 ], [ %70, %68 ]
  %13 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 22
  %14 = load volatile i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %26, %10
  %17 = phi i32 [ %24, %26 ], [ %14, %10 ]
  %18 = add i32 %17, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  br label %19

19:                                               ; preds = %19, %16
  %20 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %17, i32 %18, ptr elementtype(i32) %13) #27, !srcloc !17
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %19

23:                                               ; preds = %19
  %24 = extractvalue { i32, i32 } %20, 1
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %28, label %26, !prof !10

26:                                               ; preds = %23
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %23, %10
  %29 = phi i32 [ 0, %10 ], [ %17, %23 ], [ 0, %26 ]
  %30 = add i32 %29, 1
  %31 = or i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33, !prof !10

33:                                               ; preds = %28
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 0) #27
  br label %34

34:                                               ; preds = %33, %28
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %68, label %36

36:                                               ; preds = %34
  %37 = icmp slt i32 %11, %5
  br i1 %37, label %38, label %48

38:                                               ; preds = %36
  %39 = add nsw i32 %11, 1
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %40 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %41 = extractvalue { i32, i32, i32 } %40, 0
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = icmp sgt i32 %41, 0
  br i1 %44, label %68, label %45, !prof !10

45:                                               ; preds = %43
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %68

46:                                               ; preds = %38
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %47 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %47) #27
  br label %68

48:                                               ; preds = %36
  %49 = load ptr, ptr %1, align 4
  %50 = getelementptr inbounds %struct.sk_buff, ptr %49, i32 0, i32 3, i32 12
  %51 = load i32, ptr %50, align 4
  %52 = load ptr, ptr %9, align 4
  %53 = getelementptr inbounds %struct.nlmsghdr, ptr %52, i32 0, i32 3
  %54 = load i32, ptr %53, align 4
  %55 = call fastcc i32 @devlink_nl_fill(ptr noundef %0, ptr noundef nonnull %12, i32 noundef 3, i32 noundef %51, i32 noundef %54, i32 noundef 2)
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %56 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %57 = extractvalue { i32, i32, i32 } %56, 0
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %62, label %59

59:                                               ; preds = %48
  %60 = icmp sgt i32 %57, 0
  br i1 %60, label %64, label %61, !prof !10

61:                                               ; preds = %59
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %64

62:                                               ; preds = %48
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %63 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %63) #27
  br label %64

64:                                               ; preds = %62, %61, %59
  %65 = icmp eq i32 %55, 0
  br i1 %65, label %66, label %72

66:                                               ; preds = %64
  %67 = add i32 %11, 1
  br label %68

68:                                               ; preds = %66, %46, %45, %43, %34
  %69 = phi i32 [ %67, %66 ], [ %11, %34 ], [ %39, %43 ], [ %39, %45 ], [ %39, %46 ]
  %70 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %10

72:                                               ; preds = %68, %64, %2
  %73 = phi i32 [ 0, %2 ], [ %69, %68 ], [ %11, %64 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %73, ptr %4, align 4
  %74 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %75 = load i32, ptr %74, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %75
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %6 = icmp eq ptr %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %9 = load i32, ptr %8, align 4
  %10 = load i32, ptr %1, align 4
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %12 = load ptr, ptr %11, align 4
  %13 = tail call fastcc i32 @devlink_nl_port_fill(ptr noundef nonnull %5, ptr noundef %4, i32 noundef 7, i32 noundef %9, i32 noundef %10, i32 noundef 0, ptr noundef %12)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  tail call void @kfree_skb_reason(ptr noundef nonnull %5, i32 noundef 0) #27
  br label %21

16:                                               ; preds = %7
  %17 = load i32, ptr %8, align 4
  %18 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %19 = tail call i32 @netlink_unicast(ptr noundef %18, ptr noundef nonnull %5, i32 noundef %17, i32 noundef 64) #27
  %20 = tail call i32 @llvm.smin.i32(i32 %19, i32 0) #27
  br label %21

21:                                               ; preds = %16, %15, %2
  %22 = phi i32 [ %13, %15 ], [ %20, %16 ], [ -12, %2 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %83, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  %10 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 6
  br label %11

11:                                               ; preds = %79, %8
  %12 = phi ptr [ %6, %8 ], [ %81, %79 ]
  %13 = phi i32 [ 0, %8 ], [ %80, %79 ]
  %14 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 22
  %15 = load volatile i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %27, %11
  %18 = phi i32 [ %25, %27 ], [ %15, %11 ]
  %19 = add i32 %18, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  br label %20

20:                                               ; preds = %20, %17
  %21 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 %18, i32 %19, ptr elementtype(i32) %14) #27, !srcloc !17
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %29, label %27, !prof !10

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %27, %24, %11
  %30 = phi i32 [ 0, %11 ], [ %18, %24 ], [ 0, %27 ]
  %31 = add i32 %30, 1
  %32 = or i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34, !prof !10

34:                                               ; preds = %29
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 0) #27
  br label %35

35:                                               ; preds = %34, %29
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %79, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 20
  call void @mutex_lock(ptr noundef %38) #27
  %39 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, %39
  br i1 %41, label %69, label %42

42:                                               ; preds = %65, %37
  %43 = phi ptr [ %67, %65 ], [ %40, %37 ]
  %44 = phi i32 [ %66, %65 ], [ %13, %37 ]
  %45 = icmp slt i32 %44, %5
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load ptr, ptr %1, align 4
  %48 = getelementptr inbounds %struct.sk_buff, ptr %47, i32 0, i32 3, i32 12
  %49 = load i32, ptr %48, align 4
  %50 = load ptr, ptr %9, align 4
  %51 = getelementptr inbounds %struct.nlmsghdr, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 4
  %53 = load ptr, ptr %10, align 4
  %54 = call fastcc i32 @devlink_nl_port_fill(ptr noundef %0, ptr noundef %43, i32 noundef 3, i32 noundef %49, i32 noundef %52, i32 noundef 2, ptr noundef %53)
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %46
  call void @mutex_unlock(ptr noundef %38) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %57 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %58 = extractvalue { i32, i32, i32 } %57, 0
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = icmp sgt i32 %58, 0
  br i1 %61, label %83, label %62, !prof !10

62:                                               ; preds = %60
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %83

63:                                               ; preds = %56
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %64 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %64) #27
  br label %83

65:                                               ; preds = %46, %42
  %66 = add i32 %44, 1
  %67 = load ptr, ptr %43, align 4
  %68 = icmp eq ptr %67, %39
  br i1 %68, label %69, label %42

69:                                               ; preds = %65, %37
  %70 = phi i32 [ %13, %37 ], [ %66, %65 ]
  call void @mutex_unlock(ptr noundef %38) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %71 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %72 = extractvalue { i32, i32, i32 } %71, 0
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = icmp sgt i32 %72, 0
  br i1 %75, label %79, label %76, !prof !10

76:                                               ; preds = %74
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %79

77:                                               ; preds = %69
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %78 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %78) #27
  br label %79

79:                                               ; preds = %77, %76, %74, %35
  %80 = phi i32 [ %13, %35 ], [ %70, %74 ], [ %70, %76 ], [ %70, %77 ]
  %81 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %11

83:                                               ; preds = %79, %63, %62, %60, %2
  %84 = phi i32 [ %44, %60 ], [ %44, %62 ], [ %44, %63 ], [ 0, %2 ], [ %80, %79 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %84, ptr %4, align 4
  %85 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %86 = load i32, ptr %85, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %86
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca [4 x ptr], align 4
  %4 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr ptr, ptr %7, i32 4
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %2
  %12 = getelementptr i8, ptr %9, i32 4
  %13 = load i16, ptr %12, align 2
  %14 = zext i16 %13 to i32
  %15 = getelementptr inbounds %struct.devlink_port, ptr %5, i32 0, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.devlink, ptr %16, i32 0, i32 14
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.devlink_ops, ptr %18, i32 0, i32 5
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %130, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.devlink_port, ptr %5, i32 0, i32 6
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq i32 %24, %14
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = tail call i32 %20(ptr noundef %5, i32 noundef %14) #27
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %130

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.devlink_port, ptr %5, i32 0, i32 7
  store i32 %14, ptr %30, align 4
  tail call fastcc void @devlink_port_notify(ptr noundef %5, i32 noundef 7) #27
  %31 = load ptr, ptr %6, align 4
  br label %32

32:                                               ; preds = %29, %22, %2
  %33 = phi ptr [ %7, %22 ], [ %31, %29 ], [ %7, %2 ]
  %34 = getelementptr ptr, ptr %33, i32 145
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %130, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %39 = load ptr, ptr %38, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %3, i8 0, i32 16, i1 false) #27, !annotation !9
  %40 = getelementptr inbounds %struct.nlattr, ptr %35, i32 0, i32 1
  %41 = load i16, ptr %40, align 2
  %42 = icmp sgt i16 %41, -1
  br i1 %42, label %43, label %49

43:                                               ; preds = %37
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @nla_parse_nested.__msg) #27
  %44 = icmp eq ptr %39, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_function_set.__msg) #27
  br label %127

46:                                               ; preds = %43
  store ptr @nla_parse_nested.__msg, ptr %39, align 4
  %47 = getelementptr inbounds %struct.netlink_ext_ack, ptr %39, i32 0, i32 1
  store ptr %35, ptr %47, align 4
  %48 = getelementptr inbounds %struct.netlink_ext_ack, ptr %39, i32 0, i32 2
  store ptr null, ptr %48, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_function_set.__msg) #27
  br label %58

49:                                               ; preds = %37
  %50 = getelementptr i8, ptr %35, i32 4
  %51 = load i16, ptr %35, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %52, -4
  %54 = call i32 @__nla_parse(ptr noundef nonnull %3, i32 noundef 3, ptr noundef %50, i32 noundef %53, ptr noundef nonnull @devlink_function_nl_policy, i32 noundef 31, ptr noundef %39) #27
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %49
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_function_set.__msg) #27
  %57 = icmp eq ptr %39, null
  br i1 %57, label %127, label %58

58:                                               ; preds = %56, %46
  %59 = phi i32 [ -22, %46 ], [ %54, %56 ]
  store ptr @devlink_port_function_set.__msg, ptr %39, align 4
  br label %127

60:                                               ; preds = %49
  %61 = getelementptr inbounds [4 x ptr], ptr %3, i32 0, i32 1
  %62 = load ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, null
  br i1 %63, label %103, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.devlink_port, ptr %5, i32 0, i32 3
  %66 = load ptr, ptr %65, align 4
  %67 = getelementptr inbounds %struct.devlink, ptr %66, i32 0, i32 14
  %68 = load ptr, ptr %67, align 4
  %69 = getelementptr i8, ptr %62, i32 4
  %70 = load i16, ptr %62, align 2
  %71 = zext i16 %70 to i32
  %72 = add nsw i32 %71, -4
  %73 = icmp ugt i16 %70, 36
  br i1 %73, label %74, label %77

74:                                               ; preds = %64
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_function_hw_addr_set.__msg) #27
  %75 = icmp eq ptr %39, null
  br i1 %75, label %127, label %76

76:                                               ; preds = %74
  store ptr @devlink_port_function_hw_addr_set.__msg, ptr %39, align 4
  br label %127

77:                                               ; preds = %64
  %78 = getelementptr inbounds %struct.devlink_port, ptr %5, i32 0, i32 6
  %79 = load i32, ptr %78, align 4
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %81, label %93

81:                                               ; preds = %77
  %82 = icmp eq i32 %72, 6
  br i1 %82, label %86, label %83

83:                                               ; preds = %81
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_function_hw_addr_set.__msg.53) #27
  %84 = icmp eq ptr %39, null
  br i1 %84, label %127, label %85

85:                                               ; preds = %83
  store ptr @devlink_port_function_hw_addr_set.__msg.53, ptr %39, align 4
  br label %127

86:                                               ; preds = %81
  %87 = load i32, ptr %69, align 4
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_function_hw_addr_set.__msg.54) #27
  %91 = icmp eq ptr %39, null
  br i1 %91, label %127, label %92

92:                                               ; preds = %90
  store ptr @devlink_port_function_hw_addr_set.__msg.54, ptr %39, align 4
  br label %127

93:                                               ; preds = %86, %77
  %94 = getelementptr inbounds %struct.devlink_ops, ptr %68, i32 0, i32 38
  %95 = load ptr, ptr %94, align 4
  %96 = icmp eq ptr %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_function_hw_addr_set.__msg.55) #27
  %98 = icmp eq ptr %39, null
  br i1 %98, label %127, label %99

99:                                               ; preds = %97
  store ptr @devlink_port_function_hw_addr_set.__msg.55, ptr %39, align 4
  br label %127

100:                                              ; preds = %93
  %101 = call i32 %95(ptr noundef %5, ptr noundef %69, i32 noundef %72, ptr noundef %39) #27
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %127

103:                                              ; preds = %100, %60
  %104 = phi i32 [ 0, %100 ], [ %54, %60 ]
  %105 = getelementptr inbounds [4 x ptr], ptr %3, i32 0, i32 2
  %106 = load ptr, ptr %105, align 4
  %107 = icmp eq ptr %106, null
  br i1 %107, label %124, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.devlink_port, ptr %5, i32 0, i32 3
  %110 = load ptr, ptr %109, align 4
  %111 = getelementptr inbounds %struct.devlink, ptr %110, i32 0, i32 14
  %112 = load ptr, ptr %111, align 4
  %113 = getelementptr inbounds %struct.devlink_ops, ptr %112, i32 0, i32 42
  %114 = load ptr, ptr %113, align 4
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %119

116:                                              ; preds = %108
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_fn_state_set.__msg) #27
  %117 = icmp eq ptr %39, null
  br i1 %117, label %127, label %118

118:                                              ; preds = %116
  store ptr @devlink_port_fn_state_set.__msg, ptr %39, align 4
  br label %127

119:                                              ; preds = %108
  %120 = getelementptr i8, ptr %106, i32 4
  %121 = load i8, ptr %120, align 1
  %122 = zext i8 %121 to i32
  %123 = call i32 %114(ptr noundef %5, i32 noundef %122, ptr noundef %39) #27
  br label %124

124:                                              ; preds = %119, %103
  %125 = phi i32 [ %104, %103 ], [ %123, %119 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %124, %118, %116, %100, %99, %97, %92, %90, %85, %83, %76, %74, %58, %56, %45
  %128 = phi i32 [ -95, %116 ], [ -95, %118 ], [ -22, %76 ], [ -22, %74 ], [ -22, %85 ], [ -22, %83 ], [ -22, %92 ], [ -22, %90 ], [ -95, %99 ], [ -95, %97 ], [ -22, %45 ], [ %125, %124 ], [ %101, %100 ], [ %54, %56 ], [ %59, %58 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #27
  br label %130

129:                                              ; preds = %124
  call fastcc void @devlink_port_notify(ptr noundef %5, i32 noundef 7) #27
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #27
  br label %130

130:                                              ; preds = %129, %127, %32, %26, %11
  %131 = phi i32 [ -95, %11 ], [ %27, %26 ], [ %128, %127 ], [ 0, %129 ], [ 0, %32 ]
  ret i32 %131
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_rate_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %6 = icmp eq ptr %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %9 = load i32, ptr %8, align 4
  %10 = load i32, ptr %1, align 4
  %11 = tail call fastcc i32 @devlink_nl_rate_fill(ptr noundef nonnull %5, ptr noundef %4, i32 noundef 76, i32 noundef %9, i32 noundef %10, i32 noundef 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @kfree_skb_reason(ptr noundef nonnull %5, i32 noundef 0) #27
  br label %19

14:                                               ; preds = %7
  %15 = load i32, ptr %8, align 4
  %16 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %17 = tail call i32 @netlink_unicast(ptr noundef %16, ptr noundef nonnull %5, i32 noundef %15, i32 noundef 64) #27
  %18 = tail call i32 @llvm.smin.i32(i32 %17, i32 0) #27
  br label %19

19:                                               ; preds = %14, %13, %2
  %20 = phi i32 [ %11, %13 ], [ %18, %14 ], [ -12, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_rate_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %81, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %10

10:                                               ; preds = %77, %8
  %11 = phi ptr [ %6, %8 ], [ %79, %77 ]
  %12 = phi i32 [ 0, %8 ], [ %78, %77 ]
  %13 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 22
  %14 = load volatile i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %26, %10
  %17 = phi i32 [ %24, %26 ], [ %14, %10 ]
  %18 = add i32 %17, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  br label %19

19:                                               ; preds = %19, %16
  %20 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %17, i32 %18, ptr elementtype(i32) %13) #27, !srcloc !17
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %19

23:                                               ; preds = %19
  %24 = extractvalue { i32, i32 } %20, 1
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %28, label %26, !prof !10

26:                                               ; preds = %23
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %23, %10
  %29 = phi i32 [ 0, %10 ], [ %17, %23 ], [ 0, %26 ]
  %30 = add i32 %29, 1
  %31 = or i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33, !prof !10

33:                                               ; preds = %28
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 0) #27
  br label %34

34:                                               ; preds = %33, %28
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %77, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 20
  call void @mutex_lock(ptr noundef %37) #27
  %38 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 2
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %38
  br i1 %40, label %67, label %41

41:                                               ; preds = %63, %36
  %42 = phi ptr [ %65, %63 ], [ %39, %36 ]
  %43 = phi i32 [ %64, %63 ], [ %12, %36 ]
  %44 = icmp slt i32 %43, %5
  br i1 %44, label %63, label %45

45:                                               ; preds = %41
  %46 = load ptr, ptr %1, align 4
  %47 = getelementptr inbounds %struct.sk_buff, ptr %46, i32 0, i32 3, i32 12
  %48 = load i32, ptr %47, align 4
  %49 = load ptr, ptr %9, align 4
  %50 = getelementptr inbounds %struct.nlmsghdr, ptr %49, i32 0, i32 3
  %51 = load i32, ptr %50, align 4
  %52 = call fastcc i32 @devlink_nl_rate_fill(ptr noundef %0, ptr noundef %42, i32 noundef 76, i32 noundef %48, i32 noundef %51, i32 noundef 2)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %45
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %55 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %56 = extractvalue { i32, i32, i32 } %55, 0
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = icmp sgt i32 %56, 0
  br i1 %59, label %82, label %60, !prof !10

60:                                               ; preds = %58
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %82

61:                                               ; preds = %54
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %62 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %62) #27
  br label %82

63:                                               ; preds = %45, %41
  %64 = add i32 %43, 1
  %65 = load ptr, ptr %42, align 4
  %66 = icmp eq ptr %65, %38
  br i1 %66, label %67, label %41

67:                                               ; preds = %63, %36
  %68 = phi i32 [ %12, %36 ], [ %64, %63 ]
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %69 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %70 = extractvalue { i32, i32, i32 } %69, 0
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = icmp sgt i32 %70, 0
  br i1 %73, label %77, label %74, !prof !10

74:                                               ; preds = %72
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %77

75:                                               ; preds = %67
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %76 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %76) #27
  br label %77

77:                                               ; preds = %75, %74, %72, %34
  %78 = phi i32 [ %12, %34 ], [ %68, %72 ], [ %68, %74 ], [ %68, %75 ]
  %79 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %10

81:                                               ; preds = %77, %2
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %87

82:                                               ; preds = %61, %60, %58
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %83 = icmp eq i32 %52, -90
  br i1 %83, label %84, label %87

84:                                               ; preds = %82
  store i32 %43, ptr %4, align 4
  %85 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %86 = load i32, ptr %85, align 8
  br label %87

87:                                               ; preds = %84, %82, %81
  %88 = phi i32 [ %86, %84 ], [ %52, %82 ], [ 0, %81 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %88
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_rate_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink_rate, ptr %4, i32 0, i32 2
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.devlink_rate, ptr %4, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = tail call fastcc zeroext i1 @devlink_rate_set_ops_supported(ptr noundef nonnull %8, ptr noundef %1, i32 noundef %12)
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = tail call fastcc i32 @devlink_nl_rate_set(ptr noundef %4, ptr noundef nonnull %8, ptr noundef %1)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call fastcc void @devlink_rate_notify(ptr noundef %4, i32 noundef 76)
  br label %18

18:                                               ; preds = %17, %14, %10, %2
  %19 = phi i32 [ -95, %10 ], [ -95, %2 ], [ 0, %17 ], [ %15, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_rate_new_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 47
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 48
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %12, %8, %2
  %17 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_rate_new_doit.__msg) #27
  %19 = icmp eq ptr %18, null
  br i1 %19, label %133, label %20

20:                                               ; preds = %16
  store ptr @devlink_nl_cmd_rate_new_doit.__msg, ptr %18, align 4
  br label %133

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr ptr, ptr %23, i32 166
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 45
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %33 = load ptr, ptr %32, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.58) #27
  %34 = icmp eq ptr %33, null
  br i1 %34, label %133, label %35

35:                                               ; preds = %31
  store ptr @devlink_rate_set_ops_supported.__msg.58, ptr %33, align 4
  br label %133

36:                                               ; preds = %27, %21
  %37 = getelementptr ptr, ptr %23, i32 167
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %49, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 46
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %49

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %46 = load ptr, ptr %45, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.59) #27
  %47 = icmp eq ptr %46, null
  br i1 %47, label %133, label %48

48:                                               ; preds = %44
  store ptr @devlink_rate_set_ops_supported.__msg.59, ptr %46, align 4
  br label %133

49:                                               ; preds = %40, %36
  %50 = getelementptr ptr, ptr %23, i32 169
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 50
  %55 = load ptr, ptr %54, align 4
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %59 = load ptr, ptr %58, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.60) #27
  %60 = icmp eq ptr %59, null
  br i1 %60, label %133, label %61

61:                                               ; preds = %57
  store ptr @devlink_rate_set_ops_supported.__msg.60, ptr %59, align 4
  br label %133

62:                                               ; preds = %53, %49
  %63 = getelementptr ptr, ptr %23, i32 168
  %64 = load ptr, ptr %63, align 4
  %65 = icmp eq ptr %64, null
  br i1 %65, label %133, label %66

66:                                               ; preds = %62
  %67 = getelementptr i8, ptr %64, i32 4
  %68 = tail call i32 @strlen(ptr noundef %67) #27
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %133, label %70

70:                                               ; preds = %66
  %71 = tail call i32 @strspn(ptr noundef %67, ptr noundef nonnull @.str.49) #27
  %72 = icmp eq i32 %71, %68
  br i1 %72, label %133, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 2
  %75 = load ptr, ptr %74, align 4
  %76 = icmp eq ptr %75, %74
  br i1 %76, label %90, label %77

77:                                               ; preds = %87, %73
  %78 = phi ptr [ %88, %87 ], [ %75, %73 ]
  %79 = getelementptr inbounds %struct.devlink_rate, ptr %78, i32 0, i32 1
  %80 = load i32, ptr %79, align 8
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %87

82:                                               ; preds = %77
  %83 = getelementptr inbounds %struct.devlink_rate, ptr %78, i32 0, i32 7
  %84 = load ptr, ptr %83, align 4
  %85 = tail call i32 @strcmp(ptr noundef %67, ptr noundef %84) #27
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %82, %77
  %88 = load ptr, ptr %78, align 4
  %89 = icmp eq ptr %88, %74
  br i1 %89, label %90, label %77

90:                                               ; preds = %87, %73
  store ptr %74, ptr @devlink_rate_node_get_by_name.devlink_rate, align 4
  br label %95

91:                                               ; preds = %82
  store ptr %78, ptr @devlink_rate_node_get_by_name.devlink_rate, align 4
  %92 = icmp ugt ptr %78, inttoptr (i32 -4096 to ptr)
  br i1 %92, label %93, label %133

93:                                               ; preds = %91
  %94 = icmp eq ptr %78, inttoptr (i32 -22 to ptr)
  br i1 %94, label %133, label %95

95:                                               ; preds = %93, %90
  %96 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %97 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %96, i32 noundef 3520, i32 noundef 56) #28
  %98 = icmp eq ptr %97, null
  br i1 %98, label %133, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.devlink_rate, ptr %97, i32 0, i32 2
  store ptr %4, ptr %100, align 4
  %101 = getelementptr inbounds %struct.devlink_rate, ptr %97, i32 0, i32 1
  store i32 1, ptr %101, align 8
  %102 = load ptr, ptr %22, align 4
  %103 = getelementptr ptr, ptr %102, i32 168
  %104 = load ptr, ptr %103, align 4
  %105 = tail call ptr @nla_strdup(ptr noundef %104, i32 noundef 3264) #27
  %106 = getelementptr inbounds %struct.devlink_rate, ptr %97, i32 0, i32 7
  store ptr %105, ptr %106, align 4
  %107 = icmp eq ptr %105, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %99
  %109 = load ptr, ptr %9, align 4
  %110 = getelementptr inbounds %struct.devlink_rate, ptr %97, i32 0, i32 3
  %111 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %112 = load ptr, ptr %111, align 4
  %113 = tail call i32 %109(ptr noundef nonnull %97, ptr noundef %110, ptr noundef %112) #27
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %128

115:                                              ; preds = %108
  %116 = tail call fastcc i32 @devlink_nl_rate_set(ptr noundef nonnull %97, ptr noundef nonnull %6, ptr noundef %1)
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.devlink_rate, ptr %97, i32 0, i32 7, i32 0, i32 1
  store volatile i32 1, ptr %119, align 8
  %120 = load ptr, ptr %74, align 4
  %121 = getelementptr inbounds %struct.list_head, ptr %120, i32 0, i32 1
  store ptr %97, ptr %121, align 4
  store ptr %120, ptr %97, align 8
  %122 = getelementptr inbounds %struct.list_head, ptr %97, i32 0, i32 1
  store ptr %74, ptr %122, align 4
  store volatile ptr %97, ptr %74, align 4
  tail call fastcc void @devlink_rate_notify(ptr noundef nonnull %97, i32 noundef 76)
  br label %133

123:                                              ; preds = %115
  %124 = load ptr, ptr %13, align 4
  %125 = load ptr, ptr %110, align 8
  %126 = load ptr, ptr %111, align 4
  %127 = tail call i32 %124(ptr noundef nonnull %97, ptr noundef %125, ptr noundef %126) #27
  br label %128

128:                                              ; preds = %123, %108
  %129 = phi i32 [ %113, %108 ], [ %116, %123 ]
  %130 = load ptr, ptr %106, align 4
  tail call void @kfree(ptr noundef %130) #27
  br label %131

131:                                              ; preds = %128, %99
  %132 = phi i32 [ %129, %128 ], [ -12, %99 ]
  tail call void @kfree(ptr noundef nonnull %97) #27
  br label %133

133:                                              ; preds = %131, %118, %95, %93, %91, %70, %66, %62, %61, %57, %48, %44, %35, %31, %20, %16
  %134 = phi i32 [ %132, %131 ], [ 0, %118 ], [ -95, %20 ], [ -95, %16 ], [ -17, %91 ], [ -22, %93 ], [ -12, %95 ], [ -95, %35 ], [ -95, %31 ], [ -95, %48 ], [ -95, %44 ], [ -95, %61 ], [ -95, %57 ], [ -22, %66 ], [ -22, %70 ], [ -22, %62 ]
  ret i32 %134
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_rate_del_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink_rate, ptr %4, i32 0, i32 2
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.devlink_rate, ptr %4, i32 0, i32 7
  %10 = getelementptr inbounds %struct.devlink_rate, ptr %4, i32 0, i32 7, i32 0, i32 1
  %11 = load volatile i32, ptr %10, align 4
  %12 = icmp ugt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %15 = load ptr, ptr %14, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_rate_del_doit.__msg) #27
  %16 = icmp eq ptr %15, null
  br i1 %16, label %41, label %17

17:                                               ; preds = %13
  store ptr @devlink_nl_cmd_rate_del_doit.__msg, ptr %15, align 4
  br label %41

18:                                               ; preds = %2
  tail call fastcc void @devlink_rate_notify(ptr noundef %4, i32 noundef 77)
  %19 = getelementptr inbounds %struct.devlink_ops, ptr %8, i32 0, i32 48
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.devlink_rate, ptr %4, i32 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %24 = load ptr, ptr %23, align 4
  %25 = tail call i32 %20(ptr noundef %4, ptr noundef %22, ptr noundef %24) #27
  %26 = getelementptr inbounds %struct.devlink_rate, ptr %4, i32 0, i32 6
  %27 = load ptr, ptr %26, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %struct.devlink_rate, ptr %27, i32 0, i32 7, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %30) #27, !srcloc !14
  %31 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %30, ptr %30, i32 1, ptr elementtype(i32) %30) #27, !srcloc !15
  %32 = extractvalue { i32, i32, i32 } %31, 0
  %33 = icmp slt i32 %32, 2
  br i1 %33, label %34, label %35, !prof !11

34:                                               ; preds = %29
  tail call void @refcount_warn_saturate(ptr noundef %30, i32 noundef 4) #27
  br label %35

35:                                               ; preds = %34, %29, %18
  %36 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = load ptr, ptr %4, align 4
  %39 = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  store ptr %37, ptr %39, align 4
  store volatile ptr %38, ptr %37, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %4, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %36, align 4
  %40 = load ptr, ptr %9, align 4
  tail call void @kfree(ptr noundef %40) #27
  tail call void @kfree(ptr noundef %4) #27
  br label %41

41:                                               ; preds = %35, %17, %13
  %42 = phi i32 [ %25, %35 ], [ -16, %17 ], [ -16, %13 ]
  ret i32 %42
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_split_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 3
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %72, label %10

10:                                               ; preds = %2
  %11 = getelementptr ptr, ptr %6, i32 9
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %72, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %8, i32 4
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 1
  br label %18

18:                                               ; preds = %22, %14
  %19 = phi ptr [ %17, %14 ], [ %20, %22 ]
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, %17
  br i1 %21, label %72, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.devlink_port, ptr %20, i32 0, i32 4
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq i32 %24, %16
  br i1 %25, label %26, label %18

26:                                               ; preds = %22
  %27 = icmp eq ptr %20, null
  br i1 %27, label %72, label %28

28:                                               ; preds = %26
  %29 = getelementptr i8, ptr %12, i32 4
  %30 = load i32, ptr %29, align 4
  %31 = icmp ugt ptr %20, inttoptr (i32 -4096 to ptr)
  br i1 %31, label %72, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.devlink_port, ptr %20, i32 0, i32 9
  %34 = load i8, ptr %33, align 4
  %35 = and i8 %34, 2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = and i8 %34, 1
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %41 = load ptr, ptr %40, align 4
  br i1 %39, label %45, label %42

42:                                               ; preds = %37
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_port_split_doit.__msg) #27
  %43 = icmp eq ptr %41, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %42
  store ptr @devlink_nl_cmd_port_split_doit.__msg, ptr %41, align 4
  br label %72

45:                                               ; preds = %37
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_port_split_doit.__msg.64) #27
  %46 = icmp eq ptr %41, null
  br i1 %46, label %72, label %47

47:                                               ; preds = %45
  store ptr @devlink_nl_cmd_port_split_doit.__msg.64, ptr %41, align 4
  br label %72

48:                                               ; preds = %32
  %49 = icmp ugt i32 %30, 1
  %50 = tail call i32 @llvm.ctpop.i32(i32 %30) #27, !range !36
  %51 = icmp ult i32 %50, 2
  %52 = and i1 %49, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.devlink_port, ptr %20, i32 0, i32 9, i32 1
  %55 = load i32, ptr %54, align 4
  %56 = icmp ugt i32 %30, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %53, %48
  %58 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %59 = load ptr, ptr %58, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_port_split_doit.__msg.65) #27
  %60 = icmp eq ptr %59, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %57
  store ptr @devlink_nl_cmd_port_split_doit.__msg.65, ptr %59, align 4
  br label %72

62:                                               ; preds = %53
  %63 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.devlink_ops, ptr %64, i32 0, i32 6
  %66 = load ptr, ptr %65, align 4
  %67 = icmp eq ptr %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %70 = load ptr, ptr %69, align 4
  %71 = tail call i32 %66(ptr noundef %4, i32 noundef %16, i32 noundef %30, ptr noundef %70) #27
  br label %72

72:                                               ; preds = %68, %62, %61, %57, %47, %45, %44, %42, %28, %26, %18, %10, %2
  %73 = phi i32 [ -22, %10 ], [ -22, %2 ], [ -22, %28 ], [ -22, %45 ], [ -22, %47 ], [ -22, %42 ], [ -22, %44 ], [ -22, %61 ], [ -22, %57 ], [ %71, %68 ], [ -95, %62 ], [ -22, %26 ], [ -22, %18 ]
  ret i32 %73
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_unsplit_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr ptr, ptr %4, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.devlink, ptr %10, i32 0, i32 14
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.devlink_ops, ptr %12, i32 0, i32 7
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr i8, ptr %6, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = tail call i32 %14(ptr noundef %10, i32 noundef %20, ptr noundef %18) #27
  br label %22

22:                                               ; preds = %16, %8, %2
  %23 = phi i32 [ -22, %2 ], [ %21, %16 ], [ -95, %8 ]
  ret i32 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_new_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.devlink_port_new_attrs, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %6 = load ptr, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #27
  %7 = getelementptr inbounds i8, ptr %3, i32 4
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %7, i8 0, i32 16, i1 false)
  %8 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %9 = load ptr, ptr %8, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 0, ptr %4, align 4, !annotation !9
  %10 = getelementptr inbounds %struct.devlink, ptr %9, i32 0, i32 14
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_ops, ptr %11, i32 0, i32 39
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %115, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.devlink_ops, ptr %11, i32 0, i32 40
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %115, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr ptr, ptr %21, i32 77
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr ptr, ptr %21, i32 127
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25, %19
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_port_new_doit.__msg) #27
  %30 = icmp eq ptr %6, null
  br i1 %30, label %115, label %31

31:                                               ; preds = %29
  store ptr @devlink_nl_cmd_port_new_doit.__msg, ptr %6, align 4
  br label %115

32:                                               ; preds = %25
  %33 = getelementptr i8, ptr %23, i32 4
  %34 = load i16, ptr %33, align 2
  %35 = zext i16 %34 to i32
  store i32 %35, ptr %3, align 4
  %36 = load ptr, ptr %26, align 4
  %37 = getelementptr i8, ptr %36, i32 4
  %38 = load i16, ptr %37, align 2
  %39 = getelementptr inbounds %struct.devlink_port_new_attrs, ptr %3, i32 0, i32 4
  store i16 %38, ptr %39, align 4
  %40 = getelementptr ptr, ptr %21, i32 3
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %32
  %44 = getelementptr i8, ptr %41, i32 4
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.devlink_port_new_attrs, ptr %3, i32 0, i32 1
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.devlink_port_new_attrs, ptr %3, i32 0, i32 5
  store i8 1, ptr %47, align 2
  br label %48

48:                                               ; preds = %43, %32
  %49 = phi i8 [ 1, %43 ], [ 0, %32 ]
  %50 = getelementptr ptr, ptr %21, i32 150
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = getelementptr i8, ptr %51, i32 4
  %55 = load i16, ptr %54, align 2
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds %struct.devlink_port_new_attrs, ptr %3, i32 0, i32 2
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.devlink_port_new_attrs, ptr %3, i32 0, i32 5
  %59 = or i8 %49, 2
  store i8 %59, ptr %58, align 2
  br label %60

60:                                               ; preds = %53, %48
  %61 = phi i8 [ %59, %53 ], [ %49, %48 ]
  %62 = icmp eq i16 %34, 7
  br i1 %62, label %63, label %73

63:                                               ; preds = %60
  %64 = getelementptr ptr, ptr %21, i32 164
  %65 = load ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = getelementptr i8, ptr %65, i32 4
  %69 = load i32, ptr %68, align 4
  %70 = getelementptr inbounds %struct.devlink_port_new_attrs, ptr %3, i32 0, i32 3
  store i32 %69, ptr %70, align 4
  %71 = getelementptr inbounds %struct.devlink_port_new_attrs, ptr %3, i32 0, i32 5
  %72 = or i8 %61, 4
  store i8 %72, ptr %71, align 2
  br label %73

73:                                               ; preds = %67, %63, %60
  %74 = call i32 %13(ptr noundef %9, ptr noundef nonnull %3, ptr noundef %6, ptr noundef nonnull %4) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %115

76:                                               ; preds = %73
  %77 = load i32, ptr %4, align 4
  %78 = call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %79 = icmp eq ptr %78, null
  br i1 %79, label %108, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.devlink, ptr %9, i32 0, i32 20
  call void @mutex_lock(ptr noundef %81) #27
  %82 = getelementptr inbounds %struct.devlink, ptr %9, i32 0, i32 1
  br label %83

83:                                               ; preds = %87, %80
  %84 = phi ptr [ %82, %80 ], [ %85, %87 ]
  %85 = load ptr, ptr %84, align 4
  %86 = icmp eq ptr %85, %82
  br i1 %86, label %104, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.devlink_port, ptr %85, i32 0, i32 4
  %89 = load i32, ptr %88, align 4
  %90 = icmp eq i32 %89, %77
  br i1 %90, label %91, label %83

91:                                               ; preds = %87
  %92 = icmp eq ptr %85, null
  br i1 %92, label %104, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %95 = load i32, ptr %94, align 4
  %96 = load i32, ptr %1, align 4
  %97 = call fastcc i32 @devlink_nl_port_fill(ptr noundef nonnull %78, ptr noundef nonnull %85, i32 noundef 3, i32 noundef %95, i32 noundef %96, i32 noundef 0, ptr noundef null) #27
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %93
  %100 = load i32, ptr %94, align 4
  %101 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %102 = call i32 @netlink_unicast(ptr noundef %101, ptr noundef nonnull %78, i32 noundef %100, i32 noundef 64) #27
  %103 = call i32 @llvm.smin.i32(i32 %102, i32 0) #27
  call void @mutex_unlock(ptr noundef %81) #27
  br label %106

104:                                              ; preds = %93, %91, %83
  %105 = phi i32 [ %97, %93 ], [ -19, %91 ], [ -19, %83 ]
  call void @mutex_unlock(ptr noundef %81) #27
  call void @kfree_skb_reason(ptr noundef nonnull %78, i32 noundef 0) #27
  br label %106

106:                                              ; preds = %104, %99
  %107 = phi i32 [ %105, %104 ], [ %103, %99 ]
  switch i32 %107, label %108 [
    i32 -19, label %115
    i32 0, label %115
  ]

108:                                              ; preds = %106, %76
  %109 = phi i32 [ %107, %106 ], [ -12, %76 ]
  %110 = load ptr, ptr %10, align 4
  %111 = getelementptr inbounds %struct.devlink_ops, ptr %110, i32 0, i32 40
  %112 = load ptr, ptr %111, align 4
  %113 = load i32, ptr %4, align 4
  %114 = call i32 %112(ptr noundef %9, i32 noundef %113, ptr noundef %6) #27
  br label %115

115:                                              ; preds = %108, %106, %106, %73, %31, %29, %15, %2
  %116 = phi i32 [ -95, %15 ], [ -95, %2 ], [ -22, %31 ], [ -22, %29 ], [ %74, %73 ], [ %107, %106 ], [ %107, %106 ], [ %109, %108 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #27
  ret i32 %116
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_del_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.devlink_ops, ptr %8, i32 0, i32 40
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr ptr, ptr %14, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_port_del_doit.__msg) #27
  %19 = icmp eq ptr %4, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  store ptr @devlink_nl_cmd_port_del_doit.__msg, ptr %4, align 4
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr i8, ptr %16, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = tail call i32 %10(ptr noundef %6, i32 noundef %23, ptr noundef %4) #27
  br label %25

25:                                               ; preds = %21, %20, %18, %2
  %26 = phi i32 [ %24, %21 ], [ -95, %2 ], [ -22, %20 ], [ -22, %18 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 11
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = getelementptr i8, ptr %8, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 3
  br label %14

14:                                               ; preds = %18, %10
  %15 = phi ptr [ %13, %10 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %13
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.devlink_sb, ptr %16, i32 0, i32 1
  %20 = load i32, ptr %19, align 4
  %21 = icmp eq i32 %20, %12
  br i1 %21, label %22, label %14

22:                                               ; preds = %18
  %23 = icmp eq ptr %16, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = icmp ugt ptr %16, inttoptr (i32 -4096 to ptr)
  br i1 %25, label %26, label %29

26:                                               ; preds = %24, %22, %14, %2
  %27 = phi ptr [ %16, %24 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %22 ], [ inttoptr (i32 -19 to ptr), %14 ]
  %28 = ptrtoint ptr %27 to i32
  br label %44

29:                                               ; preds = %24
  %30 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %31 = icmp eq ptr %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %34 = load i32, ptr %33, align 4
  %35 = load i32, ptr %1, align 4
  %36 = tail call fastcc i32 @devlink_nl_sb_fill(ptr noundef nonnull %30, ptr noundef %4, ptr noundef nonnull %16, i32 noundef %34, i32 noundef %35, i32 noundef 0)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  tail call void @kfree_skb_reason(ptr noundef nonnull %30, i32 noundef 0) #27
  br label %44

39:                                               ; preds = %32
  %40 = load i32, ptr %33, align 4
  %41 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %42 = tail call i32 @netlink_unicast(ptr noundef %41, ptr noundef nonnull %30, i32 noundef %40, i32 noundef 64) #27
  %43 = tail call i32 @llvm.smin.i32(i32 %42, i32 0) #27
  br label %44

44:                                               ; preds = %39, %38, %29, %26
  %45 = phi i32 [ %28, %26 ], [ %36, %38 ], [ %43, %39 ], [ -12, %29 ]
  ret i32 %45
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %81, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %10

10:                                               ; preds = %77, %8
  %11 = phi ptr [ %6, %8 ], [ %79, %77 ]
  %12 = phi i32 [ 0, %8 ], [ %78, %77 ]
  %13 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 22
  %14 = load volatile i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %26, %10
  %17 = phi i32 [ %24, %26 ], [ %14, %10 ]
  %18 = add i32 %17, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  br label %19

19:                                               ; preds = %19, %16
  %20 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %17, i32 %18, ptr elementtype(i32) %13) #27, !srcloc !17
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %19

23:                                               ; preds = %19
  %24 = extractvalue { i32, i32 } %20, 1
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %28, label %26, !prof !10

26:                                               ; preds = %23
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %23, %10
  %29 = phi i32 [ 0, %10 ], [ %17, %23 ], [ 0, %26 ]
  %30 = add i32 %29, 1
  %31 = or i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33, !prof !10

33:                                               ; preds = %28
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 0) #27
  br label %34

34:                                               ; preds = %33, %28
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %77, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 20
  call void @mutex_lock(ptr noundef %37) #27
  %38 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 3
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %38
  br i1 %40, label %67, label %41

41:                                               ; preds = %63, %36
  %42 = phi ptr [ %65, %63 ], [ %39, %36 ]
  %43 = phi i32 [ %64, %63 ], [ %12, %36 ]
  %44 = icmp slt i32 %43, %5
  br i1 %44, label %63, label %45

45:                                               ; preds = %41
  %46 = load ptr, ptr %1, align 4
  %47 = getelementptr inbounds %struct.sk_buff, ptr %46, i32 0, i32 3, i32 12
  %48 = load i32, ptr %47, align 4
  %49 = load ptr, ptr %9, align 4
  %50 = getelementptr inbounds %struct.nlmsghdr, ptr %49, i32 0, i32 3
  %51 = load i32, ptr %50, align 4
  %52 = call fastcc i32 @devlink_nl_sb_fill(ptr noundef %0, ptr noundef nonnull %11, ptr noundef %42, i32 noundef %48, i32 noundef %51, i32 noundef 2)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %45
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %55 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %56 = extractvalue { i32, i32, i32 } %55, 0
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = icmp sgt i32 %56, 0
  br i1 %59, label %81, label %60, !prof !10

60:                                               ; preds = %58
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %81

61:                                               ; preds = %54
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %62 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %62) #27
  br label %81

63:                                               ; preds = %45, %41
  %64 = add i32 %43, 1
  %65 = load ptr, ptr %42, align 4
  %66 = icmp eq ptr %65, %38
  br i1 %66, label %67, label %41

67:                                               ; preds = %63, %36
  %68 = phi i32 [ %12, %36 ], [ %64, %63 ]
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %69 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %70 = extractvalue { i32, i32, i32 } %69, 0
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = icmp sgt i32 %70, 0
  br i1 %73, label %77, label %74, !prof !10

74:                                               ; preds = %72
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %77

75:                                               ; preds = %67
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %76 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %76) #27
  br label %77

77:                                               ; preds = %75, %74, %72, %34
  %78 = phi i32 [ %12, %34 ], [ %68, %72 ], [ %68, %74 ], [ %68, %75 ]
  %79 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %10

81:                                               ; preds = %77, %61, %60, %58, %2
  %82 = phi i32 [ %43, %58 ], [ %43, %60 ], [ %43, %61 ], [ 0, %2 ], [ %78, %77 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %82, ptr %4, align 4
  %83 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %84 = load i32, ptr %83, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %84
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_pool_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 11
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = getelementptr i8, ptr %8, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 3
  br label %14

14:                                               ; preds = %18, %10
  %15 = phi ptr [ %13, %10 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %13
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.devlink_sb, ptr %16, i32 0, i32 1
  %20 = load i32, ptr %19, align 4
  %21 = icmp eq i32 %20, %12
  br i1 %21, label %22, label %14

22:                                               ; preds = %18
  %23 = icmp eq ptr %16, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = icmp ugt ptr %16, inttoptr (i32 -4096 to ptr)
  br i1 %25, label %26, label %29

26:                                               ; preds = %24, %22, %14, %2
  %27 = phi ptr [ %16, %24 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %22 ], [ inttoptr (i32 -19 to ptr), %14 ]
  %28 = ptrtoint ptr %27 to i32
  br label %63

29:                                               ; preds = %24
  %30 = getelementptr ptr, ptr %6, i32 17
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %63, label %33

33:                                               ; preds = %29
  %34 = getelementptr i8, ptr %31, i32 4
  %35 = load i16, ptr %34, align 2
  %36 = getelementptr inbounds %struct.devlink_sb, ptr %16, i32 0, i32 3
  %37 = load i16, ptr %36, align 4
  %38 = getelementptr inbounds %struct.devlink_sb, ptr %16, i32 0, i32 4
  %39 = load i16, ptr %38, align 2
  %40 = add i16 %39, %37
  %41 = icmp ult i16 %35, %40
  br i1 %41, label %42, label %63

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.devlink_ops, ptr %44, i32 0, i32 8
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %63, label %48

48:                                               ; preds = %42
  %49 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %50 = icmp eq ptr %49, null
  br i1 %50, label %63, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %53 = load i32, ptr %52, align 4
  %54 = load i32, ptr %1, align 4
  %55 = tail call fastcc i32 @devlink_nl_sb_pool_fill(ptr noundef nonnull %49, ptr noundef %4, ptr noundef nonnull %16, i16 noundef zeroext %35, i32 noundef %53, i32 noundef %54, i32 noundef 0)
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  tail call void @kfree_skb_reason(ptr noundef nonnull %49, i32 noundef 0) #27
  br label %63

58:                                               ; preds = %51
  %59 = load i32, ptr %52, align 4
  %60 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %61 = tail call i32 @netlink_unicast(ptr noundef %60, ptr noundef nonnull %49, i32 noundef %59, i32 noundef 64) #27
  %62 = tail call i32 @llvm.smin.i32(i32 %61, i32 0) #27
  br label %63

63:                                               ; preds = %58, %57, %48, %42, %33, %29, %26
  %64 = phi i32 [ %28, %26 ], [ %55, %57 ], [ %62, %58 ], [ -95, %42 ], [ -12, %48 ], [ -22, %29 ], [ -22, %33 ]
  ret i32 %64
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_pool_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %11

10:                                               ; preds = %98, %2
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %107

11:                                               ; preds = %98, %8
  %12 = phi ptr [ %6, %8 ], [ %100, %98 ]
  %13 = phi i32 [ 0, %8 ], [ %99, %98 ]
  %14 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 22
  %15 = load volatile i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %27, %11
  %18 = phi i32 [ %25, %27 ], [ %15, %11 ]
  %19 = add i32 %18, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  br label %20

20:                                               ; preds = %20, %17
  %21 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 %18, i32 %19, ptr elementtype(i32) %14) #27, !srcloc !17
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %29, label %27, !prof !10

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %27, %24, %11
  %30 = phi i32 [ 0, %11 ], [ %18, %24 ], [ 0, %27 ]
  %31 = add i32 %30, 1
  %32 = or i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34, !prof !10

34:                                               ; preds = %29
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 0) #27
  br label %35

35:                                               ; preds = %34, %29
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %98, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 14
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.devlink_ops, ptr %39, i32 0, i32 8
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %88, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 20
  call void @mutex_lock(ptr noundef %44) #27
  %45 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 3
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %45
  br i1 %47, label %86, label %48

48:                                               ; preds = %82, %43
  %49 = phi ptr [ %84, %82 ], [ %46, %43 ]
  %50 = phi i32 [ %83, %82 ], [ %13, %43 ]
  %51 = load ptr, ptr %1, align 4
  %52 = getelementptr inbounds %struct.sk_buff, ptr %51, i32 0, i32 3, i32 12
  %53 = load i32, ptr %52, align 4
  %54 = load ptr, ptr %9, align 4
  %55 = getelementptr inbounds %struct.nlmsghdr, ptr %54, i32 0, i32 3
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.devlink_sb, ptr %49, i32 0, i32 3
  %58 = load i16, ptr %57, align 4
  %59 = getelementptr inbounds %struct.devlink_sb, ptr %49, i32 0, i32 4
  %60 = load i16, ptr %59, align 2
  %61 = add i16 %60, %58
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %69, %48
  %64 = phi i32 [ %70, %69 ], [ %50, %48 ]
  %65 = phi i16 [ %71, %69 ], [ 0, %48 ]
  %66 = icmp slt i32 %64, %5
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = call fastcc i32 @devlink_nl_sb_pool_fill(ptr noundef %0, ptr noundef nonnull %12, ptr noundef %49, i16 noundef zeroext %65, i32 noundef %53, i32 noundef %56, i32 noundef 2) #27
  switch i32 %68, label %73 [
    i32 0, label %69
    i32 -95, label %82
  ]

69:                                               ; preds = %67, %63
  %70 = add i32 %64, 1
  %71 = add nuw i16 %65, 1
  %72 = icmp ult i16 %71, %61
  br i1 %72, label %63, label %82

73:                                               ; preds = %67
  call void @mutex_unlock(ptr noundef %44) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %74 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %75 = extractvalue { i32, i32, i32 } %74, 0
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = icmp sgt i32 %75, 0
  br i1 %78, label %102, label %79, !prof !10

79:                                               ; preds = %77
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %102

80:                                               ; preds = %73
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %81 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %81) #27
  br label %102

82:                                               ; preds = %69, %67, %48
  %83 = phi i32 [ %50, %48 ], [ %64, %67 ], [ %70, %69 ]
  %84 = load ptr, ptr %49, align 4
  %85 = icmp eq ptr %84, %45
  br i1 %85, label %86, label %48

86:                                               ; preds = %82, %43
  %87 = phi i32 [ %13, %43 ], [ %83, %82 ]
  call void @mutex_unlock(ptr noundef %44) #27
  br label %88

88:                                               ; preds = %86, %37
  %89 = phi i32 [ %13, %37 ], [ %87, %86 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %90 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %91 = extractvalue { i32, i32, i32 } %90, 0
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = icmp sgt i32 %91, 0
  br i1 %94, label %98, label %95, !prof !10

95:                                               ; preds = %93
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %98

96:                                               ; preds = %88
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %97 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %97) #27
  br label %98

98:                                               ; preds = %96, %95, %93, %35
  %99 = phi i32 [ %13, %35 ], [ %89, %93 ], [ %89, %95 ], [ %89, %96 ]
  %100 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %101 = icmp eq ptr %100, null
  br i1 %101, label %10, label %11

102:                                              ; preds = %80, %79, %77
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %103 = icmp eq i32 %68, -90
  br i1 %103, label %104, label %107

104:                                              ; preds = %102
  store i32 %64, ptr %4, align 4
  %105 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %106 = load i32, ptr %105, align 8
  br label %107

107:                                              ; preds = %104, %102, %10
  %108 = phi i32 [ %106, %104 ], [ %68, %102 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %108
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_pool_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 11
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = getelementptr i8, ptr %8, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 3
  br label %14

14:                                               ; preds = %18, %10
  %15 = phi ptr [ %13, %10 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %13
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.devlink_sb, ptr %16, i32 0, i32 1
  %20 = load i32, ptr %19, align 4
  %21 = icmp eq i32 %20, %12
  br i1 %21, label %22, label %14

22:                                               ; preds = %18
  %23 = icmp eq ptr %16, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = icmp ugt ptr %16, inttoptr (i32 -4096 to ptr)
  br i1 %25, label %26, label %29

26:                                               ; preds = %24, %22, %14, %2
  %27 = phi ptr [ %16, %24 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %22 ], [ inttoptr (i32 -19 to ptr), %14 ]
  %28 = ptrtoint ptr %27 to i32
  br label %67

29:                                               ; preds = %24
  %30 = getelementptr ptr, ptr %6, i32 17
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %67, label %33

33:                                               ; preds = %29
  %34 = getelementptr i8, ptr %31, i32 4
  %35 = load i16, ptr %34, align 2
  %36 = getelementptr inbounds %struct.devlink_sb, ptr %16, i32 0, i32 3
  %37 = load i16, ptr %36, align 4
  %38 = getelementptr inbounds %struct.devlink_sb, ptr %16, i32 0, i32 4
  %39 = load i16, ptr %38, align 2
  %40 = add i16 %39, %37
  %41 = icmp ult i16 %35, %40
  br i1 %41, label %42, label %67

42:                                               ; preds = %33
  %43 = getelementptr ptr, ptr %6, i32 20
  %44 = load ptr, ptr %43, align 4
  %45 = icmp eq ptr %44, null
  br i1 %45, label %67, label %46

46:                                               ; preds = %42
  %47 = getelementptr i8, ptr %44, i32 4
  %48 = load i8, ptr %47, align 1
  %49 = icmp ugt i8 %48, 1
  br i1 %49, label %67, label %50

50:                                               ; preds = %46
  %51 = zext i8 %48 to i32
  %52 = getelementptr ptr, ptr %6, i32 19
  %53 = load ptr, ptr %52, align 4
  %54 = icmp eq ptr %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %57 = load ptr, ptr %56, align 4
  %58 = getelementptr inbounds %struct.devlink_ops, ptr %57, i32 0, i32 9
  %59 = load ptr, ptr %58, align 4
  %60 = icmp eq ptr %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %63 = load ptr, ptr %62, align 4
  %64 = getelementptr i8, ptr %53, i32 4
  %65 = load i32, ptr %64, align 4
  %66 = tail call i32 %59(ptr noundef %4, i32 noundef %12, i16 noundef zeroext %35, i32 noundef %65, i32 noundef %51, ptr noundef %63) #27
  br label %67

67:                                               ; preds = %61, %55, %50, %46, %42, %33, %29, %26
  %68 = phi i32 [ %28, %26 ], [ -22, %50 ], [ %66, %61 ], [ -95, %55 ], [ -22, %29 ], [ -22, %33 ], [ -22, %42 ], [ -22, %46 ]
  ret i32 %68
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_port_pool_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr ptr, ptr %8, i32 11
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr i8, ptr %10, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 3
  br label %16

16:                                               ; preds = %20, %12
  %17 = phi ptr [ %15, %12 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %14
  br i1 %23, label %24, label %16

24:                                               ; preds = %20
  %25 = icmp eq ptr %18, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  br i1 %27, label %28, label %31

28:                                               ; preds = %26, %24, %16, %2
  %29 = phi ptr [ %18, %26 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %24 ], [ inttoptr (i32 -19 to ptr), %16 ]
  %30 = ptrtoint ptr %29 to i32
  br label %65

31:                                               ; preds = %26
  %32 = getelementptr ptr, ptr %8, i32 17
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %65, label %35

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %33, i32 4
  %37 = load i16, ptr %36, align 2
  %38 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 3
  %39 = load i16, ptr %38, align 4
  %40 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 4
  %41 = load i16, ptr %40, align 2
  %42 = add i16 %41, %39
  %43 = icmp ult i16 %37, %42
  br i1 %43, label %44, label %65

44:                                               ; preds = %35
  %45 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %46 = load ptr, ptr %45, align 4
  %47 = getelementptr inbounds %struct.devlink_ops, ptr %46, i32 0, i32 10
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %65, label %50

50:                                               ; preds = %44
  %51 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %52 = icmp eq ptr %51, null
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %55 = load i32, ptr %54, align 4
  %56 = load i32, ptr %1, align 4
  %57 = tail call fastcc i32 @devlink_nl_sb_port_pool_fill(ptr noundef nonnull %51, ptr noundef %6, ptr noundef %4, ptr noundef nonnull %18, i16 noundef zeroext %37, i32 noundef %55, i32 noundef %56, i32 noundef 0)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  tail call void @kfree_skb_reason(ptr noundef nonnull %51, i32 noundef 0) #27
  br label %65

60:                                               ; preds = %53
  %61 = load i32, ptr %54, align 4
  %62 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %63 = tail call i32 @netlink_unicast(ptr noundef %62, ptr noundef nonnull %51, i32 noundef %61, i32 noundef 64) #27
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0) #27
  br label %65

65:                                               ; preds = %60, %59, %50, %44, %35, %31, %28
  %66 = phi i32 [ %30, %28 ], [ %57, %59 ], [ %64, %60 ], [ -95, %44 ], [ -12, %50 ], [ -22, %31 ], [ -22, %35 ]
  ret i32 %66
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_port_pool_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %11

10:                                               ; preds = %110, %2
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %119

11:                                               ; preds = %110, %8
  %12 = phi ptr [ %6, %8 ], [ %112, %110 ]
  %13 = phi i32 [ 0, %8 ], [ %111, %110 ]
  %14 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 22
  %15 = load volatile i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %27, %11
  %18 = phi i32 [ %25, %27 ], [ %15, %11 ]
  %19 = add i32 %18, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  br label %20

20:                                               ; preds = %20, %17
  %21 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 %18, i32 %19, ptr elementtype(i32) %14) #27, !srcloc !17
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %29, label %27, !prof !10

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %27, %24, %11
  %30 = phi i32 [ 0, %11 ], [ %18, %24 ], [ 0, %27 ]
  %31 = add i32 %30, 1
  %32 = or i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34, !prof !10

34:                                               ; preds = %29
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 0) #27
  br label %35

35:                                               ; preds = %34, %29
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %110, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 14
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.devlink_ops, ptr %39, i32 0, i32 10
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %100, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 20
  call void @mutex_lock(ptr noundef %44) #27
  %45 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 3
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %45
  br i1 %47, label %98, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 1
  br label %50

50:                                               ; preds = %94, %48
  %51 = phi ptr [ %46, %48 ], [ %96, %94 ]
  %52 = phi i32 [ %13, %48 ], [ %95, %94 ]
  %53 = load ptr, ptr %1, align 4
  %54 = getelementptr inbounds %struct.sk_buff, ptr %53, i32 0, i32 3, i32 12
  %55 = load i32, ptr %54, align 4
  %56 = load ptr, ptr %9, align 4
  %57 = getelementptr inbounds %struct.nlmsghdr, ptr %56, i32 0, i32 3
  %58 = load i32, ptr %57, align 4
  %59 = getelementptr inbounds %struct.devlink_sb, ptr %51, i32 0, i32 3
  %60 = load i16, ptr %59, align 4
  %61 = getelementptr inbounds %struct.devlink_sb, ptr %51, i32 0, i32 4
  %62 = load i16, ptr %61, align 2
  %63 = add i16 %62, %60
  %64 = load ptr, ptr %49, align 4
  %65 = icmp eq ptr %64, %49
  br i1 %65, label %94, label %66

66:                                               ; preds = %50
  %67 = icmp eq i16 %63, 0
  br label %72

68:                                               ; preds = %81, %72
  %69 = phi i32 [ %73, %72 ], [ %82, %81 ]
  %70 = load ptr, ptr %74, align 4
  %71 = icmp eq ptr %70, %49
  br i1 %71, label %94, label %72

72:                                               ; preds = %68, %66
  %73 = phi i32 [ %52, %66 ], [ %69, %68 ]
  %74 = phi ptr [ %64, %66 ], [ %70, %68 ]
  br i1 %67, label %68, label %75

75:                                               ; preds = %81, %72
  %76 = phi i32 [ %82, %81 ], [ %73, %72 ]
  %77 = phi i16 [ %83, %81 ], [ 0, %72 ]
  %78 = icmp slt i32 %76, %5
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = call fastcc i32 @devlink_nl_sb_port_pool_fill(ptr noundef %0, ptr noundef nonnull %12, ptr noundef %74, ptr noundef %51, i16 noundef zeroext %77, i32 noundef %55, i32 noundef %58, i32 noundef 2) #27
  switch i32 %80, label %85 [
    i32 0, label %81
    i32 -95, label %94
  ]

81:                                               ; preds = %79, %75
  %82 = add i32 %76, 1
  %83 = add nuw i16 %77, 1
  %84 = icmp ult i16 %83, %63
  br i1 %84, label %75, label %68

85:                                               ; preds = %79
  call void @mutex_unlock(ptr noundef %44) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %86 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %87 = extractvalue { i32, i32, i32 } %86, 0
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = icmp sgt i32 %87, 0
  br i1 %90, label %114, label %91, !prof !10

91:                                               ; preds = %89
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %114

92:                                               ; preds = %85
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %93 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %93) #27
  br label %114

94:                                               ; preds = %79, %68, %50
  %95 = phi i32 [ %52, %50 ], [ %76, %79 ], [ %69, %68 ]
  %96 = load ptr, ptr %51, align 4
  %97 = icmp eq ptr %96, %45
  br i1 %97, label %98, label %50

98:                                               ; preds = %94, %43
  %99 = phi i32 [ %13, %43 ], [ %95, %94 ]
  call void @mutex_unlock(ptr noundef %44) #27
  br label %100

100:                                              ; preds = %98, %37
  %101 = phi i32 [ %13, %37 ], [ %99, %98 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %102 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %103 = extractvalue { i32, i32, i32 } %102, 0
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %108, label %105

105:                                              ; preds = %100
  %106 = icmp sgt i32 %103, 0
  br i1 %106, label %110, label %107, !prof !10

107:                                              ; preds = %105
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %110

108:                                              ; preds = %100
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %109 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %109) #27
  br label %110

110:                                              ; preds = %108, %107, %105, %35
  %111 = phi i32 [ %13, %35 ], [ %101, %105 ], [ %101, %107 ], [ %101, %108 ]
  %112 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %113 = icmp eq ptr %112, null
  br i1 %113, label %10, label %11

114:                                              ; preds = %92, %91, %89
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %115 = icmp eq i32 %80, -90
  br i1 %115, label %116, label %119

116:                                              ; preds = %114
  store i32 %76, ptr %4, align 4
  %117 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %118 = load i32, ptr %117, align 8
  br label %119

119:                                              ; preds = %116, %114, %10
  %120 = phi i32 [ %118, %116 ], [ %80, %114 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %120
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_port_pool_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 11
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr i8, ptr %8, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 3
  br label %16

16:                                               ; preds = %20, %10
  %17 = phi ptr [ %15, %10 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %14
  br i1 %23, label %24, label %16

24:                                               ; preds = %20
  %25 = icmp eq ptr %18, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  br i1 %27, label %28, label %31

28:                                               ; preds = %26, %24, %16, %2
  %29 = phi ptr [ %18, %26 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %24 ], [ inttoptr (i32 -19 to ptr), %16 ]
  %30 = ptrtoint ptr %29 to i32
  br label %62

31:                                               ; preds = %26
  %32 = getelementptr ptr, ptr %6, i32 17
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %62, label %35

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %33, i32 4
  %37 = load i16, ptr %36, align 2
  %38 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 3
  %39 = load i16, ptr %38, align 4
  %40 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 4
  %41 = load i16, ptr %40, align 2
  %42 = add i16 %41, %39
  %43 = icmp ult i16 %37, %42
  br i1 %43, label %44, label %62

44:                                               ; preds = %35
  %45 = getelementptr ptr, ptr %6, i32 21
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %62, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 3
  %50 = load ptr, ptr %49, align 4
  %51 = getelementptr inbounds %struct.devlink, ptr %50, i32 0, i32 14
  %52 = load ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.devlink_ops, ptr %52, i32 0, i32 11
  %54 = load ptr, ptr %53, align 4
  %55 = icmp eq ptr %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %58 = load ptr, ptr %57, align 4
  %59 = getelementptr i8, ptr %46, i32 4
  %60 = load i32, ptr %59, align 4
  %61 = tail call i32 %54(ptr noundef %4, i32 noundef %14, i16 noundef zeroext %37, i32 noundef %60, ptr noundef %58) #27
  br label %62

62:                                               ; preds = %56, %48, %44, %35, %31, %28
  %63 = phi i32 [ %30, %28 ], [ -22, %44 ], [ %61, %56 ], [ -95, %48 ], [ -22, %31 ], [ -22, %35 ]
  ret i32 %63
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_tc_pool_bind_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr ptr, ptr %8, i32 11
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr i8, ptr %10, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 3
  br label %16

16:                                               ; preds = %20, %12
  %17 = phi ptr [ %15, %12 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %14
  br i1 %23, label %24, label %16

24:                                               ; preds = %20
  %25 = icmp eq ptr %18, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  br i1 %27, label %28, label %31

28:                                               ; preds = %26, %24, %16, %2
  %29 = phi ptr [ %18, %26 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %24 ], [ inttoptr (i32 -19 to ptr), %16 ]
  %30 = ptrtoint ptr %29 to i32
  br label %76

31:                                               ; preds = %26
  %32 = getelementptr ptr, ptr %8, i32 18
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %76, label %35

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %33, i32 4
  %37 = load i8, ptr %36, align 1
  %38 = icmp ugt i8 %37, 1
  br i1 %38, label %76, label %39

39:                                               ; preds = %35
  %40 = zext i8 %37 to i32
  %41 = getelementptr ptr, ptr %8, i32 22
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %76, label %44

44:                                               ; preds = %39
  %45 = getelementptr i8, ptr %42, i32 4
  %46 = load i16, ptr %45, align 2
  switch i8 %37, label %55 [
    i8 0, label %47
    i8 1, label %51
  ]

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 5
  %49 = load i16, ptr %48, align 4
  %50 = icmp ult i16 %46, %49
  br i1 %50, label %55, label %76

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 6
  %53 = load i16, ptr %52, align 2
  %54 = icmp ult i16 %46, %53
  br i1 %54, label %55, label %76

55:                                               ; preds = %51, %47, %44
  %56 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %57 = load ptr, ptr %56, align 4
  %58 = getelementptr inbounds %struct.devlink_ops, ptr %57, i32 0, i32 12
  %59 = load ptr, ptr %58, align 4
  %60 = icmp eq ptr %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %55
  %62 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %63 = icmp eq ptr %62, null
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %66 = load i32, ptr %65, align 4
  %67 = load i32, ptr %1, align 4
  %68 = tail call fastcc i32 @devlink_nl_sb_tc_pool_bind_fill(ptr noundef nonnull %62, ptr noundef %6, ptr noundef %4, ptr noundef nonnull %18, i16 noundef zeroext %46, i32 noundef %40, i32 noundef %66, i32 noundef %67, i32 noundef 0)
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %64
  tail call void @kfree_skb_reason(ptr noundef nonnull %62, i32 noundef 0) #27
  br label %76

71:                                               ; preds = %64
  %72 = load i32, ptr %65, align 4
  %73 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %74 = tail call i32 @netlink_unicast(ptr noundef %73, ptr noundef nonnull %62, i32 noundef %72, i32 noundef 64) #27
  %75 = tail call i32 @llvm.smin.i32(i32 %74, i32 0) #27
  br label %76

76:                                               ; preds = %71, %70, %61, %55, %51, %47, %39, %35, %31, %28
  %77 = phi i32 [ %30, %28 ], [ %68, %70 ], [ %75, %71 ], [ -95, %55 ], [ -12, %61 ], [ -22, %31 ], [ -22, %35 ], [ -22, %39 ], [ -22, %47 ], [ -22, %51 ]
  ret i32 %77
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_tc_pool_bind_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %11

10:                                               ; preds = %136, %2
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %145

11:                                               ; preds = %136, %8
  %12 = phi ptr [ %6, %8 ], [ %138, %136 ]
  %13 = phi i32 [ 0, %8 ], [ %137, %136 ]
  %14 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 22
  %15 = load volatile i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %27, %11
  %18 = phi i32 [ %25, %27 ], [ %15, %11 ]
  %19 = add i32 %18, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  br label %20

20:                                               ; preds = %20, %17
  %21 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 %18, i32 %19, ptr elementtype(i32) %14) #27, !srcloc !17
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %29, label %27, !prof !10

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %27, %24, %11
  %30 = phi i32 [ 0, %11 ], [ %18, %24 ], [ 0, %27 ]
  %31 = add i32 %30, 1
  %32 = or i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34, !prof !10

34:                                               ; preds = %29
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 0) #27
  br label %35

35:                                               ; preds = %34, %29
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %136, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 14
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.devlink_ops, ptr %39, i32 0, i32 12
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %126, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 20
  call void @mutex_lock(ptr noundef %44) #27
  %45 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 3
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %45
  br i1 %47, label %124, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 1
  br label %50

50:                                               ; preds = %120, %48
  %51 = phi ptr [ %46, %48 ], [ %122, %120 ]
  %52 = phi i32 [ %13, %48 ], [ %121, %120 ]
  %53 = load ptr, ptr %1, align 4
  %54 = getelementptr inbounds %struct.sk_buff, ptr %53, i32 0, i32 3, i32 12
  %55 = load i32, ptr %54, align 4
  %56 = load ptr, ptr %9, align 4
  %57 = getelementptr inbounds %struct.nlmsghdr, ptr %56, i32 0, i32 3
  %58 = load i32, ptr %57, align 4
  %59 = load ptr, ptr %49, align 4
  %60 = icmp eq ptr %59, %49
  br i1 %60, label %120, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %struct.devlink_sb, ptr %51, i32 0, i32 5
  %63 = getelementptr inbounds %struct.devlink_sb, ptr %51, i32 0, i32 6
  br label %68

64:                                               ; preds = %102, %73
  %65 = phi i32 [ %74, %73 ], [ %104, %102 ]
  %66 = load ptr, ptr %70, align 4
  %67 = icmp eq ptr %66, %49
  br i1 %67, label %120, label %68

68:                                               ; preds = %64, %61
  %69 = phi i32 [ %52, %61 ], [ %65, %64 ]
  %70 = phi ptr [ %59, %61 ], [ %66, %64 ]
  %71 = load i16, ptr %62, align 4
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %87, %68
  %74 = phi i32 [ %69, %68 ], [ %89, %87 ]
  %75 = load i16, ptr %63, align 2
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %64, label %92

77:                                               ; preds = %87, %68
  %78 = phi i16 [ %88, %87 ], [ %71, %68 ]
  %79 = phi i32 [ %89, %87 ], [ %69, %68 ]
  %80 = phi i16 [ %90, %87 ], [ 0, %68 ]
  %81 = icmp slt i32 %79, %5
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = call fastcc i32 @devlink_nl_sb_tc_pool_bind_fill(ptr noundef %0, ptr noundef nonnull %12, ptr noundef %70, ptr noundef %51, i16 noundef zeroext %80, i32 noundef 0, i32 noundef %55, i32 noundef %58, i32 noundef 2) #27
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %107

85:                                               ; preds = %82
  %86 = load i16, ptr %62, align 4
  br label %87

87:                                               ; preds = %85, %77
  %88 = phi i16 [ %86, %85 ], [ %78, %77 ]
  %89 = add i32 %79, 1
  %90 = add nuw i16 %80, 1
  %91 = icmp ult i16 %90, %88
  br i1 %91, label %77, label %73

92:                                               ; preds = %102, %73
  %93 = phi i16 [ %103, %102 ], [ %75, %73 ]
  %94 = phi i32 [ %104, %102 ], [ %74, %73 ]
  %95 = phi i16 [ %105, %102 ], [ 0, %73 ]
  %96 = icmp slt i32 %94, %5
  br i1 %96, label %102, label %97

97:                                               ; preds = %92
  %98 = call fastcc i32 @devlink_nl_sb_tc_pool_bind_fill(ptr noundef %0, ptr noundef nonnull %12, ptr noundef %70, ptr noundef %51, i16 noundef zeroext %95, i32 noundef 1, i32 noundef %55, i32 noundef %58, i32 noundef 2) #27
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %97
  %101 = load i16, ptr %63, align 2
  br label %102

102:                                              ; preds = %100, %92
  %103 = phi i16 [ %101, %100 ], [ %93, %92 ]
  %104 = add i32 %94, 1
  %105 = add nuw i16 %95, 1
  %106 = icmp ult i16 %105, %103
  br i1 %106, label %92, label %64

107:                                              ; preds = %97, %82
  %108 = phi i32 [ %94, %97 ], [ %79, %82 ]
  %109 = phi i32 [ %98, %97 ], [ %83, %82 ]
  %110 = icmp eq i32 %109, -95
  br i1 %110, label %120, label %111

111:                                              ; preds = %107
  call void @mutex_unlock(ptr noundef %44) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %112 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %113 = extractvalue { i32, i32, i32 } %112, 0
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = icmp sgt i32 %113, 0
  br i1 %116, label %140, label %117, !prof !10

117:                                              ; preds = %115
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %140

118:                                              ; preds = %111
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %119 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %119) #27
  br label %140

120:                                              ; preds = %107, %64, %50
  %121 = phi i32 [ %108, %107 ], [ %52, %50 ], [ %65, %64 ]
  %122 = load ptr, ptr %51, align 4
  %123 = icmp eq ptr %122, %45
  br i1 %123, label %124, label %50

124:                                              ; preds = %120, %43
  %125 = phi i32 [ %13, %43 ], [ %121, %120 ]
  call void @mutex_unlock(ptr noundef %44) #27
  br label %126

126:                                              ; preds = %124, %37
  %127 = phi i32 [ %13, %37 ], [ %125, %124 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %128 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %129 = extractvalue { i32, i32, i32 } %128, 0
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = icmp sgt i32 %129, 0
  br i1 %132, label %136, label %133, !prof !10

133:                                              ; preds = %131
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %136

134:                                              ; preds = %126
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %135 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %135) #27
  br label %136

136:                                              ; preds = %134, %133, %131, %35
  %137 = phi i32 [ %13, %35 ], [ %127, %131 ], [ %127, %133 ], [ %127, %134 ]
  %138 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %139 = icmp eq ptr %138, null
  br i1 %139, label %10, label %11

140:                                              ; preds = %118, %117, %115
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %141 = icmp eq i32 %109, -90
  br i1 %141, label %142, label %145

142:                                              ; preds = %140
  store i32 %108, ptr %4, align 4
  %143 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %144 = load i32, ptr %143, align 8
  br label %145

145:                                              ; preds = %142, %140, %10
  %146 = phi i32 [ %144, %142 ], [ %109, %140 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %146
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_tc_pool_bind_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 11
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr i8, ptr %8, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 3
  br label %16

16:                                               ; preds = %20, %10
  %17 = phi ptr [ %15, %10 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %14
  br i1 %23, label %24, label %16

24:                                               ; preds = %20
  %25 = icmp eq ptr %18, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  br i1 %27, label %28, label %31

28:                                               ; preds = %26, %24, %16, %2
  %29 = phi ptr [ %18, %26 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %24 ], [ inttoptr (i32 -19 to ptr), %16 ]
  %30 = ptrtoint ptr %29 to i32
  br label %86

31:                                               ; preds = %26
  %32 = getelementptr ptr, ptr %6, i32 18
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %86, label %35

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %33, i32 4
  %37 = load i8, ptr %36, align 1
  %38 = icmp ugt i8 %37, 1
  br i1 %38, label %86, label %39

39:                                               ; preds = %35
  %40 = zext i8 %37 to i32
  %41 = getelementptr ptr, ptr %6, i32 22
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %86, label %44

44:                                               ; preds = %39
  %45 = getelementptr i8, ptr %42, i32 4
  %46 = load i16, ptr %45, align 2
  switch i8 %37, label %55 [
    i8 0, label %47
    i8 1, label %51
  ]

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 5
  %49 = load i16, ptr %48, align 4
  %50 = icmp ult i16 %46, %49
  br i1 %50, label %55, label %86

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 6
  %53 = load i16, ptr %52, align 2
  %54 = icmp ult i16 %46, %53
  br i1 %54, label %55, label %86

55:                                               ; preds = %51, %47, %44
  %56 = getelementptr ptr, ptr %6, i32 17
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %86, label %59

59:                                               ; preds = %55
  %60 = getelementptr i8, ptr %57, i32 4
  %61 = load i16, ptr %60, align 2
  %62 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 3
  %63 = load i16, ptr %62, align 4
  %64 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 4
  %65 = load i16, ptr %64, align 2
  %66 = add i16 %65, %63
  %67 = icmp ult i16 %61, %66
  br i1 %67, label %68, label %86

68:                                               ; preds = %59
  %69 = getelementptr ptr, ptr %6, i32 21
  %70 = load ptr, ptr %69, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %86, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 3
  %74 = load ptr, ptr %73, align 4
  %75 = getelementptr inbounds %struct.devlink, ptr %74, i32 0, i32 14
  %76 = load ptr, ptr %75, align 4
  %77 = getelementptr inbounds %struct.devlink_ops, ptr %76, i32 0, i32 13
  %78 = load ptr, ptr %77, align 4
  %79 = icmp eq ptr %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %82 = load ptr, ptr %81, align 4
  %83 = getelementptr i8, ptr %70, i32 4
  %84 = load i32, ptr %83, align 4
  %85 = tail call i32 %78(ptr noundef %4, i32 noundef %14, i16 noundef zeroext %46, i32 noundef %40, i16 noundef zeroext %61, i32 noundef %84, ptr noundef %82) #27
  br label %86

86:                                               ; preds = %80, %72, %68, %59, %55, %51, %47, %39, %35, %31, %28
  %87 = phi i32 [ %30, %28 ], [ -22, %68 ], [ %85, %80 ], [ -95, %72 ], [ -22, %31 ], [ -22, %35 ], [ -22, %39 ], [ -22, %47 ], [ -22, %51 ], [ -22, %55 ], [ -22, %59 ]
  ret i32 %87
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_occ_snapshot_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr ptr, ptr %8, i32 11
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr i8, ptr %10, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 3
  br label %16

16:                                               ; preds = %20, %12
  %17 = phi ptr [ %15, %12 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %14
  br i1 %23, label %24, label %16

24:                                               ; preds = %20
  %25 = icmp eq ptr %18, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  br i1 %27, label %28, label %31

28:                                               ; preds = %26, %24, %16, %2
  %29 = phi ptr [ %18, %26 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %24 ], [ inttoptr (i32 -19 to ptr), %16 ]
  %30 = ptrtoint ptr %29 to i32
  br label %37

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 14
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call i32 %33(ptr noundef %4, i32 noundef %14) #27
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = phi i32 [ %30, %28 ], [ %36, %35 ], [ -95, %31 ]
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_sb_occ_max_clear_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr ptr, ptr %8, i32 11
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr i8, ptr %10, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 3
  br label %16

16:                                               ; preds = %20, %12
  %17 = phi ptr [ %15, %12 ], [ %18, %20 ]
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.devlink_sb, ptr %18, i32 0, i32 1
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, %14
  br i1 %23, label %24, label %16

24:                                               ; preds = %20
  %25 = icmp eq ptr %18, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  br i1 %27, label %28, label %31

28:                                               ; preds = %26, %24, %16, %2
  %29 = phi ptr [ %18, %26 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -19 to ptr), %24 ], [ inttoptr (i32 -19 to ptr), %16 ]
  %30 = ptrtoint ptr %29 to i32
  br label %37

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 15
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call i32 %33(ptr noundef %4, i32 noundef %14) #27
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = phi i32 [ %30, %28 ], [ %36, %35 ], [ -95, %31 ]
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_eswitch_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i16, align 2
  %9 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %10 = load ptr, ptr %9, align 4
  %11 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %12 = icmp eq ptr %11, null
  br i1 %12, label %106, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = load i32, ptr %1, align 4
  %17 = getelementptr inbounds %struct.devlink, ptr %10, i32 0, i32 14
  %18 = load ptr, ptr %17, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 0, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #27
  store i8 0, ptr %7, align 1, !annotation !9
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %8) #27
  store i16 0, ptr %8, align 2, !annotation !9
  %19 = tail call ptr @genlmsg_put(ptr noundef nonnull %11, i32 noundef %15, i32 noundef %16, ptr noundef nonnull @devlink_nl_family, i32 noundef 0, i8 noundef zeroext 29) #27
  %20 = icmp eq ptr %19, null
  br i1 %20, label %93, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.devlink, ptr %10, i32 0, i32 18
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.device, ptr %23, i32 0, i32 5
  %25 = load ptr, ptr %24, align 4
  %26 = load ptr, ptr %25, align 4
  %27 = tail call i32 @strlen(ptr noundef %26) #27
  %28 = add i32 %27, 1
  %29 = tail call i32 @nla_put(ptr noundef nonnull %11, i32 noundef 1, i32 noundef %28, ptr noundef %26) #27
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %78

31:                                               ; preds = %21
  %32 = load ptr, ptr %22, align 4
  %33 = getelementptr inbounds %struct.device, ptr %32, i32 0, i32 3
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = load ptr, ptr %32, align 4
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi ptr [ %37, %36 ], [ %34, %31 ]
  %40 = tail call i32 @strlen(ptr noundef %39) #27
  %41 = add i32 %40, 1
  %42 = tail call i32 @nla_put(ptr noundef nonnull %11, i32 noundef 2, i32 noundef %41, ptr noundef %39) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %78

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.devlink_ops, ptr %18, i32 0, i32 18
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = call i32 %46(ptr noundef %10, ptr noundef nonnull %8) #27
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %78

51:                                               ; preds = %48
  %52 = load i16, ptr %8, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %5) #27
  store i16 %52, ptr %5, align 2
  %53 = call i32 @nla_put(ptr noundef nonnull %11, i32 noundef 25, i32 noundef 2, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %5) #27
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %78

55:                                               ; preds = %51, %44
  %56 = getelementptr inbounds %struct.devlink_ops, ptr %18, i32 0, i32 20
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = call i32 %57(ptr noundef %10, ptr noundef nonnull %7) #27
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %78

62:                                               ; preds = %59
  %63 = load i8, ptr %7, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #27
  store i8 %63, ptr %4, align 1
  %64 = call i32 @nla_put(ptr noundef nonnull %11, i32 noundef 26, i32 noundef 1, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %62, %55
  %67 = getelementptr inbounds %struct.devlink_ops, ptr %18, i32 0, i32 22
  %68 = load ptr, ptr %67, align 4
  %69 = icmp eq ptr %68, null
  br i1 %69, label %95, label %70

70:                                               ; preds = %66
  %71 = call i32 %68(ptr noundef %10, ptr noundef nonnull %6) #27
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %70
  %74 = load i32, ptr %6, align 4
  %75 = trunc i32 %74 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #27
  store i8 %75, ptr %3, align 1
  %76 = call i32 @nla_put(ptr noundef nonnull %11, i32 noundef 62, i32 noundef 1, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #27
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %95, label %78

78:                                               ; preds = %73, %70, %62, %59, %51, %48, %38, %21
  %79 = phi i32 [ %49, %48 ], [ %53, %51 ], [ %60, %59 ], [ %64, %62 ], [ %71, %70 ], [ %76, %73 ], [ -90, %21 ], [ -90, %38 ]
  %80 = getelementptr i8, ptr %19, i32 -20
  %81 = icmp eq ptr %80, null
  br i1 %81, label %93, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 17
  %84 = load ptr, ptr %83, align 4
  %85 = icmp ugt ptr %84, %80
  br i1 %85, label %86, label %88, !prof !11

86:                                               ; preds = %82
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %87 = load ptr, ptr %83, align 4
  br label %88

88:                                               ; preds = %86, %82
  %89 = phi ptr [ %87, %86 ], [ %84, %82 ]
  %90 = ptrtoint ptr %80 to i32
  %91 = ptrtoint ptr %89 to i32
  %92 = sub i32 %90, %91
  call void @skb_trim(ptr noundef nonnull %11, i32 noundef %92) #27
  br label %93

93:                                               ; preds = %88, %78, %13
  %94 = phi i32 [ %79, %88 ], [ %79, %78 ], [ -90, %13 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  call void @kfree_skb_reason(ptr noundef nonnull %11, i32 noundef 0) #27
  br label %106

95:                                               ; preds = %73, %66
  %96 = getelementptr i8, ptr %19, i32 -20
  %97 = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 14
  %98 = load ptr, ptr %97, align 8
  %99 = ptrtoint ptr %98 to i32
  %100 = ptrtoint ptr %96 to i32
  %101 = sub i32 %99, %100
  store i32 %101, ptr %96, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  %102 = load i32, ptr %14, align 4
  %103 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %104 = call i32 @netlink_unicast(ptr noundef %103, ptr noundef nonnull %11, i32 noundef %102, i32 noundef 64) #27
  %105 = call i32 @llvm.smin.i32(i32 %104, i32 0) #27
  br label %106

106:                                              ; preds = %95, %93, %2
  %107 = phi i32 [ %94, %93 ], [ %105, %95 ], [ -12, %2 ]
  ret i32 %107
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_eswitch_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr ptr, ptr %8, i32 25
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 19
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = getelementptr i8, ptr %10, i32 4
  %18 = load i16, ptr %17, align 2
  %19 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %21) #27
  %22 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 2
  br label %23

23:                                               ; preds = %27, %16
  %24 = phi ptr [ %22, %16 ], [ %25, %27 ]
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, %22
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.devlink_rate, ptr %25, i32 0, i32 1
  %29 = load i32, ptr %28, align 8
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %23

31:                                               ; preds = %27
  tail call void @mutex_unlock(ptr noundef %21) #27
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_nodes_check.__msg) #27
  %32 = icmp eq ptr %20, null
  br i1 %32, label %77, label %33

33:                                               ; preds = %31
  store ptr @devlink_rate_nodes_check.__msg, ptr %20, align 4
  br label %77

34:                                               ; preds = %23
  tail call void @mutex_unlock(ptr noundef %21) #27
  %35 = load ptr, ptr %13, align 4
  %36 = load ptr, ptr %19, align 4
  %37 = tail call i32 %35(ptr noundef %4, i16 noundef zeroext %18, ptr noundef %36) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %77

39:                                               ; preds = %34
  %40 = load ptr, ptr %7, align 4
  br label %41

41:                                               ; preds = %39, %2
  %42 = phi ptr [ %40, %39 ], [ %8, %2 ]
  %43 = getelementptr ptr, ptr %42, i32 26
  %44 = load ptr, ptr %43, align 4
  %45 = icmp eq ptr %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 21
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %77, label %50

50:                                               ; preds = %46
  %51 = getelementptr i8, ptr %44, i32 4
  %52 = load i8, ptr %51, align 1
  %53 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %54 = load ptr, ptr %53, align 4
  %55 = tail call i32 %48(ptr noundef %4, i8 noundef zeroext %52, ptr noundef %54) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %77

57:                                               ; preds = %50
  %58 = load ptr, ptr %7, align 4
  br label %59

59:                                               ; preds = %57, %41
  %60 = phi ptr [ %58, %57 ], [ %42, %41 ]
  %61 = getelementptr ptr, ptr %60, i32 62
  %62 = load ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, null
  br i1 %63, label %76, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 23
  %66 = load ptr, ptr %65, align 4
  %67 = icmp eq ptr %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = getelementptr i8, ptr %62, i32 4
  %70 = load i8, ptr %69, align 1
  %71 = zext i8 %70 to i32
  %72 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %73 = load ptr, ptr %72, align 4
  %74 = tail call i32 %66(ptr noundef %4, i32 noundef %71, ptr noundef %73) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %68, %59
  br label %77

77:                                               ; preds = %76, %68, %64, %50, %46, %34, %33, %31, %12
  %78 = phi i32 [ 0, %76 ], [ -95, %12 ], [ %37, %34 ], [ -95, %46 ], [ %55, %50 ], [ -95, %64 ], [ %74, %68 ], [ -16, %33 ], [ -16, %31 ]
  ret i32 %78
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_dpipe_table_get(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 29
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  %10 = getelementptr i8, ptr %8, i32 4
  %11 = select i1 %9, ptr null, ptr %10
  %12 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr i8, ptr %13, i32 -4
  %15 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %16 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 18
  %17 = icmp eq ptr %11, null
  br label %18

18:                                               ; preds = %90, %2
  %19 = phi ptr [ null, %2 ], [ %28, %90 ]
  %20 = phi ptr [ %14, %2 ], [ %70, %90 ]
  %21 = icmp eq ptr %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = load i32, ptr %15, align 4
  %24 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %25 = tail call i32 @netlink_unicast(ptr noundef %24, ptr noundef nonnull %19, i32 noundef %23, i32 noundef 64) #27
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %27, label %153

27:                                               ; preds = %22, %18
  %28 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %29 = icmp eq ptr %28, null
  br i1 %29, label %153, label %30

30:                                               ; preds = %27
  %31 = load i32, ptr %15, align 4
  %32 = load i32, ptr %1, align 4
  %33 = tail call ptr @genlmsg_put(ptr noundef nonnull %28, i32 noundef %31, i32 noundef %32, ptr noundef nonnull @devlink_nl_family, i32 noundef 2, i8 noundef zeroext 31) #27
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void @kfree_skb_reason(ptr noundef nonnull %28, i32 noundef 0) #27
  br label %153

36:                                               ; preds = %30
  %37 = load ptr, ptr %16, align 4
  %38 = getelementptr inbounds %struct.device, ptr %37, i32 0, i32 5
  %39 = load ptr, ptr %38, align 4
  %40 = load ptr, ptr %39, align 4
  %41 = tail call i32 @strlen(ptr noundef %40) #27
  %42 = add i32 %41, 1
  %43 = tail call i32 @nla_put(ptr noundef nonnull %28, i32 noundef 1, i32 noundef %42, ptr noundef %40) #27
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %151

45:                                               ; preds = %36
  %46 = load ptr, ptr %16, align 4
  %47 = getelementptr inbounds %struct.device, ptr %46, i32 0, i32 3
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = load ptr, ptr %46, align 4
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi ptr [ %51, %50 ], [ %48, %45 ]
  %54 = tail call i32 @strlen(ptr noundef %53) #27
  %55 = add i32 %54, 1
  %56 = tail call i32 @nla_put(ptr noundef nonnull %28, i32 noundef 2, i32 noundef %55, ptr noundef %53) #27
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %151

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 14
  %60 = load ptr, ptr %59, align 8
  %61 = tail call i32 @nla_put(ptr noundef nonnull %28, i32 noundef 27, i32 noundef 0, ptr noundef null) #27
  %62 = icmp slt i32 %61, 0
  %63 = icmp eq ptr %60, null
  %64 = select i1 %62, i1 true, i1 %63
  br i1 %64, label %151, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %20, i32 0, i32 1
  %67 = icmp eq ptr %66, %12
  br i1 %67, label %101, label %68

68:                                               ; preds = %85, %65
  %69 = phi ptr [ %87, %85 ], [ %66, %65 ]
  %70 = phi ptr [ %88, %85 ], [ %20, %65 ]
  %71 = phi i32 [ %86, %85 ], [ 0, %65 ]
  br i1 %17, label %72, label %77

72:                                               ; preds = %68
  %73 = tail call fastcc i32 @devlink_dpipe_table_put(ptr noundef nonnull %28, ptr noundef %70) #27
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %72
  %76 = icmp eq i32 %71, 0
  br i1 %76, label %151, label %90

77:                                               ; preds = %68
  %78 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %70, i32 0, i32 2
  %79 = load ptr, ptr %78, align 4
  %80 = tail call i32 @strcmp(ptr noundef %79, ptr noundef nonnull %11) #27
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = tail call fastcc i32 @devlink_dpipe_table_put(ptr noundef nonnull %28, ptr noundef %70) #27
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %101

85:                                               ; preds = %82, %77, %72
  %86 = add i32 %71, 1
  %87 = load ptr, ptr %69, align 4
  %88 = getelementptr i8, ptr %87, i32 -4
  %89 = icmp eq ptr %87, %12
  br i1 %89, label %101, label %68

90:                                               ; preds = %75
  %91 = load ptr, ptr %59, align 8
  %92 = ptrtoint ptr %91 to i32
  %93 = ptrtoint ptr %60 to i32
  %94 = sub i32 %92, %93
  %95 = trunc i32 %94 to i16
  store i16 %95, ptr %60, align 2
  %96 = getelementptr i8, ptr %33, i32 -20
  %97 = load ptr, ptr %59, align 8
  %98 = ptrtoint ptr %97 to i32
  %99 = ptrtoint ptr %96 to i32
  %100 = sub i32 %98, %99
  store i32 %100, ptr %96, align 4
  br label %18

101:                                              ; preds = %85, %82, %65
  %102 = load ptr, ptr %59, align 8
  %103 = ptrtoint ptr %102 to i32
  %104 = ptrtoint ptr %60 to i32
  %105 = sub i32 %103, %104
  %106 = trunc i32 %105 to i16
  store i16 %106, ptr %60, align 2
  %107 = getelementptr i8, ptr %33, i32 -20
  %108 = load ptr, ptr %59, align 8
  %109 = ptrtoint ptr %108 to i32
  %110 = ptrtoint ptr %107 to i32
  %111 = sub i32 %109, %110
  store i32 %111, ptr %107, align 4
  br label %112

112:                                              ; preds = %142, %101
  %113 = phi ptr [ %143, %142 ], [ %28, %101 ]
  %114 = load i32, ptr %15, align 4
  %115 = load i32, ptr %1, align 4
  %116 = getelementptr inbounds %struct.sk_buff, ptr %113, i32 0, i32 6
  %117 = load i32, ptr %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %112
  %120 = getelementptr inbounds %struct.sk_buff, ptr %113, i32 0, i32 15
  %121 = load ptr, ptr %120, align 4
  %122 = getelementptr inbounds %struct.sk_buff, ptr %113, i32 0, i32 14
  %123 = load ptr, ptr %122, align 8
  %124 = ptrtoint ptr %121 to i32
  %125 = ptrtoint ptr %123 to i32
  %126 = sub i32 %124, %125
  %127 = icmp slt i32 %126, 16
  br i1 %127, label %131, label %128, !prof !11

128:                                              ; preds = %119
  %129 = tail call ptr @__nlmsg_put(ptr noundef %113, i32 noundef %114, i32 noundef %115, i32 noundef 3, i32 noundef 0, i32 noundef 2) #27
  %130 = icmp eq ptr %129, null
  br i1 %130, label %131, label %146

131:                                              ; preds = %128, %119, %112
  %132 = icmp eq ptr %113, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %131
  %134 = load i32, ptr %15, align 4
  %135 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %136 = tail call i32 @netlink_unicast(ptr noundef %135, ptr noundef nonnull %113, i32 noundef %134, i32 noundef 64) #27
  %137 = tail call i32 @llvm.smin.i32(i32 %136, i32 0) #27
  %138 = icmp sgt i32 %136, -1
  br i1 %138, label %139, label %142

139:                                              ; preds = %133, %131
  %140 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %141 = icmp eq ptr %140, null
  br i1 %141, label %153, label %142

142:                                              ; preds = %139, %133
  %143 = phi ptr [ %140, %139 ], [ %113, %133 ]
  %144 = phi i32 [ 0, %139 ], [ %137, %133 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %112, label %153

146:                                              ; preds = %128
  %147 = load i32, ptr %15, align 4
  %148 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %149 = tail call i32 @netlink_unicast(ptr noundef %148, ptr noundef %113, i32 noundef %147, i32 noundef 64) #27
  %150 = tail call i32 @llvm.smin.i32(i32 %149, i32 0) #27
  br label %153

151:                                              ; preds = %75, %58, %52, %36
  %152 = phi i32 [ %73, %75 ], [ -90, %58 ], [ -90, %36 ], [ -90, %52 ]
  tail call void @kfree_skb_reason(ptr noundef nonnull %28, i32 noundef 0) #27
  br label %153

153:                                              ; preds = %151, %146, %142, %139, %35, %27, %22
  %154 = phi i32 [ %152, %151 ], [ %150, %146 ], [ -90, %35 ], [ %144, %142 ], [ -12, %139 ], [ -12, %27 ], [ %25, %22 ]
  ret i32 %154
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_dpipe_entries_get(ptr nocapture noundef readnone %0, ptr noundef %1) #0 {
  %3 = alloca %struct.devlink_dpipe_dump_ctx, align 4
  %4 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr ptr, ptr %5, i32 29
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %86, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr i8, ptr %7, i32 4
  %13 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 4
  br label %14

14:                                               ; preds = %18, %9
  %15 = phi ptr [ %13, %9 ], [ %16, %18 ]
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %13
  br i1 %17, label %86, label %18

18:                                               ; preds = %14
  %19 = getelementptr i8, ptr %16, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = tail call i32 @strcmp(ptr noundef %20, ptr noundef %12) #27
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %14

23:                                               ; preds = %18
  %24 = getelementptr i8, ptr %16, i32 -4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %86, label %26

26:                                               ; preds = %23
  %27 = getelementptr i8, ptr %16, i32 36
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %struct.devlink_dpipe_table_ops, ptr %28, i32 0, i32 2
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %86, label %32

32:                                               ; preds = %26
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #27
  %33 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %3, i32 0, i32 2
  %34 = getelementptr inbounds %struct.devlink_dpipe_dump_ctx, ptr %3, i32 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef align 4 dereferenceable(12) %33, i8 0, i64 12, i1 false) #27
  store i32 32, ptr %34, align 4
  store ptr %1, ptr %3, align 4
  %35 = load ptr, ptr %29, align 4
  %36 = load ptr, ptr %24, align 8
  %37 = getelementptr i8, ptr %16, i32 12
  %38 = load i8, ptr %37, align 8, !range !18
  %39 = icmp ne i8 %38, 0
  %40 = call i32 %35(ptr noundef %36, i1 noundef zeroext %39, ptr noundef nonnull %3) #27
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %84

42:                                               ; preds = %32
  %43 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  br label %44

44:                                               ; preds = %76, %42
  %45 = load ptr, ptr %33, align 4
  %46 = load i32, ptr %43, align 4
  %47 = load i32, ptr %1, align 4
  %48 = getelementptr inbounds %struct.sk_buff, ptr %45, i32 0, i32 6
  %49 = load i32, ptr %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.sk_buff, ptr %45, i32 0, i32 15
  %53 = load ptr, ptr %52, align 4
  %54 = getelementptr inbounds %struct.sk_buff, ptr %45, i32 0, i32 14
  %55 = load ptr, ptr %54, align 8
  %56 = ptrtoint ptr %53 to i32
  %57 = ptrtoint ptr %55 to i32
  %58 = sub i32 %56, %57
  %59 = icmp slt i32 %58, 16
  br i1 %59, label %64, label %60, !prof !11

60:                                               ; preds = %51
  %61 = call ptr @__nlmsg_put(ptr noundef %45, i32 noundef %46, i32 noundef %47, i32 noundef 3, i32 noundef 0, i32 noundef 2) #27
  %62 = icmp eq ptr %61, null
  %63 = load ptr, ptr %33, align 4
  br i1 %62, label %64, label %79

64:                                               ; preds = %60, %51, %44
  %65 = phi ptr [ %45, %44 ], [ %45, %51 ], [ %63, %60 ]
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %64
  %68 = load i32, ptr %43, align 4
  %69 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %70 = call i32 @netlink_unicast(ptr noundef %69, ptr noundef nonnull %65, i32 noundef %68, i32 noundef 64) #27
  %71 = call i32 @llvm.smin.i32(i32 %70, i32 0) #27
  %72 = icmp sgt i32 %70, -1
  br i1 %72, label %73, label %76

73:                                               ; preds = %67, %64
  %74 = call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  store ptr %74, ptr %33, align 4
  %75 = icmp eq ptr %74, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %73, %67
  %77 = phi i32 [ %71, %67 ], [ 0, %73 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %44, label %84

79:                                               ; preds = %60
  %80 = load i32, ptr %43, align 4
  %81 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %82 = call i32 @netlink_unicast(ptr noundef %81, ptr noundef %63, i32 noundef %80, i32 noundef 64) #27
  %83 = call i32 @llvm.smin.i32(i32 %82, i32 0) #27
  br label %84

84:                                               ; preds = %79, %76, %73, %32
  %85 = phi i32 [ %83, %79 ], [ %40, %32 ], [ %77, %76 ], [ -12, %73 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #27
  br label %86

86:                                               ; preds = %84, %26, %23, %14, %2
  %87 = phi i32 [ %85, %84 ], [ -22, %2 ], [ -22, %23 ], [ -22, %26 ], [ -22, %14 ]
  ret i32 %87
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_dpipe_headers_get(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.devlink, ptr %9, i32 0, i32 10
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, null
  br i1 %12, label %249, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %15 = getelementptr inbounds %struct.devlink, ptr %9, i32 0, i32 18
  %16 = getelementptr inbounds %struct.devlink_dpipe_headers, ptr %11, i32 0, i32 1
  br label %17

17:                                               ; preds = %195, %13
  %18 = phi ptr [ null, %13 ], [ %27, %195 ]
  %19 = phi i32 [ 0, %13 ], [ %196, %195 ]
  %20 = icmp eq ptr %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = load i32, ptr %14, align 4
  %23 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %24 = call i32 @netlink_unicast(ptr noundef %23, ptr noundef nonnull %18, i32 noundef %22, i32 noundef 64) #27
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %26, label %249

26:                                               ; preds = %21, %17
  %27 = call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %28 = icmp eq ptr %27, null
  br i1 %28, label %249, label %29

29:                                               ; preds = %26
  %30 = load i32, ptr %14, align 4
  %31 = load i32, ptr %1, align 4
  %32 = call ptr @genlmsg_put(ptr noundef nonnull %27, i32 noundef %30, i32 noundef %31, ptr noundef nonnull @devlink_nl_family, i32 noundef 2, i8 noundef zeroext 33) #27
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  call void @kfree_skb_reason(ptr noundef nonnull %27, i32 noundef 0) #27
  br label %249

35:                                               ; preds = %29
  %36 = load ptr, ptr %15, align 4
  %37 = getelementptr inbounds %struct.device, ptr %36, i32 0, i32 5
  %38 = load ptr, ptr %37, align 4
  %39 = load ptr, ptr %38, align 4
  %40 = call i32 @strlen(ptr noundef %39) #27
  %41 = add i32 %40, 1
  %42 = call i32 @nla_put(ptr noundef nonnull %27, i32 noundef 1, i32 noundef %41, ptr noundef %39) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %248

44:                                               ; preds = %35
  %45 = load ptr, ptr %15, align 4
  %46 = getelementptr inbounds %struct.device, ptr %45, i32 0, i32 3
  %47 = load ptr, ptr %46, align 4
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = load ptr, ptr %45, align 4
  br label %51

51:                                               ; preds = %49, %44
  %52 = phi ptr [ %50, %49 ], [ %47, %44 ]
  %53 = call i32 @strlen(ptr noundef %52) #27
  %54 = add i32 %53, 1
  %55 = call i32 @nla_put(ptr noundef nonnull %27, i32 noundef 2, i32 noundef %54, ptr noundef %52) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %248

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.sk_buff, ptr %27, i32 0, i32 14
  %59 = load ptr, ptr %58, align 8
  %60 = call i32 @nla_put(ptr noundef nonnull %27, i32 noundef 49, i32 noundef 0, ptr noundef null) #27
  %61 = icmp slt i32 %60, 0
  %62 = icmp eq ptr %59, null
  %63 = select i1 %61, i1 true, i1 %62
  br i1 %63, label %248, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %16, align 4
  %66 = icmp ult i32 %19, %65
  br i1 %66, label %67, label %195

67:                                               ; preds = %180, %64
  %68 = phi i32 [ %191, %180 ], [ 0, %64 ]
  %69 = phi i32 [ %192, %180 ], [ %19, %64 ]
  %70 = load ptr, ptr %11, align 4
  %71 = getelementptr ptr, ptr %70, i32 %69
  %72 = load ptr, ptr %71, align 4
  %73 = load ptr, ptr %58, align 8
  %74 = call i32 @nla_put(ptr noundef %27, i32 noundef 50, i32 noundef 0, ptr noundef null) #27
  %75 = icmp slt i32 %74, 0
  %76 = icmp eq ptr %73, null
  %77 = select i1 %75, i1 true, i1 %76
  br i1 %77, label %178, label %78

78:                                               ; preds = %67
  %79 = load ptr, ptr %72, align 4
  %80 = call i32 @strlen(ptr noundef %79) #27
  %81 = add i32 %80, 1
  %82 = call i32 @nla_put(ptr noundef %27, i32 noundef 51, i32 noundef %81, ptr noundef %79) #27
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %167

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %72, i32 0, i32 1
  %86 = load i32, ptr %85, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 %86, ptr %7, align 4
  %87 = call i32 @nla_put(ptr noundef %27, i32 noundef 52, i32 noundef 4, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %167

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %72, i32 0, i32 4
  %91 = load i8, ptr %90, align 4, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #27
  store i8 %91, ptr %6, align 1
  %92 = call i32 @nla_put(ptr noundef %27, i32 noundef 54, i32 noundef 1, ptr noundef nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #27
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %167

94:                                               ; preds = %89
  %95 = load ptr, ptr %58, align 8
  %96 = call i32 @nla_put(ptr noundef %27, i32 noundef 53, i32 noundef 0, ptr noundef null) #27
  %97 = icmp slt i32 %96, 0
  %98 = icmp eq ptr %95, null
  %99 = select i1 %97, i1 true, i1 %98
  br i1 %99, label %167, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %72, i32 0, i32 3
  %102 = load i32, ptr %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %180, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.devlink_dpipe_header, ptr %72, i32 0, i32 2
  br label %106

106:                                              ; preds = %136, %104
  %107 = phi i32 [ 0, %104 ], [ %142, %136 ]
  %108 = load ptr, ptr %105, align 4
  %109 = load ptr, ptr %58, align 8
  %110 = call i32 @nla_put(ptr noundef %27, i32 noundef 56, i32 noundef 0, ptr noundef null) #27
  %111 = icmp slt i32 %110, 0
  %112 = icmp eq ptr %109, null
  %113 = select i1 %111, i1 true, i1 %112
  br i1 %113, label %156, label %114

114:                                              ; preds = %106
  %115 = getelementptr %struct.devlink_dpipe_field, ptr %108, i32 %107
  %116 = load ptr, ptr %115, align 4
  %117 = call i32 @strlen(ptr noundef %116) #27
  %118 = add i32 %117, 1
  %119 = call i32 @nla_put(ptr noundef %27, i32 noundef 57, i32 noundef %118, ptr noundef %116) #27
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %145

121:                                              ; preds = %114
  %122 = getelementptr %struct.devlink_dpipe_field, ptr %108, i32 %107, i32 1
  %123 = load i32, ptr %122, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store i32 %123, ptr %5, align 4
  %124 = call i32 @nla_put(ptr noundef %27, i32 noundef 58, i32 noundef 4, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %145

126:                                              ; preds = %121
  %127 = getelementptr %struct.devlink_dpipe_field, ptr %108, i32 %107, i32 2
  %128 = load i32, ptr %127, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %128, ptr %4, align 4
  %129 = call i32 @nla_put(ptr noundef %27, i32 noundef 59, i32 noundef 4, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %145

131:                                              ; preds = %126
  %132 = getelementptr %struct.devlink_dpipe_field, ptr %108, i32 %107, i32 3
  %133 = load i32, ptr %132, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 %133, ptr %3, align 4
  %134 = call i32 @nla_put(ptr noundef %27, i32 noundef 60, i32 noundef 4, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %145

136:                                              ; preds = %131
  %137 = load ptr, ptr %58, align 8
  %138 = ptrtoint ptr %137 to i32
  %139 = ptrtoint ptr %109 to i32
  %140 = sub i32 %138, %139
  %141 = trunc i32 %140 to i16
  store i16 %141, ptr %109, align 2
  %142 = add nuw i32 %107, 1
  %143 = load i32, ptr %101, align 4
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %106, label %180

145:                                              ; preds = %131, %126, %121, %114
  %146 = getelementptr inbounds %struct.sk_buff, ptr %27, i32 0, i32 17
  %147 = load ptr, ptr %146, align 4
  %148 = icmp ugt ptr %147, %109
  br i1 %148, label %149, label %151, !prof !11

149:                                              ; preds = %145
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %150 = load ptr, ptr %146, align 4
  br label %151

151:                                              ; preds = %149, %145
  %152 = phi ptr [ %150, %149 ], [ %147, %145 ]
  %153 = ptrtoint ptr %109 to i32
  %154 = ptrtoint ptr %152 to i32
  %155 = sub i32 %153, %154
  call void @skb_trim(ptr noundef %27, i32 noundef %155) #27
  br label %156

156:                                              ; preds = %151, %106
  %157 = getelementptr inbounds %struct.sk_buff, ptr %27, i32 0, i32 17
  %158 = load ptr, ptr %157, align 4
  %159 = icmp ugt ptr %158, %95
  br i1 %159, label %160, label %162, !prof !11

160:                                              ; preds = %156
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %161 = load ptr, ptr %157, align 4
  br label %162

162:                                              ; preds = %160, %156
  %163 = phi ptr [ %161, %160 ], [ %158, %156 ]
  %164 = ptrtoint ptr %95 to i32
  %165 = ptrtoint ptr %163 to i32
  %166 = sub i32 %164, %165
  call void @skb_trim(ptr noundef %27, i32 noundef %166) #27
  br label %167

167:                                              ; preds = %162, %94, %89, %84, %78
  %168 = getelementptr inbounds %struct.sk_buff, ptr %27, i32 0, i32 17
  %169 = load ptr, ptr %168, align 4
  %170 = icmp ugt ptr %169, %73
  br i1 %170, label %171, label %173, !prof !11

171:                                              ; preds = %167
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %172 = load ptr, ptr %168, align 4
  br label %173

173:                                              ; preds = %171, %167
  %174 = phi ptr [ %172, %171 ], [ %169, %167 ]
  %175 = ptrtoint ptr %73 to i32
  %176 = ptrtoint ptr %174 to i32
  %177 = sub i32 %175, %176
  call void @skb_trim(ptr noundef %27, i32 noundef %177) #27
  br label %178

178:                                              ; preds = %173, %67
  %179 = icmp eq i32 %68, 0
  br i1 %179, label %248, label %195

180:                                              ; preds = %136, %100
  %181 = load ptr, ptr %58, align 8
  %182 = ptrtoint ptr %181 to i32
  %183 = ptrtoint ptr %95 to i32
  %184 = sub i32 %182, %183
  %185 = trunc i32 %184 to i16
  store i16 %185, ptr %95, align 2
  %186 = load ptr, ptr %58, align 8
  %187 = ptrtoint ptr %186 to i32
  %188 = ptrtoint ptr %73 to i32
  %189 = sub i32 %187, %188
  %190 = trunc i32 %189 to i16
  store i16 %190, ptr %73, align 2
  %191 = add i32 %68, 1
  %192 = add nuw i32 %69, 1
  %193 = load i32, ptr %16, align 4
  %194 = icmp ult i32 %192, %193
  br i1 %194, label %67, label %195

195:                                              ; preds = %180, %178, %64
  %196 = phi i32 [ %69, %178 ], [ %19, %64 ], [ %192, %180 ]
  %197 = load ptr, ptr %58, align 8
  %198 = ptrtoint ptr %197 to i32
  %199 = ptrtoint ptr %59 to i32
  %200 = sub i32 %198, %199
  %201 = trunc i32 %200 to i16
  store i16 %201, ptr %59, align 2
  %202 = getelementptr i8, ptr %32, i32 -20
  %203 = load ptr, ptr %58, align 8
  %204 = ptrtoint ptr %203 to i32
  %205 = ptrtoint ptr %202 to i32
  %206 = sub i32 %204, %205
  store i32 %206, ptr %202, align 4
  %207 = load i32, ptr %16, align 4
  %208 = icmp eq i32 %196, %207
  br i1 %208, label %209, label %17

209:                                              ; preds = %239, %195
  %210 = phi ptr [ %240, %239 ], [ %27, %195 ]
  %211 = load i32, ptr %14, align 4
  %212 = load i32, ptr %1, align 4
  %213 = getelementptr inbounds %struct.sk_buff, ptr %210, i32 0, i32 6
  %214 = load i32, ptr %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %228

216:                                              ; preds = %209
  %217 = getelementptr inbounds %struct.sk_buff, ptr %210, i32 0, i32 15
  %218 = load ptr, ptr %217, align 4
  %219 = getelementptr inbounds %struct.sk_buff, ptr %210, i32 0, i32 14
  %220 = load ptr, ptr %219, align 8
  %221 = ptrtoint ptr %218 to i32
  %222 = ptrtoint ptr %220 to i32
  %223 = sub i32 %221, %222
  %224 = icmp slt i32 %223, 16
  br i1 %224, label %228, label %225, !prof !11

225:                                              ; preds = %216
  %226 = call ptr @__nlmsg_put(ptr noundef %210, i32 noundef %211, i32 noundef %212, i32 noundef 3, i32 noundef 0, i32 noundef 2) #27
  %227 = icmp eq ptr %226, null
  br i1 %227, label %228, label %243

228:                                              ; preds = %225, %216, %209
  %229 = icmp eq ptr %210, null
  br i1 %229, label %236, label %230

230:                                              ; preds = %228
  %231 = load i32, ptr %14, align 4
  %232 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %233 = call i32 @netlink_unicast(ptr noundef %232, ptr noundef nonnull %210, i32 noundef %231, i32 noundef 64) #27
  %234 = call i32 @llvm.smin.i32(i32 %233, i32 0) #27
  %235 = icmp sgt i32 %233, -1
  br i1 %235, label %236, label %239

236:                                              ; preds = %230, %228
  %237 = call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %238 = icmp eq ptr %237, null
  br i1 %238, label %249, label %239

239:                                              ; preds = %236, %230
  %240 = phi ptr [ %237, %236 ], [ %210, %230 ]
  %241 = phi i32 [ 0, %236 ], [ %234, %230 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %209, label %249

243:                                              ; preds = %225
  %244 = load i32, ptr %14, align 4
  %245 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %246 = call i32 @netlink_unicast(ptr noundef %245, ptr noundef %210, i32 noundef %244, i32 noundef 64) #27
  %247 = call i32 @llvm.smin.i32(i32 %246, i32 0) #27
  br label %249

248:                                              ; preds = %178, %57, %51, %35
  call void @kfree_skb_reason(ptr noundef %27, i32 noundef 0) #27
  br label %249

249:                                              ; preds = %248, %243, %239, %236, %34, %26, %21, %2
  %250 = phi i32 [ -95, %2 ], [ -90, %248 ], [ %247, %243 ], [ -90, %34 ], [ %241, %239 ], [ -12, %236 ], [ -12, %26 ], [ %24, %21 ]
  ret i32 %250
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_dpipe_table_counters_set(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 29
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %50, label %10

10:                                               ; preds = %2
  %11 = getelementptr ptr, ptr %6, i32 33
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %50, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %8, i32 4
  %16 = getelementptr i8, ptr %12, i32 4
  %17 = load i8, ptr %16, align 1
  %18 = icmp ne i8 %17, 0
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 4
  br label %21

21:                                               ; preds = %25, %14
  %22 = phi ptr [ %20, %14 ], [ %23, %25 ]
  %23 = load volatile ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, %20
  br i1 %24, label %50, label %25

25:                                               ; preds = %21
  %26 = getelementptr i8, ptr %23, i32 8
  %27 = load ptr, ptr %26, align 4
  %28 = tail call i32 @strcmp(ptr noundef %27, ptr noundef %15) #27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %21

30:                                               ; preds = %25
  %31 = getelementptr i8, ptr %23, i32 -4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %30
  %34 = getelementptr i8, ptr %23, i32 13
  %35 = load i8, ptr %34, align 1, !range !18
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %50

37:                                               ; preds = %33
  %38 = getelementptr i8, ptr %23, i32 12
  %39 = load i8, ptr %38, align 8, !range !18
  %40 = icmp eq i8 %39, %19
  br i1 %40, label %50, label %41

41:                                               ; preds = %37
  store i8 %19, ptr %38, align 8
  %42 = getelementptr i8, ptr %23, i32 36
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.devlink_dpipe_table_ops, ptr %43, i32 0, i32 3
  %45 = load ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = load ptr, ptr %31, align 8
  %49 = tail call i32 %45(ptr noundef %48, i1 noundef zeroext %18) #27
  br label %50

50:                                               ; preds = %47, %41, %37, %33, %30, %21, %10, %2
  %51 = phi i32 [ -22, %10 ], [ -22, %2 ], [ -22, %30 ], [ -95, %33 ], [ 0, %37 ], [ 0, %47 ], [ 0, %41 ], [ -22, %21 ]
  ret i32 %51
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_resource_set(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr ptr, ptr %9, i32 66
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %99, label %13

13:                                               ; preds = %2
  %14 = getelementptr ptr, ptr %9, i32 67
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %99, label %17

17:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !9
  %18 = call i32 @nla_memcpy(ptr noundef nonnull %5, ptr noundef nonnull %11, i32 noundef 8) #27
  %19 = load i64, ptr %5, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  %20 = call fastcc ptr @devlink_resource_find(ptr noundef %7, ptr noundef null, i64 noundef %19)
  %21 = icmp eq ptr %20, null
  br i1 %21, label %99, label %22

22:                                               ; preds = %17
  %23 = load ptr, ptr %8, align 4
  %24 = getelementptr ptr, ptr %23, i32 67
  %25 = load ptr, ptr %24, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 0, ptr %4, align 8, !annotation !9
  %26 = call i32 @nla_memcpy(ptr noundef nonnull %4, ptr noundef %25, i32 noundef 8) #27
  %27 = load i64, ptr %4, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %28 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %29 = load ptr, ptr %28, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #27
  store i64 0, ptr %3, align 8, !annotation !9
  %30 = getelementptr inbounds %struct.devlink_resource, ptr %20, i32 0, i32 6
  %31 = getelementptr inbounds %struct.devlink_resource, ptr %20, i32 0, i32 6, i32 1
  %32 = load i64, ptr %31, align 8
  %33 = icmp ult i64 %32, %27
  br i1 %33, label %34, label %37

34:                                               ; preds = %22
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_resource_validate_size.__msg) #27
  %35 = icmp eq ptr %29, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  store ptr @devlink_resource_validate_size.__msg, ptr %29, align 4
  br label %37

37:                                               ; preds = %36, %34, %22
  %38 = phi i32 [ 0, %22 ], [ -22, %36 ], [ -22, %34 ]
  %39 = load i64, ptr %30, align 8
  %40 = icmp ugt i64 %39, %27
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_resource_validate_size.__msg.66) #27
  %42 = icmp eq ptr %29, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %41
  store ptr @devlink_resource_validate_size.__msg.66, ptr %29, align 4
  br label %44

44:                                               ; preds = %43, %41, %37
  %45 = phi i32 [ %38, %37 ], [ -22, %43 ], [ -22, %41 ]
  %46 = getelementptr inbounds %struct.devlink_resource, ptr %20, i32 0, i32 6, i32 2
  %47 = load i64, ptr %46, align 8
  %48 = call i64 @div64_u64_rem(i64 noundef %27, i64 noundef %47, ptr noundef nonnull %3) #27
  %49 = load i64, ptr %3, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %44
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_resource_validate_size.__msg.67) #27
  %52 = icmp eq ptr %29, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  store ptr @devlink_resource_validate_size.__msg.67, ptr %29, align 4
  br label %54

54:                                               ; preds = %53, %51
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  br label %99

55:                                               ; preds = %44
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  %56 = icmp eq i32 %45, 0
  br i1 %56, label %57, label %99

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.devlink_resource, ptr %20, i32 0, i32 3
  store i64 %27, ptr %58, align 8
  %59 = getelementptr inbounds %struct.devlink_resource, ptr %20, i32 0, i32 8
  %60 = load volatile ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, %59
  br i1 %61, label %72, label %62

62:                                               ; preds = %62, %57
  %63 = phi ptr [ %68, %62 ], [ %60, %57 ]
  %64 = phi i64 [ %67, %62 ], [ 0, %57 ]
  %65 = getelementptr i8, ptr %63, i32 -48
  %66 = load i64, ptr %65, align 8
  %67 = add i64 %66, %64
  %68 = load ptr, ptr %63, align 8
  %69 = icmp eq ptr %68, %59
  br i1 %69, label %70, label %62

70:                                               ; preds = %62
  %71 = icmp ule i64 %67, %27
  br label %72

72:                                               ; preds = %70, %57
  %73 = phi i1 [ true, %57 ], [ %71, %70 ]
  %74 = getelementptr inbounds %struct.devlink_resource, ptr %20, i32 0, i32 4
  %75 = zext i1 %73 to i8
  store i8 %75, ptr %74, align 8
  %76 = getelementptr inbounds %struct.devlink_resource, ptr %20, i32 0, i32 5
  %77 = load ptr, ptr %76, align 4
  %78 = icmp eq ptr %77, null
  br i1 %78, label %99, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.devlink_resource, ptr %77, i32 0, i32 8
  %81 = load volatile ptr, ptr %80, align 4
  %82 = icmp eq ptr %81, %80
  br i1 %82, label %95, label %83

83:                                               ; preds = %83, %79
  %84 = phi ptr [ %89, %83 ], [ %81, %79 ]
  %85 = phi i64 [ %88, %83 ], [ 0, %79 ]
  %86 = getelementptr i8, ptr %84, i32 -48
  %87 = load i64, ptr %86, align 8
  %88 = add i64 %87, %85
  %89 = load ptr, ptr %84, align 8
  %90 = icmp eq ptr %89, %80
  br i1 %90, label %91, label %83

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.devlink_resource, ptr %77, i32 0, i32 3
  %93 = load i64, ptr %92, align 8
  %94 = icmp ule i64 %88, %93
  br label %95

95:                                               ; preds = %91, %79
  %96 = phi i1 [ true, %79 ], [ %94, %91 ]
  %97 = getelementptr inbounds %struct.devlink_resource, ptr %77, i32 0, i32 4
  %98 = zext i1 %96 to i8
  store i8 %98, ptr %97, align 8
  br label %99

99:                                               ; preds = %95, %72, %55, %54, %17, %13, %2
  %100 = phi i32 [ -22, %13 ], [ -22, %2 ], [ -22, %17 ], [ %45, %55 ], [ 0, %95 ], [ 0, %72 ], [ -22, %54 ]
  ret i32 %100
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_resource_dump(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 5
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, %5
  br i1 %7, label %138, label %8

8:                                                ; preds = %2
  %9 = getelementptr i8, ptr %6, i32 -72
  %10 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 18
  br label %23

12:                                               ; preds = %79
  %13 = load ptr, ptr %64, align 8
  %14 = ptrtoint ptr %13 to i32
  %15 = ptrtoint ptr %65 to i32
  %16 = sub i32 %14, %15
  %17 = trunc i32 %16 to i16
  store i16 %17, ptr %65, align 2
  %18 = getelementptr i8, ptr %38, i32 -20
  %19 = load ptr, ptr %64, align 8
  %20 = ptrtoint ptr %19 to i32
  %21 = ptrtoint ptr %18 to i32
  %22 = sub i32 %20, %21
  store i32 %22, ptr %18, align 4
  br label %23

23:                                               ; preds = %12, %8
  %24 = phi ptr [ null, %8 ], [ %33, %12 ]
  %25 = phi ptr [ %9, %8 ], [ %75, %12 ]
  %26 = icmp eq ptr %24, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = load i32, ptr %10, align 4
  %29 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %30 = tail call i32 @netlink_unicast(ptr noundef %29, ptr noundef nonnull %24, i32 noundef %28, i32 noundef 64) #27
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %32, label %138

32:                                               ; preds = %27, %23
  %33 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %34 = icmp eq ptr %33, null
  br i1 %34, label %138, label %35

35:                                               ; preds = %32
  %36 = load i32, ptr %10, align 4
  %37 = load i32, ptr %1, align 4
  %38 = tail call ptr @genlmsg_put(ptr noundef nonnull %33, i32 noundef %36, i32 noundef %37, ptr noundef nonnull @devlink_nl_family, i32 noundef 2, i8 noundef zeroext 36) #27
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  tail call void @kfree_skb_reason(ptr noundef nonnull %33, i32 noundef 0) #27
  br label %138

41:                                               ; preds = %35
  %42 = load ptr, ptr %11, align 4
  %43 = getelementptr inbounds %struct.device, ptr %42, i32 0, i32 5
  %44 = load ptr, ptr %43, align 4
  %45 = load ptr, ptr %44, align 4
  %46 = tail call i32 @strlen(ptr noundef %45) #27
  %47 = add i32 %46, 1
  %48 = tail call i32 @nla_put(ptr noundef nonnull %33, i32 noundef 1, i32 noundef %47, ptr noundef %45) #27
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %136

50:                                               ; preds = %41
  %51 = load ptr, ptr %11, align 4
  %52 = getelementptr inbounds %struct.device, ptr %51, i32 0, i32 3
  %53 = load ptr, ptr %52, align 4
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = load ptr, ptr %51, align 4
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi ptr [ %56, %55 ], [ %53, %50 ]
  %59 = tail call i32 @strlen(ptr noundef %58) #27
  %60 = add i32 %59, 1
  %61 = tail call i32 @nla_put(ptr noundef nonnull %33, i32 noundef 2, i32 noundef %60, ptr noundef %58) #27
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %136

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.sk_buff, ptr %33, i32 0, i32 14
  %65 = load ptr, ptr %64, align 8
  %66 = tail call i32 @nla_put(ptr noundef nonnull %33, i32 noundef 63, i32 noundef 0, ptr noundef null) #27
  %67 = icmp slt i32 %66, 0
  %68 = icmp eq ptr %65, null
  %69 = select i1 %67, i1 true, i1 %68
  br i1 %69, label %136, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.devlink_resource, ptr %25, i32 0, i32 7
  %72 = icmp eq ptr %71, %5
  br i1 %72, label %86, label %73

73:                                               ; preds = %81, %70
  %74 = phi ptr [ %83, %81 ], [ %71, %70 ]
  %75 = phi ptr [ %84, %81 ], [ %25, %70 ]
  %76 = phi i32 [ %82, %81 ], [ 0, %70 ]
  %77 = tail call fastcc i32 @devlink_resource_put(ptr noundef nonnull %33, ptr noundef %75) #27
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  %80 = icmp eq i32 %76, 0
  br i1 %80, label %136, label %12

81:                                               ; preds = %73
  %82 = add i32 %76, 1
  %83 = load ptr, ptr %74, align 8
  %84 = getelementptr i8, ptr %83, i32 -72
  %85 = icmp eq ptr %83, %5
  br i1 %85, label %86, label %73

86:                                               ; preds = %81, %70
  %87 = load ptr, ptr %64, align 8
  %88 = ptrtoint ptr %87 to i32
  %89 = ptrtoint ptr %65 to i32
  %90 = sub i32 %88, %89
  %91 = trunc i32 %90 to i16
  store i16 %91, ptr %65, align 2
  %92 = getelementptr i8, ptr %38, i32 -20
  %93 = load ptr, ptr %64, align 8
  %94 = ptrtoint ptr %93 to i32
  %95 = ptrtoint ptr %92 to i32
  %96 = sub i32 %94, %95
  store i32 %96, ptr %92, align 4
  br label %97

97:                                               ; preds = %127, %86
  %98 = phi ptr [ %33, %86 ], [ %128, %127 ]
  %99 = load i32, ptr %10, align 4
  %100 = load i32, ptr %1, align 4
  %101 = getelementptr inbounds %struct.sk_buff, ptr %98, i32 0, i32 6
  %102 = load i32, ptr %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %97
  %105 = getelementptr inbounds %struct.sk_buff, ptr %98, i32 0, i32 15
  %106 = load ptr, ptr %105, align 4
  %107 = getelementptr inbounds %struct.sk_buff, ptr %98, i32 0, i32 14
  %108 = load ptr, ptr %107, align 8
  %109 = ptrtoint ptr %106 to i32
  %110 = ptrtoint ptr %108 to i32
  %111 = sub i32 %109, %110
  %112 = icmp slt i32 %111, 16
  br i1 %112, label %116, label %113, !prof !11

113:                                              ; preds = %104
  %114 = tail call ptr @__nlmsg_put(ptr noundef %98, i32 noundef %99, i32 noundef %100, i32 noundef 3, i32 noundef 0, i32 noundef 2) #27
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %131

116:                                              ; preds = %113, %104, %97
  %117 = icmp eq ptr %98, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %116
  %119 = load i32, ptr %10, align 4
  %120 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %121 = tail call i32 @netlink_unicast(ptr noundef %120, ptr noundef nonnull %98, i32 noundef %119, i32 noundef 64) #27
  %122 = tail call i32 @llvm.smin.i32(i32 %121, i32 0) #27
  %123 = icmp sgt i32 %121, -1
  br i1 %123, label %124, label %127

124:                                              ; preds = %118, %116
  %125 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %126 = icmp eq ptr %125, null
  br i1 %126, label %138, label %127

127:                                              ; preds = %124, %118
  %128 = phi ptr [ %125, %124 ], [ %98, %118 ]
  %129 = phi i32 [ 0, %124 ], [ %122, %118 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %97, label %138

131:                                              ; preds = %113
  %132 = load i32, ptr %10, align 4
  %133 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %134 = tail call i32 @netlink_unicast(ptr noundef %133, ptr noundef %98, i32 noundef %132, i32 noundef 64) #27
  %135 = tail call i32 @llvm.smin.i32(i32 %134, i32 0) #27
  br label %138

136:                                              ; preds = %79, %63, %57, %41
  %137 = phi i32 [ %77, %79 ], [ -90, %63 ], [ -90, %41 ], [ -90, %57 ]
  tail call void @kfree_skb_reason(ptr noundef nonnull %33, i32 noundef 0) #27
  br label %138

138:                                              ; preds = %136, %131, %127, %124, %40, %32, %27, %2
  %139 = phi i32 [ -95, %2 ], [ %137, %136 ], [ %135, %131 ], [ -90, %40 ], [ %129, %127 ], [ -12, %124 ], [ -12, %32 ], [ %30, %27 ]
  ret i32 %139
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_reload(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.nla_bitfield32, align 8
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 0, ptr %3, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 15
  %8 = load i64, ptr %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %178, label %11

11:                                               ; preds = %2
  %12 = tail call fastcc i32 @devlink_resources_validate(ptr noundef %6, ptr noundef null)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %16 = load ptr, ptr %15, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_reload.__msg) #27
  %17 = icmp eq ptr %16, null
  br i1 %17, label %178, label %18

18:                                               ; preds = %14
  store ptr @devlink_nl_cmd_reload.__msg, ptr %16, align 4
  br label %178

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr ptr, ptr %21, i32 153
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr i8, ptr %23, i32 4
  %27 = load i8, ptr %26, align 1
  %28 = zext i8 %27 to i32
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi i32 [ %28, %25 ], [ 1, %19 ]
  %31 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %32 = load ptr, ptr %31, align 4
  %33 = getelementptr inbounds %struct.devlink_ops, ptr %32, i32 0, i32 1
  %34 = lshr i32 %30, 5
  %35 = getelementptr i32, ptr %33, i32 %34
  %36 = load volatile i32, ptr %35, align 4
  %37 = and i32 %30, 31
  %38 = shl nuw i32 1, %37
  %39 = and i32 %36, %38
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %43 = load ptr, ptr %42, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_reload.__msg.68) #27
  %44 = icmp eq ptr %43, null
  br i1 %44, label %178, label %45

45:                                               ; preds = %41
  store ptr @devlink_nl_cmd_reload.__msg.68, ptr %43, align 4
  br label %178

46:                                               ; preds = %29
  %47 = getelementptr ptr, ptr %21, i32 155
  %48 = load ptr, ptr %47, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %100, label %50

50:                                               ; preds = %46
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 0, ptr %4, align 8, !alias.scope !37, !annotation !9
  %51 = call i32 @nla_memcpy(ptr noundef nonnull %4, ptr noundef nonnull %48, i32 noundef 8) #27
  %52 = load i32, ptr %4, align 8
  %53 = getelementptr inbounds i8, ptr %4, i32 4
  %54 = load i32, ptr %53, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %55 = and i32 %54, %52
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %50
  %58 = and i32 %55, 1
  %59 = icmp eq i32 %58, 0
  %60 = and i32 %55, 2
  %61 = icmp eq i32 %60, 0
  %62 = xor i1 %61, true
  %63 = select i1 %61, i32 2, i32 1
  %64 = select i1 %59, i1 %62, i1 false
  %65 = select i1 %59, i32 %63, i32 0
  %66 = shl nuw nsw i32 1, %65
  %67 = icmp eq i32 %55, %66
  br i1 %67, label %78, label %73

68:                                               ; preds = %50
  %69 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %70 = load ptr, ptr %69, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_reload.__msg.69) #27
  %71 = icmp eq ptr %70, null
  br i1 %71, label %178, label %72

72:                                               ; preds = %68
  store ptr @devlink_nl_cmd_reload.__msg.69, ptr %70, align 4
  br label %178

73:                                               ; preds = %57
  %74 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %75 = load ptr, ptr %74, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_reload.__msg.70) #27
  %76 = icmp eq ptr %75, null
  br i1 %76, label %178, label %77

77:                                               ; preds = %73
  store ptr @devlink_nl_cmd_reload.__msg.70, ptr %75, align 4
  br label %178

78:                                               ; preds = %57
  %79 = load ptr, ptr %31, align 4
  %80 = getelementptr inbounds %struct.devlink_ops, ptr %79, i32 0, i32 2
  %81 = load volatile i32, ptr %80, align 4
  %82 = shl nuw nsw i32 1, %65
  %83 = and i32 %81, %82
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %90

85:                                               ; preds = %78
  %86 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %87 = load ptr, ptr %86, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_reload.__msg.71) #27
  %88 = icmp eq ptr %87, null
  br i1 %88, label %178, label %89

89:                                               ; preds = %85
  store ptr @devlink_nl_cmd_reload.__msg.71, ptr %87, align 4
  br label %178

90:                                               ; preds = %78
  %91 = icmp eq i32 %30, 1
  %92 = and i1 %91, %64
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = load ptr, ptr %20, align 4
  br label %100

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %97 = load ptr, ptr %96, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_reload.__msg.72) #27
  %98 = icmp eq ptr %97, null
  br i1 %98, label %178, label %99

99:                                               ; preds = %95
  store ptr @devlink_nl_cmd_reload.__msg.72, ptr %97, align 4
  br label %178

100:                                              ; preds = %93, %46
  %101 = phi ptr [ %21, %46 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %46 ], [ %65, %93 ]
  %103 = getelementptr ptr, ptr %101, i32 139
  %104 = load ptr, ptr %103, align 4
  %105 = icmp eq ptr %104, null
  %106 = getelementptr ptr, ptr %101, i32 138
  %107 = load ptr, ptr %106, align 4
  %108 = icmp eq ptr %107, null
  %109 = select i1 %105, i1 %108, i1 false
  br i1 %109, label %110, label %114

110:                                              ; preds = %100
  %111 = getelementptr ptr, ptr %101, i32 140
  %112 = load ptr, ptr %111, align 4
  %113 = icmp eq ptr %112, null
  br i1 %113, label %160, label %114

114:                                              ; preds = %110, %100
  %115 = phi ptr [ null, %110 ], [ %107, %100 ]
  %116 = getelementptr ptr, ptr %101, i32 140
  %117 = load ptr, ptr %116, align 4
  %118 = icmp ne ptr %104, null
  %119 = zext i1 %118 to i32
  %120 = icmp ne ptr %115, null
  %121 = zext i1 %120 to i32
  %122 = add nuw nsw i32 %121, %119
  %123 = icmp ne ptr %117, null
  %124 = zext i1 %123 to i32
  %125 = add nuw nsw i32 %122, %124
  %126 = icmp ugt i32 %125, 1
  br i1 %126, label %127, label %132

127:                                              ; preds = %114
  %128 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %129 = load ptr, ptr %128, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_netns_get.__msg) #27
  %130 = icmp eq ptr %129, null
  br i1 %130, label %157, label %131

131:                                              ; preds = %127
  store ptr @devlink_netns_get.__msg, ptr %129, align 4
  br label %157

132:                                              ; preds = %114
  br i1 %118, label %133, label %137

133:                                              ; preds = %132
  %134 = getelementptr i8, ptr %104, i32 4
  %135 = load i32, ptr %134, align 4
  %136 = call ptr @get_net_ns_by_pid(i32 noundef %135) #27
  br label %145

137:                                              ; preds = %132
  br i1 %120, label %148, label %138

138:                                              ; preds = %137
  br i1 %123, label %139, label %144

139:                                              ; preds = %138
  %140 = getelementptr i8, ptr %117, i32 4
  %141 = load i32, ptr %140, align 4
  %142 = call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %141) #27
  %143 = icmp eq ptr %142, null
  br i1 %143, label %148, label %145

144:                                              ; preds = %138
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3941, i32 noundef 9, ptr noundef null) #27
  br label %148

145:                                              ; preds = %139, %133
  %146 = phi ptr [ %136, %133 ], [ %142, %139 ]
  %147 = icmp ugt ptr %146, inttoptr (i32 -4096 to ptr)
  br i1 %147, label %148, label %153

148:                                              ; preds = %145, %144, %139, %137
  %149 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %150 = load ptr, ptr %149, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_netns_get.__msg.73) #27
  %151 = icmp eq ptr %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %148
  store ptr @devlink_netns_get.__msg.73, ptr %150, align 4
  br label %157

153:                                              ; preds = %145
  %154 = getelementptr inbounds %struct.net, ptr %146, i32 0, i32 11
  %155 = load ptr, ptr %154, align 4
  %156 = call zeroext i1 @netlink_ns_capable(ptr noundef %0, ptr noundef %155, i32 noundef 12) #27
  br i1 %156, label %160, label %157

157:                                              ; preds = %153, %152, %148, %131, %127
  %158 = phi ptr [ inttoptr (i32 -1 to ptr), %153 ], [ inttoptr (i32 -22 to ptr), %148 ], [ inttoptr (i32 -22 to ptr), %152 ], [ inttoptr (i32 -22 to ptr), %127 ], [ inttoptr (i32 -22 to ptr), %131 ]
  %159 = ptrtoint ptr %158 to i32
  br label %178

160:                                              ; preds = %153, %110
  %161 = phi ptr [ null, %110 ], [ %146, %153 ]
  %162 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %163 = load ptr, ptr %162, align 4
  %164 = call fastcc i32 @devlink_reload(ptr noundef %6, ptr noundef %161, i32 noundef %30, i32 noundef %102, ptr noundef nonnull %3, ptr noundef %163)
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %178

166:                                              ; preds = %160
  %167 = load ptr, ptr %20, align 4
  %168 = getelementptr ptr, ptr %167, i32 153
  %169 = load ptr, ptr %168, align 4
  %170 = icmp eq ptr %169, null
  br i1 %170, label %171, label %175

171:                                              ; preds = %166
  %172 = getelementptr ptr, ptr %167, i32 155
  %173 = load ptr, ptr %172, align 4
  %174 = icmp eq ptr %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %171, %166
  %176 = load i32, ptr %3, align 4
  %177 = call fastcc i32 @devlink_nl_reload_actions_performed_snd(ptr noundef %6, i32 noundef %176, ptr noundef %1)
  br label %178

178:                                              ; preds = %175, %171, %160, %157, %99, %95, %89, %85, %77, %73, %72, %68, %45, %41, %18, %14, %2
  %179 = phi i32 [ %159, %157 ], [ %177, %175 ], [ -95, %2 ], [ %12, %18 ], [ %12, %14 ], [ -95, %45 ], [ -95, %41 ], [ %164, %160 ], [ 0, %171 ], [ -22, %95 ], [ -22, %99 ], [ -95, %85 ], [ -95, %89 ], [ -95, %73 ], [ -95, %77 ], [ -22, %68 ], [ -22, %72 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %179
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_param_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 6
  %6 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr ptr, ptr %7, i32 81
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %2
  %12 = getelementptr i8, ptr %9, i32 4
  br label %13

13:                                               ; preds = %17, %11
  %14 = phi ptr [ %5, %11 ], [ %15, %17 ]
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %5
  br i1 %16, label %41, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.devlink_param_item, ptr %15, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.devlink_param, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @strcmp(ptr noundef %21, ptr noundef %12) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %13

24:                                               ; preds = %17
  %25 = icmp eq ptr %15, null
  br i1 %25, label %41, label %26

26:                                               ; preds = %24
  %27 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %28 = icmp eq ptr %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = load i32, ptr %1, align 4
  %33 = tail call fastcc i32 @devlink_nl_param_fill(ptr noundef nonnull %27, ptr noundef %4, i32 noundef 0, ptr noundef nonnull %15, i32 noundef 38, i32 noundef %31, i32 noundef %32, i32 noundef 0)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  tail call void @kfree_skb_reason(ptr noundef nonnull %27, i32 noundef 0) #27
  br label %41

36:                                               ; preds = %29
  %37 = load i32, ptr %30, align 4
  %38 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %39 = tail call i32 @netlink_unicast(ptr noundef %38, ptr noundef nonnull %27, i32 noundef %37, i32 noundef 64) #27
  %40 = tail call i32 @llvm.smin.i32(i32 %39, i32 0) #27
  br label %41

41:                                               ; preds = %36, %35, %26, %24, %13, %2
  %42 = phi i32 [ %33, %35 ], [ %40, %36 ], [ -22, %24 ], [ -12, %26 ], [ -22, %2 ], [ -22, %13 ]
  ret i32 %42
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_param_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %11

10:                                               ; preds = %77, %2
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %86

11:                                               ; preds = %77, %8
  %12 = phi ptr [ %6, %8 ], [ %79, %77 ]
  %13 = phi i32 [ 0, %8 ], [ %78, %77 ]
  %14 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 22
  %15 = load volatile i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %27, %11
  %18 = phi i32 [ %25, %27 ], [ %15, %11 ]
  %19 = add i32 %18, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  br label %20

20:                                               ; preds = %20, %17
  %21 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 %18, i32 %19, ptr elementtype(i32) %14) #27, !srcloc !17
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %29, label %27, !prof !10

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %27, %24, %11
  %30 = phi i32 [ 0, %11 ], [ %18, %24 ], [ 0, %27 ]
  %31 = add i32 %30, 1
  %32 = or i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34, !prof !10

34:                                               ; preds = %29
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 0) #27
  br label %35

35:                                               ; preds = %34, %29
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %77, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 20
  call void @mutex_lock(ptr noundef %38) #27
  %39 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 6
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, %39
  br i1 %41, label %67, label %42

42:                                               ; preds = %63, %37
  %43 = phi ptr [ %65, %63 ], [ %40, %37 ]
  %44 = phi i32 [ %64, %63 ], [ %13, %37 ]
  %45 = icmp slt i32 %44, %5
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = load ptr, ptr %1, align 4
  %48 = getelementptr inbounds %struct.sk_buff, ptr %47, i32 0, i32 3, i32 12
  %49 = load i32, ptr %48, align 4
  %50 = load ptr, ptr %9, align 4
  %51 = getelementptr inbounds %struct.nlmsghdr, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 4
  %53 = call fastcc i32 @devlink_nl_param_fill(ptr noundef %0, ptr noundef nonnull %12, i32 noundef 0, ptr noundef %43, i32 noundef 38, i32 noundef %49, i32 noundef %52, i32 noundef 2)
  switch i32 %53, label %54 [
    i32 -95, label %63
    i32 0, label %63
  ]

54:                                               ; preds = %46
  call void @mutex_unlock(ptr noundef %38) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %55 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %56 = extractvalue { i32, i32, i32 } %55, 0
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = icmp sgt i32 %56, 0
  br i1 %59, label %81, label %60, !prof !10

60:                                               ; preds = %58
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %81

61:                                               ; preds = %54
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %62 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %62) #27
  br label %81

63:                                               ; preds = %46, %46, %42
  %64 = add i32 %44, 1
  %65 = load ptr, ptr %43, align 4
  %66 = icmp eq ptr %65, %39
  br i1 %66, label %67, label %42

67:                                               ; preds = %63, %37
  %68 = phi i32 [ %13, %37 ], [ %64, %63 ]
  call void @mutex_unlock(ptr noundef %38) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %69 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %70 = extractvalue { i32, i32, i32 } %69, 0
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = icmp sgt i32 %70, 0
  br i1 %73, label %77, label %74, !prof !10

74:                                               ; preds = %72
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %77

75:                                               ; preds = %67
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %76 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %76) #27
  br label %77

77:                                               ; preds = %75, %74, %72, %35
  %78 = phi i32 [ %13, %35 ], [ %68, %72 ], [ %68, %74 ], [ %68, %75 ]
  %79 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %80 = icmp eq ptr %79, null
  br i1 %80, label %10, label %11

81:                                               ; preds = %61, %60, %58
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %82 = icmp eq i32 %53, -90
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  store i32 %44, ptr %4, align 4
  %84 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %85 = load i32, ptr %84, align 8
  br label %86

86:                                               ; preds = %83, %81, %10
  %87 = phi i32 [ %85, %83 ], [ %53, %81 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %87
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_param_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 6
  %6 = tail call fastcc i32 @__devlink_nl_cmd_param_set_doit(ptr noundef %4, i32 noundef 0, ptr noundef %5, ptr noundef %1, i32 noundef 40)
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_param_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 1
  %6 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr ptr, ptr %7, i32 81
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %45, label %11

11:                                               ; preds = %2
  %12 = getelementptr i8, ptr %9, i32 4
  br label %13

13:                                               ; preds = %17, %11
  %14 = phi ptr [ %5, %11 ], [ %15, %17 ]
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %5
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.devlink_param_item, ptr %15, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.devlink_param, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @strcmp(ptr noundef %21, ptr noundef %12) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %13

24:                                               ; preds = %17
  %25 = icmp eq ptr %15, null
  br i1 %25, label %45, label %26

26:                                               ; preds = %24
  %27 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %28 = icmp eq ptr %27, null
  br i1 %28, label %45, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 3
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 4
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 4
  %36 = load i32, ptr %1, align 4
  %37 = tail call fastcc i32 @devlink_nl_param_fill(ptr noundef nonnull %27, ptr noundef %31, i32 noundef %33, ptr noundef nonnull %15, i32 noundef 47, i32 noundef %35, i32 noundef %36, i32 noundef 0)
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %29
  tail call void @kfree_skb_reason(ptr noundef nonnull %27, i32 noundef 0) #27
  br label %45

40:                                               ; preds = %29
  %41 = load i32, ptr %34, align 4
  %42 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %43 = tail call i32 @netlink_unicast(ptr noundef %42, ptr noundef nonnull %27, i32 noundef %41, i32 noundef 64) #27
  %44 = tail call i32 @llvm.smin.i32(i32 %43, i32 0) #27
  br label %45

45:                                               ; preds = %40, %39, %26, %24, %13, %2
  %46 = phi i32 [ %37, %39 ], [ %44, %40 ], [ -22, %24 ], [ -12, %26 ], [ -22, %2 ], [ -22, %13 ]
  ret i32 %46
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_param_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %11

10:                                               ; preds = %92, %2
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %101

11:                                               ; preds = %92, %8
  %12 = phi ptr [ %6, %8 ], [ %94, %92 ]
  %13 = phi i32 [ 0, %8 ], [ %93, %92 ]
  %14 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 22
  %15 = load volatile i32, ptr %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %27, %11
  %18 = phi i32 [ %25, %27 ], [ %15, %11 ]
  %19 = add i32 %18, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  br label %20

20:                                               ; preds = %20, %17
  %21 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 %18, i32 %19, ptr elementtype(i32) %14) #27, !srcloc !17
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %29, label %27, !prof !10

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %27, %24, %11
  %30 = phi i32 [ 0, %11 ], [ %18, %24 ], [ 0, %27 ]
  %31 = add i32 %30, 1
  %32 = or i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34, !prof !10

34:                                               ; preds = %29
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 0) #27
  br label %35

35:                                               ; preds = %34, %29
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %92, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 20
  call void @mutex_lock(ptr noundef %38) #27
  %39 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, %39
  br i1 %41, label %82, label %46

42:                                               ; preds = %78, %46
  %43 = phi i32 [ %48, %46 ], [ %79, %78 ]
  %44 = load ptr, ptr %47, align 4
  %45 = icmp eq ptr %44, %39
  br i1 %45, label %82, label %46

46:                                               ; preds = %42, %37
  %47 = phi ptr [ %44, %42 ], [ %40, %37 ]
  %48 = phi i32 [ %43, %42 ], [ %13, %37 ]
  %49 = getelementptr inbounds %struct.devlink_port, ptr %47, i32 0, i32 1
  %50 = load ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, %49
  br i1 %51, label %42, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.devlink_port, ptr %47, i32 0, i32 3
  %54 = getelementptr inbounds %struct.devlink_port, ptr %47, i32 0, i32 4
  br label %55

55:                                               ; preds = %78, %52
  %56 = phi ptr [ %50, %52 ], [ %80, %78 ]
  %57 = phi i32 [ %48, %52 ], [ %79, %78 ]
  %58 = icmp slt i32 %57, %5
  br i1 %58, label %78, label %59

59:                                               ; preds = %55
  %60 = load ptr, ptr %53, align 4
  %61 = load i32, ptr %54, align 4
  %62 = load ptr, ptr %1, align 4
  %63 = getelementptr inbounds %struct.sk_buff, ptr %62, i32 0, i32 3, i32 12
  %64 = load i32, ptr %63, align 4
  %65 = load ptr, ptr %9, align 4
  %66 = getelementptr inbounds %struct.nlmsghdr, ptr %65, i32 0, i32 3
  %67 = load i32, ptr %66, align 4
  %68 = call fastcc i32 @devlink_nl_param_fill(ptr noundef %0, ptr noundef %60, i32 noundef %61, ptr noundef %56, i32 noundef 47, i32 noundef %64, i32 noundef %67, i32 noundef 2)
  switch i32 %68, label %69 [
    i32 -95, label %78
    i32 0, label %78
  ]

69:                                               ; preds = %59
  call void @mutex_unlock(ptr noundef %38) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %70 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %71 = extractvalue { i32, i32, i32 } %70, 0
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = icmp sgt i32 %71, 0
  br i1 %74, label %96, label %75, !prof !10

75:                                               ; preds = %73
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %96

76:                                               ; preds = %69
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %77 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %77) #27
  br label %96

78:                                               ; preds = %59, %59, %55
  %79 = add i32 %57, 1
  %80 = load ptr, ptr %56, align 4
  %81 = icmp eq ptr %80, %49
  br i1 %81, label %42, label %55

82:                                               ; preds = %42, %37
  %83 = phi i32 [ %13, %37 ], [ %43, %42 ]
  call void @mutex_unlock(ptr noundef %38) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !14
  %84 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %14, ptr %14, i32 1, ptr elementtype(i32) %14) #27, !srcloc !15
  %85 = extractvalue { i32, i32, i32 } %84, 0
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  %88 = icmp sgt i32 %85, 0
  br i1 %88, label %92, label %89, !prof !10

89:                                               ; preds = %87
  call void @refcount_warn_saturate(ptr noundef %14, i32 noundef 3) #27
  br label %92

90:                                               ; preds = %82
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %91 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 23
  call void @complete(ptr noundef %91) #27
  br label %92

92:                                               ; preds = %90, %89, %87, %35
  %93 = phi i32 [ %13, %35 ], [ %83, %87 ], [ %83, %89 ], [ %83, %90 ]
  %94 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %95 = icmp eq ptr %94, null
  br i1 %95, label %10, label %11

96:                                               ; preds = %76, %75, %73
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %97 = icmp eq i32 %68, -90
  br i1 %97, label %98, label %101

98:                                               ; preds = %96
  store i32 %57, ptr %4, align 4
  %99 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %100 = load i32, ptr %99, align 8
  br label %101

101:                                              ; preds = %98, %96, %10
  %102 = phi i32 [ %100, %98 ], [ %68, %96 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %102
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_port_param_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr %struct.genl_info, ptr %1, i32 0, i32 7, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 4
  %8 = load i32, ptr %7, align 4
  %9 = getelementptr inbounds %struct.devlink_port, ptr %4, i32 0, i32 1
  %10 = tail call fastcc i32 @__devlink_nl_cmd_param_set_doit(ptr noundef %6, i32 noundef %8, ptr noundef %9, ptr noundef %1, i32 noundef 49)
  ret i32 %10
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_region_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 88
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %73, label %10

10:                                               ; preds = %2
  %11 = getelementptr ptr, ptr %6, i32 3
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %12, i32 4
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 1
  br label %18

18:                                               ; preds = %22, %14
  %19 = phi ptr [ %17, %14 ], [ %20, %22 ]
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, %17
  br i1 %21, label %73, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.devlink_port, ptr %20, i32 0, i32 4
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq i32 %24, %16
  br i1 %25, label %26, label %18

26:                                               ; preds = %22
  %27 = icmp eq ptr %20, null
  br i1 %27, label %73, label %28

28:                                               ; preds = %26
  %29 = getelementptr i8, ptr %8, i32 4
  %30 = getelementptr inbounds %struct.devlink_port, ptr %20, i32 0, i32 2
  br label %31

31:                                               ; preds = %35, %28
  %32 = phi ptr [ %30, %28 ], [ %33, %35 ]
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, %30
  br i1 %34, label %73, label %35

35:                                               ; preds = %31
  %36 = getelementptr i8, ptr %33, i32 8
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr %37, align 4
  %39 = tail call i32 @strcmp(ptr noundef %38, ptr noundef %29) #27
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %54, label %31

41:                                               ; preds = %10
  %42 = getelementptr i8, ptr %8, i32 4
  %43 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 7
  br label %44

44:                                               ; preds = %48, %41
  %45 = phi ptr [ %43, %41 ], [ %46, %48 ]
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %43
  br i1 %47, label %73, label %48

48:                                               ; preds = %44
  %49 = getelementptr i8, ptr %46, i32 8
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr %50, align 4
  %52 = tail call i32 @strcmp(ptr noundef %51, ptr noundef %42) #27
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %44

54:                                               ; preds = %48, %35
  %55 = phi ptr [ %46, %48 ], [ %33, %35 ]
  %56 = getelementptr i8, ptr %55, i32 -8
  %57 = icmp eq ptr %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %54
  %59 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %60 = icmp eq ptr %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %63 = load i32, ptr %62, align 4
  %64 = load i32, ptr %1, align 4
  %65 = tail call fastcc i32 @devlink_nl_region_fill(ptr noundef nonnull %59, ptr noundef %4, i32 noundef %63, i32 noundef %64, i32 noundef 0, ptr noundef nonnull %56)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  tail call void @kfree_skb_reason(ptr noundef nonnull %59, i32 noundef 0) #27
  br label %73

68:                                               ; preds = %61
  %69 = load i32, ptr %62, align 4
  %70 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %71 = tail call i32 @netlink_unicast(ptr noundef %70, ptr noundef nonnull %59, i32 noundef %69, i32 noundef 64) #27
  %72 = tail call i32 @llvm.smin.i32(i32 %71, i32 0) #27
  br label %73

73:                                               ; preds = %68, %67, %58, %54, %44, %31, %26, %18, %2
  %74 = phi i32 [ %65, %67 ], [ %72, %68 ], [ -22, %2 ], [ -19, %26 ], [ -22, %54 ], [ -12, %58 ], [ -22, %44 ], [ -22, %31 ], [ -19, %18 ]
  ret i32 %74
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_region_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %110, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %10

10:                                               ; preds = %106, %8
  %11 = phi ptr [ %6, %8 ], [ %108, %106 ]
  %12 = phi i32 [ 0, %8 ], [ %107, %106 ]
  %13 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 22
  %14 = load volatile i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %26, %10
  %17 = phi i32 [ %24, %26 ], [ %14, %10 ]
  %18 = add i32 %17, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  br label %19

19:                                               ; preds = %19, %16
  %20 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %17, i32 %18, ptr elementtype(i32) %13) #27, !srcloc !17
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %19

23:                                               ; preds = %19
  %24 = extractvalue { i32, i32 } %20, 1
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %28, label %26, !prof !10

26:                                               ; preds = %23
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %23, %10
  %29 = phi i32 [ 0, %10 ], [ %17, %23 ], [ 0, %26 ]
  %30 = add i32 %29, 1
  %31 = or i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33, !prof !10

33:                                               ; preds = %28
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 0) #27
  br label %34

34:                                               ; preds = %33, %28
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %106, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 20
  call void @mutex_lock(ptr noundef %37) #27
  %38 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 7
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %38
  br i1 %40, label %59, label %41

41:                                               ; preds = %55, %36
  %42 = phi i32 [ %56, %55 ], [ %12, %36 ]
  %43 = phi ptr [ %57, %55 ], [ %39, %36 ]
  %44 = icmp slt i32 %42, %5
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = getelementptr i8, ptr %43, i32 -8
  %47 = load ptr, ptr %1, align 4
  %48 = getelementptr inbounds %struct.sk_buff, ptr %47, i32 0, i32 3, i32 12
  %49 = load i32, ptr %48, align 4
  %50 = load ptr, ptr %9, align 4
  %51 = getelementptr inbounds %struct.nlmsghdr, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 4
  %53 = call fastcc i32 @devlink_nl_region_fill(ptr noundef %0, ptr noundef nonnull %11, i32 noundef %49, i32 noundef %52, i32 noundef 2, ptr noundef %46) #27
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %94

55:                                               ; preds = %45, %41
  %56 = add i32 %42, 1
  %57 = load ptr, ptr %43, align 4
  %58 = icmp eq ptr %57, %38
  br i1 %58, label %59, label %41

59:                                               ; preds = %55, %36
  %60 = phi i32 [ %12, %36 ], [ %56, %55 ]
  %61 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 1
  %62 = load ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, %61
  br i1 %63, label %94, label %64

64:                                               ; preds = %90, %59
  %65 = phi i32 [ %91, %90 ], [ %60, %59 ]
  %66 = phi ptr [ %92, %90 ], [ %62, %59 ]
  %67 = getelementptr inbounds %struct.devlink_port, ptr %66, i32 0, i32 2
  %68 = getelementptr inbounds %struct.devlink_port, ptr %66, i32 0, i32 3
  %69 = load ptr, ptr %67, align 4
  %70 = icmp eq ptr %69, %67
  br i1 %70, label %90, label %71

71:                                               ; preds = %86, %64
  %72 = phi i32 [ %87, %86 ], [ %65, %64 ]
  %73 = phi ptr [ %88, %86 ], [ %69, %64 ]
  %74 = icmp slt i32 %72, %5
  br i1 %74, label %86, label %75

75:                                               ; preds = %71
  %76 = getelementptr i8, ptr %73, i32 -8
  %77 = load ptr, ptr %68, align 4
  %78 = load ptr, ptr %1, align 4
  %79 = getelementptr inbounds %struct.sk_buff, ptr %78, i32 0, i32 3, i32 12
  %80 = load i32, ptr %79, align 4
  %81 = load ptr, ptr %9, align 4
  %82 = getelementptr inbounds %struct.nlmsghdr, ptr %81, i32 0, i32 3
  %83 = load i32, ptr %82, align 4
  %84 = call fastcc i32 @devlink_nl_region_fill(ptr noundef %0, ptr noundef %77, i32 noundef %80, i32 noundef %83, i32 noundef 2, ptr noundef %76) #27
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %94

86:                                               ; preds = %75, %71
  %87 = add i32 %72, 1
  %88 = load ptr, ptr %73, align 4
  %89 = icmp eq ptr %88, %67
  br i1 %89, label %90, label %71

90:                                               ; preds = %86, %64
  %91 = phi i32 [ %65, %64 ], [ %87, %86 ]
  %92 = load ptr, ptr %66, align 4
  %93 = icmp eq ptr %92, %61
  br i1 %93, label %94, label %64

94:                                               ; preds = %90, %75, %59, %45
  %95 = phi i32 [ %60, %59 ], [ %72, %75 ], [ %91, %90 ], [ %42, %45 ]
  %96 = phi i1 [ true, %59 ], [ false, %75 ], [ true, %90 ], [ false, %45 ]
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %97 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %98 = extractvalue { i32, i32, i32 } %97, 0
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %103, label %100

100:                                              ; preds = %94
  %101 = icmp sgt i32 %98, 0
  br i1 %101, label %105, label %102, !prof !10

102:                                              ; preds = %100
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %105

103:                                              ; preds = %94
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %104 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %104) #27
  br label %105

105:                                              ; preds = %103, %102, %100
  br i1 %96, label %106, label %110

106:                                              ; preds = %105, %34
  %107 = phi i32 [ %12, %34 ], [ %95, %105 ]
  %108 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %109 = icmp eq ptr %108, null
  br i1 %109, label %110, label %10

110:                                              ; preds = %106, %105, %2
  %111 = phi i32 [ 0, %2 ], [ %107, %106 ], [ %95, %105 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %111, ptr %4, align 4
  %112 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %113 = load i32, ptr %112, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %113
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_region_new(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 0, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store ptr null, ptr %4, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr ptr, ptr %8, i32 88
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %14 = load ptr, ptr %13, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_region_new.__msg) #27
  %15 = icmp eq ptr %14, null
  br i1 %15, label %200, label %16

16:                                               ; preds = %12
  store ptr @devlink_nl_cmd_region_new.__msg, ptr %14, align 4
  br label %200

17:                                               ; preds = %2
  %18 = getelementptr i8, ptr %10, i32 4
  %19 = getelementptr ptr, ptr %8, i32 3
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %17
  %23 = getelementptr i8, ptr %20, i32 4
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 1
  br label %26

26:                                               ; preds = %30, %22
  %27 = phi ptr [ %25, %22 ], [ %28, %30 ]
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %200, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.devlink_port, ptr %28, i32 0, i32 4
  %32 = load i32, ptr %31, align 4
  %33 = icmp eq i32 %32, %24
  br i1 %33, label %34, label %26

34:                                               ; preds = %30
  %35 = icmp eq ptr %28, null
  br i1 %35, label %200, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.devlink_port, ptr %28, i32 0, i32 2
  br label %38

38:                                               ; preds = %42, %36
  %39 = phi ptr [ %37, %36 ], [ %40, %42 ]
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, %37
  br i1 %41, label %66, label %42

42:                                               ; preds = %38
  %43 = getelementptr i8, ptr %40, i32 8
  %44 = load ptr, ptr %43, align 8
  %45 = load ptr, ptr %44, align 4
  %46 = tail call i32 @strcmp(ptr noundef %45, ptr noundef %18) #27
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %60, label %38

48:                                               ; preds = %17
  %49 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 7
  br label %50

50:                                               ; preds = %54, %48
  %51 = phi ptr [ %49, %48 ], [ %52, %54 ]
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, %49
  br i1 %53, label %66, label %54

54:                                               ; preds = %50
  %55 = getelementptr i8, ptr %52, i32 8
  %56 = load ptr, ptr %55, align 8
  %57 = load ptr, ptr %56, align 4
  %58 = tail call i32 @strcmp(ptr noundef %57, ptr noundef %18) #27
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %50

60:                                               ; preds = %54, %42
  %61 = phi ptr [ %56, %54 ], [ %44, %42 ]
  %62 = phi ptr [ null, %54 ], [ %28, %42 ]
  %63 = phi ptr [ %52, %54 ], [ %40, %42 ]
  %64 = getelementptr i8, ptr %63, i32 -8
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %71

66:                                               ; preds = %60, %50, %38
  %67 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %68 = load ptr, ptr %67, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_region_new.__msg.74) #27
  %69 = icmp eq ptr %68, null
  br i1 %69, label %200, label %70

70:                                               ; preds = %66
  store ptr @devlink_nl_cmd_region_new.__msg.74, ptr %68, align 4
  br label %200

71:                                               ; preds = %60
  %72 = getelementptr i8, ptr %63, i32 8
  %73 = getelementptr inbounds %struct.devlink_region_ops, ptr %61, i32 0, i32 2
  %74 = load ptr, ptr %73, align 4
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %78 = load ptr, ptr %77, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_region_new.__msg.75) #27
  %79 = icmp eq ptr %78, null
  br i1 %79, label %200, label %80

80:                                               ; preds = %76
  store ptr @devlink_nl_cmd_region_new.__msg.75, ptr %78, align 4
  br label %200

81:                                               ; preds = %71
  %82 = getelementptr i8, ptr %63, i32 24
  %83 = load i32, ptr %82, align 8
  %84 = getelementptr i8, ptr %63, i32 20
  %85 = load i32, ptr %84, align 4
  %86 = icmp eq i32 %83, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %81
  %88 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %89 = load ptr, ptr %88, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_region_new.__msg.76) #27
  %90 = icmp eq ptr %89, null
  br i1 %90, label %200, label %91

91:                                               ; preds = %87
  store ptr @devlink_nl_cmd_region_new.__msg.76, ptr %89, align 4
  br label %200

92:                                               ; preds = %81
  %93 = getelementptr ptr, ptr %8, i32 92
  %94 = load ptr, ptr %93, align 4
  %95 = icmp eq ptr %94, null
  br i1 %95, label %129, label %96

96:                                               ; preds = %92
  %97 = getelementptr i8, ptr %94, i32 4
  %98 = load i32, ptr %97, align 4
  store i32 %98, ptr %3, align 4
  %99 = getelementptr i8, ptr %63, i32 12
  br label %100

100:                                              ; preds = %104, %96
  %101 = phi ptr [ %99, %96 ], [ %102, %104 ]
  %102 = load ptr, ptr %101, align 4
  %103 = icmp eq ptr %102, %99
  br i1 %103, label %115, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.devlink_snapshot, ptr %102, i32 0, i32 3
  %106 = load i32, ptr %105, align 4
  %107 = icmp eq i32 %106, %98
  br i1 %107, label %108, label %100

108:                                              ; preds = %104
  %109 = icmp eq ptr %102, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %112 = load ptr, ptr %111, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_region_new.__msg.77) #27
  %113 = icmp eq ptr %112, null
  br i1 %113, label %200, label %114

114:                                              ; preds = %110
  store ptr @devlink_nl_cmd_region_new.__msg.77, ptr %112, align 4
  br label %200

115:                                              ; preds = %108, %100
  %116 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 16
  %117 = tail call ptr @xa_load(ptr noundef %116, i32 noundef %98) #27
  %118 = icmp eq ptr %117, null
  br i1 %118, label %119, label %200

119:                                              ; preds = %115
  %120 = tail call ptr @xa_store(ptr noundef %116, i32 noundef %98, ptr noundef nonnull inttoptr (i32 1 to ptr), i32 noundef 3264) #27
  %121 = ptrtoint ptr %120 to i32
  %122 = and i32 %121, 3
  %123 = icmp ne i32 %122, 2
  %124 = icmp ult ptr %120, inttoptr (i32 -16378 to ptr)
  %125 = ashr i32 %121, 2
  %126 = or i1 %124, %123
  %127 = icmp ult ptr %120, inttoptr (i32 4 to ptr)
  %128 = or i1 %127, %126
  br i1 %128, label %140, label %200

129:                                              ; preds = %92
  %130 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 16
  tail call void @_raw_spin_lock(ptr noundef %130) #27
  %131 = call i32 @__xa_alloc(ptr noundef %130, ptr noundef nonnull %3, ptr noundef nonnull inttoptr (i32 3 to ptr), [2 x i32] [i32 -1, i32 0], i32 noundef 3264) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !25
  %132 = load i16, ptr %130, align 4
  %133 = add i16 %132, 1
  store i16 %133, ptr %130, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !26
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !27
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !28
  %134 = icmp eq i32 %131, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %137 = load ptr, ptr %136, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_region_new.__msg.78) #27
  %138 = icmp eq ptr %137, null
  br i1 %138, label %200, label %139

139:                                              ; preds = %135
  store ptr @devlink_nl_cmd_region_new.__msg.78, ptr %137, align 4
  br label %200

140:                                              ; preds = %129, %119
  %141 = load ptr, ptr %72, align 8
  br i1 %21, label %148, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %struct.devlink_port_region_ops, ptr %141, i32 0, i32 2
  %144 = load ptr, ptr %143, align 4
  %145 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %146 = load ptr, ptr %145, align 4
  %147 = call i32 %144(ptr noundef nonnull %62, ptr noundef %141, ptr noundef %146, ptr noundef nonnull %4) #27
  br label %154

148:                                              ; preds = %140
  %149 = getelementptr inbounds %struct.devlink_region_ops, ptr %141, i32 0, i32 2
  %150 = load ptr, ptr %149, align 4
  %151 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %152 = load ptr, ptr %151, align 4
  %153 = call i32 %150(ptr noundef %6, ptr noundef %141, ptr noundef %152, ptr noundef nonnull %4) #27
  br label %154

154:                                              ; preds = %148, %142
  %155 = phi i32 [ %147, %142 ], [ %153, %148 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %195

157:                                              ; preds = %154
  %158 = load ptr, ptr %4, align 4
  %159 = load i32, ptr %3, align 4
  %160 = call fastcc i32 @__devlink_region_snapshot_create(ptr noundef nonnull %64, ptr noundef %158, i32 noundef %159)
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %190

162:                                              ; preds = %157
  br i1 %95, label %163, label %200

163:                                              ; preds = %162
  %164 = load i32, ptr %3, align 4
  %165 = getelementptr i8, ptr %63, i32 12
  br label %166

166:                                              ; preds = %170, %163
  %167 = phi ptr [ %165, %163 ], [ %168, %170 ]
  %168 = load ptr, ptr %167, align 4
  %169 = icmp eq ptr %168, %165
  br i1 %169, label %176, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.devlink_snapshot, ptr %168, i32 0, i32 3
  %172 = load i32, ptr %171, align 4
  %173 = icmp eq i32 %172, %164
  br i1 %173, label %174, label %166

174:                                              ; preds = %170
  %175 = icmp eq ptr %168, null
  br i1 %175, label %176, label %177, !prof !11

176:                                              ; preds = %174, %166
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5722, i32 noundef 9, ptr noundef null) #27
  br label %200

177:                                              ; preds = %174
  %178 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %179 = load i32, ptr %178, align 4
  %180 = load i32, ptr %1, align 4
  %181 = call fastcc ptr @devlink_nl_region_notify_build(ptr noundef nonnull %64, ptr noundef nonnull %168, i32 noundef 44, i32 noundef %179, i32 noundef %180)
  %182 = icmp ugt ptr %181, inttoptr (i32 -4096 to ptr)
  %183 = ptrtoint ptr %181 to i32
  br i1 %182, label %198, label %184

184:                                              ; preds = %177
  %185 = load i32, ptr %178, align 4
  %186 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %187 = call i32 @netlink_unicast(ptr noundef %186, ptr noundef %181, i32 noundef %185, i32 noundef 64) #27
  %188 = call i32 @llvm.smin.i32(i32 %187, i32 0) #27
  %189 = icmp sgt i32 %187, -1
  br i1 %189, label %200, label %198

190:                                              ; preds = %157
  %191 = load ptr, ptr %72, align 8
  %192 = getelementptr inbounds %struct.devlink_region_ops, ptr %191, i32 0, i32 1
  %193 = load ptr, ptr %192, align 4
  %194 = load ptr, ptr %4, align 4
  call void %193(ptr noundef %194) #27
  br label %195

195:                                              ; preds = %190, %154
  %196 = phi i32 [ %155, %154 ], [ %160, %190 ]
  %197 = load i32, ptr %3, align 4
  call fastcc void @__devlink_snapshot_id_decrement(ptr noundef %6, i32 noundef %197)
  br label %200

198:                                              ; preds = %184, %177
  %199 = phi i32 [ %188, %184 ], [ %183, %177 ]
  call fastcc void @devlink_region_snapshot_del(ptr noundef nonnull %64, ptr noundef nonnull %168)
  br label %200

200:                                              ; preds = %198, %195, %184, %176, %162, %139, %135, %119, %115, %114, %110, %91, %87, %80, %76, %70, %66, %34, %26, %16, %12
  %201 = phi i32 [ %196, %195 ], [ %199, %198 ], [ -22, %16 ], [ -22, %12 ], [ -19, %34 ], [ -22, %70 ], [ -22, %66 ], [ -95, %80 ], [ -95, %76 ], [ -28, %91 ], [ -28, %87 ], [ -17, %114 ], [ -17, %110 ], [ %131, %139 ], [ %131, %135 ], [ -22, %176 ], [ 0, %184 ], [ 0, %162 ], [ -17, %115 ], [ %125, %119 ], [ -19, %26 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %201
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_region_del(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr ptr, ptr %6, i32 88
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %92, label %10

10:                                               ; preds = %2
  %11 = getelementptr ptr, ptr %6, i32 92
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %92, label %14

14:                                               ; preds = %10
  %15 = getelementptr i8, ptr %8, i32 4
  %16 = getelementptr i8, ptr %12, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr ptr, ptr %6, i32 3
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %14
  %22 = getelementptr i8, ptr %19, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 1
  br label %25

25:                                               ; preds = %29, %21
  %26 = phi ptr [ %24, %21 ], [ %27, %29 ]
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, %24
  br i1 %28, label %92, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.devlink_port, ptr %27, i32 0, i32 4
  %31 = load i32, ptr %30, align 4
  %32 = icmp eq i32 %31, %23
  br i1 %32, label %33, label %25

33:                                               ; preds = %29
  %34 = icmp eq ptr %27, null
  br i1 %34, label %92, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.devlink_port, ptr %27, i32 0, i32 2
  br label %37

37:                                               ; preds = %41, %35
  %38 = phi ptr [ %36, %35 ], [ %39, %41 ]
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %36
  br i1 %40, label %92, label %41

41:                                               ; preds = %37
  %42 = getelementptr i8, ptr %39, i32 8
  %43 = load ptr, ptr %42, align 8
  %44 = load ptr, ptr %43, align 4
  %45 = tail call i32 @strcmp(ptr noundef %44, ptr noundef %15) #27
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %59, label %37

47:                                               ; preds = %14
  %48 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 7
  br label %49

49:                                               ; preds = %53, %47
  %50 = phi ptr [ %48, %47 ], [ %51, %53 ]
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, %48
  br i1 %52, label %92, label %53

53:                                               ; preds = %49
  %54 = getelementptr i8, ptr %51, i32 8
  %55 = load ptr, ptr %54, align 8
  %56 = load ptr, ptr %55, align 4
  %57 = tail call i32 @strcmp(ptr noundef %56, ptr noundef %15) #27
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %49

59:                                               ; preds = %53, %41
  %60 = phi ptr [ %51, %53 ], [ %39, %41 ]
  %61 = getelementptr i8, ptr %60, i32 -8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %92, label %63

63:                                               ; preds = %59
  %64 = getelementptr i8, ptr %60, i32 12
  br label %65

65:                                               ; preds = %69, %63
  %66 = phi ptr [ %64, %63 ], [ %67, %69 ]
  %67 = load ptr, ptr %66, align 4
  %68 = icmp eq ptr %67, %64
  br i1 %68, label %92, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.devlink_snapshot, ptr %67, i32 0, i32 3
  %71 = load i32, ptr %70, align 4
  %72 = icmp eq i32 %71, %17
  br i1 %72, label %73, label %65

73:                                               ; preds = %69
  %74 = icmp eq ptr %67, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.devlink_snapshot, ptr %67, i32 0, i32 3
  %77 = load ptr, ptr %61, align 8
  tail call fastcc void @devlink_nl_region_notify(ptr noundef nonnull %61, ptr noundef nonnull %67, i32 noundef 45) #27
  %78 = getelementptr i8, ptr %60, i32 24
  %79 = load i32, ptr %78, align 8
  %80 = add i32 %79, -1
  store i32 %80, ptr %78, align 8
  %81 = getelementptr inbounds %struct.list_head, ptr %67, i32 0, i32 1
  %82 = load ptr, ptr %81, align 4
  %83 = load ptr, ptr %67, align 4
  %84 = getelementptr inbounds %struct.list_head, ptr %83, i32 0, i32 1
  store ptr %82, ptr %84, align 4
  store volatile ptr %83, ptr %82, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %67, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %81, align 4
  %85 = getelementptr i8, ptr %60, i32 8
  %86 = load ptr, ptr %85, align 8
  %87 = getelementptr inbounds %struct.devlink_region_ops, ptr %86, i32 0, i32 1
  %88 = load ptr, ptr %87, align 4
  %89 = getelementptr inbounds %struct.devlink_snapshot, ptr %67, i32 0, i32 2
  %90 = load ptr, ptr %89, align 4
  tail call void %88(ptr noundef %90) #27
  %91 = load i32, ptr %76, align 4
  tail call fastcc void @__devlink_snapshot_id_decrement(ptr noundef %77, i32 noundef %91) #27
  tail call void @kfree(ptr noundef nonnull %67) #27
  br label %92

92:                                               ; preds = %75, %73, %65, %59, %49, %37, %33, %25, %10, %2
  %93 = phi i32 [ 0, %75 ], [ -22, %10 ], [ -22, %2 ], [ -19, %33 ], [ -22, %59 ], [ -22, %73 ], [ -22, %65 ], [ -22, %49 ], [ -22, %37 ], [ -19, %25 ]
  ret i32 %93
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_region_read_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 4
  %9 = load ptr, ptr %8, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #27
  store i64 0, ptr %7, align 8, !annotation !9
  %10 = getelementptr inbounds %struct.genl_dumpit_info, ptr %9, i32 0, i32 2
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %13 = load i64, ptr %12, align 4
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  %14 = tail call fastcc ptr @devlink_get_from_attrs(ptr noundef %11)
  %15 = icmp ugt ptr %14, inttoptr (i32 -4096 to ptr)
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = ptrtoint ptr %14 to i32
  br label %203

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 20
  tail call void @mutex_lock(ptr noundef %19) #27
  %20 = getelementptr ptr, ptr %11, i32 88
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %192, label %23

23:                                               ; preds = %18
  %24 = getelementptr ptr, ptr %11, i32 92
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %192, label %27

27:                                               ; preds = %23
  %28 = load ptr, ptr %10, align 4
  %29 = getelementptr ptr, ptr %28, i32 3
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %59, label %32

32:                                               ; preds = %27
  %33 = getelementptr i8, ptr %30, i32 4
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 1
  br label %36

36:                                               ; preds = %40, %32
  %37 = phi ptr [ %35, %32 ], [ %38, %40 ]
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, %35
  br i1 %39, label %192, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.devlink_port, ptr %38, i32 0, i32 4
  %42 = load i32, ptr %41, align 4
  %43 = icmp eq i32 %42, %34
  br i1 %43, label %44, label %36

44:                                               ; preds = %40
  %45 = icmp eq ptr %38, null
  br i1 %45, label %192, label %46

46:                                               ; preds = %44
  %47 = getelementptr i8, ptr %21, i32 4
  %48 = getelementptr inbounds %struct.devlink_port, ptr %38, i32 0, i32 2
  br label %49

49:                                               ; preds = %53, %46
  %50 = phi ptr [ %48, %46 ], [ %51, %53 ]
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, %48
  br i1 %52, label %192, label %53

53:                                               ; preds = %49
  %54 = getelementptr i8, ptr %51, i32 8
  %55 = load ptr, ptr %54, align 8
  %56 = load ptr, ptr %55, align 4
  %57 = tail call i32 @strcmp(ptr noundef %56, ptr noundef %47) #27
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %72, label %49

59:                                               ; preds = %27
  %60 = getelementptr i8, ptr %21, i32 4
  %61 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 7
  br label %62

62:                                               ; preds = %66, %59
  %63 = phi ptr [ %61, %59 ], [ %64, %66 ]
  %64 = load ptr, ptr %63, align 4
  %65 = icmp eq ptr %64, %61
  br i1 %65, label %192, label %66

66:                                               ; preds = %62
  %67 = getelementptr i8, ptr %64, i32 8
  %68 = load ptr, ptr %67, align 8
  %69 = load ptr, ptr %68, align 4
  %70 = tail call i32 @strcmp(ptr noundef %69, ptr noundef %60) #27
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %62

72:                                               ; preds = %66, %53
  %73 = phi ptr [ %60, %66 ], [ %47, %53 ]
  %74 = phi ptr [ %64, %66 ], [ %51, %53 ]
  %75 = getelementptr i8, ptr %74, i32 -8
  %76 = icmp eq ptr %75, null
  br i1 %76, label %192, label %77

77:                                               ; preds = %72
  %78 = getelementptr ptr, ptr %11, i32 96
  %79 = load ptr, ptr %78, align 4
  %80 = icmp eq ptr %79, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %77
  %82 = getelementptr ptr, ptr %11, i32 97
  %83 = load ptr, ptr %82, align 4
  %84 = icmp eq ptr %83, null
  br i1 %84, label %100, label %85

85:                                               ; preds = %81
  %86 = icmp eq i64 %13, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %85
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 0, ptr %6, align 8, !annotation !9
  %88 = call i32 @nla_memcpy(ptr noundef nonnull %6, ptr noundef nonnull %79, i32 noundef 8) #27
  %89 = load i64, ptr %6, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %90 = load ptr, ptr %78, align 4
  br label %91

91:                                               ; preds = %87, %85
  %92 = phi ptr [ %79, %85 ], [ %90, %87 ]
  %93 = phi i64 [ %13, %85 ], [ %89, %87 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !9
  %94 = call i32 @nla_memcpy(ptr noundef nonnull %5, ptr noundef %92, i32 noundef 8) #27
  %95 = load i64, ptr %5, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  %96 = load ptr, ptr %82, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 0, ptr %4, align 8, !annotation !9
  %97 = call i32 @nla_memcpy(ptr noundef nonnull %4, ptr noundef %96, i32 noundef 8) #27
  %98 = load i64, ptr %4, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %99 = add i64 %98, %95
  br label %100

100:                                              ; preds = %91, %81, %77
  %101 = phi i64 [ %93, %91 ], [ %13, %81 ], [ %13, %77 ]
  %102 = phi i64 [ %99, %91 ], [ -1, %81 ], [ -1, %77 ]
  %103 = getelementptr i8, ptr %74, i32 32
  %104 = load i64, ptr %103, align 8
  %105 = call i64 @llvm.umin.i64(i64 %102, i64 %104)
  %106 = icmp eq i64 %101, %105
  br i1 %106, label %192, label %107

107:                                              ; preds = %100
  %108 = load ptr, ptr %1, align 4
  %109 = getelementptr inbounds %struct.sk_buff, ptr %108, i32 0, i32 3, i32 12
  %110 = load i32, ptr %109, align 4
  %111 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  %112 = load ptr, ptr %111, align 4
  %113 = getelementptr inbounds %struct.nlmsghdr, ptr %112, i32 0, i32 3
  %114 = load i32, ptr %113, align 4
  %115 = call ptr @genlmsg_put(ptr noundef %0, i32 noundef %110, i32 noundef %114, ptr noundef nonnull @devlink_nl_family, i32 noundef 6, i8 noundef zeroext 46) #27
  %116 = icmp eq ptr %115, null
  br i1 %116, label %192, label %117

117:                                              ; preds = %107
  %118 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 18
  %119 = load ptr, ptr %118, align 4
  %120 = getelementptr inbounds %struct.device, ptr %119, i32 0, i32 5
  %121 = load ptr, ptr %120, align 4
  %122 = load ptr, ptr %121, align 4
  %123 = call i32 @strlen(ptr noundef %122) #27
  %124 = add i32 %123, 1
  %125 = call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %124, ptr noundef %122) #27
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %177

127:                                              ; preds = %117
  %128 = load ptr, ptr %118, align 4
  %129 = getelementptr inbounds %struct.device, ptr %128, i32 0, i32 3
  %130 = load ptr, ptr %129, align 4
  %131 = icmp eq ptr %130, null
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = load ptr, ptr %128, align 4
  br label %134

134:                                              ; preds = %132, %127
  %135 = phi ptr [ %133, %132 ], [ %130, %127 ]
  %136 = call i32 @strlen(ptr noundef %135) #27
  %137 = add i32 %136, 1
  %138 = call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %137, ptr noundef %135) #27
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %177

140:                                              ; preds = %134
  %141 = getelementptr i8, ptr %74, i32 -4
  %142 = load ptr, ptr %141, align 4
  %143 = icmp eq ptr %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.devlink_port, ptr %142, i32 0, i32 4
  %146 = load i32, ptr %145, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 %146, ptr %3, align 4
  %147 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %177

149:                                              ; preds = %144, %140
  %150 = call fastcc i32 @nla_put_string(ptr noundef %0, i32 noundef 88, ptr noundef %73)
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %177

152:                                              ; preds = %149
  %153 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %154 = load ptr, ptr %153, align 8
  %155 = call i32 @nla_put(ptr noundef %0, i32 noundef 93, i32 noundef 0, ptr noundef null) #27
  %156 = icmp slt i32 %155, 0
  %157 = icmp eq ptr %154, null
  %158 = select i1 %156, i1 true, i1 %157
  br i1 %158, label %177, label %159

159:                                              ; preds = %152
  %160 = call fastcc i32 @devlink_nl_region_read_snapshot_fill(ptr noundef %0, ptr noundef nonnull %75, ptr noundef %11, i64 noundef %101, i64 noundef %105, ptr noundef nonnull %7)
  switch i32 %160, label %177 [
    i32 -90, label %161
    i32 0, label %161
  ]

161:                                              ; preds = %159, %159
  %162 = load i64, ptr %7, align 8
  %163 = icmp eq i64 %162, %101
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  store i64 %162, ptr %12, align 4
  %165 = load ptr, ptr %153, align 8
  %166 = ptrtoint ptr %165 to i32
  %167 = ptrtoint ptr %154 to i32
  %168 = sub i32 %166, %167
  %169 = trunc i32 %168 to i16
  store i16 %169, ptr %154, align 2
  %170 = getelementptr i8, ptr %115, i32 -20
  %171 = load ptr, ptr %153, align 8
  %172 = ptrtoint ptr %171 to i32
  %173 = ptrtoint ptr %170 to i32
  %174 = sub i32 %172, %173
  store i32 %174, ptr %170, align 4
  call void @mutex_unlock(ptr noundef %19) #27
  call void @devlink_put(ptr noundef %14)
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %175 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %176 = load i32, ptr %175, align 8
  br label %205

177:                                              ; preds = %161, %159, %152, %149, %144, %134, %117
  %178 = phi i32 [ %147, %144 ], [ %150, %149 ], [ %160, %159 ], [ -90, %152 ], [ -22, %161 ], [ -90, %117 ], [ -90, %134 ]
  %179 = getelementptr i8, ptr %115, i32 -20
  %180 = icmp eq ptr %179, null
  br i1 %180, label %192, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %183 = load ptr, ptr %182, align 4
  %184 = icmp ugt ptr %183, %179
  br i1 %184, label %185, label %187, !prof !11

185:                                              ; preds = %181
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %186 = load ptr, ptr %182, align 4
  br label %187

187:                                              ; preds = %185, %181
  %188 = phi ptr [ %186, %185 ], [ %183, %181 ]
  %189 = ptrtoint ptr %179 to i32
  %190 = ptrtoint ptr %188 to i32
  %191 = sub i32 %189, %190
  call void @skb_trim(ptr noundef %0, i32 noundef %191) #27
  br label %192

192:                                              ; preds = %187, %177, %107, %100, %72, %62, %49, %44, %36, %23, %18
  %193 = phi i32 [ -22, %23 ], [ -22, %18 ], [ -19, %44 ], [ -22, %72 ], [ 0, %100 ], [ -90, %107 ], [ %178, %177 ], [ %178, %187 ], [ -22, %62 ], [ -22, %49 ], [ -19, %36 ]
  call void @mutex_unlock(ptr noundef %19) #27
  %194 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 22
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %194) #27, !srcloc !14
  %195 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %194, ptr %194, i32 1, ptr elementtype(i32) %194) #27, !srcloc !15
  %196 = extractvalue { i32, i32, i32 } %195, 0
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %201, label %198

198:                                              ; preds = %192
  %199 = icmp sgt i32 %196, 0
  br i1 %199, label %203, label %200, !prof !10

200:                                              ; preds = %198
  call void @refcount_warn_saturate(ptr noundef %194, i32 noundef 3) #27
  br label %203

201:                                              ; preds = %192
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %202 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 23
  call void @complete(ptr noundef %202) #27
  br label %203

203:                                              ; preds = %201, %200, %198, %16
  %204 = phi i32 [ %17, %16 ], [ %193, %198 ], [ %193, %200 ], [ %193, %201 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %205

205:                                              ; preds = %203, %164
  %206 = phi i32 [ %204, %203 ], [ %176, %164 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #27
  ret i32 %206
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_info_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.devlink, ptr %4, i32 0, i32 14
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink_ops, ptr %6, i32 0, i32 24
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %12 = icmp eq ptr %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = load i32, ptr %1, align 4
  %17 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = tail call fastcc i32 @devlink_nl_info_fill(ptr noundef nonnull %11, ptr noundef %4, i32 noundef %15, i32 noundef %16, i32 noundef 0, ptr noundef %18)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  tail call void @kfree_skb_reason(ptr noundef nonnull %11, i32 noundef 0) #27
  br label %27

22:                                               ; preds = %13
  %23 = load i32, ptr %14, align 4
  %24 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %25 = tail call i32 @netlink_unicast(ptr noundef %24, ptr noundef nonnull %11, i32 noundef %23, i32 noundef 64) #27
  %26 = tail call i32 @llvm.smin.i32(i32 %25, i32 0) #27
  br label %27

27:                                               ; preds = %22, %21, %10, %2
  %28 = phi i32 [ %19, %21 ], [ %26, %22 ], [ -95, %2 ], [ -12, %10 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_info_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  %10 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 6
  br label %12

11:                                               ; preds = %75, %2
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %84

12:                                               ; preds = %75, %8
  %13 = phi i32 [ 0, %8 ], [ %76, %75 ]
  %14 = phi ptr [ %6, %8 ], [ %77, %75 ]
  %15 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 22
  %16 = load volatile i32, ptr %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %28, %12
  %19 = phi i32 [ %26, %28 ], [ %16, %12 ]
  %20 = add i32 %19, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %15) #27, !srcloc !14
  br label %21

21:                                               ; preds = %21, %18
  %22 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %15, ptr %15, i32 %19, i32 %20, ptr elementtype(i32) %15) #27, !srcloc !17
  %23 = extractvalue { i32, i32 } %22, 0
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = extractvalue { i32, i32 } %22, 1
  %27 = icmp eq i32 %26, %19
  br i1 %27, label %30, label %28, !prof !10

28:                                               ; preds = %25
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %30, label %18

30:                                               ; preds = %28, %25, %12
  %31 = phi i32 [ 0, %12 ], [ %19, %25 ], [ 0, %28 ]
  %32 = add i32 %31, 1
  %33 = or i32 %32, %31
  %34 = icmp sgt i32 %33, -1
  br i1 %34, label %36, label %35, !prof !10

35:                                               ; preds = %30
  call void @refcount_warn_saturate(ptr noundef %15, i32 noundef 0) #27
  br label %36

36:                                               ; preds = %35, %30
  %37 = icmp eq i32 %31, 0
  br i1 %37, label %75, label %38

38:                                               ; preds = %36
  %39 = icmp slt i32 %13, %5
  br i1 %39, label %65, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 14
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.devlink_ops, ptr %42, i32 0, i32 24
  %44 = load ptr, ptr %43, align 4
  %45 = icmp eq ptr %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 20
  call void @mutex_lock(ptr noundef %47) #27
  %48 = load ptr, ptr %1, align 4
  %49 = getelementptr inbounds %struct.sk_buff, ptr %48, i32 0, i32 3, i32 12
  %50 = load i32, ptr %49, align 4
  %51 = load ptr, ptr %9, align 4
  %52 = getelementptr inbounds %struct.nlmsghdr, ptr %51, i32 0, i32 3
  %53 = load i32, ptr %52, align 4
  %54 = load ptr, ptr %10, align 4
  %55 = call fastcc i32 @devlink_nl_info_fill(ptr noundef %0, ptr noundef nonnull %14, i32 noundef %50, i32 noundef %53, i32 noundef 2, ptr noundef %54)
  call void @mutex_unlock(ptr noundef %47) #27
  switch i32 %55, label %56 [
    i32 -95, label %65
    i32 0, label %65
  ]

56:                                               ; preds = %46
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %15) #27, !srcloc !14
  %57 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %15, ptr %15, i32 1, ptr elementtype(i32) %15) #27, !srcloc !15
  %58 = extractvalue { i32, i32, i32 } %57, 0
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = icmp sgt i32 %58, 0
  br i1 %61, label %79, label %62, !prof !10

62:                                               ; preds = %60
  call void @refcount_warn_saturate(ptr noundef %15, i32 noundef 3) #27
  br label %79

63:                                               ; preds = %56
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %64 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 23
  call void @complete(ptr noundef %64) #27
  br label %79

65:                                               ; preds = %46, %46, %40, %38
  %66 = add i32 %13, 1
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %15) #27, !srcloc !14
  %67 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %15, ptr %15, i32 1, ptr elementtype(i32) %15) #27, !srcloc !15
  %68 = extractvalue { i32, i32, i32 } %67, 0
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  %71 = icmp sgt i32 %68, 0
  br i1 %71, label %75, label %72, !prof !10

72:                                               ; preds = %70
  call void @refcount_warn_saturate(ptr noundef %15, i32 noundef 3) #27
  br label %75

73:                                               ; preds = %65
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %74 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 23
  call void @complete(ptr noundef %74) #27
  br label %75

75:                                               ; preds = %73, %72, %70, %36
  %76 = phi i32 [ %13, %36 ], [ %66, %70 ], [ %66, %72 ], [ %66, %73 ]
  %77 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %78 = icmp eq ptr %77, null
  br i1 %78, label %11, label %12

79:                                               ; preds = %63, %62, %60
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %80 = icmp eq i32 %55, -90
  br i1 %80, label %81, label %84

81:                                               ; preds = %79
  store i32 %13, ptr %4, align 4
  %82 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %83 = load i32, ptr %82, align 8
  br label %84

84:                                               ; preds = %81, %79, %11
  %85 = phi i32 [ %83, %81 ], [ %55, %79 ], [ 0, %11 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %85
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = tail call fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %4, ptr noundef %6) #27
  %8 = icmp eq ptr %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %11 = icmp eq ptr %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %14 = load i32, ptr %13, align 4
  %15 = load i32, ptr %1, align 4
  %16 = tail call fastcc i32 @devlink_nl_health_reporter_fill(ptr noundef nonnull %10, ptr noundef nonnull %7, i32 noundef 52, i32 noundef %14, i32 noundef %15, i32 noundef 0)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  tail call void @kfree_skb_reason(ptr noundef nonnull %10, i32 noundef 0) #27
  br label %24

19:                                               ; preds = %12
  %20 = load i32, ptr %13, align 4
  %21 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %22 = tail call i32 @netlink_unicast(ptr noundef %21, ptr noundef nonnull %10, i32 noundef %20, i32 noundef 64) #27
  %23 = tail call i32 @llvm.smin.i32(i32 %22, i32 0) #27
  br label %24

24:                                               ; preds = %19, %18, %9
  %25 = phi i32 [ %16, %18 ], [ %23, %19 ], [ -12, %9 ]
  tail call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %7)
  br label %26

26:                                               ; preds = %24, %2
  %27 = phi i32 [ %25, %24 ], [ -22, %2 ]
  ret i32 %27
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %81, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %10

10:                                               ; preds = %77, %8
  %11 = phi ptr [ %6, %8 ], [ %79, %77 ]
  %12 = phi i32 [ 0, %8 ], [ %78, %77 ]
  %13 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 22
  %14 = load volatile i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %26, %10
  %17 = phi i32 [ %24, %26 ], [ %14, %10 ]
  %18 = add i32 %17, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  br label %19

19:                                               ; preds = %19, %16
  %20 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %17, i32 %18, ptr elementtype(i32) %13) #27, !srcloc !17
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %19

23:                                               ; preds = %19
  %24 = extractvalue { i32, i32 } %20, 1
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %28, label %26, !prof !10

26:                                               ; preds = %23
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %23, %10
  %29 = phi i32 [ 0, %10 ], [ %17, %23 ], [ 0, %26 ]
  %30 = add i32 %29, 1
  %31 = or i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33, !prof !10

33:                                               ; preds = %28
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 0) #27
  br label %34

34:                                               ; preds = %33, %28
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %77, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 9
  call void @mutex_lock(ptr noundef %37) #27
  %38 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 8
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %38
  br i1 %40, label %67, label %41

41:                                               ; preds = %63, %36
  %42 = phi ptr [ %65, %63 ], [ %39, %36 ]
  %43 = phi i32 [ %64, %63 ], [ %12, %36 ]
  %44 = icmp slt i32 %43, %5
  br i1 %44, label %63, label %45

45:                                               ; preds = %41
  %46 = load ptr, ptr %1, align 4
  %47 = getelementptr inbounds %struct.sk_buff, ptr %46, i32 0, i32 3, i32 12
  %48 = load i32, ptr %47, align 4
  %49 = load ptr, ptr %9, align 4
  %50 = getelementptr inbounds %struct.nlmsghdr, ptr %49, i32 0, i32 3
  %51 = load i32, ptr %50, align 4
  %52 = call fastcc i32 @devlink_nl_health_reporter_fill(ptr noundef %0, ptr noundef %42, i32 noundef 52, i32 noundef %48, i32 noundef %51, i32 noundef 2)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %45
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %55 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %56 = extractvalue { i32, i32, i32 } %55, 0
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = icmp sgt i32 %56, 0
  br i1 %59, label %161, label %60, !prof !10

60:                                               ; preds = %58
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %161

61:                                               ; preds = %54
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %62 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %62) #27
  br label %161

63:                                               ; preds = %45, %41
  %64 = add i32 %43, 1
  %65 = load ptr, ptr %42, align 4
  %66 = icmp eq ptr %65, %38
  br i1 %66, label %67, label %41

67:                                               ; preds = %63, %36
  %68 = phi i32 [ %12, %36 ], [ %64, %63 ]
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %69 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %70 = extractvalue { i32, i32, i32 } %69, 0
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = icmp sgt i32 %70, 0
  br i1 %73, label %77, label %74, !prof !10

74:                                               ; preds = %72
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %77

75:                                               ; preds = %67
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %76 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %76) #27
  br label %77

77:                                               ; preds = %75, %74, %72, %34
  %78 = phi i32 [ %12, %34 ], [ %68, %72 ], [ %68, %74 ], [ %68, %75 ]
  %79 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %10

81:                                               ; preds = %77, %2
  %82 = phi i32 [ 0, %2 ], [ %78, %77 ]
  store i32 0, ptr %3, align 4
  %83 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %84 = icmp eq ptr %83, null
  br i1 %84, label %161, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %87

87:                                               ; preds = %157, %85
  %88 = phi ptr [ %83, %85 ], [ %159, %157 ]
  %89 = phi i32 [ %82, %85 ], [ %158, %157 ]
  %90 = getelementptr inbounds %struct.devlink, ptr %88, i32 0, i32 22
  %91 = load volatile i32, ptr %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %105, label %93

93:                                               ; preds = %103, %87
  %94 = phi i32 [ %101, %103 ], [ %91, %87 ]
  %95 = add i32 %94, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %90) #27, !srcloc !14
  br label %96

96:                                               ; preds = %96, %93
  %97 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %90, ptr %90, i32 %94, i32 %95, ptr elementtype(i32) %90) #27, !srcloc !17
  %98 = extractvalue { i32, i32 } %97, 0
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %96

100:                                              ; preds = %96
  %101 = extractvalue { i32, i32 } %97, 1
  %102 = icmp eq i32 %101, %94
  br i1 %102, label %105, label %103, !prof !10

103:                                              ; preds = %100
  %104 = icmp eq i32 %101, 0
  br i1 %104, label %105, label %93

105:                                              ; preds = %103, %100, %87
  %106 = phi i32 [ 0, %87 ], [ %94, %100 ], [ 0, %103 ]
  %107 = add i32 %106, 1
  %108 = or i32 %107, %106
  %109 = icmp sgt i32 %108, -1
  br i1 %109, label %111, label %110, !prof !10

110:                                              ; preds = %105
  call void @refcount_warn_saturate(ptr noundef %90, i32 noundef 0) #27
  br label %111

111:                                              ; preds = %110, %105
  %112 = icmp eq i32 %106, 0
  br i1 %112, label %157, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.devlink, ptr %88, i32 0, i32 20
  call void @mutex_lock(ptr noundef %114) #27
  %115 = getelementptr inbounds %struct.devlink, ptr %88, i32 0, i32 1
  %116 = load ptr, ptr %115, align 4
  %117 = icmp eq ptr %116, %115
  br i1 %117, label %155, label %118

118:                                              ; preds = %151, %113
  %119 = phi ptr [ %153, %151 ], [ %116, %113 ]
  %120 = phi i32 [ %152, %151 ], [ %89, %113 ]
  %121 = getelementptr inbounds %struct.devlink_port, ptr %119, i32 0, i32 13
  call void @mutex_lock(ptr noundef %121) #27
  %122 = getelementptr inbounds %struct.devlink_port, ptr %119, i32 0, i32 12
  %123 = load ptr, ptr %122, align 4
  %124 = icmp eq ptr %123, %122
  br i1 %124, label %151, label %125

125:                                              ; preds = %147, %118
  %126 = phi ptr [ %149, %147 ], [ %123, %118 ]
  %127 = phi i32 [ %148, %147 ], [ %120, %118 ]
  %128 = icmp slt i32 %127, %5
  br i1 %128, label %147, label %129

129:                                              ; preds = %125
  %130 = load ptr, ptr %1, align 4
  %131 = getelementptr inbounds %struct.sk_buff, ptr %130, i32 0, i32 3, i32 12
  %132 = load i32, ptr %131, align 4
  %133 = load ptr, ptr %86, align 4
  %134 = getelementptr inbounds %struct.nlmsghdr, ptr %133, i32 0, i32 3
  %135 = load i32, ptr %134, align 4
  %136 = call fastcc i32 @devlink_nl_health_reporter_fill(ptr noundef %0, ptr noundef %126, i32 noundef 52, i32 noundef %132, i32 noundef %135, i32 noundef 2)
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %147, label %138

138:                                              ; preds = %129
  call void @mutex_unlock(ptr noundef %121) #27
  call void @mutex_unlock(ptr noundef %114) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %90) #27, !srcloc !14
  %139 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %90, ptr %90, i32 1, ptr elementtype(i32) %90) #27, !srcloc !15
  %140 = extractvalue { i32, i32, i32 } %139, 0
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %145, label %142

142:                                              ; preds = %138
  %143 = icmp sgt i32 %140, 0
  br i1 %143, label %161, label %144, !prof !10

144:                                              ; preds = %142
  call void @refcount_warn_saturate(ptr noundef %90, i32 noundef 3) #27
  br label %161

145:                                              ; preds = %138
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %146 = getelementptr inbounds %struct.devlink, ptr %88, i32 0, i32 23
  call void @complete(ptr noundef %146) #27
  br label %161

147:                                              ; preds = %129, %125
  %148 = add i32 %127, 1
  %149 = load ptr, ptr %126, align 4
  %150 = icmp eq ptr %149, %122
  br i1 %150, label %151, label %125

151:                                              ; preds = %147, %118
  %152 = phi i32 [ %120, %118 ], [ %148, %147 ]
  call void @mutex_unlock(ptr noundef %121) #27
  %153 = load ptr, ptr %119, align 4
  %154 = icmp eq ptr %153, %115
  br i1 %154, label %155, label %118

155:                                              ; preds = %151, %113
  %156 = phi i32 [ %89, %113 ], [ %152, %151 ]
  call void @mutex_unlock(ptr noundef %114) #27
  call void @devlink_put(ptr noundef nonnull %88)
  br label %157

157:                                              ; preds = %155, %111
  %158 = phi i32 [ %156, %155 ], [ %89, %111 ]
  %159 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %160 = icmp eq ptr %159, null
  br i1 %160, label %161, label %87

161:                                              ; preds = %157, %145, %144, %142, %81, %61, %60, %58
  %162 = phi i32 [ %43, %58 ], [ %43, %60 ], [ %43, %61 ], [ %127, %142 ], [ %127, %144 ], [ %127, %145 ], [ %82, %81 ], [ %158, %157 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %162, ptr %4, align 4
  %163 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %164 = load i32, ptr %163, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %164
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = tail call fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %5, ptr noundef %7) #27
  %9 = icmp eq ptr %8, null
  br i1 %9, label %68, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.devlink_health_reporter, ptr %8, i32 0, i32 2
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %12, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %25

16:                                               ; preds = %10
  %17 = load ptr, ptr %6, align 4
  %18 = getelementptr ptr, ptr %17, i32 120
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %67

21:                                               ; preds = %16
  %22 = getelementptr ptr, ptr %17, i32 121
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %67

25:                                               ; preds = %21, %10
  %26 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %12, i32 0, i32 2
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  %29 = load ptr, ptr %6, align 4
  br i1 %28, label %30, label %34

30:                                               ; preds = %25
  %31 = getelementptr ptr, ptr %29, i32 141
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %67

34:                                               ; preds = %30, %25
  %35 = getelementptr ptr, ptr %29, i32 120
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #27
  store i64 0, ptr %3, align 8, !annotation !9
  %39 = call i32 @nla_memcpy(ptr noundef nonnull %3, ptr noundef nonnull %36, i32 noundef 8) #27
  %40 = load i64, ptr %3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  %41 = getelementptr inbounds %struct.devlink_health_reporter, ptr %8, i32 0, i32 7
  store i64 %40, ptr %41, align 8
  %42 = load ptr, ptr %6, align 4
  br label %43

43:                                               ; preds = %38, %34
  %44 = phi ptr [ %42, %38 ], [ %29, %34 ]
  %45 = getelementptr ptr, ptr %44, i32 121
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = getelementptr i8, ptr %46, i32 4
  %50 = load i8, ptr %49, align 1
  %51 = icmp ne i8 %50, 0
  %52 = getelementptr inbounds %struct.devlink_health_reporter, ptr %8, i32 0, i32 8
  %53 = zext i1 %51 to i8
  store i8 %53, ptr %52, align 8
  %54 = load ptr, ptr %6, align 4
  br label %55

55:                                               ; preds = %48, %43
  %56 = phi ptr [ %54, %48 ], [ %44, %43 ]
  %57 = getelementptr ptr, ptr %56, i32 141
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %55
  %61 = getelementptr i8, ptr %58, i32 4
  %62 = load i8, ptr %61, align 1
  %63 = icmp ne i8 %62, 0
  %64 = getelementptr inbounds %struct.devlink_health_reporter, ptr %8, i32 0, i32 9
  %65 = zext i1 %63 to i8
  store i8 %65, ptr %64, align 1
  br label %66

66:                                               ; preds = %60, %55
  call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %8)
  br label %68

67:                                               ; preds = %30, %21, %16
  tail call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %8)
  br label %68

68:                                               ; preds = %67, %66, %2
  %69 = phi i32 [ 0, %66 ], [ -95, %67 ], [ -22, %2 ]
  ret i32 %69
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_recover_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = tail call fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %4, ptr noundef %6) #27
  %8 = icmp eq ptr %7, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 10
  %13 = load i8, ptr %12, align 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 2
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %17, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %15
  %22 = tail call i32 %19(ptr noundef nonnull %7, ptr noundef null, ptr noundef %11) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 14
  %26 = load i64, ptr %25, align 8
  %27 = add i64 %26, 1
  store i64 %27, ptr %25, align 8
  %28 = load volatile i32, ptr @jiffies, align 64
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 15
  store i64 %29, ptr %30, align 8
  store i8 0, ptr %12, align 2
  tail call fastcc void @devlink_recover_notify(ptr noundef nonnull %7) #27
  br label %31

31:                                               ; preds = %24, %21, %15, %9
  %32 = phi i32 [ 0, %24 ], [ 0, %9 ], [ -95, %15 ], [ %22, %21 ]
  tail call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %7)
  br label %33

33:                                               ; preds = %31, %2
  %34 = phi i32 [ %32, %31 ], [ -22, %2 ]
  ret i32 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_diagnose_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = tail call fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %4, ptr noundef %6) #27
  %8 = icmp eq ptr %7, null
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 2
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %11, i32 0, i32 3
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %63, label %15

15:                                               ; preds = %9
  %16 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %17 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %16, i32 noundef 3520, i32 noundef 12) #28
  %18 = icmp eq ptr %17, null
  br i1 %18, label %63, label %19

19:                                               ; preds = %15
  store volatile ptr %17, ptr %17, align 8
  %20 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  store ptr %17, ptr %20, align 4
  %21 = getelementptr inbounds %struct.devlink_fmsg, ptr %17, i32 0, i32 1
  %22 = load i8, ptr %21, align 8, !range !18
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %51

24:                                               ; preds = %19
  %25 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %26 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %25, i32 noundef 3520, i32 noundef 16) #28
  %27 = icmp eq ptr %26, null
  br i1 %27, label %51, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %26, i32 0, i32 1
  store i32 107, ptr %29, align 8
  %30 = load ptr, ptr %20, align 4
  store ptr %26, ptr %20, align 4
  store ptr %17, ptr %26, align 8
  %31 = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  store ptr %30, ptr %31, align 4
  store volatile ptr %26, ptr %30, align 4
  %32 = load ptr, ptr %10, align 4
  %33 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %32, i32 0, i32 3
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = tail call i32 %34(ptr noundef nonnull %7, ptr noundef nonnull %17, ptr noundef %36) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %28
  %40 = load i8, ptr %21, align 8, !range !18
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %51

42:                                               ; preds = %39
  %43 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %44 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %43, i32 noundef 3520, i32 noundef 16) #28
  %45 = icmp eq ptr %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %44, i32 0, i32 1
  store i32 110, ptr %47, align 8
  %48 = load ptr, ptr %20, align 4
  store ptr %44, ptr %20, align 4
  store ptr %17, ptr %44, align 8
  %49 = getelementptr inbounds %struct.list_head, ptr %44, i32 0, i32 1
  store ptr %48, ptr %49, align 4
  store volatile ptr %44, ptr %48, align 4
  %50 = tail call fastcc i32 @devlink_fmsg_snd(ptr noundef nonnull %17, ptr noundef %1)
  br label %51

51:                                               ; preds = %46, %42, %39, %28, %24, %19
  %52 = phi i32 [ %37, %28 ], [ %50, %46 ], [ -12, %24 ], [ -22, %19 ], [ -12, %42 ], [ -22, %39 ]
  %53 = load ptr, ptr %17, align 8
  %54 = icmp eq ptr %53, %17
  br i1 %54, label %62, label %55

55:                                               ; preds = %55, %51
  %56 = phi ptr [ %57, %55 ], [ %53, %51 ]
  %57 = load ptr, ptr %56, align 4
  %58 = getelementptr inbounds %struct.list_head, ptr %56, i32 0, i32 1
  %59 = load ptr, ptr %58, align 4
  %60 = getelementptr inbounds %struct.list_head, ptr %57, i32 0, i32 1
  store ptr %59, ptr %60, align 4
  store volatile ptr %57, ptr %59, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %56, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %58, align 4
  tail call void @kfree(ptr noundef %56) #27
  %61 = icmp eq ptr %57, %17
  br i1 %61, label %62, label %55

62:                                               ; preds = %55, %51
  tail call void @kfree(ptr noundef nonnull %17) #27
  br label %63

63:                                               ; preds = %62, %15, %9
  %64 = phi i32 [ %52, %62 ], [ -95, %9 ], [ -12, %15 ]
  tail call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %7)
  br label %65

65:                                               ; preds = %63, %2
  %66 = phi i32 [ -22, %2 ], [ %64, %63 ]
  ret i32 %66
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_dump_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  %6 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 4
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.genl_dumpit_info, ptr %7, i32 0, i32 2
  %9 = load ptr, ptr %8, align 4
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  %10 = tail call fastcc ptr @devlink_get_from_attrs(ptr noundef %9) #27
  %11 = icmp ugt ptr %10, inttoptr (i32 -4096 to ptr)
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  tail call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  br label %106

13:                                               ; preds = %2
  %14 = tail call fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %10, ptr noundef %9) #27
  %15 = getelementptr inbounds %struct.devlink, ptr %10, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %15) #27, !srcloc !14
  %16 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %15, ptr %15, i32 1, ptr elementtype(i32) %15) #27, !srcloc !15
  %17 = extractvalue { i32, i32, i32 } %16, 0
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = icmp sgt i32 %17, 0
  br i1 %20, label %24, label %21, !prof !10

21:                                               ; preds = %19
  tail call void @refcount_warn_saturate(ptr noundef %15, i32 noundef 3) #27
  br label %24

22:                                               ; preds = %13
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %23 = getelementptr inbounds %struct.devlink, ptr %10, i32 0, i32 23
  tail call void @complete(ptr noundef %23) #27
  br label %24

24:                                               ; preds = %22, %21, %19
  tail call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  %25 = icmp eq ptr %14, null
  br i1 %25, label %106, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.devlink_health_reporter, ptr %14, i32 0, i32 2
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %28, i32 0, i32 2
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %104, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.devlink_health_reporter, ptr %14, i32 0, i32 6
  tail call void @mutex_lock(ptr noundef %33) #27
  %34 = icmp eq i32 %5, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 6
  %37 = load ptr, ptr %36, align 4
  %38 = tail call fastcc i32 @devlink_health_do_dump(ptr noundef nonnull %14, ptr noundef null, ptr noundef %37)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %102

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.devlink_health_reporter, ptr %14, i32 0, i32 11
  %42 = load i64, ptr %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = getelementptr %struct.netlink_callback, ptr %1, i32 0, i32 13, i32 0, i32 1
  store i32 %43, ptr %44, align 4
  br label %45

45:                                               ; preds = %40, %32
  %46 = getelementptr inbounds %struct.devlink_health_reporter, ptr %14, i32 0, i32 5
  %47 = load ptr, ptr %46, align 8
  %48 = icmp eq ptr %47, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = getelementptr %struct.netlink_callback, ptr %1, i32 0, i32 13, i32 0, i32 1
  %51 = load i32, ptr %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.devlink_health_reporter, ptr %14, i32 0, i32 11
  %54 = load i64, ptr %53, align 8
  %55 = icmp eq i64 %54, %52
  br i1 %55, label %61, label %56

56:                                               ; preds = %49, %45
  %57 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 6
  %58 = load ptr, ptr %57, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_health_reporter_dump_get_dumpit.__msg) #27
  %59 = icmp eq ptr %58, null
  br i1 %59, label %102, label %60

60:                                               ; preds = %56
  store ptr @devlink_nl_cmd_health_reporter_dump_get_dumpit.__msg, ptr %58, align 4
  br label %102

61:                                               ; preds = %49
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  %62 = load i32, ptr %4, align 4
  store i32 %62, ptr %3, align 4
  %63 = load ptr, ptr %1, align 4
  %64 = getelementptr inbounds %struct.sk_buff, ptr %63, i32 0, i32 3, i32 12
  %65 = load i32, ptr %64, align 4
  %66 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  %67 = load ptr, ptr %66, align 4
  %68 = getelementptr inbounds %struct.nlmsghdr, ptr %67, i32 0, i32 3
  %69 = load i32, ptr %68, align 4
  %70 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %65, i32 noundef %69, ptr noundef nonnull @devlink_nl_family, i32 noundef 6, i8 noundef zeroext 56) #27
  %71 = icmp eq ptr %70, null
  br i1 %71, label %100, label %72

72:                                               ; preds = %61
  %73 = call fastcc i32 @devlink_fmsg_prepare_skb(ptr noundef nonnull %47, ptr noundef %0, ptr noundef nonnull %3) #27
  switch i32 %73, label %86 [
    i32 -90, label %74
    i32 0, label %74
  ]

74:                                               ; preds = %72, %72
  %75 = load i32, ptr %3, align 4
  %76 = icmp eq i32 %62, %75
  br i1 %76, label %86, label %77

77:                                               ; preds = %74
  store i32 %75, ptr %4, align 4
  %78 = getelementptr i8, ptr %70, i32 -20
  %79 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %80 = load ptr, ptr %79, align 8
  %81 = ptrtoint ptr %80 to i32
  %82 = ptrtoint ptr %78 to i32
  %83 = sub i32 %81, %82
  store i32 %83, ptr %78, align 4
  %84 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %85 = load i32, ptr %84, align 8
  br label %100

86:                                               ; preds = %74, %72
  %87 = getelementptr i8, ptr %70, i32 -20
  %88 = icmp eq ptr %87, null
  br i1 %88, label %100, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %91 = load ptr, ptr %90, align 4
  %92 = icmp ugt ptr %91, %87
  br i1 %92, label %93, label %95, !prof !11

93:                                               ; preds = %89
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %94 = load ptr, ptr %90, align 4
  br label %95

95:                                               ; preds = %93, %89
  %96 = phi ptr [ %94, %93 ], [ %91, %89 ]
  %97 = ptrtoint ptr %87 to i32
  %98 = ptrtoint ptr %96 to i32
  %99 = sub i32 %97, %98
  tail call void @skb_trim(ptr noundef %0, i32 noundef %99) #27
  br label %100

100:                                              ; preds = %95, %86, %77, %61
  %101 = phi i32 [ %85, %77 ], [ %73, %86 ], [ %73, %95 ], [ -90, %61 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  br label %102

102:                                              ; preds = %100, %60, %56, %35
  %103 = phi i32 [ %101, %100 ], [ %38, %35 ], [ -11, %60 ], [ -11, %56 ]
  tail call void @mutex_unlock(ptr noundef %33) #27
  br label %104

104:                                              ; preds = %102, %26
  %105 = phi i32 [ %103, %102 ], [ -95, %26 ]
  tail call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %14)
  br label %106

106:                                              ; preds = %104, %24, %12
  %107 = phi i32 [ %105, %104 ], [ -22, %24 ], [ -22, %12 ]
  ret i32 %107
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_dump_clear_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = tail call fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %4, ptr noundef %6) #27
  %8 = icmp eq ptr %7, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 2
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %11, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 6
  tail call void @mutex_lock(ptr noundef %16) #27
  %17 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 5
  %18 = load ptr, ptr %17, align 8
  %19 = icmp eq ptr %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %15
  %21 = load ptr, ptr %18, align 4
  %22 = icmp eq ptr %21, %18
  br i1 %22, label %30, label %23

23:                                               ; preds = %23, %20
  %24 = phi ptr [ %25, %23 ], [ %21, %20 ]
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  store ptr %27, ptr %28, align 4
  store volatile ptr %25, ptr %27, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %24, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %26, align 4
  tail call void @kfree(ptr noundef %24) #27
  %29 = icmp eq ptr %25, %18
  br i1 %29, label %30, label %23

30:                                               ; preds = %23, %20
  tail call void @kfree(ptr noundef nonnull %18) #27
  store ptr null, ptr %17, align 8
  br label %31

31:                                               ; preds = %30, %15
  tail call void @mutex_unlock(ptr noundef %16) #27
  br label %32

32:                                               ; preds = %31, %9
  %33 = phi i32 [ 0, %31 ], [ -95, %9 ]
  tail call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %7)
  br label %34

34:                                               ; preds = %32, %2
  %35 = phi i32 [ -22, %2 ], [ %33, %32 ]
  ret i32 %35
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_health_reporter_test_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %6 = load ptr, ptr %5, align 4
  %7 = tail call fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %4, ptr noundef %6) #27
  %8 = icmp eq ptr %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.devlink_health_reporter, ptr %7, i32 0, i32 2
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_health_reporter_ops, ptr %11, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %17 = load ptr, ptr %16, align 4
  %18 = tail call i32 %13(ptr noundef nonnull %7, ptr noundef %17) #27
  br label %19

19:                                               ; preds = %15, %9
  %20 = phi i32 [ %18, %15 ], [ -95, %9 ]
  tail call fastcc void @devlink_health_reporter_put(ptr noundef nonnull %7)
  br label %21

21:                                               ; preds = %19, %2
  %22 = phi i32 [ -22, %2 ], [ %20, %19 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_flash_update(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.devlink_flash_notify, align 4
  %4 = alloca %struct.devlink_flash_notify, align 4
  %5 = alloca %struct.devlink_flash_update_params, align 4
  %6 = alloca %struct.nla_bitfield32, align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(12) %5, i8 0, i32 12, i1 false)
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.devlink, ptr %8, i32 0, i32 14
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.devlink_ops, ptr %10, i32 0, i32 25
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr ptr, ptr %16, i32 122
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %84, label %20

20:                                               ; preds = %14
  %21 = load i32, ptr %10, align 4
  %22 = getelementptr ptr, ptr %16, i32 123
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = and i32 %21, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %30 = load ptr, ptr %29, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_flash_update.__msg) #27
  %31 = icmp eq ptr %30, null
  br i1 %31, label %84, label %32

32:                                               ; preds = %28
  store ptr @devlink_nl_cmd_flash_update.__msg, ptr %30, align 4
  %33 = getelementptr inbounds %struct.netlink_ext_ack, ptr %30, i32 0, i32 1
  store ptr %23, ptr %33, align 4
  %34 = getelementptr inbounds %struct.netlink_ext_ack, ptr %30, i32 0, i32 2
  store ptr null, ptr %34, align 4
  br label %84

35:                                               ; preds = %25
  %36 = getelementptr i8, ptr %23, i32 4
  %37 = getelementptr inbounds %struct.devlink_flash_update_params, ptr %5, i32 0, i32 1
  store ptr %36, ptr %37, align 4
  br label %38

38:                                               ; preds = %35, %20
  %39 = getelementptr ptr, ptr %16, i32 152
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %60, label %42

42:                                               ; preds = %38
  %43 = and i32 %21, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %47 = load ptr, ptr %46, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_flash_update.__msg.80) #27
  %48 = icmp eq ptr %47, null
  br i1 %48, label %84, label %49

49:                                               ; preds = %45
  store ptr @devlink_nl_cmd_flash_update.__msg.80, ptr %47, align 4
  %50 = getelementptr inbounds %struct.netlink_ext_ack, ptr %47, i32 0, i32 1
  store ptr %40, ptr %50, align 4
  %51 = getelementptr inbounds %struct.netlink_ext_ack, ptr %47, i32 0, i32 2
  store ptr null, ptr %51, align 4
  br label %84

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 0, ptr %6, align 8, !alias.scope !40, !annotation !9
  %53 = call i32 @nla_memcpy(ptr noundef nonnull %6, ptr noundef nonnull %40, i32 noundef 8) #27
  %54 = load i32, ptr %6, align 8
  %55 = getelementptr inbounds i8, ptr %6, i32 4
  %56 = load i32, ptr %55, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %57 = and i32 %56, %54
  %58 = getelementptr inbounds %struct.devlink_flash_update_params, ptr %5, i32 0, i32 2
  store i32 %57, ptr %58, align 4
  %59 = load ptr, ptr %15, align 4
  br label %60

60:                                               ; preds = %52, %38
  %61 = phi ptr [ %59, %52 ], [ %16, %38 ]
  %62 = getelementptr ptr, ptr %61, i32 122
  %63 = load ptr, ptr %62, align 4
  %64 = getelementptr i8, ptr %63, i32 4
  %65 = getelementptr inbounds %struct.devlink, ptr %8, i32 0, i32 18
  %66 = load ptr, ptr %65, align 4
  %67 = call i32 @request_firmware(ptr noundef nonnull %5, ptr noundef %64, ptr noundef %66) #27
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %71 = load ptr, ptr %70, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_flash_update.__msg.81) #27
  %72 = icmp eq ptr %71, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %69
  store ptr @devlink_nl_cmd_flash_update.__msg.81, ptr %71, align 4
  %74 = getelementptr inbounds %struct.netlink_ext_ack, ptr %71, i32 0, i32 1
  store ptr %63, ptr %74, align 4
  %75 = getelementptr inbounds %struct.netlink_ext_ack, ptr %71, i32 0, i32 2
  store ptr null, ptr %75, align 4
  br label %84

76:                                               ; preds = %60
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false) #27
  call fastcc void @__devlink_flash_update_notify(ptr noundef %8, i32 noundef 58, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #27
  %77 = load ptr, ptr %9, align 4
  %78 = getelementptr inbounds %struct.devlink_ops, ptr %77, i32 0, i32 25
  %79 = load ptr, ptr %78, align 4
  %80 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %81 = load ptr, ptr %80, align 4
  %82 = call i32 %79(ptr noundef %8, ptr noundef nonnull %5, ptr noundef %81) #27
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %3, i8 0, i32 20, i1 false) #27
  call fastcc void @__devlink_flash_update_notify(ptr noundef %8, i32 noundef 59, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #27
  %83 = load ptr, ptr %5, align 4
  call void @release_firmware(ptr noundef %83) #27
  br label %84

84:                                               ; preds = %76, %73, %69, %49, %45, %32, %28, %14, %2
  %85 = phi i32 [ %82, %76 ], [ -95, %2 ], [ -22, %14 ], [ -95, %32 ], [ -95, %28 ], [ -95, %49 ], [ %67, %73 ], [ %67, %69 ], [ -95, %45 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #27
  ret i32 %85
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 11
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %7
  br i1 %9, label %51, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr ptr, ptr %12, i32 130
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %10
  %17 = getelementptr i8, ptr %14, i32 4
  %18 = icmp eq ptr %8, %7
  br i1 %18, label %33, label %19

19:                                               ; preds = %27, %16
  %20 = phi ptr [ %28, %27 ], [ %8, %16 ]
  %21 = getelementptr i8, ptr %20, i32 -8
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.devlink_trap, ptr %22, i32 0, i32 4
  %24 = load ptr, ptr %23, align 4
  %25 = tail call i32 @strcmp(ptr noundef %24, ptr noundef %17) #27
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = load ptr, ptr %20, align 4
  %29 = icmp eq ptr %28, %7
  br i1 %29, label %33, label %19

30:                                               ; preds = %19
  %31 = getelementptr i8, ptr %20, i32 -8
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %30, %27, %16, %10
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_trap_get_doit.__msg) #27
  %34 = icmp eq ptr %4, null
  br i1 %34, label %51, label %35

35:                                               ; preds = %33
  store ptr @devlink_nl_cmd_trap_get_doit.__msg, ptr %4, align 4
  br label %51

36:                                               ; preds = %30
  %37 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %38 = icmp eq ptr %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %41 = load i32, ptr %40, align 4
  %42 = load i32, ptr %1, align 4
  %43 = tail call fastcc i32 @devlink_nl_trap_fill(ptr noundef nonnull %37, ptr noundef %6, ptr noundef nonnull %31, i32 noundef 63, i32 noundef %41, i32 noundef %42, i32 noundef 0)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %39
  %46 = load i32, ptr %40, align 4
  %47 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %48 = tail call i32 @netlink_unicast(ptr noundef %47, ptr noundef nonnull %37, i32 noundef %46, i32 noundef 64) #27
  %49 = tail call i32 @llvm.smin.i32(i32 %48, i32 0) #27
  br label %51

50:                                               ; preds = %39
  tail call void @kfree_skb_reason(ptr noundef nonnull %37, i32 noundef 0) #27
  br label %51

51:                                               ; preds = %50, %45, %36, %35, %33, %2
  %52 = phi i32 [ %43, %50 ], [ %49, %45 ], [ -95, %2 ], [ -2, %35 ], [ -2, %33 ], [ -12, %36 ]
  ret i32 %52
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %6 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %7 = icmp eq ptr %6, null
  br i1 %7, label %82, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %10

10:                                               ; preds = %78, %8
  %11 = phi ptr [ %6, %8 ], [ %80, %78 ]
  %12 = phi i32 [ 0, %8 ], [ %79, %78 ]
  %13 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 22
  %14 = load volatile i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %26, %10
  %17 = phi i32 [ %24, %26 ], [ %14, %10 ]
  %18 = add i32 %17, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  br label %19

19:                                               ; preds = %19, %16
  %20 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %17, i32 %18, ptr elementtype(i32) %13) #27, !srcloc !17
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %19

23:                                               ; preds = %19
  %24 = extractvalue { i32, i32 } %20, 1
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %28, label %26, !prof !10

26:                                               ; preds = %23
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %23, %10
  %29 = phi i32 [ 0, %10 ], [ %17, %23 ], [ 0, %26 ]
  %30 = add i32 %29, 1
  %31 = or i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33, !prof !10

33:                                               ; preds = %28
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 0) #27
  br label %34

34:                                               ; preds = %33, %28
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %78, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 20
  call void @mutex_lock(ptr noundef %37) #27
  %38 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 11
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, %38
  br i1 %40, label %68, label %41

41:                                               ; preds = %64, %36
  %42 = phi ptr [ %66, %64 ], [ %39, %36 ]
  %43 = phi i32 [ %65, %64 ], [ %12, %36 ]
  %44 = icmp slt i32 %43, %5
  br i1 %44, label %64, label %45

45:                                               ; preds = %41
  %46 = getelementptr i8, ptr %42, i32 -8
  %47 = load ptr, ptr %1, align 4
  %48 = getelementptr inbounds %struct.sk_buff, ptr %47, i32 0, i32 3, i32 12
  %49 = load i32, ptr %48, align 4
  %50 = load ptr, ptr %9, align 4
  %51 = getelementptr inbounds %struct.nlmsghdr, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 4
  %53 = call fastcc i32 @devlink_nl_trap_fill(ptr noundef %0, ptr noundef nonnull %11, ptr noundef %46, i32 noundef 63, i32 noundef %49, i32 noundef %52, i32 noundef 2)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %45
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %56 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %57 = extractvalue { i32, i32, i32 } %56, 0
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = icmp sgt i32 %57, 0
  br i1 %60, label %82, label %61, !prof !10

61:                                               ; preds = %59
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %82

62:                                               ; preds = %55
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %63 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %63) #27
  br label %82

64:                                               ; preds = %45, %41
  %65 = add i32 %43, 1
  %66 = load ptr, ptr %42, align 4
  %67 = icmp eq ptr %66, %38
  br i1 %67, label %68, label %41

68:                                               ; preds = %64, %36
  %69 = phi i32 [ %12, %36 ], [ %65, %64 ]
  call void @mutex_unlock(ptr noundef %37) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !14
  %70 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !15
  %71 = extractvalue { i32, i32, i32 } %70, 0
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = icmp sgt i32 %71, 0
  br i1 %74, label %78, label %75, !prof !10

75:                                               ; preds = %73
  call void @refcount_warn_saturate(ptr noundef %13, i32 noundef 3) #27
  br label %78

76:                                               ; preds = %68
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %77 = getelementptr inbounds %struct.devlink, ptr %11, i32 0, i32 23
  call void @complete(ptr noundef %77) #27
  br label %78

78:                                               ; preds = %76, %75, %73, %34
  %79 = phi i32 [ %12, %34 ], [ %69, %73 ], [ %69, %75 ], [ %69, %76 ]
  %80 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %10

82:                                               ; preds = %78, %62, %61, %59, %2
  %83 = phi i32 [ %43, %59 ], [ %43, %61 ], [ %43, %62 ], [ 0, %2 ], [ %79, %78 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %83, ptr %4, align 4
  %84 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %85 = load i32, ptr %84, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %85
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 11
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %7
  br i1 %9, label %66, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr ptr, ptr %12, i32 130
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %10
  %17 = getelementptr i8, ptr %14, i32 4
  %18 = icmp eq ptr %8, %7
  br i1 %18, label %33, label %19

19:                                               ; preds = %27, %16
  %20 = phi ptr [ %28, %27 ], [ %8, %16 ]
  %21 = getelementptr i8, ptr %20, i32 -8
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.devlink_trap, ptr %22, i32 0, i32 4
  %24 = load ptr, ptr %23, align 4
  %25 = tail call i32 @strcmp(ptr noundef %24, ptr noundef %17) #27
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = load ptr, ptr %20, align 4
  %29 = icmp eq ptr %28, %7
  br i1 %29, label %33, label %19

30:                                               ; preds = %19
  %31 = getelementptr i8, ptr %20, i32 -8
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %30, %27, %16, %10
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_trap_set_doit.__msg) #27
  %34 = icmp eq ptr %4, null
  br i1 %34, label %66, label %35

35:                                               ; preds = %33
  store ptr @devlink_nl_cmd_trap_set_doit.__msg, ptr %4, align 4
  br label %66

36:                                               ; preds = %30
  %37 = getelementptr ptr, ptr %12, i32 131
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %66, label %40

40:                                               ; preds = %36
  %41 = getelementptr i8, ptr %38, i32 4
  %42 = load i8, ptr %41, align 1
  %43 = icmp ult i8 %42, 3
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_trap_action_set.__msg) #27
  %45 = icmp eq ptr %4, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %44
  store ptr @devlink_trap_action_set.__msg, ptr %4, align 4
  br label %66

47:                                               ; preds = %40
  %48 = zext i8 %42 to i32
  %49 = getelementptr i8, ptr %20, i32 8
  %50 = load i32, ptr %49, align 4
  %51 = icmp eq i32 %50, %48
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i32, ptr %22, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @__devlink_trap_action_set.__msg) #27
  %56 = icmp eq ptr %4, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  store ptr @__devlink_trap_action_set.__msg, ptr %4, align 4
  br label %66

58:                                               ; preds = %52, %47
  %59 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %60 = load ptr, ptr %59, align 4
  %61 = getelementptr inbounds %struct.devlink_ops, ptr %60, i32 0, i32 28
  %62 = load ptr, ptr %61, align 4
  %63 = tail call i32 %62(ptr noundef %6, ptr noundef %22, i32 noundef %48, ptr noundef %4) #27
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  store i32 %48, ptr %49, align 4
  br label %66

66:                                               ; preds = %65, %58, %57, %55, %46, %44, %36, %35, %33, %2
  %67 = phi i32 [ -95, %2 ], [ -2, %35 ], [ -2, %33 ], [ 0, %36 ], [ -22, %46 ], [ -22, %44 ], [ 0, %65 ], [ 0, %57 ], [ 0, %55 ], [ %63, %58 ]
  ret i32 %67
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_group_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 12
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %7
  br i1 %9, label %50, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr ptr, ptr %12, i32 135
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr i8, ptr %14, i32 4
  %18 = icmp eq ptr %8, %7
  br i1 %18, label %32, label %19

19:                                               ; preds = %26, %16
  %20 = phi ptr [ %27, %26 ], [ %8, %16 ]
  %21 = getelementptr i8, ptr %20, i32 -8
  %22 = load ptr, ptr %21, align 4
  %23 = load ptr, ptr %22, align 4
  %24 = tail call i32 @strcmp(ptr noundef %23, ptr noundef %17) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = load ptr, ptr %20, align 4
  %28 = icmp eq ptr %27, %7
  br i1 %28, label %32, label %19

29:                                               ; preds = %19
  %30 = getelementptr i8, ptr %20, i32 -8
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %29, %26, %16, %10
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_trap_group_get_doit.__msg) #27
  %33 = icmp eq ptr %4, null
  br i1 %33, label %50, label %34

34:                                               ; preds = %32
  store ptr @devlink_nl_cmd_trap_group_get_doit.__msg, ptr %4, align 4
  br label %50

35:                                               ; preds = %29
  %36 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %37 = icmp eq ptr %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %40 = load i32, ptr %39, align 4
  %41 = load i32, ptr %1, align 4
  %42 = tail call fastcc i32 @devlink_nl_trap_group_fill(ptr noundef nonnull %36, ptr noundef %6, ptr noundef nonnull %30, i32 noundef 67, i32 noundef %40, i32 noundef %41, i32 noundef 0)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = load i32, ptr %39, align 4
  %46 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %47 = tail call i32 @netlink_unicast(ptr noundef %46, ptr noundef nonnull %36, i32 noundef %45, i32 noundef 64) #27
  %48 = tail call i32 @llvm.smin.i32(i32 %47, i32 0) #27
  br label %50

49:                                               ; preds = %38
  tail call void @kfree_skb_reason(ptr noundef nonnull %36, i32 noundef 0) #27
  br label %50

50:                                               ; preds = %49, %44, %35, %34, %32, %2
  %51 = phi i32 [ %42, %49 ], [ %48, %44 ], [ -95, %2 ], [ -2, %34 ], [ -2, %32 ], [ -12, %35 ]
  ret i32 %51
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_group_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = load ptr, ptr %1, align 4
  %5 = getelementptr inbounds %struct.sk_buff, ptr %4, i32 0, i32 3, i32 12
  %6 = load i32, ptr %5, align 4
  %7 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %8 = load i32, ptr %7, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %9 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %10 = icmp eq ptr %9, null
  br i1 %10, label %82, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %13

13:                                               ; preds = %78, %11
  %14 = phi ptr [ %9, %11 ], [ %80, %78 ]
  %15 = phi i32 [ 0, %11 ], [ %79, %78 ]
  %16 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 22
  %17 = load volatile i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %29, %13
  %20 = phi i32 [ %27, %29 ], [ %17, %13 ]
  %21 = add i32 %20, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #27, !srcloc !14
  br label %22

22:                                               ; preds = %22, %19
  %23 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 %20, i32 %21, ptr elementtype(i32) %16) #27, !srcloc !17
  %24 = extractvalue { i32, i32 } %23, 0
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %22

26:                                               ; preds = %22
  %27 = extractvalue { i32, i32 } %23, 1
  %28 = icmp eq i32 %27, %20
  br i1 %28, label %31, label %29, !prof !10

29:                                               ; preds = %26
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %31, label %19

31:                                               ; preds = %29, %26, %13
  %32 = phi i32 [ 0, %13 ], [ %20, %26 ], [ 0, %29 ]
  %33 = add i32 %32, 1
  %34 = or i32 %33, %32
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %37, label %36, !prof !10

36:                                               ; preds = %31
  call void @refcount_warn_saturate(ptr noundef %16, i32 noundef 0) #27
  br label %37

37:                                               ; preds = %36, %31
  %38 = icmp eq i32 %32, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 20
  call void @mutex_lock(ptr noundef %40) #27
  %41 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 12
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, %41
  br i1 %43, label %68, label %44

44:                                               ; preds = %64, %39
  %45 = phi ptr [ %66, %64 ], [ %42, %39 ]
  %46 = phi i32 [ %65, %64 ], [ %15, %39 ]
  %47 = icmp slt i32 %46, %8
  br i1 %47, label %64, label %48

48:                                               ; preds = %44
  %49 = getelementptr i8, ptr %45, i32 -8
  %50 = load ptr, ptr %12, align 4
  %51 = getelementptr inbounds %struct.nlmsghdr, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 4
  %53 = call fastcc i32 @devlink_nl_trap_group_fill(ptr noundef %0, ptr noundef nonnull %14, ptr noundef %49, i32 noundef 67, i32 noundef %6, i32 noundef %52, i32 noundef 2)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  call void @mutex_unlock(ptr noundef %40) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #27, !srcloc !14
  %56 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 1, ptr elementtype(i32) %16) #27, !srcloc !15
  %57 = extractvalue { i32, i32, i32 } %56, 0
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = icmp sgt i32 %57, 0
  br i1 %60, label %82, label %61, !prof !10

61:                                               ; preds = %59
  call void @refcount_warn_saturate(ptr noundef %16, i32 noundef 3) #27
  br label %82

62:                                               ; preds = %55
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %63 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 23
  call void @complete(ptr noundef %63) #27
  br label %82

64:                                               ; preds = %48, %44
  %65 = add i32 %46, 1
  %66 = load ptr, ptr %45, align 4
  %67 = icmp eq ptr %66, %41
  br i1 %67, label %68, label %44

68:                                               ; preds = %64, %39
  %69 = phi i32 [ %15, %39 ], [ %65, %64 ]
  call void @mutex_unlock(ptr noundef %40) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #27, !srcloc !14
  %70 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 1, ptr elementtype(i32) %16) #27, !srcloc !15
  %71 = extractvalue { i32, i32, i32 } %70, 0
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = icmp sgt i32 %71, 0
  br i1 %74, label %78, label %75, !prof !10

75:                                               ; preds = %73
  call void @refcount_warn_saturate(ptr noundef %16, i32 noundef 3) #27
  br label %78

76:                                               ; preds = %68
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %77 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 23
  call void @complete(ptr noundef %77) #27
  br label %78

78:                                               ; preds = %76, %75, %73, %37
  %79 = phi i32 [ %15, %37 ], [ %69, %73 ], [ %69, %75 ], [ %69, %76 ]
  %80 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %13

82:                                               ; preds = %78, %62, %61, %59, %2
  %83 = phi i32 [ %46, %59 ], [ %46, %61 ], [ %46, %62 ], [ 0, %2 ], [ %79, %78 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %83, ptr %7, align 4
  %84 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %85 = load i32, ptr %84, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %85
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_group_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 12
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %7
  br i1 %9, label %167, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr ptr, ptr %12, i32 135
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr i8, ptr %14, i32 4
  %18 = icmp eq ptr %8, %7
  br i1 %18, label %32, label %19

19:                                               ; preds = %26, %16
  %20 = phi ptr [ %27, %26 ], [ %8, %16 ]
  %21 = getelementptr i8, ptr %20, i32 -8
  %22 = load ptr, ptr %21, align 4
  %23 = load ptr, ptr %22, align 4
  %24 = tail call i32 @strcmp(ptr noundef %23, ptr noundef %17) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = load ptr, ptr %20, align 4
  %28 = icmp eq ptr %27, %7
  br i1 %28, label %32, label %19

29:                                               ; preds = %19
  %30 = getelementptr i8, ptr %20, i32 -8
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %29, %26, %16, %10
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_trap_group_set_doit.__msg) #27
  %33 = icmp eq ptr %4, null
  br i1 %33, label %167, label %34

34:                                               ; preds = %32
  store ptr @devlink_nl_cmd_trap_group_set_doit.__msg, ptr %4, align 4
  br label %167

35:                                               ; preds = %29
  %36 = getelementptr ptr, ptr %12, i32 131
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %116, label %39

39:                                               ; preds = %35
  %40 = getelementptr i8, ptr %37, i32 4
  %41 = load i8, ptr %40, align 1
  %42 = icmp ult i8 %41, 3
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_trap_group_action_set.__msg) #27
  %44 = icmp eq ptr %4, null
  br i1 %44, label %167, label %45

45:                                               ; preds = %43
  store ptr @devlink_trap_group_action_set.__msg, ptr %4, align 4
  br label %167

46:                                               ; preds = %39
  %47 = zext i8 %41 to i32
  %48 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.devlink_ops, ptr %49, i32 0, i32 31
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %81, label %53

53:                                               ; preds = %46
  %54 = tail call i32 %51(ptr noundef %6, ptr noundef %22, i32 noundef %47, ptr noundef %4) #27
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %167

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 11
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, %57
  br i1 %59, label %116, label %60

60:                                               ; preds = %78, %56
  %61 = phi ptr [ %79, %78 ], [ %58, %56 ]
  %62 = getelementptr i8, ptr %61, i32 -8
  %63 = getelementptr i8, ptr %61, i32 -4
  %64 = load ptr, ptr %63, align 4
  %65 = load ptr, ptr %64, align 4
  %66 = load ptr, ptr %65, align 4
  %67 = tail call i32 @strcmp(ptr noundef %66, ptr noundef %23) #27
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %78

69:                                               ; preds = %60
  %70 = getelementptr i8, ptr %61, i32 8
  %71 = load i32, ptr %70, align 4
  %72 = icmp eq i32 %71, %47
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = load ptr, ptr %62, align 4
  %75 = load i32, ptr %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73, %69
  store i32 %47, ptr %70, align 4
  br label %78

78:                                               ; preds = %77, %73, %60
  %79 = load ptr, ptr %61, align 4
  %80 = icmp eq ptr %79, %57
  br i1 %80, label %116, label %60

81:                                               ; preds = %46
  %82 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 11
  %83 = load ptr, ptr %82, align 4
  %84 = icmp eq ptr %83, %82
  br i1 %84, label %116, label %85

85:                                               ; preds = %81
  %86 = icmp eq ptr %4, null
  br label %87

87:                                               ; preds = %113, %85
  %88 = phi ptr [ %83, %85 ], [ %114, %113 ]
  %89 = getelementptr i8, ptr %88, i32 -4
  %90 = load ptr, ptr %89, align 4
  %91 = load ptr, ptr %90, align 4
  %92 = load ptr, ptr %91, align 4
  %93 = tail call i32 @strcmp(ptr noundef %92, ptr noundef %23) #27
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %113

95:                                               ; preds = %87
  %96 = getelementptr i8, ptr %88, i32 -8
  %97 = getelementptr i8, ptr %88, i32 8
  %98 = load i32, ptr %97, align 4
  %99 = icmp eq i32 %98, %47
  %100 = load ptr, ptr %96, align 4
  br i1 %99, label %106, label %101

101:                                              ; preds = %95
  %102 = load i32, ptr %100, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @__devlink_trap_action_set.__msg) #27
  br i1 %86, label %113, label %105

105:                                              ; preds = %104
  store ptr @__devlink_trap_action_set.__msg, ptr %4, align 4
  br label %113

106:                                              ; preds = %101, %95
  %107 = load ptr, ptr %48, align 4
  %108 = getelementptr inbounds %struct.devlink_ops, ptr %107, i32 0, i32 28
  %109 = load ptr, ptr %108, align 4
  %110 = tail call i32 %109(ptr noundef %6, ptr noundef %100, i32 noundef %47, ptr noundef %4) #27
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %167

112:                                              ; preds = %106
  store i32 %47, ptr %97, align 4
  br label %113

113:                                              ; preds = %112, %105, %104, %87
  %114 = load ptr, ptr %88, align 4
  %115 = icmp eq ptr %114, %82
  br i1 %115, label %116, label %87

116:                                              ; preds = %113, %81, %78, %56, %35
  %117 = load ptr, ptr %3, align 4
  %118 = load ptr, ptr %11, align 4
  %119 = getelementptr ptr, ptr %118, i32 142
  %120 = load ptr, ptr %119, align 4
  %121 = icmp eq ptr %120, null
  br i1 %121, label %167, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 14
  %124 = load ptr, ptr %123, align 4
  %125 = getelementptr inbounds %struct.devlink_ops, ptr %124, i32 0, i32 30
  %126 = load ptr, ptr %125, align 4
  %127 = icmp eq ptr %126, null
  br i1 %127, label %162, label %128

128:                                              ; preds = %122
  %129 = getelementptr i8, ptr %20, i32 -4
  %130 = getelementptr i8, ptr %120, i32 4
  %131 = load i32, ptr %130, align 4
  %132 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 13
  br label %133

133:                                              ; preds = %137, %128
  %134 = phi ptr [ %132, %128 ], [ %135, %137 ]
  %135 = load ptr, ptr %134, align 4
  %136 = icmp eq ptr %135, %132
  br i1 %136, label %147, label %137

137:                                              ; preds = %133
  %138 = getelementptr i8, ptr %135, i32 -24
  %139 = load ptr, ptr %138, align 8
  %140 = load i32, ptr %139, align 8
  %141 = icmp eq i32 %140, %131
  br i1 %141, label %142, label %133

142:                                              ; preds = %137
  %143 = getelementptr i8, ptr %135, i32 -24
  %144 = icmp eq i32 %131, 0
  %145 = icmp ne ptr %143, null
  %146 = or i1 %144, %145
  br i1 %146, label %152, label %149

147:                                              ; preds = %133
  %148 = icmp eq i32 %131, 0
  br i1 %148, label %155, label %149

149:                                              ; preds = %147, %142
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_trap_group_set.__msg) #27
  %150 = icmp eq ptr %117, null
  br i1 %150, label %162, label %151

151:                                              ; preds = %149
  store ptr @devlink_trap_group_set.__msg, ptr %117, align 4
  br label %162

152:                                              ; preds = %142
  %153 = icmp eq ptr %143, null
  %154 = select i1 %153, ptr null, ptr %139
  br label %155

155:                                              ; preds = %152, %147
  %156 = phi ptr [ null, %147 ], [ %143, %152 ]
  %157 = phi ptr [ null, %147 ], [ %154, %152 ]
  %158 = load ptr, ptr %30, align 4
  %159 = tail call i32 %126(ptr noundef %6, ptr noundef %158, ptr noundef %157, ptr noundef %117) #27
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %155
  store ptr %156, ptr %129, align 4
  br label %167

162:                                              ; preds = %155, %151, %149, %122
  %163 = phi i32 [ -2, %149 ], [ %159, %155 ], [ -2, %151 ], [ -95, %122 ]
  br i1 %38, label %167, label %164

164:                                              ; preds = %162
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_trap_group_set_doit.__msg.82) #27
  %165 = icmp eq ptr %4, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %164
  store ptr @devlink_nl_cmd_trap_group_set_doit.__msg.82, ptr %4, align 4
  br label %167

167:                                              ; preds = %166, %164, %162, %161, %116, %106, %53, %45, %43, %34, %32, %2
  %168 = phi i32 [ -95, %2 ], [ -2, %34 ], [ -2, %32 ], [ %163, %164 ], [ %163, %166 ], [ %163, %162 ], [ -22, %45 ], [ -22, %43 ], [ %54, %53 ], [ 0, %116 ], [ 0, %161 ], [ %110, %106 ]
  ret i32 %168
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_policer_get_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.devlink, ptr %6, i32 0, i32 13
  %8 = load volatile ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %7
  br i1 %9, label %50, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr ptr, ptr %12, i32 142
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr i8, ptr %14, i32 4
  %18 = load i32, ptr %17, align 4
  %19 = icmp eq ptr %8, %7
  br i1 %19, label %32, label %20

20:                                               ; preds = %26, %16
  %21 = phi ptr [ %27, %26 ], [ %8, %16 ]
  %22 = getelementptr i8, ptr %21, i32 -24
  %23 = load ptr, ptr %22, align 8
  %24 = load i32, ptr %23, align 8
  %25 = icmp eq i32 %24, %18
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = load ptr, ptr %21, align 4
  %28 = icmp eq ptr %27, %7
  br i1 %28, label %32, label %20

29:                                               ; preds = %20
  %30 = getelementptr i8, ptr %21, i32 -24
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %29, %26, %16, %10
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_trap_policer_get_doit.__msg) #27
  %33 = icmp eq ptr %4, null
  br i1 %33, label %50, label %34

34:                                               ; preds = %32
  store ptr @devlink_nl_cmd_trap_policer_get_doit.__msg, ptr %4, align 4
  br label %50

35:                                               ; preds = %29
  %36 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %37 = icmp eq ptr %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %40 = load i32, ptr %39, align 4
  %41 = load i32, ptr %1, align 4
  %42 = tail call fastcc i32 @devlink_nl_trap_policer_fill(ptr noundef nonnull %36, ptr noundef %6, ptr noundef nonnull %30, i32 noundef 71, i32 noundef %40, i32 noundef %41, i32 noundef 0)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = load i32, ptr %39, align 4
  %46 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %47 = tail call i32 @netlink_unicast(ptr noundef %46, ptr noundef nonnull %36, i32 noundef %45, i32 noundef 64) #27
  %48 = tail call i32 @llvm.smin.i32(i32 %47, i32 0) #27
  br label %50

49:                                               ; preds = %38
  tail call void @kfree_skb_reason(ptr noundef nonnull %36, i32 noundef 0) #27
  br label %50

50:                                               ; preds = %49, %44, %35, %34, %32, %2
  %51 = phi i32 [ %42, %49 ], [ %48, %44 ], [ -95, %2 ], [ -2, %34 ], [ -2, %32 ], [ -12, %35 ]
  ret i32 %51
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_policer_get_dumpit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = load ptr, ptr %1, align 4
  %5 = getelementptr inbounds %struct.sk_buff, ptr %4, i32 0, i32 3, i32 12
  %6 = load i32, ptr %5, align 4
  %7 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 13
  %8 = load i32, ptr %7, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %9 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %10 = icmp eq ptr %9, null
  br i1 %10, label %82, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.netlink_callback, ptr %1, i32 0, i32 1
  br label %13

13:                                               ; preds = %78, %11
  %14 = phi ptr [ %9, %11 ], [ %80, %78 ]
  %15 = phi i32 [ 0, %11 ], [ %79, %78 ]
  %16 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 22
  %17 = load volatile i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %29, %13
  %20 = phi i32 [ %27, %29 ], [ %17, %13 ]
  %21 = add i32 %20, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #27, !srcloc !14
  br label %22

22:                                               ; preds = %22, %19
  %23 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 %20, i32 %21, ptr elementtype(i32) %16) #27, !srcloc !17
  %24 = extractvalue { i32, i32 } %23, 0
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %22

26:                                               ; preds = %22
  %27 = extractvalue { i32, i32 } %23, 1
  %28 = icmp eq i32 %27, %20
  br i1 %28, label %31, label %29, !prof !10

29:                                               ; preds = %26
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %31, label %19

31:                                               ; preds = %29, %26, %13
  %32 = phi i32 [ 0, %13 ], [ %20, %26 ], [ 0, %29 ]
  %33 = add i32 %32, 1
  %34 = or i32 %33, %32
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %37, label %36, !prof !10

36:                                               ; preds = %31
  call void @refcount_warn_saturate(ptr noundef %16, i32 noundef 0) #27
  br label %37

37:                                               ; preds = %36, %31
  %38 = icmp eq i32 %32, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 20
  call void @mutex_lock(ptr noundef %40) #27
  %41 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 13
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, %41
  br i1 %43, label %68, label %44

44:                                               ; preds = %64, %39
  %45 = phi ptr [ %66, %64 ], [ %42, %39 ]
  %46 = phi i32 [ %65, %64 ], [ %15, %39 ]
  %47 = icmp slt i32 %46, %8
  br i1 %47, label %64, label %48

48:                                               ; preds = %44
  %49 = getelementptr i8, ptr %45, i32 -24
  %50 = load ptr, ptr %12, align 4
  %51 = getelementptr inbounds %struct.nlmsghdr, ptr %50, i32 0, i32 3
  %52 = load i32, ptr %51, align 4
  %53 = call fastcc i32 @devlink_nl_trap_policer_fill(ptr noundef %0, ptr noundef nonnull %14, ptr noundef %49, i32 noundef 71, i32 noundef %6, i32 noundef %52, i32 noundef 2)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  call void @mutex_unlock(ptr noundef %40) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #27, !srcloc !14
  %56 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 1, ptr elementtype(i32) %16) #27, !srcloc !15
  %57 = extractvalue { i32, i32, i32 } %56, 0
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = icmp sgt i32 %57, 0
  br i1 %60, label %82, label %61, !prof !10

61:                                               ; preds = %59
  call void @refcount_warn_saturate(ptr noundef %16, i32 noundef 3) #27
  br label %82

62:                                               ; preds = %55
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %63 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 23
  call void @complete(ptr noundef %63) #27
  br label %82

64:                                               ; preds = %48, %44
  %65 = add i32 %46, 1
  %66 = load ptr, ptr %45, align 4
  %67 = icmp eq ptr %66, %41
  br i1 %67, label %68, label %44

68:                                               ; preds = %64, %39
  %69 = phi i32 [ %15, %39 ], [ %65, %64 ]
  call void @mutex_unlock(ptr noundef %40) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #27, !srcloc !14
  %70 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 1, ptr elementtype(i32) %16) #27, !srcloc !15
  %71 = extractvalue { i32, i32, i32 } %70, 0
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = icmp sgt i32 %71, 0
  br i1 %74, label %78, label %75, !prof !10

75:                                               ; preds = %73
  call void @refcount_warn_saturate(ptr noundef %16, i32 noundef 3) #27
  br label %78

76:                                               ; preds = %68
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %77 = getelementptr inbounds %struct.devlink, ptr %14, i32 0, i32 23
  call void @complete(ptr noundef %77) #27
  br label %78

78:                                               ; preds = %76, %75, %73, %37
  %79 = phi i32 [ %15, %37 ], [ %69, %73 ], [ %69, %75 ], [ %69, %76 ]
  %80 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %13

82:                                               ; preds = %78, %62, %61, %59, %2
  %83 = phi i32 [ %46, %59 ], [ %46, %61 ], [ %46, %62 ], [ 0, %2 ], [ %79, %78 ]
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  store i32 %83, ptr %7, align 4
  %84 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %85 = load i32, ptr %84, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %85
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @devlink_nl_cmd_trap_policer_set_doit(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 7
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.devlink, ptr %8, i32 0, i32 13
  %10 = load volatile ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, %9
  br i1 %11, label %100, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.devlink, ptr %8, i32 0, i32 14
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.devlink_ops, ptr %14, i32 0, i32 35
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %100, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr ptr, ptr %20, i32 142
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %18
  %25 = getelementptr i8, ptr %22, i32 4
  %26 = load i32, ptr %25, align 4
  %27 = icmp eq ptr %10, %9
  br i1 %27, label %40, label %28

28:                                               ; preds = %34, %24
  %29 = phi ptr [ %35, %34 ], [ %10, %24 ]
  %30 = getelementptr i8, ptr %29, i32 -24
  %31 = load ptr, ptr %30, align 8
  %32 = load i32, ptr %31, align 8
  %33 = icmp eq i32 %32, %26
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = load ptr, ptr %29, align 4
  %36 = icmp eq ptr %35, %9
  br i1 %36, label %40, label %28

37:                                               ; preds = %28
  %38 = getelementptr i8, ptr %29, i32 -24
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %37, %34, %24, %18
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_cmd_trap_policer_set_doit.__msg) #27
  %41 = icmp eq ptr %6, null
  br i1 %41, label %100, label %42

42:                                               ; preds = %40
  store ptr @devlink_nl_cmd_trap_policer_set_doit.__msg, ptr %6, align 4
  br label %100

43:                                               ; preds = %37
  %44 = getelementptr i8, ptr %29, i32 -16
  %45 = load i64, ptr %44, align 8
  %46 = getelementptr i8, ptr %29, i32 -8
  %47 = load i64, ptr %46, align 8
  %48 = getelementptr ptr, ptr %20, i32 143
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 0, ptr %4, align 8, !annotation !9
  %52 = call i32 @nla_memcpy(ptr noundef nonnull %4, ptr noundef nonnull %49, i32 noundef 8) #27
  %53 = load i64, ptr %4, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  br label %54

54:                                               ; preds = %51, %43
  %55 = phi i64 [ %53, %51 ], [ %45, %43 ]
  %56 = getelementptr ptr, ptr %20, i32 144
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #27
  store i64 0, ptr %3, align 8, !annotation !9
  %60 = call i32 @nla_memcpy(ptr noundef nonnull %3, ptr noundef nonnull %57, i32 noundef 8) #27
  %61 = load i64, ptr %3, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  br label %62

62:                                               ; preds = %59, %54
  %63 = phi i64 [ %61, %59 ], [ %47, %54 ]
  %64 = load ptr, ptr %38, align 8
  %65 = getelementptr inbounds %struct.devlink_trap_policer, ptr %64, i32 0, i32 4
  %66 = load i64, ptr %65, align 8
  %67 = icmp ult i64 %55, %66
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_trap_policer_set.__msg) #27
  %69 = icmp eq ptr %6, null
  br i1 %69, label %100, label %70

70:                                               ; preds = %68
  store ptr @devlink_trap_policer_set.__msg, ptr %6, align 4
  br label %100

71:                                               ; preds = %62
  %72 = getelementptr inbounds %struct.devlink_trap_policer, ptr %64, i32 0, i32 3
  %73 = load i64, ptr %72, align 8
  %74 = icmp ugt i64 %55, %73
  br i1 %74, label %75, label %78

75:                                               ; preds = %71
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_trap_policer_set.__msg.83) #27
  %76 = icmp eq ptr %6, null
  br i1 %76, label %100, label %77

77:                                               ; preds = %75
  store ptr @devlink_trap_policer_set.__msg.83, ptr %6, align 4
  br label %100

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.devlink_trap_policer, ptr %64, i32 0, i32 6
  %80 = load i64, ptr %79, align 8
  %81 = icmp ult i64 %63, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_trap_policer_set.__msg.84) #27
  %83 = icmp eq ptr %6, null
  br i1 %83, label %100, label %84

84:                                               ; preds = %82
  store ptr @devlink_trap_policer_set.__msg.84, ptr %6, align 4
  br label %100

85:                                               ; preds = %78
  %86 = getelementptr inbounds %struct.devlink_trap_policer, ptr %64, i32 0, i32 5
  %87 = load i64, ptr %86, align 8
  %88 = icmp ugt i64 %63, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_trap_policer_set.__msg.85) #27
  %90 = icmp eq ptr %6, null
  br i1 %90, label %100, label %91

91:                                               ; preds = %89
  store ptr @devlink_trap_policer_set.__msg.85, ptr %6, align 4
  br label %100

92:                                               ; preds = %85
  %93 = load ptr, ptr %13, align 4
  %94 = getelementptr inbounds %struct.devlink_ops, ptr %93, i32 0, i32 35
  %95 = load ptr, ptr %94, align 4
  %96 = load ptr, ptr %5, align 4
  %97 = call i32 %95(ptr noundef %8, ptr noundef %64, i64 noundef %55, i64 noundef %63, ptr noundef %96) #27
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  store i64 %55, ptr %44, align 8
  store i64 %63, ptr %46, align 8
  br label %100

100:                                              ; preds = %99, %92, %91, %89, %84, %82, %77, %75, %70, %68, %42, %40, %12, %2
  %101 = phi i32 [ -95, %2 ], [ -95, %12 ], [ -2, %42 ], [ -2, %40 ], [ 0, %99 ], [ -22, %70 ], [ -22, %68 ], [ -22, %77 ], [ -22, %75 ], [ -22, %84 ], [ -22, %82 ], [ -22, %91 ], [ -22, %89 ], [ %97, %92 ]
  ret i32 %101
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_port_fill(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, ptr noundef %6) unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 3
  %13 = load ptr, ptr %12, align 4
  %14 = trunc i32 %2 to i8
  %15 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %3, i32 noundef %4, ptr noundef nonnull @devlink_nl_family, i32 noundef %5, i8 noundef zeroext %14) #27
  %16 = icmp eq ptr %15, null
  br i1 %16, label %116, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.devlink, ptr %13, i32 0, i32 18
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.device, ptr %19, i32 0, i32 5
  %21 = load ptr, ptr %20, align 4
  %22 = load ptr, ptr %21, align 4
  %23 = tail call i32 @strlen(ptr noundef %22) #27
  %24 = add i32 %23, 1
  %25 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %24, ptr noundef %22) #27
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %102

27:                                               ; preds = %17
  %28 = load ptr, ptr %18, align 4
  %29 = getelementptr inbounds %struct.device, ptr %28, i32 0, i32 3
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = load ptr, ptr %28, align 4
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi ptr [ %33, %32 ], [ %30, %27 ]
  %36 = tail call i32 @strlen(ptr noundef %35) #27
  %37 = add i32 %36, 1
  %38 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %37, ptr noundef %35) #27
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %102

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 4
  %42 = load i32, ptr %41, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #27
  store i32 %42, ptr %11, align 4
  %43 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %11) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #27
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %102

45:                                               ; preds = %40
  call void @rtnl_lock() #27
  %46 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 5
  call void @_raw_spin_lock_bh(ptr noundef %46) #27
  %47 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 6
  %48 = load i32, ptr %47, align 4
  %49 = trunc i32 %48 to i16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %10) #27
  store i16 %49, ptr %10, align 2
  %50 = call i32 @nla_put(ptr noundef %0, i32 noundef 4, i32 noundef 2, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %10) #27
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %101

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 7
  %54 = load i32, ptr %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = trunc i32 %54 to i16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %9) #27
  store i16 %57, ptr %9, align 2
  %58 = call i32 @nla_put(ptr noundef %0, i32 noundef 5, i32 noundef 2, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %9) #27
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %101

60:                                               ; preds = %56, %52
  %61 = load i32, ptr %47, align 4
  %62 = icmp eq i32 %61, 2
  br i1 %62, label %63, label %77

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 8
  %65 = load ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %88, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.net_device, ptr %65, i32 0, i32 17
  %69 = load i32, ptr %68, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #27
  store i32 %69, ptr %8, align 4
  %70 = call i32 @nla_put(ptr noundef %0, i32 noundef 6, i32 noundef 4, ptr noundef nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #27
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %101

72:                                               ; preds = %67
  %73 = call fastcc i32 @nla_put_string(ptr noundef %0, i32 noundef 7, ptr noundef nonnull %65)
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %101

75:                                               ; preds = %72
  %76 = load i32, ptr %47, align 4
  br label %77

77:                                               ; preds = %75, %60
  %78 = phi i32 [ %61, %60 ], [ %76, %75 ]
  %79 = icmp eq i32 %78, 3
  br i1 %79, label %80, label %88

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 8
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.ib_device, ptr %82, i32 0, i32 2
  %86 = call fastcc i32 @nla_put_string(ptr noundef %0, i32 noundef 8, ptr noundef %85)
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %84, %80, %77, %63
  call void @_raw_spin_unlock_bh(ptr noundef %46) #27
  call void @rtnl_unlock() #27
  %89 = call fastcc i32 @devlink_nl_port_attrs_put(ptr noundef %0, ptr noundef %1)
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %102

91:                                               ; preds = %88
  %92 = call fastcc i32 @devlink_nl_port_function_attrs_put(ptr noundef %0, ptr noundef %1, ptr noundef %6)
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %102

94:                                               ; preds = %91
  %95 = getelementptr i8, ptr %15, i32 -20
  %96 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %97 = load ptr, ptr %96, align 8
  %98 = ptrtoint ptr %97 to i32
  %99 = ptrtoint ptr %95 to i32
  %100 = sub i32 %98, %99
  store i32 %100, ptr %95, align 4
  br label %116

101:                                              ; preds = %84, %72, %67, %56, %45
  call void @_raw_spin_unlock_bh(ptr noundef %46) #27
  call void @rtnl_unlock() #27
  br label %102

102:                                              ; preds = %101, %91, %88, %40, %34, %17
  %103 = getelementptr i8, ptr %15, i32 -20
  %104 = icmp eq ptr %103, null
  br i1 %104, label %116, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %107 = load ptr, ptr %106, align 4
  %108 = icmp ugt ptr %107, %103
  br i1 %108, label %109, label %111, !prof !11

109:                                              ; preds = %105
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %110 = load ptr, ptr %106, align 4
  br label %111

111:                                              ; preds = %109, %105
  %112 = phi ptr [ %110, %109 ], [ %107, %105 ]
  %113 = ptrtoint ptr %103 to i32
  %114 = ptrtoint ptr %112 to i32
  %115 = sub i32 %113, %114
  call void @skb_trim(ptr noundef %0, i32 noundef %115) #27
  br label %116

116:                                              ; preds = %111, %102, %94, %7
  %117 = phi i32 [ 0, %94 ], [ -90, %7 ], [ -90, %102 ], [ -90, %111 ]
  ret i32 %117
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_port_attrs_put(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i16, align 2
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9
  %20 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 10
  %21 = load i8, ptr %20, align 4
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %116, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #27
  store i32 %26, ptr %18, align 4
  %29 = call i32 @nla_put(ptr noundef %0, i32 noundef 147, i32 noundef 4, ptr noundef nonnull %18) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #27
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %116

31:                                               ; preds = %28, %24
  %32 = load i8, ptr %19, align 4
  %33 = lshr i8 %32, 1
  %34 = and i8 %33, 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %17) #27
  store i8 %34, ptr %17, align 1
  %35 = call i32 @nla_put(ptr noundef %0, i32 noundef 148, i32 noundef 1, ptr noundef nonnull %17) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #27
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %116

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 2
  %39 = load i32, ptr %38, align 4
  %40 = trunc i32 %39 to i16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %16) #27
  store i16 %40, ptr %16, align 2
  %41 = call i32 @nla_put(ptr noundef %0, i32 noundef 77, i32 noundef 2, ptr noundef nonnull %16) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %16) #27
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %116

43:                                               ; preds = %37
  %44 = load i32, ptr %38, align 4
  switch i32 %44, label %115 [
    i32 3, label %45
    i32 4, label %61
    i32 7, label %82
    i32 0, label %97
    i32 1, label %97
    i32 2, label %97
  ]

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4
  %47 = load i32, ptr %46, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #27
  store i32 %47, ptr %15, align 4
  %48 = call i32 @nla_put(ptr noundef %0, i32 noundef 150, i32 noundef 4, ptr noundef nonnull %15) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #27
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %116

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 1
  %52 = load i16, ptr %51, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %14) #27
  store i16 %52, ptr %14, align 2
  %53 = call i32 @nla_put(ptr noundef %0, i32 noundef 127, i32 noundef 2, ptr noundef nonnull %14) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %14) #27
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %116

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 2
  %57 = load i8, ptr %56, align 2
  %58 = and i8 %57, 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #27
  store i8 %58, ptr %13, align 1
  %59 = call i32 @nla_put(ptr noundef %0, i32 noundef 149, i32 noundef 1, ptr noundef nonnull %13) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %115, label %116

61:                                               ; preds = %43
  %62 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4
  %63 = load i32, ptr %62, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #27
  store i32 %63, ptr %12, align 4
  %64 = call i32 @nla_put(ptr noundef %0, i32 noundef 150, i32 noundef 4, ptr noundef nonnull %12) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %116

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 1
  %68 = load i16, ptr %67, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %11) #27
  store i16 %68, ptr %11, align 2
  %69 = call i32 @nla_put(ptr noundef %0, i32 noundef 127, i32 noundef 2, ptr noundef nonnull %11) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %11) #27
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %116

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 2
  %73 = load i16, ptr %72, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %10) #27
  store i16 %73, ptr %10, align 2
  %74 = call i32 @nla_put(ptr noundef %0, i32 noundef 128, i32 noundef 2, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %10) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %116

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 3
  %78 = load i8, ptr %77, align 4
  %79 = and i8 %78, 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #27
  store i8 %79, ptr %9, align 1
  %80 = call i32 @nla_put(ptr noundef %0, i32 noundef 149, i32 noundef 1, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #27
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %115, label %116

82:                                               ; preds = %43
  %83 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4
  %84 = load i32, ptr %83, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #27
  store i32 %84, ptr %8, align 4
  %85 = call i32 @nla_put(ptr noundef %0, i32 noundef 150, i32 noundef 4, ptr noundef nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #27
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %116

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 3
  %89 = load i16, ptr %88, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %7) #27
  store i16 %89, ptr %7, align 2
  %90 = call i32 @nla_put(ptr noundef %0, i32 noundef 127, i32 noundef 2, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %7) #27
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %116

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 1
  %94 = load i32, ptr %93, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 %94, ptr %6, align 4
  %95 = call i32 @nla_put(ptr noundef %0, i32 noundef 164, i32 noundef 4, ptr noundef nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %115, label %116

97:                                               ; preds = %43, %43, %43
  %98 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4
  %99 = load i32, ptr %98, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store i32 %99, ptr %5, align 4
  %100 = call i32 @nla_put(ptr noundef %0, i32 noundef 78, i32 noundef 4, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %116

102:                                              ; preds = %97
  %103 = load i8, ptr %19, align 4
  %104 = and i8 %103, 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %102
  %107 = load i32, ptr %98, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 %107, ptr %4, align 4
  %108 = call i32 @nla_put(ptr noundef %0, i32 noundef 10, i32 noundef 4, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 9, i32 4, i32 0, i32 1
  %112 = load i32, ptr %111, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 %112, ptr %3, align 4
  %113 = call i32 @nla_put(ptr noundef %0, i32 noundef 79, i32 noundef 4, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %110, %92, %76, %55, %43
  br label %116

116:                                              ; preds = %115, %110, %106, %102, %97, %92, %87, %82, %76, %71, %66, %61, %55, %50, %45, %37, %31, %28, %2
  %117 = phi i32 [ 0, %115 ], [ 0, %2 ], [ -90, %28 ], [ -90, %31 ], [ -90, %37 ], [ -90, %50 ], [ -90, %45 ], [ -90, %55 ], [ -90, %71 ], [ -90, %66 ], [ -90, %61 ], [ -90, %76 ], [ -90, %92 ], [ -90, %87 ], [ -90, %82 ], [ -90, %97 ], [ 0, %102 ], [ -90, %106 ], [ -90, %110 ]
  ret i32 %117
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_port_function_attrs_put(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [32 x i8], align 1
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %11 = load ptr, ptr %10, align 8
  %12 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 145, i32 noundef 0, ptr noundef null) #27
  %13 = icmp slt i32 %12, 0
  %14 = icmp eq ptr %11, null
  %15 = select i1 %13, i1 true, i1 %14
  br i1 %15, label %93, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.devlink_port, ptr %1, i32 0, i32 3
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.devlink, ptr %18, i32 0, i32 14
  %20 = load ptr, ptr %19, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(32) %8, i8 0, i32 32, i1 false) #27, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #27
  store i32 0, ptr %9, align 4, !annotation !9
  %21 = getelementptr inbounds %struct.devlink_ops, ptr %20, i32 0, i32 37
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = call i32 %22(ptr noundef %1, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef %2) #27
  switch i32 %25, label %36 [
    i32 0, label %26
    i32 -95, label %31
  ]

26:                                               ; preds = %24
  %27 = load i32, ptr %9, align 4
  %28 = call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %27, ptr noundef nonnull %8) #27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #27
  br label %75

31:                                               ; preds = %26, %24, %16
  %32 = phi i8 [ 0, %24 ], [ 0, %16 ], [ 1, %26 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 0, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 0, ptr %7, align 4, !annotation !9
  %33 = getelementptr inbounds %struct.devlink_ops, ptr %20, i32 0, i32 41
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %69, label %37

36:                                               ; preds = %24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #27
  br label %75

37:                                               ; preds = %31
  %38 = call i32 %34(ptr noundef %1, ptr noundef nonnull %7, ptr noundef nonnull %6, ptr noundef %2) #27
  switch i32 %38, label %39 [
    i32 0, label %40
    i32 -95, label %69
  ]

39:                                               ; preds = %37
  br label %69

40:                                               ; preds = %37
  %41 = load i32, ptr %7, align 4
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = load i1, ptr @devlink_port_fn_state_fill.__already_done, align 1
  br i1 %44, label %46, label %45, !prof !10

45:                                               ; preds = %43
  store i1 true, ptr @devlink_port_fn_state_fill.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1039, i32 noundef 9, ptr noundef null) #27
  br label %46

46:                                               ; preds = %45, %43
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_fn_state_fill.__msg) #27
  %47 = icmp eq ptr %2, null
  br i1 %47, label %67, label %65

48:                                               ; preds = %40
  %49 = load i32, ptr %6, align 4
  %50 = icmp ult i32 %49, 2
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = load i1, ptr @devlink_port_fn_state_fill.__already_done.50, align 1
  br i1 %52, label %54, label %53, !prof !10

53:                                               ; preds = %51
  store i1 true, ptr @devlink_port_fn_state_fill.__already_done.50, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1044, i32 noundef 9, ptr noundef null) #27
  br label %54

54:                                               ; preds = %53, %51
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_port_fn_state_fill.__msg.51) #27
  %55 = icmp eq ptr %2, null
  br i1 %55, label %67, label %65

56:                                               ; preds = %48
  %57 = trunc i32 %41 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #27
  store i8 %57, ptr %5, align 1
  %58 = call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef 1, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #27
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, ptr %6, align 4
  %62 = trunc i32 %61 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #27
  store i8 %62, ptr %4, align 1
  %63 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 1, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #27
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %67

65:                                               ; preds = %54, %46
  %66 = phi ptr [ @devlink_port_fn_state_fill.__msg, %46 ], [ @devlink_port_fn_state_fill.__msg.51, %54 ]
  store ptr %66, ptr %2, align 4
  br label %67

67:                                               ; preds = %65, %60, %56, %54, %46
  %68 = phi i32 [ -90, %56 ], [ -90, %60 ], [ -22, %54 ], [ -22, %46 ], [ -22, %65 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  br label %75

69:                                               ; preds = %60, %39, %37, %31
  %70 = phi i8 [ %32, %31 ], [ %32, %39 ], [ %32, %37 ], [ 1, %60 ]
  %71 = phi i32 [ 0, %31 ], [ %38, %39 ], [ 0, %37 ], [ 0, %60 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  %72 = icmp ne i32 %71, 0
  %73 = icmp eq i8 %70, 0
  %74 = or i1 %73, %72
  br i1 %74, label %75, label %87

75:                                               ; preds = %69, %67, %36, %30
  %76 = phi i32 [ %71, %69 ], [ %68, %67 ], [ %28, %30 ], [ %25, %36 ]
  %77 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %78 = load ptr, ptr %77, align 4
  %79 = icmp ugt ptr %78, %11
  br i1 %79, label %80, label %82, !prof !11

80:                                               ; preds = %75
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %81 = load ptr, ptr %77, align 4
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi ptr [ %81, %80 ], [ %78, %75 ]
  %84 = ptrtoint ptr %11 to i32
  %85 = ptrtoint ptr %83 to i32
  %86 = sub i32 %84, %85
  call void @skb_trim(ptr noundef %0, i32 noundef %86) #27
  br label %93

87:                                               ; preds = %69
  %88 = load ptr, ptr %10, align 8
  %89 = ptrtoint ptr %88 to i32
  %90 = ptrtoint ptr %11 to i32
  %91 = sub i32 %89, %90
  %92 = trunc i32 %91 to i16
  store i16 %92, ptr %11, align 2
  br label %93

93:                                               ; preds = %87, %82, %3
  %94 = phi i32 [ -90, %3 ], [ 0, %87 ], [ %76, %82 ]
  ret i32 %94
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_trace_netlink_extack(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__nla_parse(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_rate_fill(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = getelementptr inbounds %struct.devlink_rate, ptr %1, i32 0, i32 2
  %12 = load ptr, ptr %11, align 4
  %13 = trunc i32 %2 to i8
  %14 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %3, i32 noundef %4, ptr noundef nonnull @devlink_nl_family, i32 noundef %5, i8 noundef zeroext %13) #27
  %15 = icmp eq ptr %14, null
  br i1 %15, label %101, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.devlink, ptr %12, i32 0, i32 18
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 5
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @strlen(ptr noundef %21) #27
  %23 = add i32 %22, 1
  %24 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %23, ptr noundef %21) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %87

26:                                               ; preds = %16
  %27 = load ptr, ptr %17, align 4
  %28 = getelementptr inbounds %struct.device, ptr %27, i32 0, i32 3
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = load ptr, ptr %27, align 4
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi ptr [ %32, %31 ], [ %29, %26 ]
  %35 = tail call i32 @strlen(ptr noundef %34) #27
  %36 = add i32 %35, 1
  %37 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %36, ptr noundef %34) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %87

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.devlink_rate, ptr %1, i32 0, i32 1
  %41 = load i32, ptr %40, align 8
  %42 = trunc i32 %41 to i16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %10) #27
  store i16 %42, ptr %10, align 2
  %43 = call i32 @nla_put(ptr noundef %0, i32 noundef 165, i32 noundef 2, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %10) #27
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %87

45:                                               ; preds = %39
  %46 = load i32, ptr %40, align 8
  switch i32 %46, label %61 [
    i32 0, label %47
    i32 1, label %54
  ]

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.devlink_rate, ptr %1, i32 0, i32 7
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.devlink_port, ptr %49, i32 0, i32 4
  %51 = load i32, ptr %50, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #27
  store i32 %51, ptr %9, align 4
  %52 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #27
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %61, label %87

54:                                               ; preds = %45
  %55 = getelementptr inbounds %struct.devlink_rate, ptr %1, i32 0, i32 7
  %56 = load ptr, ptr %55, align 4
  %57 = call i32 @strlen(ptr noundef %56) #27
  %58 = add i32 %57, 1
  %59 = call i32 @nla_put(ptr noundef %0, i32 noundef 168, i32 noundef %58, ptr noundef %56) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %87

61:                                               ; preds = %54, %47, %45
  %62 = getelementptr inbounds %struct.devlink_rate, ptr %1, i32 0, i32 4
  %63 = load i64, ptr %62, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #27
  store i64 %63, ptr %8, align 8
  %64 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 166, i32 noundef 8, ptr noundef nonnull %8, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.devlink_rate, ptr %1, i32 0, i32 5
  %68 = load i64, ptr %67, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #27
  store i64 %68, ptr %7, align 8
  %69 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 167, i32 noundef 8, ptr noundef nonnull %7, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #27
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %87

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.devlink_rate, ptr %1, i32 0, i32 6
  %73 = load ptr, ptr %72, align 8
  %74 = icmp eq ptr %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.devlink_rate, ptr %73, i32 0, i32 7
  %77 = load ptr, ptr %76, align 4
  %78 = call fastcc i32 @nla_put_string(ptr noundef %0, i32 noundef 169, ptr noundef %77)
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %75, %71
  %81 = getelementptr i8, ptr %14, i32 -20
  %82 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %83 = load ptr, ptr %82, align 8
  %84 = ptrtoint ptr %83 to i32
  %85 = ptrtoint ptr %81 to i32
  %86 = sub i32 %84, %85
  store i32 %86, ptr %81, align 4
  br label %101

87:                                               ; preds = %75, %66, %61, %54, %47, %39, %33, %16
  %88 = getelementptr i8, ptr %14, i32 -20
  %89 = icmp eq ptr %88, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %92 = load ptr, ptr %91, align 4
  %93 = icmp ugt ptr %92, %88
  br i1 %93, label %94, label %96, !prof !11

94:                                               ; preds = %90
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %95 = load ptr, ptr %91, align 4
  br label %96

96:                                               ; preds = %94, %90
  %97 = phi ptr [ %95, %94 ], [ %92, %90 ]
  %98 = ptrtoint ptr %88 to i32
  %99 = ptrtoint ptr %97 to i32
  %100 = sub i32 %98, %99
  call void @skb_trim(ptr noundef %0, i32 noundef %100) #27
  br label %101

101:                                              ; preds = %96, %87, %80, %6
  %102 = phi i32 [ 0, %80 ], [ -90, %6 ], [ -90, %87 ], [ -90, %96 ]
  ret i32 %102
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @devlink_rate_set_ops_supported(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 5
  %5 = load ptr, ptr %4, align 4
  switch i32 %2, label %84 [
    i32 0, label %6
    i32 1, label %45
  ]

6:                                                ; preds = %3
  %7 = getelementptr ptr, ptr %5, i32 166
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 43
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %16 = load ptr, ptr %15, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg) #27
  %17 = icmp eq ptr %16, null
  br i1 %17, label %85, label %18

18:                                               ; preds = %14
  store ptr @devlink_rate_set_ops_supported.__msg, ptr %16, align 4
  br label %85

19:                                               ; preds = %10, %6
  %20 = getelementptr ptr, ptr %5, i32 167
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 44
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %29 = load ptr, ptr %28, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.56) #27
  %30 = icmp eq ptr %29, null
  br i1 %30, label %85, label %31

31:                                               ; preds = %27
  store ptr @devlink_rate_set_ops_supported.__msg.56, ptr %29, align 4
  br label %85

32:                                               ; preds = %23, %19
  %33 = getelementptr ptr, ptr %5, i32 169
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %85, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 49
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %85

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %42 = load ptr, ptr %41, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.57) #27
  %43 = icmp eq ptr %42, null
  br i1 %43, label %85, label %44

44:                                               ; preds = %40
  store ptr @devlink_rate_set_ops_supported.__msg.57, ptr %42, align 4
  br label %85

45:                                               ; preds = %3
  %46 = getelementptr ptr, ptr %5, i32 166
  %47 = load ptr, ptr %46, align 4
  %48 = icmp eq ptr %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 45
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %55 = load ptr, ptr %54, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.58) #27
  %56 = icmp eq ptr %55, null
  br i1 %56, label %85, label %57

57:                                               ; preds = %53
  store ptr @devlink_rate_set_ops_supported.__msg.58, ptr %55, align 4
  br label %85

58:                                               ; preds = %49, %45
  %59 = getelementptr ptr, ptr %5, i32 167
  %60 = load ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 46
  %64 = load ptr, ptr %63, align 4
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %68 = load ptr, ptr %67, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.59) #27
  %69 = icmp eq ptr %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %66
  store ptr @devlink_rate_set_ops_supported.__msg.59, ptr %68, align 4
  br label %85

71:                                               ; preds = %62, %58
  %72 = getelementptr ptr, ptr %5, i32 169
  %73 = load ptr, ptr %72, align 4
  %74 = icmp eq ptr %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.devlink_ops, ptr %0, i32 0, i32 50
  %77 = load ptr, ptr %76, align 4
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 8
  %81 = load ptr, ptr %80, align 4
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_rate_set_ops_supported.__msg.60) #27
  %82 = icmp eq ptr %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  store ptr @devlink_rate_set_ops_supported.__msg.60, ptr %81, align 4
  br label %85

84:                                               ; preds = %3
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1860, i32 noundef 9, ptr noundef nonnull @.str.61) #27
  br label %85

85:                                               ; preds = %84, %83, %79, %75, %71, %70, %66, %57, %53, %44, %40, %36, %32, %31, %27, %18, %14
  %86 = phi i1 [ false, %84 ], [ false, %18 ], [ false, %14 ], [ false, %31 ], [ false, %27 ], [ false, %44 ], [ false, %40 ], [ false, %57 ], [ false, %53 ], [ false, %70 ], [ false, %66 ], [ false, %83 ], [ false, %79 ], [ true, %75 ], [ true, %71 ], [ true, %32 ], [ true, %36 ]
  ret i1 %86
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_rate_set(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 5
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr ptr, ptr %7, i32 166
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !9
  %12 = call i32 @nla_memcpy(ptr noundef nonnull %5, ptr noundef nonnull %9, i32 noundef 8) #27
  %13 = load i64, ptr %5, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  %14 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 1
  %15 = load i32, ptr %14, align 8
  switch i32 %15, label %174 [
    i32 0, label %16
    i32 1, label %18
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.devlink_ops, ptr %1, i32 0, i32 43
  br label %20

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.devlink_ops, ptr %1, i32 0, i32 45
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi ptr [ %19, %18 ], [ %17, %16 ]
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 3
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 8
  %26 = load ptr, ptr %25, align 4
  %27 = call i32 %22(ptr noundef %0, ptr noundef %24, i64 noundef %13, ptr noundef %26) #27
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %174

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 4
  store i64 %13, ptr %30, align 8
  br label %31

31:                                               ; preds = %29, %3
  %32 = phi i32 [ 0, %29 ], [ -95, %3 ]
  %33 = getelementptr ptr, ptr %7, i32 167
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %58, label %36

36:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 0, ptr %4, align 8, !annotation !9
  %37 = call i32 @nla_memcpy(ptr noundef nonnull %4, ptr noundef nonnull %34, i32 noundef 8) #27
  %38 = load i64, ptr %4, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %39 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 1
  %40 = load i32, ptr %39, align 8
  switch i32 %40, label %53 [
    i32 0, label %41
    i32 1, label %43
  ]

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.devlink_ops, ptr %1, i32 0, i32 44
  br label %45

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.devlink_ops, ptr %1, i32 0, i32 46
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi ptr [ %44, %43 ], [ %42, %41 ]
  %47 = load ptr, ptr %46, align 4
  %48 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 8
  %51 = load ptr, ptr %50, align 4
  %52 = call i32 %47(ptr noundef %0, ptr noundef %49, i64 noundef %38, ptr noundef %51) #27
  br label %53

53:                                               ; preds = %45, %36
  %54 = phi i32 [ %32, %36 ], [ %52, %45 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %174

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 5
  store i64 %38, ptr %57, align 8
  br label %58

58:                                               ; preds = %56, %31
  %59 = getelementptr ptr, ptr %7, i32 169
  %60 = load ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %174, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 2
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr i8, ptr %60, i32 4
  %66 = getelementptr inbounds %struct.devlink, ptr %64, i32 0, i32 14
  %67 = load ptr, ptr %66, align 4
  %68 = load i8, ptr %65, align 1
  %69 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 6
  %70 = load ptr, ptr %69, align 8
  %71 = icmp ne ptr %70, null
  %72 = icmp ne i8 %68, 0
  %73 = select i1 %71, i1 %72, i1 false
  br i1 %73, label %74, label %79

74:                                               ; preds = %62
  %75 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 8
  %76 = load ptr, ptr %75, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_rate_parent_node_set.__msg) #27
  %77 = icmp eq ptr %76, null
  br i1 %77, label %174, label %78

78:                                               ; preds = %74
  store ptr @devlink_nl_rate_parent_node_set.__msg, ptr %76, align 4
  br label %174

79:                                               ; preds = %62
  %80 = icmp eq ptr %70, null
  %81 = select i1 %80, i1 true, i1 %72
  br i1 %81, label %105, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 1
  %84 = load i32, ptr %83, align 8
  switch i32 %84, label %174 [
    i32 0, label %85
    i32 1, label %87
  ]

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.devlink_ops, ptr %67, i32 0, i32 49
  br label %89

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.devlink_ops, ptr %67, i32 0, i32 50
  br label %89

89:                                               ; preds = %87, %85
  %90 = phi ptr [ %88, %87 ], [ %86, %85 ]
  %91 = load ptr, ptr %90, align 4
  %92 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 3
  %93 = load ptr, ptr %92, align 8
  %94 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 8
  %95 = load ptr, ptr %94, align 4
  %96 = call i32 %91(ptr noundef %0, ptr noundef null, ptr noundef %93, ptr noundef null, ptr noundef %95) #27
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %174

98:                                               ; preds = %89
  %99 = getelementptr inbounds %struct.devlink_rate, ptr %70, i32 0, i32 7, i32 0, i32 1
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %99) #27, !srcloc !14
  %100 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %99, ptr %99, i32 1, ptr elementtype(i32) %99) #27, !srcloc !15
  %101 = extractvalue { i32, i32, i32 } %100, 0
  %102 = icmp slt i32 %101, 2
  br i1 %102, label %103, label %104, !prof !11

103:                                              ; preds = %98
  call void @refcount_warn_saturate(ptr noundef %99, i32 noundef 4) #27
  br label %104

104:                                              ; preds = %103, %98
  store ptr null, ptr %69, align 8
  br label %174

105:                                              ; preds = %79
  %106 = select i1 %80, i1 %72, i1 false
  br i1 %106, label %107, label %174

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.devlink, ptr %64, i32 0, i32 2
  %109 = load ptr, ptr %108, align 4
  %110 = icmp eq ptr %109, %108
  br i1 %110, label %124, label %111

111:                                              ; preds = %121, %107
  %112 = phi ptr [ %122, %121 ], [ %109, %107 ]
  %113 = getelementptr inbounds %struct.devlink_rate, ptr %112, i32 0, i32 1
  %114 = load i32, ptr %113, align 8
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %121

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.devlink_rate, ptr %112, i32 0, i32 7
  %118 = load ptr, ptr %117, align 4
  %119 = call i32 @strcmp(ptr noundef %65, ptr noundef %118) #27
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %116, %111
  %122 = load ptr, ptr %112, align 4
  %123 = icmp eq ptr %122, %108
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %107
  store ptr %108, ptr @devlink_rate_node_get_by_name.devlink_rate, align 4
  br label %174

125:                                              ; preds = %116
  store ptr %112, ptr @devlink_rate_node_get_by_name.devlink_rate, align 4
  %126 = icmp ugt ptr %112, inttoptr (i32 -4096 to ptr)
  br i1 %126, label %174, label %127

127:                                              ; preds = %125
  %128 = icmp eq ptr %112, %0
  br i1 %128, label %129, label %134

129:                                              ; preds = %127
  %130 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 8
  %131 = load ptr, ptr %130, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_rate_parent_node_set.__msg.62) #27
  %132 = icmp eq ptr %131, null
  br i1 %132, label %174, label %133

133:                                              ; preds = %129
  store ptr @devlink_nl_rate_parent_node_set.__msg.62, ptr %131, align 4
  br label %174

134:                                              ; preds = %127
  %135 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 1
  %136 = load i32, ptr %135, align 8
  switch i32 %136, label %174 [
    i32 1, label %137
    i32 0, label %157
  ]

137:                                              ; preds = %134
  %138 = getelementptr inbounds %struct.devlink_rate, ptr %112, i32 0, i32 6
  %139 = load ptr, ptr %138, align 8
  %140 = icmp eq ptr %139, null
  %141 = icmp eq ptr %139, %0
  %142 = or i1 %140, %141
  br i1 %142, label %151, label %143

143:                                              ; preds = %143, %137
  %144 = phi ptr [ %146, %143 ], [ %139, %137 ]
  %145 = getelementptr inbounds %struct.devlink_rate, ptr %144, i32 0, i32 6
  %146 = load ptr, ptr %145, align 8
  %147 = icmp eq ptr %146, null
  %148 = icmp eq ptr %146, %0
  %149 = or i1 %147, %148
  br i1 %149, label %150, label %143

150:                                              ; preds = %143
  br i1 %147, label %159, label %152

151:                                              ; preds = %137
  br i1 %140, label %159, label %152

152:                                              ; preds = %151, %150
  %153 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 8
  %154 = load ptr, ptr %153, align 4
  call void @do_trace_netlink_extack(ptr noundef nonnull @devlink_nl_rate_parent_node_set.__msg.63) #27
  %155 = icmp eq ptr %154, null
  br i1 %155, label %174, label %156

156:                                              ; preds = %152
  store ptr @devlink_nl_rate_parent_node_set.__msg.63, ptr %154, align 4
  br label %174

157:                                              ; preds = %134
  %158 = getelementptr inbounds %struct.devlink_ops, ptr %67, i32 0, i32 49
  br label %161

159:                                              ; preds = %151, %150
  %160 = getelementptr inbounds %struct.devlink_ops, ptr %67, i32 0, i32 50
  br label %161

161:                                              ; preds = %159, %157
  %162 = phi ptr [ %160, %159 ], [ %158, %157 ]
  %163 = load ptr, ptr %162, align 4
  %164 = getelementptr inbounds %struct.devlink_rate, ptr %0, i32 0, i32 3
  %165 = load ptr, ptr %164, align 8
  %166 = getelementptr inbounds %struct.devlink_rate, ptr %112, i32 0, i32 3
  %167 = load ptr, ptr %166, align 8
  %168 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 8
  %169 = load ptr, ptr %168, align 4
  %170 = call i32 %163(ptr noundef %0, ptr noundef %112, ptr noundef %165, ptr noundef %167, ptr noundef %169) #27
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %161
  %173 = getelementptr inbounds %struct.devlink_rate, ptr %112, i32 0, i32 7, i32 0, i32 1
  call fastcc void @refcount_inc(ptr noundef %173) #27
  store ptr %112, ptr %69, align 8
  br label %174

174:                                              ; preds = %172, %161, %156, %152, %134, %133, %129, %125, %124, %105, %104, %89, %82, %78, %74, %58, %53, %20, %11
  %175 = phi i32 [ %27, %20 ], [ %54, %53 ], [ 0, %172 ], [ 0, %105 ], [ 0, %104 ], [ 0, %58 ], [ -95, %134 ], [ -95, %82 ], [ -19, %124 ], [ %170, %161 ], [ -17, %152 ], [ -17, %156 ], [ -22, %129 ], [ -22, %133 ], [ -19, %125 ], [ %96, %89 ], [ -16, %74 ], [ -16, %78 ], [ -95, %11 ]
  ret i32 %175
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nla_memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @refcount_inc(ptr noundef %0) unnamed_addr #5 {
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #27, !srcloc !14
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #27, !srcloc !43
  %3 = extractvalue { i32, i32, i32 } %2, 0
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5, !prof !11

5:                                                ; preds = %1
  %6 = add i32 %3, 1
  %7 = or i32 %6, %3
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %11, label %9, !prof !10

9:                                                ; preds = %5, %1
  %10 = phi i32 [ 2, %1 ], [ 1, %5 ]
  tail call void @refcount_warn_saturate(ptr noundef %0, i32 noundef %10) #27
  br label %11

11:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nla_strdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_sb_fill(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %3, i32 noundef %4, ptr noundef nonnull @devlink_nl_family, i32 noundef %5, i8 noundef zeroext 13) #27
  %14 = icmp eq ptr %13, null
  br i1 %14, label %89, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.device, ptr %17, i32 0, i32 5
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %19, align 4
  %21 = tail call i32 @strlen(ptr noundef %20) #27
  %22 = add i32 %21, 1
  %23 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %22, ptr noundef %20) #27
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %75

25:                                               ; preds = %15
  %26 = load ptr, ptr %16, align 4
  %27 = getelementptr inbounds %struct.device, ptr %26, i32 0, i32 3
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = load ptr, ptr %26, align 4
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi ptr [ %31, %30 ], [ %28, %25 ]
  %34 = tail call i32 @strlen(ptr noundef %33) #27
  %35 = add i32 %34, 1
  %36 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %35, ptr noundef %33) #27
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %75

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.devlink_sb, ptr %2, i32 0, i32 1
  %40 = load i32, ptr %39, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #27
  store i32 %40, ptr %12, align 4
  %41 = call i32 @nla_put(ptr noundef %0, i32 noundef 11, i32 noundef 4, ptr noundef nonnull %12) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #27
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %75

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.devlink_sb, ptr %2, i32 0, i32 2
  %45 = load i32, ptr %44, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #27
  store i32 %45, ptr %11, align 4
  %46 = call i32 @nla_put(ptr noundef %0, i32 noundef 12, i32 noundef 4, ptr noundef nonnull %11) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #27
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %75

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.devlink_sb, ptr %2, i32 0, i32 3
  %50 = load i16, ptr %49, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %10) #27
  store i16 %50, ptr %10, align 2
  %51 = call i32 @nla_put(ptr noundef %0, i32 noundef 13, i32 noundef 2, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %10) #27
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %75

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.devlink_sb, ptr %2, i32 0, i32 4
  %55 = load i16, ptr %54, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %9) #27
  store i16 %55, ptr %9, align 2
  %56 = call i32 @nla_put(ptr noundef %0, i32 noundef 14, i32 noundef 2, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %9) #27
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %75

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.devlink_sb, ptr %2, i32 0, i32 5
  %60 = load i16, ptr %59, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %8) #27
  store i16 %60, ptr %8, align 2
  %61 = call i32 @nla_put(ptr noundef %0, i32 noundef 15, i32 noundef 2, ptr noundef nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %8) #27
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.devlink_sb, ptr %2, i32 0, i32 6
  %65 = load i16, ptr %64, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %7) #27
  store i16 %65, ptr %7, align 2
  %66 = call i32 @nla_put(ptr noundef %0, i32 noundef 16, i32 noundef 2, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %7) #27
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %63
  %69 = getelementptr i8, ptr %13, i32 -20
  %70 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %71 = load ptr, ptr %70, align 8
  %72 = ptrtoint ptr %71 to i32
  %73 = ptrtoint ptr %69 to i32
  %74 = sub i32 %72, %73
  store i32 %74, ptr %69, align 4
  br label %89

75:                                               ; preds = %63, %58, %53, %48, %43, %38, %32, %15
  %76 = getelementptr i8, ptr %13, i32 -20
  %77 = icmp eq ptr %76, null
  br i1 %77, label %89, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %80 = load ptr, ptr %79, align 4
  %81 = icmp ugt ptr %80, %76
  br i1 %81, label %82, label %84, !prof !11

82:                                               ; preds = %78
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %83 = load ptr, ptr %79, align 4
  br label %84

84:                                               ; preds = %82, %78
  %85 = phi ptr [ %83, %82 ], [ %80, %78 ]
  %86 = ptrtoint ptr %76 to i32
  %87 = ptrtoint ptr %85 to i32
  %88 = sub i32 %86, %87
  call void @skb_trim(ptr noundef %0, i32 noundef %88) #27
  br label %89

89:                                               ; preds = %84, %75, %68, %6
  %90 = phi i32 [ 0, %68 ], [ -90, %6 ], [ -90, %75 ], [ -90, %84 ]
  ret i32 %90
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_sb_pool_fill(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i16 noundef zeroext %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  %14 = alloca %struct.devlink_sb_pool_info, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %14, i8 0, i32 16, i1 false), !annotation !9
  %15 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 14
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.devlink_ops, ptr %16, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.devlink_sb, ptr %2, i32 0, i32 1
  %20 = load i32, ptr %19, align 4
  %21 = call i32 %18(ptr noundef %1, i32 noundef %20, i16 noundef zeroext %3, ptr noundef nonnull %14) #27
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %98

23:                                               ; preds = %7
  %24 = call ptr @genlmsg_put(ptr noundef %0, i32 noundef %4, i32 noundef %5, ptr noundef nonnull @devlink_nl_family, i32 noundef %6, i8 noundef zeroext 17) #27
  %25 = icmp eq ptr %24, null
  br i1 %25, label %98, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.device, ptr %28, i32 0, i32 5
  %30 = load ptr, ptr %29, align 4
  %31 = load ptr, ptr %30, align 4
  %32 = call i32 @strlen(ptr noundef %31) #27
  %33 = add i32 %32, 1
  %34 = call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %33, ptr noundef %31) #27
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %84

36:                                               ; preds = %26
  %37 = load ptr, ptr %27, align 4
  %38 = getelementptr inbounds %struct.device, ptr %37, i32 0, i32 3
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = load ptr, ptr %37, align 4
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi ptr [ %42, %41 ], [ %39, %36 ]
  %45 = call i32 @strlen(ptr noundef %44) #27
  %46 = add i32 %45, 1
  %47 = call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %46, ptr noundef %44) #27
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %84

49:                                               ; preds = %43
  %50 = load i32, ptr %19, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #27
  store i32 %50, ptr %13, align 4
  %51 = call i32 @nla_put(ptr noundef %0, i32 noundef 11, i32 noundef 4, ptr noundef nonnull %13) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #27
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %84

53:                                               ; preds = %49
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %12) #27
  store i16 %3, ptr %12, align 2
  %54 = call i32 @nla_put(ptr noundef %0, i32 noundef 17, i32 noundef 2, ptr noundef nonnull %12) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %12) #27
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %84

56:                                               ; preds = %53
  %57 = load i32, ptr %14, align 4
  %58 = trunc i32 %57 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #27
  store i8 %58, ptr %11, align 1
  %59 = call i32 @nla_put(ptr noundef %0, i32 noundef 18, i32 noundef 1, ptr noundef nonnull %11) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %84

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.devlink_sb_pool_info, ptr %14, i32 0, i32 1
  %63 = load i32, ptr %62, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #27
  store i32 %63, ptr %10, align 4
  %64 = call i32 @nla_put(ptr noundef %0, i32 noundef 19, i32 noundef 4, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %84

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.devlink_sb_pool_info, ptr %14, i32 0, i32 2
  %68 = load i32, ptr %67, align 4
  %69 = trunc i32 %68 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #27
  store i8 %69, ptr %9, align 1
  %70 = call i32 @nla_put(ptr noundef %0, i32 noundef 20, i32 noundef 1, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #27
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.devlink_sb_pool_info, ptr %14, i32 0, i32 3
  %74 = load i32, ptr %73, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #27
  store i32 %74, ptr %8, align 4
  %75 = call i32 @nla_put(ptr noundef %0, i32 noundef 105, i32 noundef 4, ptr noundef nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #27
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %72
  %78 = getelementptr i8, ptr %24, i32 -20
  %79 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %80 = load ptr, ptr %79, align 8
  %81 = ptrtoint ptr %80 to i32
  %82 = ptrtoint ptr %78 to i32
  %83 = sub i32 %81, %82
  store i32 %83, ptr %78, align 4
  br label %98

84:                                               ; preds = %72, %66, %61, %56, %53, %49, %43, %26
  %85 = getelementptr i8, ptr %24, i32 -20
  %86 = icmp eq ptr %85, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %89 = load ptr, ptr %88, align 4
  %90 = icmp ugt ptr %89, %85
  br i1 %90, label %91, label %93, !prof !11

91:                                               ; preds = %87
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %92 = load ptr, ptr %88, align 4
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi ptr [ %92, %91 ], [ %89, %87 ]
  %95 = ptrtoint ptr %85 to i32
  %96 = ptrtoint ptr %94 to i32
  %97 = sub i32 %95, %96
  call void @skb_trim(ptr noundef %0, i32 noundef %97) #27
  br label %98

98:                                               ; preds = %93, %84, %77, %23, %7
  %99 = phi i32 [ 0, %77 ], [ %21, %7 ], [ -90, %23 ], [ -90, %84 ], [ -90, %93 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #27
  ret i32 %99
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_sb_port_pool_fill(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readonly %3, i16 noundef zeroext %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 14
  %19 = load ptr, ptr %18, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #27
  store i32 0, ptr %15, align 4, !annotation !9
  %20 = getelementptr inbounds %struct.devlink_ops, ptr %19, i32 0, i32 10
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.devlink_sb, ptr %3, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = call i32 %21(ptr noundef %2, i32 noundef %23, i16 noundef zeroext %4, ptr noundef nonnull %15) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %108

26:                                               ; preds = %8
  %27 = call ptr @genlmsg_put(ptr noundef %0, i32 noundef %5, i32 noundef %6, ptr noundef nonnull @devlink_nl_family, i32 noundef %7, i8 noundef zeroext 21) #27
  %28 = icmp eq ptr %27, null
  br i1 %28, label %108, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.device, ptr %31, i32 0, i32 5
  %33 = load ptr, ptr %32, align 4
  %34 = load ptr, ptr %33, align 4
  %35 = call i32 @strlen(ptr noundef %34) #27
  %36 = add i32 %35, 1
  %37 = call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %36, ptr noundef %34) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %93

39:                                               ; preds = %29
  %40 = load ptr, ptr %30, align 4
  %41 = getelementptr inbounds %struct.device, ptr %40, i32 0, i32 3
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = load ptr, ptr %40, align 4
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi ptr [ %45, %44 ], [ %42, %39 ]
  %48 = call i32 @strlen(ptr noundef %47) #27
  %49 = add i32 %48, 1
  %50 = call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %49, ptr noundef %47) #27
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %93

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.devlink_port, ptr %2, i32 0, i32 4
  %54 = load i32, ptr %53, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #27
  store i32 %54, ptr %14, align 4
  %55 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %14) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %93

57:                                               ; preds = %52
  %58 = load i32, ptr %22, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #27
  store i32 %58, ptr %13, align 4
  %59 = call i32 @nla_put(ptr noundef %0, i32 noundef 11, i32 noundef 4, ptr noundef nonnull %13) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %93

61:                                               ; preds = %57
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %12) #27
  store i16 %4, ptr %12, align 2
  %62 = call i32 @nla_put(ptr noundef %0, i32 noundef 17, i32 noundef 2, ptr noundef nonnull %12) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %12) #27
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %93

64:                                               ; preds = %61
  %65 = load i32, ptr %15, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #27
  store i32 %65, ptr %11, align 4
  %66 = call i32 @nla_put(ptr noundef %0, i32 noundef 21, i32 noundef 4, ptr noundef nonnull %11) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #27
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %93

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.devlink_ops, ptr %19, i32 0, i32 16
  %70 = load ptr, ptr %69, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %86, label %72

72:                                               ; preds = %68
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #27
  store i32 0, ptr %16, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #27
  store i32 0, ptr %17, align 4, !annotation !9
  %73 = load i32, ptr %22, align 4
  %74 = call i32 %70(ptr noundef %2, i32 noundef %73, i16 noundef zeroext %4, ptr noundef nonnull %16, ptr noundef nonnull %17) #27
  switch i32 %74, label %85 [
    i32 0, label %75
    i32 -95, label %83
  ]

75:                                               ; preds = %72
  %76 = load i32, ptr %16, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #27
  store i32 %76, ptr %10, align 4
  %77 = call i32 @nla_put(ptr noundef %0, i32 noundef 23, i32 noundef 4, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #27
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = load i32, ptr %17, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #27
  store i32 %80, ptr %9, align 4
  %81 = call i32 @nla_put(ptr noundef %0, i32 noundef 24, i32 noundef 4, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #27
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %79, %72
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #27
  br label %86

84:                                               ; preds = %79, %75
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #27
  br label %93

85:                                               ; preds = %72
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #27
  br label %93

86:                                               ; preds = %83, %68
  %87 = getelementptr i8, ptr %27, i32 -20
  %88 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %89 = load ptr, ptr %88, align 8
  %90 = ptrtoint ptr %89 to i32
  %91 = ptrtoint ptr %87 to i32
  %92 = sub i32 %90, %91
  store i32 %92, ptr %87, align 4
  br label %108

93:                                               ; preds = %85, %84, %64, %61, %57, %52, %46, %29
  %94 = phi i32 [ %74, %85 ], [ -90, %84 ], [ -90, %64 ], [ -90, %61 ], [ -90, %57 ], [ -90, %52 ], [ -90, %29 ], [ -90, %46 ]
  %95 = getelementptr i8, ptr %27, i32 -20
  %96 = icmp eq ptr %95, null
  br i1 %96, label %108, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %99 = load ptr, ptr %98, align 4
  %100 = icmp ugt ptr %99, %95
  br i1 %100, label %101, label %103, !prof !11

101:                                              ; preds = %97
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %102 = load ptr, ptr %98, align 4
  br label %103

103:                                              ; preds = %101, %97
  %104 = phi ptr [ %102, %101 ], [ %99, %97 ]
  %105 = ptrtoint ptr %95 to i32
  %106 = ptrtoint ptr %104 to i32
  %107 = sub i32 %105, %106
  call void @skb_trim(ptr noundef %0, i32 noundef %107) #27
  br label %108

108:                                              ; preds = %103, %93, %86, %26, %8
  %109 = phi i32 [ 0, %86 ], [ %24, %8 ], [ -90, %26 ], [ %94, %93 ], [ %94, %103 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #27
  ret i32 %109
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_sb_tc_pool_bind_fill(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readonly %3, i16 noundef zeroext %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8) unnamed_addr #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  %15 = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i16, align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 14
  %23 = load ptr, ptr %22, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %18) #27
  store i16 0, ptr %18, align 2, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #27
  store i32 0, ptr %19, align 4, !annotation !9
  %24 = getelementptr inbounds %struct.devlink_ops, ptr %23, i32 0, i32 12
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.devlink_sb, ptr %3, i32 0, i32 1
  %27 = load i32, ptr %26, align 4
  %28 = call i32 %25(ptr noundef %2, i32 noundef %27, i16 noundef zeroext %4, i32 noundef %5, ptr noundef nonnull %18, ptr noundef nonnull %19) #27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %119

30:                                               ; preds = %9
  %31 = call ptr @genlmsg_put(ptr noundef %0, i32 noundef %6, i32 noundef %7, ptr noundef nonnull @devlink_nl_family, i32 noundef %8, i8 noundef zeroext 25) #27
  %32 = icmp eq ptr %31, null
  br i1 %32, label %119, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.device, ptr %35, i32 0, i32 5
  %37 = load ptr, ptr %36, align 4
  %38 = load ptr, ptr %37, align 4
  %39 = call i32 @strlen(ptr noundef %38) #27
  %40 = add i32 %39, 1
  %41 = call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %40, ptr noundef %38) #27
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %105

43:                                               ; preds = %33
  %44 = load ptr, ptr %34, align 4
  %45 = getelementptr inbounds %struct.device, ptr %44, i32 0, i32 3
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = load ptr, ptr %44, align 4
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi ptr [ %49, %48 ], [ %46, %43 ]
  %52 = call i32 @strlen(ptr noundef %51) #27
  %53 = add i32 %52, 1
  %54 = call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %53, ptr noundef %51) #27
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %105

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.devlink_port, ptr %2, i32 0, i32 4
  %58 = load i32, ptr %57, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #27
  store i32 %58, ptr %17, align 4
  %59 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %17) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %105

61:                                               ; preds = %56
  %62 = load i32, ptr %26, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #27
  store i32 %62, ptr %16, align 4
  %63 = call i32 @nla_put(ptr noundef %0, i32 noundef 11, i32 noundef 4, ptr noundef nonnull %16) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #27
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %105

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %15) #27
  store i16 %4, ptr %15, align 2
  %66 = call i32 @nla_put(ptr noundef %0, i32 noundef 22, i32 noundef 2, ptr noundef nonnull %15) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %15) #27
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %105

68:                                               ; preds = %65
  %69 = trunc i32 %5 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %14) #27
  store i8 %69, ptr %14, align 1
  %70 = call i32 @nla_put(ptr noundef %0, i32 noundef 18, i32 noundef 1, ptr noundef nonnull %14) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %14) #27
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %105

72:                                               ; preds = %68
  %73 = load i16, ptr %18, align 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %13) #27
  store i16 %73, ptr %13, align 2
  %74 = call i32 @nla_put(ptr noundef %0, i32 noundef 17, i32 noundef 2, ptr noundef nonnull %13) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %13) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %105

76:                                               ; preds = %72
  %77 = load i32, ptr %19, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #27
  store i32 %77, ptr %12, align 4
  %78 = call i32 @nla_put(ptr noundef %0, i32 noundef 21, i32 noundef 4, ptr noundef nonnull %12) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #27
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %105

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.devlink_ops, ptr %23, i32 0, i32 17
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %98, label %84

84:                                               ; preds = %80
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #27
  store i32 0, ptr %20, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #27
  store i32 0, ptr %21, align 4, !annotation !9
  %85 = load i32, ptr %26, align 4
  %86 = call i32 %82(ptr noundef %2, i32 noundef %85, i16 noundef zeroext %4, i32 noundef %5, ptr noundef nonnull %20, ptr noundef nonnull %21) #27
  switch i32 %86, label %87 [
    i32 0, label %88
    i32 -95, label %97
  ]

87:                                               ; preds = %84
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #27
  br label %119

88:                                               ; preds = %84
  %89 = load i32, ptr %20, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #27
  store i32 %89, ptr %11, align 4
  %90 = call i32 @nla_put(ptr noundef %0, i32 noundef 23, i32 noundef 4, ptr noundef nonnull %11) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #27
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = load i32, ptr %21, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #27
  store i32 %93, ptr %10, align 4
  %94 = call i32 @nla_put(ptr noundef %0, i32 noundef 24, i32 noundef 4, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #27
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %92, %88
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #27
  br label %105

97:                                               ; preds = %92, %84
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #27
  br label %98

98:                                               ; preds = %97, %80
  %99 = getelementptr i8, ptr %31, i32 -20
  %100 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %101 = load ptr, ptr %100, align 8
  %102 = ptrtoint ptr %101 to i32
  %103 = ptrtoint ptr %99 to i32
  %104 = sub i32 %102, %103
  store i32 %104, ptr %99, align 4
  br label %119

105:                                              ; preds = %96, %76, %72, %68, %65, %61, %56, %50, %33
  %106 = getelementptr i8, ptr %31, i32 -20
  %107 = icmp eq ptr %106, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %110 = load ptr, ptr %109, align 4
  %111 = icmp ugt ptr %110, %106
  br i1 %111, label %112, label %114, !prof !11

112:                                              ; preds = %108
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %113 = load ptr, ptr %109, align 4
  br label %114

114:                                              ; preds = %112, %108
  %115 = phi ptr [ %113, %112 ], [ %110, %108 ]
  %116 = ptrtoint ptr %106 to i32
  %117 = ptrtoint ptr %115 to i32
  %118 = sub i32 %116, %117
  call void @skb_trim(ptr noundef %0, i32 noundef %118) #27
  br label %119

119:                                              ; preds = %114, %105, %98, %87, %30, %9
  %120 = phi i32 [ 0, %98 ], [ %28, %9 ], [ -90, %30 ], [ %86, %87 ], [ -90, %105 ], [ -90, %114 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %18) #27
  ret i32 %120
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_dpipe_table_put(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %1, i32 0, i32 8
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.devlink_dpipe_table_ops, ptr %8, i32 0, i32 4
  %10 = load ptr, ptr %9, align 4
  %11 = load ptr, ptr %1, align 8
  %12 = tail call i64 %10(ptr noundef %11) #27
  %13 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %14 = load ptr, ptr %13, align 8
  %15 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 28, i32 noundef 0, ptr noundef null) #27
  %16 = icmp slt i32 %15, 0
  %17 = icmp eq ptr %14, null
  %18 = select i1 %16, i1 true, i1 %17
  br i1 %18, label %71, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %1, i32 0, i32 2
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @strlen(ptr noundef %21) #27
  %23 = add i32 %22, 1
  %24 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 29, i32 noundef %23, ptr noundef %21) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %60

26:                                               ; preds = %19
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 %12, ptr %6, align 8
  %27 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 30, i32 noundef 8, ptr noundef nonnull %6, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %60

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %1, i32 0, i32 3
  %31 = load i8, ptr %30, align 8, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #27
  store i8 %31, ptr %5, align 1
  %32 = call i32 @nla_put(ptr noundef %0, i32 noundef 33, i32 noundef 1, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #27
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %1, i32 0, i32 5
  %36 = load i8, ptr %35, align 2, !range !18
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %1, i32 0, i32 6
  %40 = load i64, ptr %39, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 %40, ptr %4, align 8
  %41 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 75, i32 noundef 8, ptr noundef nonnull %4, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %60

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %1, i32 0, i32 7
  %45 = load i64, ptr %44, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #27
  store i64 %45, ptr %3, align 8
  %46 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 76, i32 noundef 8, ptr noundef nonnull %3, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %43, %34
  %49 = call fastcc i32 @devlink_dpipe_matches_put(ptr noundef %1, ptr noundef %0)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %60

51:                                               ; preds = %48
  %52 = call fastcc i32 @devlink_dpipe_actions_put(ptr noundef %1, ptr noundef %0)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %51
  %55 = load ptr, ptr %13, align 8
  %56 = ptrtoint ptr %55 to i32
  %57 = ptrtoint ptr %14 to i32
  %58 = sub i32 %56, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, ptr %14, align 2
  br label %71

60:                                               ; preds = %51, %48, %43, %38, %29, %26, %19
  %61 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %62 = load ptr, ptr %61, align 4
  %63 = icmp ugt ptr %62, %14
  br i1 %63, label %64, label %66, !prof !11

64:                                               ; preds = %60
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %65 = load ptr, ptr %61, align 4
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi ptr [ %65, %64 ], [ %62, %60 ]
  %68 = ptrtoint ptr %14 to i32
  %69 = ptrtoint ptr %67 to i32
  %70 = sub i32 %68, %69
  call void @skb_trim(ptr noundef %0, i32 noundef %70) #27
  br label %71

71:                                               ; preds = %66, %54, %2
  %72 = phi i32 [ -90, %66 ], [ 0, %54 ], [ -90, %2 ]
  ret i32 %72
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_dpipe_matches_put(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 14
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @nla_put(ptr noundef %1, i32 noundef 31, i32 noundef 0, ptr noundef null) #27
  %6 = icmp slt i32 %5, 0
  %7 = icmp eq ptr %4, null
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %34, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %0, i32 0, i32 8
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.devlink_dpipe_table_ops, ptr %11, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %0, align 8
  %15 = tail call i32 %13(ptr noundef %14, ptr noundef %1) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %9
  %18 = load ptr, ptr %3, align 8
  %19 = ptrtoint ptr %18 to i32
  %20 = ptrtoint ptr %4 to i32
  %21 = sub i32 %19, %20
  %22 = trunc i32 %21 to i16
  store i16 %22, ptr %4, align 2
  br label %34

23:                                               ; preds = %9
  %24 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %25 = load ptr, ptr %24, align 4
  %26 = icmp ugt ptr %25, %4
  br i1 %26, label %27, label %29, !prof !11

27:                                               ; preds = %23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %28 = load ptr, ptr %24, align 4
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %28, %27 ], [ %25, %23 ]
  %31 = ptrtoint ptr %4 to i32
  %32 = ptrtoint ptr %30 to i32
  %33 = sub i32 %31, %32
  tail call void @skb_trim(ptr noundef %1, i32 noundef %33) #27
  br label %34

34:                                               ; preds = %29, %17, %2
  %35 = phi i32 [ -90, %29 ], [ 0, %17 ], [ -90, %2 ]
  ret i32 %35
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_dpipe_actions_put(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 14
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @nla_put(ptr noundef %1, i32 noundef 32, i32 noundef 0, ptr noundef null) #27
  %6 = icmp slt i32 %5, 0
  %7 = icmp eq ptr %4, null
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %33, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.devlink_dpipe_table, ptr %0, i32 0, i32 8
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 4
  %13 = load ptr, ptr %0, align 8
  %14 = tail call i32 %12(ptr noundef %13, ptr noundef %1) #27
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = load ptr, ptr %3, align 8
  %18 = ptrtoint ptr %17 to i32
  %19 = ptrtoint ptr %4 to i32
  %20 = sub i32 %18, %19
  %21 = trunc i32 %20 to i16
  store i16 %21, ptr %4, align 2
  br label %33

22:                                               ; preds = %9
  %23 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %24 = load ptr, ptr %23, align 4
  %25 = icmp ugt ptr %24, %4
  br i1 %25, label %26, label %28, !prof !11

26:                                               ; preds = %22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %27 = load ptr, ptr %23, align 4
  br label %28

28:                                               ; preds = %26, %22
  %29 = phi ptr [ %27, %26 ], [ %24, %22 ]
  %30 = ptrtoint ptr %4 to i32
  %31 = ptrtoint ptr %29 to i32
  %32 = sub i32 %30, %31
  tail call void @skb_trim(ptr noundef %1, i32 noundef %32) #27
  br label %33

33:                                               ; preds = %28, %16, %2
  %34 = phi i32 [ -90, %28 ], [ 0, %16 ], [ -90, %2 ]
  ret i32 %34
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__nlmsg_put(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @div64_u64_rem(i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_resource_put(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %9 = load ptr, ptr %8, align 8
  %10 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 64, i32 noundef 0, ptr noundef null) #27
  %11 = icmp slt i32 %10, 0
  %12 = icmp eq ptr %9, null
  %13 = select i1 %11, i1 true, i1 %12
  br i1 %13, label %97, label %14

14:                                               ; preds = %2
  %15 = load ptr, ptr %1, align 8
  %16 = tail call i32 @strlen(ptr noundef %15) #27
  %17 = add i32 %16, 1
  %18 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 65, i32 noundef %17, ptr noundef %15) #27
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %86

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 2
  %22 = load i64, ptr %21, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #27
  store i64 %22, ptr %7, align 8
  %23 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 67, i32 noundef 8, ptr noundef nonnull %7, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #27
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %86

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 1
  %27 = load i64, ptr %26, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 %27, ptr %6, align 8
  %28 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 66, i32 noundef 8, ptr noundef nonnull %6, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %86

30:                                               ; preds = %25
  %31 = load i64, ptr %21, align 8
  %32 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 3
  %33 = load i64, ptr %32, align 8
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 %33, ptr %5, align 8
  %36 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 68, i32 noundef 8, ptr noundef nonnull %5, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  br label %37

37:                                               ; preds = %35, %30
  %38 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 9
  %39 = load ptr, ptr %38, align 8
  %40 = icmp eq ptr %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 10
  %43 = load ptr, ptr %42, align 4
  %44 = call i64 %39(ptr noundef %43) #27
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 %44, ptr %4, align 8
  %45 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 74, i32 noundef 8, ptr noundef nonnull %4, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %86

47:                                               ; preds = %41, %37
  %48 = call fastcc i32 @devlink_resource_size_params_put(ptr noundef %1, ptr noundef %0)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %86

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 8
  %52 = load volatile ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, %51
  br i1 %53, label %79, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 4
  %56 = load i8, ptr %55, align 8, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #27
  store i8 %56, ptr %3, align 1
  %57 = call i32 @nla_put(ptr noundef %0, i32 noundef 69, i32 noundef 1, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #27
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %86

59:                                               ; preds = %54
  %60 = load ptr, ptr %8, align 8
  %61 = call i32 @nla_put(ptr noundef %0, i32 noundef 63, i32 noundef 0, ptr noundef null) #27
  %62 = icmp slt i32 %61, 0
  %63 = icmp eq ptr %60, null
  %64 = select i1 %62, i1 true, i1 %63
  br i1 %64, label %86, label %65

65:                                               ; preds = %69, %59
  %66 = phi ptr [ %67, %69 ], [ %51, %59 ]
  %67 = load ptr, ptr %66, align 8
  %68 = icmp eq ptr %67, %51
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr i8, ptr %67, i32 -72
  %71 = call fastcc i32 @devlink_resource_put(ptr noundef %0, ptr noundef %70)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %65, label %85

73:                                               ; preds = %65
  %74 = load ptr, ptr %8, align 8
  %75 = ptrtoint ptr %74 to i32
  %76 = ptrtoint ptr %60 to i32
  %77 = sub i32 %75, %76
  %78 = trunc i32 %77 to i16
  store i16 %78, ptr %60, align 2
  br label %79

79:                                               ; preds = %73, %50
  %80 = load ptr, ptr %8, align 8
  %81 = ptrtoint ptr %80 to i32
  %82 = ptrtoint ptr %9 to i32
  %83 = sub i32 %81, %82
  %84 = trunc i32 %83 to i16
  store i16 %84, ptr %9, align 2
  br label %97

85:                                               ; preds = %69
  call fastcc void @nla_nest_cancel(ptr noundef %0, ptr noundef nonnull %60)
  br label %86

86:                                               ; preds = %85, %59, %54, %47, %41, %25, %20, %14
  %87 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %88 = load ptr, ptr %87, align 4
  %89 = icmp ugt ptr %88, %9
  br i1 %89, label %90, label %92, !prof !11

90:                                               ; preds = %86
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %91 = load ptr, ptr %87, align 4
  br label %92

92:                                               ; preds = %90, %86
  %93 = phi ptr [ %91, %90 ], [ %88, %86 ]
  %94 = ptrtoint ptr %9 to i32
  %95 = ptrtoint ptr %93 to i32
  %96 = sub i32 %94, %95
  call void @skb_trim(ptr noundef %0, i32 noundef %96) #27
  br label %97

97:                                               ; preds = %92, %79, %2
  %98 = phi i32 [ -90, %92 ], [ 0, %79 ], [ -90, %2 ]
  ret i32 %98
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_resource_size_params_put(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %struct.devlink_resource, ptr %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.devlink_resource, ptr %0, i32 0, i32 6, i32 2
  %9 = load i64, ptr %8, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 %9, ptr %6, align 8
  %10 = call i32 @nla_put_64bit(ptr noundef %1, i32 noundef 72, i32 noundef 8, ptr noundef nonnull %6, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.devlink_resource, ptr %0, i32 0, i32 6, i32 1
  %14 = load i64, ptr %13, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 %14, ptr %5, align 8
  %15 = call i32 @nla_put_64bit(ptr noundef %1, i32 noundef 71, i32 noundef 8, ptr noundef nonnull %5, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %12
  %18 = load i64, ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 %18, ptr %4, align 8
  %19 = call i32 @nla_put_64bit(ptr noundef %1, i32 noundef 70, i32 noundef 8, ptr noundef nonnull %4, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.devlink_resource, ptr %0, i32 0, i32 6, i32 3
  %23 = load i32, ptr %22, align 8
  %24 = trunc i32 %23 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #27
  store i8 %24, ptr %3, align 1
  %25 = call i32 @nla_put(ptr noundef %1, i32 noundef 73, i32 noundef 1, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #27
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 0, i32 -90
  br label %28

28:                                               ; preds = %21, %17, %12, %2
  %29 = phi i32 [ -90, %17 ], [ -90, %12 ], [ -90, %2 ], [ %27, %21 ]
  ret i32 %29
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync)
define internal fastcc i32 @devlink_resources_validate(ptr noundef readonly %0, ptr noundef readonly %1) unnamed_addr #12 {
  %3 = icmp eq ptr %1, null
  %4 = getelementptr inbounds %struct.devlink_resource, ptr %1, i32 0, i32 8
  %5 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 5
  %6 = select i1 %3, ptr %5, ptr %4
  br label %7

7:                                                ; preds = %16, %2
  %8 = phi ptr [ %6, %2 ], [ %9, %16 ]
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr i8, ptr %9, i32 -72
  %11 = icmp eq ptr %9, %6
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = getelementptr i8, ptr %9, i32 -40
  %14 = load i8, ptr %13, align 8, !range !18
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @devlink_resources_validate(ptr noundef %0, ptr noundef %10)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %7, label %19

19:                                               ; preds = %16, %12, %7
  %20 = phi i32 [ -22, %12 ], [ %17, %16 ], [ 0, %7 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_reload(ptr noundef %0, ptr noundef readnone %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca [6 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #27
  %9 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 17, i32 1
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %8, ptr noundef align 4 dereferenceable(24) %9, i32 24, i1 false)
  %10 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 14
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_ops, ptr %11, i32 0, i32 3
  %13 = load ptr, ptr %12, align 4
  %14 = icmp ne ptr %1, null
  %15 = tail call i32 %13(ptr noundef %0, i1 noundef zeroext %14, i32 noundef %2, i32 noundef %3, ptr noundef %5) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %60

17:                                               ; preds = %6
  %18 = load ptr, ptr %10, align 4
  %19 = getelementptr inbounds %struct.devlink_ops, ptr %18, i32 0, i32 4
  %20 = load ptr, ptr %19, align 4
  %21 = tail call i32 %20(ptr noundef %0, i32 noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) #27
  %22 = icmp ne i32 %21, 0
  %23 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 21
  %24 = load i8, ptr %23, align 4
  %25 = and i8 %24, 1
  %26 = icmp eq i8 %25, 0
  %27 = xor i1 %22, %26
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = zext i1 %22 to i8
  %30 = and i8 %24, -2
  %31 = or i8 %30, %29
  store i8 %31, ptr %23, align 4
  tail call fastcc void @devlink_notify(ptr noundef %0, i32 noundef 3) #27
  br label %32

32:                                               ; preds = %28, %17
  br i1 %22, label %60, label %33

33:                                               ; preds = %32
  %34 = load i32, ptr %4, align 4
  %35 = shl nuw i32 1, %2
  %36 = and i32 %34, %35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39, !prof !11

38:                                               ; preds = %33
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4085, i32 noundef 9, ptr noundef null) #27
  br label %39

39:                                               ; preds = %38, %33
  %40 = call i32 @bcmp(ptr noundef nonnull dereferenceable(24) %8, ptr noundef dereferenceable(24) %9, i32 24)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !10

42:                                               ; preds = %39
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4088, i32 noundef 9, ptr noundef null) #27
  br label %43

43:                                               ; preds = %42, %39
  %44 = load i32, ptr %4, align 4
  %45 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 %44, ptr %7, align 4
  %46 = call i32 @_find_next_bit_le(ptr noundef nonnull %7, i32 noundef 3, i32 noundef 0) #27
  %47 = icmp slt i32 %46, 3
  br i1 %47, label %48, label %59

48:                                               ; preds = %43
  %49 = mul i32 %3, 3
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i32 [ %46, %48 ], [ %57, %50 ]
  %52 = add i32 %51, %49
  %53 = getelementptr i32, ptr %45, i32 %52
  %54 = load i32, ptr %53, align 4
  %55 = add i32 %54, 1
  store i32 %55, ptr %53, align 4
  %56 = add nsw i32 %51, 1
  %57 = call i32 @_find_next_bit_le(ptr noundef nonnull %7, i32 noundef 3, i32 noundef %56) #27
  %58 = icmp slt i32 %57, 3
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %43
  call fastcc void @devlink_notify(ptr noundef %0, i32 noundef 3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  br label %60

60:                                               ; preds = %59, %32, %6
  %61 = phi i32 [ 0, %59 ], [ %15, %6 ], [ %21, %32 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #27
  ret i32 %61
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_reload_actions_performed_snd(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = alloca %struct.nla_bitfield32, align 8
  %5 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %6 = icmp eq ptr %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.genl_info, ptr %2, i32 0, i32 1
  %9 = load i32, ptr %8, align 4
  %10 = load i32, ptr %2, align 4
  %11 = tail call ptr @genlmsg_put(ptr noundef nonnull %5, i32 noundef %9, i32 noundef %10, ptr noundef nonnull @devlink_nl_family, i32 noundef 0, i8 noundef zeroext 37) #27
  %12 = icmp eq ptr %11, null
  br i1 %12, label %65, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 18
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.device, ptr %15, i32 0, i32 5
  %17 = load ptr, ptr %16, align 4
  %18 = load ptr, ptr %17, align 4
  %19 = tail call i32 @strlen(ptr noundef %18) #27
  %20 = add i32 %19, 1
  %21 = tail call i32 @nla_put(ptr noundef nonnull %5, i32 noundef 1, i32 noundef %20, ptr noundef %18) #27
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %51

23:                                               ; preds = %13
  %24 = load ptr, ptr %14, align 4
  %25 = getelementptr inbounds %struct.device, ptr %24, i32 0, i32 3
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = load ptr, ptr %24, align 4
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi ptr [ %29, %28 ], [ %26, %23 ]
  %32 = tail call i32 @strlen(ptr noundef %31) #27
  %33 = add i32 %32, 1
  %34 = tail call i32 @nla_put(ptr noundef nonnull %5, i32 noundef 2, i32 noundef %33, ptr noundef %31) #27
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %51

36:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i32 %1, ptr %4, align 8
  %37 = getelementptr inbounds %struct.nla_bitfield32, ptr %4, i32 0, i32 1
  store i32 %1, ptr %37, align 4
  %38 = call i32 @nla_put(ptr noundef nonnull %5, i32 noundef 154, i32 noundef 8, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %51

40:                                               ; preds = %36
  %41 = getelementptr i8, ptr %11, i32 -20
  %42 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 14
  %43 = load ptr, ptr %42, align 8
  %44 = ptrtoint ptr %43 to i32
  %45 = ptrtoint ptr %41 to i32
  %46 = sub i32 %44, %45
  store i32 %46, ptr %41, align 4
  %47 = load i32, ptr %8, align 4
  %48 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %49 = call i32 @netlink_unicast(ptr noundef %48, ptr noundef nonnull %5, i32 noundef %47, i32 noundef 64) #27
  %50 = call i32 @llvm.smin.i32(i32 %49, i32 0) #27
  br label %66

51:                                               ; preds = %36, %30, %13
  %52 = getelementptr i8, ptr %11, i32 -20
  %53 = icmp eq ptr %52, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 17
  %56 = load ptr, ptr %55, align 4
  %57 = icmp ugt ptr %56, %52
  br i1 %57, label %58, label %60, !prof !11

58:                                               ; preds = %54
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %59 = load ptr, ptr %55, align 4
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi ptr [ %59, %58 ], [ %56, %54 ]
  %62 = ptrtoint ptr %52 to i32
  %63 = ptrtoint ptr %61 to i32
  %64 = sub i32 %62, %63
  call void @skb_trim(ptr noundef nonnull %5, i32 noundef %64) #27
  br label %65

65:                                               ; preds = %60, %51, %7
  call void @kfree_skb_reason(ptr noundef nonnull %5, i32 noundef 0) #27
  br label %66

66:                                               ; preds = %65, %40, %3
  %67 = phi i32 [ -90, %65 ], [ %50, %40 ], [ -12, %3 ]
  ret i32 %67
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_net_ns_by_pid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_net_ns_by_id(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @netlink_ns_capable(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_param_fill(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca %union.devlink_param_value, align 4
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca [3 x %union.devlink_param_value], align 4
  %17 = alloca [3 x i8], align 1
  %18 = alloca %struct.devlink_param_gset_ctx, align 4
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %16) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(96) %16, i8 0, i32 96, i1 false), !annotation !9
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %17) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(3) %17, i8 0, i32 3, i1 false)
  %19 = getelementptr inbounds %struct.devlink_param_item, ptr %3, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %18) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %18, i8 0, i32 36, i1 false), !annotation !9
  %21 = getelementptr inbounds %struct.devlink_param, ptr %20, i32 0, i32 4
  %22 = getelementptr inbounds %struct.devlink_param_gset_ctx, ptr %18, i32 0, i32 1
  %23 = getelementptr inbounds %struct.devlink_param, ptr %20, i32 0, i32 5
  %24 = getelementptr inbounds %struct.devlink_param_item, ptr %3, i32 0, i32 3
  %25 = getelementptr inbounds [3 x %union.devlink_param_value], ptr %16, i32 0, i32 1
  %26 = getelementptr inbounds %struct.devlink_param_item, ptr %3, i32 0, i32 2
  %27 = load volatile i32, ptr %21, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %8
  store i32 0, ptr %22, align 4
  %31 = load ptr, ptr %23, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %260, label %33

33:                                               ; preds = %30
  %34 = load i32, ptr %20, align 4
  %35 = call i32 %31(ptr noundef %1, i32 noundef %34, ptr noundef nonnull %18) #27
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %260

37:                                               ; preds = %33
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(32) %16, ptr noundef nonnull align 4 dereferenceable(32) %18, i32 32, i1 false)
  store i8 1, ptr %17, align 1
  br label %38

38:                                               ; preds = %37, %8
  %39 = phi i8 [ 0, %8 ], [ 1, %37 ]
  %40 = load volatile i32, ptr %21, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = load i8, ptr %24, align 4, !range !18
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %260, label %46

46:                                               ; preds = %43
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(32) %25, ptr noundef align 4 dereferenceable(32) %26, i32 32, i1 false)
  %47 = getelementptr inbounds [3 x i8], ptr %17, i32 0, i32 1
  store i8 1, ptr %47, align 1
  br label %48

48:                                               ; preds = %46, %38
  %49 = load volatile i32, ptr %21, align 4
  %50 = and i32 %49, 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  store i32 2, ptr %22, align 4
  %53 = load ptr, ptr %23, align 4
  %54 = icmp eq ptr %53, null
  br i1 %54, label %260, label %55

55:                                               ; preds = %52
  %56 = load i32, ptr %20, align 4
  %57 = call i32 %53(ptr noundef %1, i32 noundef %56, ptr noundef nonnull %18) #27
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %260

59:                                               ; preds = %55
  %60 = getelementptr inbounds [3 x %union.devlink_param_value], ptr %16, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(32) %60, ptr noundef nonnull align 4 dereferenceable(32) %18, i32 32, i1 false)
  %61 = getelementptr inbounds [3 x i8], ptr %17, i32 0, i32 2
  store i8 1, ptr %61, align 1
  br label %62

62:                                               ; preds = %59, %48
  %63 = trunc i32 %4 to i8
  %64 = call ptr @genlmsg_put(ptr noundef %0, i32 noundef %5, i32 noundef %6, ptr noundef nonnull @devlink_nl_family, i32 noundef %7, i8 noundef zeroext %63) #27
  %65 = icmp eq ptr %64, null
  br i1 %65, label %260, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %68 = load ptr, ptr %67, align 4
  %69 = getelementptr inbounds %struct.device, ptr %68, i32 0, i32 5
  %70 = load ptr, ptr %69, align 4
  %71 = load ptr, ptr %70, align 4
  %72 = call i32 @strlen(ptr noundef %71) #27
  %73 = add i32 %72, 1
  %74 = call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %73, ptr noundef %71) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %246

76:                                               ; preds = %66
  %77 = load ptr, ptr %67, align 4
  %78 = getelementptr inbounds %struct.device, ptr %77, i32 0, i32 3
  %79 = load ptr, ptr %78, align 4
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = load ptr, ptr %77, align 4
  br label %83

83:                                               ; preds = %81, %76
  %84 = phi ptr [ %82, %81 ], [ %79, %76 ]
  %85 = call i32 @strlen(ptr noundef %84) #27
  %86 = add i32 %85, 1
  %87 = call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %86, ptr noundef %84) #27
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %246

89:                                               ; preds = %83
  switch i32 %4, label %93 [
    i32 49, label %90
    i32 47, label %90
  ]

90:                                               ; preds = %89, %89
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #27
  store i32 %2, ptr %15, align 4
  %91 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %15) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #27
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %246

93:                                               ; preds = %90, %89
  %94 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %95 = load ptr, ptr %94, align 8
  %96 = call i32 @nla_put(ptr noundef %0, i32 noundef 80, i32 noundef 0, ptr noundef null) #27
  %97 = icmp slt i32 %96, 0
  %98 = icmp eq ptr %95, null
  %99 = select i1 %97, i1 true, i1 %98
  br i1 %99, label %246, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %struct.devlink_param, ptr %20, i32 0, i32 1
  %102 = load ptr, ptr %101, align 4
  %103 = call i32 @strlen(ptr noundef %102) #27
  %104 = add i32 %103, 1
  %105 = call i32 @nla_put(ptr noundef %0, i32 noundef 81, i32 noundef %104, ptr noundef %102) #27
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %235

107:                                              ; preds = %100
  %108 = getelementptr inbounds %struct.devlink_param, ptr %20, i32 0, i32 2
  %109 = load i8, ptr %108, align 4, !range !18
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = call i32 @nla_put(ptr noundef %0, i32 noundef 82, i32 noundef 0, ptr noundef null) #27
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %235

114:                                              ; preds = %111, %107
  %115 = getelementptr inbounds %struct.devlink_param, ptr %20, i32 0, i32 3
  %116 = load i32, ptr %115, align 4
  %117 = icmp ult i32 %116, 5
  br i1 %117, label %118, label %235

118:                                              ; preds = %114
  %119 = getelementptr inbounds [5 x i8], ptr @switch.table.devlink_nl_param_fill, i32 0, i32 %116
  %120 = load i8, ptr %119, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %14) #27
  store i8 %120, ptr %14, align 1
  %121 = call i32 @nla_put(ptr noundef %0, i32 noundef 83, i32 noundef 1, ptr noundef nonnull %14) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %14) #27
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %235

123:                                              ; preds = %118
  %124 = load ptr, ptr %94, align 8
  %125 = call i32 @nla_put(ptr noundef %0, i32 noundef 84, i32 noundef 0, ptr noundef null) #27
  %126 = icmp slt i32 %125, 0
  %127 = icmp eq ptr %124, null
  %128 = select i1 %126, i1 true, i1 %127
  br i1 %128, label %235, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds [8 x i32], ptr %13, i32 0, i32 1
  %131 = getelementptr inbounds [8 x i32], ptr %13, i32 0, i32 2
  %132 = getelementptr inbounds [8 x i32], ptr %13, i32 0, i32 3
  %133 = getelementptr inbounds [8 x i32], ptr %13, i32 0, i32 4
  %134 = getelementptr inbounds [8 x i32], ptr %13, i32 0, i32 5
  %135 = getelementptr inbounds [8 x i32], ptr %13, i32 0, i32 6
  %136 = getelementptr inbounds [8 x i32], ptr %13, i32 0, i32 7
  br label %137

137:                                              ; preds = %210, %129
  %138 = phi i8 [ %39, %129 ], [ %212, %210 ]
  %139 = phi i32 [ 0, %129 ], [ %208, %210 ]
  %140 = icmp eq i8 %138, 0
  br i1 %140, label %207, label %141

141:                                              ; preds = %137
  %142 = load i32, ptr %115, align 4
  %143 = getelementptr [3 x %union.devlink_param_value], ptr %16, i32 0, i32 %139
  %144 = load i32, ptr %143, align 4
  %145 = getelementptr inbounds [8 x i32], ptr %143, i32 0, i32 1
  %146 = load i32, ptr %145, align 4
  %147 = getelementptr inbounds [8 x i32], ptr %143, i32 0, i32 2
  %148 = load i32, ptr %147, align 4
  %149 = getelementptr inbounds [8 x i32], ptr %143, i32 0, i32 3
  %150 = load i32, ptr %149, align 4
  %151 = getelementptr inbounds [8 x i32], ptr %143, i32 0, i32 4
  %152 = load i32, ptr %151, align 4
  %153 = getelementptr inbounds [8 x i32], ptr %143, i32 0, i32 5
  %154 = load i32, ptr %153, align 4
  %155 = getelementptr inbounds [8 x i32], ptr %143, i32 0, i32 6
  %156 = load i32, ptr %155, align 4
  %157 = getelementptr inbounds [8 x i32], ptr %143, i32 0, i32 7
  %158 = load i32, ptr %157, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13)
  store i32 %144, ptr %13, align 4
  store i32 %146, ptr %130, align 4
  store i32 %148, ptr %131, align 4
  store i32 %150, ptr %132, align 4
  store i32 %152, ptr %133, align 4
  store i32 %154, ptr %134, align 4
  store i32 %156, ptr %135, align 4
  store i32 %158, ptr %136, align 4
  %159 = load ptr, ptr %94, align 8
  %160 = call i32 @nla_put(ptr noundef %0, i32 noundef 85, i32 noundef 0, ptr noundef null) #27
  %161 = icmp slt i32 %160, 0
  %162 = icmp eq ptr %159, null
  %163 = select i1 %161, i1 true, i1 %162
  %164 = trunc i32 %144 to i8
  %165 = trunc i32 %144 to i16
  br i1 %163, label %229, label %166

166:                                              ; preds = %141
  %167 = trunc i32 %139 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #27
  store i8 %167, ptr %12, align 1
  %168 = call i32 @nla_put(ptr noundef %0, i32 noundef 87, i32 noundef 1, ptr noundef nonnull %12) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #27
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %190

170:                                              ; preds = %166
  switch i32 %142, label %201 [
    i32 0, label %171
    i32 1, label %174
    i32 2, label %177
    i32 3, label %180
    i32 4, label %185
  ]

171:                                              ; preds = %170
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #27
  store i8 %164, ptr %11, align 1
  %172 = call i32 @nla_put(ptr noundef %0, i32 noundef 86, i32 noundef 1, ptr noundef nonnull %11) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #27
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %201, label %190

174:                                              ; preds = %170
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %10) #27
  store i16 %165, ptr %10, align 2
  %175 = call i32 @nla_put(ptr noundef %0, i32 noundef 86, i32 noundef 2, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %10) #27
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %201, label %190

177:                                              ; preds = %170
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #27
  store i32 %144, ptr %9, align 4
  %178 = call i32 @nla_put(ptr noundef %0, i32 noundef 86, i32 noundef 4, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #27
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %201, label %190

180:                                              ; preds = %170
  %181 = call i32 @strlen(ptr noundef nonnull %13) #27
  %182 = add i32 %181, 1
  %183 = call i32 @nla_put(ptr noundef %0, i32 noundef 86, i32 noundef %182, ptr noundef nonnull %13) #27
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %201, label %190

185:                                              ; preds = %170
  %186 = icmp eq i8 %164, 0
  br i1 %186, label %201, label %187

187:                                              ; preds = %185
  %188 = call i32 @nla_put(ptr noundef %0, i32 noundef 86, i32 noundef 0, ptr noundef null) #27
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %187, %180, %177, %174, %171, %166
  %191 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %192 = load ptr, ptr %191, align 4
  %193 = icmp ugt ptr %192, %159
  br i1 %193, label %194, label %196, !prof !11

194:                                              ; preds = %190
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %195 = load ptr, ptr %191, align 4
  br label %196

196:                                              ; preds = %194, %190
  %197 = phi ptr [ %195, %194 ], [ %192, %190 ]
  %198 = ptrtoint ptr %159 to i32
  %199 = ptrtoint ptr %197 to i32
  %200 = sub i32 %198, %199
  call void @skb_trim(ptr noundef %0, i32 noundef %200) #27
  br label %229

201:                                              ; preds = %187, %185, %180, %177, %174, %171, %170
  %202 = load ptr, ptr %94, align 8
  %203 = ptrtoint ptr %202 to i32
  %204 = ptrtoint ptr %159 to i32
  %205 = sub i32 %203, %204
  %206 = trunc i32 %205 to i16
  store i16 %206, ptr %159, align 2
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13)
  br label %207

207:                                              ; preds = %201, %137
  %208 = add nuw nsw i32 %139, 1
  %209 = icmp eq i32 %208, 3
  br i1 %209, label %213, label %210

210:                                              ; preds = %207
  %211 = getelementptr [3 x i8], ptr %17, i32 0, i32 %208
  %212 = load i8, ptr %211, align 1, !range !18
  br label %137

213:                                              ; preds = %207
  %214 = load ptr, ptr %94, align 8
  %215 = ptrtoint ptr %214 to i32
  %216 = ptrtoint ptr %124 to i32
  %217 = sub i32 %215, %216
  %218 = trunc i32 %217 to i16
  store i16 %218, ptr %124, align 2
  %219 = load ptr, ptr %94, align 8
  %220 = ptrtoint ptr %219 to i32
  %221 = ptrtoint ptr %95 to i32
  %222 = sub i32 %220, %221
  %223 = trunc i32 %222 to i16
  store i16 %223, ptr %95, align 2
  %224 = getelementptr i8, ptr %64, i32 -20
  %225 = load ptr, ptr %94, align 8
  %226 = ptrtoint ptr %225 to i32
  %227 = ptrtoint ptr %224 to i32
  %228 = sub i32 %226, %227
  store i32 %228, ptr %224, align 4
  br label %260

229:                                              ; preds = %196, %141
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13)
  %230 = load ptr, ptr %94, align 8
  %231 = ptrtoint ptr %230 to i32
  %232 = ptrtoint ptr %124 to i32
  %233 = sub i32 %231, %232
  %234 = trunc i32 %233 to i16
  store i16 %234, ptr %124, align 2
  br label %235

235:                                              ; preds = %229, %123, %118, %114, %111, %100
  %236 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %237 = load ptr, ptr %236, align 4
  %238 = icmp ugt ptr %237, %95
  br i1 %238, label %239, label %241, !prof !11

239:                                              ; preds = %235
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %240 = load ptr, ptr %236, align 4
  br label %241

241:                                              ; preds = %239, %235
  %242 = phi ptr [ %240, %239 ], [ %237, %235 ]
  %243 = ptrtoint ptr %95 to i32
  %244 = ptrtoint ptr %242 to i32
  %245 = sub i32 %243, %244
  call void @skb_trim(ptr noundef %0, i32 noundef %245) #27
  br label %246

246:                                              ; preds = %241, %93, %90, %83, %66
  %247 = getelementptr i8, ptr %64, i32 -20
  %248 = icmp eq ptr %247, null
  br i1 %248, label %260, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %251 = load ptr, ptr %250, align 4
  %252 = icmp ugt ptr %251, %247
  br i1 %252, label %253, label %255, !prof !11

253:                                              ; preds = %249
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %254 = load ptr, ptr %250, align 4
  br label %255

255:                                              ; preds = %253, %249
  %256 = phi ptr [ %254, %253 ], [ %251, %249 ]
  %257 = ptrtoint ptr %247 to i32
  %258 = ptrtoint ptr %256 to i32
  %259 = sub i32 %257, %258
  call void @skb_trim(ptr noundef %0, i32 noundef %259) #27
  br label %260

260:                                              ; preds = %255, %246, %213, %62, %55, %52, %43, %33, %30
  %261 = phi i32 [ 0, %213 ], [ -90, %62 ], [ -90, %246 ], [ -90, %255 ], [ %35, %33 ], [ -95, %30 ], [ -95, %43 ], [ -95, %52 ], [ %57, %55 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %18) #27
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %17) #27
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %16) #27
  ret i32 %261
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__devlink_nl_cmd_param_set_doit(ptr noundef %0, i32 noundef %1, ptr noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4) unnamed_addr #0 {
  %6 = alloca %struct.devlink_param_gset_ctx, align 4
  %7 = alloca %union.devlink_param_value, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %6) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(36) %6, i8 0, i32 36, i1 false), !annotation !9
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(32) %7, i8 0, i32 32, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.genl_info, ptr %3, i32 0, i32 5
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr ptr, ptr %9, i32 81
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %162, label %13

13:                                               ; preds = %5
  %14 = getelementptr i8, ptr %11, i32 4
  br label %15

15:                                               ; preds = %19, %13
  %16 = phi ptr [ %2, %13 ], [ %17, %19 ]
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, %2
  br i1 %18, label %162, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.devlink_param_item, ptr %17, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.devlink_param, ptr %21, i32 0, i32 1
  %23 = load ptr, ptr %22, align 4
  %24 = tail call i32 @strcmp(ptr noundef %23, ptr noundef %14) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %15

26:                                               ; preds = %19
  %27 = icmp eq ptr %17, null
  br i1 %27, label %162, label %28

28:                                               ; preds = %26
  %29 = getelementptr ptr, ptr %9, i32 83
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %162, label %32

32:                                               ; preds = %28
  %33 = getelementptr i8, ptr %30, i32 4
  %34 = load i8, ptr %33, align 1
  switch i8 %34, label %162 [
    i8 1, label %39
    i8 2, label %35
    i8 3, label %36
    i8 5, label %37
    i8 6, label %38
  ]

35:                                               ; preds = %32
  br label %39

36:                                               ; preds = %32
  br label %39

37:                                               ; preds = %32
  br label %39

38:                                               ; preds = %32
  br label %39

39:                                               ; preds = %38, %37, %36, %35, %32
  %40 = phi i1 [ true, %38 ], [ false, %37 ], [ false, %36 ], [ false, %35 ], [ false, %32 ]
  %41 = phi i32 [ 4, %38 ], [ 3, %37 ], [ 2, %36 ], [ 1, %35 ], [ 0, %32 ]
  %42 = getelementptr inbounds %struct.devlink_param, ptr %21, i32 0, i32 3
  %43 = load i32, ptr %42, align 4
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %162

45:                                               ; preds = %39
  %46 = getelementptr ptr, ptr %9, i32 86
  %47 = load ptr, ptr %46, align 4
  %48 = icmp ne ptr %47, null
  %49 = select i1 %40, i1 true, i1 %48
  br i1 %49, label %50, label %162

50:                                               ; preds = %45
  switch i32 %41, label %86 [
    i32 0, label %51
    i32 1, label %57
    i32 2, label %63
    i32 3, label %69
    i32 4, label %80
  ]

51:                                               ; preds = %50
  %52 = load i16, ptr %47, align 2
  %53 = icmp eq i16 %52, 5
  br i1 %53, label %54, label %162

54:                                               ; preds = %51
  %55 = getelementptr i8, ptr %47, i32 4
  %56 = load i8, ptr %55, align 1
  store i8 %56, ptr %7, align 4
  br label %86

57:                                               ; preds = %50
  %58 = load i16, ptr %47, align 2
  %59 = icmp eq i16 %58, 6
  br i1 %59, label %60, label %162

60:                                               ; preds = %57
  %61 = getelementptr i8, ptr %47, i32 4
  %62 = load i16, ptr %61, align 2
  store i16 %62, ptr %7, align 4
  br label %86

63:                                               ; preds = %50
  %64 = load i16, ptr %47, align 2
  %65 = icmp eq i16 %64, 8
  br i1 %65, label %66, label %162

66:                                               ; preds = %63
  %67 = getelementptr i8, ptr %47, i32 4
  %68 = load i32, ptr %67, align 4
  store i32 %68, ptr %7, align 4
  br label %86

69:                                               ; preds = %50
  %70 = getelementptr i8, ptr %47, i32 4
  %71 = load i16, ptr %47, align 2
  %72 = zext i16 %71 to i32
  %73 = add nsw i32 %72, -4
  %74 = tail call i32 @strnlen(ptr noundef %70, i32 noundef %73) #27
  %75 = icmp eq i32 %74, %73
  %76 = icmp sgt i32 %74, 31
  %77 = or i1 %76, %75
  br i1 %77, label %162, label %78

78:                                               ; preds = %69
  %79 = call ptr @strcpy(ptr noundef nonnull %7, ptr noundef %70) #27
  br label %86

80:                                               ; preds = %50
  br i1 %48, label %81, label %84

81:                                               ; preds = %80
  %82 = load i16, ptr %47, align 2
  %83 = icmp eq i16 %82, 4
  br i1 %83, label %84, label %162

84:                                               ; preds = %81, %80
  %85 = zext i1 %48 to i8
  store i8 %85, ptr %7, align 4
  br label %86

86:                                               ; preds = %84, %78, %66, %60, %54, %50
  %87 = getelementptr inbounds %struct.devlink_param, ptr %21, i32 0, i32 7
  %88 = load ptr, ptr %87, align 4
  %89 = icmp eq ptr %88, null
  br i1 %89, label %121, label %90

90:                                               ; preds = %86
  %91 = load i32, ptr %21, align 4
  %92 = getelementptr inbounds %struct.genl_info, ptr %3, i32 0, i32 8
  %93 = load ptr, ptr %92, align 4
  %94 = load i32, ptr %7, align 4
  %95 = insertvalue [8 x i32] poison, i32 %94, 0
  %96 = getelementptr inbounds [8 x i32], ptr %7, i32 0, i32 1
  %97 = load i32, ptr %96, align 4
  %98 = insertvalue [8 x i32] %95, i32 %97, 1
  %99 = getelementptr inbounds [8 x i32], ptr %7, i32 0, i32 2
  %100 = load i32, ptr %99, align 4
  %101 = insertvalue [8 x i32] %98, i32 %100, 2
  %102 = getelementptr inbounds [8 x i32], ptr %7, i32 0, i32 3
  %103 = load i32, ptr %102, align 4
  %104 = insertvalue [8 x i32] %101, i32 %103, 3
  %105 = getelementptr inbounds [8 x i32], ptr %7, i32 0, i32 4
  %106 = load i32, ptr %105, align 4
  %107 = insertvalue [8 x i32] %104, i32 %106, 4
  %108 = getelementptr inbounds [8 x i32], ptr %7, i32 0, i32 5
  %109 = load i32, ptr %108, align 4
  %110 = insertvalue [8 x i32] %107, i32 %109, 5
  %111 = getelementptr inbounds [8 x i32], ptr %7, i32 0, i32 6
  %112 = load i32, ptr %111, align 4
  %113 = insertvalue [8 x i32] %110, i32 %112, 6
  %114 = getelementptr inbounds [8 x i32], ptr %7, i32 0, i32 7
  %115 = load i32, ptr %114, align 4
  %116 = insertvalue [8 x i32] %113, i32 %115, 7
  %117 = call i32 %88(ptr noundef %0, i32 noundef %91, [8 x i32] %116, ptr noundef %93) #27
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %162

119:                                              ; preds = %90
  %120 = load ptr, ptr %8, align 4
  br label %121

121:                                              ; preds = %119, %86
  %122 = phi ptr [ %120, %119 ], [ %9, %86 ]
  %123 = getelementptr ptr, ptr %122, i32 87
  %124 = load ptr, ptr %123, align 4
  %125 = icmp eq ptr %124, null
  br i1 %125, label %162, label %126

126:                                              ; preds = %121
  %127 = getelementptr i8, ptr %124, i32 4
  %128 = load i8, ptr %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds %struct.devlink_param, ptr %21, i32 0, i32 4
  %131 = lshr i32 %129, 5
  %132 = getelementptr i32, ptr %130, i32 %131
  %133 = load volatile i32, ptr %132, align 4
  %134 = and i32 %129, 31
  %135 = shl nuw i32 1, %134
  %136 = and i32 %135, %133
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %162, label %138

138:                                              ; preds = %126
  %139 = icmp eq i8 %128, 1
  br i1 %139, label %140, label %149

140:                                              ; preds = %138
  %141 = load i32, ptr %42, align 4
  %142 = icmp eq i32 %141, 3
  %143 = getelementptr inbounds %struct.devlink_param_item, ptr %17, i32 0, i32 2
  br i1 %142, label %144, label %146

144:                                              ; preds = %140
  %145 = call ptr @strcpy(ptr noundef %143, ptr noundef nonnull %7)
  br label %147

146:                                              ; preds = %140
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(32) %143, ptr noundef nonnull align 4 dereferenceable(32) %7, i32 32, i1 false)
  br label %147

147:                                              ; preds = %146, %144
  %148 = getelementptr inbounds %struct.devlink_param_item, ptr %17, i32 0, i32 3
  store i8 1, ptr %148, align 4
  br label %161

149:                                              ; preds = %138
  %150 = getelementptr inbounds %struct.devlink_param, ptr %21, i32 0, i32 6
  %151 = load ptr, ptr %150, align 4
  %152 = icmp eq ptr %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %149
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(32) %6, ptr noundef nonnull align 4 dereferenceable(32) %7, i32 32, i1 false)
  %154 = getelementptr inbounds %struct.devlink_param_gset_ctx, ptr %6, i32 0, i32 1
  store i32 %129, ptr %154, align 4
  %155 = load ptr, ptr %150, align 4
  %156 = icmp eq ptr %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %153
  %158 = load i32, ptr %21, align 4
  %159 = call i32 %155(ptr noundef %0, i32 noundef %158, ptr noundef nonnull %6) #27
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %157, %147
  call fastcc void @devlink_param_notify(ptr noundef %0, i32 noundef %1, ptr noundef nonnull %17, i32 noundef %4)
  br label %162

162:                                              ; preds = %161, %157, %153, %149, %126, %121, %90, %81, %69, %63, %57, %51, %45, %39, %32, %28, %26, %15, %5
  %163 = phi i32 [ 0, %161 ], [ -22, %26 ], [ -22, %39 ], [ %117, %90 ], [ -22, %121 ], [ -95, %126 ], [ -95, %149 ], [ %159, %157 ], [ -22, %45 ], [ -22, %51 ], [ -22, %57 ], [ -22, %63 ], [ -22, %69 ], [ -22, %81 ], [ -22, %5 ], [ -22, %28 ], [ -22, %32 ], [ -95, %153 ], [ -22, %15 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %6) #27
  ret i32 %163
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strnlen(ptr nocapture noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_region_fill(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr noundef %5) unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %2, i32 noundef %3, ptr noundef nonnull @devlink_nl_family, i32 noundef %4, i8 noundef zeroext 42) #27
  %11 = icmp eq ptr %10, null
  br i1 %11, label %87, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.device, ptr %14, i32 0, i32 5
  %16 = load ptr, ptr %15, align 4
  %17 = load ptr, ptr %16, align 4
  %18 = tail call i32 @strlen(ptr noundef %17) #27
  %19 = add i32 %18, 1
  %20 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %19, ptr noundef %17) #27
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %72

22:                                               ; preds = %12
  %23 = load ptr, ptr %13, align 4
  %24 = getelementptr inbounds %struct.device, ptr %23, i32 0, i32 3
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = load ptr, ptr %23, align 4
  br label %29

29:                                               ; preds = %27, %22
  %30 = phi ptr [ %28, %27 ], [ %25, %22 ]
  %31 = tail call i32 @strlen(ptr noundef %30) #27
  %32 = add i32 %31, 1
  %33 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %32, ptr noundef %30) #27
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %72

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.devlink_region, ptr %5, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.devlink_port, ptr %37, i32 0, i32 4
  %41 = load i32, ptr %40, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #27
  store i32 %41, ptr %9, align 4
  %42 = call i32 @nla_put(ptr noundef %0, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %72

44:                                               ; preds = %39, %35
  %45 = getelementptr inbounds %struct.devlink_region, ptr %5, i32 0, i32 3
  %46 = load ptr, ptr %45, align 8
  %47 = load ptr, ptr %46, align 4
  %48 = call i32 @strlen(ptr noundef %47) #27
  %49 = add i32 %48, 1
  %50 = call i32 @nla_put(ptr noundef %0, i32 noundef 88, i32 noundef %49, ptr noundef %47) #27
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %72

52:                                               ; preds = %44
  %53 = getelementptr inbounds %struct.devlink_region, ptr %5, i32 0, i32 7
  %54 = load i64, ptr %53, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #27
  store i64 %54, ptr %8, align 8
  %55 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 89, i32 noundef 8, ptr noundef nonnull %8, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #27
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %72

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.devlink_region, ptr %5, i32 0, i32 5
  %59 = load i32, ptr %58, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 %59, ptr %7, align 4
  %60 = call i32 @nla_put(ptr noundef %0, i32 noundef 170, i32 noundef 4, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %72

62:                                               ; preds = %57
  %63 = call fastcc i32 @devlink_nl_region_snapshots_id_put(ptr noundef %0, ptr noundef %5)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %62
  %66 = getelementptr i8, ptr %10, i32 -20
  %67 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %68 = load ptr, ptr %67, align 8
  %69 = ptrtoint ptr %68 to i32
  %70 = ptrtoint ptr %66 to i32
  %71 = sub i32 %69, %70
  store i32 %71, ptr %66, align 4
  br label %87

72:                                               ; preds = %62, %57, %52, %44, %39, %29, %12
  %73 = phi i32 [ %42, %39 ], [ %50, %44 ], [ %55, %52 ], [ %60, %57 ], [ %63, %62 ], [ -90, %12 ], [ -90, %29 ]
  %74 = getelementptr i8, ptr %10, i32 -20
  %75 = icmp eq ptr %74, null
  br i1 %75, label %87, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %78 = load ptr, ptr %77, align 4
  %79 = icmp ugt ptr %78, %74
  br i1 %79, label %80, label %82, !prof !11

80:                                               ; preds = %76
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %81 = load ptr, ptr %77, align 4
  br label %82

82:                                               ; preds = %80, %76
  %83 = phi ptr [ %81, %80 ], [ %78, %76 ]
  %84 = ptrtoint ptr %74 to i32
  %85 = ptrtoint ptr %83 to i32
  %86 = sub i32 %84, %85
  call void @skb_trim(ptr noundef %0, i32 noundef %86) #27
  br label %87

87:                                               ; preds = %82, %72, %65, %6
  %88 = phi i32 [ 0, %65 ], [ -90, %6 ], [ %73, %72 ], [ %73, %82 ]
  ret i32 %88
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_region_snapshots_id_put(ptr noundef %0, ptr noundef readonly %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 90, i32 noundef 0, ptr noundef null) #27
  %7 = icmp slt i32 %6, 0
  %8 = icmp eq ptr %5, null
  %9 = select i1 %7, i1 true, i1 %8
  br i1 %9, label %63, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.devlink_region, ptr %1, i32 0, i32 4
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, %11
  br i1 %13, label %45, label %14

14:                                               ; preds = %37, %10
  %15 = phi ptr [ %43, %37 ], [ %12, %10 ]
  %16 = load ptr, ptr %4, align 8
  %17 = call i32 @nla_put(ptr noundef %0, i32 noundef 91, i32 noundef 0, ptr noundef null) #27
  %18 = icmp slt i32 %17, 0
  %19 = icmp eq ptr %16, null
  %20 = select i1 %18, i1 true, i1 %19
  br i1 %20, label %51, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.devlink_snapshot, ptr %15, i32 0, i32 3
  %23 = load i32, ptr %22, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 %23, ptr %3, align 4
  %24 = call i32 @nla_put(ptr noundef %0, i32 noundef 92, i32 noundef 4, ptr noundef nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %28 = load ptr, ptr %27, align 4
  %29 = icmp ugt ptr %28, %16
  br i1 %29, label %30, label %32, !prof !11

30:                                               ; preds = %26
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %31 = load ptr, ptr %27, align 4
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi ptr [ %31, %30 ], [ %28, %26 ]
  %34 = ptrtoint ptr %16 to i32
  %35 = ptrtoint ptr %33 to i32
  %36 = sub i32 %34, %35
  call void @skb_trim(ptr noundef %0, i32 noundef %36) #27
  br label %51

37:                                               ; preds = %21
  %38 = load ptr, ptr %4, align 8
  %39 = ptrtoint ptr %38 to i32
  %40 = ptrtoint ptr %16 to i32
  %41 = sub i32 %39, %40
  %42 = trunc i32 %41 to i16
  store i16 %42, ptr %16, align 2
  %43 = load ptr, ptr %15, align 4
  %44 = icmp eq ptr %43, %11
  br i1 %44, label %45, label %14

45:                                               ; preds = %37, %10
  %46 = load ptr, ptr %4, align 8
  %47 = ptrtoint ptr %46 to i32
  %48 = ptrtoint ptr %5 to i32
  %49 = sub i32 %47, %48
  %50 = trunc i32 %49 to i16
  store i16 %50, ptr %5, align 2
  br label %63

51:                                               ; preds = %32, %14
  %52 = phi i32 [ %24, %32 ], [ -22, %14 ]
  %53 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %54 = load ptr, ptr %53, align 4
  %55 = icmp ugt ptr %54, %5
  br i1 %55, label %56, label %58, !prof !11

56:                                               ; preds = %51
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %57 = load ptr, ptr %53, align 4
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi ptr [ %57, %56 ], [ %54, %51 ]
  %60 = ptrtoint ptr %5 to i32
  %61 = ptrtoint ptr %59 to i32
  %62 = sub i32 %60, %61
  call void @skb_trim(ptr noundef %0, i32 noundef %62) #27
  br label %63

63:                                               ; preds = %58, %45, %2
  %64 = phi i32 [ %52, %58 ], [ 0, %45 ], [ -22, %2 ]
  ret i32 %64
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @devlink_nl_region_notify_build(ptr nocapture noundef readonly %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = load ptr, ptr %0, align 8
  %10 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %11 = icmp eq ptr %10, null
  br i1 %11, label %93, label %12

12:                                               ; preds = %5
  %13 = trunc i32 %2 to i8
  %14 = tail call ptr @genlmsg_put(ptr noundef nonnull %10, i32 noundef %3, i32 noundef %4, ptr noundef nonnull @devlink_nl_family, i32 noundef 0, i8 noundef zeroext %13) #27
  %15 = icmp eq ptr %14, null
  br i1 %15, label %90, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.devlink, ptr %9, i32 0, i32 18
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 5
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @strlen(ptr noundef %21) #27
  %23 = add i32 %22, 1
  %24 = tail call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 1, i32 noundef %23, ptr noundef %21) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %75

26:                                               ; preds = %16
  %27 = load ptr, ptr %17, align 4
  %28 = getelementptr inbounds %struct.device, ptr %27, i32 0, i32 3
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = load ptr, ptr %27, align 4
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi ptr [ %32, %31 ], [ %29, %26 ]
  %35 = tail call i32 @strlen(ptr noundef %34) #27
  %36 = add i32 %35, 1
  %37 = tail call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 2, i32 noundef %36, ptr noundef %34) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %75

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.devlink_port, ptr %41, i32 0, i32 4
  %45 = load i32, ptr %44, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #27
  store i32 %45, ptr %8, align 4
  %46 = call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 3, i32 noundef 4, ptr noundef nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #27
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %75

48:                                               ; preds = %43, %39
  %49 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 3
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr %50, align 4
  %52 = call i32 @strlen(ptr noundef %51) #27
  %53 = add i32 %52, 1
  %54 = call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 88, i32 noundef %53, ptr noundef %51) #27
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %75

56:                                               ; preds = %48
  %57 = icmp eq ptr %1, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.devlink_snapshot, ptr %1, i32 0, i32 3
  %60 = load i32, ptr %59, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 %60, ptr %7, align 4
  %61 = call i32 @nla_put(ptr noundef nonnull %10, i32 noundef 92, i32 noundef 4, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %68, label %75

63:                                               ; preds = %56
  %64 = getelementptr inbounds %struct.devlink_region, ptr %0, i32 0, i32 7
  %65 = load i64, ptr %64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 %65, ptr %6, align 8
  %66 = call i32 @nla_put_64bit(ptr noundef nonnull %10, i32 noundef 89, i32 noundef 8, ptr noundef nonnull %6, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %63, %58
  %69 = getelementptr i8, ptr %14, i32 -20
  %70 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 14
  %71 = load ptr, ptr %70, align 8
  %72 = ptrtoint ptr %71 to i32
  %73 = ptrtoint ptr %69 to i32
  %74 = sub i32 %72, %73
  store i32 %74, ptr %69, align 4
  br label %93

75:                                               ; preds = %63, %58, %48, %43, %33, %16
  %76 = phi i32 [ %46, %43 ], [ %54, %48 ], [ %61, %58 ], [ %66, %63 ], [ -90, %16 ], [ -90, %33 ]
  %77 = getelementptr i8, ptr %14, i32 -20
  %78 = icmp eq ptr %77, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 17
  %81 = load ptr, ptr %80, align 4
  %82 = icmp ugt ptr %81, %77
  br i1 %82, label %83, label %85, !prof !11

83:                                               ; preds = %79
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %84 = load ptr, ptr %80, align 4
  br label %85

85:                                               ; preds = %83, %79
  %86 = phi ptr [ %84, %83 ], [ %81, %79 ]
  %87 = ptrtoint ptr %77 to i32
  %88 = ptrtoint ptr %86 to i32
  %89 = sub i32 %87, %88
  call void @skb_trim(ptr noundef nonnull %10, i32 noundef %89) #27
  br label %90

90:                                               ; preds = %85, %75, %12
  %91 = phi i32 [ -90, %12 ], [ %76, %75 ], [ %76, %85 ]
  call void @kfree_skb_reason(ptr noundef nonnull %10, i32 noundef 0) #27
  %92 = inttoptr i32 %91 to ptr
  br label %93

93:                                               ; preds = %90, %68, %5
  %94 = phi ptr [ %92, %90 ], [ %10, %68 ], [ inttoptr (i32 -12 to ptr), %5 ]
  ret ptr %94
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_load(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_store(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_region_read_snapshot_fill(ptr noundef %0, ptr noundef readonly %1, ptr nocapture noundef readonly %2, i64 noundef %3, i64 noundef %4, ptr nocapture noundef writeonly %5) unnamed_addr #0 {
  %7 = alloca i64, align 8
  store i64 %3, ptr %5, align 8
  %8 = getelementptr ptr, ptr %2, i32 92
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr i8, ptr %9, i32 4
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.devlink_region, ptr %1, i32 0, i32 4
  br label %13

13:                                               ; preds = %17, %6
  %14 = phi ptr [ %12, %6 ], [ %15, %17 ]
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %12
  br i1 %16, label %70, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.devlink_snapshot, ptr %15, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = icmp eq i32 %19, %11
  br i1 %20, label %21, label %13

21:                                               ; preds = %17
  %22 = icmp eq ptr %15, null
  br i1 %22, label %70, label %23

23:                                               ; preds = %21
  %24 = icmp ult i64 %3, %4
  br i1 %24, label %25, label %67

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.devlink_snapshot, ptr %15, i32 0, i32 2
  %27 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  br label %28

28:                                               ; preds = %59, %25
  %29 = phi i64 [ %3, %25 ], [ %65, %59 ]
  %30 = sub i64 %4, %29
  %31 = call i64 @llvm.umin.i64(i64 %30, i64 256)
  %32 = load ptr, ptr %26, align 4
  %33 = load ptr, ptr %27, align 8
  %34 = call i32 @nla_put(ptr noundef %0, i32 noundef 94, i32 noundef 0, ptr noundef null) #27
  %35 = icmp slt i32 %34, 0
  %36 = icmp eq ptr %33, null
  %37 = select i1 %35, i1 true, i1 %36
  br i1 %37, label %67, label %38

38:                                               ; preds = %28
  %39 = trunc i64 %31 to i32
  %40 = trunc i64 %29 to i32
  %41 = getelementptr i8, ptr %32, i32 %40
  %42 = call i32 @nla_put(ptr noundef %0, i32 noundef 95, i32 noundef %39, ptr noundef %41) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #27
  store i64 %29, ptr %7, align 8
  %45 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 96, i32 noundef 8, ptr noundef nonnull %7, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #27
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %44, %38
  %48 = phi i32 [ %42, %38 ], [ %45, %44 ]
  %49 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %50 = load ptr, ptr %49, align 4
  %51 = icmp ugt ptr %50, %33
  br i1 %51, label %52, label %54, !prof !11

52:                                               ; preds = %47
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %53 = load ptr, ptr %49, align 4
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi ptr [ %53, %52 ], [ %50, %47 ]
  %56 = ptrtoint ptr %33 to i32
  %57 = ptrtoint ptr %55 to i32
  %58 = sub i32 %56, %57
  call void @skb_trim(ptr noundef %0, i32 noundef %58) #27
  br label %67

59:                                               ; preds = %44
  %60 = load ptr, ptr %27, align 8
  %61 = ptrtoint ptr %60 to i32
  %62 = ptrtoint ptr %33 to i32
  %63 = sub i32 %61, %62
  %64 = trunc i32 %63 to i16
  store i16 %64, ptr %33, align 2
  %65 = add i64 %31, %29
  %66 = icmp ult i64 %65, %4
  br i1 %66, label %28, label %67

67:                                               ; preds = %59, %54, %28, %23
  %68 = phi i64 [ %29, %54 ], [ %3, %23 ], [ %65, %59 ], [ %29, %28 ]
  %69 = phi i32 [ %48, %54 ], [ 0, %23 ], [ 0, %59 ], [ -22, %28 ]
  store i64 %68, ptr %5, align 8
  br label %70

70:                                               ; preds = %67, %21, %13
  %71 = phi i32 [ %69, %67 ], [ -22, %21 ], [ -22, %13 ]
  ret i32 %71
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_info_fill(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr noundef %5) unnamed_addr #0 {
  %7 = alloca %struct.devlink_info_req, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #27
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %2, i32 noundef %3, ptr noundef nonnull @devlink_nl_family, i32 noundef %4, i8 noundef zeroext 51) #27
  %9 = icmp eq ptr %8, null
  br i1 %9, label %62, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.device, ptr %12, i32 0, i32 5
  %14 = load ptr, ptr %13, align 4
  %15 = load ptr, ptr %14, align 4
  %16 = tail call i32 @strlen(ptr noundef %15) #27
  %17 = add i32 %16, 1
  %18 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %17, ptr noundef %15) #27
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %47

20:                                               ; preds = %10
  %21 = load ptr, ptr %11, align 4
  %22 = getelementptr inbounds %struct.device, ptr %21, i32 0, i32 3
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = load ptr, ptr %21, align 4
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi ptr [ %26, %25 ], [ %23, %20 ]
  %29 = tail call i32 @strlen(ptr noundef %28) #27
  %30 = add i32 %29, 1
  %31 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %30, ptr noundef %28) #27
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %27
  store ptr %0, ptr %7, align 4
  %34 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 14
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.devlink_ops, ptr %35, i32 0, i32 24
  %37 = load ptr, ptr %36, align 4
  %38 = call i32 %37(ptr noundef %1, ptr noundef nonnull %7, ptr noundef %5) #27
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %33
  %41 = getelementptr i8, ptr %8, i32 -20
  %42 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %43 = load ptr, ptr %42, align 8
  %44 = ptrtoint ptr %43 to i32
  %45 = ptrtoint ptr %41 to i32
  %46 = sub i32 %44, %45
  store i32 %46, ptr %41, align 4
  br label %62

47:                                               ; preds = %33, %27, %10
  %48 = phi i32 [ %38, %33 ], [ -90, %10 ], [ -90, %27 ]
  %49 = getelementptr i8, ptr %8, i32 -20
  %50 = icmp eq ptr %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %53 = load ptr, ptr %52, align 4
  %54 = icmp ugt ptr %53, %49
  br i1 %54, label %55, label %57, !prof !11

55:                                               ; preds = %51
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %56 = load ptr, ptr %52, align 4
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi ptr [ %56, %55 ], [ %53, %51 ]
  %59 = ptrtoint ptr %49 to i32
  %60 = ptrtoint ptr %58 to i32
  %61 = sub i32 %59, %60
  call void @skb_trim(ptr noundef %0, i32 noundef %61) #27
  br label %62

62:                                               ; preds = %57, %47, %40, %6
  %63 = phi i32 [ 0, %40 ], [ -90, %6 ], [ %48, %47 ], [ %48, %57 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #27
  ret i32 %63
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @devlink_health_reporter_get_from_attrs(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = getelementptr ptr, ptr %1, i32 115
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %82, label %6

6:                                                ; preds = %2
  %7 = getelementptr i8, ptr %4, i32 4
  %8 = getelementptr ptr, ptr %1, i32 3
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %6
  %12 = getelementptr i8, ptr %9, i32 4
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 1
  br label %15

15:                                               ; preds = %19, %11
  %16 = phi ptr [ %14, %11 ], [ %17, %19 ]
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, %14
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq i32 %21, %13
  br i1 %22, label %23, label %15

23:                                               ; preds = %19
  %24 = icmp eq ptr %17, null
  %25 = icmp ugt ptr %17, inttoptr (i32 -4096 to ptr)
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %53

27:                                               ; preds = %23, %15, %6
  %28 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 9
  tail call void @mutex_lock(ptr noundef %28) #27
  %29 = getelementptr inbounds %struct.devlink, ptr %0, i32 0, i32 8
  br label %30

30:                                               ; preds = %34, %27
  %31 = phi ptr [ %29, %27 ], [ %32, %34 ]
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, %29
  br i1 %33, label %79, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.devlink_health_reporter, ptr %32, i32 0, i32 2
  %36 = load ptr, ptr %35, align 4
  %37 = load ptr, ptr %36, align 4
  %38 = tail call i32 @strcmp(ptr noundef %37, ptr noundef %7) #27
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %30

40:                                               ; preds = %34
  %41 = icmp eq ptr %32, null
  br i1 %41, label %79, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %struct.devlink_health_reporter, ptr %32, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %43) #27, !srcloc !14
  %44 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %43, ptr %43, i32 1, ptr elementtype(i32) %43) #27, !srcloc !43
  %45 = extractvalue { i32, i32, i32 } %44, 0
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47, !prof !11

47:                                               ; preds = %42
  %48 = add i32 %45, 1
  %49 = or i32 %48, %45
  %50 = icmp sgt i32 %49, -1
  br i1 %50, label %79, label %51, !prof !10

51:                                               ; preds = %47, %42
  %52 = phi i32 [ 2, %42 ], [ 1, %47 ]
  tail call void @refcount_warn_saturate(ptr noundef %43, i32 noundef %52) #27
  br label %79

53:                                               ; preds = %23
  %54 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 13
  tail call void @mutex_lock(ptr noundef %54) #27
  %55 = getelementptr inbounds %struct.devlink_port, ptr %17, i32 0, i32 12
  br label %56

56:                                               ; preds = %60, %53
  %57 = phi ptr [ %55, %53 ], [ %58, %60 ]
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, %55
  br i1 %59, label %79, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.devlink_health_reporter, ptr %58, i32 0, i32 2
  %62 = load ptr, ptr %61, align 4
  %63 = load ptr, ptr %62, align 4
  %64 = tail call i32 @strcmp(ptr noundef %63, ptr noundef %7) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %56

66:                                               ; preds = %60
  %67 = icmp eq ptr %58, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.devlink_health_reporter, ptr %58, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %69) #27, !srcloc !14
  %70 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %69, ptr %69, i32 1, ptr elementtype(i32) %69) #27, !srcloc !43
  %71 = extractvalue { i32, i32, i32 } %70, 0
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73, !prof !11

73:                                               ; preds = %68
  %74 = add i32 %71, 1
  %75 = or i32 %74, %71
  %76 = icmp sgt i32 %75, -1
  br i1 %76, label %79, label %77, !prof !10

77:                                               ; preds = %73, %68
  %78 = phi i32 [ 2, %68 ], [ 1, %73 ]
  tail call void @refcount_warn_saturate(ptr noundef %69, i32 noundef %78) #27
  br label %79

79:                                               ; preds = %77, %73, %66, %56, %51, %47, %40, %30
  %80 = phi ptr [ %28, %51 ], [ %28, %47 ], [ %28, %40 ], [ %54, %77 ], [ %54, %73 ], [ %54, %66 ], [ %28, %30 ], [ %54, %56 ]
  %81 = phi ptr [ %32, %51 ], [ %32, %47 ], [ null, %40 ], [ %58, %77 ], [ %58, %73 ], [ null, %66 ], [ null, %30 ], [ null, %56 ]
  tail call void @mutex_unlock(ptr noundef %80) #27
  br label %82

82:                                               ; preds = %79, %2
  %83 = phi ptr [ null, %2 ], [ %81, %79 ]
  ret ptr %83
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_fmsg_snd(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds %struct.genl_info, ptr %1, i32 0, i32 1
  %5 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %6 = icmp eq ptr %5, null
  br i1 %6, label %65, label %7

7:                                                ; preds = %32, %2
  %8 = phi ptr [ %34, %32 ], [ %5, %2 ]
  %9 = phi i32 [ %33, %32 ], [ 0, %2 ]
  %10 = load i32, ptr %4, align 4
  %11 = load i32, ptr %1, align 4
  %12 = tail call ptr @genlmsg_put(ptr noundef nonnull %8, i32 noundef %10, i32 noundef %11, ptr noundef nonnull @devlink_nl_family, i32 noundef 2, i8 noundef zeroext 55) #27
  %13 = icmp eq ptr %12, null
  br i1 %13, label %62, label %14

14:                                               ; preds = %7
  %15 = call fastcc i32 @devlink_fmsg_prepare_skb(ptr noundef %0, ptr noundef nonnull %8, ptr noundef nonnull %3)
  switch i32 %15, label %62 [
    i32 0, label %19
    i32 -90, label %16
  ]

16:                                               ; preds = %14
  %17 = load i32, ptr %3, align 4
  %18 = icmp eq i32 %9, %17
  br i1 %18, label %62, label %19

19:                                               ; preds = %16, %14
  %20 = phi i1 [ false, %16 ], [ true, %14 ]
  %21 = getelementptr i8, ptr %12, i32 -20
  %22 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 14
  %23 = load ptr, ptr %22, align 8
  %24 = ptrtoint ptr %23 to i32
  %25 = ptrtoint ptr %21 to i32
  %26 = sub i32 %24, %25
  store i32 %26, ptr %21, align 4
  %27 = load i32, ptr %4, align 4
  %28 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %29 = tail call i32 @netlink_unicast(ptr noundef %28, ptr noundef nonnull %8, i32 noundef %27, i32 noundef 64) #27
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %31, label %65

31:                                               ; preds = %19
  br i1 %20, label %36, label %32

32:                                               ; preds = %31
  %33 = load i32, ptr %3, align 4
  %34 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %35 = icmp eq ptr %34, null
  br i1 %35, label %65, label %7

36:                                               ; preds = %31
  %37 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %38 = icmp eq ptr %37, null
  br i1 %38, label %65, label %39

39:                                               ; preds = %36
  %40 = load i32, ptr %4, align 4
  %41 = load i32, ptr %1, align 4
  %42 = getelementptr inbounds %struct.sk_buff, ptr %37, i32 0, i32 6
  %43 = load i32, ptr %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %62

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.sk_buff, ptr %37, i32 0, i32 15
  %47 = load ptr, ptr %46, align 4
  %48 = getelementptr inbounds %struct.sk_buff, ptr %37, i32 0, i32 14
  %49 = load ptr, ptr %48, align 8
  %50 = ptrtoint ptr %47 to i32
  %51 = ptrtoint ptr %49 to i32
  %52 = sub i32 %50, %51
  %53 = icmp slt i32 %52, 16
  br i1 %53, label %62, label %54, !prof !11

54:                                               ; preds = %45
  %55 = tail call ptr @__nlmsg_put(ptr noundef nonnull %37, i32 noundef %40, i32 noundef %41, i32 noundef 3, i32 noundef 0, i32 noundef 2) #27
  %56 = icmp eq ptr %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = load i32, ptr %4, align 4
  %59 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %60 = tail call i32 @netlink_unicast(ptr noundef %59, ptr noundef nonnull %37, i32 noundef %58, i32 noundef 64) #27
  %61 = tail call i32 @llvm.smin.i32(i32 %60, i32 0) #27
  br label %65

62:                                               ; preds = %54, %45, %39, %16, %14, %7
  %63 = phi ptr [ %37, %54 ], [ %37, %45 ], [ %37, %39 ], [ %8, %7 ], [ %8, %14 ], [ %8, %16 ]
  %64 = phi i32 [ -90, %54 ], [ -90, %45 ], [ -90, %39 ], [ -90, %16 ], [ %15, %14 ], [ -90, %7 ]
  tail call void @kfree_skb_reason(ptr noundef nonnull %63, i32 noundef 0) #27
  br label %65

65:                                               ; preds = %62, %57, %36, %32, %19, %2
  %66 = phi i32 [ %64, %62 ], [ %61, %57 ], [ -12, %36 ], [ -12, %2 ], [ -12, %32 ], [ %29, %19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  ret i32 %66
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_fmsg_prepare_skb(ptr noundef readonly %0, ptr noundef %1, ptr nocapture noundef %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 14
  %10 = load ptr, ptr %9, align 8
  %11 = tail call i32 @nla_put(ptr noundef %1, i32 noundef 106, i32 noundef 0, ptr noundef null) #27
  %12 = icmp slt i32 %11, 0
  %13 = icmp eq ptr %10, null
  %14 = select i1 %12, i1 true, i1 %13
  br i1 %14, label %89, label %15

15:                                               ; preds = %3
  %16 = load ptr, ptr %0, align 4
  %17 = icmp eq ptr %16, %0
  br i1 %17, label %82, label %18

18:                                               ; preds = %15
  %19 = load i32, ptr %2, align 4
  br label %20

20:                                               ; preds = %77, %18
  %21 = phi i32 [ %78, %77 ], [ %19, %18 ]
  %22 = phi ptr [ %80, %77 ], [ %16, %18 ]
  %23 = phi i32 [ %79, %77 ], [ 0, %18 ]
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = add nsw i32 %23, 1
  br label %77

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  switch i32 %29, label %82 [
    i32 107, label %30
    i32 108, label %30
    i32 109, label %30
    i32 110, label %30
    i32 113, label %32
    i32 111, label %67
  ]

30:                                               ; preds = %27, %27, %27, %27
  %31 = call i32 @nla_put(ptr noundef %1, i32 noundef %29, i32 noundef 0, ptr noundef null) #27
  br label %72

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 2
  %34 = load i8, ptr %33, align 4
  switch i8 %34, label %82 [
    i8 6, label %35
    i8 1, label %35
    i8 3, label %35
    i8 4, label %35
    i8 10, label %35
    i8 11, label %35
  ]

35:                                               ; preds = %32, %32, %32, %32, %32, %32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #27
  store i8 %34, ptr %8, align 1
  %36 = call i32 @nla_put(ptr noundef %1, i32 noundef 112, i32 noundef 1, ptr noundef nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #27
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %82

38:                                               ; preds = %35
  %39 = load i8, ptr %33, align 4
  switch i8 %39, label %82 [
    i8 6, label %40
    i8 1, label %44
    i8 3, label %48
    i8 4, label %52
    i8 10, label %56
    i8 11, label %61
  ]

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 4
  %42 = load i8, ptr %41, align 4, !range !18
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #27
  store i8 %42, ptr %7, align 1
  %43 = call i32 @nla_put(ptr noundef %1, i32 noundef 113, i32 noundef 1, ptr noundef nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #27
  br label %72

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 4
  %46 = load i8, ptr %45, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #27
  store i8 %46, ptr %6, align 1
  %47 = call i32 @nla_put(ptr noundef %1, i32 noundef 113, i32 noundef 1, ptr noundef nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #27
  br label %72

48:                                               ; preds = %38
  %49 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 4
  %50 = load i32, ptr %49, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store i32 %50, ptr %5, align 4
  %51 = call i32 @nla_put(ptr noundef %1, i32 noundef 113, i32 noundef 4, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  br label %72

52:                                               ; preds = %38
  %53 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 4
  %54 = load i64, ptr %53, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 %54, ptr %4, align 8
  %55 = call i32 @nla_put_64bit(ptr noundef %1, i32 noundef 113, i32 noundef 8, ptr noundef nonnull %4, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  br label %72

56:                                               ; preds = %38
  %57 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 4
  %58 = call i32 @strlen(ptr noundef %57) #27
  %59 = add i32 %58, 1
  %60 = call i32 @nla_put(ptr noundef %1, i32 noundef 113, i32 noundef %59, ptr noundef %57) #27
  br label %72

61:                                               ; preds = %38
  %62 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 3
  %63 = load i16, ptr %62, align 2
  %64 = zext i16 %63 to i32
  %65 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 4
  %66 = call i32 @nla_put(ptr noundef %1, i32 noundef 113, i32 noundef %64, ptr noundef %65) #27
  br label %72

67:                                               ; preds = %27
  %68 = getelementptr inbounds %struct.devlink_fmsg_item, ptr %22, i32 0, i32 4
  %69 = call i32 @strlen(ptr noundef %68) #27
  %70 = add i32 %69, 1
  %71 = call i32 @nla_put(ptr noundef %1, i32 noundef 111, i32 noundef %70, ptr noundef %68) #27
  br label %72

72:                                               ; preds = %67, %61, %56, %52, %48, %44, %40, %30
  %73 = phi i32 [ %71, %67 ], [ %31, %30 ], [ %66, %61 ], [ %60, %56 ], [ %55, %52 ], [ %51, %48 ], [ %47, %44 ], [ %43, %40 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %72
  %76 = add i32 %23, 1
  store i32 %76, ptr %2, align 4
  br label %77

77:                                               ; preds = %75, %25
  %78 = phi i32 [ %21, %25 ], [ %76, %75 ]
  %79 = phi i32 [ %26, %25 ], [ %76, %75 ]
  %80 = load ptr, ptr %22, align 4
  %81 = icmp eq ptr %80, %0
  br i1 %81, label %82, label %20

82:                                               ; preds = %77, %72, %38, %35, %32, %27, %15
  %83 = phi i32 [ 0, %15 ], [ -22, %32 ], [ -22, %38 ], [ -22, %27 ], [ %36, %35 ], [ %73, %72 ], [ 0, %77 ]
  %84 = load ptr, ptr %9, align 8
  %85 = ptrtoint ptr %84 to i32
  %86 = ptrtoint ptr %10 to i32
  %87 = sub i32 %85, %86
  %88 = trunc i32 %87 to i16
  store i16 %88, ptr %10, align 2
  br label %89

89:                                               ; preds = %82, %3
  %90 = phi i32 [ %83, %82 ], [ -90, %3 ]
  ret i32 %90
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_trap_fill(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = getelementptr inbounds %struct.devlink_trap_item, ptr %2, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = trunc i32 %3 to i8
  %13 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %4, i32 noundef %5, ptr noundef nonnull @devlink_nl_family, i32 noundef %6, i8 noundef zeroext %12) #27
  %14 = icmp eq ptr %13, null
  br i1 %14, label %101, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.device, ptr %17, i32 0, i32 5
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %19, align 4
  %21 = tail call i32 @strlen(ptr noundef %20) #27
  %22 = add i32 %21, 1
  %23 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %22, ptr noundef %20) #27
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %87

25:                                               ; preds = %15
  %26 = load ptr, ptr %16, align 4
  %27 = getelementptr inbounds %struct.device, ptr %26, i32 0, i32 3
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = load ptr, ptr %26, align 4
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi ptr [ %31, %30 ], [ %28, %25 ]
  %34 = tail call i32 @strlen(ptr noundef %33) #27
  %35 = add i32 %34, 1
  %36 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %35, ptr noundef %33) #27
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %87

38:                                               ; preds = %32
  %39 = load ptr, ptr %11, align 4
  %40 = load ptr, ptr %39, align 4
  %41 = tail call i32 @strlen(ptr noundef %40) #27
  %42 = add i32 %41, 1
  %43 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 135, i32 noundef %42, ptr noundef %40) #27
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %87

45:                                               ; preds = %38
  %46 = load ptr, ptr %2, align 4
  %47 = getelementptr inbounds %struct.devlink_trap, ptr %46, i32 0, i32 4
  %48 = load ptr, ptr %47, align 4
  %49 = tail call i32 @strlen(ptr noundef %48) #27
  %50 = add i32 %49, 1
  %51 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 130, i32 noundef %50, ptr noundef %48) #27
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %87

53:                                               ; preds = %45
  %54 = load ptr, ptr %2, align 4
  %55 = load i32, ptr %54, align 4
  %56 = trunc i32 %55 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #27
  store i8 %56, ptr %9, align 1
  %57 = call i32 @nla_put(ptr noundef %0, i32 noundef 132, i32 noundef 1, ptr noundef nonnull %9) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #27
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %87

59:                                               ; preds = %53
  %60 = load ptr, ptr %2, align 4
  %61 = getelementptr inbounds %struct.devlink_trap, ptr %60, i32 0, i32 2
  %62 = load i8, ptr %61, align 4, !range !18
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = call i32 @nla_put(ptr noundef %0, i32 noundef 133, i32 noundef 0, ptr noundef null) #27
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %87

67:                                               ; preds = %64, %59
  %68 = getelementptr inbounds %struct.devlink_trap_item, ptr %2, i32 0, i32 3
  %69 = load i32, ptr %68, align 4
  %70 = trunc i32 %69 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #27
  store i8 %70, ptr %8, align 1
  %71 = call i32 @nla_put(ptr noundef %0, i32 noundef 131, i32 noundef 1, ptr noundef nonnull %8) #27
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #27
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %87

73:                                               ; preds = %67
  %74 = load ptr, ptr %2, align 4
  %75 = call fastcc i32 @devlink_trap_metadata_put(ptr noundef %0, ptr noundef %74)
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %87

77:                                               ; preds = %73
  %78 = call fastcc i32 @devlink_trap_stats_put(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %77
  %81 = getelementptr i8, ptr %13, i32 -20
  %82 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %83 = load ptr, ptr %82, align 8
  %84 = ptrtoint ptr %83 to i32
  %85 = ptrtoint ptr %81 to i32
  %86 = sub i32 %84, %85
  store i32 %86, ptr %81, align 4
  br label %101

87:                                               ; preds = %77, %73, %67, %64, %53, %45, %38, %32, %15
  %88 = getelementptr i8, ptr %13, i32 -20
  %89 = icmp eq ptr %88, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %92 = load ptr, ptr %91, align 4
  %93 = icmp ugt ptr %92, %88
  br i1 %93, label %94, label %96, !prof !11

94:                                               ; preds = %90
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %95 = load ptr, ptr %91, align 4
  br label %96

96:                                               ; preds = %94, %90
  %97 = phi ptr [ %95, %94 ], [ %92, %90 ]
  %98 = ptrtoint ptr %88 to i32
  %99 = ptrtoint ptr %97 to i32
  %100 = sub i32 %98, %99
  call void @skb_trim(ptr noundef %0, i32 noundef %100) #27
  br label %101

101:                                              ; preds = %96, %87, %80, %7
  %102 = phi i32 [ 0, %80 ], [ -90, %7 ], [ -90, %87 ], [ -90, %96 ]
  ret i32 %102
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_trap_metadata_put(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 32902, i32 noundef 0, ptr noundef null) #27
  %6 = icmp slt i32 %5, 0
  %7 = icmp eq ptr %4, null
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %43, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.devlink_trap, ptr %1, i32 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 0, i32 noundef 0, ptr noundef null) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %32

17:                                               ; preds = %14
  %18 = load i32, ptr %10, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %11, %9 ]
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef 0, ptr noundef null) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %23, %19
  %27 = load ptr, ptr %3, align 8
  %28 = ptrtoint ptr %27 to i32
  %29 = ptrtoint ptr %4 to i32
  %30 = sub i32 %28, %29
  %31 = trunc i32 %30 to i16
  store i16 %31, ptr %4, align 2
  br label %43

32:                                               ; preds = %23, %14
  %33 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %34 = load ptr, ptr %33, align 4
  %35 = icmp ugt ptr %34, %4
  br i1 %35, label %36, label %38, !prof !11

36:                                               ; preds = %32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %37 = load ptr, ptr %33, align 4
  br label %38

38:                                               ; preds = %36, %32
  %39 = phi ptr [ %37, %36 ], [ %34, %32 ]
  %40 = ptrtoint ptr %4 to i32
  %41 = ptrtoint ptr %39 to i32
  %42 = sub i32 %40, %41
  tail call void @skb_trim(ptr noundef %0, i32 noundef %42) #27
  br label %43

43:                                               ; preds = %38, %26, %2
  %44 = phi i32 [ -90, %38 ], [ 0, %26 ], [ -90, %2 ]
  ret i32 %44
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_trap_stats_put(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #27
  store i64 0, ptr %7, align 8
  %8 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 14
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.devlink_ops, ptr %9, i32 0, i32 32
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = load ptr, ptr %2, align 4
  %15 = call i32 %11(ptr noundef %1, ptr noundef %14, ptr noundef nonnull %7) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %96

17:                                               ; preds = %13, %3
  %18 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #31
  %19 = load i32, ptr @nr_cpu_ids, align 4
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %21, label %55

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.devlink_trap_item, ptr %2, i32 0, i32 4
  %23 = load ptr, ptr %22, align 4
  %24 = ptrtoint ptr %23 to i32
  br label %25

25:                                               ; preds = %49, %21
  %26 = phi i64 [ 0, %21 ], [ %51, %49 ]
  %27 = phi i64 [ 0, %21 ], [ %50, %49 ]
  %28 = phi i32 [ %18, %21 ], [ %52, %49 ]
  %29 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %30 = load i32, ptr %29, align 4
  %31 = add i32 %30, %24
  %32 = inttoptr i32 %31 to ptr
  %33 = getelementptr inbounds %struct.devlink_stats, ptr %32, i32 0, i32 2
  %34 = getelementptr inbounds %struct.devlink_stats, ptr %32, i32 0, i32 1
  br label %35

35:                                               ; preds = %43, %25
  %36 = load volatile i32, ptr %33, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %39, %35
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !44
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #27, !srcloc !45
  %40 = load volatile i32, ptr %33, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %39

43:                                               ; preds = %39, %35
  %44 = phi i32 [ %36, %35 ], [ %40, %39 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !46
  %45 = load i64, ptr %34, align 8
  %46 = load i64, ptr %32, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !47
  %47 = load volatile i32, ptr %33, align 4
  %48 = icmp eq i32 %47, %44
  br i1 %48, label %49, label %35

49:                                               ; preds = %43
  %50 = add i64 %45, %27
  %51 = add i64 %46, %26
  %52 = call i32 @cpumask_next(i32 noundef %28, ptr noundef nonnull @__cpu_possible_mask) #31
  %53 = load i32, ptr @nr_cpu_ids, align 4
  %54 = icmp ult i32 %52, %53
  br i1 %54, label %25, label %55

55:                                               ; preds = %49, %17
  %56 = phi i64 [ 0, %17 ], [ %51, %49 ]
  %57 = phi i64 [ 0, %17 ], [ %50, %49 ]
  %58 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %59 = load ptr, ptr %58, align 8
  %60 = call i32 @nla_put(ptr noundef %0, i32 noundef 32897, i32 noundef 0, ptr noundef null) #27
  %61 = icmp slt i32 %60, 0
  %62 = icmp eq ptr %59, null
  %63 = select i1 %61, i1 true, i1 %62
  br i1 %63, label %96, label %64

64:                                               ; preds = %55
  %65 = load ptr, ptr %8, align 4
  %66 = getelementptr inbounds %struct.devlink_ops, ptr %65, i32 0, i32 32
  %67 = load ptr, ptr %66, align 4
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = load i64, ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 %70, ptr %6, align 8
  %71 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 2, i32 noundef 8, ptr noundef nonnull %6, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %69, %64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 %57, ptr %5, align 8
  %74 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 0, i32 noundef 8, ptr noundef nonnull %5, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %85

76:                                               ; preds = %73
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 %56, ptr %4, align 8
  %77 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %4, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %76
  %80 = load ptr, ptr %58, align 8
  %81 = ptrtoint ptr %80 to i32
  %82 = ptrtoint ptr %59 to i32
  %83 = sub i32 %81, %82
  %84 = trunc i32 %83 to i16
  store i16 %84, ptr %59, align 2
  br label %96

85:                                               ; preds = %76, %73, %69
  %86 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %87 = load ptr, ptr %86, align 4
  %88 = icmp ugt ptr %87, %59
  br i1 %88, label %89, label %91, !prof !11

89:                                               ; preds = %85
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %90 = load ptr, ptr %86, align 4
  br label %91

91:                                               ; preds = %89, %85
  %92 = phi ptr [ %90, %89 ], [ %87, %85 ]
  %93 = ptrtoint ptr %59 to i32
  %94 = ptrtoint ptr %92 to i32
  %95 = sub i32 %93, %94
  call void @skb_trim(ptr noundef %0, i32 noundef %95) #27
  br label %96

96:                                               ; preds = %91, %79, %55, %13
  %97 = phi i32 [ -90, %91 ], [ 0, %79 ], [ %15, %13 ], [ -90, %55 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #27
  ret i32 %97
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #19

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_trap_group_fill(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = trunc i32 %3 to i8
  %12 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %4, i32 noundef %5, ptr noundef nonnull @devlink_nl_family, i32 noundef %6, i8 noundef zeroext %11) #27
  %13 = icmp eq ptr %12, null
  br i1 %13, label %150, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.device, ptr %16, i32 0, i32 5
  %18 = load ptr, ptr %17, align 4
  %19 = load ptr, ptr %18, align 4
  %20 = tail call i32 @strlen(ptr noundef %19) #27
  %21 = add i32 %20, 1
  %22 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %21, ptr noundef %19) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %136

24:                                               ; preds = %14
  %25 = load ptr, ptr %15, align 4
  %26 = getelementptr inbounds %struct.device, ptr %25, i32 0, i32 3
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = load ptr, ptr %25, align 4
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi ptr [ %30, %29 ], [ %27, %24 ]
  %33 = tail call i32 @strlen(ptr noundef %32) #27
  %34 = add i32 %33, 1
  %35 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %34, ptr noundef %32) #27
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %136

37:                                               ; preds = %31
  %38 = load ptr, ptr %2, align 4
  %39 = load ptr, ptr %38, align 4
  %40 = tail call i32 @strlen(ptr noundef %39) #27
  %41 = add i32 %40, 1
  %42 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 135, i32 noundef %41, ptr noundef %39) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %136

44:                                               ; preds = %37
  %45 = load ptr, ptr %2, align 4
  %46 = getelementptr inbounds %struct.devlink_trap_group, ptr %45, i32 0, i32 2
  %47 = load i8, ptr %46, align 2, !range !18
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 133, i32 noundef 0, ptr noundef null) #27
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %136

52:                                               ; preds = %49, %44
  %53 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %2, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  %55 = icmp eq ptr %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = load ptr, ptr %54, align 8
  %58 = load i32, ptr %57, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #27
  store i32 %58, ptr %10, align 4
  %59 = call i32 @nla_put(ptr noundef %0, i32 noundef 142, i32 noundef 4, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #27
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %136

61:                                               ; preds = %56, %52
  %62 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #31
  %63 = load i32, ptr @nr_cpu_ids, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %65, label %99

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.devlink_trap_group_item, ptr %2, i32 0, i32 3
  %67 = load ptr, ptr %66, align 4
  %68 = ptrtoint ptr %67 to i32
  br label %69

69:                                               ; preds = %93, %65
  %70 = phi i64 [ 0, %65 ], [ %95, %93 ]
  %71 = phi i64 [ 0, %65 ], [ %94, %93 ]
  %72 = phi i32 [ %62, %65 ], [ %96, %93 ]
  %73 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %74 = load i32, ptr %73, align 4
  %75 = add i32 %74, %68
  %76 = inttoptr i32 %75 to ptr
  %77 = getelementptr inbounds %struct.devlink_stats, ptr %76, i32 0, i32 2
  %78 = getelementptr inbounds %struct.devlink_stats, ptr %76, i32 0, i32 1
  br label %79

79:                                               ; preds = %87, %69
  %80 = load volatile i32, ptr %77, align 4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %83, %79
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !44
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #27, !srcloc !45
  %84 = load volatile i32, ptr %77, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %83

87:                                               ; preds = %83, %79
  %88 = phi i32 [ %80, %79 ], [ %84, %83 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !46
  %89 = load i64, ptr %78, align 8
  %90 = load i64, ptr %76, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !47
  %91 = load volatile i32, ptr %77, align 4
  %92 = icmp eq i32 %91, %88
  br i1 %92, label %93, label %79

93:                                               ; preds = %87
  %94 = add i64 %89, %71
  %95 = add i64 %90, %70
  %96 = call i32 @cpumask_next(i32 noundef %72, ptr noundef nonnull @__cpu_possible_mask) #31
  %97 = load i32, ptr @nr_cpu_ids, align 4
  %98 = icmp ult i32 %96, %97
  br i1 %98, label %69, label %99

99:                                               ; preds = %93, %61
  %100 = phi i64 [ 0, %61 ], [ %95, %93 ]
  %101 = phi i64 [ 0, %61 ], [ %94, %93 ]
  %102 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %103 = load ptr, ptr %102, align 8
  %104 = call i32 @nla_put(ptr noundef %0, i32 noundef 32897, i32 noundef 0, ptr noundef null) #27
  %105 = icmp slt i32 %104, 0
  %106 = icmp eq ptr %103, null
  %107 = select i1 %105, i1 true, i1 %106
  br i1 %107, label %136, label %108

108:                                              ; preds = %99
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #27
  store i64 %101, ptr %9, align 8
  %109 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 0, i32 noundef 8, ptr noundef nonnull %9, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #27
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #27
  store i64 %100, ptr %8, align 8
  %112 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 1, i32 noundef 8, ptr noundef nonnull %8, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #27
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %125, label %114

114:                                              ; preds = %111, %108
  %115 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %116 = load ptr, ptr %115, align 4
  %117 = icmp ugt ptr %116, %103
  br i1 %117, label %118, label %120, !prof !11

118:                                              ; preds = %114
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %119 = load ptr, ptr %115, align 4
  br label %120

120:                                              ; preds = %118, %114
  %121 = phi ptr [ %119, %118 ], [ %116, %114 ]
  %122 = ptrtoint ptr %103 to i32
  %123 = ptrtoint ptr %121 to i32
  %124 = sub i32 %122, %123
  call void @skb_trim(ptr noundef %0, i32 noundef %124) #27
  br label %136

125:                                              ; preds = %111
  %126 = load ptr, ptr %102, align 8
  %127 = ptrtoint ptr %126 to i32
  %128 = ptrtoint ptr %103 to i32
  %129 = sub i32 %127, %128
  %130 = trunc i32 %129 to i16
  store i16 %130, ptr %103, align 2
  %131 = getelementptr i8, ptr %12, i32 -20
  %132 = load ptr, ptr %102, align 8
  %133 = ptrtoint ptr %132 to i32
  %134 = ptrtoint ptr %131 to i32
  %135 = sub i32 %133, %134
  store i32 %135, ptr %131, align 4
  br label %150

136:                                              ; preds = %120, %99, %56, %49, %37, %31, %14
  %137 = getelementptr i8, ptr %12, i32 -20
  %138 = icmp eq ptr %137, null
  br i1 %138, label %150, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %141 = load ptr, ptr %140, align 4
  %142 = icmp ugt ptr %141, %137
  br i1 %142, label %143, label %145, !prof !11

143:                                              ; preds = %139
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %144 = load ptr, ptr %140, align 4
  br label %145

145:                                              ; preds = %143, %139
  %146 = phi ptr [ %144, %143 ], [ %141, %139 ]
  %147 = ptrtoint ptr %137 to i32
  %148 = ptrtoint ptr %146 to i32
  %149 = sub i32 %147, %148
  call void @skb_trim(ptr noundef %0, i32 noundef %149) #27
  br label %150

150:                                              ; preds = %145, %136, %125, %7
  %151 = phi i32 [ 0, %125 ], [ -90, %7 ], [ -90, %136 ], [ -90, %145 ]
  ret i32 %151
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_nl_trap_policer_fill(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = trunc i32 %3 to i8
  %12 = tail call ptr @genlmsg_put(ptr noundef %0, i32 noundef %4, i32 noundef %5, ptr noundef nonnull @devlink_nl_family, i32 noundef %6, i8 noundef zeroext %11) #27
  %13 = icmp eq ptr %12, null
  br i1 %13, label %77, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 18
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.device, ptr %16, i32 0, i32 5
  %18 = load ptr, ptr %17, align 4
  %19 = load ptr, ptr %18, align 4
  %20 = tail call i32 @strlen(ptr noundef %19) #27
  %21 = add i32 %20, 1
  %22 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 1, i32 noundef %21, ptr noundef %19) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %63

24:                                               ; preds = %14
  %25 = load ptr, ptr %15, align 4
  %26 = getelementptr inbounds %struct.device, ptr %25, i32 0, i32 3
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = load ptr, ptr %25, align 4
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi ptr [ %30, %29 ], [ %27, %24 ]
  %33 = tail call i32 @strlen(ptr noundef %32) #27
  %34 = add i32 %33, 1
  %35 = tail call i32 @nla_put(ptr noundef %0, i32 noundef 2, i32 noundef %34, ptr noundef %32) #27
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %63

37:                                               ; preds = %31
  %38 = load ptr, ptr %2, align 8
  %39 = load i32, ptr %38, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #27
  store i32 %39, ptr %10, align 4
  %40 = call i32 @nla_put(ptr noundef %0, i32 noundef 142, i32 noundef 4, ptr noundef nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #27
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %63

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %2, i32 0, i32 1
  %44 = load i64, ptr %43, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #27
  store i64 %44, ptr %9, align 8
  %45 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 143, i32 noundef 8, ptr noundef nonnull %9, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #27
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %63

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.devlink_trap_policer_item, ptr %2, i32 0, i32 2
  %49 = load i64, ptr %48, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #27
  store i64 %49, ptr %8, align 8
  %50 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 144, i32 noundef 8, ptr noundef nonnull %8, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #27
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %47
  %53 = load ptr, ptr %2, align 8
  %54 = call fastcc i32 @devlink_trap_policer_stats_put(ptr noundef %0, ptr noundef %1, ptr noundef %53)
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %52
  %57 = getelementptr i8, ptr %12, i32 -20
  %58 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %59 = load ptr, ptr %58, align 8
  %60 = ptrtoint ptr %59 to i32
  %61 = ptrtoint ptr %57 to i32
  %62 = sub i32 %60, %61
  store i32 %62, ptr %57, align 4
  br label %77

63:                                               ; preds = %52, %47, %42, %37, %31, %14
  %64 = getelementptr i8, ptr %12, i32 -20
  %65 = icmp eq ptr %64, null
  br i1 %65, label %77, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %68 = load ptr, ptr %67, align 4
  %69 = icmp ugt ptr %68, %64
  br i1 %69, label %70, label %72, !prof !11

70:                                               ; preds = %66
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %71 = load ptr, ptr %67, align 4
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi ptr [ %71, %70 ], [ %68, %66 ]
  %74 = ptrtoint ptr %64 to i32
  %75 = ptrtoint ptr %73 to i32
  %76 = sub i32 %74, %75
  call void @skb_trim(ptr noundef %0, i32 noundef %76) #27
  br label %77

77:                                               ; preds = %72, %63, %56, %7
  %78 = phi i32 [ 0, %56 ], [ -90, %7 ], [ -90, %63 ], [ -90, %72 ]
  ret i32 %78
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @devlink_trap_policer_stats_put(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !9
  %6 = getelementptr inbounds %struct.devlink, ptr %1, i32 0, i32 14
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.devlink_ops, ptr %7, i32 0, i32 36
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %42, label %11

11:                                               ; preds = %3
  %12 = call i32 %9(ptr noundef %1, ptr noundef %2, ptr noundef nonnull %5) #27
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %42

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %16 = load ptr, ptr %15, align 8
  %17 = call i32 @nla_put(ptr noundef %0, i32 noundef 32897, i32 noundef 0, ptr noundef null) #27
  %18 = icmp slt i32 %17, 0
  %19 = icmp eq ptr %16, null
  %20 = select i1 %18, i1 true, i1 %19
  br i1 %20, label %42, label %21

21:                                               ; preds = %14
  %22 = load i64, ptr %5, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store i64 %22, ptr %4, align 8
  %23 = call i32 @nla_put_64bit(ptr noundef %0, i32 noundef 2, i32 noundef 8, ptr noundef nonnull %4, i32 noundef 61) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = load ptr, ptr %15, align 8
  %27 = ptrtoint ptr %26 to i32
  %28 = ptrtoint ptr %16 to i32
  %29 = sub i32 %27, %28
  %30 = trunc i32 %29 to i16
  store i16 %30, ptr %16, align 2
  br label %42

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %33 = load ptr, ptr %32, align 4
  %34 = icmp ugt ptr %33, %16
  br i1 %34, label %35, label %37, !prof !11

35:                                               ; preds = %31
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.44, i32 noundef 991, i32 noundef 9, ptr noundef null) #27
  %36 = load ptr, ptr %32, align 4
  br label %37

37:                                               ; preds = %35, %31
  %38 = phi ptr [ %36, %35 ], [ %33, %31 ]
  %39 = ptrtoint ptr %16 to i32
  %40 = ptrtoint ptr %38 to i32
  %41 = sub i32 %39, %40
  call void @skb_trim(ptr noundef %0, i32 noundef %41) #27
  br label %42

42:                                               ; preds = %37, %25, %14, %11, %3
  %43 = phi i32 [ -90, %37 ], [ 0, %25 ], [ 0, %3 ], [ %12, %11 ], [ -90, %14 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  ret i32 %43
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #20

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #21

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__xa_alloc_cyclic(ptr noundef, ptr noundef, ptr noundef, [2 x i32], ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_trap_policer_notify(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 {
  %4 = add i32 %2, -73
  %5 = icmp ult i32 %4, -2
  %6 = load i1, ptr @devlink_trap_policer_notify.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %3
  store i1 true, ptr @devlink_trap_policer_notify.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11156, i32 noundef 9, ptr noundef null) #27
  br label %10

10:                                               ; preds = %9, %3
  %11 = load i32, ptr %0, align 32
  %12 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %11, i32 noundef 1) #27
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  %14 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = tail call fastcc i32 @devlink_nl_trap_policer_fill(ptr noundef nonnull %14, ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @kfree_skb_reason(ptr noundef nonnull %14, i32 noundef 0) #27
  br label %33

20:                                               ; preds = %16
  %21 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %22 = icmp eq i8 %21, 0
  %23 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %24 = xor i1 %23, true
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %27, !prof !11

26:                                               ; preds = %20
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %27

27:                                               ; preds = %26, %20
  br i1 %22, label %33, label %28

28:                                               ; preds = %27
  %29 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %30 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %31 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 3, i32 16
  store i32 %29, ptr %31, align 8
  %32 = tail call i32 @netlink_broadcast(ptr noundef %30, ptr noundef nonnull %14, i32 noundef 0, i32 noundef %29, i32 noundef 3264) #27
  br label %33

33:                                               ; preds = %28, %27, %19, %13, %10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_trap_group_notify(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 {
  %4 = add i32 %2, -69
  %5 = icmp ult i32 %4, -2
  %6 = load i1, ptr @devlink_trap_group_notify.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %3
  store i1 true, ptr @devlink_trap_group_notify.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10730, i32 noundef 9, ptr noundef null) #27
  br label %10

10:                                               ; preds = %9, %3
  %11 = load i32, ptr %0, align 32
  %12 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %11, i32 noundef 1) #27
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  %14 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = tail call fastcc i32 @devlink_nl_trap_group_fill(ptr noundef nonnull %14, ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @kfree_skb_reason(ptr noundef nonnull %14, i32 noundef 0) #27
  br label %33

20:                                               ; preds = %16
  %21 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %22 = icmp eq i8 %21, 0
  %23 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %24 = xor i1 %23, true
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %27, !prof !11

26:                                               ; preds = %20
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %27

27:                                               ; preds = %26, %20
  br i1 %22, label %33, label %28

28:                                               ; preds = %27
  %29 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %30 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %31 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 3, i32 16
  store i32 %29, ptr %31, align 8
  %32 = tail call i32 @netlink_broadcast(ptr noundef %30, ptr noundef nonnull %14, i32 noundef 0, i32 noundef %29, i32 noundef 3264) #27
  br label %33

33:                                               ; preds = %28, %27, %19, %13, %10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @devlink_trap_notify(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 {
  %4 = add i32 %2, -65
  %5 = icmp ult i32 %4, -2
  %6 = load i1, ptr @devlink_trap_notify.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %3
  store i1 true, ptr @devlink_trap_notify.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10773, i32 noundef 9, ptr noundef null) #27
  br label %10

10:                                               ; preds = %9, %3
  %11 = load i32, ptr %0, align 32
  %12 = tail call zeroext i1 @xa_get_mark(ptr noundef nonnull @devlinks, i32 noundef %11, i32 noundef 1) #27
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  %14 = tail call ptr @__alloc_skb(i32 noundef 3840, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #27
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = tail call fastcc i32 @devlink_nl_trap_fill(ptr noundef nonnull %14, ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @kfree_skb_reason(ptr noundef nonnull %14, i32 noundef 0) #27
  br label %33

20:                                               ; preds = %16
  %21 = load i8, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 9), align 1
  %22 = icmp eq i8 %21, 0
  %23 = load i1, ptr @genlmsg_multicast_netns.__already_done, align 1
  %24 = xor i1 %23, true
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %27, !prof !11

26:                                               ; preds = %20
  store i1 true, ptr @genlmsg_multicast_netns.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.45, i32 noundef 308, i32 noundef 9, ptr noundef null) #27
  br label %27

27:                                               ; preds = %26, %20
  br i1 %22, label %33, label %28

28:                                               ; preds = %27
  %29 = load i32, ptr getelementptr inbounds (%struct.genl_family, ptr @devlink_nl_family, i32 0, i32 5), align 4
  %30 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 21), align 8
  %31 = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 3, i32 16
  store i32 %29, ptr %31, align 8
  %32 = tail call i32 @netlink_broadcast(ptr noundef %30, ptr noundef nonnull %14, i32 noundef 0, i32 noundef %29, i32 noundef 3264) #27
  br label %33

33:                                               ; preds = %28, %27, %19, %13, %10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__xa_alloc(ptr noundef, ptr noundef, ptr noundef, [2 x i32], i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu_gfp(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #21

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcat(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #22

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #23

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @genl_register_family(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_subsys(ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @devlink_pernet_pre_exit(ptr nocapture noundef readnone %0) #24 section ".ref.text" {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #27
  store i32 0, ptr %2, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  tail call void @mutex_lock(ptr noundef nonnull @devlink_mutex) #27
  store i32 0, ptr %3, align 4
  %4 = call ptr @xa_find(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %5 = icmp eq ptr %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %50, %1
  %7 = phi ptr [ %51, %50 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.devlink, ptr %7, i32 0, i32 22
  %9 = load volatile i32, ptr %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %21, %6
  %12 = phi i32 [ %19, %21 ], [ %9, %6 ]
  %13 = add i32 %12, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %8) #27, !srcloc !14
  br label %14

14:                                               ; preds = %14, %11
  %15 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 %12, i32 %13, ptr elementtype(i32) %8) #27, !srcloc !17
  %16 = extractvalue { i32, i32 } %15, 0
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %14

18:                                               ; preds = %14
  %19 = extractvalue { i32, i32 } %15, 1
  %20 = icmp eq i32 %19, %12
  br i1 %20, label %23, label %21, !prof !10

21:                                               ; preds = %18
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %23, label %11

23:                                               ; preds = %21, %18, %6
  %24 = phi i32 [ 0, %6 ], [ %12, %18 ], [ 0, %21 ]
  %25 = add i32 %24, 1
  %26 = or i32 %25, %24
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %29, label %28, !prof !10

28:                                               ; preds = %23
  call void @refcount_warn_saturate(ptr noundef %8, i32 noundef 0) #27
  br label %29

29:                                               ; preds = %28, %23
  %30 = icmp eq i32 %24, 0
  br i1 %30, label %50, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.devlink, ptr %7, i32 0, i32 15
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %37, !prof !11

36:                                               ; preds = %31
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11423, i32 noundef 9, ptr noundef null) #27
  br label %37

37:                                               ; preds = %36, %31
  %38 = call fastcc i32 @devlink_reload(ptr noundef nonnull %7, ptr noundef nonnull @init_net, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %2, ptr noundef null)
  switch i32 %38, label %39 [
    i32 -95, label %41
    i32 0, label %41
  ]

39:                                               ; preds = %37
  %40 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.223) #30
  br label %41

41:                                               ; preds = %39, %37, %37
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %8) #27, !srcloc !14
  %42 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 1, ptr elementtype(i32) %8) #27, !srcloc !15
  %43 = extractvalue { i32, i32, i32 } %42, 0
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = icmp sgt i32 %43, 0
  br i1 %46, label %50, label %47, !prof !10

47:                                               ; preds = %45
  call void @refcount_warn_saturate(ptr noundef %8, i32 noundef 3) #27
  br label %50

48:                                               ; preds = %41
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !16
  %49 = getelementptr inbounds %struct.devlink, ptr %7, i32 0, i32 23
  call void @complete(ptr noundef %49) #27
  br label %50

50:                                               ; preds = %48, %47, %45, %29
  %51 = call ptr @xa_find_after(ptr noundef nonnull @devlinks, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 1) #27
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %6

53:                                               ; preds = %50, %1
  call void @mutex_unlock(ptr noundef nonnull @devlink_mutex) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #27
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #25

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #26

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #25

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { argmemonly nofree nounwind willreturn }
attributes #11 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree nosync nounwind null_pointer_is_valid readonly sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nofree nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { inlinehint mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { nounwind readonly }
attributes #18 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #19 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree nounwind null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { noinline nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #25 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #26 = { argmemonly nofree nounwind readonly willreturn }
attributes #27 = { nounwind }
attributes #28 = { nounwind allocsize(2) }
attributes #29 = { nounwind allocsize(0) }
attributes #30 = { cold nounwind }
attributes #31 = { nounwind readonly willreturn }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{!"auto-init"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = !{i64 783077}
!13 = !{i64 2148472977}
!14 = !{i64 869138, i64 2148359109, i64 2148359135, i64 2148359182, i64 2148359204, i64 2148359232, i64 2148359252}
!15 = !{i64 2148375136, i64 2148375168, i64 2148375197, i64 2148375231, i64 2148375262, i64 2148375285}
!16 = !{i64 2150232813}
!17 = !{i64 855201, i64 855225, i64 855246, i64 855263, i64 855280}
!18 = !{i8 0, i8 2}
!19 = !{i64 2156839694}
!20 = !{i64 2156839902}
!21 = !{i64 2156858426}
!22 = !{i64 2156858720}
!23 = !{i64 2156877506}
!24 = !{i64 2156877756}
!25 = !{i64 2149496488}
!26 = !{i64 2149492312}
!27 = !{i64 2149492387, i64 2149492414, i64 2149492461, i64 2149492483, i64 2149492511, i64 2149492531}
!28 = !{i64 2149519491}
!29 = !{i64 2149649192}
!30 = !{i64 2149649409}
!31 = !{i64 2149674433}
!32 = !{i64 2149975211}
!33 = !{i64 2149975512}
!34 = !{i64 2156900274}
!35 = !{i64 2156900468}
!36 = !{i32 0, i32 33}
!37 = !{!38}
!38 = distinct !{!38, !39, !"nla_get_bitfield32: argument 0"}
!39 = distinct !{!39, !"nla_get_bitfield32"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"nla_get_bitfield32: argument 0"}
!42 = distinct !{!42, !"nla_get_bitfield32"}
!43 = !{i64 2148372779, i64 2148372811, i64 2148372840, i64 2148372874, i64 2148372905, i64 2148372928}
!44 = !{i64 2153904565}
!45 = !{i64 2153904407}
!46 = !{i64 2153904709}
!47 = !{i64 2149974912}
