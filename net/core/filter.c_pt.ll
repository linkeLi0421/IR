; ModuleID = '/llk/IR/net/core/filter.c_pt.bc'
source_filename = "../net/core/filter.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_copy_bpf_fprog_from_user:\09\09\09\09\09"
module asm "\09.asciz \09\22copy_bpf_fprog_from_user\22\09\09\09\09\09"
module asm "__kstrtabns_copy_bpf_fprog_from_user:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_filter_trim_cap:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_filter_trim_cap\22\09\09\09\09\09"
module asm "__kstrtabns_sk_filter_trim_cap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_create:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_create\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_create_from_user:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_create_from_user\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_create_from_user:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_attach_filter:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_attach_filter\22\09\09\09\09\09"
module asm "__kstrtabns_sk_attach_filter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_redirect_info:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_redirect_info\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_redirect_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_xdp_do_flush:\09\09\09\09\09"
module asm "\09.asciz \09\22xdp_do_flush\22\09\09\09\09\09"
module asm "__kstrtabns_xdp_do_flush:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_master_redirect_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_master_redirect_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_master_redirect_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_xdp_master_redirect:\09\09\09\09\09"
module asm "\09.asciz \09\22xdp_master_redirect\22\09\09\09\09\09"
module asm "__kstrtabns_xdp_master_redirect:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_xdp_do_redirect:\09\09\09\09\09"
module asm "\09.asciz \09\22xdp_do_redirect\22\09\09\09\09\09"
module asm "__kstrtabns_xdp_do_redirect:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_xdp_do_redirect_frame:\09\09\09\09\09"
module asm "\09.asciz \09\22xdp_do_redirect_frame\22\09\09\09\09\09"
module asm "__kstrtabns_xdp_do_redirect_frame:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_ipv6_bpf_stub:\09\09\09\09\09"
module asm "\09.asciz \09\22ipv6_bpf_stub\22\09\09\09\09\09"
module asm "__kstrtabns_ipv6_bpf_stub:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_warn_invalid_xdp_action:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_warn_invalid_xdp_action\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_warn_invalid_xdp_action:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_detach_filter:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_detach_filter\22\09\09\09\09\09"
module asm "__kstrtabns_sk_detach_filter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_sk_lookup_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_sk_lookup_enabled\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_sk_lookup_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.bpf_redirect_info = type { i32, i32, ptr, ptr, i32, i32, i32, %struct.bpf_nh_params }
%struct.bpf_nh_params = type { i32, %union.anon.195 }
%union.anon.195 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.117 }
%union.anon.117 = type { [4 x i32] }
%struct.cpumask = type { [1 x i32] }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.bpf_func_proto = type { ptr, i8, i8, i32, %union.anon.198, %union.anon.200, ptr, ptr }
%union.anon.198 = type { %struct.anon.197 }
%struct.anon.197 = type { i32, i32, i32, i32, i32 }
%union.anon.200 = type { %struct.anon.199 }
%struct.anon.199 = type { ptr, ptr, ptr, ptr, ptr }
%struct.bpf_verifier_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bpf_prog_ops = type { ptr }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [40 x i8], %struct.netns_ipv4, %struct.netns_ipv6, ptr, %struct.netns_bpf, [28 x i8], %struct.netns_xfrm, i64, %struct.netns_can, ptr, ptr, [32 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.spinlock = type { %union.anon.8 }
%union.anon.8 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.9 }
%union.anon.9 = type { i32 }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type {}
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.26, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.26 = type { %struct.anon.27 }
%struct.anon.27 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.list_head = type { ptr, ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [40 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [60 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.141, ptr, [60 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [32 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.hlist_node = type { ptr, ptr }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.141 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [36 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex, [28 x i8] }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.bpf_scratchpad = type { %union.anon.218 }
%union.anon.218 = type { [128 x i32] }
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.anon.219, [4 x i8], i32, [60 x i8], %struct.__call_single_data, ptr, i32, i32, i32, %struct.sk_buff_head, %struct.napi_struct, [56 x i8] }
%struct.anon.219 = type { i16, i8 }
%struct.__call_single_data = type { %struct.__call_single_node, ptr, ptr }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.35 }
%union.anon.35 = type { i32 }
%struct.sk_buff_head = type { %union.anon.66, i32, %struct.spinlock }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { ptr, ptr }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.neigh_table = type { i32, i32, i32, i16, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i32, %struct.delayed_work, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.rwlock_t, i32, ptr, ptr, ptr }
%struct.neigh_parms = type { %struct.possible_net_t, ptr, %struct.netdevice_tracker, %struct.list_head, ptr, ptr, ptr, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i32] }
%struct.possible_net_t = type {}
%struct.netdevice_tracker = type {}
%struct.callback_head = type { ptr, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.inet_hashinfo = type { ptr, ptr, i32, i32, ptr, ptr, i32, i32, ptr, [28 x i8], [32 x %struct.inet_listen_hashbucket] }
%struct.inet_listen_hashbucket = type { %struct.spinlock, i32, %union.anon.138 }
%union.anon.138 = type { %struct.hlist_head }
%struct.udp_table = type { ptr, ptr, i32, i32 }
%struct.proto = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i8, ptr, i32, i32, i32, i32, ptr, ptr, ptr, %union.anon.179, ptr, [32 x i8], %struct.list_head, ptr }
%union.anon.179 = type { ptr }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.sk_buff = type { %union.anon.43, %union.anon.46, %union.anon.47, [48 x i8], %union.anon.48, i32, i32, i16, i16, i16, [0 x i8], i8, i8, %union.anon.50, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.43 = type { %struct.anon.44 }
%struct.anon.44 = type { ptr, ptr, %union.anon.45 }
%union.anon.45 = type { ptr }
%union.anon.46 = type { ptr }
%union.anon.47 = type { i64 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i32, ptr }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { [0 x i8], i16, [0 x i8], i16, %union.anon.52, i32, i32, i32, i16, i16, %union.anon.54, %union.anon.55, %union.anon.56, i16, i16, i16, i16, i16, i16, i16 }
%union.anon.52 = type { i32 }
%union.anon.54 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i16 }
%struct.sock_common = type { %union.anon.0, %union.anon.1, %union.anon.2, i16, i8, i8, i32, %union.anon.4, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.180, [0 x i32], %union.anon.181, i16, i16, %union.anon.182, %struct.refcount_struct, [0 x i32], %union.anon.183 }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i32 }
%union.anon.2 = type { i32 }
%union.anon.4 = type { %struct.hlist_node }
%struct.atomic64_t = type { i64 }
%union.anon.180 = type { i32 }
%union.anon.181 = type { %struct.hlist_node }
%union.anon.182 = type { i32 }
%union.anon.183 = type { i32 }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.184, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.185, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.186, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, %struct.netns_tracker }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.anon.184 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.185 = type { ptr }
%union.anon.186 = type { ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.kuid_t = type { i32 }
%struct.sock_cgroup_data = type {}
%struct.netns_tracker = type {}
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, ptr }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.105 }
%union.anon.105 = type { %struct.anon.106 }
%struct.anon.106 = type { %struct.anon.107, [0 x %struct.sock_filter] }
%struct.anon.107 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.sock_fprog_kern = type { i16, ptr }
%struct.sock_fprog = type { i16, ptr }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.bpf_flow_dissector = type { ptr, ptr, ptr, ptr }
%struct.flowi6 = type { %struct.flowi_common, %struct.in6_addr, %struct.in6_addr, i32, %union.flowi_uli, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%union.flowi_uli = type { i32 }
%struct.flowi4 = type { %struct.flowi_common, i32, i32, %union.flowi_uli }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.42, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [8 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, %struct.possible_net_t, ptr, i32, %union.anon.137, %struct.device, [4 x ptr], ptr, ptr, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], %struct.netdevice_tracker, %struct.netdevice_tracker, [48 x i8] }
%struct.anon.42 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%union.anon.137 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.rtable = type { %struct.dst_entry, i32, i32, i16, i8, i8, i32, i8, %union.anon.129, i32, %struct.list_head, ptr }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, %struct.netdevice_tracker }
%union.anon.129 = type { %struct.in6_addr }
%struct.neigh_hash_table = type { ptr, i32, [4 x i32], %struct.callback_head }
%struct.neighbour = type { ptr, ptr, ptr, i32, i32, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i32, %struct.atomic_t, i8, i8, i8, i8, i32, %struct.seqlock_t, [4 x i8], [32 x i8], %struct.hh_cache, ptr, ptr, %struct.list_head, %struct.list_head, %struct.callback_head, ptr, %struct.netdevice_tracker, [0 x i8] }
%struct.hh_cache = type { i32, %struct.seqlock_t, [24 x i32] }
%struct.ipv6_stub = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.rt6_info = type { %struct.dst_entry, ptr, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, ptr, i32, %struct.list_head, ptr, i16 }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.inet6_dev = type { ptr, %struct.netdevice_tracker, %struct.list_head, ptr, ptr, i8, i8, i8, i8, i32, i32, i32, i32, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.sk_buff_head, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, %struct.mutex, ptr, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, ptr, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i32, %struct.callback_head, i32 }
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, ptr }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { ptr, ptr, ptr, ptr }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.sk_msg = type { %struct.sk_msg_sg, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, %struct.list_head }
%struct.sk_msg_sg = type { i32, i32, i32, i32, i32, i32, [19 x %struct.scatterlist] }
%struct.scatterlist = type { i32, i32, i32, i32, i32 }
%struct.page = type { i32, %union.anon.6, %union.anon.175, %struct.atomic_t }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.175 = type { %struct.atomic_t }
%struct.inet_connection_sock = type { %struct.inet_sock, %struct.request_sock_queue, ptr, i32, %struct.timer_list, %struct.timer_list, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.hlist_node, ptr, i8, i8, i8, i8, i8, i8, i16, %struct.anon.230, %struct.anon.231, i32, i32, [13 x i64] }
%struct.inet_sock = type { %struct.sock, ptr, i32, i16, i16, ptr, i16, i16, i8, i8, i8, i8, i16, i8, i8, i32, i32, i32, ptr, %struct.inet_cork_full }
%struct.inet_cork_full = type { %struct.inet_cork, %struct.flowi }
%struct.inet_cork = type { i32, i32, ptr, i32, i32, ptr, i8, i8, i16, i8, i16, i64, i32 }
%struct.flowi = type { %union.anon.124 }
%union.anon.124 = type { %struct.flowi6 }
%struct.request_sock_queue = type { %struct.spinlock, i8, i32, %struct.atomic_t, %struct.atomic_t, ptr, ptr, %struct.fastopen_queue }
%struct.fastopen_queue = type { ptr, ptr, %struct.spinlock, i32, i32, ptr }
%struct.anon.230 = type { i8, i8, i8, i8, i32, i32, i32, i16, i16 }
%struct.anon.231 = type { i32, i32, i32, i32 }
%struct.tls_context = type { %struct.tls_prot_info, i8, ptr, ptr, ptr, ptr, ptr, %struct.cipher_context, %struct.cipher_context, ptr, i16, i8, i8, %struct.mutex, i32, ptr, ptr, ptr, %union.tls_crypto_context, %union.tls_crypto_context, %struct.list_head, %struct.refcount_struct, %struct.callback_head }
%struct.tls_prot_info = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.cipher_context = type { ptr, ptr }
%union.tls_crypto_context = type { %union.anon.225 }
%union.anon.225 = type { %struct.tls12_crypto_info_aes_gcm_256 }
%struct.tls12_crypto_info_aes_gcm_256 = type { %struct.tls_crypto_info, [8 x i8], [32 x i8], [4 x i8], [8 x i8] }
%struct.tls_crypto_info = type { i16, i16 }
%struct.xdp_buff = type { ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.xdp_rxq_info = type { ptr, i32, i32, %struct.xdp_mem_info, i32, [40 x i8] }
%struct.xdp_mem_info = type { i32, i32 }
%struct.xdp_frame = type { ptr, i16, i16, i32, %struct.xdp_mem_info, ptr }
%struct.bpf_map_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bpf_tunnel_key = type { i32, %union.anon.201, i8, i8, i16, i32 }
%union.anon.201 = type { [4 x i32] }
%struct.metadata_dst = type { %struct.dst_entry, i32, %union.anon.235 }
%union.anon.235 = type { %struct.ip_tunnel_info }
%struct.ip_tunnel_info = type { %struct.ip_tunnel_key, %struct.dst_cache, i8, i8 }
%struct.ip_tunnel_key = type { i64, %union.anon.232, i16, i8, i8, i32, i16, i16 }
%union.anon.232 = type { %struct.anon.234 }
%struct.anon.234 = type { %struct.in6_addr, %struct.in6_addr }
%struct.dst_cache = type { ptr, i32 }
%struct.lwtunnel_state = type { i16, i16, i16, %struct.atomic_t, ptr, ptr, %struct.callback_head, [0 x i8] }
%struct.bpf_map = type { ptr, ptr, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, ptr, [16 x i8], i8, i8, [42 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, %struct.atomic64_t }
%struct.bpf_array = type { %struct.bpf_map, i32, i32, ptr, [4 x i8], %union.anon.237, [48 x i8] }
%union.anon.237 = type { [0 x ptr] }
%struct.tcp_sock = type { %struct.inet_connection_sock, i16, i16, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, %struct.tcp_rack, i16, i8, i8, i32, [3 x i32], i16, i8, i8, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, %struct.minmax, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.tcp_options_received, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrtimer, %struct.hrtimer, ptr, ptr, %struct.rb_root, ptr, [1 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], ptr, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8, i16, i32, i32, %struct.anon.238, %struct.anon.239, %struct.anon.240, i32, ptr, ptr, ptr }
%struct.tcp_rack = type { i64, i32, i32, i32, i8, i8 }
%struct.minmax = type { [3 x %struct.minmax_sample] }
%struct.minmax_sample = type { i32, i32 }
%struct.tcp_options_received = type { i32, i32, i32, i32, [3 x i8], i8, i16, i16 }
%struct.tcp_sack_block = type { i32, i32 }
%struct.anon.238 = type { i32, i32, i64 }
%struct.anon.239 = type { i32, i32, i64 }
%struct.anon.240 = type { i32, i32 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.skb_ext = type { %struct.refcount_struct, [1 x i8], i8, [2 x i8], [0 x i8] }
%struct.sec_path = type { i32, i32, [6 x ptr], [1 x %struct.xfrm_offload] }
%struct.xfrm_offload = type { %struct.anon.241, i32, i32, i8, i8 }
%struct.anon.241 = type { i32, i32 }
%struct.xfrm_state = type { %struct.possible_net_t, %union.anon.122, %struct.hlist_node, %struct.hlist_node, %struct.hlist_node, %struct.refcount_struct, %struct.spinlock, %struct.xfrm_id, %struct.xfrm_selector, %struct.xfrm_mark, i32, i32, i32, %struct.xfrm_state_walk, %struct.anon.123, %struct.xfrm_lifetime_cfg, ptr, ptr, ptr, ptr, ptr, i16, i32, i32, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.xfrm_replay_state, ptr, %struct.xfrm_replay_state, ptr, i32, i32, i32, i32, %struct.timer_list, %struct.xfrm_stats, %struct.xfrm_lifetime_cur, %struct.hrtimer, %struct.xfrm_state_offload, i32, i64, %struct.page_frag, ptr, %struct.xfrm_mode, %struct.xfrm_mode, %struct.xfrm_mode, ptr, ptr, ptr }
%union.anon.122 = type { %struct.hlist_node }
%struct.xfrm_id = type { %union.xfrm_address_t, i32, i8 }
%union.xfrm_address_t = type { [4 x i32] }
%struct.xfrm_selector = type { %union.xfrm_address_t, %union.xfrm_address_t, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32 }
%struct.xfrm_mark = type { i32, i32 }
%struct.xfrm_state_walk = type { %struct.list_head, i8, i8, i8, i32, ptr }
%struct.anon.123 = type { i32, i8, i8, i8, i8, i8, i8, i16, %union.xfrm_address_t, i32, i32, i32, %struct.xfrm_mark }
%struct.xfrm_lifetime_cfg = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.xfrm_replay_state = type { i32, i32, i32 }
%struct.xfrm_stats = type { i32, i32, i32 }
%struct.xfrm_lifetime_cur = type { i64, i64, i64, i64 }
%struct.xfrm_state_offload = type { ptr, %struct.netdevice_tracker, ptr, i32, i32, i8 }
%struct.xfrm_mode = type { i8, i8, i8 }
%struct.bpf_xfrm_state = type { i32, i32, i16, i16, %union.anon.203 }
%union.anon.203 = type { [4 x i32] }
%struct.bpf_fib_lookup = type { i8, i8, i16, i16, %union.anon.204, i32, %union.anon.205, %union.anon.206, %union.anon.207, i16, i16, [6 x i8], [6 x i8] }
%union.anon.204 = type { i16 }
%union.anon.205 = type { i32 }
%union.anon.206 = type { [4 x i32] }
%union.anon.207 = type { [4 x i32] }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.vlan_hdr = type { i16, i16 }
%struct.bpf_sock_ops_kern = type { ptr, %union.anon.202, ptr, ptr, ptr, i8, i8, i8, i64 }
%union.anon.202 = type { [4 x i32] }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.request_sock = type { %struct.sock_common, ptr, i16, i8, i8, i32, %struct.timer_list, ptr, ptr, ptr, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.bpf_insn_access_aux = type { i32, %union.anon.211, ptr }
%union.anon.211 = type { %struct.anon.212 }
%struct.anon.212 = type { ptr, i32 }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, %struct.hlist_node, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.bpf_ksym, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i64, i32, [2 x ptr], [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, %union.anon.104 }
%struct.bpf_ksym = type { i32, i32, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%union.anon.104 = type { %struct.work_struct }
%struct.sk_reuseport_kern = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i8 }
%struct.sock_reuseport = type { %struct.callback_head, i16, i16, i16, i32, i32, i8, ptr, [0 x ptr] }
%struct.bpf_sk_lookup_kern = type { i16, i16, i16, i16, %struct.anon.213, %struct.anon.214, ptr, i32, i8 }
%struct.anon.213 = type { i32, i32 }
%struct.anon.214 = type { ptr, ptr }
%struct.anon.53 = type { i16, i16 }
%struct.ipv6_pinfo = type { %struct.in6_addr, %struct.in6_pktinfo, ptr, i32, i32, i32, i32, i32, %union.anon.227, i16, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.inet6_cork }
%struct.in6_pktinfo = type { %struct.in6_addr, i32 }
%union.anon.227 = type { %struct.anon.228 }
%struct.anon.228 = type { i16 }
%struct.inet6_cork = type { ptr, i8, i8 }
%struct.tcp_congestion_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.list_head, i32, i32, ptr, ptr, [40 x i8] }
%struct.fib_result = type { i32, i8, i8, i8, i8, i32, ptr, ptr, ptr, ptr }
%struct.in_device = type { ptr, %struct.netdevice_tracker, %struct.refcount_struct, i32, ptr, ptr, ptr, i32, %struct.spinlock, ptr, i32, i32, i32, i32, i32, i8, i8, i32, %struct.timer_list, %struct.timer_list, ptr, %struct.ipv4_devconf, %struct.callback_head }
%struct.ipv4_devconf = type { ptr, [33 x i32], [2 x i32] }
%struct.anon.125 = type { i16, i16 }
%struct.fib_info = type { %struct.hlist_node, %struct.hlist_node, %struct.list_head, ptr, %struct.refcount_struct, %struct.refcount_struct, i32, i8, i8, i8, i8, i32, i32, i32, ptr, i32, i8, i8, ptr, %struct.callback_head, [0 x %struct.fib_nh] }
%struct.fib_nh = type { %struct.fib_nh_common, %struct.hlist_node, ptr, i32, i32 }
%struct.fib_nh_common = type { ptr, %struct.netdevice_tracker, i32, i8, i8, i8, i8, ptr, %union.anon.121, i32, %struct.atomic_t, ptr, ptr, ptr }
%union.anon.121 = type { %struct.in6_addr }
%struct.nexthop = type { %struct.rb_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, i8, i8, i8, %struct.refcount_struct, %struct.callback_head, %union.anon.119 }
%union.anon.119 = type { ptr }
%struct.nh_group = type { ptr, i16, i8, i8, i8, i8, i8, ptr, [0 x %struct.nh_grp_entry] }
%struct.nh_grp_entry = type { ptr, i8, %union.anon.130, %struct.list_head, ptr }
%union.anon.130 = type { %struct.anon.132 }
%struct.anon.132 = type { %struct.list_head, i16, i16 }
%struct.fib6_result = type { ptr, ptr, i32, i8, ptr }
%struct.fib6_info = type { ptr, ptr, ptr, %union.anon.118, i32, %struct.refcount_struct, i32, ptr, %struct.rt6key, i32, %struct.rt6key, %struct.rt6key, i32, i8, i8, i8, i8, i8, i8, %struct.callback_head, ptr, [0 x %struct.fib6_nh] }
%union.anon.118 = type { %struct.list_head }
%struct.fib6_nh = type { %struct.fib_nh_common, i32, ptr, ptr }
%struct.anon.209 = type { i32, i32, i16, i16 }
%struct.anon.210 = type { [4 x i32], [4 x i32], i16, i16 }
%struct.ipv6_bpf_stub = type { ptr, ptr }

@__kstrtab_copy_bpf_fprog_from_user = external dso_local constant [0 x i8], align 1
@__kstrtabns_copy_bpf_fprog_from_user = external dso_local constant [0 x i8], align 1
@__ksymtab_copy_bpf_fprog_from_user = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @copy_bpf_fprog_from_user to i32), ptr @__kstrtab_copy_bpf_fprog_from_user, ptr @__kstrtabns_copy_bpf_fprog_from_user }, section "___ksymtab_gpl+copy_bpf_fprog_from_user", align 4
@__kstrtab_sk_filter_trim_cap = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_filter_trim_cap = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_filter_trim_cap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_filter_trim_cap to i32), ptr @__kstrtab_sk_filter_trim_cap, ptr @__kstrtabns_sk_filter_trim_cap }, section "___ksymtab+sk_filter_trim_cap", align 4
@__kstrtab_bpf_prog_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_create = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_create to i32), ptr @__kstrtab_bpf_prog_create, ptr @__kstrtabns_bpf_prog_create }, section "___ksymtab_gpl+bpf_prog_create", align 4
@__kstrtab_bpf_prog_create_from_user = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_create_from_user = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_create_from_user = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_create_from_user to i32), ptr @__kstrtab_bpf_prog_create_from_user, ptr @__kstrtabns_bpf_prog_create_from_user }, section "___ksymtab_gpl+bpf_prog_create_from_user", align 4
@__kstrtab_bpf_prog_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_destroy to i32), ptr @__kstrtab_bpf_prog_destroy, ptr @__kstrtabns_bpf_prog_destroy }, section "___ksymtab_gpl+bpf_prog_destroy", align 4
@__kstrtab_sk_attach_filter = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_attach_filter = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_attach_filter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_attach_filter to i32), ptr @__kstrtab_sk_attach_filter, ptr @__kstrtabns_sk_attach_filter }, section "___ksymtab_gpl+sk_attach_filter", align 4
@sysctl_optmem_max = external dso_local local_unnamed_addr global i32, align 4
@bpf_redirect_info = dso_local global %struct.bpf_redirect_info zeroinitializer, section ".data..percpu", align 4
@__kstrtab_bpf_redirect_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_redirect_info = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_redirect_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_redirect_info to i32), ptr @__kstrtab_bpf_redirect_info, ptr @__kstrtabns_bpf_redirect_info }, section "___ksymtab_gpl+bpf_redirect_info", align 4
@__kstrtab_xdp_do_flush = external dso_local constant [0 x i8], align 1
@__kstrtabns_xdp_do_flush = external dso_local constant [0 x i8], align 1
@__ksymtab_xdp_do_flush = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @xdp_do_flush to i32), ptr @__kstrtab_xdp_do_flush, ptr @__kstrtabns_xdp_do_flush }, section "___ksymtab_gpl+xdp_do_flush", align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [16 x i32], align 4
@bpf_master_redirect_enabled_key = dso_local global %struct.static_key_false zeroinitializer, align 4
@__kstrtab_bpf_master_redirect_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_master_redirect_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_master_redirect_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_master_redirect_enabled_key to i32), ptr @__kstrtab_bpf_master_redirect_enabled_key, ptr @__kstrtabns_bpf_master_redirect_enabled_key }, section "___ksymtab_gpl+bpf_master_redirect_enabled_key", align 4
@__kstrtab_xdp_master_redirect = external dso_local constant [0 x i8], align 1
@__kstrtabns_xdp_master_redirect = external dso_local constant [0 x i8], align 1
@__ksymtab_xdp_master_redirect = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @xdp_master_redirect to i32), ptr @__kstrtab_xdp_master_redirect, ptr @__kstrtabns_xdp_master_redirect }, section "___ksymtab_gpl+xdp_master_redirect", align 4
@__kstrtab_xdp_do_redirect = external dso_local constant [0 x i8], align 1
@__kstrtabns_xdp_do_redirect = external dso_local constant [0 x i8], align 1
@__ksymtab_xdp_do_redirect = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @xdp_do_redirect to i32), ptr @__kstrtab_xdp_do_redirect, ptr @__kstrtabns_xdp_do_redirect }, section "___ksymtab_gpl+xdp_do_redirect", align 4
@__kstrtab_xdp_do_redirect_frame = external dso_local constant [0 x i8], align 1
@__kstrtabns_xdp_do_redirect_frame = external dso_local constant [0 x i8], align 1
@__ksymtab_xdp_do_redirect_frame = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @xdp_do_redirect_frame to i32), ptr @__kstrtab_xdp_do_redirect_frame, ptr @__kstrtabns_xdp_do_redirect_frame }, section "___ksymtab_gpl+xdp_do_redirect_frame", align 4
@bpf_skb_output_btf_ids = internal global [1 x i32] zeroinitializer, align 4
@bpf_skb_output_proto = dso_local local_unnamed_addr constant %struct.bpf_func_proto { ptr @bpf_skb_event_output, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 16, i32 1, i32 10, i32 517, i32 8 } }, %union.anon.200 { %struct.anon.199 { ptr @bpf_skb_output_btf_ids, ptr null, ptr null, ptr null, ptr null } }, ptr null, ptr null }, align 4
@bpf_xdp_output_btf_ids = internal global [1 x i32] zeroinitializer, align 4
@bpf_xdp_output_proto = dso_local local_unnamed_addr constant %struct.bpf_func_proto { ptr @bpf_xdp_event_output, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 16, i32 1, i32 10, i32 517, i32 8 } }, %union.anon.200 { %struct.anon.199 { ptr @bpf_xdp_output_btf_ids, ptr null, ptr null, ptr null, ptr null } }, ptr null, ptr null }, align 4
@bpf_get_socket_ptr_cookie_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_get_socket_ptr_cookie, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_setsockopt_proto = dso_local local_unnamed_addr constant %struct.bpf_func_proto { ptr @bpf_sk_setsockopt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 19, i32 10, i32 10, i32 517, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_getsockopt_proto = dso_local local_unnamed_addr constant %struct.bpf_func_proto { ptr @bpf_sk_getsockopt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 19, i32 10, i32 10, i32 6, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@ipv6_bpf_stub = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_ipv6_bpf_stub = external dso_local constant [0 x i8], align 1
@__kstrtabns_ipv6_bpf_stub = external dso_local constant [0 x i8], align 1
@__ksymtab_ipv6_bpf_stub = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @ipv6_bpf_stub to i32), ptr @__kstrtab_ipv6_bpf_stub, ptr @__kstrtabns_ipv6_bpf_stub }, section "___ksymtab_gpl+ipv6_bpf_stub", align 4
@bpf_tcp_sock_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_tcp_sock, i8 0, i8 0, i32 260, %union.anon.198 { %struct.anon.197 { i32 12, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_warn_invalid_xdp_action.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = private unnamed_addr constant [73 x i8] c"\014%s XDP return value %u on prog %s (id %d) dev %s, expect packet loss!\0A\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Illegal\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Driver unsupported\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"N/A\00", align 1
@__kstrtab_bpf_warn_invalid_xdp_action = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_warn_invalid_xdp_action = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_warn_invalid_xdp_action = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_warn_invalid_xdp_action to i32), ptr @__kstrtab_bpf_warn_invalid_xdp_action, ptr @__kstrtabns_bpf_warn_invalid_xdp_action }, section "___ksymtab_gpl+bpf_warn_invalid_xdp_action", align 4
@sk_filter_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sk_filter_func_proto, ptr @sk_filter_is_valid_access, ptr null, ptr @bpf_gen_ld_abs, ptr @bpf_convert_ctx_access, ptr null, ptr null }, align 4
@sk_filter_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_skb }, align 4
@tc_cls_act_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @tc_cls_act_func_proto, ptr @tc_cls_act_is_valid_access, ptr @tc_cls_act_prologue, ptr @bpf_gen_ld_abs, ptr @tc_cls_act_convert_ctx_access, ptr null, ptr @bpf_prog_test_check_kfunc_call }, align 4
@tc_cls_act_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_skb }, align 4
@xdp_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @xdp_func_proto, ptr @xdp_is_valid_access, ptr @bpf_noop_prologue, ptr null, ptr @xdp_convert_ctx_access, ptr null, ptr null }, align 4
@xdp_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_xdp }, align 4
@cg_skb_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @cg_skb_func_proto, ptr @cg_skb_is_valid_access, ptr null, ptr null, ptr @bpf_convert_ctx_access, ptr null, ptr null }, align 4
@cg_skb_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_skb }, align 4
@lwt_in_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @lwt_in_func_proto, ptr @lwt_is_valid_access, ptr null, ptr null, ptr @bpf_convert_ctx_access, ptr null, ptr null }, align 4
@lwt_in_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_skb }, align 4
@lwt_out_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @lwt_out_func_proto, ptr @lwt_is_valid_access, ptr null, ptr null, ptr @bpf_convert_ctx_access, ptr null, ptr null }, align 4
@lwt_out_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_skb }, align 4
@lwt_xmit_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @lwt_xmit_func_proto, ptr @lwt_is_valid_access, ptr @tc_cls_act_prologue, ptr null, ptr @bpf_convert_ctx_access, ptr null, ptr null }, align 4
@lwt_xmit_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_skb }, align 4
@lwt_seg6local_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @lwt_seg6local_func_proto, ptr @lwt_is_valid_access, ptr null, ptr null, ptr @bpf_convert_ctx_access, ptr null, ptr null }, align 4
@lwt_seg6local_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_skb }, align 4
@cg_sock_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sock_filter_func_proto, ptr @sock_filter_is_valid_access, ptr null, ptr null, ptr @bpf_sock_convert_ctx_access, ptr null, ptr null }, align 4
@cg_sock_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops zeroinitializer, align 4
@cg_sock_addr_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sock_addr_func_proto, ptr @sock_addr_is_valid_access, ptr null, ptr null, ptr @sock_addr_convert_ctx_access, ptr null, ptr null }, align 4
@cg_sock_addr_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops zeroinitializer, align 4
@sock_ops_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sock_ops_func_proto, ptr @sock_ops_is_valid_access, ptr null, ptr null, ptr @sock_ops_convert_ctx_access, ptr null, ptr null }, align 4
@sock_ops_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops zeroinitializer, align 4
@sk_skb_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sk_skb_func_proto, ptr @sk_skb_is_valid_access, ptr @sk_skb_prologue, ptr null, ptr @sk_skb_convert_ctx_access, ptr null, ptr null }, align 4
@sk_skb_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops zeroinitializer, align 4
@sk_msg_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sk_msg_func_proto, ptr @sk_msg_is_valid_access, ptr @bpf_noop_prologue, ptr null, ptr @sk_msg_convert_ctx_access, ptr null, ptr null }, align 4
@sk_msg_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops zeroinitializer, align 4
@flow_dissector_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @flow_dissector_func_proto, ptr @flow_dissector_is_valid_access, ptr null, ptr null, ptr @flow_dissector_convert_ctx_access, ptr null, ptr null }, align 4
@flow_dissector_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_flow_dissector }, align 4
@__kstrtab_sk_detach_filter = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_detach_filter = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_detach_filter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_detach_filter to i32), ptr @__kstrtab_sk_detach_filter, ptr @__kstrtabns_sk_detach_filter }, section "___ksymtab_gpl+sk_detach_filter", align 4
@sk_reuseport_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sk_reuseport_func_proto, ptr @sk_reuseport_is_valid_access, ptr null, ptr null, ptr @sk_reuseport_convert_ctx_access, ptr null, ptr null }, align 4
@sk_reuseport_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops zeroinitializer, align 4
@bpf_sk_lookup_enabled = dso_local global %struct.static_key_false zeroinitializer, align 4
@__kstrtab_bpf_sk_lookup_enabled = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_sk_lookup_enabled = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_sk_lookup_enabled = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_sk_lookup_enabled to i32), ptr @__kstrtab_bpf_sk_lookup_enabled, ptr @__kstrtabns_bpf_sk_lookup_enabled }, section "___ksymtab+bpf_sk_lookup_enabled", align 4
@sk_lookup_prog_ops = dso_local local_unnamed_addr constant %struct.bpf_prog_ops { ptr @bpf_prog_test_run_sk_lookup }, align 4
@sk_lookup_verifier_ops = dso_local local_unnamed_addr constant %struct.bpf_verifier_ops { ptr @sk_lookup_func_proto, ptr @sk_lookup_is_valid_access, ptr null, ptr null, ptr @sk_lookup_convert_ctx_access, ptr null, ptr null }, align 4
@btf_sock_ids = dso_local global [14 x i32] zeroinitializer, align 4
@bpf_skc_to_tcp6_sock_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_skc_to_tcp6_sock, i8 0, i8 0, i32 264, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr getelementptr (i8, ptr @btf_sock_ids, i64 40), ptr null }, align 4
@bpf_skc_to_tcp_sock_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_skc_to_tcp_sock, i8 0, i8 0, i32 264, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr getelementptr (i8, ptr @btf_sock_ids, i64 28), ptr null }, align 4
@bpf_skc_to_tcp_timewait_sock_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_skc_to_tcp_timewait_sock, i8 0, i8 0, i32 264, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr getelementptr (i8, ptr @btf_sock_ids, i64 36), ptr null }, align 4
@bpf_skc_to_tcp_request_sock_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_skc_to_tcp_request_sock, i8 0, i8 0, i32 264, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr getelementptr (i8, ptr @btf_sock_ids, i64 32), ptr null }, align 4
@bpf_skc_to_udp6_sock_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_skc_to_udp6_sock, i8 0, i8 0, i32 264, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr getelementptr (i8, ptr @btf_sock_ids, i64 48), ptr null }, align 4
@bpf_skc_to_unix_sock_proto = dso_local constant %struct.bpf_func_proto { ptr @bpf_skc_to_unix_sock, i8 0, i8 0, i32 264, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr getelementptr (i8, ptr @btf_sock_ids, i64 52), ptr null }, align 4
@bpf_sock_from_file_btf_ids = internal global [5 x i32] zeroinitializer, align 4
@bpf_sock_from_file_proto = dso_local local_unnamed_addr constant %struct.bpf_func_proto { ptr @bpf_sock_from_file, i8 0, i8 0, i32 264, %union.anon.198 { %struct.anon.197 { i32 16, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 { %struct.anon.199 { ptr getelementptr (i8, ptr @bpf_sock_from_file_btf_ids, i64 4), ptr null, ptr null, ptr null, ptr null } }, ptr @bpf_sock_from_file_btf_ids, ptr null }, align 4
@bpf_event_output_data_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_sk_storage_get_cg_sock_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_sk_storage_get_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_sk_storage_delete_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_sock_map_update_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_sock_hash_update_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_msg_redirect_map_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_msg_redirect_hash_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_sk_redirect_map_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@bpf_sk_redirect_hash_proto = weak_odr dso_local constant %struct.bpf_func_proto zeroinitializer, align 4
@init_net = external dso_local global %struct.net, align 64
@.str.4 = private unnamed_addr constant [23 x i8] c"include/linux/skbuff.h\00", align 1
@chk_code_allowed.codes = internal unnamed_addr constant [178 x i8] calign 1
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@bpf_sp = internal global %struct.bpf_scratchpad zeroinitializer, section ".data..percpu", align 4
@.str.7 = private unnamed_addr constant [64 x i8] c"\012bpf: recursion limit reached on datapath, buggy bpf program?\0A\00", align 1
@softnet_data = external dso_local global %struct.softnet_data, section ".data..percpu..shared_aligned", align 64
@ipv6_stub = external dso_local local_unnamed_addr global ptr, section ".data..read_mostly", align 4
@arp_tbl = external dso_local global %struct.neigh_table, align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 64
@neigh_hh_output.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"include/net/neighbour.h\00", align 1
@____bpf_msg_pull_data.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"net/core/filter.c\00", align 1
@skb_increase_gso_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@skb_decrease_gso_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@____bpf_xdp_adjust_tail.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"Too BIG xdp->frame_sz = %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"Driver BUG: missing reserved tailroom\00", align 1
@__func__.xdp_update_frame_from_buff = private unnamed_addr constant [27 x i8] c"xdp_update_frame_from_buff\00", align 1
@__tracepoint_xdp_redirect = external dso_local global %struct.tracepoint, align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@__tracepoint_xdp_redirect_err = external dso_local global %struct.tracepoint, align 4
@md_dst = internal global ptr null, align 4
@.str.15 = private unnamed_addr constant [18 x i8] c"include/net/dst.h\00", align 1
@overflowuid = external dso_local local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [4 x i8] c"cdg\00", align 1
@sysctl_rmem_max = external dso_local local_unnamed_addr global i32, align 4
@sysctl_wmem_max = external dso_local local_unnamed_addr global i32, align 4
@tcp_hashinfo = external dso_local global %struct.inet_hashinfo, align 64
@udp_table = external dso_local global %struct.udp_table, align 4
@sk_lookup.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.17 = private unnamed_addr constant [36 x i8] c"Found non-RCU, unreferenced socket!\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"include/linux/if_vlan.h\00", align 1
@bpf_skb_load_bytes_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_load_bytes, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 6, i32 7, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_load_bytes_relative_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_load_bytes_relative, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 6, i32 7, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_socket_cookie_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_socket_cookie, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_socket_uid_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_socket_uid, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_event_output_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_event_output, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 1, i32 10, i32 517, i32 8 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_ktime_get_coarse_ns_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_skb_store_bytes_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_store_bytes, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 517, i32 7, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_pull_data_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_pull_data, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_csum_diff_proto = internal constant %struct.bpf_func_proto { ptr @bpf_csum_diff, i8 0, i8 1, i32 0, %union.anon.198 { %struct.anon.197 { i32 773, i32 8, i32 773, i32 8, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_csum_update_proto = internal constant %struct.bpf_func_proto { ptr @bpf_csum_update, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_csum_level_proto = internal constant %struct.bpf_func_proto { ptr @bpf_csum_level, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_l3_csum_replace_proto = internal constant %struct.bpf_func_proto { ptr @bpf_l3_csum_replace, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_l4_csum_replace_proto = internal constant %struct.bpf_func_proto { ptr @bpf_l4_csum_replace, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_clone_redirect_proto = internal constant %struct.bpf_func_proto { ptr @bpf_clone_redirect, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_cgroup_classid_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_cgroup_classid, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_vlan_push_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_vlan_push, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_vlan_pop_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_vlan_pop, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_change_proto_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_change_proto, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_change_type_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_change_type, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_adjust_room_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_adjust_room, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_change_tail_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_change_tail, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_change_head_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_change_head, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_get_tunnel_key_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_get_tunnel_key, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 6, i32 7, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_get_tunnel_opt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_get_tunnel_opt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 6, i32 7, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_redirect_proto = internal constant %struct.bpf_func_proto { ptr @bpf_redirect, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 10, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_redirect_neigh_proto = internal constant %struct.bpf_func_proto { ptr @bpf_redirect_neigh, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 10, i32 773, i32 8, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_redirect_peer_proto = internal constant %struct.bpf_func_proto { ptr @bpf_redirect_peer, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 10, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_route_realm_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_route_realm, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_hash_recalc_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_hash_recalc, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_set_hash_invalid_proto = internal constant %struct.bpf_func_proto { ptr @bpf_set_hash_invalid, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_set_hash_proto = internal constant %struct.bpf_func_proto { ptr @bpf_set_hash, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_smp_processor_id_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_skb_under_cgroup_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_under_cgroup, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 1, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_fib_lookup_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_fib_lookup, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 5, i32 7, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_check_mtu_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_check_mtu, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 13, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_fullsock_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sk_fullsock, i8 0, i8 0, i32 259, %union.anon.198 { %struct.anon.197 { i32 12, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_get_xfrm_state_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_get_xfrm_state, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 6, i32 7, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_lookup_tcp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sk_lookup_tcp, i8 0, i8 1, i32 259, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_lookup_udp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sk_lookup_udp, i8 0, i8 1, i32 259, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_release_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sk_release, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 19, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_listener_sock_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_listener_sock, i8 0, i8 0, i32 259, %union.anon.198 { %struct.anon.197 { i32 12, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skc_lookup_tcp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skc_lookup_tcp, i8 0, i8 1, i32 261, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_tcp_check_syncookie_proto = internal constant %struct.bpf_func_proto { ptr @bpf_tcp_check_syncookie, i8 1, i8 1, i32 0, %union.anon.198 { %struct.anon.197 { i32 19, i32 517, i32 7, i32 517, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_ecn_set_ce_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_ecn_set_ce, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_tcp_gen_syncookie_proto = internal constant %struct.bpf_func_proto { ptr @bpf_tcp_gen_syncookie, i8 1, i8 1, i32 0, %union.anon.198 { %struct.anon.197 { i32 19, i32 517, i32 7, i32 517, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_assign_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sk_assign, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 19, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_set_tunnel_key_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_set_tunnel_key, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_skb_set_tunnel_opt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_skb_set_tunnel_opt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_event_output_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_event_output, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 1, i32 10, i32 517, i32 8 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_adjust_head_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_adjust_head, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_adjust_meta_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_adjust_meta, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_redirect_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_redirect, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 10, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_redirect_map_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_redirect_map, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 1, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_adjust_tail_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_adjust_tail, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_fib_lookup_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_fib_lookup, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 5, i32 7, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_check_mtu_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_check_mtu, i8 1, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 13, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_sk_lookup_udp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_sk_lookup_udp, i8 0, i8 1, i32 259, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_sk_lookup_tcp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_sk_lookup_tcp, i8 0, i8 1, i32 259, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_xdp_skc_lookup_tcp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_xdp_skc_lookup_tcp, i8 0, i8 1, i32 261, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_local_storage_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_lwt_in_push_encap_proto = internal constant %struct.bpf_func_proto { ptr @bpf_lwt_in_push_encap, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 517, i32 7, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_lwt_xmit_push_encap_proto = internal constant %struct.bpf_func_proto { ptr @bpf_lwt_xmit_push_encap, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 517, i32 7, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_current_uid_gid_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_get_socket_cookie_sock_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_socket_cookie_sock, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_netns_cookie_sock_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_netns_cookie_sock, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 265, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_current_pid_tgid_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_get_current_comm_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_get_current_cgroup_id_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_get_current_ancestor_cgroup_id_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_bind_proto = internal constant %struct.bpf_func_proto { ptr @bpf_bind, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_socket_cookie_sock_addr_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_socket_cookie_sock_addr, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_netns_cookie_sock_addr_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_netns_cookie_sock_addr, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 265, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_addr_sk_lookup_tcp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_addr_sk_lookup_tcp, i8 0, i8 0, i32 259, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_addr_sk_lookup_udp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_addr_sk_lookup_udp, i8 0, i8 0, i32 259, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_addr_skc_lookup_tcp_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_addr_skc_lookup_tcp, i8 0, i8 0, i32 261, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_addr_setsockopt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_addr_setsockopt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 517, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_addr_getsockopt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_addr_getsockopt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 6, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_ops_setsockopt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_ops_setsockopt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 517, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_ops_getsockopt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_ops_getsockopt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 6, i32 7 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_ops_cb_flags_set_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_ops_cb_flags_set, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_socket_cookie_sock_ops_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_socket_cookie_sock_ops, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_netns_cookie_sock_ops_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_netns_cookie_sock_ops, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 265, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_ops_load_hdr_opt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_ops_load_hdr_opt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 5, i32 7, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_ops_store_hdr_opt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_ops_store_hdr_opt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 517, i32 7, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sock_ops_reserve_hdr_opt_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sock_ops_reserve_hdr_opt, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@sk_skb_pull_data_proto = internal constant %struct.bpf_func_proto { ptr @sk_skb_pull_data, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@sk_skb_change_tail_proto = internal constant %struct.bpf_func_proto { ptr @sk_skb_change_tail, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@sk_skb_change_head_proto = internal constant %struct.bpf_func_proto { ptr @sk_skb_change_head, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@sk_skb_adjust_room_proto = internal constant %struct.bpf_func_proto { ptr @sk_skb_adjust_room, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_msg_apply_bytes_proto = internal constant %struct.bpf_func_proto { ptr @bpf_msg_apply_bytes, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_msg_cork_bytes_proto = internal constant %struct.bpf_func_proto { ptr @bpf_msg_cork_bytes, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_msg_pull_data_proto = internal constant %struct.bpf_func_proto { ptr @bpf_msg_pull_data, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_msg_push_data_proto = internal constant %struct.bpf_func_proto { ptr @bpf_msg_push_data, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_msg_pop_data_proto = internal constant %struct.bpf_func_proto { ptr @bpf_msg_pop_data, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 10, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_get_netns_cookie_sk_msg_proto = internal constant %struct.bpf_func_proto { ptr @bpf_get_netns_cookie_sk_msg, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 265, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_flow_dissector_load_bytes_proto = internal constant %struct.bpf_func_proto { ptr @bpf_flow_dissector_load_bytes, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 6, i32 7, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@sk_select_reuseport_proto = internal constant %struct.bpf_func_proto { ptr @sk_select_reuseport, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 1, i32 2, i32 10, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@sk_reuseport_load_bytes_proto = internal constant %struct.bpf_func_proto { ptr @sk_reuseport_load_bytes, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 6, i32 7, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@sk_reuseport_load_bytes_relative_proto = internal constant %struct.bpf_func_proto { ptr @sk_reuseport_load_bytes_relative, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 10, i32 6, i32 7, i32 10 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@bpf_sk_lookup_assign_proto = internal constant %struct.bpf_func_proto { ptr @bpf_sk_lookup_assign, i8 0, i8 0, i32 0, %union.anon.198 { %struct.anon.197 { i32 9, i32 271, i32 10, i32 0, i32 0 } }, %union.anon.200 zeroinitializer, ptr null, ptr null }, align 4
@tcp_prot = external dso_local global %struct.proto, align 4
@tcpv6_prot = external dso_local global %struct.proto, align 4
@llvm.compiler.used = appending global [16 x ptr] [ptr @__ksymtab_bpf_master_redirect_enabled_key, ptr @__ksymtab_bpf_prog_create, ptr @__ksymtab_bpf_prog_create_from_user, ptr @__ksymtab_bpf_prog_destroy, ptr @__ksymtab_bpf_redirect_info, ptr @__ksymtab_bpf_sk_lookup_enabled, ptr @__ksymtab_bpf_warn_invalid_xdp_action, ptr @__ksymtab_copy_bpf_fprog_from_user, ptr @__ksymtab_ipv6_bpf_stub, ptr @__ksymtab_sk_attach_filter, ptr @__ksymtab_sk_detach_filter, ptr @__ksymtab_sk_filter_trim_cap, ptr @__ksymtab_xdp_do_flush, ptr @__ksymtab_xdp_do_redirect, ptr @__ksymtab_xdp_do_redirect_frame, ptr @__ksymtab_xdp_master_redirect], section "llvm.metadata"
@switch.table.bpf_tcp_sock_convert_ctx_access = private unnamed_addr constant [28 x i8] c"aaaaaaaaqaaaaaaaaaaayayaaaaq", align 1
@switch.table.bpf_tcp_sock_convert_ctx_access.19 = private unnamed_addr constant [28 x i16] [i16 1328, i16 1224, i16 1248, i16 1324, i16 1032, i16 1044, i16 1076, i16 1132, i16 1286, i16 1392, i16 1396, i16 1268, i16 1272, i16 1648, i16 1024, i16 1028, i16 1048, i16 1052, i16 1416, i16 1420, i16 1016, i16 1248, i16 1064, i16 1248, i16 1072, i16 1360, i16 1364, i16 853], align 2
@switch.table.lwt_is_valid_access = private unnamed_addr constant [8 x i32] [i32 8, i32 8, i32 8, i32 8, i32 9, i32 9, i32 9, i32 9], align 4
@switch.table.sock_addr_func_proto = private unnamed_addr constant [25 x ptr] [ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto, ptr null, ptr null, ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto, ptr null, ptr null, ptr null, ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto, ptr @bpf_sock_addr_setsockopt_proto], align 4
@switch.table.sock_addr_func_proto.20 = private unnamed_addr constant [25 x ptr] [ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto, ptr null, ptr null, ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto, ptr null, ptr null, ptr null, ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto, ptr @bpf_sock_addr_getsockopt_proto], align 4
@switch.table.convert_bpf_ld_abs = private unnamed_addr constant [4 x i32] [i32 1, i32 8, i32 4, i32 2], align 4

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @copy_bpf_fprog_from_user(ptr noundef %0, [2 x i32] %1, i32 noundef %2) #0 {
  %4 = icmp eq i32 %2, 8
  br i1 %4, label %5, label %29

5:                                                ; preds = %3
  %6 = extractvalue [2 x i32] %1, 0
  %7 = inttoptr i32 %6 to ptr
  %8 = extractvalue [2 x i32] %1, 1
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %5
  %12 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %7, i32 8, i32 -1090519040) #30, !srcloc !9
  %13 = extractvalue { i32, i32 } %12, 0
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %23, !prof !10

15:                                               ; preds = %11
  %16 = tail call ptr @llvm.thread.pointer() #31
  %17 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 3
  %18 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %17) #21, !srcloc !11
  %19 = and i32 %18, -13
  %20 = or i32 %19, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %20) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  %21 = tail call i32 @arm_copy_from_user(ptr noundef %0, ptr noundef %7, i32 noundef 8) #31
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %18) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23, !prof !10

23:                                               ; preds = %15, %11
  %24 = phi i32 [ %21, %15 ], [ 8, %11 ]
  %25 = sub i32 8, %24
  %26 = getelementptr i8, ptr %0, i32 %25
  tail call void @llvm.memset.p0.i32(ptr align 1 %26, i8 0, i32 %24, i1 false) #31
  br label %29

27:                                               ; preds = %5
  %28 = load i64, ptr %7, align 1
  store i64 %28, ptr %0, align 1
  br label %29

29:                                               ; preds = %27, %23, %15, %3
  %30 = phi i32 [ -22, %3 ], [ -14, %23 ], [ 0, %27 ], [ 0, %15 ]
  ret i32 %30
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @sk_filter_trim_cap(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca [20 x i8], align 1
  %5 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 11
  %6 = load i8, ptr %5, align 2
  %7 = and i8 %6, 64
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 13
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %11, 16384
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #31, !srcloc !14
  %16 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 30, i32 3), align 4
  %17 = getelementptr [126 x i32], ptr %16, i32 0, i32 69
  %18 = ptrtoint ptr %17 to i32
  %19 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %20 = inttoptr i32 %19 to ptr
  %21 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %20) #21, !srcloc !15
  %22 = add i32 %21, %18
  %23 = inttoptr i32 %22 to ptr
  %24 = load i32, ptr %23, align 4
  %25 = add i32 %24, 1
  store i32 %25, ptr %23, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %15) #31, !srcloc !16
  br label %103

26:                                               ; preds = %9, %3
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !17
  %27 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 16
  %28 = load volatile ptr, ptr %27, align 8
  %29 = icmp eq ptr %28, null
  br i1 %29, label %101, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  store ptr %0, ptr %31, align 4
  %33 = getelementptr inbounds %struct.sk_filter, ptr %28, i32 0, i32 2
  %34 = load ptr, ptr %33, align 4
  tail call void @migrate_disable() #31
  %35 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 3, i32 8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4)
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(20) %4, i8 0, i32 20, i1 false)
  %36 = getelementptr inbounds %struct.bpf_prog, ptr %34, i32 0, i32 1
  %37 = load i16, ptr %36, align 2
  %38 = and i16 %37, 8
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %41, label %40, !prof !10

40:                                               ; preds = %30
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 1 dereferenceable(20) %4, ptr noundef align 1 dereferenceable(20) %35, i32 20, i1 false) #31
  tail call void @llvm.memset.p0.i32(ptr noundef align 1 dereferenceable(20) %35, i8 0, i32 20, i1 false) #31
  br label %41

41:                                               ; preds = %40, %30
  %42 = load volatile i32, ptr @bpf_stats_enabled_key, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %72, !prof !18

44:                                               ; preds = %41
  %45 = tail call i64 @sched_clock() #31
  %46 = getelementptr inbounds %struct.bpf_prog, ptr %34, i32 1
  %47 = getelementptr inbounds %struct.bpf_prog, ptr %34, i32 0, i32 9
  %48 = load ptr, ptr %47, align 4
  %49 = tail call i32 %48(ptr noundef %1, ptr noundef %46) #31
  %50 = getelementptr inbounds %struct.bpf_prog, ptr %34, i32 0, i32 7
  %51 = load ptr, ptr %50, align 4
  %52 = ptrtoint ptr %51 to i32
  %53 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %54 = inttoptr i32 %53 to ptr
  %55 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %54) #21, !srcloc !15
  %56 = add i32 %55, %52
  %57 = inttoptr i32 %56 to ptr
  %58 = getelementptr inbounds %struct.bpf_prog_stats, ptr %57, i32 0, i32 3
  %59 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #31, !srcloc !14
  %60 = load i32, ptr %58, align 4
  %61 = add i32 %60, 1
  store i32 %61, ptr %58, align 4
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !19
  %62 = load i64, ptr %57, align 8
  %63 = add i64 %62, 1
  store i64 %63, ptr %57, align 8
  %64 = getelementptr inbounds %struct.bpf_prog_stats, ptr %57, i32 0, i32 1
  %65 = tail call i64 @sched_clock() #31
  %66 = sub i64 %65, %45
  %67 = and i64 %66, 4294967295
  %68 = load i64, ptr %64, align 8
  %69 = add i64 %67, %68
  store i64 %69, ptr %64, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !20
  %70 = load i32, ptr %58, align 4
  %71 = add i32 %70, 1
  store i32 %71, ptr %58, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %59) #31, !srcloc !16
  br label %77

72:                                               ; preds = %41
  %73 = getelementptr inbounds %struct.bpf_prog, ptr %34, i32 1
  %74 = getelementptr inbounds %struct.bpf_prog, ptr %34, i32 0, i32 9
  %75 = load ptr, ptr %74, align 4
  %76 = tail call i32 %75(ptr noundef %1, ptr noundef %73) #31
  br label %77

77:                                               ; preds = %72, %44
  %78 = phi i32 [ %49, %44 ], [ %76, %72 ]
  %79 = load i16, ptr %36, align 2
  %80 = and i16 %79, 8
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %83, label %82, !prof !10

82:                                               ; preds = %77
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(20) %35, ptr noundef nonnull align 1 dereferenceable(20) %4, i32 20, i1 false) #31
  br label %83

83:                                               ; preds = %82, %77
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4)
  tail call void @migrate_enable() #31
  store ptr %32, ptr %31, align 4
  %84 = icmp eq i32 %78, 0
  br i1 %84, label %101, label %85

85:                                               ; preds = %83
  %86 = tail call i32 @llvm.umax.i32(i32 %78, i32 %2)
  %87 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 5
  %88 = load i32, ptr %87, align 8
  %89 = icmp ugt i32 %88, %86
  br i1 %89, label %90, label %101

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 6
  %92 = load i32, ptr %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = tail call i32 @___pskb_trim(ptr noundef %1, i32 noundef %86) #31
  br label %101

96:                                               ; preds = %90
  store i32 %86, ptr %87, align 8
  %97 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %98 = load ptr, ptr %97, align 4
  %99 = getelementptr i8, ptr %98, i32 %86
  %100 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 14
  store ptr %99, ptr %100, align 8
  br label %101

101:                                              ; preds = %96, %94, %85, %83, %26
  %102 = phi i32 [ 0, %26 ], [ -1, %83 ], [ 0, %85 ], [ %95, %94 ], [ 0, %96 ]
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !21
  br label %103

103:                                              ; preds = %101, %14
  %104 = phi i32 [ %102, %101 ], [ -12, %14 ]
  ret i32 %104
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_get_pay_offset(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 @skb_get_poff(ptr noundef %7) #31
  %9 = zext i32 %8 to i64
  ret i64 %9
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_get_nlattr(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %33

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %15 = load i32, ptr %14, align 8
  %16 = icmp ult i32 %15, 4
  %17 = add i32 %15, -4
  %18 = icmp ult i32 %17, %8
  %19 = or i1 %16, %18
  br i1 %19, label %33, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr i8, ptr %22, i32 %8
  %24 = sub i32 %15, %8
  %25 = tail call ptr @nla_find(ptr noundef %23, i32 noundef %24, i32 noundef %9) #31
  %26 = icmp eq ptr %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = load ptr, ptr %21, align 4
  %29 = ptrtoint ptr %25 to i32
  %30 = ptrtoint ptr %28 to i32
  %31 = sub i32 %29, %30
  %32 = sext i32 %31 to i64
  br label %33

33:                                               ; preds = %27, %20, %13, %5
  %34 = phi i64 [ %32, %27 ], [ 0, %5 ], [ 0, %13 ], [ 0, %20 ]
  ret i64 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_get_nlattr_nest(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %39

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %15 = load i32, ptr %14, align 8
  %16 = icmp ult i32 %15, 4
  %17 = add i32 %15, -4
  %18 = icmp ult i32 %17, %8
  %19 = or i1 %16, %18
  br i1 %19, label %39, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr i8, ptr %22, i32 %8
  %24 = load i16, ptr %23, align 2
  %25 = zext i16 %24 to i32
  %26 = sub i32 %15, %8
  %27 = icmp ult i32 %26, %25
  br i1 %27, label %39, label %28

28:                                               ; preds = %20
  %29 = getelementptr i8, ptr %23, i32 4
  %30 = add nsw i32 %25, -4
  %31 = tail call ptr @nla_find(ptr noundef %29, i32 noundef %30, i32 noundef %9) #31
  %32 = icmp eq ptr %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = load ptr, ptr %21, align 4
  %35 = ptrtoint ptr %31 to i32
  %36 = ptrtoint ptr %34 to i32
  %37 = sub i32 %35, %36
  %38 = sext i32 %37 to i64
  br label %39

39:                                               ; preds = %33, %28, %20, %13, %5
  %40 = phi i64 [ %38, %33 ], [ 0, %5 ], [ 0, %13 ], [ 0, %20 ], [ 0, %28 ]
  ret i64 %40
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_load_helper_8(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = alloca i8, align 1
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #31
  store i8 0, ptr %6, align 1, !annotation !22
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %27

13:                                               ; preds = %5
  %14 = trunc i64 %2 to i32
  %15 = sub i32 %14, %11
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr i8, ptr %10, i32 %11
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  br label %33

21:                                               ; preds = %13
  %22 = call i32 @skb_copy_bits(ptr noundef %8, i32 noundef %11, ptr noundef nonnull %6, i32 noundef 1) #31
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %21
  %25 = load i8, ptr %6, align 1
  %26 = zext i8 %25 to i64
  br label %33

27:                                               ; preds = %5
  %28 = tail call ptr @bpf_internal_load_pointer_neg_helper(ptr noundef %8, i32 noundef %11, i32 noundef 1) #31
  %29 = icmp eq ptr %28, null
  br i1 %29, label %33, label %30, !prof !18

30:                                               ; preds = %27
  %31 = load i8, ptr %28, align 1
  %32 = zext i8 %31 to i64
  br label %33

33:                                               ; preds = %30, %27, %24, %21, %17
  %34 = phi i64 [ %20, %17 ], [ %26, %24 ], [ %32, %30 ], [ -14, %27 ], [ -14, %21 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #31
  ret i64 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_load_helper_8_no_cache(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = alloca i8, align 1
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 5
  %13 = load i32, ptr %12, align 8
  %14 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 6
  %15 = load i32, ptr %14, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #31
  store i8 0, ptr %6, align 1, !annotation !22
  %16 = icmp sgt i32 %9, -1
  br i1 %16, label %17, label %31

17:                                               ; preds = %5
  %18 = add i32 %15, %9
  %19 = sub i32 %13, %18
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr i8, ptr %11, i32 %9
  %23 = load i8, ptr %22, align 1
  %24 = zext i8 %23 to i64
  br label %37

25:                                               ; preds = %17
  %26 = call i32 @skb_copy_bits(ptr noundef %8, i32 noundef %9, ptr noundef nonnull %6, i32 noundef 1) #31
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %25
  %29 = load i8, ptr %6, align 1
  %30 = zext i8 %29 to i64
  br label %37

31:                                               ; preds = %5
  %32 = tail call ptr @bpf_internal_load_pointer_neg_helper(ptr noundef %8, i32 noundef %9, i32 noundef 1) #31
  %33 = icmp eq ptr %32, null
  br i1 %33, label %37, label %34, !prof !18

34:                                               ; preds = %31
  %35 = load i8, ptr %32, align 1
  %36 = zext i8 %35 to i64
  br label %37

37:                                               ; preds = %34, %31, %28, %25, %21
  %38 = phi i64 [ %24, %21 ], [ %30, %28 ], [ %36, %34 ], [ -14, %31 ], [ -14, %25 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #31
  ret i64 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_load_helper_16(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = alloca i16, align 2
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %6) #31
  store i16 0, ptr %6, align 2, !annotation !22
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %29

13:                                               ; preds = %5
  %14 = trunc i64 %2 to i32
  %15 = sub i32 %14, %11
  %16 = icmp sgt i32 %15, 1
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr i8, ptr %10, i32 %11
  %19 = load i16, ptr %18, align 1
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #31
  %21 = zext i16 %20 to i64
  br label %36

22:                                               ; preds = %13
  %23 = call i32 @skb_copy_bits(ptr noundef %8, i32 noundef %11, ptr noundef nonnull %6, i32 noundef 2) #31
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %22
  %26 = load i16, ptr %6, align 2
  %27 = call i16 @llvm.bswap.i16(i16 %26) #31
  %28 = zext i16 %27 to i64
  br label %36

29:                                               ; preds = %5
  %30 = tail call ptr @bpf_internal_load_pointer_neg_helper(ptr noundef %8, i32 noundef %11, i32 noundef 2) #31
  %31 = icmp eq ptr %30, null
  br i1 %31, label %36, label %32, !prof !18

32:                                               ; preds = %29
  %33 = load i16, ptr %30, align 1
  %34 = tail call i16 @llvm.bswap.i16(i16 %33) #31
  %35 = zext i16 %34 to i64
  br label %36

36:                                               ; preds = %32, %29, %25, %22, %17
  %37 = phi i64 [ %21, %17 ], [ %28, %25 ], [ %35, %32 ], [ -14, %29 ], [ -14, %22 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %6) #31
  ret i64 %37
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_load_helper_16_no_cache(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = alloca i16, align 2
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 5
  %13 = load i32, ptr %12, align 8
  %14 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 6
  %15 = load i32, ptr %14, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %6) #31
  store i16 0, ptr %6, align 2, !annotation !22
  %16 = icmp sgt i32 %9, -1
  br i1 %16, label %17, label %33

17:                                               ; preds = %5
  %18 = add i32 %15, %9
  %19 = sub i32 %13, %18
  %20 = icmp sgt i32 %19, 1
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = getelementptr i8, ptr %11, i32 %9
  %23 = load i16, ptr %22, align 1
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #31
  %25 = zext i16 %24 to i64
  br label %40

26:                                               ; preds = %17
  %27 = call i32 @skb_copy_bits(ptr noundef %8, i32 noundef %9, ptr noundef nonnull %6, i32 noundef 2) #31
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %40

29:                                               ; preds = %26
  %30 = load i16, ptr %6, align 2
  %31 = call i16 @llvm.bswap.i16(i16 %30) #31
  %32 = zext i16 %31 to i64
  br label %40

33:                                               ; preds = %5
  %34 = tail call ptr @bpf_internal_load_pointer_neg_helper(ptr noundef %8, i32 noundef %9, i32 noundef 2) #31
  %35 = icmp eq ptr %34, null
  br i1 %35, label %40, label %36, !prof !18

36:                                               ; preds = %33
  %37 = load i16, ptr %34, align 1
  %38 = tail call i16 @llvm.bswap.i16(i16 %37) #31
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %36, %33, %29, %26, %21
  %41 = phi i64 [ %25, %21 ], [ %32, %29 ], [ %39, %36 ], [ -14, %33 ], [ -14, %26 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %6) #31
  ret i64 %41
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_load_helper_32(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = alloca i32, align 4
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  store i32 0, ptr %6, align 4, !annotation !22
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %29, !prof !10

13:                                               ; preds = %5
  %14 = trunc i64 %2 to i32
  %15 = sub i32 %14, %11
  %16 = icmp sgt i32 %15, 3
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr i8, ptr %10, i32 %11
  %19 = load i32, ptr %18, align 1
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #31
  %21 = zext i32 %20 to i64
  br label %36

22:                                               ; preds = %13
  %23 = call i32 @skb_copy_bits(ptr noundef %8, i32 noundef %11, ptr noundef nonnull %6, i32 noundef 4) #31
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %22
  %26 = load i32, ptr %6, align 4
  %27 = call i32 @llvm.bswap.i32(i32 %26) #31
  %28 = zext i32 %27 to i64
  br label %36

29:                                               ; preds = %5
  %30 = tail call ptr @bpf_internal_load_pointer_neg_helper(ptr noundef %8, i32 noundef %11, i32 noundef 4) #31
  %31 = icmp eq ptr %30, null
  br i1 %31, label %36, label %32, !prof !18

32:                                               ; preds = %29
  %33 = load i32, ptr %30, align 1
  %34 = tail call i32 @llvm.bswap.i32(i32 %33) #31
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %32, %29, %25, %22, %17
  %37 = phi i64 [ %21, %17 ], [ %28, %25 ], [ %35, %32 ], [ -14, %29 ], [ -14, %22 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  ret i64 %37
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_load_helper_32_no_cache(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = alloca i32, align 4
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 17
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 5
  %13 = load i32, ptr %12, align 8
  %14 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 6
  %15 = load i32, ptr %14, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  store i32 0, ptr %6, align 4, !annotation !22
  %16 = icmp sgt i32 %9, -1
  br i1 %16, label %17, label %33, !prof !10

17:                                               ; preds = %5
  %18 = add i32 %15, %9
  %19 = sub i32 %13, %18
  %20 = icmp sgt i32 %19, 3
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = getelementptr i8, ptr %11, i32 %9
  %23 = load i32, ptr %22, align 1
  %24 = tail call i32 @llvm.bswap.i32(i32 %23) #31
  %25 = zext i32 %24 to i64
  br label %40

26:                                               ; preds = %17
  %27 = call i32 @skb_copy_bits(ptr noundef %8, i32 noundef %9, ptr noundef nonnull %6, i32 noundef 4) #31
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %40

29:                                               ; preds = %26
  %30 = load i32, ptr %6, align 4
  %31 = call i32 @llvm.bswap.i32(i32 %30) #31
  %32 = zext i32 %31 to i64
  br label %40

33:                                               ; preds = %5
  %34 = tail call ptr @bpf_internal_load_pointer_neg_helper(ptr noundef %8, i32 noundef %9, i32 noundef 4) #31
  %35 = icmp eq ptr %34, null
  br i1 %35, label %40, label %36, !prof !18

36:                                               ; preds = %33
  %37 = load i32, ptr %34, align 1
  %38 = tail call i32 @llvm.bswap.i32(i32 %37) #31
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %36, %33, %29, %26, %21
  %41 = phi i64 [ %25, %21 ], [ %32, %29 ], [ %39, %36 ], [ -14, %33 ], [ -14, %26 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  ret i64 %41
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @sk_filter_uncharge(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sk_filter, ptr %1, i32 0, i32 2
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.bpf_prog, ptr %4, i32 0, i32 4
  %6 = load i32, ptr %5, align 4
  %7 = shl i32 %6, 3
  %8 = add i32 %7, 48
  %9 = tail call i32 @llvm.umax.i32(i32 %8, i32 48) #31
  %10 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 20
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %10) #31, !srcloc !23
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %10, ptr %10, i32 %9, ptr elementtype(i32) %10) #31, !srcloc !24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !25
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %1) #31, !srcloc !23
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %1, ptr %1, i32 1, ptr elementtype(i32) %1) #31, !srcloc !26
  %13 = extractvalue { i32, i32, i32 } %12, 0
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = icmp sgt i32 %13, 0
  br i1 %16, label %20, label %17, !prof !10

17:                                               ; preds = %15
  tail call void @refcount_warn_saturate(ptr noundef %1, i32 noundef 3) #31
  br label %20

18:                                               ; preds = %2
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !27
  %19 = getelementptr inbounds %struct.sk_filter, ptr %1, i32 0, i32 1
  tail call void @call_rcu(ptr noundef %19, ptr noundef nonnull @sk_filter_release_rcu) #31
  br label %20

20:                                               ; preds = %18, %17, %15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local zeroext i1 @sk_filter_charge(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = load volatile i32, ptr %1, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %15, %2
  %6 = phi i32 [ %13, %15 ], [ %3, %2 ]
  %7 = add i32 %6, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %1) #31, !srcloc !23
  br label %8

8:                                                ; preds = %8, %5
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %1, ptr %1, i32 %6, i32 %7, ptr elementtype(i32) %1) #31, !srcloc !28
  %10 = extractvalue { i32, i32 } %9, 0
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %8

12:                                               ; preds = %8
  %13 = extractvalue { i32, i32 } %9, 1
  %14 = icmp eq i32 %13, %6
  br i1 %14, label %17, label %15, !prof !10

15:                                               ; preds = %12
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %17, label %5

17:                                               ; preds = %15, %12, %2
  %18 = phi i32 [ 0, %2 ], [ 0, %15 ], [ %6, %12 ]
  %19 = add i32 %18, 1
  %20 = or i32 %19, %18
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %23, label %22, !prof !10

22:                                               ; preds = %17
  tail call void @refcount_warn_saturate(ptr noundef %1, i32 noundef 0) #31
  br label %23

23:                                               ; preds = %22, %17
  %24 = icmp eq i32 %18, 0
  br i1 %24, label %51, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.sk_filter, ptr %1, i32 0, i32 2
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.bpf_prog, ptr %27, i32 0, i32 4
  %29 = load i32, ptr %28, align 4
  %30 = shl i32 %29, 3
  %31 = add i32 %30, 48
  %32 = tail call i32 @llvm.umax.i32(i32 %31, i32 48) #31
  %33 = load i32, ptr @sysctl_optmem_max, align 4
  %34 = icmp ugt i32 %32, %33
  br i1 %34, label %42, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 20
  %37 = load volatile i32, ptr %36, align 4
  %38 = add i32 %37, %32
  %39 = icmp ult i32 %38, %33
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %36) #31, !srcloc !23
  %41 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %36, ptr %36, i32 %32, ptr elementtype(i32) %36) #31, !srcloc !29
  br label %51

42:                                               ; preds = %35, %25
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !25
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %1) #31, !srcloc !23
  %43 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %1, ptr %1, i32 1, ptr elementtype(i32) %1) #31, !srcloc !26
  %44 = extractvalue { i32, i32, i32 } %43, 0
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = icmp sgt i32 %44, 0
  br i1 %47, label %51, label %48, !prof !10

48:                                               ; preds = %46
  tail call void @refcount_warn_saturate(ptr noundef %1, i32 noundef 3) #31
  br label %51

49:                                               ; preds = %42
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !27
  %50 = getelementptr inbounds %struct.sk_filter, ptr %1, i32 0, i32 1
  tail call void @call_rcu(ptr noundef %50, ptr noundef nonnull @sk_filter_release_rcu) #31
  br label %51

51:                                               ; preds = %49, %48, %46, %40, %23
  %52 = phi i1 [ false, %23 ], [ true, %40 ], [ false, %46 ], [ false, %48 ], [ false, %49 ]
  ret i1 %52
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @bpf_prog_create(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = load i16, ptr %1, align 4
  %4 = zext i16 %3 to i32
  %5 = shl nuw nsw i32 %4, 3
  %6 = getelementptr inbounds %struct.sock_fprog_kern, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 4
  %8 = icmp ne ptr %7, null
  %9 = add nsw i32 %4, -1
  %10 = icmp ult i32 %9, 4096
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %28

12:                                               ; preds = %2
  %13 = add nuw nsw i32 %5, 48
  %14 = tail call ptr @bpf_prog_alloc(i32 noundef %13, i32 noundef 0) #31
  %15 = icmp eq ptr %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.bpf_prog, ptr %14, i32 1
  %18 = load ptr, ptr %6, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 4 %17, ptr align 4 %18, i32 %5, i1 false)
  %19 = load i16, ptr %1, align 4
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %struct.bpf_prog, ptr %14, i32 0, i32 4
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.bpf_prog, ptr %14, i32 0, i32 11
  store ptr null, ptr %22, align 4
  %23 = tail call fastcc ptr @bpf_prepare_filter(ptr noundef nonnull %14, ptr noundef null)
  %24 = icmp ugt ptr %23, inttoptr (i32 -4096 to ptr)
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = ptrtoint ptr %23 to i32
  br label %28

27:                                               ; preds = %16
  store ptr %23, ptr %0, align 4
  br label %28

28:                                               ; preds = %27, %25, %12, %2
  %29 = phi i32 [ %26, %25 ], [ 0, %27 ], [ -22, %2 ], [ -12, %12 ]
  ret i32 %29
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_prog_alloc(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #4

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @bpf_prepare_filter(ptr noundef %0, ptr noundef readonly %1) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 9
  store ptr null, ptr %6, align 4
  %7 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 1
  %8 = load i16, ptr %7, align 2
  %9 = and i16 %8, -2
  store i16 %9, ptr %7, align 2
  %10 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 1
  %11 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %67, label %14

14:                                               ; preds = %64, %2
  %15 = phi i32 [ %65, %64 ], [ 0, %2 ]
  %16 = getelementptr %struct.sock_filter, ptr %10, i32 %15
  %17 = load i16, ptr %16, align 4
  %18 = icmp ugt i16 %17, 177
  br i1 %18, label %131, label %19

19:                                               ; preds = %14
  %20 = zext i16 %17 to i32
  %21 = getelementptr [178 x i8], ptr @chk_code_allowed.codes, i32 0, i32 %20
  %22 = load i8, ptr %21, align 1, !range !30
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %131, label %24

24:                                               ; preds = %19
  switch i16 %17, label %64 [
    i16 52, label %25
    i16 148, label %25
    i16 100, label %29
    i16 116, label %29
    i16 96, label %33
    i16 97, label %33
    i16 2, label %33
    i16 3, label %33
    i16 5, label %37
    i16 21, label %43
    i16 29, label %43
    i16 53, label %43
    i16 61, label %43
    i16 37, label %43
    i16 45, label %43
    i16 69, label %43
    i16 77, label %43
    i16 32, label %56
    i16 40, label %56
    i16 48, label %56
  ]

25:                                               ; preds = %24, %24
  %26 = getelementptr %struct.sock_filter, ptr %10, i32 %15, i32 3
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %131, label %64

29:                                               ; preds = %24, %24
  %30 = getelementptr %struct.sock_filter, ptr %10, i32 %15, i32 3
  %31 = load i32, ptr %30, align 4
  %32 = icmp ugt i32 %31, 31
  br i1 %32, label %131, label %64

33:                                               ; preds = %24, %24, %24, %24
  %34 = getelementptr %struct.sock_filter, ptr %10, i32 %15, i32 3
  %35 = load i32, ptr %34, align 4
  %36 = icmp ugt i32 %35, 15
  br i1 %36, label %131, label %64

37:                                               ; preds = %24
  %38 = getelementptr %struct.sock_filter, ptr %10, i32 %15, i32 3
  %39 = load i32, ptr %38, align 4
  %40 = xor i32 %15, -1
  %41 = add i32 %12, %40
  %42 = icmp ult i32 %39, %41
  br i1 %42, label %64, label %131

43:                                               ; preds = %24, %24, %24, %24, %24, %24, %24, %24
  %44 = getelementptr %struct.sock_filter, ptr %10, i32 %15, i32 1
  %45 = load i8, ptr %44, align 2
  %46 = zext i8 %45 to i32
  %47 = add nuw i32 %15, 1
  %48 = add i32 %47, %46
  %49 = icmp ult i32 %48, %12
  br i1 %49, label %50, label %131

50:                                               ; preds = %43
  %51 = getelementptr %struct.sock_filter, ptr %10, i32 %15, i32 2
  %52 = load i8, ptr %51, align 1
  %53 = zext i8 %52 to i32
  %54 = add i32 %47, %53
  %55 = icmp ult i32 %54, %12
  br i1 %55, label %64, label %131

56:                                               ; preds = %24, %24, %24
  %57 = getelementptr %struct.sock_filter, ptr %10, i32 %15, i32 3
  %58 = load i32, ptr %57, align 4
  %59 = add i32 %58, 4096
  %60 = tail call i32 @llvm.fshl.i32(i32 %59, i32 %59, i32 30) #31
  %61 = icmp ugt i32 %60, 15
  %62 = icmp ugt i32 %58, -4097
  %63 = select i1 %61, i1 %62, i1 false
  br i1 %63, label %131, label %64

64:                                               ; preds = %56, %50, %37, %33, %29, %25, %24
  %65 = add nuw i32 %15, 1
  %66 = icmp eq i32 %65, %12
  br i1 %66, label %67, label %14

67:                                               ; preds = %64, %2
  %68 = add i32 %12, -1
  %69 = getelementptr %struct.sock_filter, ptr %10, i32 %68
  %70 = load i16, ptr %69, align 4
  switch i16 %70, label %131 [
    i16 6, label %71
    i16 22, label %71
  ]

71:                                               ; preds = %67, %67
  %72 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %12, i32 2) #31
  %73 = extractvalue { i32, i1 } %72, 1
  br i1 %73, label %131, label %74, !prof !18

74:                                               ; preds = %71
  %75 = extractvalue { i32, i1 } %72, 0
  %76 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %75, i32 noundef 3264) #32
  %77 = icmp eq ptr %76, null
  br i1 %77, label %131, label %78

78:                                               ; preds = %74
  %79 = shl nuw i32 %12, 1
  tail call void @llvm.memset.p0.i32(ptr nonnull align 64 %76, i8 -1, i32 %79, i1 false) #31
  br i1 %13, label %144, label %80

80:                                               ; preds = %126, %78
  %81 = phi i32 [ %128, %126 ], [ 0, %78 ]
  %82 = phi i32 [ %127, %126 ], [ 0, %78 ]
  %83 = getelementptr i16, ptr %76, i32 %81
  %84 = load i16, ptr %83, align 2
  %85 = zext i16 %84 to i32
  %86 = and i32 %82, %85
  %87 = getelementptr %struct.sock_filter, ptr %10, i32 %81
  %88 = load i16, ptr %87, align 4
  switch i16 %88, label %126 [
    i16 2, label %89
    i16 3, label %89
    i16 96, label %94
    i16 97, label %94
    i16 5, label %100
    i16 21, label %109
    i16 29, label %109
    i16 53, label %109
    i16 61, label %109
    i16 37, label %109
    i16 45, label %109
    i16 69, label %109
    i16 77, label %109
  ]

89:                                               ; preds = %80, %80
  %90 = getelementptr %struct.sock_filter, ptr %10, i32 %81, i32 3
  %91 = load i32, ptr %90, align 4
  %92 = shl nuw i32 1, %91
  %93 = or i32 %92, %86
  br label %126

94:                                               ; preds = %80, %80
  %95 = getelementptr %struct.sock_filter, ptr %10, i32 %81, i32 3
  %96 = load i32, ptr %95, align 4
  %97 = shl nuw i32 1, %96
  %98 = and i32 %97, %86
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %130, label %126

100:                                              ; preds = %80
  %101 = add nuw nsw i32 %81, 1
  %102 = getelementptr %struct.sock_filter, ptr %10, i32 %81, i32 3
  %103 = load i32, ptr %102, align 4
  %104 = add i32 %101, %103
  %105 = getelementptr i16, ptr %76, i32 %104
  %106 = load i16, ptr %105, align 2
  %107 = trunc i32 %86 to i16
  %108 = and i16 %106, %107
  store i16 %108, ptr %105, align 2
  br label %126

109:                                              ; preds = %80, %80, %80, %80, %80, %80, %80, %80
  %110 = add nuw nsw i32 %81, 1
  %111 = getelementptr %struct.sock_filter, ptr %10, i32 %81, i32 1
  %112 = load i8, ptr %111, align 2
  %113 = zext i8 %112 to i32
  %114 = add nuw i32 %110, %113
  %115 = getelementptr i16, ptr %76, i32 %114
  %116 = load i16, ptr %115, align 2
  %117 = trunc i32 %86 to i16
  %118 = and i16 %116, %117
  store i16 %118, ptr %115, align 2
  %119 = getelementptr %struct.sock_filter, ptr %10, i32 %81, i32 2
  %120 = load i8, ptr %119, align 1
  %121 = zext i8 %120 to i32
  %122 = add nuw i32 %110, %121
  %123 = getelementptr i16, ptr %76, i32 %122
  %124 = load i16, ptr %123, align 2
  %125 = and i16 %124, %117
  store i16 %125, ptr %123, align 2
  br label %126

126:                                              ; preds = %109, %100, %94, %89, %80
  %127 = phi i32 [ %86, %80 ], [ 65535, %109 ], [ 65535, %100 ], [ %86, %94 ], [ %93, %89 ]
  %128 = add nuw nsw i32 %81, 1
  %129 = icmp eq i32 %128, %12
  br i1 %129, label %144, label %80

130:                                              ; preds = %94
  tail call void @kfree(ptr noundef nonnull %76) #31
  br label %131

131:                                              ; preds = %130, %74, %71, %67, %56, %50, %43, %37, %33, %29, %25, %19, %14
  %132 = phi ptr [ inttoptr (i32 -22 to ptr), %130 ], [ inttoptr (i32 -12 to ptr), %71 ], [ inttoptr (i32 -12 to ptr), %74 ], [ inttoptr (i32 -22 to ptr), %67 ], [ inttoptr (i32 -22 to ptr), %56 ], [ inttoptr (i32 -22 to ptr), %43 ], [ inttoptr (i32 -22 to ptr), %50 ], [ inttoptr (i32 -22 to ptr), %37 ], [ inttoptr (i32 -22 to ptr), %33 ], [ inttoptr (i32 -22 to ptr), %29 ], [ inttoptr (i32 -22 to ptr), %25 ], [ inttoptr (i32 -22 to ptr), %19 ], [ inttoptr (i32 -22 to ptr), %14 ]
  %133 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 2
  %134 = load i32, ptr %133, align 4
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %214, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 11
  %138 = load ptr, ptr %137, align 4
  %139 = icmp eq ptr %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.sock_fprog_kern, ptr %138, i32 0, i32 1
  %142 = load ptr, ptr %141, align 4
  tail call void @kfree(ptr noundef %142) #31
  tail call void @kfree(ptr noundef nonnull %138) #31
  br label %143

143:                                              ; preds = %140, %136
  tail call void @bpf_prog_free(ptr noundef %0) #31
  br label %214

144:                                              ; preds = %126, %78
  tail call void @kfree(ptr noundef nonnull %76) #31
  %145 = icmp eq ptr %1, null
  br i1 %145, label %164, label %146

146:                                              ; preds = %144
  %147 = load i32, ptr %11, align 4
  %148 = tail call i32 %1(ptr noundef %10, i32 noundef %147) #31
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 2
  %152 = load i32, ptr %151, align 4
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %162, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 11
  %156 = load ptr, ptr %155, align 4
  %157 = icmp eq ptr %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.sock_fprog_kern, ptr %156, i32 0, i32 1
  %160 = load ptr, ptr %159, align 4
  tail call void @kfree(ptr noundef %160) #31
  tail call void @kfree(ptr noundef nonnull %156) #31
  br label %161

161:                                              ; preds = %158, %154
  tail call void @bpf_prog_free(ptr noundef %0) #31
  br label %162

162:                                              ; preds = %161, %150
  %163 = inttoptr i32 %148 to ptr
  br label %214

164:                                              ; preds = %146, %144
  tail call void @bpf_jit_compile(ptr noundef %0) #31
  %165 = load i16, ptr %7, align 2
  %166 = and i16 %165, 1
  %167 = icmp eq i16 %166, 0
  br i1 %167, label %168, label %214

168:                                              ; preds = %164
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #31
  store i32 0, ptr %4, align 4, !annotation !22
  %169 = load i32, ptr %11, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #31
  store i8 0, ptr %5, align 1
  %170 = shl i32 %169, 3
  %171 = tail call ptr @kmemdup(ptr noundef %10, i32 noundef %170, i32 noundef 11456) #31
  %172 = icmp eq ptr %171, null
  br i1 %172, label %173, label %174

173:                                              ; preds = %168
  store i32 -12, ptr %3, align 4
  br label %196

174:                                              ; preds = %168
  %175 = call fastcc i32 @bpf_convert_filter(ptr noundef nonnull %171, i32 noundef %169, ptr noundef null, ptr noundef nonnull %4, ptr noundef nonnull %5) #31
  store i32 %175, ptr %3, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %194

177:                                              ; preds = %174
  %178 = load i32, ptr %4, align 4
  %179 = shl i32 %178, 3
  %180 = add i32 %179, 48
  %181 = tail call i32 @llvm.umax.i32(i32 %180, i32 48) #31
  %182 = tail call ptr @bpf_prog_realloc(ptr noundef %0, i32 noundef %181, i32 noundef 0) #31
  %183 = icmp eq ptr %182, null
  br i1 %183, label %184, label %185

184:                                              ; preds = %177
  store i32 -12, ptr %3, align 4
  br label %194

185:                                              ; preds = %177
  %186 = getelementptr inbounds %struct.bpf_prog, ptr %182, i32 0, i32 4
  store i32 %178, ptr %186, align 4
  %187 = call fastcc i32 @bpf_convert_filter(ptr noundef nonnull %171, i32 noundef %169, ptr noundef nonnull %182, ptr noundef nonnull %4, ptr noundef nonnull %5) #31
  store i32 %187, ptr %3, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %194

189:                                              ; preds = %185
  %190 = call ptr @bpf_prog_select_runtime(ptr noundef nonnull %182, ptr noundef nonnull %3) #31
  %191 = load i32, ptr %3, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %189
  call void @kfree(ptr noundef nonnull %171) #31
  br label %212

194:                                              ; preds = %189, %185, %184, %174
  %195 = phi ptr [ %0, %174 ], [ %182, %185 ], [ %190, %189 ], [ %0, %184 ]
  call void @kfree(ptr noundef nonnull %171) #31
  br label %196

196:                                              ; preds = %194, %173
  %197 = phi ptr [ %195, %194 ], [ %0, %173 ]
  %198 = getelementptr inbounds %struct.bpf_prog, ptr %197, i32 0, i32 2
  %199 = load i32, ptr %198, align 4
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %209, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %struct.bpf_prog, ptr %197, i32 0, i32 11
  %203 = load ptr, ptr %202, align 4
  %204 = icmp eq ptr %203, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.sock_fprog_kern, ptr %203, i32 0, i32 1
  %207 = load ptr, ptr %206, align 4
  call void @kfree(ptr noundef %207) #31
  call void @kfree(ptr noundef nonnull %203) #31
  br label %208

208:                                              ; preds = %205, %201
  call void @bpf_prog_free(ptr noundef %197) #31
  br label %209

209:                                              ; preds = %208, %196
  %210 = load i32, ptr %3, align 4
  %211 = inttoptr i32 %210 to ptr
  br label %212

212:                                              ; preds = %209, %193
  %213 = phi ptr [ %211, %209 ], [ %190, %193 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #31
  br label %214

214:                                              ; preds = %212, %164, %162, %143, %131
  %215 = phi ptr [ %163, %162 ], [ %0, %164 ], [ %213, %212 ], [ %132, %131 ], [ %132, %143 ]
  ret ptr %215
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @bpf_prog_create_from_user(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2, i1 noundef zeroext %3) #0 {
  %5 = load i16, ptr %1, align 4
  %6 = zext i16 %5 to i32
  %7 = shl nuw nsw i32 %6, 3
  %8 = getelementptr inbounds %struct.sock_fprog, ptr %1, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = icmp ne ptr %9, null
  %11 = add nsw i32 %6, -1
  %12 = icmp ult i32 %11, 4096
  %13 = and i1 %10, %12
  br i1 %13, label %14, label %63

14:                                               ; preds = %4
  %15 = add nuw nsw i32 %7, 48
  %16 = tail call ptr @bpf_prog_alloc(i32 noundef %15, i32 noundef 0) #31
  %17 = icmp eq ptr %16, null
  br i1 %17, label %63, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.bpf_prog, ptr %16, i32 1
  %20 = load ptr, ptr %8, align 4
  %21 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %20, i32 %7, i32 -1090519040) #30, !srcloc !9
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31, !prof !10

24:                                               ; preds = %18
  %25 = tail call ptr @llvm.thread.pointer() #31
  %26 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %27 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %26) #21, !srcloc !11
  %28 = and i32 %27, -13
  %29 = or i32 %28, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %29) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  %30 = tail call i32 @arm_copy_from_user(ptr noundef %19, ptr noundef %20, i32 noundef %7) #31
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %27) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  br label %31

31:                                               ; preds = %24, %18
  %32 = phi i32 [ %30, %24 ], [ %7, %18 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34, !prof !10

34:                                               ; preds = %31
  %35 = sub i32 %7, %32
  %36 = getelementptr i8, ptr %19, i32 %35
  tail call void @llvm.memset.p0.i32(ptr align 1 %36, i8 0, i32 %32, i1 false) #31
  tail call void @__bpf_prog_free(ptr noundef nonnull %16) #31
  br label %63

37:                                               ; preds = %31
  %38 = load i16, ptr %1, align 4
  %39 = zext i16 %38 to i32
  %40 = getelementptr inbounds %struct.bpf_prog, ptr %16, i32 0, i32 4
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.bpf_prog, ptr %16, i32 0, i32 11
  store ptr null, ptr %41, align 4
  br i1 %3, label %42, label %57

42:                                               ; preds = %37
  %43 = load i16, ptr %1, align 4
  %44 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %45 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %44, i32 noundef 3264, i32 noundef 8) #33
  store ptr %45, ptr %41, align 4
  %46 = icmp eq ptr %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = zext i16 %43 to i32
  %49 = shl nuw nsw i32 %48, 3
  %50 = load i16, ptr %1, align 4
  store i16 %50, ptr %45, align 8
  %51 = tail call ptr @kmemdup(ptr noundef %19, i32 noundef %49, i32 noundef 11456) #31
  %52 = getelementptr inbounds %struct.sock_fprog_kern, ptr %45, i32 0, i32 1
  store ptr %51, ptr %52, align 4
  %53 = icmp eq ptr %51, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = load ptr, ptr %41, align 4
  tail call void @kfree(ptr noundef %55) #31
  br label %56

56:                                               ; preds = %54, %42
  tail call void @__bpf_prog_free(ptr noundef nonnull %16) #31
  br label %63

57:                                               ; preds = %47, %37
  %58 = tail call fastcc ptr @bpf_prepare_filter(ptr noundef nonnull %16, ptr noundef %2)
  %59 = icmp ugt ptr %58, inttoptr (i32 -4096 to ptr)
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = ptrtoint ptr %58 to i32
  br label %63

62:                                               ; preds = %57
  store ptr %58, ptr %0, align 4
  br label %63

63:                                               ; preds = %62, %60, %56, %34, %14, %4
  %64 = phi i32 [ -14, %34 ], [ -12, %56 ], [ %61, %60 ], [ 0, %62 ], [ -22, %4 ], [ -12, %14 ]
  ret i32 %64
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__bpf_prog_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @bpf_prog_destroy(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 2
  %3 = load i32, ptr %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 11
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_fprog_kern, ptr %7, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void @kfree(ptr noundef %11) #31
  tail call void @kfree(ptr noundef nonnull %7) #31
  br label %12

12:                                               ; preds = %9, %5
  tail call void @bpf_prog_free(ptr noundef %0) #31
  br label %13

13:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @sk_attach_filter(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {
  %3 = tail call fastcc ptr @__get_filter(ptr noundef %0, ptr noundef %1)
  %4 = icmp ugt ptr %3, inttoptr (i32 -4096 to ptr)
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = ptrtoint ptr %3 to i32
  br label %22

7:                                                ; preds = %2
  %8 = tail call fastcc i32 @__sk_attach_prog(ptr noundef %3, ptr noundef %1)
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 2
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 11
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sock_fprog_kern, ptr %16, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  tail call void @kfree(ptr noundef %20) #31
  tail call void @kfree(ptr noundef nonnull %16) #31
  br label %21

21:                                               ; preds = %18, %14
  tail call void @bpf_prog_free(ptr noundef %3) #31
  br label %22

22:                                               ; preds = %21, %10, %7, %5
  %23 = phi i32 [ %6, %5 ], [ 0, %7 ], [ %8, %10 ], [ %8, %21 ]
  ret i32 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @__get_filter(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #0 {
  %3 = load i16, ptr %0, align 4
  %4 = zext i16 %3 to i32
  %5 = shl nuw nsw i32 %4, 3
  %6 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 2097152
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %61

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.sock_fprog, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp ne ptr %12, null
  %14 = add nsw i32 %4, -1
  %15 = icmp ult i32 %14, 4096
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %61

17:                                               ; preds = %10
  %18 = add nuw nsw i32 %5, 48
  %19 = tail call ptr @bpf_prog_alloc(i32 noundef %18, i32 noundef 0) #31
  %20 = icmp eq ptr %19, null
  br i1 %20, label %61, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.bpf_prog, ptr %19, i32 1
  %23 = load ptr, ptr %11, align 4
  %24 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %23, i32 %5, i32 -1090519040) #30, !srcloc !9
  %25 = extractvalue { i32, i32 } %24, 0
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %34, !prof !10

27:                                               ; preds = %21
  %28 = tail call ptr @llvm.thread.pointer() #31
  %29 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 3
  %30 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %29) #21, !srcloc !11
  %31 = and i32 %30, -13
  %32 = or i32 %31, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %32) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  %33 = tail call i32 @arm_copy_from_user(ptr noundef %22, ptr noundef %23, i32 noundef %5) #31
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %30) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  br label %34

34:                                               ; preds = %27, %21
  %35 = phi i32 [ %33, %27 ], [ %5, %21 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37, !prof !10

37:                                               ; preds = %34
  %38 = sub i32 %5, %35
  %39 = getelementptr i8, ptr %22, i32 %38
  tail call void @llvm.memset.p0.i32(ptr align 1 %39, i8 0, i32 %35, i1 false) #31
  tail call void @__bpf_prog_free(ptr noundef nonnull %19) #31
  br label %61

40:                                               ; preds = %34
  %41 = load i16, ptr %0, align 4
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %struct.bpf_prog, ptr %19, i32 0, i32 4
  store i32 %42, ptr %43, align 4
  %44 = load i16, ptr %0, align 4
  %45 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %46 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %45, i32 noundef 3264, i32 noundef 8) #33
  %47 = getelementptr inbounds %struct.bpf_prog, ptr %19, i32 0, i32 11
  store ptr %46, ptr %47, align 4
  %48 = icmp eq ptr %46, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %40
  %50 = zext i16 %44 to i32
  %51 = shl nuw nsw i32 %50, 3
  %52 = load i16, ptr %0, align 4
  store i16 %52, ptr %46, align 8
  %53 = tail call ptr @kmemdup(ptr noundef %22, i32 noundef %51, i32 noundef 11456) #31
  %54 = getelementptr inbounds %struct.sock_fprog_kern, ptr %46, i32 0, i32 1
  store ptr %53, ptr %54, align 4
  %55 = icmp eq ptr %53, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = load ptr, ptr %47, align 4
  tail call void @kfree(ptr noundef %57) #31
  br label %58

58:                                               ; preds = %56, %40
  tail call void @__bpf_prog_free(ptr noundef nonnull %19) #31
  br label %61

59:                                               ; preds = %49
  %60 = tail call fastcc ptr @bpf_prepare_filter(ptr noundef nonnull %19, ptr noundef null)
  br label %61

61:                                               ; preds = %59, %58, %37, %17, %10, %2
  %62 = phi ptr [ inttoptr (i32 -14 to ptr), %37 ], [ inttoptr (i32 -12 to ptr), %58 ], [ %60, %59 ], [ inttoptr (i32 -1 to ptr), %2 ], [ inttoptr (i32 -22 to ptr), %10 ], [ inttoptr (i32 -12 to ptr), %17 ]
  ret ptr %62
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__sk_attach_prog(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %4 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3264, i32 noundef 16) #33
  %5 = icmp eq ptr %4, null
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sk_filter, ptr %4, i32 0, i32 2
  store ptr %0, ptr %7, align 4
  %8 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 4
  %9 = load i32, ptr %8, align 4
  %10 = shl i32 %9, 3
  %11 = add i32 %10, 48
  %12 = tail call i32 @llvm.umax.i32(i32 %11, i32 48) #31
  %13 = load i32, ptr @sysctl_optmem_max, align 4
  %14 = icmp ugt i32 %12, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 20
  %17 = load volatile i32, ptr %16, align 4
  %18 = add i32 %17, %12
  %19 = icmp ult i32 %18, %13
  br i1 %19, label %21, label %20

20:                                               ; preds = %15, %6
  tail call void @kfree(ptr noundef nonnull %4) #31
  br label %43

21:                                               ; preds = %15
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #31, !srcloc !23
  %22 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 %12, ptr elementtype(i32) %16) #31, !srcloc !29
  store volatile i32 1, ptr %4, align 8
  %23 = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 16
  %24 = load ptr, ptr %23, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !31
  store volatile ptr %4, ptr %23, align 8
  %25 = icmp eq ptr %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.sk_filter, ptr %24, i32 0, i32 2
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.bpf_prog, ptr %28, i32 0, i32 4
  %30 = load i32, ptr %29, align 4
  %31 = shl i32 %30, 3
  %32 = add i32 %31, 48
  %33 = tail call i32 @llvm.umax.i32(i32 %32, i32 48) #31
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %16) #31, !srcloc !23
  %34 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 %33, ptr elementtype(i32) %16) #31, !srcloc !24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !25
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %24) #31, !srcloc !23
  %35 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %24, ptr nonnull %24, i32 1, ptr nonnull elementtype(i32) %24) #31, !srcloc !26
  %36 = extractvalue { i32, i32, i32 } %35, 0
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %41, label %38

38:                                               ; preds = %26
  %39 = icmp sgt i32 %36, 0
  br i1 %39, label %43, label %40, !prof !10

40:                                               ; preds = %38
  tail call void @refcount_warn_saturate(ptr noundef nonnull %24, i32 noundef 3) #31
  br label %43

41:                                               ; preds = %26
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !27
  %42 = getelementptr inbounds %struct.sk_filter, ptr %24, i32 0, i32 1
  tail call void @call_rcu(ptr noundef %42, ptr noundef nonnull @sk_filter_release_rcu) #31
  br label %43

43:                                               ; preds = %41, %40, %38, %21, %20, %2
  %44 = phi i32 [ -12, %20 ], [ -12, %2 ], [ 0, %21 ], [ 0, %38 ], [ 0, %40 ], [ 0, %41 ]
  ret i32 %44
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @sk_reuseport_attach_filter(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = tail call fastcc ptr @__get_filter(ptr noundef %0, ptr noundef %1)
  %4 = icmp ugt ptr %3, inttoptr (i32 -4096 to ptr)
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = ptrtoint ptr %3 to i32
  br label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 4
  %9 = load i32, ptr %8, align 4
  %10 = shl i32 %9, 3
  %11 = add i32 %10, 48
  %12 = tail call i32 @llvm.umax.i32(i32 %11, i32 48) #31
  %13 = load i32, ptr @sysctl_optmem_max, align 4
  %14 = icmp ugt i32 %12, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = tail call i32 @reuseport_attach_prog(ptr noundef %1, ptr noundef %3) #31
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %15, %7
  %19 = phi i32 [ %16, %15 ], [ -12, %7 ]
  %20 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %31, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 11
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.sock_fprog_kern, ptr %25, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  tail call void @kfree(ptr noundef %29) #31
  tail call void @kfree(ptr noundef nonnull %25) #31
  br label %30

30:                                               ; preds = %27, %23
  tail call void @bpf_prog_free(ptr noundef %3) #31
  br label %31

31:                                               ; preds = %30, %18, %15, %5
  %32 = phi i32 [ %6, %5 ], [ 0, %15 ], [ %19, %18 ], [ %19, %30 ]
  ret i32 %32
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @reuseport_attach_prog(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @sk_attach_bpf(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 -95, i32 -1
  ret i32 %7
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @sk_reuseport_attach_bpf(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %4 = load volatile i32, ptr %3, align 4
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 -95, i32 -1
  ret i32 %7
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @sk_reuseport_prog_free(ptr noundef %0) local_unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 2
  %5 = load i32, ptr %4, align 4
  switch i32 %5, label %6 [
    i32 21, label %14
    i32 1, label %14
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 11
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.sock_fprog_kern, ptr %8, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void @kfree(ptr noundef %12) #31
  tail call void @kfree(ptr noundef nonnull %8) #31
  br label %13

13:                                               ; preds = %10, %6
  tail call void @bpf_prog_free(ptr noundef nonnull %0) #31
  br label %14

14:                                               ; preds = %13, %3, %3, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_store_bytes(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = icmp ult i64 %4, 4
  br i1 %12, label %13, label %96, !prof !10

13:                                               ; preds = %5
  %14 = icmp ugt i32 %8, 65535
  br i1 %14, label %96, label %15, !prof !18

15:                                               ; preds = %13
  %16 = add i32 %11, %8
  %17 = tail call i32 @skb_ensure_writable(ptr noundef %7, i32 noundef %16) #31
  %18 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.skb_shared_info, ptr %21, i32 0, i32 1
  %23 = load i8, ptr %22, align 1
  %24 = zext i8 %23 to i32
  %25 = sub nsw i32 0, %24
  %26 = getelementptr i8, ptr %19, i32 %25
  %27 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %31 = load i32, ptr %30, align 4
  %32 = sub i32 %29, %31
  %33 = getelementptr i8, ptr %19, i32 %32
  %34 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %33, ptr %34, align 4
  %35 = icmp eq i32 %17, 0
  br i1 %35, label %36, label %96, !prof !10

36:                                               ; preds = %15
  %37 = getelementptr i8, ptr %19, i32 %8
  %38 = and i64 %4, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %87, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %42 = load i16, ptr %41, align 8
  %43 = lshr i16 %42, 5
  %44 = trunc i16 %43 to i2
  switch i2 %44, label %71 [
    i2 -2, label %45
    i2 -1, label %58
  ]

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 4
  %47 = load i32, ptr %46, align 4
  %48 = tail call i32 @csum_partial(ptr noundef %37, i32 noundef %11, i32 noundef 0) #31
  %49 = xor i32 %48, -1
  %50 = and i32 %8, 1
  %51 = icmp eq i32 %50, 0
  %52 = tail call i32 @llvm.fshl.i32(i32 %49, i32 %49, i32 24) #31
  %53 = select i1 %51, i32 %49, i32 %52
  %54 = add i32 %53, %47
  %55 = icmp ult i32 %54, %53
  %56 = zext i1 %55 to i32
  %57 = add i32 %54, %56
  store i32 %57, ptr %46, align 4
  br label %71

58:                                               ; preds = %40
  %59 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 4
  %60 = load i16, ptr %59, align 4
  %61 = zext i16 %60 to i32
  %62 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 16
  %63 = load ptr, ptr %62, align 8
  %64 = ptrtoint ptr %19 to i32
  %65 = ptrtoint ptr %63 to i32
  %66 = sub i32 %61, %64
  %67 = add i32 %66, %65
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %58
  %70 = and i16 %42, -97
  store i16 %70, ptr %41, align 8
  br label %71

71:                                               ; preds = %69, %58, %45, %40
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %37, ptr align 1 %10, i32 %11, i1 false) #31
  %72 = load i16, ptr %41, align 8
  %73 = and i16 %72, 96
  %74 = icmp eq i16 %73, 64
  br i1 %74, label %75, label %88

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 4
  %77 = load i32, ptr %76, align 4
  %78 = tail call i32 @csum_partial(ptr noundef %37, i32 noundef %11, i32 noundef 0) #31
  %79 = and i32 %8, 1
  %80 = icmp eq i32 %79, 0
  %81 = tail call i32 @llvm.fshl.i32(i32 %78, i32 %78, i32 24) #31
  %82 = select i1 %80, i32 %78, i32 %81
  %83 = add i32 %82, %77
  %84 = icmp ult i32 %83, %82
  %85 = zext i1 %84 to i32
  %86 = add i32 %83, %85
  store i32 %86, ptr %76, align 4
  br label %88

87:                                               ; preds = %36
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %37, ptr align 1 %10, i32 %11, i1 false) #31
  br label %88

88:                                               ; preds = %87, %75, %71
  %89 = and i64 %4, 2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 7
  store i32 0, ptr %92, align 8
  %93 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %94 = load i16, ptr %93, align 8
  %95 = and i16 %94, -769
  store i16 %95, ptr %93, align 8
  br label %96

96:                                               ; preds = %91, %88, %15, %13, %5
  %97 = phi i64 [ -22, %5 ], [ -14, %13 ], [ -14, %15 ], [ 0, %91 ], [ 0, %88 ]
  ret i64 %97
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_load_bytes(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = icmp ugt i32 %8, 65535
  br i1 %12, label %36, label %13, !prof !18

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %15 = load i32, ptr %14, align 8
  %16 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %17 = load i32, ptr %16, align 4
  %18 = add i32 %17, %8
  %19 = sub i32 %15, %18
  %20 = icmp slt i32 %19, %11
  br i1 %20, label %25, label %21, !prof !18

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr i8, ptr %23, i32 %8
  br label %30

25:                                               ; preds = %13
  %26 = icmp eq i32 %6, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = tail call i32 @skb_copy_bits(ptr noundef nonnull %7, i32 noundef %8, ptr noundef %10, i32 noundef %11) #31
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %27, %21
  %31 = phi ptr [ %24, %21 ], [ %10, %27 ]
  %32 = icmp eq ptr %31, null
  br i1 %32, label %36, label %33, !prof !18

33:                                               ; preds = %30
  %34 = icmp eq ptr %31, %10
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %10, ptr nonnull align 1 %31, i32 %11, i1 false) #31
  br label %37

36:                                               ; preds = %30, %27, %25, %5
  tail call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 %11, i1 false) #31
  br label %37

37:                                               ; preds = %36, %35, %33
  %38 = phi i64 [ -14, %36 ], [ 0, %35 ], [ 0, %33 ]
  ret i64 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_flow_dissector_load_bytes(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %1 to i32
  %7 = trunc i64 %2 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %3 to i32
  %10 = icmp ugt i32 %6, 65535
  br i1 %10, label %38, label %11, !prof !18

11:                                               ; preds = %5
  %12 = trunc i64 %0 to i32
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.bpf_flow_dissector, ptr %13, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %38, label %17, !prof !18

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 5
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 6
  %21 = load i32, ptr %20, align 4
  %22 = add i32 %21, %6
  %23 = sub i32 %19, %22
  %24 = icmp slt i32 %23, %9
  br i1 %24, label %29, label %25, !prof !18

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.sk_buff, ptr %15, i32 0, i32 17
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr i8, ptr %27, i32 %6
  br label %32

29:                                               ; preds = %17
  %30 = tail call i32 @skb_copy_bits(ptr noundef nonnull %15, i32 noundef %6, ptr noundef %8, i32 noundef %9) #31
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29, %25
  %33 = phi ptr [ %28, %25 ], [ %8, %29 ]
  %34 = icmp eq ptr %33, null
  br i1 %34, label %38, label %35, !prof !18

35:                                               ; preds = %32
  %36 = icmp eq ptr %33, %8
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %8, ptr nonnull align 1 %33, i32 %9, i1 false) #31
  br label %39

38:                                               ; preds = %32, %29, %11, %5
  tail call void @llvm.memset.p0.i32(ptr align 1 %8, i8 0, i32 %9, i1 false) #31
  br label %39

39:                                               ; preds = %38, %37, %35
  %40 = phi i64 [ -14, %38 ], [ 0, %37 ], [ 0, %35 ]
  ret i64 %40
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skb_load_bytes_relative(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #5 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 14
  %13 = load ptr, ptr %12, align 8
  %14 = icmp ugt i32 %8, 65535
  br i1 %14, label %34, label %15, !prof !18

15:                                               ; preds = %5
  %16 = trunc i64 %4 to i32
  switch i32 %16, label %34 [
    i32 0, label %17
    i32 1, label %21
  ]

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 19
  %19 = load i16, ptr %18, align 2
  %20 = icmp eq i16 %19, -1
  br i1 %20, label %34, label %24, !prof !18

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 18
  %23 = load i16, ptr %22, align 4
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi i16 [ %23, %21 ], [ %19, %17 ]
  %26 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 16
  %27 = load ptr, ptr %26, align 8
  %28 = zext i16 %25 to i32
  %29 = getelementptr i8, ptr %27, i32 %28
  %30 = getelementptr i8, ptr %29, i32 %8
  %31 = getelementptr i8, ptr %30, i32 %11
  %32 = icmp ugt ptr %31, %13
  br i1 %32, label %34, label %33, !prof !18

33:                                               ; preds = %24
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %10, ptr align 1 %30, i32 %11, i1 false) #31
  br label %35

34:                                               ; preds = %24, %17, %15, %5
  tail call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 %11, i1 false) #31
  br label %35

35:                                               ; preds = %34, %33
  %36 = phi i64 [ -14, %34 ], [ 0, %33 ]
  ret i64 %36
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_pull_data(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %14 = load i32, ptr %13, align 4
  %15 = sub i32 %12, %14
  br label %16

16:                                               ; preds = %10, %5
  %17 = phi i32 [ %15, %10 ], [ %8, %5 ]
  %18 = tail call i32 @skb_ensure_writable(ptr noundef %7, i32 noundef %17) #31
  %19 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.skb_shared_info, ptr %22, i32 0, i32 1
  %24 = load i8, ptr %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sub nsw i32 0, %25
  %27 = getelementptr i8, ptr %20, i32 %26
  %28 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %27, ptr %28, align 4
  %29 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %30 = load i32, ptr %29, align 8
  %31 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %32 = load i32, ptr %31, align 4
  %33 = sub i32 %30, %32
  %34 = getelementptr i8, ptr %20, i32 %33
  %35 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %34, ptr %35, align 4
  %36 = sext i32 %18 to i64
  ret i64 %36
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sk_fullsock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %9 = load volatile i8, ptr %8, align 2
  %10 = zext i8 %9 to i32
  %11 = shl nuw i32 1, %10
  %12 = and i32 %11, -4161
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 0, i32 %6
  %15 = zext i32 %14 to i64
  ret i64 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @sk_skb_pull_data(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %14 = load i32, ptr %13, align 4
  %15 = sub i32 %12, %14
  br label %16

16:                                               ; preds = %10, %5
  %17 = phi i32 [ %15, %10 ], [ %8, %5 ]
  %18 = tail call i32 @skb_ensure_writable(ptr noundef %7, i32 noundef %17) #31
  %19 = sext i32 %18 to i64
  ret i64 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_l3_csum_replace(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = icmp ult i64 %4, 16
  br i1 %9, label %10, label %88, !prof !10

10:                                               ; preds = %5
  %11 = and i32 %8, -65535
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %88, !prof !10

13:                                               ; preds = %10
  %14 = add nuw nsw i32 %8, 2
  %15 = tail call i32 @skb_ensure_writable(ptr noundef %7, i32 noundef %14) #31
  %16 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 1
  %21 = load i8, ptr %20, align 1
  %22 = zext i8 %21 to i32
  %23 = sub nsw i32 0, %22
  %24 = getelementptr i8, ptr %17, i32 %23
  %25 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %27 = load i32, ptr %26, align 8
  %28 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %29 = load i32, ptr %28, align 4
  %30 = sub i32 %27, %29
  %31 = getelementptr i8, ptr %17, i32 %30
  %32 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %31, ptr %32, align 4
  %33 = icmp eq i32 %15, 0
  br i1 %33, label %34, label %88, !prof !10

34:                                               ; preds = %13
  %35 = getelementptr i8, ptr %17, i32 %8
  %36 = trunc i64 %4 to i4
  switch i4 %36, label %88 [
    i4 0, label %37
    i4 2, label %52
    i4 4, label %67
  ]

37:                                               ; preds = %34
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %39, label %88, !prof !10

39:                                               ; preds = %37
  %40 = trunc i64 %3 to i32
  %41 = load i16, ptr %35, align 2
  %42 = zext i16 %41 to i32
  %43 = xor i32 %42, -1
  %44 = add i32 %43, %40
  %45 = icmp ult i32 %44, %43
  %46 = zext i1 %45 to i32
  %47 = add i32 %44, %46
  %48 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %47) #30, !srcloc !32
  %49 = xor i32 %48, -1
  %50 = lshr i32 %49, 16
  %51 = trunc i32 %50 to i16
  br label %86

52:                                               ; preds = %34
  %53 = trunc i64 %2 to i16
  %54 = trunc i64 %3 to i16
  %55 = load i16, ptr %35, align 2
  %56 = xor i16 %55, -1
  %57 = xor i16 %53, -1
  %58 = add i16 %56, %57
  %59 = icmp ult i16 %58, %57
  %60 = zext i1 %59 to i16
  %61 = add i16 %58, %54
  %62 = add i16 %61, %60
  %63 = icmp ult i16 %62, %54
  %64 = zext i1 %63 to i16
  %65 = add i16 %62, %64
  %66 = xor i16 %65, -1
  br label %86

67:                                               ; preds = %34
  %68 = trunc i64 %2 to i32
  %69 = trunc i64 %3 to i32
  %70 = load i16, ptr %35, align 2
  %71 = zext i16 %70 to i32
  %72 = xor i32 %71, -1
  %73 = xor i32 %68, -1
  %74 = add i32 %72, %73
  %75 = icmp ult i32 %74, %73
  %76 = zext i1 %75 to i32
  %77 = add i32 %74, %69
  %78 = add i32 %77, %76
  %79 = icmp ult i32 %78, %69
  %80 = zext i1 %79 to i32
  %81 = add i32 %78, %80
  %82 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %81) #30, !srcloc !32
  %83 = xor i32 %82, -1
  %84 = lshr i32 %83, 16
  %85 = trunc i32 %84 to i16
  br label %86

86:                                               ; preds = %67, %52, %39
  %87 = phi i16 [ %51, %39 ], [ %66, %52 ], [ %85, %67 ]
  store i16 %87, ptr %35, align 2
  br label %88

88:                                               ; preds = %86, %37, %34, %13, %10, %5
  %89 = phi i64 [ -22, %5 ], [ -14, %10 ], [ -14, %13 ], [ -22, %37 ], [ -22, %34 ], [ 0, %86 ]
  ret i64 %89
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_l4_csum_replace(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = and i64 %4, 16
  %10 = icmp ne i64 %9, 0
  %11 = and i64 %4, 32
  %12 = icmp eq i64 %11, 0
  %13 = icmp ult i64 %4, 128
  br i1 %13, label %14, label %64, !prof !10

14:                                               ; preds = %5
  %15 = and i32 %8, -65535
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %64, !prof !10

17:                                               ; preds = %14
  %18 = add nuw nsw i32 %8, 2
  %19 = tail call i32 @skb_ensure_writable(ptr noundef %7, i32 noundef %18) #31
  %20 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 1
  %25 = load i8, ptr %24, align 1
  %26 = zext i8 %25 to i32
  %27 = sub nsw i32 0, %26
  %28 = getelementptr i8, ptr %21, i32 %27
  %29 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %33 = load i32, ptr %32, align 4
  %34 = sub i32 %31, %33
  %35 = getelementptr i8, ptr %21, i32 %34
  %36 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %35, ptr %36, align 4
  %37 = icmp eq i32 %19, 0
  br i1 %37, label %38, label %64, !prof !10

38:                                               ; preds = %17
  %39 = getelementptr i8, ptr %21, i32 %8
  %40 = and i64 %4, 96
  %41 = icmp eq i64 %40, 32
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = load i16, ptr %39, align 2
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %42, %38
  %46 = trunc i64 %4 to i4
  switch i4 %46, label %64 [
    i4 0, label %47
    i4 2, label %51
    i4 4, label %56
  ]

47:                                               ; preds = %45
  %48 = icmp eq i64 %2, 0
  br i1 %48, label %49, label %64, !prof !10

49:                                               ; preds = %47
  %50 = trunc i64 %3 to i32
  tail call void @inet_proto_csum_replace_by_diff(ptr noundef %39, ptr noundef %7, i32 noundef %50, i1 noundef zeroext %10) #31
  br label %59

51:                                               ; preds = %45
  %52 = trunc i64 %2 to i32
  %53 = trunc i64 %3 to i32
  %54 = and i32 %52, 65535
  %55 = and i32 %53, 65535
  tail call void @inet_proto_csum_replace4(ptr noundef %39, ptr noundef %7, i32 noundef %54, i32 noundef %55, i1 noundef zeroext %10) #31
  br label %59

56:                                               ; preds = %45
  %57 = trunc i64 %2 to i32
  %58 = trunc i64 %3 to i32
  tail call void @inet_proto_csum_replace4(ptr noundef %39, ptr noundef %7, i32 noundef %57, i32 noundef %58, i1 noundef zeroext %10) #31
  br label %59

59:                                               ; preds = %56, %51, %49
  br i1 %12, label %64, label %60

60:                                               ; preds = %59
  %61 = load i16, ptr %39, align 2
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  store i16 -1, ptr %39, align 2
  br label %64

64:                                               ; preds = %63, %60, %59, %47, %45, %42, %17, %14, %5
  %65 = phi i64 [ -22, %5 ], [ -14, %14 ], [ -14, %17 ], [ 0, %42 ], [ -22, %47 ], [ -22, %45 ], [ 0, %63 ], [ 0, %60 ], [ 0, %59 ]
  ret i64 %65
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_csum_diff(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = trunc i64 %4 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #21, !srcloc !15
  %16 = add i32 %15, ptrtoint (ptr @bpf_sp to i32)
  %17 = inttoptr i32 %16 to ptr
  %18 = add i32 %11, %8
  %19 = or i64 %3, %1
  %20 = and i64 %19, 3
  %21 = icmp ne i64 %20, 0
  %22 = icmp ugt i32 %18, 512
  %23 = or i1 %22, %21
  br i1 %23, label %53, label %24, !prof !18

24:                                               ; preds = %5
  %25 = icmp ult i32 %8, 4
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = lshr i32 %8, 2
  br label %33

28:                                               ; preds = %33, %24
  %29 = phi i32 [ 0, %24 ], [ %27, %33 ]
  %30 = icmp ult i32 %11, 4
  br i1 %30, label %50, label %31

31:                                               ; preds = %28
  %32 = lshr i32 %11, 2
  br label %41

33:                                               ; preds = %33, %26
  %34 = phi i32 [ %39, %33 ], [ 0, %26 ]
  %35 = getelementptr i32, ptr %7, i32 %34
  %36 = load i32, ptr %35, align 4
  %37 = xor i32 %36, -1
  %38 = getelementptr [128 x i32], ptr %17, i32 0, i32 %34
  store i32 %37, ptr %38, align 4
  %39 = add nuw nsw i32 %34, 1
  %40 = icmp eq i32 %39, %27
  br i1 %40, label %28, label %33

41:                                               ; preds = %41, %31
  %42 = phi i32 [ %48, %41 ], [ %29, %31 ]
  %43 = phi i32 [ %47, %41 ], [ 0, %31 ]
  %44 = getelementptr i32, ptr %10, i32 %43
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr [128 x i32], ptr %17, i32 0, i32 %42
  store i32 %45, ptr %46, align 4
  %47 = add nuw nsw i32 %43, 1
  %48 = add nuw nsw i32 %42, 1
  %49 = icmp eq i32 %47, %32
  br i1 %49, label %50, label %41

50:                                               ; preds = %41, %28
  %51 = tail call i32 @csum_partial(ptr noundef %17, i32 noundef %18, i32 noundef %12) #31
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %50, %5
  %54 = phi i64 [ %52, %50 ], [ -22, %5 ]
  ret i64 %54
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_csum_update(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #7 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 96
  %11 = icmp eq i16 %10, 64
  br i1 %11, label %12, label %21

12:                                               ; preds = %5
  %13 = trunc i64 %1 to i32
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 4
  %15 = load i32, ptr %14, align 4
  %16 = add i32 %15, %13
  %17 = icmp ult i32 %16, %13
  %18 = zext i1 %17 to i32
  %19 = add i32 %16, %18
  store i32 %19, ptr %14, align 4
  %20 = zext i32 %19 to i64
  br label %21

21:                                               ; preds = %12, %5
  %22 = phi i64 [ %20, %12 ], [ -524, %5 ]
  ret i64 %22
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_csum_level(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #7 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  switch i64 %1, label %74 [
    i64 1, label %8
    i64 2, label %31
    i64 3, label %50
    i64 0, label %60
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %10 = load i16, ptr %9, align 8
  %11 = lshr i16 %10, 5
  %12 = trunc i16 %11 to i2
  switch i2 %12, label %74 [
    i2 1, label %13
    i2 0, label %25
  ]

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 3
  %15 = load i16, ptr %14, align 2
  %16 = trunc i16 %15 to i8
  %17 = and i8 %16, 12
  %18 = icmp eq i8 %17, 12
  br i1 %18, label %74, label %19

19:                                               ; preds = %13
  %20 = add i8 %16, 4
  %21 = and i8 %20, 12
  %22 = zext i8 %21 to i16
  %23 = and i16 %15, -13
  %24 = or i16 %23, %22
  store i16 %24, ptr %14, align 2
  br label %74

25:                                               ; preds = %8
  %26 = and i16 %10, -97
  %27 = or i16 %26, 32
  store i16 %27, ptr %9, align 8
  %28 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 3
  %29 = load i16, ptr %28, align 2
  %30 = and i16 %29, -13
  store i16 %30, ptr %28, align 2
  br label %74

31:                                               ; preds = %5
  %32 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %33 = load i16, ptr %32, align 8
  %34 = and i16 %33, 96
  %35 = icmp eq i16 %34, 32
  br i1 %35, label %36, label %74

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 3
  %38 = load i16, ptr %37, align 2
  %39 = trunc i16 %38 to i8
  %40 = and i8 %39, 12
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = and i16 %33, -97
  store i16 %43, ptr %32, align 8
  br label %74

44:                                               ; preds = %36
  %45 = add i8 %39, 12
  %46 = and i8 %45, 12
  %47 = zext i8 %46 to i16
  %48 = and i16 %38, -13
  %49 = or i16 %48, %47
  store i16 %49, ptr %37, align 2
  br label %74

50:                                               ; preds = %5
  %51 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %52 = load i16, ptr %51, align 8
  %53 = and i16 %52, 96
  %54 = icmp eq i16 %53, 32
  br i1 %54, label %55, label %74

55:                                               ; preds = %50
  %56 = and i16 %52, -97
  store i16 %56, ptr %51, align 8
  %57 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 3
  %58 = load i16, ptr %57, align 2
  %59 = and i16 %58, -13
  store i16 %59, ptr %57, align 2
  br label %74

60:                                               ; preds = %5
  %61 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %62 = load i16, ptr %61, align 8
  %63 = and i16 %62, 96
  %64 = icmp eq i16 %63, 32
  br i1 %64, label %65, label %71

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 3
  %67 = load i16, ptr %66, align 2
  %68 = lshr i16 %67, 2
  %69 = and i16 %68, 3
  %70 = zext i16 %69 to i32
  br label %71

71:                                               ; preds = %65, %60
  %72 = phi i32 [ %70, %65 ], [ -13, %60 ]
  %73 = sext i32 %72 to i64
  br label %74

74:                                               ; preds = %71, %55, %50, %44, %42, %31, %25, %19, %13, %8, %5
  %75 = phi i64 [ %73, %71 ], [ -22, %5 ], [ 0, %8 ], [ 0, %13 ], [ 0, %19 ], [ 0, %25 ], [ 0, %31 ], [ 0, %42 ], [ 0, %44 ], [ 0, %50 ], [ 0, %55 ]
  ret i64 %75
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_clone_redirect(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp ult i64 %2, 2
  br i1 %8, label %9, label %44, !prof !10

9:                                                ; preds = %5
  %10 = trunc i64 %1 to i32
  %11 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %10) #31
  %12 = icmp eq ptr %11, null
  br i1 %12, label %44, label %13, !prof !18

13:                                               ; preds = %9
  %14 = tail call ptr @skb_clone(ptr noundef %7, i32 noundef 2592) #31
  %15 = icmp eq ptr %14, null
  br i1 %15, label %44, label %16, !prof !18

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %20 = load i32, ptr %19, align 4
  %21 = sub i32 %18, %20
  %22 = tail call i32 @skb_ensure_writable(ptr noundef %7, i32 noundef %21) #31
  %23 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.skb_shared_info, ptr %26, i32 0, i32 1
  %28 = load i8, ptr %27, align 1
  %29 = zext i8 %28 to i32
  %30 = sub nsw i32 0, %29
  %31 = getelementptr i8, ptr %24, i32 %30
  %32 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %31, ptr %32, align 4
  %33 = load i32, ptr %17, align 8
  %34 = load i32, ptr %19, align 4
  %35 = sub i32 %33, %34
  %36 = getelementptr i8, ptr %24, i32 %35
  %37 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %36, ptr %37, align 4
  %38 = icmp eq i32 %22, 0
  br i1 %38, label %40, label %39, !prof !10

39:                                               ; preds = %16
  tail call void @kfree_skb_reason(ptr noundef nonnull %14, i32 noundef 0) #31
  br label %44

40:                                               ; preds = %16
  %41 = trunc i64 %2 to i32
  %42 = tail call fastcc i32 @__bpf_redirect(ptr noundef nonnull %14, ptr noundef nonnull %11, i32 noundef %41) #31
  %43 = sext i32 %42 to i64
  br label %44

44:                                               ; preds = %40, %39, %13, %9, %5
  %45 = phi i64 [ -12, %39 ], [ %43, %40 ], [ -22, %5 ], [ -22, %9 ], [ -12, %13 ]
  ret i64 %45
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @skb_do_redirect(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.flowi6, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.flowi4, align 8
  %7 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %8 = inttoptr i32 %7 to ptr
  %9 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %8) #21, !srcloc !15
  %10 = add i32 %9, ptrtoint (ptr @bpf_redirect_info to i32)
  %11 = inttoptr i32 %10 to ptr
  %12 = getelementptr inbounds %struct.anon.44, ptr %0, i32 0, i32 2
  %13 = load i32, ptr %11, align 4
  %14 = getelementptr inbounds %struct.bpf_redirect_info, ptr %11, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %15) #31
  store i32 0, ptr %14, align 4
  store i32 0, ptr %11, align 4
  %17 = icmp ne ptr %16, null
  %18 = and i32 %13, 4
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %17, i1 %19, i1 false
  br i1 %20, label %21, label %746, !prof !33

21:                                               ; preds = %1
  %22 = and i32 %13, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %744, label %24

24:                                               ; preds = %21
  %25 = and i32 %13, 8
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %struct.bpf_redirect_info, ptr %11, i32 0, i32 7
  %28 = select i1 %26, ptr null, ptr %27
  %29 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %30 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  %31 = load i16, ptr %30, align 2
  %32 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %33 = load i16, ptr %32, align 4
  %34 = icmp ult i16 %31, %33
  br i1 %34, label %35, label %743, !prof !10

35:                                               ; preds = %24
  %36 = load ptr, ptr %29, align 8
  %37 = zext i16 %31 to i32
  %38 = getelementptr i8, ptr %36, i32 %37
  %39 = load i32, ptr %38, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %743

42:                                               ; preds = %35
  %43 = tail call ptr @skb_pull(ptr noundef %0, i32 noundef 14) #31
  store i16 -1, ptr %30, align 2
  %44 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %45 = load ptr, ptr %44, align 4
  %46 = load ptr, ptr %29, align 8
  %47 = ptrtoint ptr %45 to i32
  %48 = ptrtoint ptr %46 to i32
  %49 = sub i32 %47, %48
  %50 = trunc i32 %49 to i16
  store i16 %50, ptr %32, align 4
  %51 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 16
  %52 = load i16, ptr %51, align 8
  switch i16 %52, label %743 [
    i16 8, label %53
    i16 -8826, label %465
  ]

53:                                               ; preds = %42
  %54 = icmp eq ptr %28, null
  br i1 %54, label %55, label %104

55:                                               ; preds = %53
  %56 = and i32 %49, 65535
  %57 = getelementptr i8, ptr %46, i32 %56
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %6) #31
  %58 = getelementptr inbounds i8, ptr %6, i32 8
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(56) %58, i8 0, i32 48, i1 false) #31, !annotation !22
  %59 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 17
  %60 = load i32, ptr %59, align 4
  store i32 %60, ptr %6, align 8
  %61 = getelementptr inbounds %struct.flowi_common, ptr %6, i32 0, i32 1
  store i32 0, ptr %61, align 4
  %62 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 11
  %63 = load i32, ptr %62, align 4
  store i32 %63, ptr %58, align 8
  %64 = getelementptr inbounds %struct.flowi_common, ptr %6, i32 0, i32 3
  %65 = getelementptr inbounds %struct.iphdr, ptr %57, i32 0, i32 1
  %66 = load i8, ptr %65, align 1
  %67 = and i8 %66, 30
  store i8 %67, ptr %64, align 4
  %68 = getelementptr inbounds %struct.flowi_common, ptr %6, i32 0, i32 4
  store i8 0, ptr %68, align 1
  %69 = getelementptr inbounds %struct.flowi_common, ptr %6, i32 0, i32 5
  %70 = getelementptr inbounds %struct.iphdr, ptr %57, i32 0, i32 6
  %71 = load i8, ptr %70, align 1
  store i8 %71, ptr %69, align 2
  %72 = getelementptr inbounds %struct.flowi_common, ptr %6, i32 0, i32 6
  store i8 1, ptr %72, align 1
  %73 = getelementptr inbounds %struct.flowi_common, ptr %6, i32 0, i32 7
  %74 = getelementptr inbounds %struct.flowi4, ptr %6, i32 0, i32 1
  %75 = getelementptr inbounds %struct.iphdr, ptr %57, i32 0, i32 8
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(20) %73, i8 0, i64 20, i1 false) #31
  %76 = load i32, ptr %75, align 4
  store i32 %76, ptr %74, align 8
  %77 = getelementptr inbounds %struct.flowi4, ptr %6, i32 0, i32 2
  %78 = getelementptr inbounds %struct.iphdr, ptr %57, i32 0, i32 9
  %79 = load i32, ptr %78, align 4
  store i32 %79, ptr %77, align 4
  %80 = getelementptr inbounds %struct.flowi4, ptr %6, i32 0, i32 3
  store i32 0, ptr %80, align 8
  %81 = call ptr @ip_route_output_flow(ptr noundef nonnull @init_net, ptr noundef nonnull %6, ptr noundef null) #31
  %82 = icmp ugt ptr %81, inttoptr (i32 -4096 to ptr)
  br i1 %82, label %461, label %83

83:                                               ; preds = %55
  %84 = getelementptr inbounds %struct.rtable, ptr %81, i32 0, i32 3
  %85 = load i16, ptr %84, align 4
  %86 = add i16 %85, -1
  %87 = icmp ult i16 %86, 2
  br i1 %87, label %89, label %88

88:                                               ; preds = %83
  call void @dst_release(ptr noundef %81) #31
  br label %461

89:                                               ; preds = %83
  %90 = icmp ne ptr %81, null
  %91 = zext i1 %90 to i8
  %92 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %93 = load i16, ptr %92, align 2
  %94 = lshr i16 %93, 14
  %95 = trunc i16 %94 to i8
  %96 = and i8 %95, 1
  %97 = or i8 %96, %91
  %98 = zext i8 %97 to i16
  %99 = shl nuw nsw i16 %98, 14
  %100 = and i16 %93, -16385
  %101 = or i16 %99, %100
  store i16 %101, ptr %92, align 2
  %102 = ptrtoint ptr %81 to i32
  %103 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 4
  store i32 %102, ptr %103, align 8
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %6) #31
  br label %104

104:                                              ; preds = %89, %53
  %105 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 19
  %106 = load i16, ptr %105, align 2
  %107 = zext i16 %106 to i32
  %108 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 21
  %109 = load i16, ptr %108, align 8
  %110 = zext i16 %109 to i32
  %111 = add nuw nsw i32 %110, %107
  %112 = and i32 %111, 131056
  %113 = add nuw nsw i32 %112, 16
  %114 = call i32 @llvm.read_register.i32(metadata !0) #31
  %115 = inttoptr i32 %114 to ptr
  %116 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %115) #21, !srcloc !15
  %117 = add i32 %116, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %118 = inttoptr i32 %117 to ptr
  %119 = load i16, ptr %118, align 2
  %120 = icmp ugt i16 %119, 8
  br i1 %120, label %121, label %126

121:                                              ; preds = %104
  %122 = call i32 @net_ratelimit() #31
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %437, label %124

124:                                              ; preds = %121
  %125 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #34
  br label %437

126:                                              ; preds = %104
  store ptr %16, ptr %12, align 8
  %127 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 2
  store i64 0, ptr %127, align 8
  %128 = load ptr, ptr %44, align 4
  %129 = load ptr, ptr %29, align 8
  %130 = ptrtoint ptr %128 to i32
  %131 = ptrtoint ptr %129 to i32
  %132 = sub i32 %130, %131
  %133 = icmp ult i32 %132, %113
  br i1 %133, label %134, label %141

134:                                              ; preds = %126
  %135 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 44
  %136 = load ptr, ptr %135, align 16
  %137 = icmp eq ptr %136, null
  br i1 %137, label %141, label %138, !prof !10

138:                                              ; preds = %134
  %139 = call ptr @skb_expand_head(ptr noundef %0, i32 noundef %113) #31
  %140 = icmp eq ptr %139, null
  br i1 %140, label %457, label %141

141:                                              ; preds = %138, %134, %126
  %142 = phi ptr [ %139, %138 ], [ %0, %134 ], [ %0, %126 ]
  %143 = tail call ptr @llvm.thread.pointer() #31
  %144 = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 1
  %145 = load volatile i32, ptr %144, align 4
  %146 = add i32 %145, 512
  store volatile i32 %146, ptr %144, align 4
  call void asm sideeffect "", "~{memory}"() #31, !srcloc !34
  br i1 %54, label %147, label %303

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.sk_buff, ptr %142, i32 0, i32 4
  %149 = load i32, ptr %148, align 8
  %150 = and i32 %149, -2
  %151 = inttoptr i32 %150 to ptr
  %152 = load ptr, ptr %151, align 4
  %153 = getelementptr inbounds %struct.rtable, ptr %151, i32 0, i32 7
  %154 = load i8, ptr %153, align 4
  switch i8 %154, label %259 [
    i8 2, label %155
    i8 10, label %193
  ], !prof !35

155:                                              ; preds = %147
  %156 = getelementptr inbounds %struct.rtable, ptr %151, i32 0, i32 8
  %157 = load i32, ptr %156, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #31
  store i32 %157, ptr %5, align 4
  %158 = getelementptr inbounds %struct.net_device, ptr %152, i32 0, i32 14
  %159 = load i32, ptr %158, align 8
  %160 = and i32 %159, 24
  %161 = icmp eq i32 %160, 0
  %162 = select i1 %161, i32 %157, i32 0
  %163 = load volatile ptr, ptr getelementptr inbounds (%struct.neigh_table, ptr @arp_tbl, i32 0, i32 31), align 4
  %164 = getelementptr inbounds %struct.neigh_hash_table, ptr %163, i32 0, i32 2
  %165 = ptrtoint ptr %152 to i32
  %166 = xor i32 %162, %165
  %167 = load i32, ptr %164, align 4
  %168 = mul i32 %166, %167
  %169 = getelementptr inbounds %struct.neigh_hash_table, ptr %163, i32 0, i32 1
  %170 = load i32, ptr %169, align 4
  %171 = sub i32 32, %170
  %172 = lshr i32 %168, %171
  %173 = load ptr, ptr %163, align 4
  %174 = getelementptr ptr, ptr %173, i32 %172
  %175 = load volatile ptr, ptr %174, align 4
  %176 = icmp eq ptr %175, null
  br i1 %176, label %189, label %177

177:                                              ; preds = %186, %155
  %178 = phi ptr [ %187, %186 ], [ %175, %155 ]
  %179 = getelementptr inbounds %struct.neighbour, ptr %178, i32 0, i32 26
  %180 = load ptr, ptr %179, align 4
  %181 = icmp eq ptr %180, %152
  br i1 %181, label %182, label %186

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.neighbour, ptr %178, i32 0, i32 28
  %184 = load i32, ptr %183, align 8
  %185 = icmp eq i32 %184, %162
  br i1 %185, label %191, label %186

186:                                              ; preds = %182, %177
  %187 = load volatile ptr, ptr %178, align 4
  %188 = icmp eq ptr %187, null
  br i1 %188, label %189, label %177

189:                                              ; preds = %186, %155
  %190 = call ptr @__neigh_create(ptr noundef nonnull @arp_tbl, ptr noundef nonnull %5, ptr noundef %152, i1 noundef zeroext false) #31
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi ptr [ %190, %189 ], [ %178, %182 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #31
  br label %410

193:                                              ; preds = %147
  %194 = getelementptr inbounds %struct.rtable, ptr %151, i32 0, i32 8
  %195 = load ptr, ptr @ipv6_stub, align 4
  %196 = getelementptr inbounds %struct.ipv6_stub, ptr %195, i32 0, i32 20
  %197 = load ptr, ptr %196, align 4
  %198 = getelementptr inbounds %struct.neigh_table, ptr %197, i32 0, i32 31
  %199 = load volatile ptr, ptr %198, align 4
  %200 = getelementptr inbounds %struct.neigh_hash_table, ptr %199, i32 0, i32 2
  %201 = load i32, ptr %194, align 4
  %202 = ptrtoint ptr %152 to i32
  %203 = xor i32 %201, %202
  %204 = load i32, ptr %200, align 4
  %205 = mul i32 %203, %204
  %206 = getelementptr %struct.rtable, ptr %151, i32 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %207 = load i32, ptr %206, align 4
  %208 = getelementptr %struct.neigh_hash_table, ptr %199, i32 0, i32 2, i32 1
  %209 = load i32, ptr %208, align 4
  %210 = mul i32 %209, %207
  %211 = add i32 %210, %205
  %212 = getelementptr %struct.rtable, ptr %151, i32 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %213 = load i32, ptr %212, align 4
  %214 = getelementptr %struct.neigh_hash_table, ptr %199, i32 0, i32 2, i32 2
  %215 = load i32, ptr %214, align 4
  %216 = mul i32 %215, %213
  %217 = add i32 %211, %216
  %218 = getelementptr %struct.rtable, ptr %151, i32 0, i32 8, i32 0, i32 0, i32 0, i32 3
  %219 = load i32, ptr %218, align 4
  %220 = getelementptr %struct.neigh_hash_table, ptr %199, i32 0, i32 2, i32 3
  %221 = load i32, ptr %220, align 4
  %222 = mul i32 %221, %219
  %223 = add i32 %217, %222
  %224 = getelementptr inbounds %struct.neigh_hash_table, ptr %199, i32 0, i32 1
  %225 = load i32, ptr %224, align 4
  %226 = sub i32 32, %225
  %227 = lshr i32 %223, %226
  %228 = load ptr, ptr %199, align 4
  %229 = getelementptr ptr, ptr %228, i32 %227
  %230 = load volatile ptr, ptr %229, align 4
  %231 = icmp eq ptr %230, null
  br i1 %231, label %257, label %232

232:                                              ; preds = %254, %193
  %233 = phi ptr [ %255, %254 ], [ %230, %193 ]
  %234 = getelementptr inbounds %struct.neighbour, ptr %233, i32 0, i32 26
  %235 = load ptr, ptr %234, align 4
  %236 = icmp eq ptr %235, %152
  br i1 %236, label %237, label %254

237:                                              ; preds = %232
  %238 = getelementptr inbounds %struct.neighbour, ptr %233, i32 0, i32 28
  %239 = load i32, ptr %238, align 4
  %240 = xor i32 %239, %201
  %241 = getelementptr %struct.neighbour, ptr %233, i32 1, i32 1
  %242 = load i32, ptr %241, align 4
  %243 = xor i32 %242, %207
  %244 = or i32 %243, %240
  %245 = getelementptr %struct.neighbour, ptr %233, i32 1, i32 2
  %246 = load i32, ptr %245, align 4
  %247 = xor i32 %246, %213
  %248 = or i32 %244, %247
  %249 = getelementptr %struct.neighbour, ptr %233, i32 1, i32 3
  %250 = load i32, ptr %249, align 4
  %251 = xor i32 %250, %219
  %252 = or i32 %248, %251
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %410, label %254

254:                                              ; preds = %237, %232
  %255 = load volatile ptr, ptr %233, align 4
  %256 = icmp eq ptr %255, null
  br i1 %256, label %257, label %232

257:                                              ; preds = %254, %193
  %258 = call ptr @__neigh_create(ptr noundef %197, ptr noundef %194, ptr noundef %152, i1 noundef zeroext false) #31
  br label %410

259:                                              ; preds = %147
  %260 = getelementptr inbounds %struct.sk_buff, ptr %142, i32 0, i32 16
  %261 = load ptr, ptr %260, align 8
  %262 = getelementptr inbounds %struct.sk_buff, ptr %142, i32 0, i32 13, i32 0, i32 18
  %263 = load i16, ptr %262, align 4
  %264 = zext i16 %263 to i32
  %265 = getelementptr i8, ptr %261, i32 %264
  %266 = getelementptr inbounds %struct.iphdr, ptr %265, i32 0, i32 9
  %267 = load i32, ptr %266, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #31
  store i32 %267, ptr %2, align 4
  %268 = getelementptr inbounds %struct.net_device, ptr %152, i32 0, i32 14
  %269 = load i32, ptr %268, align 8
  %270 = and i32 %269, 24
  %271 = icmp eq i32 %270, 0
  %272 = select i1 %271, i32 %267, i32 0
  %273 = load volatile ptr, ptr getelementptr inbounds (%struct.neigh_table, ptr @arp_tbl, i32 0, i32 31), align 4
  %274 = getelementptr inbounds %struct.neigh_hash_table, ptr %273, i32 0, i32 2
  %275 = ptrtoint ptr %152 to i32
  %276 = xor i32 %272, %275
  %277 = load i32, ptr %274, align 4
  %278 = mul i32 %276, %277
  %279 = getelementptr inbounds %struct.neigh_hash_table, ptr %273, i32 0, i32 1
  %280 = load i32, ptr %279, align 4
  %281 = sub i32 32, %280
  %282 = lshr i32 %278, %281
  %283 = load ptr, ptr %273, align 4
  %284 = getelementptr ptr, ptr %283, i32 %282
  %285 = load volatile ptr, ptr %284, align 4
  %286 = icmp eq ptr %285, null
  br i1 %286, label %299, label %287

287:                                              ; preds = %296, %259
  %288 = phi ptr [ %297, %296 ], [ %285, %259 ]
  %289 = getelementptr inbounds %struct.neighbour, ptr %288, i32 0, i32 26
  %290 = load ptr, ptr %289, align 4
  %291 = icmp eq ptr %290, %152
  br i1 %291, label %292, label %296

292:                                              ; preds = %287
  %293 = getelementptr inbounds %struct.neighbour, ptr %288, i32 0, i32 28
  %294 = load i32, ptr %293, align 8
  %295 = icmp eq i32 %294, %272
  br i1 %295, label %301, label %296

296:                                              ; preds = %292, %287
  %297 = load volatile ptr, ptr %288, align 4
  %298 = icmp eq ptr %297, null
  br i1 %298, label %299, label %287

299:                                              ; preds = %296, %259
  %300 = call ptr @__neigh_create(ptr noundef nonnull @arp_tbl, ptr noundef nonnull %2, ptr noundef %152, i1 noundef zeroext false) #31
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi ptr [ %300, %299 ], [ %288, %292 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #31
  br label %410

303:                                              ; preds = %141
  %304 = load i32, ptr %28, align 4
  switch i32 %304, label %409 [
    i32 10, label %305
    i32 2, label %371
  ]

305:                                              ; preds = %303
  %306 = getelementptr inbounds %struct.bpf_nh_params, ptr %28, i32 0, i32 1
  %307 = load ptr, ptr @ipv6_stub, align 4
  %308 = getelementptr inbounds %struct.ipv6_stub, ptr %307, i32 0, i32 20
  %309 = load ptr, ptr %308, align 4
  %310 = getelementptr inbounds %struct.neigh_table, ptr %309, i32 0, i32 31
  %311 = load volatile ptr, ptr %310, align 4
  %312 = getelementptr inbounds %struct.neigh_hash_table, ptr %311, i32 0, i32 2
  %313 = load i32, ptr %306, align 4
  %314 = ptrtoint ptr %16 to i32
  %315 = xor i32 %313, %314
  %316 = load i32, ptr %312, align 4
  %317 = mul i32 %315, %316
  %318 = getelementptr %struct.bpf_nh_params, ptr %28, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %319 = load i32, ptr %318, align 4
  %320 = getelementptr %struct.neigh_hash_table, ptr %311, i32 0, i32 2, i32 1
  %321 = load i32, ptr %320, align 4
  %322 = mul i32 %321, %319
  %323 = add i32 %322, %317
  %324 = getelementptr %struct.bpf_nh_params, ptr %28, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %325 = load i32, ptr %324, align 4
  %326 = getelementptr %struct.neigh_hash_table, ptr %311, i32 0, i32 2, i32 2
  %327 = load i32, ptr %326, align 4
  %328 = mul i32 %327, %325
  %329 = add i32 %323, %328
  %330 = getelementptr %struct.bpf_nh_params, ptr %28, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %331 = load i32, ptr %330, align 4
  %332 = getelementptr %struct.neigh_hash_table, ptr %311, i32 0, i32 2, i32 3
  %333 = load i32, ptr %332, align 4
  %334 = mul i32 %333, %331
  %335 = add i32 %329, %334
  %336 = getelementptr inbounds %struct.neigh_hash_table, ptr %311, i32 0, i32 1
  %337 = load i32, ptr %336, align 4
  %338 = sub i32 32, %337
  %339 = lshr i32 %335, %338
  %340 = load ptr, ptr %311, align 4
  %341 = getelementptr ptr, ptr %340, i32 %339
  %342 = load volatile ptr, ptr %341, align 4
  %343 = icmp eq ptr %342, null
  br i1 %343, label %369, label %344

344:                                              ; preds = %366, %305
  %345 = phi ptr [ %367, %366 ], [ %342, %305 ]
  %346 = getelementptr inbounds %struct.neighbour, ptr %345, i32 0, i32 26
  %347 = load ptr, ptr %346, align 4
  %348 = icmp eq ptr %347, %16
  br i1 %348, label %349, label %366

349:                                              ; preds = %344
  %350 = getelementptr inbounds %struct.neighbour, ptr %345, i32 0, i32 28
  %351 = load i32, ptr %350, align 4
  %352 = xor i32 %351, %313
  %353 = getelementptr %struct.neighbour, ptr %345, i32 1, i32 1
  %354 = load i32, ptr %353, align 4
  %355 = xor i32 %354, %319
  %356 = or i32 %355, %352
  %357 = getelementptr %struct.neighbour, ptr %345, i32 1, i32 2
  %358 = load i32, ptr %357, align 4
  %359 = xor i32 %358, %325
  %360 = or i32 %356, %359
  %361 = getelementptr %struct.neighbour, ptr %345, i32 1, i32 3
  %362 = load i32, ptr %361, align 4
  %363 = xor i32 %362, %331
  %364 = or i32 %360, %363
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %410, label %366

366:                                              ; preds = %349, %344
  %367 = load volatile ptr, ptr %345, align 4
  %368 = icmp eq ptr %367, null
  br i1 %368, label %369, label %344

369:                                              ; preds = %366, %305
  %370 = call ptr @__neigh_create(ptr noundef %309, ptr noundef %306, ptr noundef %16, i1 noundef zeroext false) #31
  br label %410

371:                                              ; preds = %303
  %372 = getelementptr inbounds %struct.bpf_nh_params, ptr %28, i32 0, i32 1
  %373 = load i32, ptr %372, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #31
  store i32 %373, ptr %4, align 4
  %374 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 14
  %375 = load i32, ptr %374, align 8
  %376 = and i32 %375, 24
  %377 = icmp eq i32 %376, 0
  %378 = select i1 %377, i32 %373, i32 0
  %379 = load volatile ptr, ptr getelementptr inbounds (%struct.neigh_table, ptr @arp_tbl, i32 0, i32 31), align 4
  %380 = getelementptr inbounds %struct.neigh_hash_table, ptr %379, i32 0, i32 2
  %381 = ptrtoint ptr %16 to i32
  %382 = xor i32 %378, %381
  %383 = load i32, ptr %380, align 4
  %384 = mul i32 %382, %383
  %385 = getelementptr inbounds %struct.neigh_hash_table, ptr %379, i32 0, i32 1
  %386 = load i32, ptr %385, align 4
  %387 = sub i32 32, %386
  %388 = lshr i32 %384, %387
  %389 = load ptr, ptr %379, align 4
  %390 = getelementptr ptr, ptr %389, i32 %388
  %391 = load volatile ptr, ptr %390, align 4
  %392 = icmp eq ptr %391, null
  br i1 %392, label %405, label %393

393:                                              ; preds = %402, %371
  %394 = phi ptr [ %403, %402 ], [ %391, %371 ]
  %395 = getelementptr inbounds %struct.neighbour, ptr %394, i32 0, i32 26
  %396 = load ptr, ptr %395, align 4
  %397 = icmp eq ptr %396, %16
  br i1 %397, label %398, label %402

398:                                              ; preds = %393
  %399 = getelementptr inbounds %struct.neighbour, ptr %394, i32 0, i32 28
  %400 = load i32, ptr %399, align 8
  %401 = icmp eq i32 %400, %378
  br i1 %401, label %407, label %402

402:                                              ; preds = %398, %393
  %403 = load volatile ptr, ptr %394, align 4
  %404 = icmp eq ptr %403, null
  br i1 %404, label %405, label %393

405:                                              ; preds = %402, %371
  %406 = call ptr @__neigh_create(ptr noundef nonnull @arp_tbl, ptr noundef nonnull %4, ptr noundef %16, i1 noundef zeroext false) #31
  br label %407

407:                                              ; preds = %405, %398
  %408 = phi ptr [ %406, %405 ], [ %394, %398 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #31
  br label %410

409:                                              ; preds = %303
  call fastcc void @local_bh_enable() #31
  br label %437

410:                                              ; preds = %407, %369, %349, %301, %257, %237, %191
  %411 = phi i1 [ true, %369 ], [ false, %301 ], [ false, %191 ], [ false, %407 ], [ true, %257 ], [ true, %237 ], [ true, %349 ]
  %412 = phi ptr [ %370, %369 ], [ %302, %301 ], [ %192, %191 ], [ %408, %407 ], [ %258, %257 ], [ %233, %237 ], [ %345, %349 ]
  %413 = icmp ugt ptr %412, inttoptr (i32 -4096 to ptr)
  br i1 %413, label %436, label %414, !prof !18

414:                                              ; preds = %410
  %415 = getelementptr inbounds %struct.sk_buff, ptr %142, i32 0, i32 13, i32 0, i32 3
  %416 = load i16, ptr %415, align 2
  %417 = and i16 %416, 32
  %418 = icmp eq i16 %417, 0
  br i1 %418, label %439, label %419

419:                                              ; preds = %414
  %420 = getelementptr inbounds %struct.sk_buff, ptr %142, i32 0, i32 1
  %421 = load ptr, ptr %420, align 4
  %422 = icmp eq ptr %421, null
  br i1 %422, label %428, label %423

423:                                              ; preds = %419
  %424 = getelementptr inbounds %struct.sock, ptr %421, i32 0, i32 29
  %425 = load volatile i32, ptr %424, align 4
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %428, label %427

427:                                              ; preds = %423
  store volatile i32 0, ptr %424, align 4
  br label %428

428:                                              ; preds = %427, %423, %419
  %429 = icmp eq ptr %412, null
  br i1 %429, label %439, label %430

430:                                              ; preds = %428
  %431 = load volatile i32, ptr @jiffies, align 64
  %432 = getelementptr inbounds %struct.neighbour, ptr %412, i32 0, i32 3
  %433 = load volatile i32, ptr %432, align 4
  %434 = icmp eq i32 %433, %431
  br i1 %434, label %439, label %435

435:                                              ; preds = %430
  store volatile i32 %431, ptr %432, align 4
  br label %439

436:                                              ; preds = %410
  call fastcc void @local_bh_enable() #31
  br label %437

437:                                              ; preds = %436, %409, %124, %121
  %438 = phi ptr [ %0, %124 ], [ %0, %121 ], [ %142, %436 ], [ %142, %409 ]
  call void @kfree_skb_reason(ptr noundef %438, i32 noundef 0) #31
  br label %457

439:                                              ; preds = %435, %430, %428, %414
  %440 = call i32 @llvm.read_register.i32(metadata !0) #31
  %441 = inttoptr i32 %440 to ptr
  %442 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %441) #21, !srcloc !15
  %443 = add i32 %442, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %444 = inttoptr i32 %443 to ptr
  %445 = load i16, ptr %444, align 2
  %446 = add i16 %445, 1
  store i16 %446, ptr %444, align 2
  %447 = call fastcc i32 @neigh_output(ptr noundef %412, ptr noundef %142, i1 noundef zeroext %411) #31
  %448 = call i32 @llvm.read_register.i32(metadata !0) #31
  %449 = inttoptr i32 %448 to ptr
  %450 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %449) #21, !srcloc !15
  %451 = add i32 %450, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %452 = inttoptr i32 %451 to ptr
  %453 = load i16, ptr %452, align 2
  %454 = add i16 %453, -1
  store i16 %454, ptr %452, align 2
  call fastcc void @local_bh_enable() #31
  %455 = and i32 %447, -3
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %747, label %457, !prof !10

457:                                              ; preds = %439, %437, %138
  %458 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 36, i32 5
  %459 = load i32, ptr %458, align 4
  %460 = add i32 %459, 1
  store i32 %460, ptr %458, align 4
  br label %747

461:                                              ; preds = %88, %55
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %6) #31
  %462 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 36, i32 5
  %463 = load i32, ptr %462, align 4
  %464 = add i32 %463, 1
  store i32 %464, ptr %462, align 4
  call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %747

465:                                              ; preds = %42
  %466 = icmp eq ptr %28, null
  br i1 %466, label %467, label %509

467:                                              ; preds = %465
  %468 = and i32 %49, 65535
  %469 = getelementptr i8, ptr %46, i32 %468
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %3) #31
  %470 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 17
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %3, i8 0, i64 88, i1 false) #31
  %471 = load i32, ptr %470, align 4
  store i32 %471, ptr %3, align 8
  %472 = getelementptr inbounds %struct.flowi_common, ptr %3, i32 0, i32 2
  %473 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 11
  %474 = load i32, ptr %473, align 4
  store i32 %474, ptr %472, align 8
  %475 = getelementptr inbounds %struct.flowi_common, ptr %3, i32 0, i32 5
  %476 = getelementptr inbounds %struct.ipv6hdr, ptr %469, i32 0, i32 3
  %477 = load i8, ptr %476, align 2
  store i8 %477, ptr %475, align 2
  %478 = getelementptr inbounds %struct.flowi_common, ptr %3, i32 0, i32 6
  store i8 1, ptr %478, align 1
  %479 = getelementptr inbounds %struct.flowi6, ptr %3, i32 0, i32 1
  %480 = getelementptr inbounds %struct.ipv6hdr, ptr %469, i32 0, i32 6
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(16) %479, ptr noundef align 4 dereferenceable(16) %480, i32 16, i1 false) #31
  %481 = getelementptr inbounds %struct.flowi6, ptr %3, i32 0, i32 2
  %482 = getelementptr inbounds %struct.ipv6hdr, ptr %469, i32 0, i32 5
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(16) %481, ptr noundef align 4 dereferenceable(16) %482, i32 16, i1 false) #31
  %483 = getelementptr inbounds %struct.flowi6, ptr %3, i32 0, i32 3
  %484 = load i32, ptr %469, align 4
  %485 = and i32 %484, -241
  store i32 %485, ptr %483, align 8
  %486 = getelementptr inbounds %struct.flowi6, ptr %3, i32 0, i32 4
  store i32 0, ptr %486, align 4
  %487 = getelementptr inbounds %struct.flowi6, ptr %3, i32 0, i32 5
  store i32 0, ptr %487, align 8
  %488 = load ptr, ptr @ipv6_stub, align 4
  %489 = getelementptr inbounds %struct.ipv6_stub, ptr %488, i32 0, i32 2
  %490 = load ptr, ptr %489, align 4
  %491 = call ptr %490(ptr noundef nonnull @init_net, ptr noundef null, ptr noundef nonnull %3, ptr noundef null) #31
  %492 = icmp ugt ptr %491, inttoptr (i32 -4096 to ptr)
  br i1 %492, label %508, label %493

493:                                              ; preds = %467
  %494 = icmp ne ptr %491, null
  %495 = zext i1 %494 to i8
  %496 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 3
  %497 = load i16, ptr %496, align 2
  %498 = lshr i16 %497, 14
  %499 = trunc i16 %498 to i8
  %500 = and i8 %499, 1
  %501 = or i8 %500, %495
  %502 = zext i8 %501 to i16
  %503 = shl nuw nsw i16 %502, 14
  %504 = and i16 %497, -16385
  %505 = or i16 %503, %504
  store i16 %505, ptr %496, align 2
  %506 = ptrtoint ptr %491 to i32
  %507 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 4
  store i32 %506, ptr %507, align 8
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #31
  br label %512

508:                                              ; preds = %467
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #31
  br label %739

509:                                              ; preds = %465
  %510 = load i32, ptr %28, align 4
  %511 = icmp eq i32 %510, 10
  br i1 %511, label %512, label %739

512:                                              ; preds = %509, %493
  %513 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 19
  %514 = load i16, ptr %513, align 2
  %515 = zext i16 %514 to i32
  %516 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 21
  %517 = load i16, ptr %516, align 8
  %518 = zext i16 %517 to i32
  %519 = add nuw nsw i32 %518, %515
  %520 = and i32 %519, 131056
  %521 = add nuw nsw i32 %520, 16
  %522 = call i32 @llvm.read_register.i32(metadata !0) #31
  %523 = inttoptr i32 %522 to ptr
  %524 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %523) #21, !srcloc !15
  %525 = add i32 %524, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %526 = inttoptr i32 %525 to ptr
  %527 = load i16, ptr %526, align 2
  %528 = icmp ugt i16 %527, 8
  br i1 %528, label %529, label %534

529:                                              ; preds = %512
  %530 = call i32 @net_ratelimit() #31
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %715, label %532

532:                                              ; preds = %529
  %533 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #34
  br label %715

534:                                              ; preds = %512
  store ptr %16, ptr %12, align 8
  %535 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 2
  store i64 0, ptr %535, align 8
  %536 = load ptr, ptr %44, align 4
  %537 = load ptr, ptr %29, align 8
  %538 = ptrtoint ptr %536 to i32
  %539 = ptrtoint ptr %537 to i32
  %540 = sub i32 %538, %539
  %541 = icmp ult i32 %540, %521
  br i1 %541, label %542, label %549

542:                                              ; preds = %534
  %543 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 44
  %544 = load ptr, ptr %543, align 16
  %545 = icmp eq ptr %544, null
  br i1 %545, label %549, label %546, !prof !10

546:                                              ; preds = %542
  %547 = call ptr @skb_expand_head(ptr noundef %0, i32 noundef %521) #31
  %548 = icmp eq ptr %547, null
  br i1 %548, label %735, label %549

549:                                              ; preds = %546, %542, %534
  %550 = phi ptr [ %547, %546 ], [ %0, %542 ], [ %0, %534 ]
  %551 = tail call ptr @llvm.thread.pointer() #31
  %552 = getelementptr inbounds %struct.thread_info, ptr %551, i32 0, i32 1
  %553 = load volatile i32, ptr %552, align 4
  %554 = add i32 %553, 512
  store volatile i32 %554, ptr %552, align 4
  call void asm sideeffect "", "~{memory}"() #31, !srcloc !34
  br i1 %466, label %555, label %578

555:                                              ; preds = %549
  %556 = getelementptr inbounds %struct.sk_buff, ptr %550, i32 0, i32 4
  %557 = load i32, ptr %556, align 8
  %558 = and i32 %557, -2
  %559 = inttoptr i32 %558 to ptr
  %560 = getelementptr inbounds %struct.rt6_info, ptr %559, i32 0, i32 7
  %561 = load i32, ptr %560, align 4
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %566, label %564

564:                                              ; preds = %555
  %565 = getelementptr inbounds %struct.rt6_info, ptr %559, i32 0, i32 5
  br label %580

566:                                              ; preds = %555
  %567 = getelementptr inbounds %struct.sk_buff, ptr %550, i32 0, i32 16
  %568 = load ptr, ptr %567, align 8
  %569 = getelementptr inbounds %struct.sk_buff, ptr %550, i32 0, i32 13, i32 0, i32 18
  %570 = load i16, ptr %569, align 4
  %571 = zext i16 %570 to i32
  %572 = getelementptr i8, ptr %568, i32 %571
  %573 = getelementptr inbounds %struct.ipv6hdr, ptr %572, i32 0, i32 6
  %574 = and i32 %561, 16777216
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %580, label %576, !prof !10

576:                                              ; preds = %566
  %577 = getelementptr inbounds %struct.rt6_info, ptr %559, i32 0, i32 3
  br label %580

578:                                              ; preds = %549
  %579 = getelementptr inbounds %struct.bpf_nh_params, ptr %28, i32 0, i32 1
  br label %580

580:                                              ; preds = %578, %576, %566, %564
  %581 = phi ptr [ null, %578 ], [ %559, %564 ], [ %559, %566 ], [ %559, %576 ]
  %582 = phi ptr [ %579, %578 ], [ %565, %564 ], [ %573, %566 ], [ %577, %576 ]
  %583 = load ptr, ptr @ipv6_stub, align 4
  %584 = getelementptr inbounds %struct.ipv6_stub, ptr %583, i32 0, i32 20
  %585 = load ptr, ptr %584, align 4
  %586 = getelementptr inbounds %struct.neigh_table, ptr %585, i32 0, i32 31
  %587 = load volatile ptr, ptr %586, align 4
  %588 = getelementptr inbounds %struct.neigh_hash_table, ptr %587, i32 0, i32 2
  %589 = load i32, ptr %582, align 4
  %590 = ptrtoint ptr %16 to i32
  %591 = xor i32 %589, %590
  %592 = load i32, ptr %588, align 4
  %593 = mul i32 %591, %592
  %594 = getelementptr i32, ptr %582, i32 1
  %595 = load i32, ptr %594, align 4
  %596 = getelementptr %struct.neigh_hash_table, ptr %587, i32 0, i32 2, i32 1
  %597 = load i32, ptr %596, align 4
  %598 = mul i32 %597, %595
  %599 = add i32 %598, %593
  %600 = getelementptr i32, ptr %582, i32 2
  %601 = load i32, ptr %600, align 4
  %602 = getelementptr %struct.neigh_hash_table, ptr %587, i32 0, i32 2, i32 2
  %603 = load i32, ptr %602, align 4
  %604 = mul i32 %603, %601
  %605 = add i32 %599, %604
  %606 = getelementptr i32, ptr %582, i32 3
  %607 = load i32, ptr %606, align 4
  %608 = getelementptr %struct.neigh_hash_table, ptr %587, i32 0, i32 2, i32 3
  %609 = load i32, ptr %608, align 4
  %610 = mul i32 %609, %607
  %611 = add i32 %605, %610
  %612 = getelementptr inbounds %struct.neigh_hash_table, ptr %587, i32 0, i32 1
  %613 = load i32, ptr %612, align 4
  %614 = sub i32 32, %613
  %615 = lshr i32 %611, %614
  %616 = load ptr, ptr %587, align 4
  %617 = getelementptr ptr, ptr %616, i32 %615
  %618 = load volatile ptr, ptr %617, align 4
  %619 = icmp eq ptr %618, null
  br i1 %619, label %645, label %620

620:                                              ; preds = %642, %580
  %621 = phi ptr [ %643, %642 ], [ %618, %580 ]
  %622 = getelementptr inbounds %struct.neighbour, ptr %621, i32 0, i32 26
  %623 = load ptr, ptr %622, align 4
  %624 = icmp eq ptr %623, %16
  br i1 %624, label %625, label %642

625:                                              ; preds = %620
  %626 = getelementptr inbounds %struct.neighbour, ptr %621, i32 0, i32 28
  %627 = load i32, ptr %626, align 4
  %628 = xor i32 %627, %589
  %629 = getelementptr %struct.neighbour, ptr %621, i32 1, i32 1
  %630 = load i32, ptr %629, align 4
  %631 = xor i32 %630, %595
  %632 = or i32 %631, %628
  %633 = getelementptr %struct.neighbour, ptr %621, i32 1, i32 2
  %634 = load i32, ptr %633, align 4
  %635 = xor i32 %634, %601
  %636 = or i32 %632, %635
  %637 = getelementptr %struct.neighbour, ptr %621, i32 1, i32 3
  %638 = load i32, ptr %637, align 4
  %639 = xor i32 %638, %607
  %640 = or i32 %636, %639
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %647, label %642

642:                                              ; preds = %625, %620
  %643 = load volatile ptr, ptr %621, align 4
  %644 = icmp eq ptr %643, null
  br i1 %644, label %645, label %620

645:                                              ; preds = %642, %580
  %646 = call ptr @__neigh_create(ptr noundef %585, ptr noundef %582, ptr noundef %16, i1 noundef zeroext false) #31
  br label %647

647:                                              ; preds = %645, %625
  %648 = phi ptr [ %646, %645 ], [ %621, %625 ]
  %649 = icmp ugt ptr %648, inttoptr (i32 -4096 to ptr)
  br i1 %649, label %672, label %650, !prof !18

650:                                              ; preds = %647
  %651 = getelementptr inbounds %struct.sk_buff, ptr %550, i32 0, i32 13, i32 0, i32 3
  %652 = load i16, ptr %651, align 2
  %653 = and i16 %652, 32
  %654 = icmp eq i16 %653, 0
  br i1 %654, label %717, label %655

655:                                              ; preds = %650
  %656 = getelementptr inbounds %struct.sk_buff, ptr %550, i32 0, i32 1
  %657 = load ptr, ptr %656, align 4
  %658 = icmp eq ptr %657, null
  br i1 %658, label %664, label %659

659:                                              ; preds = %655
  %660 = getelementptr inbounds %struct.sock, ptr %657, i32 0, i32 29
  %661 = load volatile i32, ptr %660, align 4
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %664, label %663

663:                                              ; preds = %659
  store volatile i32 0, ptr %660, align 4
  br label %664

664:                                              ; preds = %663, %659, %655
  %665 = icmp eq ptr %648, null
  br i1 %665, label %717, label %666

666:                                              ; preds = %664
  %667 = load volatile i32, ptr @jiffies, align 64
  %668 = getelementptr inbounds %struct.neighbour, ptr %648, i32 0, i32 3
  %669 = load volatile i32, ptr %668, align 4
  %670 = icmp eq i32 %669, %667
  br i1 %670, label %717, label %671

671:                                              ; preds = %666
  store volatile i32 %667, ptr %668, align 4
  br label %717

672:                                              ; preds = %647
  call fastcc void @local_bh_enable() #31
  %673 = icmp eq ptr %581, null
  br i1 %673, label %715, label %674

674:                                              ; preds = %672
  %675 = getelementptr inbounds %struct.rt6_info, ptr %581, i32 0, i32 6
  %676 = load ptr, ptr %675, align 4
  %677 = icmp eq ptr %676, null
  br i1 %677, label %697, label %678, !prof !18

678:                                              ; preds = %674
  %679 = load volatile i32, ptr %552, align 4
  %680 = add i32 %679, 512
  store volatile i32 %680, ptr %552, align 4
  call void asm sideeffect "", "~{memory}"() #31, !srcloc !34
  %681 = getelementptr inbounds %struct.inet6_dev, ptr %676, i32 0, i32 33, i32 1
  %682 = load ptr, ptr %681, align 4
  %683 = ptrtoint ptr %682 to i32
  %684 = call i32 @llvm.read_register.i32(metadata !0) #31
  %685 = inttoptr i32 %684 to ptr
  %686 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %685) #21, !srcloc !15
  %687 = add i32 %686, %683
  %688 = inttoptr i32 %687 to ptr
  %689 = getelementptr inbounds %struct.ipstats_mib, ptr %688, i32 0, i32 1
  %690 = load i32, ptr %689, align 4
  %691 = add i32 %690, 1
  store i32 %691, ptr %689, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !19
  %692 = getelementptr [37 x i64], ptr %688, i32 0, i32 15
  %693 = load i64, ptr %692, align 8
  %694 = add i64 %693, 1
  store i64 %694, ptr %692, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !20
  %695 = load i32, ptr %689, align 4
  %696 = add i32 %695, 1
  store i32 %696, ptr %689, align 4
  call fastcc void @local_bh_enable() #31
  br label %697

697:                                              ; preds = %678, %674
  %698 = load volatile i32, ptr %552, align 4
  %699 = add i32 %698, 512
  store volatile i32 %699, ptr %552, align 4
  call void asm sideeffect "", "~{memory}"() #31, !srcloc !34
  %700 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 30, i32 1), align 4
  %701 = ptrtoint ptr %700 to i32
  %702 = call i32 @llvm.read_register.i32(metadata !0) #31
  %703 = inttoptr i32 %702 to ptr
  %704 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %703) #21, !srcloc !15
  %705 = add i32 %704, %701
  %706 = inttoptr i32 %705 to ptr
  %707 = getelementptr inbounds %struct.ipstats_mib, ptr %706, i32 0, i32 1
  %708 = load i32, ptr %707, align 4
  %709 = add i32 %708, 1
  store i32 %709, ptr %707, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !19
  %710 = getelementptr [37 x i64], ptr %706, i32 0, i32 15
  %711 = load i64, ptr %710, align 8
  %712 = add i64 %711, 1
  store i64 %712, ptr %710, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !20
  %713 = load i32, ptr %707, align 4
  %714 = add i32 %713, 1
  store i32 %714, ptr %707, align 4
  call fastcc void @local_bh_enable() #31
  br label %715

715:                                              ; preds = %697, %672, %532, %529
  %716 = phi ptr [ %0, %532 ], [ %0, %529 ], [ %550, %697 ], [ %550, %672 ]
  call void @kfree_skb_reason(ptr noundef %716, i32 noundef 0) #31
  br label %735

717:                                              ; preds = %671, %666, %664, %650
  %718 = call i32 @llvm.read_register.i32(metadata !0) #31
  %719 = inttoptr i32 %718 to ptr
  %720 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %719) #21, !srcloc !15
  %721 = add i32 %720, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %722 = inttoptr i32 %721 to ptr
  %723 = load i16, ptr %722, align 2
  %724 = add i16 %723, 1
  store i16 %724, ptr %722, align 2
  %725 = call fastcc i32 @neigh_output(ptr noundef %648, ptr noundef %550, i1 noundef zeroext false) #31
  %726 = call i32 @llvm.read_register.i32(metadata !0) #31
  %727 = inttoptr i32 %726 to ptr
  %728 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %727) #21, !srcloc !15
  %729 = add i32 %728, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %730 = inttoptr i32 %729 to ptr
  %731 = load i16, ptr %730, align 2
  %732 = add i16 %731, -1
  store i16 %732, ptr %730, align 2
  call fastcc void @local_bh_enable() #31
  %733 = and i32 %725, -3
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %747, label %735, !prof !10

735:                                              ; preds = %717, %715, %546
  %736 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 36, i32 5
  %737 = load i32, ptr %736, align 4
  %738 = add i32 %737, 1
  store i32 %738, ptr %736, align 4
  br label %747

739:                                              ; preds = %509, %508
  %740 = getelementptr inbounds %struct.net_device, ptr %16, i32 0, i32 36, i32 5
  %741 = load i32, ptr %740, align 4
  %742 = add i32 %741, 1
  store i32 %742, ptr %740, align 4
  call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %747

743:                                              ; preds = %42, %35, %24
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %747

744:                                              ; preds = %21
  %745 = tail call fastcc i32 @__bpf_redirect(ptr noundef %0, ptr noundef nonnull %16, i32 noundef %13)
  br label %747

746:                                              ; preds = %1
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %747

747:                                              ; preds = %746, %744, %743, %739, %735, %717, %461, %457, %439
  %748 = phi i32 [ -22, %746 ], [ %745, %744 ], [ -524, %743 ], [ 1, %457 ], [ 1, %461 ], [ 0, %439 ], [ 1, %739 ], [ 1, %735 ], [ 0, %717 ]
  ret i32 %748
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_get_by_index_rcu(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__bpf_redirect(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 32
  %5 = load i16, ptr %4, align 16
  switch i16 %5, label %6 [
    i16 768, label %50
    i16 769, label %50
    i16 776, label %50
    i16 778, label %50
    i16 823, label %50
    i16 -1, label %50
    i16 -2, label %50
    i16 519, label %50
    i16 779, label %50
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  %8 = load i16, ptr %7, align 2
  %9 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %10 = load i16, ptr %9, align 4
  %11 = icmp ult i16 %8, %10
  br i1 %11, label %13, label %12, !prof !10

12:                                               ; preds = %6
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %171

13:                                               ; preds = %6
  %14 = and i32 %2, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @dev_forward_skb_nomtu(ptr noundef %1, ptr noundef %0) #31
  br label %171

18:                                               ; preds = %13
  %19 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %20 = inttoptr i32 %19 to ptr
  %21 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %20) #21, !srcloc !15
  %22 = add i32 %21, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %23 = inttoptr i32 %22 to ptr
  %24 = load i16, ptr %23, align 2
  %25 = icmp ugt i16 %24, 8
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = tail call i32 @net_ratelimit() #31
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #34
  br label %31

31:                                               ; preds = %29, %26
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %171

32:                                               ; preds = %18
  %33 = getelementptr inbounds %struct.anon.44, ptr %0, i32 0, i32 2
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 2
  store i64 0, ptr %34, align 8
  %35 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %36 = inttoptr i32 %35 to ptr
  %37 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %36) #21, !srcloc !15
  %38 = add i32 %37, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %39 = inttoptr i32 %38 to ptr
  %40 = load i16, ptr %39, align 2
  %41 = add i16 %40, 1
  store i16 %41, ptr %39, align 2
  %42 = tail call i32 @dev_queue_xmit(ptr noundef %0) #31
  %43 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %44 = inttoptr i32 %43 to ptr
  %45 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %44) #21, !srcloc !15
  %46 = add i32 %45, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %47 = inttoptr i32 %46 to ptr
  %48 = load i16, ptr %47, align 2
  %49 = add i16 %48, -1
  store i16 %49, ptr %47, align 2
  br label %171

50:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3
  %51 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %54 = load i16, ptr %53, align 4
  %55 = zext i16 %54 to i32
  %56 = getelementptr i8, ptr %52, i32 %55
  %57 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %58 = load ptr, ptr %57, align 4
  %59 = ptrtoint ptr %56 to i32
  %60 = ptrtoint ptr %58 to i32
  %61 = sub i32 %59, %60
  %62 = icmp eq ptr %56, %58
  br i1 %62, label %99, label %63

63:                                               ; preds = %50
  %64 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %65 = load i32, ptr %64, align 8
  %66 = sub i32 %65, %61
  store i32 %66, ptr %64, align 8
  %67 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %68 = load i32, ptr %67, align 4
  %69 = icmp ult i32 %66, %68
  br i1 %69, label %70, label %71, !prof !18

70:                                               ; preds = %63
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #31, !srcloc !36
  unreachable

71:                                               ; preds = %63
  %72 = getelementptr i8, ptr %58, i32 %61
  store ptr %72, ptr %57, align 4
  %73 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %74 = load i16, ptr %73, align 8
  %75 = lshr i16 %74, 5
  %76 = trunc i16 %75 to i2
  switch i2 %76, label %99 [
    i2 -2, label %77
    i2 -1, label %88
  ]

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  %79 = load i16, ptr %78, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr i8, ptr %52, i32 %80
  %82 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %83 = load i32, ptr %82, align 4
  %84 = sub i32 0, %83
  %85 = tail call i32 @csum_partial(ptr noundef %81, i32 noundef %61, i32 noundef %84) #31
  %86 = sub i32 0, %85
  store i32 %86, ptr %82, align 4
  %87 = load i16, ptr %53, align 4
  br label %99

88:                                               ; preds = %71
  %89 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %90 = load i16, ptr %89, align 4
  %91 = zext i16 %90 to i32
  %92 = ptrtoint ptr %72 to i32
  %93 = ptrtoint ptr %52 to i32
  %94 = sub i32 %93, %92
  %95 = add i32 %94, %91
  %96 = icmp slt i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %88
  %98 = and i16 %74, -97
  store i16 %98, ptr %73, align 8
  br label %99

99:                                               ; preds = %97, %88, %77, %71, %50
  %100 = phi i16 [ %54, %97 ], [ %54, %88 ], [ %87, %77 ], [ %54, %71 ], [ %54, %50 ]
  %101 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  store i16 %100, ptr %101, align 2
  %102 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 7
  store i16 0, ptr %102, align 8
  %103 = and i32 %2, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %139, label %105

105:                                              ; preds = %99
  %106 = icmp eq ptr %0, null
  br i1 %106, label %127, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %109 = load ptr, ptr %108, align 4
  %110 = load i8, ptr %109, align 8
  %111 = and i8 %110, 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %127, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.skb_shared_info, ptr %109, i32 0, i32 11
  %115 = load ptr, ptr %114, align 4
  %116 = icmp eq ptr %115, null
  br i1 %116, label %127, label %117, !prof !10

117:                                              ; preds = %113
  %118 = ptrtoint ptr %115 to i32
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = load ptr, ptr %115, align 4
  %123 = icmp eq ptr %122, @msg_zerocopy_callback
  br i1 %123, label %127, label %124

124:                                              ; preds = %121, %117
  %125 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %0, i32 noundef 2592) #31
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %132

127:                                              ; preds = %124, %121, %113, %107, %105
  %128 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 14
  %129 = load i32, ptr %128, align 8
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135, !prof !18

132:                                              ; preds = %127, %124
  %133 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 37
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %133) #31, !srcloc !23
  %134 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %133, ptr %133, i32 1, ptr elementtype(i32) %133) #31, !srcloc !29
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %171

135:                                              ; preds = %127
  tail call void @skb_scrub_packet(ptr noundef %0, i1 noundef zeroext false) #31
  %136 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 5
  store i32 0, ptr %136, align 8
  %137 = getelementptr inbounds %struct.anon.44, ptr %0, i32 0, i32 2
  store ptr %1, ptr %137, align 8
  %138 = tail call i32 @netif_rx(ptr noundef %0) #31
  br label %171

139:                                              ; preds = %99
  %140 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %141 = inttoptr i32 %140 to ptr
  %142 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %141) #21, !srcloc !15
  %143 = add i32 %142, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %144 = inttoptr i32 %143 to ptr
  %145 = load i16, ptr %144, align 2
  %146 = icmp ugt i16 %145, 8
  br i1 %146, label %147, label %153

147:                                              ; preds = %139
  %148 = tail call i32 @net_ratelimit() #31
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #34
  br label %152

152:                                              ; preds = %150, %147
  tail call void @kfree_skb_reason(ptr noundef %0, i32 noundef 0) #31
  br label %171

153:                                              ; preds = %139
  %154 = getelementptr inbounds %struct.anon.44, ptr %0, i32 0, i32 2
  store ptr %1, ptr %154, align 8
  %155 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 2
  store i64 0, ptr %155, align 8
  %156 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %157 = inttoptr i32 %156 to ptr
  %158 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %157) #21, !srcloc !15
  %159 = add i32 %158, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %160 = inttoptr i32 %159 to ptr
  %161 = load i16, ptr %160, align 2
  %162 = add i16 %161, 1
  store i16 %162, ptr %160, align 2
  %163 = tail call i32 @dev_queue_xmit(ptr noundef %0) #31
  %164 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %165 = inttoptr i32 %164 to ptr
  %166 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %165) #21, !srcloc !15
  %167 = add i32 %166, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 10) to i32)
  %168 = inttoptr i32 %167 to ptr
  %169 = load i16, ptr %168, align 2
  %170 = add i16 %169, -1
  store i16 %170, ptr %168, align 2
  br label %171

171:                                              ; preds = %153, %152, %135, %132, %32, %31, %16, %12
  %172 = phi i32 [ -34, %12 ], [ %17, %16 ], [ -100, %31 ], [ %42, %32 ], [ %138, %135 ], [ 1, %132 ], [ -100, %152 ], [ %163, %153 ]
  ret i32 %172
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_redirect(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %7) #21, !srcloc !15
  %9 = icmp ult i64 %1, 2
  br i1 %9, label %10, label %16, !prof !10

10:                                               ; preds = %5
  %11 = trunc i64 %0 to i32
  %12 = add i32 %8, ptrtoint (ptr @bpf_redirect_info to i32)
  %13 = inttoptr i32 %12 to ptr
  %14 = trunc i64 %1 to i32
  store i32 %14, ptr %13, align 4
  %15 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 1
  store i32 %11, ptr %15, align 4
  br label %16

16:                                               ; preds = %10, %5
  %17 = phi i64 [ 7, %10 ], [ 2, %5 ]
  ret i64 %17
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_redirect_peer(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %7) #21, !srcloc !15
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %10, label %15, !prof !10

10:                                               ; preds = %5
  %11 = trunc i64 %0 to i32
  %12 = add i32 %8, ptrtoint (ptr @bpf_redirect_info to i32)
  %13 = inttoptr i32 %12 to ptr
  store i32 4, ptr %13, align 4
  %14 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 1
  store i32 %11, ptr %14, align 4
  br label %15

15:                                               ; preds = %10, %5
  %16 = phi i64 [ 7, %10 ], [ 2, %5 ]
  ret i64 %16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_redirect_neigh(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %1 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %2 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #21, !srcloc !15
  %12 = add i32 %11, ptrtoint (ptr @bpf_redirect_info to i32)
  %13 = inttoptr i32 %12 to ptr
  %14 = add i32 %8, -1
  %15 = icmp ult i32 %14, 19
  %16 = icmp ne i64 %3, 0
  %17 = or i1 %16, %15
  br i1 %17, label %25, label %18, !prof !18

18:                                               ; preds = %5
  %19 = trunc i64 %0 to i32
  %20 = icmp eq i32 %8, 0
  %21 = select i1 %20, i32 2, i32 10
  store i32 %21, ptr %13, align 4
  %22 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 1
  store i32 %19, ptr %22, align 4
  br i1 %20, label %25, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 7
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(20) %24, ptr noundef align 4 dereferenceable(20) %7, i32 20, i1 false) #31
  br label %25

25:                                               ; preds = %23, %18, %5
  %26 = phi i64 [ 2, %5 ], [ 7, %23 ], [ 7, %18 ]
  ret i64 %26
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define dso_local i64 @bpf_msg_apply_bytes(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #8 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.sk_msg, ptr %7, i32 0, i32 3
  store i32 %8, ptr %9, align 4
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define dso_local i64 @bpf_msg_cork_bytes(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #8 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.sk_msg, ptr %7, i32 0, i32 4
  store i32 %8, ptr %9, align 4
  ret i64 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_msg_pull_data(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = sub i32 %9, %8
  %11 = icmp ne i64 %3, 0
  %12 = icmp ule i32 %9, %8
  %13 = or i1 %12, %11
  br i1 %13, label %180, label %14, !prof !18

14:                                               ; preds = %5
  %15 = load i32, ptr %7, align 4
  %16 = getelementptr inbounds %struct.sk_msg_sg, ptr %7, i32 0, i32 2
  br label %17

17:                                               ; preds = %26, %14
  %18 = phi i32 [ 0, %14 ], [ %21, %26 ]
  %19 = phi i32 [ %15, %14 ], [ %29, %26 ]
  %20 = phi i32 [ 0, %14 ], [ %23, %26 ]
  %21 = add i32 %20, %18
  %22 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %19, i32 2
  %23 = load i32, ptr %22, align 4
  %24 = add i32 %21, %23
  %25 = icmp ugt i32 %24, %8
  br i1 %25, label %32, label %26

26:                                               ; preds = %17
  %27 = add i32 %19, 1
  %28 = icmp eq i32 %27, 18
  %29 = select i1 %28, i32 0, i32 %27
  %30 = load i32, ptr %16, align 4
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %180, label %17

32:                                               ; preds = %17
  %33 = sub i32 %8, %21
  %34 = add i32 %33, %10
  %35 = getelementptr inbounds %struct.sk_msg_sg, ptr %7, i32 0, i32 5
  %36 = lshr i32 %19, 5
  %37 = getelementptr i32, ptr %35, i32 %36
  %38 = load volatile i32, ptr %37, align 4
  %39 = and i32 %19, 31
  %40 = shl nuw i32 1, %39
  %41 = and i32 %38, %40
  %42 = icmp ne i32 %41, 0
  %43 = icmp ugt i32 %34, %23
  %44 = select i1 %42, i1 true, i1 %43
  br i1 %44, label %45, label %165

45:                                               ; preds = %32
  %46 = add i32 %19, 1
  %47 = icmp eq i32 %46, 18
  %48 = select i1 %47, i32 0, i32 %46
  br i1 %43, label %49, label %63

49:                                               ; preds = %45
  %50 = load i32, ptr %16, align 4
  br label %51

51:                                               ; preds = %55, %49
  %52 = phi i32 [ %48, %49 ], [ %61, %55 ]
  %53 = phi i32 [ %23, %49 ], [ %58, %55 ]
  %54 = icmp eq i32 %52, %50
  br i1 %54, label %180, label %55

55:                                               ; preds = %51
  %56 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %52, i32 2
  %57 = load i32, ptr %56, align 4
  %58 = add i32 %53, %57
  %59 = add i32 %52, 1
  %60 = icmp eq i32 %59, 18
  %61 = select i1 %60, i32 0, i32 %59
  %62 = icmp ugt i32 %34, %58
  br i1 %62, label %51, label %63

63:                                               ; preds = %55, %45
  %64 = phi i32 [ %23, %45 ], [ %58, %55 ]
  %65 = phi i32 [ %48, %45 ], [ %61, %55 ]
  %66 = add i32 %64, -1
  %67 = icmp ult i32 %66, 4096
  %68 = lshr i32 %66, 12
  %69 = tail call i32 @llvm.ctlz.i32(i32 %68, i1 false) #31, !range !37
  %70 = sub nuw nsw i32 32, %69
  %71 = select i1 %67, i32 0, i32 %70
  %72 = tail call ptr @__alloc_pages(i32 noundef 272928, i32 noundef %71, i32 noundef 0, ptr noundef null) #31
  %73 = icmp eq ptr %72, null
  br i1 %73, label %180, label %74, !prof !18

74:                                               ; preds = %63
  %75 = tail call ptr @page_address(ptr noundef nonnull %72) #31
  br label %76

76:                                               ; preds = %108, %74
  %77 = phi i32 [ 0, %74 ], [ %90, %108 ]
  %78 = phi i32 [ %19, %74 ], [ %111, %108 ]
  %79 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %78
  %80 = load i32, ptr %79, align 4
  %81 = and i32 %80, -4
  %82 = inttoptr i32 %81 to ptr
  %83 = tail call ptr @page_address(ptr noundef %82) #31
  %84 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %78, i32 1
  %85 = load i32, ptr %84, align 4
  %86 = getelementptr i8, ptr %83, i32 %85
  %87 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %78, i32 2
  %88 = load i32, ptr %87, align 4
  %89 = getelementptr i8, ptr %75, i32 %77
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %89, ptr align 1 %86, i32 %88, i1 false) #31
  %90 = add i32 %88, %77
  store i32 0, ptr %87, align 4
  %91 = load i32, ptr %79, align 4
  %92 = and i32 %91, -4
  %93 = inttoptr i32 %92 to ptr
  %94 = getelementptr inbounds %struct.page, ptr %93, i32 0, i32 1
  %95 = load volatile i32, ptr %94, align 4
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98, !prof !10

98:                                               ; preds = %76
  %99 = add i32 %95, -1
  %100 = inttoptr i32 %99 to ptr
  br label %101

101:                                              ; preds = %98, %76
  %102 = phi ptr [ %93, %76 ], [ %100, %98 ]
  %103 = getelementptr inbounds %struct.page, ptr %102, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %103) #31, !srcloc !23
  %104 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %103, ptr %103, i32 1, ptr elementtype(i32) %103) #31, !srcloc !39
  %105 = extractvalue { i32, i32 } %104, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !40
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  tail call void @__put_page(ptr noundef %102) #31
  br label %108

108:                                              ; preds = %107, %101
  %109 = add i32 %78, 1
  %110 = icmp eq i32 %109, 18
  %111 = select i1 %110, i32 0, i32 %109
  %112 = icmp eq i32 %111, %65
  br i1 %112, label %113, label %76

113:                                              ; preds = %108
  %114 = ptrtoint ptr %72 to i32
  %115 = and i32 %114, 3
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %118, label %117, !prof !10

117:                                              ; preds = %113
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 112, 0\0A.popsection", ""() #31, !srcloc !41
  unreachable

118:                                              ; preds = %113
  %119 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %19
  %120 = load i32, ptr %119, align 4
  %121 = and i32 %120, 3
  %122 = or i32 %121, %114
  store i32 %122, ptr %119, align 4
  %123 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %19, i32 1
  store i32 0, ptr %123, align 4
  store i32 %64, ptr %22, align 4
  %124 = icmp eq i32 %65, %19
  %125 = load i1, ptr @____bpf_msg_pull_data.__already_done, align 1
  %126 = xor i1 %125, true
  %127 = select i1 %124, i1 %126, i1 false
  br i1 %127, label %128, label %129, !prof !18

128:                                              ; preds = %118
  store i1 true, ptr @____bpf_msg_pull_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 2657, i32 noundef 9, ptr noundef null) #31
  br label %129

129:                                              ; preds = %128, %118
  %130 = icmp ugt i32 %65, %19
  %131 = xor i32 %19, -1
  %132 = sub i32 17, %19
  %133 = select i1 %130, i32 %131, i32 %132
  %134 = add i32 %133, %65
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %165, label %136

136:                                              ; preds = %129
  %137 = add i32 %134, %48
  %138 = icmp ugt i32 %137, 17
  %139 = add i32 %137, -18
  %140 = select i1 %138, i32 %139, i32 %137
  %141 = load i32, ptr %16, align 4
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %159, label %143

143:                                              ; preds = %143, %136
  %144 = phi i32 [ %156, %143 ], [ %140, %136 ]
  %145 = phi i32 [ %152, %143 ], [ %48, %136 ]
  %146 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %145
  %147 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %144
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(20) %146, ptr noundef align 4 dereferenceable(20) %147, i32 20, i1 false) #31
  %148 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %144, i32 2
  store i32 0, ptr %148, align 4
  store i32 0, ptr %147, align 4
  %149 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %144, i32 1
  store i32 0, ptr %149, align 4
  %150 = add i32 %145, 1
  %151 = icmp eq i32 %150, 18
  %152 = select i1 %151, i32 0, i32 %150
  %153 = add i32 %152, %134
  %154 = icmp ugt i32 %153, 17
  %155 = add i32 %153, -18
  %156 = select i1 %154, i32 %155, i32 %153
  %157 = load i32, ptr %16, align 4
  %158 = icmp eq i32 %156, %157
  br i1 %158, label %159, label %143

159:                                              ; preds = %143, %136
  %160 = phi i32 [ %140, %136 ], [ %156, %143 ]
  %161 = sub i32 %160, %134
  %162 = icmp ult i32 %160, %134
  %163 = add i32 %161, 18
  %164 = select i1 %162, i32 %163, i32 %161
  store i32 %164, ptr %16, align 4
  br label %165

165:                                              ; preds = %159, %129, %32
  %166 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %19
  %167 = load i32, ptr %166, align 4
  %168 = and i32 %167, -4
  %169 = inttoptr i32 %168 to ptr
  %170 = tail call ptr @page_address(ptr noundef %169) #31
  %171 = getelementptr %struct.sk_msg_sg, ptr %7, i32 0, i32 6, i32 %19, i32 1
  %172 = load i32, ptr %171, align 4
  %173 = getelementptr i8, ptr %170, i32 %172
  %174 = getelementptr i8, ptr %173, i32 %8
  %175 = sub i32 0, %21
  %176 = getelementptr i8, ptr %174, i32 %175
  %177 = getelementptr inbounds %struct.sk_msg, ptr %7, i32 0, i32 1
  store ptr %176, ptr %177, align 4
  %178 = getelementptr i8, ptr %176, i32 %10
  %179 = getelementptr inbounds %struct.sk_msg, ptr %7, i32 0, i32 2
  store ptr %178, ptr %179, align 4
  br label %180

180:                                              ; preds = %165, %63, %51, %26, %5
  %181 = phi i64 [ 0, %165 ], [ -22, %5 ], [ -12, %63 ], [ -22, %51 ], [ -22, %26 ]
  ret i64 %181
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_msg_push_data(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = alloca { i32, i32, i32, i32 }, align 4
  %7 = alloca { i32, i32, i32, i32 }, align 4
  %8 = alloca { i32, i32, i32, i32 }, align 4
  %9 = trunc i64 %0 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %1 to i32
  %12 = trunc i64 %2 to i32
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %8, i8 0, i32 16, i1 false) #31
  %13 = icmp eq i64 %3, 0
  br i1 %13, label %14, label %263, !prof !10

14:                                               ; preds = %5
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %263, label %16, !prof !18

16:                                               ; preds = %14
  %17 = load i32, ptr %10, align 4
  %18 = getelementptr inbounds %struct.sk_msg_sg, ptr %10, i32 0, i32 2
  br label %19

19:                                               ; preds = %28, %16
  %20 = phi i32 [ %17, %16 ], [ %31, %28 ]
  %21 = phi i32 [ 0, %16 ], [ %25, %28 ]
  %22 = phi i32 [ 0, %16 ], [ %23, %28 ]
  %23 = add i32 %22, %21
  %24 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %20, i32 2
  %25 = load i32, ptr %24, align 4
  %26 = add i32 %23, %25
  %27 = icmp ugt i32 %26, %11
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = add i32 %20, 1
  %30 = icmp eq i32 %29, 18
  %31 = select i1 %30, i32 0, i32 %29
  %32 = load i32, ptr %18, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %263, label %19

34:                                               ; preds = %19
  %35 = load i32, ptr %18, align 4
  %36 = icmp ult i32 %35, %17
  %37 = select i1 %36, i32 18, i32 0
  %38 = sub i32 %35, %17
  %39 = add i32 %38, %37
  switch i32 %39, label %43 [
    i32 17, label %42
    i32 16, label %40
  ]

40:                                               ; preds = %34
  %41 = icmp eq i32 %23, %11
  br i1 %41, label %43, label %42

42:                                               ; preds = %40, %34
  br label %43

43:                                               ; preds = %42, %40, %34
  %44 = phi i32 [ %25, %42 ], [ 0, %40 ], [ 0, %34 ]
  %45 = add i32 %44, %12
  %46 = add i32 %45, -1
  %47 = icmp ult i32 %46, 4096
  %48 = lshr i32 %46, 12
  %49 = tail call i32 @llvm.ctlz.i32(i32 %48, i1 false) #31, !range !37
  %50 = sub nuw nsw i32 32, %49
  %51 = select i1 %47, i32 0, i32 %50
  %52 = tail call ptr @__alloc_pages(i32 noundef 272928, i32 noundef %51, i32 noundef 0, ptr noundef null) #31
  %53 = icmp eq ptr %52, null
  br i1 %53, label %263, label %54, !prof !18

54:                                               ; preds = %43
  %55 = icmp eq i32 %44, 0
  br i1 %55, label %95, label %56

56:                                               ; preds = %54
  %57 = tail call ptr @page_address(ptr noundef nonnull %52) #31
  %58 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %20
  %59 = sub i32 %11, %23
  %60 = load i32, ptr %24, align 4
  %61 = sub i32 %60, %59
  %62 = load i32, ptr %58, align 4
  %63 = and i32 %62, -4
  %64 = inttoptr i32 %63 to ptr
  %65 = tail call ptr @page_address(ptr noundef %64) #31
  %66 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %20, i32 1
  %67 = load i32, ptr %66, align 4
  %68 = getelementptr i8, ptr %65, i32 %67
  %69 = icmp eq i32 %23, %11
  br i1 %69, label %71, label %70

70:                                               ; preds = %56
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %57, ptr align 1 %68, i32 %59, i1 false) #31
  br label %71

71:                                               ; preds = %70, %56
  %72 = icmp eq i32 %60, %59
  br i1 %72, label %77, label %73

73:                                               ; preds = %71
  %74 = getelementptr i8, ptr %68, i32 %59
  %75 = getelementptr i8, ptr %57, i32 %59
  %76 = getelementptr i8, ptr %75, i32 %12
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %76, ptr align 1 %74, i32 %61, i1 false) #31
  br label %77

77:                                               ; preds = %73, %71
  %78 = load i32, ptr %58, align 4
  %79 = and i32 %78, -4
  %80 = inttoptr i32 %79 to ptr
  %81 = getelementptr inbounds %struct.page, ptr %80, i32 0, i32 1
  %82 = load volatile i32, ptr %81, align 4
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %88, label %85, !prof !10

85:                                               ; preds = %77
  %86 = add i32 %82, -1
  %87 = inttoptr i32 %86 to ptr
  br label %88

88:                                               ; preds = %85, %77
  %89 = phi ptr [ %80, %77 ], [ %87, %85 ]
  %90 = getelementptr inbounds %struct.page, ptr %89, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %90) #31, !srcloc !23
  %91 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %90, ptr %90, i32 1, ptr elementtype(i32) %90) #31, !srcloc !39
  %92 = extractvalue { i32, i32 } %91, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !40
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %174

94:                                               ; preds = %88
  tail call void @__put_page(ptr noundef %89) #31
  br label %174

95:                                               ; preds = %54
  %96 = icmp eq i32 %23, %11
  br i1 %96, label %97, label %99

97:                                               ; preds = %95
  %98 = load i32, ptr %18, align 4
  br label %119

99:                                               ; preds = %95
  %100 = sub i32 %11, %23
  %101 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %20
  %102 = load i32, ptr %101, align 4
  %103 = getelementptr inbounds i8, ptr %101, i32 4
  %104 = load i32, ptr %103, align 4
  %105 = getelementptr inbounds i8, ptr %101, i32 8
  %106 = load i32, ptr %105, align 4
  %107 = getelementptr inbounds i8, ptr %101, i32 12
  %108 = load i64, ptr %107, align 4
  store i32 %100, ptr %24, align 4
  %109 = sub i32 %106, %100
  %110 = add i32 %104, %11
  %111 = add i32 %20, 1
  %112 = icmp eq i32 %111, 18
  %113 = select i1 %112, i32 0, i32 %111
  %114 = and i32 %102, -3
  store i32 %114, ptr %101, align 4
  %115 = load i32, ptr %18, align 4
  %116 = add i32 %115, 1
  %117 = icmp eq i32 %116, 18
  %118 = select i1 %117, i32 0, i32 %116
  store i32 %118, ptr %18, align 4
  br label %119

119:                                              ; preds = %99, %97
  %120 = phi i32 [ %98, %97 ], [ %118, %99 ]
  %121 = phi i64 [ 0, %97 ], [ %108, %99 ]
  %122 = phi i32 [ 0, %97 ], [ %114, %99 ]
  %123 = phi i32 [ 0, %97 ], [ %110, %99 ]
  %124 = phi i32 [ 0, %97 ], [ %109, %99 ]
  %125 = phi i32 [ %20, %97 ], [ %113, %99 ]
  %126 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %125
  %127 = load i32, ptr %126, align 4
  %128 = getelementptr inbounds i8, ptr %126, i32 4
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %6, ptr noundef align 4 dereferenceable(16) %128, i32 16, i1 false) #31
  %129 = add i32 %125, 1
  %130 = icmp eq i32 %129, 18
  %131 = select i1 %130, i32 0, i32 %129
  %132 = and i32 %127, -3
  %133 = add i32 %120, 1
  %134 = icmp eq i32 %133, 18
  %135 = select i1 %134, i32 0, i32 %133
  store i32 %135, ptr %18, align 4
  %136 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %131
  %137 = load i32, ptr %136, align 4
  %138 = getelementptr inbounds i8, ptr %136, i32 4
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef align 4 dereferenceable(16) %138, i32 16, i1 false) #31
  %139 = icmp eq i32 %124, 0
  br i1 %139, label %147, label %140

140:                                              ; preds = %119
  %141 = add i32 %131, 1
  %142 = icmp eq i32 %141, 18
  %143 = select i1 %142, i32 0, i32 %141
  %144 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %143
  %145 = load i32, ptr %144, align 4
  %146 = getelementptr inbounds i8, ptr %144, i32 4
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %8, ptr noundef align 4 dereferenceable(16) %146, i32 16, i1 false) #31
  br label %147

147:                                              ; preds = %140, %119
  %148 = phi i32 [ 0, %119 ], [ %145, %140 ]
  %149 = phi i32 [ %131, %119 ], [ %143, %140 ]
  %150 = icmp eq i32 %149, %135
  br i1 %150, label %174, label %151

151:                                              ; preds = %167, %147
  %152 = phi i32 [ %160, %167 ], [ %149, %147 ]
  %153 = phi i32 [ %170, %167 ], [ %148, %147 ]
  %154 = phi i32 [ %169, %167 ], [ %137, %147 ]
  %155 = phi i32 [ %154, %167 ], [ %132, %147 ]
  %156 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %152
  store i32 %155, ptr %156, align 4
  %157 = getelementptr inbounds i8, ptr %156, i32 4
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %157, ptr noundef nonnull align 4 dereferenceable(16) %6, i32 16, i1 false) #31
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %6, ptr noundef nonnull align 4 dereferenceable(16) %7, i32 16, i1 false) #31
  %158 = add i32 %152, 1
  %159 = icmp eq i32 %158, 18
  %160 = select i1 %159, i32 0, i32 %158
  br i1 %139, label %164, label %161

161:                                              ; preds = %151
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 4 dereferenceable(16) %8, i32 16, i1 false) #31
  %162 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %160
  %163 = load i32, ptr %162, align 4
  br label %167

164:                                              ; preds = %151
  %165 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %160
  %166 = load i32, ptr %165, align 4
  br label %167

167:                                              ; preds = %164, %161
  %168 = phi ptr [ %7, %164 ], [ %8, %161 ]
  %169 = phi i32 [ %166, %164 ], [ %153, %161 ]
  %170 = phi i32 [ %153, %164 ], [ %163, %161 ]
  %171 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %160, i32 1
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(16) %168, ptr noundef align 4 dereferenceable(16) %171, i32 16, i1 false) #31
  %172 = load i32, ptr %18, align 4
  %173 = icmp eq i32 %160, %172
  br i1 %173, label %174, label %151

174:                                              ; preds = %167, %147, %94, %88
  %175 = phi i64 [ %121, %147 ], [ 0, %94 ], [ 0, %88 ], [ %121, %167 ]
  %176 = phi i32 [ %125, %147 ], [ %20, %94 ], [ %20, %88 ], [ %125, %167 ]
  %177 = phi i32 [ %124, %147 ], [ 0, %94 ], [ 0, %88 ], [ %124, %167 ]
  %178 = phi i32 [ %123, %147 ], [ 0, %94 ], [ 0, %88 ], [ %123, %167 ]
  %179 = phi i32 [ %122, %147 ], [ 0, %94 ], [ 0, %88 ], [ %122, %167 ]
  %180 = getelementptr inbounds %struct.sk_msg, ptr %10, i32 0, i32 8
  %181 = load ptr, ptr %180, align 4
  %182 = getelementptr inbounds %struct.sock_common, ptr %181, i32 0, i32 8
  %183 = load ptr, ptr %182, align 8
  %184 = getelementptr inbounds %struct.proto, ptr %183, i32 0, i32 30
  %185 = load ptr, ptr %184, align 4
  %186 = icmp eq ptr %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %174
  %188 = getelementptr inbounds %struct.sock, ptr %181, i32 0, i32 11
  %189 = load i32, ptr %188, align 4
  %190 = sub i32 %189, %12
  store i32 %190, ptr %188, align 4
  br label %191

191:                                              ; preds = %187, %174
  %192 = getelementptr inbounds %struct.sk_msg_sg, ptr %10, i32 0, i32 3
  %193 = load i32, ptr %192, align 4
  %194 = add i32 %193, %12
  store i32 %194, ptr %192, align 4
  %195 = getelementptr inbounds %struct.sk_msg_sg, ptr %10, i32 0, i32 5
  %196 = and i32 %176, 31
  %197 = shl nuw i32 1, %196
  %198 = lshr i32 %176, 5
  %199 = getelementptr i32, ptr %195, i32 %198
  %200 = xor i32 %197, -1
  %201 = load i32, ptr %199, align 4
  %202 = and i32 %201, %200
  store i32 %202, ptr %199, align 4
  %203 = ptrtoint ptr %52 to i32
  %204 = and i32 %203, 3
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %207, label %206, !prof !10

206:                                              ; preds = %191
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 112, 0\0A.popsection", ""() #31, !srcloc !41
  unreachable

207:                                              ; preds = %191
  %208 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %176
  %209 = load i32, ptr %208, align 4
  %210 = and i32 %209, 3
  %211 = or i32 %210, %203
  store i32 %211, ptr %208, align 4
  %212 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %176, i32 1
  store i32 0, ptr %212, align 4
  %213 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %176, i32 2
  store i32 %45, ptr %213, align 4
  %214 = icmp eq i32 %177, 0
  br i1 %214, label %236, label %215

215:                                              ; preds = %207
  %216 = and i32 %179, -4
  %217 = inttoptr i32 %216 to ptr
  %218 = getelementptr inbounds %struct.page, ptr %217, i32 0, i32 1
  %219 = load volatile i32, ptr %218, align 4
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %225, label %222, !prof !10

222:                                              ; preds = %215
  %223 = add i32 %219, -1
  %224 = inttoptr i32 %223 to ptr
  br label %225

225:                                              ; preds = %222, %215
  %226 = phi ptr [ %217, %215 ], [ %224, %222 ]
  %227 = getelementptr inbounds %struct.page, ptr %226, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %227) #31, !srcloc !23
  %228 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %227, ptr %227, i32 1, ptr elementtype(i32) %227) #31, !srcloc !29
  %229 = add i32 %176, 1
  %230 = icmp eq i32 %229, 18
  %231 = select i1 %230, i32 0, i32 %229
  %232 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %231
  store i32 %179, ptr %232, align 4
  %233 = getelementptr inbounds i8, ptr %232, i32 4
  store i32 %178, ptr %233, align 4
  %234 = getelementptr inbounds i8, ptr %232, i32 8
  store i32 %177, ptr %234, align 4
  %235 = getelementptr inbounds i8, ptr %232, i32 12
  store i64 %175, ptr %235, align 4
  br label %236

236:                                              ; preds = %225, %207
  %237 = load i32, ptr %10, align 4
  %238 = lshr i32 %237, 5
  %239 = getelementptr i32, ptr %195, i32 %238
  %240 = load volatile i32, ptr %239, align 4
  %241 = and i32 %237, 31
  %242 = shl nuw i32 1, %241
  %243 = and i32 %242, %240
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %247, label %245

245:                                              ; preds = %236
  %246 = getelementptr inbounds %struct.sk_msg, ptr %10, i32 0, i32 1
  store ptr null, ptr %246, align 4
  br label %260

247:                                              ; preds = %236
  %248 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %237
  %249 = load i32, ptr %248, align 4
  %250 = and i32 %249, -4
  %251 = inttoptr i32 %250 to ptr
  %252 = tail call ptr @page_address(ptr noundef %251) #31
  %253 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %237, i32 1
  %254 = load i32, ptr %253, align 4
  %255 = getelementptr i8, ptr %252, i32 %254
  %256 = getelementptr inbounds %struct.sk_msg, ptr %10, i32 0, i32 1
  store ptr %255, ptr %256, align 4
  %257 = getelementptr %struct.sk_msg_sg, ptr %10, i32 0, i32 6, i32 %237, i32 2
  %258 = load i32, ptr %257, align 4
  %259 = getelementptr i8, ptr %255, i32 %258
  br label %260

260:                                              ; preds = %247, %245
  %261 = phi ptr [ %259, %247 ], [ null, %245 ]
  %262 = getelementptr inbounds %struct.sk_msg, ptr %10, i32 0, i32 2
  store ptr %261, ptr %262, align 4
  br label %263

263:                                              ; preds = %260, %43, %28, %14, %5
  %264 = phi i64 [ 0, %260 ], [ -22, %5 ], [ 0, %14 ], [ -12, %43 ], [ -22, %28 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  ret i64 %264
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_msg_pop_data(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = alloca %struct.scatterlist, align 4
  %7 = alloca %struct.scatterlist, align 4
  %8 = trunc i64 %0 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %1 to i32
  %11 = trunc i64 %2 to i32
  %12 = add i32 %11, %10
  %13 = icmp eq i64 %3, 0
  br i1 %13, label %14, label %235, !prof !10

14:                                               ; preds = %5
  %15 = load i32, ptr %9, align 4
  %16 = getelementptr inbounds %struct.sk_msg_sg, ptr %9, i32 0, i32 2
  br label %17

17:                                               ; preds = %26, %14
  %18 = phi i32 [ %15, %14 ], [ %29, %26 ]
  %19 = phi i32 [ 0, %14 ], [ %23, %26 ]
  %20 = phi i32 [ 0, %14 ], [ %21, %26 ]
  %21 = add i32 %20, %19
  %22 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %18, i32 2
  %23 = load i32, ptr %22, align 4
  %24 = add i32 %21, %23
  %25 = icmp ugt i32 %24, %10
  br i1 %25, label %32, label %26

26:                                               ; preds = %17
  %27 = add i32 %18, 1
  %28 = icmp eq i32 %27, 18
  %29 = select i1 %28, i32 0, i32 %27
  %30 = load i32, ptr %16, align 4
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %235, label %17

32:                                               ; preds = %17
  %33 = getelementptr inbounds %struct.sk_msg_sg, ptr %9, i32 0, i32 3
  %34 = load i32, ptr %33, align 4
  %35 = icmp ult i32 %12, %34
  br i1 %35, label %36, label %235

36:                                               ; preds = %32
  %37 = load i32, ptr %16, align 4
  %38 = icmp ult i32 %37, %15
  %39 = select i1 %38, i32 18, i32 0
  %40 = sub i32 %37, %15
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %21, %10
  br i1 %42, label %144, label %43

43:                                               ; preds = %36
  %44 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %18
  %45 = sub i32 %23, %11
  %46 = sub i32 %45, %10
  %47 = add i32 %18, 1
  %48 = icmp eq i32 %47, 18
  %49 = select i1 %48, i32 0, i32 %47
  %50 = sub i32 %23, %10
  %51 = icmp ugt i32 %50, %11
  br i1 %51, label %52, label %142

52:                                               ; preds = %43
  %53 = icmp eq i32 %41, 17
  br i1 %53, label %99, label %54

54:                                               ; preds = %52
  store i32 %10, ptr %22, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %7)
  %55 = load i32, ptr %16, align 4
  %56 = add i32 %55, 1
  %57 = icmp eq i32 %56, 18
  %58 = select i1 %57, i32 0, i32 %56
  store i32 %58, ptr %16, align 4
  %59 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %49
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %7, ptr noundef align 4 dereferenceable(20) %59, i32 20, i1 false) #31
  %60 = add i32 %49, 1
  %61 = icmp eq i32 %60, 18
  %62 = select i1 %61, i32 0, i32 %60
  %63 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %62
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %6, ptr noundef align 4 dereferenceable(20) %63, i32 20, i1 false) #31
  %64 = icmp eq i32 %62, %58
  br i1 %64, label %74, label %65

65:                                               ; preds = %65, %54
  %66 = phi i32 [ %70, %65 ], [ %62, %54 ]
  %67 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %66
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(20) %67, ptr noundef nonnull align 4 dereferenceable(20) %7, i32 20, i1 false) #31
  %68 = add i32 %66, 1
  %69 = icmp eq i32 %68, 18
  %70 = select i1 %69, i32 0, i32 %68
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %7, ptr noundef nonnull align 4 dereferenceable(20) %6, i32 20, i1 false) #31
  %71 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %70
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %6, ptr noundef align 4 dereferenceable(20) %71, i32 20, i1 false) #31
  %72 = load i32, ptr %16, align 4
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %54
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %6)
  %75 = load i32, ptr %44, align 4
  %76 = and i32 %75, -4
  %77 = inttoptr i32 %76 to ptr
  %78 = getelementptr inbounds %struct.page, ptr %77, i32 0, i32 1
  %79 = load volatile i32, ptr %78, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82, !prof !10

82:                                               ; preds = %74
  %83 = add i32 %79, -1
  %84 = inttoptr i32 %83 to ptr
  br label %85

85:                                               ; preds = %82, %74
  %86 = phi ptr [ %77, %74 ], [ %84, %82 ]
  %87 = getelementptr inbounds %struct.page, ptr %86, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %87) #31, !srcloc !23
  %88 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %87, ptr %87, i32 1, ptr elementtype(i32) %87) #31, !srcloc !29
  %89 = load i32, ptr %44, align 4
  %90 = and i32 %89, -4
  %91 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %18, i32 1
  %92 = load i32, ptr %91, align 4
  %93 = add i32 %92, %12
  %94 = load i32, ptr %59, align 4
  %95 = and i32 %94, 3
  %96 = or i32 %95, %90
  store i32 %96, ptr %59, align 4
  %97 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %49, i32 1
  store i32 %93, ptr %97, align 4
  %98 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %49, i32 2
  store i32 %46, ptr %98, align 4
  br label %177

99:                                               ; preds = %52
  %100 = add i32 %45, -1
  %101 = icmp ult i32 %100, 4096
  %102 = lshr i32 %100, 12
  %103 = tail call i32 @llvm.ctlz.i32(i32 %102, i1 false) #31, !range !37
  %104 = sub nuw nsw i32 32, %103
  %105 = select i1 %101, i32 0, i32 %104
  %106 = tail call ptr @__alloc_pages(i32 noundef 272928, i32 noundef %105, i32 noundef 0, ptr noundef null) #31
  %107 = icmp eq ptr %106, null
  br i1 %107, label %235, label %108, !prof !18

108:                                              ; preds = %99
  store i32 %10, ptr %22, align 4
  %109 = load i32, ptr %44, align 4
  %110 = and i32 %109, -4
  %111 = inttoptr i32 %110 to ptr
  %112 = tail call ptr @page_address(ptr noundef %111) #31
  %113 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %18, i32 1
  %114 = load i32, ptr %113, align 4
  %115 = getelementptr i8, ptr %112, i32 %114
  %116 = tail call ptr @page_address(ptr noundef nonnull %106) #31
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %116, ptr align 1 %115, i32 %10, i1 false) #31
  %117 = getelementptr i8, ptr %116, i32 %10
  %118 = getelementptr i8, ptr %115, i32 %10
  %119 = getelementptr i8, ptr %118, i32 %11
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %117, ptr align 1 %119, i32 %46, i1 false) #31
  %120 = ptrtoint ptr %106 to i32
  %121 = and i32 %120, 3
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %124, label %123, !prof !10

123:                                              ; preds = %108
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 112, 0\0A.popsection", ""() #31, !srcloc !41
  unreachable

124:                                              ; preds = %108
  %125 = load i32, ptr %44, align 4
  %126 = and i32 %125, 3
  %127 = or i32 %126, %120
  store i32 %127, ptr %44, align 4
  store i32 0, ptr %113, align 4
  store i32 %45, ptr %22, align 4
  %128 = getelementptr inbounds %struct.page, ptr %111, i32 0, i32 1
  %129 = load volatile i32, ptr %128, align 4
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %135, label %132, !prof !10

132:                                              ; preds = %124
  %133 = add i32 %129, -1
  %134 = inttoptr i32 %133 to ptr
  br label %135

135:                                              ; preds = %132, %124
  %136 = phi ptr [ %111, %124 ], [ %134, %132 ]
  %137 = getelementptr inbounds %struct.page, ptr %136, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %137) #31, !srcloc !23
  %138 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %137, ptr %137, i32 1, ptr elementtype(i32) %137) #31, !srcloc !39
  %139 = extractvalue { i32, i32 } %138, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !40
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %177

141:                                              ; preds = %135
  tail call void @__put_page(ptr noundef %136) #31
  br label %177

142:                                              ; preds = %43
  %143 = sub i32 %11, %50
  store i32 %10, ptr %22, align 4
  br label %144

144:                                              ; preds = %142, %36
  %145 = phi i32 [ %18, %36 ], [ %49, %142 ]
  %146 = phi i32 [ %11, %36 ], [ %143, %142 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %177, label %148

148:                                              ; preds = %168, %144
  %149 = phi i32 [ %169, %168 ], [ %146, %144 ]
  %150 = phi i32 [ %175, %168 ], [ %145, %144 ]
  %151 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %150, i32 2
  %152 = load i32, ptr %151, align 4
  %153 = icmp ult i32 %149, %152
  br i1 %153, label %154, label %159

154:                                              ; preds = %148
  %155 = sub i32 %152, %149
  store i32 %155, ptr %151, align 4
  %156 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %150, i32 1
  %157 = load i32, ptr %156, align 4
  %158 = add i32 %157, %149
  store i32 %158, ptr %156, align 4
  br label %177

159:                                              ; preds = %159, %148
  %160 = phi i32 [ %163, %159 ], [ %150, %148 ]
  %161 = add i32 %160, 1
  %162 = icmp eq i32 %161, 18
  %163 = select i1 %162, i32 0, i32 %161
  %164 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %160
  %165 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %163
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(20) %164, ptr noundef align 4 dereferenceable(20) %165, i32 20, i1 false) #31
  %166 = load i32, ptr %16, align 4
  %167 = icmp eq i32 %163, %166
  br i1 %167, label %168, label %159

168:                                              ; preds = %159
  %169 = sub i32 %149, %152
  %170 = icmp eq i32 %163, 0
  %171 = add i32 %163, -1
  %172 = select i1 %170, i32 17, i32 %171
  store i32 %172, ptr %16, align 4
  %173 = add i32 %150, 1
  %174 = icmp eq i32 %173, 18
  %175 = select i1 %174, i32 0, i32 %173
  %176 = icmp eq i32 %169, 0
  br i1 %176, label %177, label %148

177:                                              ; preds = %168, %154, %144, %141, %135, %85
  %178 = getelementptr inbounds %struct.sk_msg, ptr %9, i32 0, i32 8
  %179 = load ptr, ptr %178, align 4
  %180 = getelementptr inbounds %struct.sock_common, ptr %179, i32 0, i32 8
  %181 = load ptr, ptr %180, align 8
  %182 = getelementptr inbounds %struct.proto, ptr %181, i32 0, i32 30
  %183 = load ptr, ptr %182, align 4
  %184 = icmp eq ptr %183, null
  br i1 %184, label %205, label %185

185:                                              ; preds = %177
  %186 = getelementptr inbounds %struct.sock, ptr %179, i32 0, i32 11
  %187 = load i32, ptr %186, align 4
  %188 = add i32 %187, %11
  store i32 %188, ptr %186, align 4
  %189 = getelementptr inbounds %struct.sock, ptr %179, i32 0, i32 12
  %190 = load i32, ptr %189, align 8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %200, label %192, !prof !10

192:                                              ; preds = %185
  %193 = getelementptr inbounds %struct.sock, ptr %179, i32 0, i32 22
  %194 = load i32, ptr %193, align 4
  %195 = getelementptr inbounds %struct.sock, ptr %179, i32 0, i32 9
  %196 = load volatile i32, ptr %195, align 4
  %197 = add i32 %194, %196
  %198 = sub i32 %190, %197
  %199 = tail call i32 @llvm.smax.i32(i32 %198, i32 0) #31
  br label %200

200:                                              ; preds = %192, %185
  %201 = phi i32 [ %199, %192 ], [ 0, %185 ]
  %202 = sub i32 %188, %201
  %203 = icmp sgt i32 %202, 2097151
  br i1 %203, label %204, label %205, !prof !18

204:                                              ; preds = %200
  tail call void @__sk_mem_reclaim(ptr noundef %179, i32 noundef 1048576) #31
  br label %205

205:                                              ; preds = %204, %200, %177
  %206 = load i32, ptr %33, align 4
  %207 = sub i32 %206, %11
  store i32 %207, ptr %33, align 4
  %208 = load i32, ptr %9, align 4
  %209 = getelementptr inbounds %struct.sk_msg_sg, ptr %9, i32 0, i32 5
  %210 = lshr i32 %208, 5
  %211 = getelementptr i32, ptr %209, i32 %210
  %212 = load volatile i32, ptr %211, align 4
  %213 = and i32 %208, 31
  %214 = shl nuw i32 1, %213
  %215 = and i32 %214, %212
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %205
  %218 = getelementptr inbounds %struct.sk_msg, ptr %9, i32 0, i32 1
  store ptr null, ptr %218, align 4
  br label %232

219:                                              ; preds = %205
  %220 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %208
  %221 = load i32, ptr %220, align 4
  %222 = and i32 %221, -4
  %223 = inttoptr i32 %222 to ptr
  %224 = tail call ptr @page_address(ptr noundef %223) #31
  %225 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %208, i32 1
  %226 = load i32, ptr %225, align 4
  %227 = getelementptr i8, ptr %224, i32 %226
  %228 = getelementptr inbounds %struct.sk_msg, ptr %9, i32 0, i32 1
  store ptr %227, ptr %228, align 4
  %229 = getelementptr %struct.sk_msg_sg, ptr %9, i32 0, i32 6, i32 %208, i32 2
  %230 = load i32, ptr %229, align 4
  %231 = getelementptr i8, ptr %227, i32 %230
  br label %232

232:                                              ; preds = %219, %217
  %233 = phi ptr [ %231, %219 ], [ null, %217 ]
  %234 = getelementptr inbounds %struct.sk_msg, ptr %9, i32 0, i32 2
  store ptr %233, ptr %234, align 4
  br label %235

235:                                              ; preds = %232, %99, %32, %26, %5
  %236 = phi i64 [ 0, %232 ], [ -22, %5 ], [ -22, %32 ], [ -12, %99 ], [ -22, %26 ]
  ret i64 %236
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_cgroup_classid(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #9 {
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_route_realm(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #9 {
  ret i64 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_get_hash_recalc(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 768
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  tail call void @__skb_get_hash(ptr noundef %7) #31
  br label %13

13:                                               ; preds = %12, %5
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 7
  %15 = load i32, ptr %14, align 8
  %16 = zext i32 %15 to i64
  ret i64 %16
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_set_hash_invalid(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #7 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 7
  store i32 0, ptr %8, align 8
  %9 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %10 = load i16, ptr %9, align 8
  %11 = and i16 %10, -769
  store i16 %11, ptr %9, align 8
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_set_hash(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #7 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %10 = load i16, ptr %9, align 8
  %11 = or i16 %10, 768
  store i16 %11, ptr %9, align 8
  %12 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 7
  store i32 %8, ptr %12, align 8
  ret i64 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_vlan_push(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i16
  %9 = trunc i64 %2 to i16
  %10 = icmp eq i16 %8, -22392
  %11 = select i1 %10, i16 -22392, i16 129
  %12 = tail call i32 @skb_vlan_push(ptr noundef %7, i16 noundef zeroext %11, i16 noundef zeroext %9) #31
  %13 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.skb_shared_info, ptr %16, i32 0, i32 1
  %18 = load i8, ptr %17, align 1
  %19 = zext i8 %18 to i32
  %20 = sub nsw i32 0, %19
  %21 = getelementptr i8, ptr %14, i32 %20
  %22 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %26 = load i32, ptr %25, align 4
  %27 = sub i32 %24, %26
  %28 = getelementptr i8, ptr %14, i32 %27
  %29 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %28, ptr %29, align 4
  %30 = sext i32 %12 to i64
  ret i64 %30
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_vlan_pop(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 @skb_vlan_pop(ptr noundef %7) #31
  %9 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.skb_shared_info, ptr %12, i32 0, i32 1
  %14 = load i8, ptr %13, align 1
  %15 = zext i8 %14 to i32
  %16 = sub nsw i32 0, %15
  %17 = getelementptr i8, ptr %10, i32 %16
  %18 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %17, ptr %18, align 4
  %19 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %22 = load i32, ptr %21, align 4
  %23 = sub i32 %20, %22
  %24 = getelementptr i8, ptr %10, i32 %23
  %25 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %24, ptr %25, align 4
  %26 = sext i32 %8 to i64
  ret i64 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_change_proto(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i16
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %10, label %154, !prof !10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 16
  %12 = load i16, ptr %11, align 8
  %13 = icmp eq i16 %12, 8
  %14 = icmp eq i16 %8, -8826
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %81

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 18
  %18 = load i16, ptr %17, align 4
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 19
  %21 = load i16, ptr %20, align 2
  %22 = zext i16 %21 to i32
  %23 = sub nsw i32 %19, %22
  %24 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 11
  %25 = load i8, ptr %24, align 2
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.skb_shared_info, ptr %30, i32 0, i32 10
  %32 = load volatile i32, ptr %31, align 4
  %33 = and i32 %32, 65535
  %34 = icmp ne i32 %33, 1
  %35 = zext i1 %34 to i32
  br label %36

36:                                               ; preds = %28, %16
  %37 = phi i32 [ 0, %16 ], [ %35, %28 ]
  %38 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 16
  %41 = load ptr, ptr %40, align 8
  %42 = ptrtoint ptr %39 to i32
  %43 = ptrtoint ptr %41 to i32
  %44 = sub i32 %42, %43
  %45 = tail call i32 @llvm.usub.sat.i32(i32 20, i32 %44) #31
  %46 = or i32 %45, %37
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %36
  %49 = add nuw nsw i32 %45, 63
  %50 = and i32 %49, 64
  %51 = tail call i32 @pskb_expand_head(ptr noundef %7, i32 noundef %50, i32 noundef 0, i32 noundef 2592) #31
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %134, label %53, !prof !18

53:                                               ; preds = %48
  %54 = load i16, ptr %17, align 4
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i16 [ %54, %53 ], [ %18, %36 ]
  %57 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 17
  %58 = load i16, ptr %57, align 2
  %59 = tail call ptr @skb_push(ptr noundef %7, i32 noundef 20) #31
  %60 = load ptr, ptr %38, align 4
  %61 = getelementptr i8, ptr %60, i32 20
  tail call void @llvm.memmove.p0.p0.i32(ptr align 1 %60, ptr align 1 %61, i32 %23, i1 false) #31
  %62 = load ptr, ptr %38, align 4
  %63 = getelementptr i8, ptr %62, i32 %23
  tail call void @llvm.memset.p0.i32(ptr noundef align 1 dereferenceable(20) %63, i8 0, i32 20, i1 false) #31
  %64 = icmp eq i16 %58, %56
  %65 = load i16, ptr %20, align 2
  %66 = add i16 %65, -20
  store i16 %66, ptr %20, align 2
  %67 = load i16, ptr %17, align 4
  %68 = add i16 %67, -20
  store i16 %68, ptr %17, align 4
  br i1 %64, label %69, label %70

69:                                               ; preds = %55
  store i16 %68, ptr %57, align 2
  br label %70

70:                                               ; preds = %69, %55
  %71 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %72 = load ptr, ptr %71, align 4
  %73 = getelementptr inbounds %struct.skb_shared_info, ptr %72, i32 0, i32 4
  %74 = load i16, ptr %73, align 4
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %128, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.skb_shared_info, ptr %72, i32 0, i32 8
  %78 = load i32, ptr %77, align 8
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %128, label %121

81:                                               ; preds = %10
  %82 = icmp eq i16 %12, -8826
  %83 = icmp eq i16 %8, 8
  %84 = and i1 %83, %82
  br i1 %84, label %85, label %134

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 18
  %87 = load i16, ptr %86, align 4
  %88 = zext i16 %87 to i32
  %89 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 19
  %90 = load i16, ptr %89, align 2
  %91 = zext i16 %90 to i32
  %92 = sub nsw i32 %88, %91
  %93 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 11
  %94 = load i8, ptr %93, align 2
  %95 = and i8 %94, 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %85
  %98 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %99 = load ptr, ptr %98, align 4
  %100 = getelementptr inbounds %struct.skb_shared_info, ptr %99, i32 0, i32 10
  %101 = load volatile i32, ptr %100, align 4
  %102 = and i32 %101, 65535
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = tail call i32 @pskb_expand_head(ptr noundef %7, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #31
  %106 = icmp slt i32 %105, 0
  br i1 %106, label %134, label %107, !prof !18

107:                                              ; preds = %104, %97, %85
  %108 = tail call fastcc i32 @bpf_skb_net_hdr_pop(ptr noundef %7, i32 noundef %92, i32 noundef 20) #31
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %134, label %110, !prof !18

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %112 = load ptr, ptr %111, align 4
  %113 = getelementptr inbounds %struct.skb_shared_info, ptr %112, i32 0, i32 4
  %114 = load i16, ptr %113, align 4
  %115 = icmp eq i16 %114, 0
  br i1 %115, label %128, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.skb_shared_info, ptr %112, i32 0, i32 8
  %118 = load i32, ptr %117, align 8
  %119 = and i32 %118, 16
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %128, label %121

121:                                              ; preds = %116, %76
  %122 = phi i32 [ %78, %76 ], [ %118, %116 ]
  %123 = phi i32 [ 16, %76 ], [ 1, %116 ]
  %124 = phi ptr [ %77, %76 ], [ %117, %116 ]
  %125 = phi i16 [ -8826, %76 ], [ 8, %116 ]
  %126 = and i32 %122, -18
  %127 = or i32 %126, %123
  store i32 %127, ptr %124, align 8
  br label %128

128:                                              ; preds = %121, %116, %110, %76, %70
  %129 = phi i16 [ -8826, %76 ], [ -8826, %70 ], [ 8, %116 ], [ 8, %110 ], [ %125, %121 ]
  store i16 %129, ptr %11, align 8
  %130 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 7
  store i32 0, ptr %130, align 8
  %131 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %132 = load i16, ptr %131, align 8
  %133 = and i16 %132, -769
  store i16 %133, ptr %131, align 8
  br label %134

134:                                              ; preds = %128, %107, %104, %81, %48
  %135 = phi i32 [ -524, %81 ], [ %51, %48 ], [ %105, %104 ], [ %108, %107 ], [ 0, %128 ]
  %136 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %137 = load ptr, ptr %136, align 4
  %138 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %139 = load ptr, ptr %138, align 4
  %140 = getelementptr inbounds %struct.skb_shared_info, ptr %139, i32 0, i32 1
  %141 = load i8, ptr %140, align 1
  %142 = zext i8 %141 to i32
  %143 = sub nsw i32 0, %142
  %144 = getelementptr i8, ptr %137, i32 %143
  %145 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %144, ptr %145, align 4
  %146 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %147 = load i32, ptr %146, align 8
  %148 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %149 = load i32, ptr %148, align 4
  %150 = sub i32 %147, %149
  %151 = getelementptr i8, ptr %137, i32 %150
  %152 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %151, ptr %152, align 4
  %153 = sext i32 %135 to i64
  br label %154

154:                                              ; preds = %134, %5
  %155 = phi i64 [ %153, %134 ], [ -22, %5 ]
  ret i64 %155
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skb_change_type(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #7 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 4
  %11 = icmp ne i16 %10, 0
  %12 = and i64 %1, 4294967292
  %13 = icmp ne i64 %12, 0
  %14 = or i1 %13, %11
  br i1 %14, label %19, label %15, !prof !42

15:                                               ; preds = %5
  %16 = trunc i64 %1 to i16
  %17 = and i16 %9, -8
  %18 = or i16 %17, %16
  store i16 %18, ptr %8, align 8
  br label %19

19:                                               ; preds = %15, %5
  %20 = phi i64 [ 0, %15 ], [ -22, %5 ]
  ret i64 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @sk_skb_adjust_room(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = icmp slt i32 %8, 0
  %11 = tail call i32 @llvm.abs.i32(i32 %8, i1 false) #31
  %12 = icmp ne i64 %3, 0
  %13 = icmp ne i32 %9, 0
  %14 = or i1 %13, %12
  br i1 %14, label %103, label %15, !prof !18

15:                                               ; preds = %5
  %16 = icmp ugt i32 %11, 4095
  br i1 %16, label %103, label %17, !prof !18

17:                                               ; preds = %15
  br i1 %10, label %60, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 11
  %20 = load i8, ptr %19, align 2
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.skb_shared_info, ptr %25, i32 0, i32 10
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %27, 65535
  %29 = icmp ne i32 %28, 1
  %30 = zext i1 %29 to i32
  br label %31

31:                                               ; preds = %23, %18
  %32 = phi i32 [ 0, %18 ], [ %30, %23 ]
  %33 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 16
  %36 = load ptr, ptr %35, align 8
  %37 = ptrtoint ptr %34 to i32
  %38 = ptrtoint ptr %36 to i32
  %39 = sub i32 %37, %38
  %40 = tail call i32 @llvm.usub.sat.i32(i32 %8, i32 %39) #31
  %41 = or i32 %40, %32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %31
  %44 = add nuw i32 %40, 63
  %45 = and i32 %44, -64
  %46 = tail call i32 @pskb_expand_head(ptr noundef %7, i32 noundef %45, i32 noundef 0, i32 noundef 2592) #31
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %50, label %48, !prof !18

48:                                               ; preds = %43
  %49 = load ptr, ptr %33, align 4
  br label %52

50:                                               ; preds = %43
  %51 = sext i32 %46 to i64
  br label %103

52:                                               ; preds = %48, %31
  %53 = phi ptr [ %49, %48 ], [ %34, %31 ]
  %54 = phi i32 [ %46, %48 ], [ 0, %31 ]
  %55 = sub nsw i32 0, %11
  %56 = getelementptr i8, ptr %53, i32 %55
  store ptr %56, ptr %33, align 4
  %57 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %58 = load i32, ptr %57, align 8
  %59 = add i32 %58, %11
  store i32 %59, ptr %57, align 8
  tail call void @llvm.memset.p0.i32(ptr align 1 %56, i8 0, i32 %11, i1 false) #31
  br label %86

60:                                               ; preds = %17
  %61 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %62 = load i32, ptr %61, align 8
  %63 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %64 = load i32, ptr %63, align 4
  %65 = sub i32 %62, %64
  %66 = icmp ugt i32 %11, %65
  br i1 %66, label %67, label %76, !prof !18

67:                                               ; preds = %60
  %68 = icmp ult i32 %62, %11
  br i1 %68, label %103, label %69, !prof !18

69:                                               ; preds = %67
  %70 = sub i32 %11, %65
  %71 = tail call ptr @__pskb_pull_tail(ptr noundef %7, i32 noundef %70) #31
  %72 = icmp eq ptr %71, null
  br i1 %72, label %103, label %73, !prof !18

73:                                               ; preds = %69
  %74 = load i32, ptr %61, align 8
  %75 = load i32, ptr %63, align 4
  br label %76

76:                                               ; preds = %73, %60
  %77 = phi i32 [ %75, %73 ], [ %64, %60 ]
  %78 = phi i32 [ %74, %73 ], [ %62, %60 ]
  %79 = sub i32 %78, %11
  store i32 %79, ptr %61, align 8
  %80 = icmp ult i32 %79, %77
  br i1 %80, label %81, label %82, !prof !18

81:                                               ; preds = %76
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #31, !srcloc !36
  unreachable

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %84 = load ptr, ptr %83, align 4
  %85 = getelementptr i8, ptr %84, i32 %11
  store ptr %85, ptr %83, align 4
  br label %86

86:                                               ; preds = %82, %52
  %87 = phi i32 [ 0, %82 ], [ %54, %52 ]
  %88 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 1
  %89 = load ptr, ptr %88, align 4
  %90 = getelementptr inbounds %struct.inet_connection_sock, ptr %89, i32 0, i32 13
  %91 = load ptr, ptr %90, align 8
  %92 = icmp eq ptr %91, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct.tls_context, ptr %91, i32 0, i32 5
  %95 = load ptr, ptr %94, align 4
  %96 = icmp eq ptr %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = getelementptr %struct.sk_buff, ptr %7, i32 0, i32 3, i32 20
  %99 = load i32, ptr %98, align 4
  %100 = add i32 %99, %8
  store i32 %100, ptr %98, align 4
  br label %101

101:                                              ; preds = %97, %93, %86
  %102 = zext i32 %87 to i64
  br label %103

103:                                              ; preds = %101, %69, %67, %50, %15, %5
  %104 = phi i64 [ %102, %101 ], [ %51, %50 ], [ -22, %5 ], [ -14, %15 ], [ -12, %69 ], [ -12, %67 ]
  ret i64 %104
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_adjust_room(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = icmp slt i32 %8, 0
  %11 = tail call i32 @llvm.abs.i32(i32 %8, i1 false) #31
  %12 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 16
  %13 = load i16, ptr %12, align 8
  %14 = icmp eq i16 %13, -8826
  %15 = select i1 %14, i32 40, i32 -1
  %16 = icmp eq i16 %13, 8
  %17 = select i1 %16, i32 20, i32 %15
  %18 = and i64 %3, 72057594037927808
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %348, !prof !10

20:                                               ; preds = %5
  %21 = icmp ugt i32 %11, 4095
  br i1 %21, label %348, label %22, !prof !18

22:                                               ; preds = %20
  switch i16 %13, label %348 [
    i16 -8826, label %23
    i16 8, label %23
  ]

23:                                               ; preds = %22, %22
  %24 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 18
  %25 = load i16, ptr %24, align 4
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 19
  %28 = load i16, ptr %27, align 2
  %29 = zext i16 %28 to i32
  %30 = sub nsw i32 %26, %29
  switch i32 %9, label %348 [
    i32 0, label %31
    i32 1, label %33
  ]

31:                                               ; preds = %23
  %32 = add nsw i32 %30, %17
  br label %33

33:                                               ; preds = %31, %23
  %34 = phi i32 [ %30, %23 ], [ %32, %31 ]
  %35 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 16
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %40 = load ptr, ptr %39, align 4
  %41 = ptrtoint ptr %40 to i32
  br i1 %10, label %42, label %51

42:                                               ; preds = %33
  %43 = getelementptr i8, ptr %38, i32 %26
  %44 = ptrtoint ptr %43 to i32
  %45 = sub i32 %41, %44
  %46 = add i32 %45, %36
  %47 = icmp ule i32 %46, %11
  %48 = sub i32 %46, %11
  %49 = icmp ult i32 %48, %17
  %50 = select i1 %47, i1 true, i1 %49
  br i1 %50, label %348, label %66

51:                                               ; preds = %33
  %52 = add i32 %36, %11
  %53 = icmp ugt i32 %52, 16128
  %54 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %55 = load ptr, ptr %54, align 4
  %56 = getelementptr inbounds %struct.skb_shared_info, ptr %55, i32 0, i32 4
  %57 = load i16, ptr %56, align 4
  br i1 %53, label %58, label %121

58:                                               ; preds = %51
  %59 = icmp eq i16 %57, 0
  br i1 %59, label %348, label %60

60:                                               ; preds = %58
  %61 = lshr i64 %3, 56
  %62 = trunc i64 %61 to i32
  %63 = and i64 %3, 6
  %64 = icmp eq i64 %63, 0
  %65 = trunc i64 %61 to i16
  br label %128

66:                                               ; preds = %42
  %67 = and i64 %3, -34
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %330, !prof !10

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %71 = load ptr, ptr %70, align 4
  %72 = getelementptr inbounds %struct.skb_shared_info, ptr %71, i32 0, i32 4
  %73 = load i16, ptr %72, align 4
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.skb_shared_info, ptr %71, i32 0, i32 8
  %77 = load i32, ptr %76, align 8
  %78 = and i32 %77, 17
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %75
  %81 = and i32 %77, 131072
  %82 = icmp eq i32 %81, 0
  %83 = and i64 %3, 1
  %84 = icmp eq i64 %83, 0
  %85 = or i1 %84, %82
  br i1 %85, label %330, label %86

86:                                               ; preds = %80, %75, %69
  %87 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 11
  %88 = load i8, ptr %87, align 2
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.skb_shared_info, ptr %71, i32 0, i32 10
  %93 = load volatile i32, ptr %92, align 4
  %94 = and i32 %93, 65535
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %99, label %96

96:                                               ; preds = %91
  %97 = tail call i32 @pskb_expand_head(ptr noundef %7, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #31
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %330, label %99, !prof !18

99:                                               ; preds = %96, %91, %86
  %100 = tail call fastcc i32 @bpf_skb_net_hdr_pop(ptr noundef %7, i32 noundef %34, i32 noundef %11) #31
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %330, label %102, !prof !18

102:                                              ; preds = %99
  %103 = load ptr, ptr %70, align 4
  %104 = getelementptr inbounds %struct.skb_shared_info, ptr %103, i32 0, i32 4
  %105 = load i16, ptr %104, align 4
  %106 = icmp eq i16 %105, 0
  br i1 %106, label %317, label %107

107:                                              ; preds = %102
  %108 = and i64 %3, 1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %310

110:                                              ; preds = %107
  %111 = trunc i32 %11 to i16
  %112 = icmp eq i16 %105, -1
  %113 = load i1, ptr @skb_increase_gso_size.__already_done, align 1
  %114 = xor i1 %113, true
  %115 = select i1 %112, i1 %114, i1 false
  br i1 %115, label %116, label %117, !prof !18

116:                                              ; preds = %110
  store i1 true, ptr @skb_increase_gso_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 4654, i32 noundef 9, ptr noundef null) #31
  br label %117

117:                                              ; preds = %116, %110
  br i1 %112, label %310, label %118

118:                                              ; preds = %117
  %119 = load i16, ptr %104, align 4
  %120 = add i16 %119, %111
  store i16 %120, ptr %104, align 4
  br label %310

121:                                              ; preds = %51
  %122 = lshr i64 %3, 56
  %123 = trunc i64 %122 to i32
  %124 = and i64 %3, 6
  %125 = icmp eq i64 %124, 0
  %126 = icmp eq i16 %57, 0
  %127 = trunc i64 %122 to i16
  br i1 %126, label %143, label %128

128:                                              ; preds = %121, %60
  %129 = phi i1 [ %64, %60 ], [ %125, %121 ]
  %130 = phi i64 [ %63, %60 ], [ %124, %121 ]
  %131 = phi i32 [ %62, %60 ], [ %123, %121 ]
  %132 = phi i16 [ %65, %60 ], [ %127, %121 ]
  %133 = getelementptr inbounds %struct.skb_shared_info, ptr %55, i32 0, i32 8
  %134 = load i32, ptr %133, align 8
  %135 = and i32 %134, 17
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %128
  %138 = and i32 %134, 131072
  %139 = icmp eq i32 %138, 0
  %140 = and i64 %3, 1
  %141 = icmp eq i64 %140, 0
  %142 = or i1 %141, %139
  br i1 %142, label %330, label %143

143:                                              ; preds = %137, %128, %121
  %144 = phi i1 [ %129, %137 ], [ %129, %128 ], [ %125, %121 ]
  %145 = phi i64 [ %130, %137 ], [ %130, %128 ], [ %124, %121 ]
  %146 = phi i32 [ %131, %137 ], [ %131, %128 ], [ %123, %121 ]
  %147 = phi i16 [ %132, %137 ], [ %132, %128 ], [ %127, %121 ]
  %148 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 11
  %149 = load i8, ptr %148, align 2
  %150 = and i8 %149, 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %143
  %153 = getelementptr inbounds %struct.skb_shared_info, ptr %55, i32 0, i32 10
  %154 = load volatile i32, ptr %153, align 4
  %155 = and i32 %154, 65535
  %156 = ashr i32 %154, 16
  %157 = sub nsw i32 %155, %156
  %158 = icmp ne i32 %157, 1
  %159 = zext i1 %158 to i32
  br label %160

160:                                              ; preds = %152, %143
  %161 = phi i32 [ %159, %152 ], [ 0, %143 ]
  %162 = ptrtoint ptr %38 to i32
  %163 = sub i32 %41, %162
  %164 = tail call i32 @llvm.usub.sat.i32(i32 %11, i32 %163) #31
  %165 = or i32 %161, %164
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %172, label %167

167:                                              ; preds = %160
  %168 = add nuw nsw i32 %164, 63
  %169 = and i32 %168, -64
  %170 = tail call i32 @pskb_expand_head(ptr noundef %7, i32 noundef %169, i32 noundef 0, i32 noundef 2592) #31
  %171 = icmp slt i32 %170, 0
  br i1 %171, label %330, label %172, !prof !18

172:                                              ; preds = %167, %160
  br i1 %144, label %173, label %177

173:                                              ; preds = %172
  %174 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 17
  %175 = load i16, ptr %174, align 2
  %176 = load i16, ptr %24, align 4
  br label %205

177:                                              ; preds = %172
  %178 = load i16, ptr %12, align 8
  switch i16 %178, label %330 [
    i16 8, label %179
    i16 -8826, label %179
  ]

179:                                              ; preds = %177, %177
  %180 = icmp eq i64 %145, 6
  %181 = and i64 %3, 24
  %182 = icmp eq i64 %181, 24
  %183 = or i1 %182, %180
  br i1 %183, label %330, label %184

184:                                              ; preds = %179
  %185 = and i64 %3, 64
  %186 = icmp ne i64 %185, 0
  %187 = icmp ult i32 %146, 14
  %188 = and i1 %186, %187
  br i1 %188, label %330, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %191 = load i16, ptr %190, align 8
  %192 = and i16 %191, 8192
  %193 = icmp eq i16 %192, 0
  br i1 %193, label %194, label %330

194:                                              ; preds = %189
  %195 = icmp ult i32 %11, %146
  br i1 %195, label %330, label %196

196:                                              ; preds = %194
  %197 = load i16, ptr %24, align 4
  %198 = zext i16 %197 to i32
  %199 = load i16, ptr %27, align 2
  %200 = zext i16 %199 to i32
  %201 = sub nsw i32 %198, %200
  %202 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 17
  %203 = load i16, ptr %202, align 2
  %204 = and i32 %201, 65535
  br label %205

205:                                              ; preds = %196, %173
  %206 = phi i16 [ %197, %196 ], [ %176, %173 ]
  %207 = phi i16 [ %203, %196 ], [ %175, %173 ]
  %208 = phi i32 [ %204, %196 ], [ 0, %173 ]
  %209 = phi i16 [ %197, %196 ], [ 0, %173 ]
  %210 = phi i16 [ %203, %196 ], [ 0, %173 ]
  %211 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 17
  %212 = tail call ptr @skb_push(ptr noundef %7, i32 noundef %11) #31
  %213 = load ptr, ptr %39, align 4
  %214 = getelementptr i8, ptr %213, i32 %11
  tail call void @llvm.memmove.p0.p0.i32(ptr align 1 %213, ptr align 1 %214, i32 %34, i1 false) #31
  %215 = load ptr, ptr %39, align 4
  %216 = getelementptr i8, ptr %215, i32 %34
  tail call void @llvm.memset.p0.i32(ptr align 1 %216, i8 0, i32 %11, i1 false) #31
  %217 = icmp eq i16 %207, %206
  %218 = load i16, ptr %27, align 2
  %219 = trunc i32 %11 to i16
  %220 = sub i16 %218, %219
  store i16 %220, ptr %27, align 2
  %221 = load i16, ptr %24, align 4
  %222 = sub i16 %221, %219
  store i16 %222, ptr %24, align 4
  br i1 %217, label %223, label %224

223:                                              ; preds = %205
  store i16 %222, ptr %211, align 2
  br label %224

224:                                              ; preds = %223, %205
  br i1 %144, label %291, label %225

225:                                              ; preds = %224
  %226 = sub i16 %209, %147
  %227 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 15
  store i16 %226, ptr %227, align 2
  %228 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 14
  store i16 %209, ptr %228, align 4
  %229 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 13
  store i16 %210, ptr %229, align 2
  %230 = and i64 %3, 64
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %225
  %233 = load i16, ptr %12, align 8
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i16 [ %233, %232 ], [ 22629, %225 ]
  %236 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 12
  store i16 %235, ptr %236, align 8
  %237 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 3
  %238 = load i16, ptr %237, align 2
  %239 = and i16 %238, -513
  store i16 %239, ptr %237, align 2
  %240 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %241 = load i16, ptr %240, align 8
  %242 = or i16 %241, 8192
  store i16 %242, ptr %240, align 8
  %243 = load ptr, ptr %39, align 4
  %244 = load ptr, ptr %37, align 8
  %245 = ptrtoint ptr %243 to i32
  %246 = ptrtoint ptr %244 to i32
  %247 = sub i32 %245, %246
  %248 = trunc i32 %247 to i16
  %249 = trunc i32 %208 to i16
  %250 = add i16 %248, %249
  store i16 %250, ptr %24, align 4
  %251 = and i64 %3, 16
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %269

253:                                              ; preds = %234
  %254 = and i64 %3, 8
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %263

256:                                              ; preds = %253
  %257 = and i64 %3, 4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %263

259:                                              ; preds = %256
  %260 = and i64 %3, 2
  %261 = icmp eq i64 %260, 0
  %262 = select i1 %261, i32 2, i32 258
  br label %263

263:                                              ; preds = %259, %256, %253
  %264 = phi i32 [ 66, %253 ], [ 514, %256 ], [ %262, %259 ]
  %265 = and i64 %3, 24
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %263
  %268 = and i64 %3, 4
  br label %277

269:                                              ; preds = %263, %234
  %270 = phi i32 [ %264, %263 ], [ 1026, %234 ]
  %271 = and i64 %3, 4
  %272 = icmp eq i64 %271, 0
  %273 = select i1 %272, i32 20, i32 40
  %274 = add nuw nsw i32 %208, %273
  %275 = trunc i32 %274 to i16
  %276 = add i16 %248, %275
  store i16 %276, ptr %211, align 2
  br label %277

277:                                              ; preds = %269, %267
  %278 = phi i64 [ %268, %267 ], [ %271, %269 ]
  %279 = phi i32 [ %264, %267 ], [ %270, %269 ]
  %280 = load i16, ptr %12, align 8
  %281 = icmp ne i16 %280, 8
  %282 = icmp eq i64 %278, 0
  %283 = or i1 %282, %281
  br i1 %283, label %284, label %289

284:                                              ; preds = %277
  %285 = icmp ne i16 %280, -8826
  %286 = and i64 %3, 2
  %287 = icmp eq i64 %286, 0
  %288 = or i1 %287, %285
  br i1 %288, label %291, label %289

289:                                              ; preds = %284, %277
  %290 = phi i16 [ -8826, %277 ], [ 8, %284 ]
  store i16 %290, ptr %12, align 8
  br label %291

291:                                              ; preds = %289, %284, %224
  %292 = phi i32 [ %279, %284 ], [ 2, %224 ], [ %279, %289 ]
  %293 = load ptr, ptr %54, align 4
  %294 = getelementptr inbounds %struct.skb_shared_info, ptr %293, i32 0, i32 4
  %295 = load i16, ptr %294, align 4
  %296 = icmp eq i16 %295, 0
  br i1 %296, label %317, label %297

297:                                              ; preds = %291
  %298 = and i64 %3, 1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %310

300:                                              ; preds = %297
  %301 = icmp eq i16 %295, -1
  %302 = load i1, ptr @skb_decrease_gso_size.__already_done, align 1
  %303 = xor i1 %302, true
  %304 = select i1 %301, i1 %303, i1 false
  br i1 %304, label %305, label %306, !prof !18

305:                                              ; preds = %300
  store i1 true, ptr @skb_decrease_gso_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 4662, i32 noundef 9, ptr noundef null) #31
  br label %306

306:                                              ; preds = %305, %300
  br i1 %301, label %310, label %307

307:                                              ; preds = %306
  %308 = load i16, ptr %294, align 4
  %309 = sub i16 %308, %219
  store i16 %309, ptr %294, align 4
  br label %310

310:                                              ; preds = %307, %306, %297, %118, %117, %107
  %311 = phi ptr [ %103, %118 ], [ %103, %117 ], [ %103, %107 ], [ %293, %307 ], [ %293, %306 ], [ %293, %297 ]
  %312 = phi i32 [ 2, %118 ], [ 2, %117 ], [ 2, %107 ], [ %292, %307 ], [ %292, %306 ], [ %292, %297 ]
  %313 = getelementptr inbounds %struct.skb_shared_info, ptr %311, i32 0, i32 8
  %314 = load i32, ptr %313, align 8
  %315 = or i32 %314, %312
  store i32 %315, ptr %313, align 8
  %316 = getelementptr inbounds %struct.skb_shared_info, ptr %311, i32 0, i32 5
  store i16 0, ptr %316, align 2
  br label %317

317:                                              ; preds = %310, %291, %102
  %318 = and i64 %3, 32
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %330

320:                                              ; preds = %317
  %321 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13
  %322 = load i16, ptr %321, align 8
  %323 = and i16 %322, 96
  %324 = icmp eq i16 %323, 32
  br i1 %324, label %325, label %330

325:                                              ; preds = %320
  %326 = and i16 %322, -97
  store i16 %326, ptr %321, align 8
  %327 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 3
  %328 = load i16, ptr %327, align 2
  %329 = and i16 %328, -13
  store i16 %329, ptr %327, align 2
  br label %330

330:                                              ; preds = %325, %320, %317, %194, %189, %184, %179, %177, %167, %137, %99, %96, %80, %66
  %331 = phi i32 [ 0, %317 ], [ 0, %320 ], [ 0, %325 ], [ -22, %194 ], [ -114, %189 ], [ -22, %184 ], [ -22, %179 ], [ -524, %177 ], [ %170, %167 ], [ -524, %137 ], [ %100, %99 ], [ %97, %96 ], [ -524, %80 ], [ -22, %66 ]
  %332 = load ptr, ptr %39, align 4
  %333 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %334 = load ptr, ptr %333, align 4
  %335 = getelementptr inbounds %struct.skb_shared_info, ptr %334, i32 0, i32 1
  %336 = load i8, ptr %335, align 1
  %337 = zext i8 %336 to i32
  %338 = sub nsw i32 0, %337
  %339 = getelementptr i8, ptr %332, i32 %338
  %340 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %339, ptr %340, align 4
  %341 = load i32, ptr %35, align 8
  %342 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %343 = load i32, ptr %342, align 4
  %344 = sub i32 %341, %343
  %345 = getelementptr i8, ptr %332, i32 %344
  %346 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %345, ptr %346, align 4
  %347 = sext i32 %331 to i64
  br label %348

348:                                              ; preds = %330, %58, %42, %23, %22, %20, %5
  %349 = phi i64 [ %347, %330 ], [ -22, %5 ], [ -14, %20 ], [ -524, %22 ], [ -524, %23 ], [ -524, %58 ], [ -524, %42 ]
  ret i64 %349
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_change_tail(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = tail call fastcc i32 @__bpf_skb_change_tail(ptr noundef %7, i32 noundef %8, i64 noundef %2) #31
  %10 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.skb_shared_info, ptr %13, i32 0, i32 1
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i32
  %17 = sub nsw i32 0, %16
  %18 = getelementptr i8, ptr %11, i32 %17
  %19 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %18, ptr %19, align 4
  %20 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = sub i32 %21, %23
  %25 = getelementptr i8, ptr %11, i32 %24
  %26 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %25, ptr %26, align 4
  %27 = sext i32 %9 to i64
  ret i64 %27
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @sk_skb_change_tail(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = tail call fastcc i32 @__bpf_skb_change_tail(ptr noundef %7, i32 noundef %8, i64 noundef %2) #31
  %10 = sext i32 %9 to i64
  ret i64 %10
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_change_head(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %11, label %71, !prof !10

11:                                               ; preds = %5
  %12 = load i32, ptr %9, align 8
  %13 = add i32 %12, %8
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.skb_shared_info, ptr %15, i32 0, i32 4
  %17 = load i16, ptr %16, align 4
  %18 = icmp eq i16 %17, 0
  %19 = icmp ugt i32 %13, 16128
  %20 = select i1 %18, i1 %19, i1 false
  %21 = icmp ult i32 %13, %12
  %22 = select i1 %20, i1 true, i1 %21
  br i1 %22, label %71, label %23, !prof !43

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 11
  %25 = load i8, ptr %24, align 2
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.skb_shared_info, ptr %15, i32 0, i32 10
  %30 = load volatile i32, ptr %29, align 4
  %31 = and i32 %30, 65535
  %32 = icmp ne i32 %31, 1
  %33 = zext i1 %32 to i32
  br label %34

34:                                               ; preds = %28, %23
  %35 = phi i32 [ 0, %23 ], [ %33, %28 ]
  %36 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 16
  %39 = load ptr, ptr %38, align 8
  %40 = ptrtoint ptr %37 to i32
  %41 = ptrtoint ptr %39 to i32
  %42 = sub i32 %40, %41
  %43 = tail call i32 @llvm.usub.sat.i32(i32 %8, i32 %42) #31
  %44 = or i32 %43, %35
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %34
  %47 = add i32 %43, 63
  %48 = and i32 %47, -64
  %49 = tail call i32 @pskb_expand_head(ptr noundef %7, i32 noundef %48, i32 noundef 0, i32 noundef 2592) #31
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %71, !prof !10

51:                                               ; preds = %46
  %52 = load ptr, ptr %36, align 4
  %53 = load i32, ptr %9, align 8
  %54 = add i32 %53, %8
  br label %55

55:                                               ; preds = %51, %34
  %56 = phi i32 [ %54, %51 ], [ %13, %34 ]
  %57 = phi ptr [ %52, %51 ], [ %37, %34 ]
  %58 = sub i32 0, %8
  %59 = getelementptr i8, ptr %57, i32 %58
  store ptr %59, ptr %36, align 4
  store i32 %56, ptr %9, align 8
  tail call void @llvm.memset.p0.i32(ptr align 1 %59, i8 0, i32 %8, i1 false) #31
  %60 = load ptr, ptr %36, align 4
  %61 = load ptr, ptr %38, align 8
  %62 = ptrtoint ptr %60 to i32
  %63 = ptrtoint ptr %61 to i32
  %64 = sub i32 %62, %63
  %65 = trunc i32 %64 to i16
  %66 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 19
  store i16 %65, ptr %66, align 2
  %67 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 18
  %68 = load i16, ptr %67, align 4
  %69 = sub i16 %68, %65
  %70 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 7
  store i16 %69, ptr %70, align 8
  br label %71

71:                                               ; preds = %55, %46, %11, %5
  %72 = phi i32 [ 0, %55 ], [ %49, %46 ], [ -22, %5 ], [ -22, %11 ]
  %73 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %74 = load ptr, ptr %73, align 4
  %75 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %76 = load ptr, ptr %75, align 4
  %77 = getelementptr inbounds %struct.skb_shared_info, ptr %76, i32 0, i32 1
  %78 = load i8, ptr %77, align 1
  %79 = zext i8 %78 to i32
  %80 = sub nsw i32 0, %79
  %81 = getelementptr i8, ptr %74, i32 %80
  %82 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 28
  store ptr %81, ptr %82, align 4
  %83 = load i32, ptr %9, align 8
  %84 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 6
  %85 = load i32, ptr %84, align 4
  %86 = sub i32 %83, %85
  %87 = getelementptr i8, ptr %74, i32 %86
  %88 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 32
  store ptr %87, ptr %88, align 4
  %89 = sext i32 %72 to i64
  ret i64 %89
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @sk_skb_change_head(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %11, label %71, !prof !10

11:                                               ; preds = %5
  %12 = load i32, ptr %9, align 8
  %13 = add i32 %12, %8
  %14 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.skb_shared_info, ptr %15, i32 0, i32 4
  %17 = load i16, ptr %16, align 4
  %18 = icmp eq i16 %17, 0
  %19 = icmp ugt i32 %13, 16128
  %20 = select i1 %18, i1 %19, i1 false
  %21 = icmp ult i32 %13, %12
  %22 = select i1 %20, i1 true, i1 %21
  br i1 %22, label %71, label %23, !prof !43

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 11
  %25 = load i8, ptr %24, align 2
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.skb_shared_info, ptr %15, i32 0, i32 10
  %30 = load volatile i32, ptr %29, align 4
  %31 = and i32 %30, 65535
  %32 = icmp ne i32 %31, 1
  %33 = zext i1 %32 to i32
  br label %34

34:                                               ; preds = %28, %23
  %35 = phi i32 [ 0, %23 ], [ %33, %28 ]
  %36 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 17
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 16
  %39 = load ptr, ptr %38, align 8
  %40 = ptrtoint ptr %37 to i32
  %41 = ptrtoint ptr %39 to i32
  %42 = sub i32 %40, %41
  %43 = tail call i32 @llvm.usub.sat.i32(i32 %8, i32 %42) #31
  %44 = or i32 %43, %35
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %34
  %47 = add i32 %43, 63
  %48 = and i32 %47, -64
  %49 = tail call i32 @pskb_expand_head(ptr noundef %7, i32 noundef %48, i32 noundef 0, i32 noundef 2592) #31
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %71, !prof !10

51:                                               ; preds = %46
  %52 = load ptr, ptr %36, align 4
  %53 = load i32, ptr %9, align 8
  %54 = add i32 %53, %8
  br label %55

55:                                               ; preds = %51, %34
  %56 = phi i32 [ %54, %51 ], [ %13, %34 ]
  %57 = phi ptr [ %52, %51 ], [ %37, %34 ]
  %58 = sub i32 0, %8
  %59 = getelementptr i8, ptr %57, i32 %58
  store ptr %59, ptr %36, align 4
  store i32 %56, ptr %9, align 8
  tail call void @llvm.memset.p0.i32(ptr align 1 %59, i8 0, i32 %8, i1 false) #31
  %60 = load ptr, ptr %36, align 4
  %61 = load ptr, ptr %38, align 8
  %62 = ptrtoint ptr %60 to i32
  %63 = ptrtoint ptr %61 to i32
  %64 = sub i32 %62, %63
  %65 = trunc i32 %64 to i16
  %66 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 19
  store i16 %65, ptr %66, align 2
  %67 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 13, i32 0, i32 18
  %68 = load i16, ptr %67, align 4
  %69 = sub i16 %68, %65
  %70 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 7
  store i16 %69, ptr %70, align 8
  br label %71

71:                                               ; preds = %55, %46, %11, %5
  %72 = phi i32 [ 0, %55 ], [ %49, %46 ], [ -22, %5 ], [ -22, %11 ]
  %73 = sext i32 %72 to i64
  ret i64 %73
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_xdp_adjust_head(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #5 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 3
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr i8, ptr %10, i32 24
  %12 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %7, align 4
  %15 = icmp ugt ptr %13, %14
  %16 = ptrtoint ptr %14 to i32
  %17 = ptrtoint ptr %13 to i32
  %18 = sub i32 %16, %17
  %19 = select i1 %15, i32 0, i32 %18
  %20 = getelementptr i8, ptr %11, i32 %19
  %21 = getelementptr i8, ptr %14, i32 %8
  %22 = icmp ult ptr %21, %20
  br i1 %22, label %36, label %23, !prof !18

23:                                               ; preds = %5
  %24 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 1
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr i8, ptr %25, i32 -14
  %27 = icmp ugt ptr %21, %26
  br i1 %27, label %36, label %28, !prof !18

28:                                               ; preds = %23
  %29 = icmp eq i32 %19, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  %31 = getelementptr i8, ptr %13, i32 %8
  tail call void @llvm.memmove.p0.p0.i32(ptr align 1 %31, ptr align 1 %13, i32 %19, i1 false) #31
  %32 = load ptr, ptr %12, align 4
  br label %33

33:                                               ; preds = %30, %28
  %34 = phi ptr [ %32, %30 ], [ %13, %28 ]
  %35 = getelementptr i8, ptr %34, i32 %8
  store ptr %35, ptr %12, align 4
  store ptr %21, ptr %7, align 4
  br label %36

36:                                               ; preds = %33, %23, %5
  %37 = phi i64 [ 0, %33 ], [ -22, %23 ], [ -22, %5 ]
  ret i64 %37
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_adjust_tail(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 3
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 6
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr i8, ptr %10, i32 %12
  %14 = getelementptr i8, ptr %13, i32 -256
  %15 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr i8, ptr %16, i32 %8
  %18 = icmp ugt ptr %17, %14
  br i1 %18, label %32, label %19, !prof !18

19:                                               ; preds = %5
  %20 = icmp ugt i32 %12, 4096
  br i1 %20, label %21, label %24, !prof !18

21:                                               ; preds = %19
  %22 = load i1, ptr @____bpf_xdp_adjust_tail.__already_done, align 1
  br i1 %22, label %32, label %23, !prof !10

23:                                               ; preds = %21
  store i1 true, ptr @____bpf_xdp_adjust_tail.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 3834, i32 noundef 9, ptr noundef nonnull @.str.12, i32 noundef %12) #31
  br label %32

24:                                               ; preds = %19
  %25 = load ptr, ptr %7, align 4
  %26 = getelementptr i8, ptr %25, i32 14
  %27 = icmp ult ptr %17, %26
  br i1 %27, label %32, label %28, !prof !18

28:                                               ; preds = %24
  %29 = icmp sgt i32 %8, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @llvm.memset.p0.i32(ptr align 1 %16, i8 0, i32 %8, i1 false) #31
  br label %31

31:                                               ; preds = %30, %28
  store ptr %17, ptr %15, align 4
  br label %32

32:                                               ; preds = %31, %24, %23, %21, %5
  %33 = phi i64 [ 0, %31 ], [ -22, %5 ], [ -22, %23 ], [ -22, %21 ], [ -22, %24 ]
  ret i64 %33
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_xdp_adjust_meta(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #7 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 2
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr i8, ptr %10, i32 %8
  %12 = load ptr, ptr %7, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = ptrtoint ptr %11 to i32
  %15 = sub i32 %13, %14
  %16 = icmp ugt ptr %10, %12
  br i1 %16, label %30, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 3
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr i8, ptr %19, i32 24
  %21 = icmp ult ptr %11, %20
  %22 = icmp ugt ptr %11, %12
  %23 = select i1 %21, i1 true, i1 %22
  br i1 %23, label %30, label %24, !prof !42

24:                                               ; preds = %17
  %25 = and i32 %15, 3
  %26 = icmp ne i32 %25, 0
  %27 = icmp ugt i32 %15, 32
  %28 = or i1 %27, %26
  br i1 %28, label %30, label %29, !prof !18

29:                                               ; preds = %24
  store ptr %11, ptr %9, align 4
  br label %30

30:                                               ; preds = %29, %24, %17, %5
  %31 = phi i64 [ 0, %29 ], [ -524, %5 ], [ -13, %24 ], [ -22, %17 ]
  ret i64 %31
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local void @xdp_do_flush() #9 {
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @bpf_clear_redirect_map(ptr noundef %0) local_unnamed_addr #0 {
  %2 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #35
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %4 = icmp ult i32 %2, %3
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = ptrtoint ptr %0 to i32
  br label %7

7:                                                ; preds = %24, %5
  %8 = phi i32 [ %3, %5 ], [ %25, %24 ]
  %9 = phi i32 [ %2, %5 ], [ %26, %24 ]
  %10 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %11 = load i32, ptr %10, align 4
  %12 = add i32 %11, ptrtoint (ptr @bpf_redirect_info to i32)
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 3
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, %0
  br i1 %16, label %17, label %24, !prof !18

17:                                               ; preds = %7
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !44
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #31, !srcloc !23
  br label %18

18:                                               ; preds = %18, %17
  %19 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %14, i32 %6, i32 0) #31, !srcloc !45
  %20 = extractvalue { i32, i32 } %19, 0
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !46
  %23 = load i32, ptr @nr_cpu_ids, align 4
  br label %24

24:                                               ; preds = %22, %7
  %25 = phi i32 [ %23, %22 ], [ %8, %7 ]
  %26 = tail call i32 @cpumask_next(i32 noundef %9, ptr noundef nonnull @__cpu_possible_mask) #35
  %27 = icmp ult i32 %26, %25
  br i1 %27, label %7, label %28

28:                                               ; preds = %24, %1
  ret void
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @xdp_master_redirect(ptr noundef %0) #0 {
  %2 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %3 = inttoptr i32 %2 to ptr
  %4 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %3) #21, !srcloc !15
  %5 = add i32 %4, ptrtoint (ptr @bpf_redirect_info to i32)
  %6 = inttoptr i32 %5 to ptr
  %7 = getelementptr inbounds %struct.xdp_buff, ptr %0, i32 0, i32 4
  %8 = load ptr, ptr %7, align 4
  %9 = load ptr, ptr %8, align 64
  %10 = tail call ptr @netdev_master_upper_dev_get_rcu(ptr noundef %9) #31
  %11 = getelementptr inbounds %struct.net_device, ptr %10, i32 0, i32 16
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.net_device_ops, ptr %12, i32 0, i32 68
  %14 = load ptr, ptr %13, align 4
  %15 = tail call ptr %14(ptr noundef %10, ptr noundef %0) #31
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %1
  %18 = load ptr, ptr %7, align 4
  %19 = load ptr, ptr %18, align 64
  %20 = icmp eq ptr %15, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 17
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.bpf_redirect_info, ptr %6, i32 0, i32 1
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.bpf_redirect_info, ptr %6, i32 0, i32 4
  store i32 2147483647, ptr %25, align 4
  %26 = getelementptr inbounds %struct.bpf_redirect_info, ptr %6, i32 0, i32 5
  store i32 0, ptr %26, align 4
  br label %27

27:                                               ; preds = %21, %17, %1
  %28 = phi i32 [ 4, %21 ], [ 3, %17 ], [ 3, %1 ]
  ret i32 %28
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @netdev_master_upper_dev_get_rcu(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @xdp_do_redirect(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %5 = inttoptr i32 %4 to ptr
  %6 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %5) #21, !srcloc !15
  %7 = add i32 %6, ptrtoint (ptr @bpf_redirect_info to i32)
  %8 = inttoptr i32 %7 to ptr
  %9 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 5
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, 17
  br i1 %11, label %12, label %34

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 2
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 4
  %16 = load i32, ptr %15, align 4
  store i32 0, ptr %15, align 4
  store i32 0, ptr %9, align 4
  %17 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect_err, i32 0, i32 1), align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %158

21:                                               ; preds = %12
  %22 = tail call ptr @llvm.thread.pointer() #31
  %23 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %24 = load i32, ptr %23, align 8
  %25 = lshr i32 %24, 5
  %26 = getelementptr i32, ptr @__cpu_online_mask, i32 %25
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %24, 31
  %29 = shl nuw i32 1, %28
  %30 = and i32 %29, %27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %158, label %32

32:                                               ; preds = %21
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !47
  %33 = tail call i32 @__traceiter_xdp_redirect_err(ptr noundef null, ptr noundef %0, ptr noundef %2, ptr noundef %14, i32 noundef -95, i32 noundef 17, i32 noundef %16, i32 noundef %18) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !48
  br label %158

34:                                               ; preds = %3
  %35 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 4
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.xdp_rxq_info, ptr %36, i32 0, i32 3
  %38 = load i32, ptr %37, align 4
  %39 = icmp eq i32 %38, 3
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = tail call ptr @xdp_convert_zc_to_xdp_frame(ptr noundef %1) #31
  br label %95

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 3
  %44 = load ptr, ptr %43, align 4
  %45 = load ptr, ptr %1, align 4
  %46 = ptrtoint ptr %45 to i32
  %47 = ptrtoint ptr %44 to i32
  %48 = sub i32 %46, %47
  %49 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 2
  %50 = load ptr, ptr %49, align 4
  %51 = ptrtoint ptr %50 to i32
  %52 = sub i32 %46, %51
  %53 = tail call i32 @llvm.smax.i32(i32 %52, i32 0) #31
  %54 = sub i32 %48, %53
  %55 = icmp ult i32 %54, 24
  br i1 %55, label %89, label %56, !prof !18

56:                                               ; preds = %42
  %57 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 1
  %58 = load ptr, ptr %57, align 4
  %59 = getelementptr inbounds %struct.xdp_buff, ptr %1, i32 0, i32 6
  %60 = load i32, ptr %59, align 4
  %61 = getelementptr i8, ptr %44, i32 %60
  %62 = getelementptr i8, ptr %61, i32 -256
  %63 = icmp ugt ptr %58, %62
  br i1 %63, label %64, label %66, !prof !18

64:                                               ; preds = %56
  tail call void @xdp_warn(ptr noundef nonnull @.str.13, ptr noundef nonnull @__func__.xdp_update_frame_from_buff, i32 noundef 200) #31
  %65 = load i32, ptr %9, align 4
  br label %89

66:                                               ; preds = %56
  store ptr %45, ptr %44, align 4
  %67 = load ptr, ptr %57, align 4
  %68 = load ptr, ptr %1, align 4
  %69 = ptrtoint ptr %67 to i32
  %70 = ptrtoint ptr %68 to i32
  %71 = sub i32 %69, %70
  %72 = trunc i32 %71 to i16
  %73 = getelementptr inbounds %struct.xdp_frame, ptr %44, i32 0, i32 1
  store i16 %72, ptr %73, align 4
  %74 = trunc i32 %48 to i16
  %75 = add i16 %74, -24
  %76 = getelementptr inbounds %struct.xdp_frame, ptr %44, i32 0, i32 2
  store i16 %75, ptr %76, align 2
  %77 = getelementptr inbounds %struct.xdp_frame, ptr %44, i32 0, i32 3
  %78 = load i32, ptr %77, align 4
  %79 = and i32 %53, 255
  %80 = and i32 %78, -256
  %81 = or i32 %80, %79
  store i32 %81, ptr %77, align 4
  %82 = load i32, ptr %59, align 4
  %83 = shl i32 %82, 8
  %84 = or i32 %83, %79
  store i32 %84, ptr %77, align 4
  %85 = getelementptr inbounds %struct.xdp_frame, ptr %44, i32 0, i32 4
  %86 = load ptr, ptr %35, align 4
  %87 = getelementptr inbounds %struct.xdp_rxq_info, ptr %86, i32 0, i32 3
  %88 = load i64, ptr %87, align 4
  store i64 %88, ptr %85, align 4
  br label %95

89:                                               ; preds = %64, %42
  %90 = phi i32 [ %65, %64 ], [ %10, %42 ]
  %91 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 2
  %92 = load ptr, ptr %91, align 4
  %93 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 4
  %94 = load i32, ptr %93, align 4
  store i32 0, ptr %93, align 4
  store i32 0, ptr %9, align 4
  br label %136

95:                                               ; preds = %66, %40
  %96 = phi ptr [ %41, %40 ], [ %44, %66 ]
  %97 = load i32, ptr %9, align 4
  %98 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 2
  %99 = load ptr, ptr %98, align 4
  %100 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 4
  %101 = load i32, ptr %100, align 4
  store i32 0, ptr %100, align 4
  store i32 0, ptr %9, align 4
  %102 = icmp eq ptr %96, null
  br i1 %102, label %136, label %103, !prof !18

103:                                              ; preds = %95
  switch i32 %97, label %136 [
    i32 14, label %104
    i32 25, label %104
    i32 16, label %116
    i32 0, label %109
  ]

104:                                              ; preds = %103, %103
  %105 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 3
  %106 = load volatile ptr, ptr %105, align 4
  %107 = icmp eq ptr %106, null
  br i1 %107, label %116, label %108, !prof !10

108:                                              ; preds = %104
  store volatile ptr null, ptr %105, align 4
  br label %116

109:                                              ; preds = %103
  %110 = icmp eq i32 %101, 2147483647
  br i1 %110, label %111, label %136, !prof !49

111:                                              ; preds = %109
  %112 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 1
  %113 = load i32, ptr %112, align 4
  %114 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %113) #31
  %115 = icmp eq ptr %114, null
  br i1 %115, label %136, label %116, !prof !18

116:                                              ; preds = %111, %108, %104, %103
  %117 = phi i32 [ %101, %104 ], [ %101, %108 ], [ %101, %103 ], [ 2147483647, %111 ]
  %118 = phi ptr [ %99, %104 ], [ %99, %108 ], [ %99, %103 ], [ %114, %111 ]
  %119 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 1
  %120 = load i32, ptr %119, align 4
  %121 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect, i32 0, i32 1), align 4
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %158

123:                                              ; preds = %116
  %124 = tail call ptr @llvm.thread.pointer() #31
  %125 = getelementptr inbounds %struct.thread_info, ptr %124, i32 0, i32 2
  %126 = load i32, ptr %125, align 8
  %127 = lshr i32 %126, 5
  %128 = getelementptr i32, ptr @__cpu_online_mask, i32 %127
  %129 = load volatile i32, ptr %128, align 4
  %130 = and i32 %126, 31
  %131 = shl nuw i32 1, %130
  %132 = and i32 %131, %129
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %158, label %134

134:                                              ; preds = %123
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !50
  %135 = tail call i32 @__traceiter_xdp_redirect(ptr noundef null, ptr noundef %0, ptr noundef %2, ptr noundef %118, i32 noundef 0, i32 noundef %97, i32 noundef %117, i32 noundef %120) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !51
  br label %158

136:                                              ; preds = %111, %109, %103, %95, %89
  %137 = phi i32 [ %101, %95 ], [ 2147483647, %111 ], [ %101, %109 ], [ %101, %103 ], [ %94, %89 ]
  %138 = phi i32 [ %97, %95 ], [ 0, %111 ], [ 0, %109 ], [ %97, %103 ], [ %90, %89 ]
  %139 = phi ptr [ %99, %95 ], [ null, %111 ], [ %99, %109 ], [ %99, %103 ], [ %92, %89 ]
  %140 = phi i32 [ -75, %95 ], [ -22, %111 ], [ -56, %109 ], [ -56, %103 ], [ -75, %89 ]
  %141 = getelementptr inbounds %struct.bpf_redirect_info, ptr %8, i32 0, i32 1
  %142 = load i32, ptr %141, align 4
  %143 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect_err, i32 0, i32 1), align 4
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %145, label %158

145:                                              ; preds = %136
  %146 = tail call ptr @llvm.thread.pointer() #31
  %147 = getelementptr inbounds %struct.thread_info, ptr %146, i32 0, i32 2
  %148 = load i32, ptr %147, align 8
  %149 = lshr i32 %148, 5
  %150 = getelementptr i32, ptr @__cpu_online_mask, i32 %149
  %151 = load volatile i32, ptr %150, align 4
  %152 = and i32 %148, 31
  %153 = shl nuw i32 1, %152
  %154 = and i32 %153, %151
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %145
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !47
  %157 = tail call i32 @__traceiter_xdp_redirect_err(ptr noundef null, ptr noundef %0, ptr noundef %2, ptr noundef %139, i32 noundef %140, i32 noundef %138, i32 noundef %137, i32 noundef %142) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !48
  br label %158

158:                                              ; preds = %156, %145, %136, %134, %123, %116, %32, %21, %12
  %159 = phi i32 [ -95, %12 ], [ -95, %21 ], [ -95, %32 ], [ 0, %116 ], [ 0, %123 ], [ 0, %134 ], [ %140, %136 ], [ %140, %145 ], [ %140, %156 ]
  ret i32 %159
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @xdp_do_redirect_frame(ptr noundef %0, ptr nocapture readnone %1, ptr noundef readnone %2, ptr noundef %3) #0 {
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #21, !srcloc !15
  %8 = add i32 %7, ptrtoint (ptr @bpf_redirect_info to i32)
  %9 = inttoptr i32 %8 to ptr
  %10 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 5
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, 17
  %13 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 2
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 4
  %16 = load i32, ptr %15, align 4
  store i32 0, ptr %15, align 4
  store i32 0, ptr %10, align 4
  br i1 %12, label %17, label %35

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect_err, i32 0, i32 1), align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %89

22:                                               ; preds = %17
  %23 = tail call ptr @llvm.thread.pointer() #31
  %24 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = lshr i32 %25, 5
  %27 = getelementptr i32, ptr @__cpu_online_mask, i32 %26
  %28 = load volatile i32, ptr %27, align 4
  %29 = and i32 %25, 31
  %30 = shl nuw i32 1, %29
  %31 = and i32 %30, %28
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %89, label %33

33:                                               ; preds = %22
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !47
  %34 = tail call i32 @__traceiter_xdp_redirect_err(ptr noundef null, ptr noundef %0, ptr noundef %3, ptr noundef %14, i32 noundef -95, i32 noundef 17, i32 noundef %16, i32 noundef %19) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !48
  br label %89

35:                                               ; preds = %4
  %36 = icmp eq ptr %2, null
  br i1 %36, label %69, label %37, !prof !18

37:                                               ; preds = %35
  switch i32 %11, label %69 [
    i32 14, label %38
    i32 25, label %38
    i32 16, label %50
    i32 0, label %43
  ]

38:                                               ; preds = %37, %37
  %39 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 3
  %40 = load volatile ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %50, label %42, !prof !10

42:                                               ; preds = %38
  store volatile ptr null, ptr %39, align 4
  br label %50

43:                                               ; preds = %37
  %44 = icmp eq i32 %16, 2147483647
  br i1 %44, label %45, label %69, !prof !49

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 1
  %47 = load i32, ptr %46, align 4
  %48 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %47) #31
  %49 = icmp eq ptr %48, null
  br i1 %49, label %69, label %50, !prof !18

50:                                               ; preds = %45, %42, %38, %37
  %51 = phi ptr [ %14, %38 ], [ %14, %42 ], [ %14, %37 ], [ %48, %45 ]
  %52 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 1
  %53 = load i32, ptr %52, align 4
  %54 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect, i32 0, i32 1), align 4
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %89

56:                                               ; preds = %50
  %57 = tail call ptr @llvm.thread.pointer() #31
  %58 = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 2
  %59 = load i32, ptr %58, align 8
  %60 = lshr i32 %59, 5
  %61 = getelementptr i32, ptr @__cpu_online_mask, i32 %60
  %62 = load volatile i32, ptr %61, align 4
  %63 = and i32 %59, 31
  %64 = shl nuw i32 1, %63
  %65 = and i32 %64, %62
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %89, label %67

67:                                               ; preds = %56
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !50
  %68 = tail call i32 @__traceiter_xdp_redirect(ptr noundef null, ptr noundef %0, ptr noundef %3, ptr noundef %51, i32 noundef 0, i32 noundef %11, i32 noundef %16, i32 noundef %53) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !51
  br label %89

69:                                               ; preds = %45, %43, %37, %35
  %70 = phi ptr [ %14, %35 ], [ null, %45 ], [ %14, %43 ], [ %14, %37 ]
  %71 = phi i32 [ -75, %35 ], [ -22, %45 ], [ -56, %43 ], [ -56, %37 ]
  %72 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 1
  %73 = load i32, ptr %72, align 4
  %74 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect_err, i32 0, i32 1), align 4
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %89

76:                                               ; preds = %69
  %77 = tail call ptr @llvm.thread.pointer() #31
  %78 = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 2
  %79 = load i32, ptr %78, align 8
  %80 = lshr i32 %79, 5
  %81 = getelementptr i32, ptr @__cpu_online_mask, i32 %80
  %82 = load volatile i32, ptr %81, align 4
  %83 = and i32 %79, 31
  %84 = shl nuw i32 1, %83
  %85 = and i32 %84, %82
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %76
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !47
  %88 = tail call i32 @__traceiter_xdp_redirect_err(ptr noundef null, ptr noundef %0, ptr noundef %3, ptr noundef %70, i32 noundef %71, i32 noundef %11, i32 noundef %16, i32 noundef %73) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !48
  br label %89

89:                                               ; preds = %87, %76, %69, %67, %56, %50, %33, %22, %17
  %90 = phi i32 [ -95, %17 ], [ -95, %22 ], [ -95, %33 ], [ 0, %50 ], [ 0, %56 ], [ 0, %67 ], [ %71, %69 ], [ %71, %76 ], [ %71, %87 ]
  ret i32 %90
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @xdp_do_generic_redirect(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readnone %2, ptr noundef %3) local_unnamed_addr #0 {
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #21, !srcloc !15
  %8 = add i32 %7, ptrtoint (ptr @bpf_redirect_info to i32)
  %9 = inttoptr i32 %8 to ptr
  %10 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 5
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 4
  %15 = load i32, ptr %14, align 4
  store i32 0, ptr %14, align 4
  store i32 0, ptr %10, align 4
  %16 = icmp eq i32 %11, 0
  %17 = icmp eq i32 %15, 2147483647
  %18 = select i1 %16, i1 %17, i1 false
  br i1 %18, label %19, label %59

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.bpf_redirect_info, ptr %9, i32 0, i32 1
  %21 = load i32, ptr %20, align 4
  %22 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %21) #31
  %23 = icmp eq ptr %22, null
  br i1 %23, label %109, label %24, !prof !18

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 14
  %26 = load i32, ptr %25, align 8
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %109, label %29, !prof !18

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 5
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 20
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 19
  %35 = load i16, ptr %34, align 2
  %36 = zext i16 %35 to i32
  %37 = add i32 %33, 4
  %38 = add i32 %37, %36
  %39 = icmp ult i32 %38, %31
  br i1 %39, label %109, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %struct.anon.44, ptr %1, i32 0, i32 2
  store ptr %22, ptr %41, align 8
  %42 = load i32, ptr %20, align 4
  %43 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect, i32 0, i32 1), align 4
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %58

45:                                               ; preds = %40
  %46 = tail call ptr @llvm.thread.pointer() #31
  %47 = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 2
  %48 = load i32, ptr %47, align 8
  %49 = lshr i32 %48, 5
  %50 = getelementptr i32, ptr @__cpu_online_mask, i32 %49
  %51 = load volatile i32, ptr %50, align 4
  %52 = and i32 %48, 31
  %53 = shl nuw i32 1, %52
  %54 = and i32 %53, %51
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %45
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !50
  %57 = tail call i32 @__traceiter_xdp_redirect(ptr noundef null, ptr noundef %0, ptr noundef %3, ptr noundef null, i32 noundef 0, i32 noundef 0, i32 noundef 2147483647, i32 noundef %42) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !51
  br label %58

58:                                               ; preds = %56, %45, %40
  tail call void @generic_xdp_tx(ptr noundef %1, ptr noundef %3) #31
  br label %112

59:                                               ; preds = %4
  %60 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %61 = inttoptr i32 %60 to ptr
  %62 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %61) #21, !srcloc !15
  %63 = add i32 %62, ptrtoint (ptr @bpf_redirect_info to i32)
  %64 = inttoptr i32 %63 to ptr
  switch i32 %11, label %90 [
    i32 14, label %65
    i32 25, label %65
    i32 17, label %70
    i32 16, label %71
  ]

65:                                               ; preds = %59, %59
  %66 = getelementptr inbounds %struct.bpf_redirect_info, ptr %64, i32 0, i32 3
  %67 = load volatile ptr, ptr %66, align 4
  %68 = icmp eq ptr %67, null
  br i1 %68, label %72, label %69, !prof !10

69:                                               ; preds = %65
  store volatile ptr null, ptr %66, align 4
  br label %72

70:                                               ; preds = %59
  br label %90

71:                                               ; preds = %59
  br label %90

72:                                               ; preds = %69, %65
  %73 = getelementptr inbounds %struct.bpf_redirect_info, ptr %64, i32 0, i32 1
  %74 = load i32, ptr %73, align 4
  %75 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect, i32 0, i32 1), align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %112

77:                                               ; preds = %72
  %78 = tail call ptr @llvm.thread.pointer() #31
  %79 = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 2
  %80 = load i32, ptr %79, align 8
  %81 = lshr i32 %80, 5
  %82 = getelementptr i32, ptr @__cpu_online_mask, i32 %81
  %83 = load volatile i32, ptr %82, align 4
  %84 = and i32 %80, 31
  %85 = shl nuw i32 1, %84
  %86 = and i32 %85, %83
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %112, label %88

88:                                               ; preds = %77
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !50
  %89 = tail call i32 @__traceiter_xdp_redirect(ptr noundef null, ptr noundef %0, ptr noundef %3, ptr noundef %13, i32 noundef 0, i32 noundef %11, i32 noundef %15, i32 noundef %74) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !51
  br label %112

90:                                               ; preds = %71, %70, %59
  %91 = phi i32 [ -95, %71 ], [ -524, %70 ], [ -56, %59 ]
  %92 = getelementptr inbounds %struct.bpf_redirect_info, ptr %64, i32 0, i32 1
  %93 = load i32, ptr %92, align 4
  %94 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect_err, i32 0, i32 1), align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %112

96:                                               ; preds = %90
  %97 = tail call ptr @llvm.thread.pointer() #31
  %98 = getelementptr inbounds %struct.thread_info, ptr %97, i32 0, i32 2
  %99 = load i32, ptr %98, align 8
  %100 = lshr i32 %99, 5
  %101 = getelementptr i32, ptr @__cpu_online_mask, i32 %100
  %102 = load volatile i32, ptr %101, align 4
  %103 = and i32 %99, 31
  %104 = shl nuw i32 1, %103
  %105 = and i32 %104, %102
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %96
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !47
  %108 = tail call i32 @__traceiter_xdp_redirect_err(ptr noundef null, ptr noundef %0, ptr noundef %3, ptr noundef %13, i32 noundef %91, i32 noundef %11, i32 noundef %15, i32 noundef %93) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !48
  br label %112

109:                                              ; preds = %29, %24, %19
  %110 = phi i32 [ -22, %19 ], [ -100, %24 ], [ -90, %29 ]
  %111 = load i32, ptr %20, align 4
  tail call fastcc void @trace_xdp_redirect_err(ptr noundef %0, ptr noundef %3, ptr noundef null, i32 noundef %110, i32 noundef 0, i32 noundef 2147483647, i32 noundef %111)
  br label %112

112:                                              ; preds = %109, %107, %96, %90, %88, %77, %72, %58
  %113 = phi i32 [ %110, %109 ], [ 0, %58 ], [ 0, %72 ], [ 0, %77 ], [ 0, %88 ], [ %91, %90 ], [ %91, %96 ], [ %91, %107 ]
  ret i32 %113
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_xdp_tx(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @trace_xdp_redirect_err(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #11 {
  %8 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_redirect_err, i32 0, i32 1), align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %7
  %11 = tail call ptr @llvm.thread.pointer() #31
  %12 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %13 = load i32, ptr %12, align 8
  %14 = lshr i32 %13, 5
  %15 = getelementptr i32, ptr @__cpu_online_mask, i32 %14
  %16 = load volatile i32, ptr %15, align 4
  %17 = and i32 %13, 31
  %18 = shl nuw i32 1, %17
  %19 = and i32 %18, %16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %10
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !47
  %22 = tail call i32 @__traceiter_xdp_redirect_err(ptr noundef null, ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !48
  br label %23

23:                                               ; preds = %21, %10, %7
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_redirect(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %7) #21, !srcloc !15
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %10, label %17, !prof !10

10:                                               ; preds = %5
  %11 = trunc i64 %0 to i32
  %12 = add i32 %8, ptrtoint (ptr @bpf_redirect_info to i32)
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 1
  store i32 %11, ptr %14, align 4
  %15 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 4
  store i32 2147483647, ptr %15, align 4
  %16 = getelementptr inbounds %struct.bpf_redirect_info, ptr %13, i32 0, i32 5
  store i32 0, ptr %16, align 4
  br label %17

17:                                               ; preds = %10, %5
  %18 = phi i64 [ 4, %10 ], [ 0, %5 ]
  ret i64 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_redirect_map(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = load ptr, ptr %7, align 64
  %10 = getelementptr inbounds %struct.bpf_map_ops, ptr %9, i32 0, i32 34
  %11 = load ptr, ptr %10, align 4
  %12 = tail call i32 %11(ptr noundef %7, i32 noundef %8, i64 noundef %2) #31
  %13 = sext i32 %12 to i64
  ret i64 %13
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_event_output(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %3 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = lshr i64 %2, 32
  %13 = and i64 %12, 1048575
  %14 = icmp ult i64 %2, 4503599627370496
  br i1 %14, label %15, label %24, !prof !10

15:                                               ; preds = %5
  %16 = icmp eq i32 %6, 0
  br i1 %16, label %24, label %17, !prof !18

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %19 = load i32, ptr %18, align 8
  %20 = zext i32 %19 to i64
  %21 = icmp ugt i64 %13, %20
  br i1 %21, label %24, label %22, !prof !18

22:                                               ; preds = %17
  %23 = tail call i64 @bpf_event_output(ptr noundef %9, i64 noundef %2, ptr noundef %11, i64 noundef %4, ptr noundef nonnull %7, i64 noundef %13, ptr noundef nonnull @bpf_skb_copy) #31
  br label %24

24:                                               ; preds = %22, %17, %15, %5
  %25 = phi i64 [ %23, %22 ], [ -22, %5 ], [ -14, %17 ], [ -14, %15 ]
  ret i64 %25
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skb_get_tunnel_key(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #5 {
  %6 = alloca [28 x i8], align 1
  %7 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %6, i32 0, i32 4
  %8 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %6, i32 0, i32 3
  %9 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %6, i32 0, i32 2
  %10 = trunc i64 %0 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = trunc i64 %1 to i32
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %13, i32 0, i32 4
  %15 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %13, i32 0, i32 3
  %16 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %13, i32 0, i32 2
  %17 = trunc i64 %2 to i32
  %18 = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 4
  %19 = load i32, ptr %18, align 8
  %20 = and i32 %19, -2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %42, label %22

22:                                               ; preds = %5
  %23 = inttoptr i32 %20 to ptr
  %24 = getelementptr inbounds %struct.dst_entry, ptr %23, i32 0, i32 7
  %25 = load i16, ptr %24, align 4
  %26 = and i16 %25, 128
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.metadata_dst, ptr %23, i32 0, i32 1
  %30 = load i32, ptr %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.metadata_dst, ptr %23, i32 0, i32 2
  br label %43

34:                                               ; preds = %28, %22
  %35 = getelementptr inbounds %struct.dst_entry, ptr %23, i32 0, i32 13
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = load i16, ptr %36, align 4
  switch i16 %39, label %42 [
    i16 2, label %40
    i16 4, label %40
  ]

40:                                               ; preds = %38, %38
  %41 = getelementptr inbounds %struct.lwtunnel_state, ptr %36, i32 0, i32 7
  br label %43

42:                                               ; preds = %38, %34, %5
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %6) #31
  br label %89

43:                                               ; preds = %40, %32
  %44 = phi ptr [ %33, %32 ], [ %41, %40 ]
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %6) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(28) %6, i8 0, i32 28, i1 false) #31, !annotation !22
  %45 = icmp eq ptr %44, null
  %46 = icmp ugt i64 %3, 1
  %47 = or i1 %46, %45
  br i1 %47, label %89, label %48, !prof !18

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.ip_tunnel_info, ptr %44, i32 0, i32 3
  %50 = load i8, ptr %49, align 1
  %51 = and i8 %50, 2
  %52 = icmp eq i8 %51, 0
  %53 = select i1 %52, i16 2, i16 10
  %54 = icmp eq i64 %3, 0
  %55 = select i1 %54, i16 2, i16 10
  %56 = icmp eq i16 %53, %55
  br i1 %56, label %57, label %89

57:                                               ; preds = %48
  %58 = icmp eq i32 %17, 28
  br i1 %58, label %61, label %59, !prof !10

59:                                               ; preds = %57
  switch i32 %17, label %89 [
    i32 24, label %61
    i32 22, label %61
    i32 8, label %60
  ]

60:                                               ; preds = %59
  br i1 %52, label %61, label %89

61:                                               ; preds = %60, %59, %59, %57
  %62 = phi ptr [ %13, %57 ], [ %6, %60 ], [ %6, %59 ], [ %6, %59 ]
  %63 = phi ptr [ %16, %57 ], [ %9, %60 ], [ %9, %59 ], [ %9, %59 ]
  %64 = phi ptr [ %15, %57 ], [ %8, %60 ], [ %8, %59 ], [ %8, %59 ]
  %65 = phi ptr [ %14, %57 ], [ %7, %60 ], [ %7, %59 ], [ %7, %59 ]
  %66 = load i64, ptr %44, align 8
  %67 = tail call i64 @llvm.bswap.i64(i64 %66) #31
  %68 = trunc i64 %67 to i32
  store i32 %68, ptr %62, align 4
  %69 = getelementptr inbounds %struct.ip_tunnel_key, ptr %44, i32 0, i32 3
  %70 = load i8, ptr %69, align 2
  store i8 %70, ptr %63, align 4
  %71 = getelementptr inbounds %struct.ip_tunnel_key, ptr %44, i32 0, i32 4
  %72 = load i8, ptr %71, align 1
  store i8 %72, ptr %64, align 1
  store i16 0, ptr %65, align 2
  br i1 %54, label %79, label %73

73:                                               ; preds = %61
  %74 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %62, i32 0, i32 1
  %75 = getelementptr inbounds %struct.ip_tunnel_key, ptr %44, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %74, ptr noundef align 8 dereferenceable(16) %75, i32 16, i1 false) #31
  %76 = getelementptr inbounds %struct.ip_tunnel_key, ptr %44, i32 0, i32 5
  %77 = load i32, ptr %76, align 4
  %78 = tail call i32 @llvm.bswap.i32(i32 %77) #31
  br label %85

79:                                               ; preds = %61
  %80 = getelementptr inbounds %struct.ip_tunnel_key, ptr %44, i32 0, i32 1
  %81 = load i32, ptr %80, align 8
  %82 = tail call i32 @llvm.bswap.i32(i32 %81) #31
  %83 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %62, i32 0, i32 1
  store i32 %82, ptr %83, align 4
  %84 = getelementptr %struct.bpf_tunnel_key, ptr %62, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memset.p0.i32(ptr noundef align 4 dereferenceable(12) %84, i8 0, i32 12, i1 false) #31
  br label %85

85:                                               ; preds = %79, %73
  %86 = phi i32 [ 0, %79 ], [ %78, %73 ]
  %87 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %62, i32 0, i32 5
  store i32 %86, ptr %87, align 4
  br i1 %58, label %92, label %88, !prof !10

88:                                               ; preds = %85
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %13, ptr align 4 %62, i32 %17, i1 false) #31
  br label %92

89:                                               ; preds = %60, %59, %48, %43, %42
  %90 = phi i32 [ -22, %59 ], [ -22, %60 ], [ -22, %43 ], [ -71, %48 ], [ -22, %42 ]
  tail call void @llvm.memset.p0.i32(ptr align 1 %13, i8 0, i32 %17, i1 false) #31
  %91 = sext i32 %90 to i64
  br label %92

92:                                               ; preds = %89, %88, %85
  %93 = phi i64 [ %91, %89 ], [ 0, %88 ], [ 0, %85 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %6) #31
  ret i64 %93
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skb_get_tunnel_opt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #5 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 4
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, -2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %60, label %15

15:                                               ; preds = %5
  %16 = inttoptr i32 %13 to ptr
  %17 = getelementptr inbounds %struct.dst_entry, ptr %16, i32 0, i32 7
  %18 = load i16, ptr %17, align 4
  %19 = and i16 %18, 128
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.metadata_dst, ptr %16, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.metadata_dst, ptr %16, i32 0, i32 2
  br label %35

27:                                               ; preds = %21, %15
  %28 = getelementptr inbounds %struct.dst_entry, ptr %16, i32 0, i32 13
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = load i16, ptr %29, align 4
  switch i16 %32, label %60 [
    i16 2, label %33
    i16 4, label %33
  ]

33:                                               ; preds = %31, %31
  %34 = getelementptr inbounds %struct.lwtunnel_state, ptr %29, i32 0, i32 7
  br label %35

35:                                               ; preds = %33, %25
  %36 = phi ptr [ %26, %25 ], [ %34, %33 ]
  %37 = icmp eq ptr %36, null
  br i1 %37, label %60, label %38, !prof !18

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.ip_tunnel_key, ptr %36, i32 0, i32 2
  %40 = load i16, ptr %39, align 8
  %41 = and i16 %40, 88
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %60, label %43, !prof !18

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.ip_tunnel_info, ptr %36, i32 0, i32 2
  %45 = load i8, ptr %44, align 8
  %46 = zext i8 %45 to i32
  %47 = icmp ugt i32 %46, %10
  br i1 %47, label %60, label %48, !prof !18

48:                                               ; preds = %43
  %49 = getelementptr %struct.ip_tunnel_info, ptr %36, i32 1
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %9, ptr align 8 %49, i32 %46, i1 false) #31
  %50 = load i8, ptr %44, align 8
  %51 = zext i8 %50 to i32
  %52 = icmp ugt i32 %10, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = getelementptr i8, ptr %9, i32 %51
  %55 = sub i32 %10, %51
  tail call void @llvm.memset.p0.i32(ptr align 1 %54, i8 0, i32 %55, i1 false) #31
  %56 = load i8, ptr %44, align 8
  br label %57

57:                                               ; preds = %53, %48
  %58 = phi i8 [ %56, %53 ], [ %50, %48 ]
  %59 = zext i8 %58 to i64
  br label %63

60:                                               ; preds = %43, %38, %35, %31, %27, %5
  %61 = phi i32 [ -2, %38 ], [ -12, %43 ], [ -2, %35 ], [ -2, %31 ], [ -2, %27 ], [ -2, %5 ]
  tail call void @llvm.memset.p0.i32(ptr align 1 %9, i8 0, i32 %10, i1 false) #31
  %62 = sext i32 %61 to i64
  br label %63

63:                                               ; preds = %60, %57
  %64 = phi i64 [ %62, %60 ], [ %59, %57 ]
  ret i64 %64
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_set_tunnel_key(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = alloca [28 x i8], align 1
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %2 to i32
  %12 = load ptr, ptr @md_dst, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #21, !srcloc !15
  %17 = add i32 %16, %13
  %18 = inttoptr i32 %17 to ptr
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %6) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(28) %6, i8 0, i32 28, i1 false) #31, !annotation !22
  %19 = icmp ult i64 %3, 16
  br i1 %19, label %20, label %103, !prof !10

20:                                               ; preds = %5
  switch i32 %11, label %103 [
    i32 28, label %24
    i32 24, label %21
    i32 22, label %21
    i32 8, label %21
  ], !prof !52

21:                                               ; preds = %20, %20, %20
  call void @llvm.memcpy.p0.p0.i32(ptr nonnull align 1 %6, ptr align 4 %10, i32 %11, i1 false) #31
  %22 = getelementptr i8, ptr %6, i32 %11
  %23 = sub nuw nsw i32 28, %11
  call void @llvm.memset.p0.i32(ptr align 1 %22, i8 0, i32 %23, i1 false) #31
  br label %24

24:                                               ; preds = %21, %20
  %25 = phi ptr [ %6, %21 ], [ %10, %20 ]
  %26 = and i64 %3, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %25, i32 0, i32 5
  %30 = load i32, ptr %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %103, !prof !10

32:                                               ; preds = %28, %24
  %33 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %25, i32 0, i32 4
  %34 = load i16, ptr %33, align 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %103, !prof !10

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 4
  %38 = load i32, ptr %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = and i32 %38, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = and i32 %38, -2
  %45 = inttoptr i32 %44 to ptr
  tail call void @dst_release(ptr noundef %45) #31
  br label %46

46:                                               ; preds = %43, %40
  store i32 0, ptr %37, align 8
  br label %47

47:                                               ; preds = %46, %36
  %48 = getelementptr inbounds %struct.dst_entry, ptr %18, i32 0, i32 18
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !53
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %48) #31, !srcloc !23
  %49 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %48, ptr %48, i32 0, i32 1, ptr elementtype(i32) %48) #31, !srcloc !54
  %50 = extractvalue { i32, i32, i32 } %49, 0
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !55
  br label %54

53:                                               ; preds = %47
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.15, i32 noundef 231, i32 noundef 9, ptr noundef null) #31
  br label %54

54:                                               ; preds = %53, %52
  %55 = icmp ne i32 %17, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 13, i32 0, i32 3
  %58 = load i16, ptr %57, align 2
  %59 = lshr i16 %58, 14
  %60 = trunc i16 %59 to i8
  %61 = and i8 %60, 1
  %62 = or i8 %61, %56
  %63 = zext i8 %62 to i16
  %64 = shl nuw nsw i16 %63, 14
  %65 = and i16 %58, -16385
  %66 = or i16 %64, %65
  store i16 %66, ptr %57, align 2
  store i32 %17, ptr %37, align 8
  %67 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2
  tail call void @llvm.memset.p0.i32(ptr noundef align 8 dereferenceable(72) %67, i8 0, i32 72, i1 false) #31
  %68 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2, i32 0, i32 3
  store i8 1, ptr %68, align 1
  %69 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2, i32 0, i32 0, i32 2
  %70 = and i64 %3, 4
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, i16 1312, i16 1313
  %73 = and i64 %3, 2
  %74 = icmp eq i64 %73, 0
  %75 = and i16 %72, 1057
  %76 = select i1 %74, i16 %72, i16 %75
  %77 = trunc i64 %3 to i16
  %78 = shl nuw nsw i16 %77, 8
  %79 = and i16 %78, 2048
  %80 = or i16 %76, %79
  store i16 %80, ptr %69, align 8
  %81 = load i32, ptr %25, align 4
  %82 = zext i32 %81 to i64
  %83 = tail call i64 @llvm.bswap.i64(i64 %82) #31
  store i64 %83, ptr %67, align 8
  %84 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %25, i32 0, i32 2
  %85 = load i8, ptr %84, align 4
  %86 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2, i32 0, i32 0, i32 3
  store i8 %85, ptr %86, align 2
  %87 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %25, i32 0, i32 3
  %88 = load i8, ptr %87, align 1
  %89 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2, i32 0, i32 0, i32 4
  store i8 %88, ptr %89, align 1
  br i1 %27, label %98, label %90

90:                                               ; preds = %54
  store i8 3, ptr %68, align 1
  %91 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 1
  %92 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %25, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(16) %91, ptr noundef align 4 dereferenceable(16) %92, i32 16, i1 false) #31
  %93 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %25, i32 0, i32 5
  %94 = load i32, ptr %93, align 4
  %95 = and i32 %94, 1048575
  %96 = tail call i32 @llvm.bswap.i32(i32 %95) #31
  %97 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2, i32 0, i32 0, i32 5
  store i32 %96, ptr %97, align 4
  br label %103

98:                                               ; preds = %54
  %99 = getelementptr inbounds %struct.bpf_tunnel_key, ptr %25, i32 0, i32 1
  %100 = load i32, ptr %99, align 4
  %101 = tail call i32 @llvm.bswap.i32(i32 %100) #31
  %102 = getelementptr inbounds %struct.metadata_dst, ptr %18, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %101, ptr %102, align 4
  br label %103

103:                                              ; preds = %98, %90, %32, %28, %20, %5
  %104 = phi i64 [ -22, %5 ], [ -22, %20 ], [ -22, %32 ], [ 0, %98 ], [ 0, %90 ], [ -22, %28 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %6) #31
  ret i64 %104
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_set_tunnel_opt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 4
  %12 = load i32, ptr %11, align 8
  %13 = and i32 %12, -2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %5
  %16 = inttoptr i32 %13 to ptr
  %17 = getelementptr inbounds %struct.dst_entry, ptr %16, i32 0, i32 7
  %18 = load i16, ptr %17, align 4
  %19 = and i16 %18, 128
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.metadata_dst, ptr %16, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.metadata_dst, ptr %16, i32 0, i32 2
  br label %35

27:                                               ; preds = %21, %15
  %28 = getelementptr inbounds %struct.dst_entry, ptr %16, i32 0, i32 13
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = load i16, ptr %29, align 4
  switch i16 %32, label %35 [
    i16 2, label %33
    i16 4, label %33
  ]

33:                                               ; preds = %31, %31
  %34 = getelementptr inbounds %struct.lwtunnel_state, ptr %29, i32 0, i32 7
  br label %35

35:                                               ; preds = %33, %31, %27, %25, %5
  %36 = phi ptr [ %26, %25 ], [ %34, %33 ], [ null, %31 ], [ null, %27 ], [ null, %5 ]
  %37 = load ptr, ptr @md_dst, align 4
  %38 = ptrtoint ptr %37 to i32
  %39 = tail call i32 @llvm.read_register.i32(metadata !0) #31
  %40 = inttoptr i32 %39 to ptr
  %41 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %40) #21, !srcloc !15
  %42 = add i32 %41, %38
  %43 = inttoptr i32 %42 to ptr
  %44 = getelementptr inbounds %struct.metadata_dst, ptr %43, i32 0, i32 2
  %45 = icmp ne ptr %36, %44
  %46 = and i32 %10, 3
  %47 = icmp ne i32 %46, 0
  %48 = or i1 %47, %45
  br i1 %48, label %60, label %49, !prof !18

49:                                               ; preds = %35
  %50 = icmp ugt i32 %10, 255
  br i1 %50, label %60, label %51, !prof !18

51:                                               ; preds = %49
  %52 = trunc i64 %2 to i8
  %53 = getelementptr inbounds %struct.ip_tunnel_info, ptr %36, i32 0, i32 2
  store i8 %52, ptr %53, align 8
  %54 = icmp eq i32 %10, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = getelementptr %struct.ip_tunnel_info, ptr %36, i32 1
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %56, ptr align 1 %9, i32 %10, i1 false) #31
  %57 = getelementptr inbounds %struct.ip_tunnel_key, ptr %36, i32 0, i32 2
  %58 = load i16, ptr %57, align 8
  %59 = or i16 %58, 88
  store i16 %59, ptr %57, align 8
  br label %60

60:                                               ; preds = %55, %51, %49, %35
  %61 = phi i64 [ -22, %35 ], [ -12, %49 ], [ 0, %51 ], [ 0, %55 ]
  ret i64 %61
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skb_under_cgroup(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.sock_common, ptr %12, i32 0, i32 4
  %16 = load volatile i8, ptr %15, align 2
  %17 = icmp eq i8 %16, 12
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sock_common, ptr %12, i32 0, i32 13
  %20 = load ptr, ptr %19, align 8
  %21 = icmp eq ptr %20, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %18, %14
  %23 = phi ptr [ %20, %18 ], [ %12, %14 ]
  %24 = getelementptr inbounds %struct.sock_common, ptr %23, i32 0, i32 4
  %25 = load volatile i8, ptr %24, align 2
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 1, %26
  %28 = and i32 %27, -4161
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.bpf_map, ptr %9, i32 0, i32 5
  %32 = load i32, ptr %31, align 4
  %33 = icmp ugt i32 %32, %10
  br i1 %33, label %34, label %40, !prof !10

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.bpf_array, ptr %9, i32 0, i32 5
  %36 = getelementptr [0 x ptr], ptr %35, i32 0, i32 %10
  %37 = load volatile ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  %39 = select i1 %38, i64 -11, i64 -524, !prof !18
  br label %40

40:                                               ; preds = %34, %30, %22, %18, %5
  %41 = phi i64 [ -2, %22 ], [ -2, %18 ], [ -7, %30 ], [ -2, %5 ], [ %39, %34 ]
  ret i64 %41
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_event_output(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %3 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = lshr i64 %2, 32
  %13 = and i64 %12, 1048575
  %14 = icmp ult i64 %2, 4503599627370496
  br i1 %14, label %15, label %28, !prof !10

15:                                               ; preds = %5
  %16 = icmp eq i32 %6, 0
  br i1 %16, label %28, label %17, !prof !18

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = load ptr, ptr %7, align 4
  %21 = ptrtoint ptr %19 to i32
  %22 = ptrtoint ptr %20 to i32
  %23 = sub i32 %21, %22
  %24 = zext i32 %23 to i64
  %25 = icmp ugt i64 %13, %24
  br i1 %25, label %28, label %26, !prof !18

26:                                               ; preds = %17
  %27 = tail call i64 @bpf_event_output(ptr noundef %9, i64 noundef %2, ptr noundef %11, i64 noundef %4, ptr noundef %20, i64 noundef %13, ptr noundef nonnull @bpf_xdp_copy) #31
  br label %28

28:                                               ; preds = %26, %17, %15, %5
  %29 = phi i64 [ %27, %26 ], [ -22, %5 ], [ -14, %17 ], [ -14, %15 ]
  ret i64 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_get_socket_cookie(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @__sock_gen_cookie(ptr noundef nonnull %9) #31
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi i64 [ %12, %11 ], [ 0, %5 ]
  ret i64 %14
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_get_socket_cookie_sock_addr(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = load ptr, ptr %7, align 8
  %9 = tail call i64 @__sock_gen_cookie(ptr noundef %8) #31
  ret i64 %9
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_get_socket_cookie_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i64 @__sock_gen_cookie(ptr noundef %7) #31
  ret i64 %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_get_socket_ptr_cookie(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = inttoptr i32 %6 to ptr
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !56
  %10 = tail call i64 @__sock_gen_cookie(ptr noundef nonnull %9) #31
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !57
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi i64 [ %10, %8 ], [ 0, %5 ]
  ret i64 %12
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_get_socket_cookie_sock_ops(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = load ptr, ptr %7, align 8
  %9 = tail call i64 @__sock_gen_cookie(ptr noundef %8) #31
  ret i64 %9
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_netns_cookie_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #12 {
  %6 = load i64, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 41), align 64
  ret i64 %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_netns_cookie_sock_addr(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #12 {
  %6 = load i64, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 41), align 64
  ret i64 %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_netns_cookie_sock_ops(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #12 {
  %6 = load i64, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 41), align 64
  ret i64 %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_netns_cookie_sk_msg(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #12 {
  %6 = load i64, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 41), align 64
  ret i64 %6
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_socket_uid(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.sock_common, ptr %9, i32 0, i32 4
  %13 = load volatile i8, ptr %12, align 2
  %14 = icmp eq i8 %13, 12
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.sock_common, ptr %9, i32 0, i32 13
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %15, %11
  %20 = phi ptr [ %17, %15 ], [ %9, %11 ]
  %21 = getelementptr inbounds %struct.sock_common, ptr %20, i32 0, i32 4
  %22 = load volatile i8, ptr %21, align 2
  %23 = zext i8 %22 to i32
  %24 = shl nuw i32 1, %23
  %25 = and i32 %24, -4161
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19, %15, %5
  %28 = load i32, ptr @overflowuid, align 4
  %29 = sext i32 %28 to i64
  br label %37

30:                                               ; preds = %19
  %31 = getelementptr inbounds %struct.sock, ptr %20, i32 0, i32 55
  %32 = load i32, ptr %31, align 4
  %33 = icmp eq i32 %32, -1
  %34 = load i32, ptr @overflowuid, align 4
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %30, %27
  %38 = phi i64 [ %36, %30 ], [ %29, %27 ]
  ret i64 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sk_setsockopt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %3 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = trunc i64 %4 to i32
  %13 = icmp eq i32 %8, 6
  %14 = icmp eq i32 %9, 13
  %15 = and i1 %13, %14
  %16 = icmp ugt i32 %12, 2
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %5
  %19 = tail call i32 @strncmp(ptr noundef nonnull @.str.16, ptr noundef %11, i32 noundef %12) #31
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18, %5
  %22 = tail call fastcc i32 @_bpf_setsockopt(ptr noundef %7, i32 noundef %8, i32 noundef %9, ptr noundef %11, i32 noundef %12) #31
  %23 = sext i32 %22 to i64
  br label %24

24:                                               ; preds = %21, %18
  %25 = phi i64 [ %23, %21 ], [ -524, %18 ]
  ret i64 %25
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sk_getsockopt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #13 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %3 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = trunc i64 %4 to i32
  %13 = tail call fastcc i32 @_bpf_getsockopt(ptr noundef %7, i32 noundef %8, i32 noundef %9, ptr noundef %11, i32 noundef %12) #31
  %14 = sext i32 %13 to i64
  ret i64 %14
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_addr_setsockopt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %3 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = trunc i64 %4 to i32
  %13 = load ptr, ptr %7, align 8
  %14 = tail call fastcc i32 @_bpf_setsockopt(ptr noundef %13, i32 noundef %8, i32 noundef %9, ptr noundef %11, i32 noundef %12) #31
  %15 = sext i32 %14 to i64
  ret i64 %15
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sock_addr_getsockopt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #13 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %3 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = trunc i64 %4 to i32
  %13 = load ptr, ptr %7, align 8
  %14 = tail call fastcc i32 @_bpf_getsockopt(ptr noundef %13, i32 noundef %8, i32 noundef %9, ptr noundef %11, i32 noundef %12) #31
  %15 = sext i32 %14 to i64
  ret i64 %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_ops_setsockopt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %3 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = trunc i64 %4 to i32
  %13 = load ptr, ptr %7, align 8
  %14 = tail call fastcc i32 @_bpf_setsockopt(ptr noundef %13, i32 noundef %8, i32 noundef %9, ptr noundef %11, i32 noundef %12) #31
  %15 = sext i32 %14 to i64
  ret i64 %15
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sock_ops_getsockopt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #13 {
  %6 = alloca ptr, align 4
  %7 = trunc i64 %0 to i32
  %8 = inttoptr i32 %7 to ptr
  %9 = trunc i64 %1 to i32
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %3 to i32
  %12 = inttoptr i32 %11 to ptr
  %13 = trunc i64 %4 to i32
  %14 = icmp eq i32 %9, 6
  %15 = add i32 %10, -1005
  %16 = icmp ult i32 %15, 3
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %31

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  store ptr null, ptr %6, align 4, !annotation !22
  %19 = call fastcc i32 @bpf_sock_ops_get_syn(ptr noundef %8, i32 noundef %10, ptr noundef nonnull %6) #31
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %18
  %22 = icmp sgt i32 %19, %13
  %23 = select i1 %22, i32 -28, i32 %19
  %24 = tail call i32 @llvm.smin.i32(i32 %19, i32 %13) #31
  %25 = load ptr, ptr %6, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %12, ptr align 1 %25, i32 %24, i1 false) #31
  br label %26

26:                                               ; preds = %21, %18
  %27 = phi i32 [ %23, %21 ], [ %19, %18 ]
  %28 = phi i32 [ %24, %21 ], [ 0, %18 ]
  %29 = getelementptr i8, ptr %12, i32 %28
  %30 = sub i32 %13, %28
  tail call void @llvm.memset.p0.i32(ptr align 1 %29, i8 0, i32 %30, i1 false) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  br label %34

31:                                               ; preds = %5
  %32 = load ptr, ptr %8, align 8
  %33 = tail call fastcc i32 @_bpf_getsockopt(ptr noundef %32, i32 noundef %9, i32 noundef %10, ptr noundef %12, i32 noundef %13) #31
  br label %34

34:                                               ; preds = %31, %26
  %35 = phi i32 [ %27, %26 ], [ %33, %31 ]
  %36 = sext i32 %35 to i64
  ret i64 %36
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sock_ops_cb_flags_set(i64 noundef %0, i64 noundef %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.sock_common, ptr %8, i32 0, i32 4
  %10 = load volatile i8, ptr %9, align 2
  %11 = zext i8 %10 to i32
  %12 = shl nuw i32 1, %11
  %13 = and i32 %12, -4161
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %5
  %16 = trunc i64 %1 to i32
  %17 = trunc i64 %1 to i8
  %18 = and i8 %17, 127
  %19 = getelementptr inbounds %struct.tcp_sock, ptr %8, i32 0, i32 107
  store i8 %18, ptr %19, align 4
  %20 = and i32 %16, -128
  %21 = sext i32 %20 to i64
  br label %22

22:                                               ; preds = %15, %5
  %23 = phi i64 [ %21, %15 ], [ -22, %5 ]
  ret i64 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_bind(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = load ptr, ptr %7, align 8
  %12 = icmp ult i32 %10, 2
  br i1 %12, label %35, label %13

13:                                               ; preds = %5
  %14 = load i16, ptr %9, align 2
  switch i16 %14, label %35 [
    i16 2, label %15
    i16 10, label %24
  ]

15:                                               ; preds = %13
  %16 = icmp ult i32 %10, 16
  br i1 %16, label %35, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.sockaddr_in, ptr %9, i32 0, i32 1
  %19 = load i16, ptr %18, align 2
  %20 = icmp eq i16 %19, 0
  %21 = select i1 %20, i32 5, i32 4
  %22 = tail call i32 @__inet_bind(ptr noundef %11, ptr noundef %9, i32 noundef %10, i32 noundef %21) #31
  %23 = sext i32 %22 to i64
  br label %35

24:                                               ; preds = %13
  %25 = icmp slt i32 %10, 24
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.sockaddr_in6, ptr %9, i32 0, i32 1
  %28 = load i16, ptr %27, align 2
  %29 = icmp eq i16 %28, 0
  %30 = select i1 %29, i32 5, i32 4
  %31 = load ptr, ptr @ipv6_bpf_stub, align 4
  %32 = load ptr, ptr %31, align 4
  %33 = tail call i32 %32(ptr noundef %11, ptr noundef %9, i32 noundef %10, i32 noundef %30) #31
  %34 = sext i32 %33 to i64
  br label %35

35:                                               ; preds = %26, %24, %17, %15, %13, %5
  %36 = phi i64 [ %23, %17 ], [ %34, %26 ], [ -22, %5 ], [ -22, %15 ], [ -22, %24 ], [ -97, %13 ]
  ret i64 %36
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skb_get_xfrm_state(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #5 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 12
  %13 = load i8, ptr %12, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %53, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 20
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %struct.skb_ext, ptr %18, i32 0, i32 1
  %20 = load i8, ptr %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 3
  %23 = getelementptr i8, ptr %18, i32 %22
  %24 = icmp eq ptr %23, null
  br i1 %24, label %53, label %25

25:                                               ; preds = %16
  %26 = load i32, ptr %23, align 4
  %27 = icmp ugt i32 %26, %8
  %28 = icmp eq i64 %4, 0
  %29 = and i1 %28, %27
  %30 = icmp eq i32 %11, 28
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %53, !prof !58

32:                                               ; preds = %25
  %33 = getelementptr %struct.sec_path, ptr %23, i32 0, i32 2, i32 %8
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.xfrm_state, ptr %34, i32 0, i32 14
  %36 = load i32, ptr %35, align 8
  store i32 %36, ptr %10, align 4
  %37 = getelementptr inbounds %struct.xfrm_state, ptr %34, i32 0, i32 7, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.bpf_xfrm_state, ptr %10, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.xfrm_state, ptr %34, i32 0, i32 14, i32 7
  %41 = load i16, ptr %40, align 2
  %42 = getelementptr inbounds %struct.bpf_xfrm_state, ptr %10, i32 0, i32 2
  store i16 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.bpf_xfrm_state, ptr %10, i32 0, i32 3
  store i16 0, ptr %43, align 2
  %44 = icmp eq i16 %41, 10
  br i1 %44, label %45, label %48

45:                                               ; preds = %32
  %46 = getelementptr inbounds %struct.bpf_xfrm_state, ptr %10, i32 0, i32 4
  %47 = getelementptr inbounds %struct.xfrm_state, ptr %34, i32 0, i32 14, i32 8
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %46, ptr noundef align 4 dereferenceable(16) %47, i32 16, i1 false) #31
  br label %54

48:                                               ; preds = %32
  %49 = getelementptr inbounds %struct.xfrm_state, ptr %34, i32 0, i32 14, i32 8
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.bpf_xfrm_state, ptr %10, i32 0, i32 4
  store i32 %50, ptr %51, align 4
  %52 = getelementptr %struct.bpf_xfrm_state, ptr %10, i32 0, i32 4, i32 0, i32 1
  tail call void @llvm.memset.p0.i32(ptr noundef align 4 dereferenceable(12) %52, i8 0, i32 12, i1 false) #31
  br label %54

53:                                               ; preds = %25, %16, %5
  tail call void @llvm.memset.p0.i32(ptr align 4 %10, i8 0, i32 %11, i1 false) #31
  br label %54

54:                                               ; preds = %53, %48, %45
  %55 = phi i64 [ -22, %53 ], [ 0, %48 ], [ 0, %45 ]
  ret i64 %55
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_fib_lookup(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %1 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %3 to i32
  %9 = and i64 %2, 4294967232
  %10 = icmp ne i64 %9, 0
  %11 = icmp ult i32 %8, 4
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %5
  %14 = load i8, ptr %7, align 4
  switch i8 %14, label %21 [
    i8 2, label %15
    i8 10, label %18
  ]

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @bpf_ipv4_fib_lookup(ptr noundef %7, i32 noundef %8, i1 noundef zeroext true) #31
  %17 = sext i32 %16 to i64
  br label %21

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @bpf_ipv6_fib_lookup(ptr noundef %7, i32 noundef %8, i1 noundef zeroext true) #31
  %20 = sext i32 %19 to i64
  br label %21

21:                                               ; preds = %18, %15, %13, %5
  %22 = phi i64 [ %20, %18 ], [ %17, %15 ], [ -22, %5 ], [ -97, %13 ]
  ret i64 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_fib_lookup(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %3 to i32
  %11 = and i64 %2, 4294967232
  %12 = icmp ne i64 %11, 0
  %13 = icmp ult i32 %10, 4
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %40

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %9, i32 0, i32 4
  %17 = load i16, ptr %16, align 2
  %18 = icmp ne i16 %17, 0
  %19 = load i8, ptr %9, align 4
  switch i8 %19, label %37 [
    i8 2, label %20
    i8 10, label %22
  ]

20:                                               ; preds = %15
  %21 = tail call fastcc i32 @bpf_ipv4_fib_lookup(ptr noundef %9, i32 noundef %10, i1 noundef zeroext %18) #31
  br label %24

22:                                               ; preds = %15
  %23 = tail call fastcc i32 @bpf_ipv6_fib_lookup(ptr noundef %9, i32 noundef %10, i1 noundef zeroext %18) #31
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i32 [ %23, %22 ], [ %21, %20 ]
  %26 = icmp ne i32 %25, 0
  %27 = select i1 %26, i1 true, i1 %18
  br i1 %27, label %37, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %9, i32 0, i32 5
  %30 = load i32, ptr %29, align 4
  %31 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %30) #31
  %32 = tail call zeroext i1 @is_skb_forwardable(ptr noundef %31, ptr noundef %7) #31
  %33 = select i1 %32, i32 0, i32 8
  %34 = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 20
  %35 = load i32, ptr %34, align 4
  %36 = trunc i32 %35 to i16
  store i16 %36, ptr %16, align 2
  br label %37

37:                                               ; preds = %28, %24, %15
  %38 = phi i32 [ %33, %28 ], [ %25, %24 ], [ -97, %15 ]
  %39 = sext i32 %38 to i64
  br label %40

40:                                               ; preds = %37, %5
  %41 = phi i64 [ %39, %37 ], [ -22, %5 ]
  ret i64 %41
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_check_mtu(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = getelementptr inbounds %struct.anon.44, ptr %7, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = icmp ult i64 %4, 2
  br i1 %14, label %15, label %61, !prof !10

15:                                               ; preds = %5
  %16 = icmp eq i64 %4, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %11, 0
  br i1 %18, label %19, label %61

19:                                               ; preds = %17
  %20 = load i32, ptr %10, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %61, !prof !10

22:                                               ; preds = %19, %15
  %23 = icmp eq i32 %8, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %8) #31
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi ptr [ %25, %24 ], [ %13, %22 ]
  %28 = icmp eq ptr %27, null
  br i1 %28, label %61, label %29, !prof !18

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 20
  %31 = load volatile i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 19
  %33 = load i16, ptr %32, align 2
  %34 = zext i16 %33 to i32
  %35 = add i32 %31, %34
  %36 = load i32, ptr %10, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  %39 = add i32 %36, %34
  br label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 5
  %42 = load i32, ptr %41, align 8
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi i32 [ %39, %38 ], [ %42, %40 ]
  %45 = add i32 %44, %11
  %46 = icmp sgt i32 %45, %35
  br i1 %46, label %47, label %58

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 15
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.skb_shared_info, ptr %49, i32 0, i32 4
  %51 = load i16, ptr %50, align 4
  %52 = icmp eq i16 %51, 0
  %53 = or i1 %16, %52
  %54 = zext i1 %52 to i32
  br i1 %53, label %58, label %55

55:                                               ; preds = %47
  %56 = tail call zeroext i1 @skb_gso_validate_network_len(ptr noundef %7, i32 noundef %31) #31
  %57 = select i1 %56, i32 0, i32 2
  br label %58

58:                                               ; preds = %55, %47, %43
  %59 = phi i32 [ %54, %47 ], [ 0, %43 ], [ %57, %55 ]
  store i32 %31, ptr %10, align 4
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %58, %26, %19, %17, %5
  %62 = phi i64 [ %60, %58 ], [ -22, %5 ], [ -22, %19 ], [ -19, %26 ], [ -22, %17 ]
  ret i64 %62
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_check_mtu(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %7, align 4
  %15 = ptrtoint ptr %13 to i32
  %16 = ptrtoint ptr %14 to i32
  %17 = sub i32 %15, %16
  %18 = icmp eq i64 %4, 0
  br i1 %18, label %19, label %43, !prof !10

19:                                               ; preds = %5
  %20 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 4
  %21 = load ptr, ptr %20, align 4
  %22 = load ptr, ptr %21, align 64
  %23 = icmp eq i32 %8, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %8) #31
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi ptr [ %25, %24 ], [ %22, %19 ]
  %28 = icmp eq ptr %27, null
  br i1 %28, label %43, label %29, !prof !18

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 20
  %31 = load volatile i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 19
  %33 = load i16, ptr %32, align 2
  %34 = zext i16 %33 to i32
  %35 = add i32 %31, %34
  %36 = load i32, ptr %10, align 4
  %37 = icmp eq i32 %36, 0
  %38 = add i32 %36, %34
  %39 = select i1 %37, i32 %17, i32 %38
  %40 = add i32 %39, %11
  %41 = icmp sgt i32 %40, %35
  store i32 %31, ptr %10, align 4
  %42 = zext i1 %41 to i64
  br label %43

43:                                               ; preds = %29, %26, %5
  %44 = phi i64 [ %42, %29 ], [ -22, %5 ], [ -19, %26 ]
  ret i64 %44
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_lwt_in_push_encap(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #9 {
  ret i64 -22
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_lwt_xmit_push_encap(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #9 {
  ret i64 -22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skc_lookup_tcp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = getelementptr inbounds %struct.anon.44, ptr %7, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 17
  %16 = load i32, ptr %15, align 4
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i32 [ %16, %14 ], [ 0, %5 ]
  switch i32 %10, label %38 [
    i32 12, label %20
    i32 36, label %19
  ]

19:                                               ; preds = %17
  br label %20

20:                                               ; preds = %19, %17
  %21 = phi i8 [ 2, %17 ], [ 10, %19 ]
  %22 = icmp eq i64 %4, 0
  br i1 %22, label %23, label %38, !prof !58

23:                                               ; preds = %20
  %24 = and i64 %3, 2147483648
  %25 = icmp eq i64 %24, 0
  %26 = icmp ugt i64 %3, 2147483647
  %27 = and i1 %26, %25
  br i1 %27, label %38, label %28, !prof !18

28:                                               ; preds = %23
  %29 = trunc i64 %3 to i32
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %29) #31
  %33 = icmp eq ptr %32, null
  br i1 %33, label %38, label %34, !prof !18

34:                                               ; preds = %31, %28
  %35 = phi ptr [ @init_net, %28 ], [ %32, %31 ]
  %36 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %35, ptr noundef %9, i32 noundef %18, i8 noundef zeroext %21, i8 noundef zeroext 6) #31
  %37 = ptrtoint ptr %36 to i32
  br label %38

38:                                               ; preds = %34, %31, %23, %20, %17
  %39 = phi i32 [ 0, %23 ], [ 0, %31 ], [ 0, %20 ], [ 0, %17 ], [ %37, %34 ]
  %40 = zext i32 %39 to i64
  ret i64 %40
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sk_lookup_tcp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = tail call fastcc ptr @bpf_sk_lookup(ptr noundef %7, ptr noundef %9, i32 noundef %10, i8 noundef zeroext 6, i64 noundef %3, i64 noundef %4) #31
  %12 = ptrtoint ptr %11 to i32
  %13 = zext i32 %12 to i64
  ret i64 %13
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sk_lookup_udp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = tail call fastcc ptr @bpf_sk_lookup(ptr noundef %7, ptr noundef %9, i32 noundef %10, i8 noundef zeroext 17, i64 noundef %3, i64 noundef %4) #31
  %12 = ptrtoint ptr %11 to i32
  %13 = zext i32 %12 to i64
  ret i64 %13
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sk_release(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %11 = load volatile i8, ptr %10, align 2
  %12 = zext i8 %11 to i32
  %13 = shl nuw i32 1, %12
  %14 = and i32 %13, -4161
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %18 = load volatile i32, ptr %17, align 4
  %19 = and i32 %18, 8388608
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %16, %9
  tail call void @sock_gen_put(ptr noundef nonnull %7) #31
  br label %22

22:                                               ; preds = %21, %16, %5
  ret i64 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_sk_lookup_udp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %3 to i32
  %12 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %13, align 64
  %15 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 17
  %16 = load i32, ptr %15, align 4
  switch i32 %10, label %46 [
    i32 12, label %18
    i32 36, label %17
  ]

17:                                               ; preds = %5
  br label %18

18:                                               ; preds = %17, %5
  %19 = phi i8 [ 2, %5 ], [ 10, %17 ]
  %20 = icmp eq i64 %4, 0
  br i1 %20, label %21, label %46, !prof !58

21:                                               ; preds = %18
  %22 = icmp slt i32 %11, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %11) #31
  %25 = icmp eq ptr %24, null
  br i1 %25, label %46, label %26, !prof !18

26:                                               ; preds = %23, %21
  %27 = phi ptr [ @init_net, %21 ], [ %24, %23 ]
  %28 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %27, ptr noundef %9, i32 noundef %16, i8 noundef zeroext %19, i8 noundef zeroext 17) #31
  %29 = icmp eq ptr %28, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 4
  %32 = load volatile i8, ptr %31, align 2
  %33 = icmp eq i8 %32, 12
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 13
  %36 = load ptr, ptr %35, align 8
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi ptr [ %36, %34 ], [ %28, %30 ]
  %39 = getelementptr inbounds %struct.sock_common, ptr %38, i32 0, i32 4
  %40 = load volatile i8, ptr %39, align 2
  %41 = zext i8 %40 to i32
  %42 = shl nuw i32 1, %41
  %43 = and i32 %42, -4161
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @sock_gen_put(ptr noundef %38) #31
  br label %46

46:                                               ; preds = %45, %37, %26, %23, %18, %5
  %47 = phi ptr [ null, %45 ], [ %38, %37 ], [ null, %26 ], [ null, %23 ], [ null, %18 ], [ null, %5 ]
  %48 = ptrtoint ptr %47 to i32
  %49 = zext i32 %48 to i64
  ret i64 %49
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_skc_lookup_tcp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %3 to i32
  %12 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %13, align 64
  %15 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 17
  %16 = load i32, ptr %15, align 4
  switch i32 %10, label %30 [
    i32 12, label %18
    i32 36, label %17
  ]

17:                                               ; preds = %5
  br label %18

18:                                               ; preds = %17, %5
  %19 = phi i8 [ 2, %5 ], [ 10, %17 ]
  %20 = icmp eq i64 %4, 0
  br i1 %20, label %21, label %30, !prof !58

21:                                               ; preds = %18
  %22 = icmp slt i32 %11, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %11) #31
  %25 = icmp eq ptr %24, null
  br i1 %25, label %30, label %26, !prof !18

26:                                               ; preds = %23, %21
  %27 = phi ptr [ @init_net, %21 ], [ %24, %23 ]
  %28 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %27, ptr noundef %9, i32 noundef %16, i8 noundef zeroext %19, i8 noundef zeroext 6) #31
  %29 = ptrtoint ptr %28 to i32
  br label %30

30:                                               ; preds = %26, %23, %18, %5
  %31 = phi i32 [ 0, %23 ], [ 0, %18 ], [ 0, %5 ], [ %29, %26 ]
  %32 = zext i32 %31 to i64
  ret i64 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_xdp_sk_lookup_tcp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %3 to i32
  %12 = getelementptr inbounds %struct.xdp_buff, ptr %7, i32 0, i32 4
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %13, align 64
  %15 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 17
  %16 = load i32, ptr %15, align 4
  switch i32 %10, label %46 [
    i32 12, label %18
    i32 36, label %17
  ]

17:                                               ; preds = %5
  br label %18

18:                                               ; preds = %17, %5
  %19 = phi i8 [ 2, %5 ], [ 10, %17 ]
  %20 = icmp eq i64 %4, 0
  br i1 %20, label %21, label %46, !prof !58

21:                                               ; preds = %18
  %22 = icmp slt i32 %11, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %11) #31
  %25 = icmp eq ptr %24, null
  br i1 %25, label %46, label %26, !prof !18

26:                                               ; preds = %23, %21
  %27 = phi ptr [ @init_net, %21 ], [ %24, %23 ]
  %28 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %27, ptr noundef %9, i32 noundef %16, i8 noundef zeroext %19, i8 noundef zeroext 6) #31
  %29 = icmp eq ptr %28, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 4
  %32 = load volatile i8, ptr %31, align 2
  %33 = icmp eq i8 %32, 12
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 13
  %36 = load ptr, ptr %35, align 8
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi ptr [ %36, %34 ], [ %28, %30 ]
  %39 = getelementptr inbounds %struct.sock_common, ptr %38, i32 0, i32 4
  %40 = load volatile i8, ptr %39, align 2
  %41 = zext i8 %40 to i32
  %42 = shl nuw i32 1, %41
  %43 = and i32 %42, -4161
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @sock_gen_put(ptr noundef %38) #31
  br label %46

46:                                               ; preds = %45, %37, %26, %23, %18, %5
  %47 = phi ptr [ null, %45 ], [ %38, %37 ], [ null, %26 ], [ null, %23 ], [ null, %18 ], [ null, %5 ]
  %48 = ptrtoint ptr %47 to i32
  %49 = zext i32 %48 to i64
  ret i64 %49
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_addr_skc_lookup_tcp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %1 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %2 to i32
  switch i32 %8, label %28 [
    i32 12, label %10
    i32 36, label %9
  ]

9:                                                ; preds = %5
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i8 [ 2, %5 ], [ 10, %9 ]
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %13, label %28, !prof !58

13:                                               ; preds = %10
  %14 = and i64 %3, 2147483648
  %15 = icmp eq i64 %14, 0
  %16 = icmp ugt i64 %3, 2147483647
  %17 = and i1 %16, %15
  br i1 %17, label %28, label %18, !prof !18

18:                                               ; preds = %13
  %19 = trunc i64 %3 to i32
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %19) #31
  %23 = icmp eq ptr %22, null
  br i1 %23, label %28, label %24, !prof !18

24:                                               ; preds = %21, %18
  %25 = phi ptr [ @init_net, %18 ], [ %22, %21 ]
  %26 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %25, ptr noundef %7, i32 noundef 0, i8 noundef zeroext %11, i8 noundef zeroext 6) #31
  %27 = ptrtoint ptr %26 to i32
  br label %28

28:                                               ; preds = %24, %21, %13, %10, %5
  %29 = phi i32 [ 0, %13 ], [ 0, %21 ], [ 0, %10 ], [ 0, %5 ], [ %27, %24 ]
  %30 = zext i32 %29 to i64
  ret i64 %30
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_addr_sk_lookup_tcp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %1 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %2 to i32
  switch i32 %8, label %44 [
    i32 12, label %10
    i32 36, label %9
  ]

9:                                                ; preds = %5
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i8 [ 2, %5 ], [ 10, %9 ]
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %13, label %44, !prof !58

13:                                               ; preds = %10
  %14 = and i64 %3, 2147483648
  %15 = icmp eq i64 %14, 0
  %16 = icmp ugt i64 %3, 2147483647
  %17 = and i1 %16, %15
  br i1 %17, label %44, label %18, !prof !18

18:                                               ; preds = %13
  %19 = trunc i64 %3 to i32
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %19) #31
  %23 = icmp eq ptr %22, null
  br i1 %23, label %44, label %24, !prof !18

24:                                               ; preds = %21, %18
  %25 = phi ptr [ @init_net, %18 ], [ %22, %21 ]
  %26 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %25, ptr noundef %7, i32 noundef 0, i8 noundef zeroext %11, i8 noundef zeroext 6) #31
  %27 = icmp eq ptr %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 4
  %30 = load volatile i8, ptr %29, align 2
  %31 = icmp eq i8 %30, 12
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 13
  %34 = load ptr, ptr %33, align 8
  br label %35

35:                                               ; preds = %32, %28
  %36 = phi ptr [ %34, %32 ], [ %26, %28 ]
  %37 = getelementptr inbounds %struct.sock_common, ptr %36, i32 0, i32 4
  %38 = load volatile i8, ptr %37, align 2
  %39 = zext i8 %38 to i32
  %40 = shl nuw i32 1, %39
  %41 = and i32 %40, -4161
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @sock_gen_put(ptr noundef %36) #31
  br label %44

44:                                               ; preds = %43, %35, %24, %21, %13, %10, %5
  %45 = phi ptr [ null, %43 ], [ %36, %35 ], [ null, %24 ], [ null, %13 ], [ null, %21 ], [ null, %10 ], [ null, %5 ]
  %46 = ptrtoint ptr %45 to i32
  %47 = zext i32 %46 to i64
  ret i64 %47
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_addr_sk_lookup_udp(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #0 {
  %6 = trunc i64 %1 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %2 to i32
  switch i32 %8, label %44 [
    i32 12, label %10
    i32 36, label %9
  ]

9:                                                ; preds = %5
  br label %10

10:                                               ; preds = %9, %5
  %11 = phi i8 [ 2, %5 ], [ 10, %9 ]
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %13, label %44, !prof !58

13:                                               ; preds = %10
  %14 = and i64 %3, 2147483648
  %15 = icmp eq i64 %14, 0
  %16 = icmp ugt i64 %3, 2147483647
  %17 = and i1 %16, %15
  br i1 %17, label %44, label %18, !prof !18

18:                                               ; preds = %13
  %19 = trunc i64 %3 to i32
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %19) #31
  %23 = icmp eq ptr %22, null
  br i1 %23, label %44, label %24, !prof !18

24:                                               ; preds = %21, %18
  %25 = phi ptr [ @init_net, %18 ], [ %22, %21 ]
  %26 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %25, ptr noundef %7, i32 noundef 0, i8 noundef zeroext %11, i8 noundef zeroext 17) #31
  %27 = icmp eq ptr %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 4
  %30 = load volatile i8, ptr %29, align 2
  %31 = icmp eq i8 %30, 12
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 13
  %34 = load ptr, ptr %33, align 8
  br label %35

35:                                               ; preds = %32, %28
  %36 = phi ptr [ %34, %32 ], [ %26, %28 ]
  %37 = getelementptr inbounds %struct.sock_common, ptr %36, i32 0, i32 4
  %38 = load volatile i8, ptr %37, align 2
  %39 = zext i8 %38 to i32
  %40 = shl nuw i32 1, %39
  %41 = and i32 %40, -4161
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @sock_gen_put(ptr noundef %36) #31
  br label %44

44:                                               ; preds = %43, %35, %24, %21, %13, %10, %5
  %45 = phi ptr [ null, %43 ], [ %36, %35 ], [ null, %24 ], [ null, %13 ], [ null, %21 ], [ null, %10 ], [ null, %5 ]
  %46 = ptrtoint ptr %45 to i32
  %47 = zext i32 %46 to i64
  ret i64 %47
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @bpf_tcp_sock_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3) local_unnamed_addr #9 {
  %5 = icmp ugt i32 %0, 111
  br i1 %5, label %14, label %6

6:                                                ; preds = %4
  %7 = srem i32 %0, %1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %6
  switch i32 %0, label %12 [
    i32 80, label %10
    i32 88, label %10
  ]

10:                                               ; preds = %9, %9
  %11 = icmp eq i32 %1, 8
  br label %14

12:                                               ; preds = %9
  %13 = icmp eq i32 %1, 4
  br label %14

14:                                               ; preds = %12, %10, %6, %4
  %15 = phi i1 [ %13, %12 ], [ %11, %10 ], [ false, %4 ], [ false, %6 ]
  ret i1 %15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @bpf_tcp_sock_convert_ctx_access(i32 noundef %0, ptr noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4) local_unnamed_addr #14 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  %9 = tail call i32 @llvm.fshl.i32(i32 %8, i32 %8, i32 30)
  %10 = icmp ult i32 %9, 28
  br i1 %10, label %11, label %26

11:                                               ; preds = %5
  %12 = lshr i32 257949695, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds [28 x i8], ptr @switch.table.bpf_tcp_sock_convert_ctx_access, i32 0, i32 %9
  %17 = load i8, ptr %16, align 1
  %18 = getelementptr inbounds [28 x i16], ptr @switch.table.bpf_tcp_sock_convert_ctx_access.19, i32 0, i32 %9
  %19 = load i16, ptr %18, align 2
  %20 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %21 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %22 = load i8, ptr %21, align 1
  store i8 %17, ptr %2, align 4
  %23 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %22, ptr %23, align 1
  %24 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %19, ptr %24, align 2
  %25 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %25, align 4
  br label %26

26:                                               ; preds = %15, %11, %5
  %27 = phi ptr [ %2, %5 ], [ %20, %15 ], [ %2, %11 ]
  %28 = ptrtoint ptr %27 to i32
  %29 = ptrtoint ptr %2 to i32
  %30 = sub i32 %28, %29
  %31 = ashr exact i32 %30, 3
  ret i32 %31
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_tcp_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %9 = load volatile i8, ptr %8, align 2
  %10 = zext i8 %9 to i32
  %11 = shl nuw i32 1, %10
  %12 = and i32 %11, -4161
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 46
  %16 = load i16, ptr %15, align 4
  %17 = icmp eq i16 %16, 6
  %18 = and i64 %0, 4294967295
  %19 = select i1 %17, i64 %18, i64 0
  br label %20

20:                                               ; preds = %14, %5
  %21 = phi i64 [ 0, %5 ], [ %19, %14 ]
  ret i64 %21
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_get_listener_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %11 = load volatile i8, ptr %10, align 2
  %12 = icmp eq i8 %11, 12
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %15 = load ptr, ptr %14, align 8
  br label %16

16:                                               ; preds = %13, %9, %5
  %17 = phi ptr [ %15, %13 ], [ %7, %9 ], [ null, %5 ]
  %18 = getelementptr inbounds %struct.sock_common, ptr %17, i32 0, i32 4
  %19 = load volatile i8, ptr %18, align 2
  %20 = icmp eq i8 %19, 10
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.sock_common, ptr %17, i32 0, i32 13
  %23 = load volatile i32, ptr %22, align 4
  %24 = and i32 %23, 8388608
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = ptrtoint ptr %17 to i32
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %26, %21, %16
  %30 = phi i64 [ %28, %26 ], [ 0, %21 ], [ 0, %16 ]
  ret i64 %30
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_skb_ecn_set_ce(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = alloca %struct.vlan_hdr, align 4
  %7 = alloca %struct.vlan_hdr, align 4
  %8 = trunc i64 %0 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 13, i32 0, i32 16
  %11 = load i16, ptr %10, align 8
  %12 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 7
  %13 = load i16, ptr %12, align 8
  %14 = zext i16 %13 to i32
  switch i16 %11, label %56 [
    i16 -22392, label %15
    i16 129, label %15
  ]

15:                                               ; preds = %5, %5
  %16 = icmp eq i16 %13, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %15
  %18 = icmp ult i16 %13, 4
  br i1 %18, label %19, label %20, !prof !18

19:                                               ; preds = %17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.18, i32 noundef 598, i32 noundef 9, ptr noundef null) #31
  br label %214

20:                                               ; preds = %17
  %21 = add nsw i32 %14, -4
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i32 [ %21, %20 ], [ 14, %15 ]
  %24 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 5
  %25 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 6
  %26 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 17
  %27 = icmp eq i32 %8, 0
  br label %28

28:                                               ; preds = %54, %22
  %29 = phi i32 [ %23, %22 ], [ %55, %54 ]
  %30 = phi i32 [ 8, %22 ], [ %47, %54 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  store i32 0, ptr %7, align 4, !annotation !22
  %31 = load i32, ptr %24, align 8
  %32 = load i32, ptr %25, align 4
  %33 = add i32 %29, %32
  %34 = sub i32 %31, %33
  %35 = icmp slt i32 %34, 4
  br i1 %35, label %39, label %36, !prof !18

36:                                               ; preds = %28
  %37 = load ptr, ptr %26, align 4
  %38 = getelementptr i8, ptr %37, i32 %29
  br label %44

39:                                               ; preds = %28
  br i1 %27, label %50, label %40

40:                                               ; preds = %39
  %41 = call i32 @skb_copy_bits(ptr noundef nonnull %9, i32 noundef %29, ptr noundef nonnull %7, i32 noundef 4) #31
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, ptr null, ptr %7, !prof !18
  br label %44

44:                                               ; preds = %40, %36
  %45 = phi ptr [ %38, %36 ], [ %43, %40 ]
  %46 = icmp eq ptr %45, null
  %47 = add nsw i32 %30, -1
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %46, i1 true, i1 %48, !prof !18
  br i1 %49, label %50, label %51, !prof !18

50:                                               ; preds = %44, %39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  br label %214

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.vlan_hdr, ptr %45, i32 0, i32 1
  %53 = load i16, ptr %52, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  switch i16 %53, label %56 [
    i16 -22392, label %54
    i16 129, label %54
  ]

54:                                               ; preds = %51, %51
  %55 = add nsw i32 %29, 4
  br label %28

56:                                               ; preds = %51, %5
  %57 = phi i16 [ %11, %5 ], [ %53, %51 ]
  switch i16 %57, label %214 [
    i16 8, label %59
    i16 -8826, label %58
  ]

58:                                               ; preds = %56
  br label %59

59:                                               ; preds = %58, %56
  %60 = phi i32 [ 40, %58 ], [ 20, %56 ]
  %61 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 5
  %62 = load i32, ptr %61, align 8
  %63 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 6
  %64 = load i32, ptr %63, align 4
  %65 = sub i32 %62, %64
  %66 = icmp ult i32 %65, %60
  br i1 %66, label %214, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 11
  %69 = load i8, ptr %68, align 2
  %70 = and i8 %69, 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %98, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 15
  %74 = load ptr, ptr %73, align 4
  %75 = getelementptr inbounds %struct.skb_shared_info, ptr %74, i32 0, i32 10
  %76 = load volatile i32, ptr %75, align 4
  %77 = and i32 %76, 65535
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %98, label %79

79:                                               ; preds = %72
  %80 = load volatile i32, ptr %75, align 4
  %81 = and i32 %80, 65535
  %82 = ashr i32 %80, 16
  %83 = sub nsw i32 %81, %82
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %214

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 17
  %87 = load ptr, ptr %86, align 4
  %88 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 16
  %89 = load ptr, ptr %88, align 8
  %90 = ptrtoint ptr %87 to i32
  %91 = ptrtoint ptr %89 to i32
  %92 = add i32 %60, %90
  %93 = sub i32 %92, %91
  %94 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 8
  %95 = load i16, ptr %94, align 2
  %96 = zext i16 %95 to i32
  %97 = icmp ugt i32 %93, %96
  br i1 %97, label %214, label %98

98:                                               ; preds = %85, %72, %67
  %99 = load i16, ptr %10, align 8
  %100 = load i16, ptr %12, align 8
  %101 = zext i16 %100 to i32
  switch i16 %99, label %143 [
    i16 -22392, label %102
    i16 129, label %102
  ]

102:                                              ; preds = %98, %98
  %103 = icmp eq i16 %100, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %102
  %105 = icmp ult i16 %100, 4
  br i1 %105, label %106, label %107, !prof !18

106:                                              ; preds = %104
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.18, i32 noundef 598, i32 noundef 9, ptr noundef null) #31
  br label %211

107:                                              ; preds = %104
  %108 = add nsw i32 %101, -4
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i32 [ %108, %107 ], [ 14, %102 ]
  %111 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 17
  %112 = icmp eq i32 %8, 0
  br label %113

113:                                              ; preds = %139, %109
  %114 = phi i32 [ %64, %109 ], [ %142, %139 ]
  %115 = phi i32 [ %62, %109 ], [ %141, %139 ]
  %116 = phi i32 [ %110, %109 ], [ %140, %139 ]
  %117 = phi i32 [ 8, %109 ], [ %132, %139 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #31
  store i32 0, ptr %6, align 4, !annotation !22
  %118 = add i32 %114, %116
  %119 = sub i32 %115, %118
  %120 = icmp slt i32 %119, 4
  br i1 %120, label %124, label %121, !prof !18

121:                                              ; preds = %113
  %122 = load ptr, ptr %111, align 4
  %123 = getelementptr i8, ptr %122, i32 %116
  br label %129

124:                                              ; preds = %113
  br i1 %112, label %135, label %125

125:                                              ; preds = %124
  %126 = call i32 @skb_copy_bits(ptr noundef nonnull %9, i32 noundef %116, ptr noundef nonnull %6, i32 noundef 4) #31
  %127 = icmp slt i32 %126, 0
  %128 = select i1 %127, ptr null, ptr %6, !prof !18
  br label %129

129:                                              ; preds = %125, %121
  %130 = phi ptr [ %123, %121 ], [ %128, %125 ]
  %131 = icmp eq ptr %130, null
  %132 = add nsw i32 %117, -1
  %133 = icmp eq i32 %132, 0
  %134 = select i1 %131, i1 true, i1 %133, !prof !18
  br i1 %134, label %135, label %136, !prof !18

135:                                              ; preds = %129, %124
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  br label %211

136:                                              ; preds = %129
  %137 = getelementptr inbounds %struct.vlan_hdr, ptr %130, i32 0, i32 1
  %138 = load i16, ptr %137, align 2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #31
  switch i16 %138, label %143 [
    i16 -22392, label %139
    i16 129, label %139
  ]

139:                                              ; preds = %136, %136
  %140 = add nsw i32 %116, 4
  %141 = load i32, ptr %61, align 8
  %142 = load i32, ptr %63, align 4
  br label %113

143:                                              ; preds = %136, %98
  %144 = phi i16 [ %99, %98 ], [ %138, %136 ]
  switch i16 %144, label %211 [
    i16 8, label %145
    i16 -8826, label %177
  ]

145:                                              ; preds = %143
  %146 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 16
  %147 = load ptr, ptr %146, align 8
  %148 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 13, i32 0, i32 18
  %149 = load i16, ptr %148, align 4
  %150 = zext i16 %149 to i32
  %151 = getelementptr i8, ptr %147, i32 %150
  %152 = getelementptr i8, ptr %151, i32 20
  %153 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 14
  %154 = load ptr, ptr %153, align 8
  %155 = icmp ugt ptr %152, %154
  br i1 %155, label %211, label %156

156:                                              ; preds = %145
  %157 = getelementptr inbounds %struct.iphdr, ptr %151, i32 0, i32 1
  %158 = load i8, ptr %157, align 1
  %159 = add i8 %158, 1
  %160 = and i8 %159, 3
  %161 = and i8 %159, 2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %156
  %164 = icmp eq i8 %160, 0
  %165 = zext i1 %164 to i32
  br label %211

166:                                              ; preds = %156
  %167 = zext i8 %160 to i16
  %168 = shl nuw nsw i16 %167, 8
  %169 = add nuw nsw i16 %168, -1025
  %170 = getelementptr inbounds %struct.iphdr, ptr %151, i32 0, i32 7
  %171 = load i16, ptr %170, align 2
  %172 = add i16 %171, %169
  %173 = icmp ult i16 %172, %169
  %174 = zext i1 %173 to i16
  %175 = add i16 %172, %174
  store i16 %175, ptr %170, align 2
  %176 = or i8 %158, 3
  store i8 %176, ptr %157, align 1
  br label %211

177:                                              ; preds = %143
  %178 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 16
  %179 = load ptr, ptr %178, align 8
  %180 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 13, i32 0, i32 18
  %181 = load i16, ptr %180, align 4
  %182 = zext i16 %181 to i32
  %183 = getelementptr i8, ptr %179, i32 %182
  %184 = getelementptr i8, ptr %183, i32 40
  %185 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 14
  %186 = load ptr, ptr %185, align 8
  %187 = icmp ugt ptr %184, %186
  br i1 %187, label %211, label %188

188:                                              ; preds = %177
  %189 = load i16, ptr %183, align 2
  %190 = and i16 %189, 12288
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %211, label %192

192:                                              ; preds = %188
  %193 = load i32, ptr %183, align 4
  %194 = or i32 %193, 12288
  store i32 %194, ptr %183, align 4
  %195 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 13
  %196 = load i16, ptr %195, align 8
  %197 = and i16 %196, 96
  %198 = icmp eq i16 %197, 64
  br i1 %198, label %199, label %211

199:                                              ; preds = %192
  %200 = getelementptr inbounds %struct.sk_buff, ptr %9, i32 0, i32 13, i32 0, i32 4
  %201 = load i32, ptr %200, align 4
  %202 = xor i32 %193, -1
  %203 = add i32 %201, %202
  %204 = icmp ult i32 %203, %202
  %205 = zext i1 %204 to i32
  %206 = add i32 %203, %194
  %207 = add i32 %206, %205
  %208 = icmp ult i32 %207, %194
  %209 = zext i1 %208 to i32
  %210 = add i32 %207, %209
  store i32 %210, ptr %200, align 4
  br label %211

211:                                              ; preds = %199, %192, %188, %177, %166, %163, %145, %143, %135, %106
  %212 = phi i32 [ 0, %177 ], [ 0, %145 ], [ 0, %143 ], [ 1, %166 ], [ %165, %163 ], [ 0, %188 ], [ 1, %199 ], [ 1, %192 ], [ 0, %106 ], [ 0, %135 ]
  %213 = zext i32 %212 to i64
  br label %214

214:                                              ; preds = %211, %85, %79, %59, %56, %50, %19
  %215 = phi i64 [ %213, %211 ], [ 0, %56 ], [ 0, %59 ], [ 0, %85 ], [ 0, %19 ], [ 0, %50 ], [ 0, %79 ]
  ret i64 %215
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @bpf_xdp_sock_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3) local_unnamed_addr #9 {
  %5 = icmp ugt i32 %0, 3
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = srem i32 %0, %1
  %8 = icmp eq i32 %7, 0
  %9 = icmp eq i32 %1, 4
  %10 = and i1 %9, %8
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i1 [ false, %4 ], [ %10, %6 ]
  ret i1 %12
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @bpf_xdp_sock_convert_ctx_access(i32 noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4) local_unnamed_addr #15 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %11 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  store i8 105, ptr %2, align 4
  %13 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %12, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 600, ptr %14, align 2
  %15 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %15, align 4
  br label %16

16:                                               ; preds = %9, %5
  %17 = phi ptr [ %10, %9 ], [ %2, %5 ]
  %18 = ptrtoint ptr %17 to i32
  %19 = ptrtoint ptr %2 to i32
  %20 = sub i32 %18, %19
  %21 = ashr exact i32 %20, 3
  ret i32 %21
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_tcp_check_syncookie(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #9 {
  ret i64 -524
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_tcp_gen_syncookie(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #9 {
  ret i64 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sk_assign(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #9 {
  %6 = trunc i64 %1 to i32
  %7 = icmp eq i32 %6, 0
  %8 = icmp ne i64 %2, 0
  %9 = or i1 %7, %8
  %10 = select i1 %9, i64 -22, i64 -95
  ret i64 %10
}

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_ops_load_hdr_opt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #16 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = and i64 %3, 1
  %12 = icmp eq i64 %11, 0
  %13 = icmp ugt i32 %10, 1
  %14 = icmp ult i64 %3, 2
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %148

16:                                               ; preds = %5
  %17 = load i8, ptr %9, align 1
  %18 = getelementptr i8, ptr %9, i32 1
  %19 = load i8, ptr %18, align 1
  %20 = freeze i8 %19
  %21 = zext i8 %20 to i32
  %22 = icmp ugt i32 %21, %10
  %23 = icmp ult i8 %17, 2
  %24 = select i1 %22, i1 true, i1 %23
  br i1 %24, label %148, label %25

25:                                               ; preds = %16
  %26 = add i8 %17, 3
  %27 = icmp ult i8 %26, 2
  br i1 %27, label %28, label %34

28:                                               ; preds = %25
  %29 = and i8 %20, -3
  %30 = icmp eq i8 %29, 4
  br i1 %30, label %31, label %148

31:                                               ; preds = %28
  %32 = getelementptr i8, ptr %9, i32 2
  %33 = add nsw i8 %20, -2
  br label %36

34:                                               ; preds = %25
  %35 = icmp eq i8 %20, 0
  br i1 %35, label %36, label %148

36:                                               ; preds = %34, %31
  %37 = phi ptr [ %32, %31 ], [ null, %34 ]
  %38 = phi i8 [ %33, %31 ], [ 0, %34 ]
  br i1 %12, label %84, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 2
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.sk_buff, ptr %41, i32 0, i32 17
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.sk_buff, ptr %41, i32 0, i32 16
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %struct.sk_buff, ptr %41, i32 0, i32 13, i32 0, i32 17
  %49 = load i16, ptr %48, align 2
  %50 = zext i16 %49 to i32
  %51 = getelementptr i8, ptr %47, i32 %50
  %52 = getelementptr inbounds %struct.tcphdr, ptr %51, i32 0, i32 4
  %53 = load i16, ptr %52, align 4
  %54 = lshr i16 %53, 2
  %55 = and i16 %54, 60
  %56 = zext i16 %55 to i32
  br label %80

57:                                               ; preds = %39
  %58 = load ptr, ptr %7, align 8
  %59 = getelementptr inbounds %struct.sock_common, ptr %58, i32 0, i32 4
  %60 = load volatile i8, ptr %59, align 2
  %61 = icmp eq i8 %60, 12
  %62 = getelementptr inbounds %struct.request_sock, ptr %58, i32 0, i32 9
  %63 = getelementptr inbounds %struct.tcp_sock, ptr %58, i32 0, i32 117
  %64 = select i1 %61, ptr %62, ptr %63
  %65 = load ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %57
  %68 = getelementptr inbounds %struct.saved_syn, ptr %65, i32 0, i32 3
  %69 = load i32, ptr %65, align 4
  %70 = getelementptr i8, ptr %68, i32 %69
  %71 = getelementptr inbounds %struct.saved_syn, ptr %65, i32 0, i32 1
  %72 = load i32, ptr %71, align 4
  %73 = getelementptr i8, ptr %70, i32 %72
  %74 = getelementptr inbounds %struct.saved_syn, ptr %65, i32 0, i32 2
  %75 = load i32, ptr %74, align 4
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %67, %57
  %78 = phi i32 [ %75, %67 ], [ -2, %57 ]
  %79 = sext i32 %78 to i64
  br label %148

80:                                               ; preds = %67, %43
  %81 = phi i32 [ %56, %43 ], [ %75, %67 ]
  %82 = phi ptr [ %45, %43 ], [ %73, %67 ]
  %83 = getelementptr i8, ptr %82, i32 %81
  br label %97

84:                                               ; preds = %36
  %85 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 3
  %86 = load ptr, ptr %85, align 8
  %87 = icmp eq ptr %86, null
  br i1 %87, label %148, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 5
  %90 = load i8, ptr %89, align 8
  %91 = icmp eq i8 %90, 14
  br i1 %91, label %148, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 4
  %94 = load ptr, ptr %93, align 4
  %95 = getelementptr inbounds %struct.sk_buff, ptr %86, i32 0, i32 17
  %96 = load ptr, ptr %95, align 4
  br label %97

97:                                               ; preds = %92, %80
  %98 = phi ptr [ %96, %92 ], [ %82, %80 ]
  %99 = phi ptr [ %94, %92 ], [ %83, %80 ]
  %100 = getelementptr i8, ptr %98, i32 20
  %101 = icmp ult ptr %100, %99
  br i1 %101, label %102, label %136

102:                                              ; preds = %97
  %103 = ptrtoint ptr %99 to i32
  %104 = icmp eq i8 %38, 0
  %105 = zext i8 %38 to i32
  br label %106

106:                                              ; preds = %109, %102
  %107 = phi ptr [ %100, %102 ], [ %111, %109 ]
  %108 = load i8, ptr %107, align 1
  switch i8 %108, label %113 [
    i8 0, label %136
    i8 1, label %109
  ]

109:                                              ; preds = %130, %124, %106
  %110 = phi i32 [ %120, %130 ], [ %120, %124 ], [ 1, %106 ]
  %111 = getelementptr i8, ptr %107, i32 %110
  %112 = icmp ult ptr %111, %99
  br i1 %112, label %106, label %136

113:                                              ; preds = %106
  %114 = ptrtoint ptr %107 to i32
  %115 = sub i32 %103, %114
  %116 = icmp slt i32 %115, 2
  br i1 %116, label %136, label %117

117:                                              ; preds = %113
  %118 = getelementptr i8, ptr %107, i32 1
  %119 = load i8, ptr %118, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp ult i32 %115, %120
  %122 = icmp ult i8 %119, 2
  %123 = or i1 %122, %121
  br i1 %123, label %136, label %124

124:                                              ; preds = %117
  %125 = icmp eq i8 %108, %17
  br i1 %125, label %126, label %109

126:                                              ; preds = %124
  br i1 %104, label %134, label %127

127:                                              ; preds = %126
  %128 = add nsw i32 %120, -2
  %129 = icmp slt i32 %128, %105
  br i1 %129, label %136, label %130

130:                                              ; preds = %127
  %131 = getelementptr i8, ptr %107, i32 2
  %132 = tail call i32 @bcmp(ptr %131, ptr %37, i32 %105) #31
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %109

134:                                              ; preds = %130, %126
  %135 = icmp ugt ptr %107, inttoptr (i32 -4096 to ptr)
  br i1 %135, label %136, label %140

136:                                              ; preds = %134, %127, %117, %113, %109, %106, %97
  %137 = phi ptr [ %107, %134 ], [ inttoptr (i32 -42 to ptr), %97 ], [ inttoptr (i32 -42 to ptr), %106 ], [ inttoptr (i32 -42 to ptr), %109 ], [ inttoptr (i32 -42 to ptr), %127 ], [ inttoptr (i32 -14 to ptr), %113 ], [ inttoptr (i32 -14 to ptr), %117 ]
  %138 = ptrtoint ptr %137 to i32
  %139 = sext i32 %138 to i64
  br label %148

140:                                              ; preds = %134
  %141 = zext i8 %119 to i32
  %142 = icmp ugt i32 %141, %10
  %143 = trunc i64 %2 to i8
  %144 = select i1 %142, i8 %143, i8 %119
  %145 = select i1 %142, i32 -28, i32 %141
  %146 = zext i8 %144 to i32
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %9, ptr align 1 %107, i32 %146, i1 false) #31
  %147 = sext i32 %145 to i64
  br label %148

148:                                              ; preds = %140, %136, %88, %84, %77, %34, %28, %16, %5
  %149 = phi i64 [ %79, %77 ], [ %139, %136 ], [ %147, %140 ], [ -22, %5 ], [ -22, %16 ], [ -22, %28 ], [ -22, %34 ], [ -1, %88 ], [ -1, %84 ]
  ret i64 %149
}

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_ops_store_hdr_opt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #16 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 5
  %12 = load i8, ptr %11, align 8
  %13 = icmp eq i8 %12, 15
  br i1 %13, label %14, label %92

14:                                               ; preds = %5
  %15 = icmp ult i32 %10, 2
  %16 = icmp ne i64 %3, 0
  %17 = or i1 %15, %16
  br i1 %17, label %92, label %18

18:                                               ; preds = %14
  %19 = load i8, ptr %9, align 1
  %20 = getelementptr i8, ptr %9, i32 1
  %21 = load i8, ptr %20, align 1
  %22 = freeze i8 %21
  %23 = zext i8 %22 to i32
  %24 = icmp ugt i32 %23, %10
  %25 = icmp ult i8 %19, 2
  %26 = select i1 %24, i1 true, i1 %25
  br i1 %26, label %92, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 7
  %29 = load i8, ptr %28, align 2
  %30 = icmp ugt i8 %22, %29
  br i1 %30, label %92, label %31

31:                                               ; preds = %27
  %32 = add i8 %19, 3
  %33 = icmp ult i8 %32, 2
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = icmp ult i8 %22, 4
  br i1 %35, label %92, label %36

36:                                               ; preds = %34
  %37 = getelementptr i8, ptr %9, i32 2
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ 2, %36 ], [ 0, %31 ]
  %40 = phi ptr [ %37, %36 ], [ null, %31 ]
  %41 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 3
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.sk_buff, ptr %42, i32 0, i32 17
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr i8, ptr %44, i32 20
  %46 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 4
  %47 = load ptr, ptr %46, align 4
  %48 = icmp ult ptr %45, %47
  br i1 %48, label %49, label %87

49:                                               ; preds = %38
  %50 = ptrtoint ptr %47 to i32
  br label %51

51:                                               ; preds = %54, %49
  %52 = phi ptr [ %45, %49 ], [ %56, %54 ]
  %53 = load i8, ptr %52, align 1
  switch i8 %53, label %58 [
    i8 0, label %92
    i8 1, label %54
  ]

54:                                               ; preds = %75, %69, %51
  %55 = phi i32 [ %65, %75 ], [ %65, %69 ], [ 1, %51 ]
  %56 = getelementptr i8, ptr %52, i32 %55
  %57 = icmp ult ptr %56, %47
  br i1 %57, label %51, label %87

58:                                               ; preds = %51
  %59 = ptrtoint ptr %52 to i32
  %60 = sub i32 %50, %59
  %61 = icmp slt i32 %60, 2
  br i1 %61, label %83, label %62

62:                                               ; preds = %58
  %63 = getelementptr i8, ptr %52, i32 1
  %64 = load i8, ptr %63, align 1
  %65 = zext i8 %64 to i32
  %66 = icmp ult i32 %60, %65
  %67 = icmp ult i8 %64, 2
  %68 = or i1 %67, %66
  br i1 %68, label %83, label %69

69:                                               ; preds = %62
  %70 = icmp eq i8 %53, %19
  br i1 %70, label %71, label %54

71:                                               ; preds = %69
  br i1 %33, label %72, label %79

72:                                               ; preds = %71
  %73 = add nsw i32 %65, -2
  %74 = icmp slt i32 %73, %39
  br i1 %74, label %87, label %75

75:                                               ; preds = %72
  %76 = getelementptr i8, ptr %52, i32 2
  %77 = tail call i32 @bcmp(ptr %76, ptr %40, i32 %39) #31
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %54

79:                                               ; preds = %75, %71
  %80 = icmp ugt ptr %52, inttoptr (i32 -4096 to ptr)
  br i1 %80, label %81, label %92

81:                                               ; preds = %79
  %82 = icmp eq ptr %52, inttoptr (i32 -42 to ptr)
  br i1 %82, label %87, label %83

83:                                               ; preds = %81, %62, %58
  %84 = phi ptr [ %52, %81 ], [ inttoptr (i32 -14 to ptr), %58 ], [ inttoptr (i32 -14 to ptr), %62 ]
  %85 = ptrtoint ptr %84 to i32
  %86 = sext i32 %85 to i64
  br label %92

87:                                               ; preds = %81, %72, %54, %38
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %47, ptr align 1 %9, i32 %23, i1 false) #31
  %88 = load i8, ptr %28, align 2
  %89 = sub i8 %88, %22
  store i8 %89, ptr %28, align 2
  %90 = load ptr, ptr %46, align 4
  %91 = getelementptr i8, ptr %90, i32 %23
  store ptr %91, ptr %46, align 4
  br label %92

92:                                               ; preds = %87, %83, %79, %51, %34, %27, %18, %14, %5
  %93 = phi i64 [ %86, %83 ], [ 0, %87 ], [ -1, %5 ], [ -22, %14 ], [ -22, %18 ], [ -28, %27 ], [ -22, %34 ], [ -17, %79 ], [ -28, %51 ]
  ret i64 %93
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sock_ops_reserve_hdr_opt(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #7 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 5
  %10 = load i8, ptr %9, align 8
  %11 = icmp eq i8 %10, 14
  br i1 %11, label %12, label %24

12:                                               ; preds = %5
  %13 = icmp ne i64 %2, 0
  %14 = icmp ult i32 %8, 2
  %15 = or i1 %14, %13
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %7, i32 0, i32 7
  %18 = load i8, ptr %17, align 2
  %19 = zext i8 %18 to i32
  %20 = icmp ult i32 %19, %8
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = trunc i64 %1 to i8
  %23 = sub i8 %18, %22
  store i8 %23, ptr %17, align 2
  br label %24

24:                                               ; preds = %21, %16, %12, %5
  %25 = phi i64 [ 0, %21 ], [ -1, %5 ], [ -22, %12 ], [ -28, %16 ]
  ret i64 %25
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @bpf_helper_changes_pkt_data(ptr noundef readnone %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, @bpf_skb_vlan_push
  %3 = icmp eq ptr %0, @bpf_skb_vlan_pop
  %4 = or i1 %2, %3
  %5 = icmp eq ptr %0, @bpf_skb_store_bytes
  %6 = or i1 %5, %4
  %7 = icmp eq ptr %0, @bpf_skb_change_proto
  %8 = or i1 %7, %6
  %9 = icmp eq ptr %0, @bpf_skb_change_head
  %10 = or i1 %9, %8
  %11 = icmp eq ptr %0, @sk_skb_change_head
  %12 = or i1 %11, %10
  %13 = icmp eq ptr %0, @bpf_skb_change_tail
  %14 = or i1 %13, %12
  %15 = icmp eq ptr %0, @sk_skb_change_tail
  %16 = or i1 %15, %14
  %17 = icmp eq ptr %0, @bpf_skb_adjust_room
  %18 = or i1 %17, %16
  %19 = icmp eq ptr %0, @sk_skb_adjust_room
  %20 = or i1 %19, %18
  %21 = icmp eq ptr %0, @bpf_skb_pull_data
  %22 = or i1 %21, %20
  %23 = icmp eq ptr %0, @sk_skb_pull_data
  %24 = or i1 %23, %22
  %25 = icmp eq ptr %0, @bpf_clone_redirect
  %26 = or i1 %25, %24
  %27 = icmp eq ptr %0, @bpf_l3_csum_replace
  %28 = or i1 %27, %26
  %29 = icmp eq ptr %0, @bpf_l4_csum_replace
  %30 = or i1 %29, %28
  %31 = icmp eq ptr %0, @bpf_xdp_adjust_head
  %32 = or i1 %31, %30
  %33 = icmp eq ptr %0, @bpf_xdp_adjust_meta
  %34 = or i1 %33, %32
  %35 = icmp eq ptr %0, @bpf_msg_pull_data
  %36 = or i1 %35, %34
  %37 = icmp eq ptr %0, @bpf_msg_push_data
  %38 = or i1 %37, %36
  %39 = icmp eq ptr %0, @bpf_msg_pop_data
  %40 = or i1 %39, %38
  %41 = icmp eq ptr %0, @bpf_xdp_adjust_tail
  %42 = or i1 %41, %40
  %43 = icmp eq ptr %0, @bpf_sock_ops_store_hdr_opt
  %44 = or i1 %43, %42
  %45 = icmp eq ptr %0, @bpf_lwt_in_push_encap
  %46 = or i1 %45, %44
  %47 = icmp eq ptr %0, @bpf_lwt_xmit_push_encap
  %48 = or i1 %47, %46
  ret i1 %48
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define dso_local zeroext i1 @bpf_sock_common_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #17 {
  %5 = add i32 %0, -8
  %6 = icmp ult i32 %5, 16
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = tail call zeroext i1 @bpf_sock_is_valid_access(i32 noundef %0, i32 noundef %1, i32 undef, ptr noundef %3)
  br label %9

9:                                                ; preds = %7, %4
  %10 = phi i1 [ %8, %7 ], [ false, %4 ]
  ret i1 %10
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define dso_local zeroext i1 @bpf_sock_is_valid_access(i32 noundef %0, i32 noundef %1, i32 %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #17 {
  %5 = icmp ugt i32 %0, 79
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = srem i32 %0, %1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  switch i32 %0, label %16 [
    i32 72, label %10
    i32 4, label %10
    i32 8, label %10
    i32 12, label %10
    i32 48, label %10
    i32 44, label %10
    i32 76, label %10
    i32 56, label %10
    i32 57, label %10
    i32 58, label %10
    i32 59, label %10
    i32 60, label %10
    i32 61, label %10
    i32 62, label %10
    i32 63, label %10
    i32 64, label %10
    i32 65, label %10
    i32 66, label %10
    i32 67, label %10
    i32 68, label %10
    i32 69, label %10
    i32 70, label %10
    i32 71, label %10
    i32 52, label %10
    i32 53, label %10
    i32 54, label %10
    i32 55, label %10
    i32 28, label %10
    i32 29, label %10
    i32 30, label %10
    i32 31, label %10
    i32 32, label %10
    i32 33, label %10
    i32 34, label %10
    i32 35, label %10
    i32 36, label %10
    i32 37, label %10
    i32 38, label %10
    i32 39, label %10
    i32 40, label %10
    i32 41, label %10
    i32 42, label %10
    i32 43, label %10
    i32 24, label %10
    i32 25, label %10
    i32 26, label %10
    i32 27, label %10
  ]

10:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9
  %11 = getelementptr inbounds %struct.bpf_insn_access_aux, ptr %3, i32 0, i32 1
  store i32 4, ptr %11, align 4
  %12 = icmp ult i32 %1, 5
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  %14 = tail call i32 @llvm.ctpop.i32(i32 %1) #31, !range !37
  %15 = icmp ult i32 %14, 2
  br label %18

16:                                               ; preds = %9
  %17 = icmp eq i32 %1, 4
  br label %18

18:                                               ; preds = %16, %13, %10, %6, %4
  %19 = phi i1 [ %17, %16 ], [ false, %4 ], [ false, %6 ], [ false, %10 ], [ %15, %13 ]
  ret i1 %19
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @bpf_warn_invalid_xdp_action(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = load i1, ptr @bpf_warn_invalid_xdp_action.__already_done, align 1
  br i1 %4, label %16, label %5, !prof !10

5:                                                ; preds = %3
  store i1 true, ptr @bpf_warn_invalid_xdp_action.__already_done, align 1
  %6 = icmp ugt i32 %2, 4
  %7 = select i1 %6, ptr @.str.1, ptr @.str.2
  %8 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.bpf_prog_aux, ptr %9, i32 0, i32 46
  %11 = getelementptr inbounds %struct.bpf_prog_aux, ptr %9, i32 0, i32 7
  %12 = load i32, ptr %11, align 8
  %13 = icmp eq ptr %0, null
  %14 = select i1 %13, ptr @.str.3, ptr %0
  %15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str, ptr noundef nonnull %7, i32 noundef %2, ptr noundef %10, i32 noundef %12, ptr noundef %14) #34
  br label %16

16:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #18

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @bpf_sock_convert_ctx_access(i32 noundef %0, ptr noundef readonly %1, ptr noundef %2, ptr nocapture readnone %3, ptr nocapture noundef writeonly %4) #15 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %151 [
    i32 0, label %9
    i32 16, label %22
    i32 20, label %35
    i32 4, label %48
    i32 8, label %55
    i32 12, label %62
    i32 24, label %69
    i32 52, label %79
    i32 28, label %89
    i32 29, label %89
    i32 30, label %89
    i32 31, label %89
    i32 32, label %89
    i32 33, label %89
    i32 34, label %89
    i32 35, label %89
    i32 36, label %89
    i32 37, label %89
    i32 38, label %89
    i32 39, label %89
    i32 40, label %89
    i32 41, label %89
    i32 42, label %89
    i32 43, label %89
    i32 56, label %100
    i32 57, label %100
    i32 58, label %100
    i32 59, label %100
    i32 60, label %100
    i32 61, label %100
    i32 62, label %100
    i32 63, label %100
    i32 64, label %100
    i32 65, label %100
    i32 66, label %100
    i32 67, label %100
    i32 68, label %100
    i32 69, label %100
    i32 70, label %100
    i32 71, label %100
    i32 44, label %111
    i32 48, label %118
    i32 72, label %125
    i32 76, label %132
  ]

9:                                                ; preds = %5
  %10 = icmp eq i32 %0, 2
  %11 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %12 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %13 = load i8, ptr %12, align 1
  br i1 %10, label %14, label %18

14:                                               ; preds = %9
  store i8 99, ptr %2, align 4
  %15 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %13, ptr %15, align 1
  %16 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 20, ptr %16, align 2
  %17 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %17, align 4
  br label %151

18:                                               ; preds = %9
  store i8 97, ptr %2, align 4
  %19 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %13, ptr %19, align 1
  %20 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 20, ptr %20, align 2
  %21 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %21, align 4
  br label %151

22:                                               ; preds = %5
  %23 = icmp eq i32 %0, 2
  %24 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %25 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %26 = load i8, ptr %25, align 1
  br i1 %23, label %27, label %31

27:                                               ; preds = %22
  store i8 99, ptr %2, align 4
  %28 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %26, ptr %28, align 1
  %29 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 328, ptr %29, align 2
  %30 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %30, align 4
  br label %151

31:                                               ; preds = %22
  store i8 97, ptr %2, align 4
  %32 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %26, ptr %32, align 1
  %33 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 328, ptr %33, align 2
  %34 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %34, align 4
  br label %151

35:                                               ; preds = %5
  %36 = icmp eq i32 %0, 2
  %37 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %38 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %39 = load i8, ptr %38, align 1
  br i1 %36, label %40, label %44

40:                                               ; preds = %35
  store i8 99, ptr %2, align 4
  %41 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %39, ptr %41, align 1
  %42 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 324, ptr %42, align 2
  %43 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %43, align 4
  br label %151

44:                                               ; preds = %35
  store i8 97, ptr %2, align 4
  %45 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %39, ptr %45, align 1
  %46 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 324, ptr %46, align 2
  %47 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %47, align 4
  br label %151

48:                                               ; preds = %5
  %49 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %50 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %51 = load i8, ptr %50, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %52 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %51, ptr %52, align 1
  %53 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %53, align 2
  %54 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %54, align 4
  br label %151

55:                                               ; preds = %5
  %56 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %57 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %58 = load i8, ptr %57, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %59 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %58, ptr %59, align 1
  %60 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 378, ptr %60, align 2
  %61 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %61, align 4
  br label %151

62:                                               ; preds = %5
  %63 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %64 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %65 = load i8, ptr %64, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %66 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %65, ptr %66, align 1
  %67 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 380, ptr %67, align 2
  %68 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %68, align 4
  br label %151

69:                                               ; preds = %5
  %70 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %71 = load i8, ptr %1, align 4
  %72 = and i8 %71, 24
  %73 = or i8 %72, 97
  %74 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %75 = load i8, ptr %74, align 1
  store i32 4, ptr %4, align 4
  store i8 %73, ptr %2, align 4
  %76 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %75, ptr %76, align 1
  %77 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %77, align 2
  %78 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %78, align 4
  br label %151

79:                                               ; preds = %5
  %80 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %81 = load i8, ptr %1, align 4
  %82 = and i8 %81, 24
  %83 = or i8 %82, 97
  %84 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %85 = load i8, ptr %84, align 1
  store i32 4, ptr %4, align 4
  store i8 %83, ptr %2, align 4
  %86 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %85, ptr %86, align 1
  %87 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %87, align 2
  %88 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %88, align 4
  br label %151

89:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %90 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %91 = load i8, ptr %1, align 4
  %92 = and i8 %91, 24
  %93 = or i8 %92, 97
  %94 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %95 = load i8, ptr %94, align 1
  store i32 4, ptr %4, align 4
  %96 = add i16 %7, 24
  store i8 %93, ptr %2, align 4
  %97 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %95, ptr %97, align 1
  %98 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %96, ptr %98, align 2
  %99 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %99, align 4
  br label %151

100:                                              ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %101 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %102 = load i8, ptr %1, align 4
  %103 = and i8 %102, 24
  %104 = or i8 %103, 97
  %105 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %106 = load i8, ptr %105, align 1
  store i32 4, ptr %4, align 4
  %107 = add i16 %7, -20
  store i8 %104, ptr %2, align 4
  %108 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %106, ptr %108, align 1
  %109 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %107, ptr %109, align 2
  %110 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %110, align 4
  br label %151

111:                                              ; preds = %5
  %112 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %113 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %114 = load i8, ptr %113, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %115 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %114, ptr %115, align 1
  %116 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 14, ptr %116, align 2
  %117 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %117, align 4
  br label %151

118:                                              ; preds = %5
  %119 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %120 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %121 = load i8, ptr %120, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %122 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %121, ptr %122, align 1
  %123 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %123, align 2
  %124 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %124, align 4
  br label %151

125:                                              ; preds = %5
  %126 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %127 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %128 = load i8, ptr %127, align 1
  store i32 1, ptr %4, align 4
  store i8 113, ptr %2, align 4
  %129 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %128, ptr %129, align 1
  %130 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 18, ptr %130, align 2
  %131 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %131, align 4
  br label %151

132:                                              ; preds = %5
  %133 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %134 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %135 = load i8, ptr %134, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %136 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %135, ptr %136, align 1
  %137 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 94, ptr %137, align 2
  %138 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %138, align 4
  %139 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %140 = load i8, ptr %134, align 1
  %141 = and i8 %140, 15
  store i8 85, ptr %133, align 4
  %142 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %141, ptr %142, align 1
  %143 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %143, align 2
  %144 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 65535, ptr %144, align 4
  %145 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %146 = load i8, ptr %134, align 1
  %147 = and i8 %146, 15
  store i8 -73, ptr %139, align 4
  %148 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %147, ptr %148, align 1
  %149 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 0, ptr %149, align 2
  %150 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 -1, ptr %150, align 4
  br label %151

151:                                              ; preds = %132, %125, %118, %111, %100, %89, %79, %69, %62, %55, %48, %44, %40, %31, %27, %18, %14, %5
  %152 = phi ptr [ %2, %5 ], [ %145, %132 ], [ %126, %125 ], [ %119, %118 ], [ %112, %111 ], [ %101, %100 ], [ %90, %89 ], [ %80, %79 ], [ %70, %69 ], [ %63, %62 ], [ %56, %55 ], [ %49, %48 ], [ %37, %40 ], [ %37, %44 ], [ %24, %27 ], [ %24, %31 ], [ %11, %14 ], [ %11, %18 ]
  %153 = ptrtoint ptr %152 to i32
  %154 = ptrtoint ptr %2 to i32
  %155 = sub i32 %153, %154
  %156 = ashr exact i32 %155, 3
  ret i32 %156
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @sk_filter_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %7 [
    i32 26, label %9
    i32 68, label %3
    i32 46, label %4
    i32 47, label %5
    i32 25, label %6
  ]

3:                                                ; preds = %2
  br label %9

4:                                                ; preds = %2
  br label %9

5:                                                ; preds = %2
  br label %9

6:                                                ; preds = %2
  br label %9

7:                                                ; preds = %2
  %8 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %9

9:                                                ; preds = %7, %6, %5, %4, %3, %2
  %10 = phi ptr [ %8, %7 ], [ @bpf_skb_event_output_proto, %6 ], [ @bpf_get_socket_uid_proto, %5 ], [ @bpf_get_socket_cookie_proto, %4 ], [ @bpf_skb_load_bytes_relative_proto, %3 ], [ @bpf_skb_load_bytes_proto, %2 ]
  ret ptr %10
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @sk_filter_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #17 {
  switch i32 %0, label %6 [
    i32 184, label %13
    i32 185, label %13
    i32 186, label %13
    i32 187, label %13
    i32 188, label %13
    i32 189, label %13
    i32 190, label %13
    i32 191, label %13
    i32 160, label %13
    i32 161, label %13
    i32 162, label %13
    i32 163, label %13
    i32 152, label %13
    i32 153, label %13
    i32 154, label %13
    i32 155, label %13
    i32 156, label %13
    i32 157, label %13
    i32 158, label %13
    i32 159, label %13
    i32 88, label %13
    i32 89, label %13
    i32 90, label %13
    i32 91, label %13
    i32 92, label %13
    i32 93, label %13
    i32 94, label %13
    i32 95, label %13
    i32 96, label %13
    i32 97, label %13
    i32 98, label %13
    i32 99, label %13
    i32 100, label %13
    i32 101, label %13
    i32 102, label %13
    i32 103, label %13
    i32 104, label %13
    i32 105, label %13
    i32 106, label %13
    i32 107, label %13
    i32 108, label %13
    i32 109, label %13
    i32 110, label %13
    i32 111, label %13
    i32 112, label %13
    i32 113, label %13
    i32 114, label %13
    i32 115, label %13
    i32 116, label %13
    i32 117, label %13
    i32 118, label %13
    i32 119, label %13
    i32 120, label %13
    i32 121, label %13
    i32 122, label %13
    i32 123, label %13
    i32 124, label %13
    i32 125, label %13
    i32 126, label %13
    i32 127, label %13
    i32 128, label %13
    i32 129, label %13
    i32 130, label %13
    i32 131, label %13
    i32 132, label %13
    i32 133, label %13
    i32 134, label %13
    i32 135, label %13
    i32 136, label %13
    i32 137, label %13
    i32 138, label %13
    i32 139, label %13
    i32 80, label %13
    i32 81, label %13
    i32 82, label %13
    i32 83, label %13
    i32 140, label %13
    i32 141, label %13
    i32 142, label %13
    i32 143, label %13
    i32 76, label %13
    i32 77, label %13
    i32 78, label %13
    i32 79, label %13
    i32 72, label %13
    i32 73, label %13
    i32 74, label %13
    i32 75, label %13
  ]

6:                                                ; preds = %5
  %7 = icmp ne i32 %2, 2
  %8 = add i32 %0, -48
  %9 = icmp ult i32 %8, 20
  %10 = or i1 %9, %7
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @bpf_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %4)
  br label %13

13:                                               ; preds = %11, %6, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %14 = phi i1 [ %12, %11 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %6 ]
  ret i1 %14
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @bpf_gen_ld_abs(ptr nocapture noundef readonly %0, ptr noundef %1) #7 {
  %3 = load i8, ptr %0, align 4
  %4 = and i8 %3, -32
  %5 = icmp eq i8 %4, 64
  %6 = getelementptr %struct.bpf_insn, ptr %1, i32 1
  br i1 %5, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.bpf_insn, ptr %0, i32 0, i32 3
  %9 = load i32, ptr %8, align 4
  store i8 -73, ptr %1, align 4
  %10 = getelementptr inbounds i8, ptr %1, i32 1
  store i8 2, ptr %10, align 1
  %11 = getelementptr inbounds i8, ptr %1, i32 2
  store i16 0, ptr %11, align 2
  %12 = getelementptr inbounds i8, ptr %1, i32 4
  store i32 %9, ptr %12, align 4
  br label %29

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.bpf_insn, ptr %0, i32 0, i32 1
  %15 = load i8, ptr %14, align 1
  %16 = and i8 %15, -16
  %17 = or i8 %16, 2
  store i8 -65, ptr %1, align 4
  %18 = getelementptr inbounds i8, ptr %1, i32 1
  store i8 %17, ptr %18, align 1
  %19 = getelementptr inbounds i8, ptr %1, i32 2
  store i16 0, ptr %19, align 2
  %20 = getelementptr inbounds i8, ptr %1, i32 4
  store i32 0, ptr %20, align 4
  %21 = getelementptr inbounds %struct.bpf_insn, ptr %0, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %13
  %25 = getelementptr %struct.bpf_insn, ptr %1, i32 2
  store i8 7, ptr %6, align 4
  %26 = getelementptr %struct.bpf_insn, ptr %1, i32 1, i32 1
  store i8 2, ptr %26, align 1
  %27 = getelementptr %struct.bpf_insn, ptr %1, i32 1, i32 2
  store i16 0, ptr %27, align 2
  %28 = getelementptr %struct.bpf_insn, ptr %1, i32 1, i32 3
  store i32 %22, ptr %28, align 4
  br label %29

29:                                               ; preds = %24, %13, %7
  %30 = phi ptr [ %25, %24 ], [ %6, %13 ], [ %6, %7 ]
  %31 = getelementptr %struct.bpf_insn, ptr %30, i32 1
  store i8 -65, ptr %30, align 4
  %32 = getelementptr inbounds i8, ptr %30, i32 1
  store i8 97, ptr %32, align 1
  %33 = getelementptr inbounds i8, ptr %30, i32 2
  store i16 0, ptr %33, align 2
  %34 = getelementptr inbounds i8, ptr %30, i32 4
  store i32 0, ptr %34, align 4
  %35 = load i8, ptr %0, align 4
  %36 = and i8 %35, 24
  %37 = zext i8 %36 to i32
  switch i32 %37, label %46 [
    i32 16, label %40
    i32 8, label %38
    i32 0, label %39
  ]

38:                                               ; preds = %29
  br label %40

39:                                               ; preds = %29
  br label %40

40:                                               ; preds = %39, %38, %29
  %41 = phi i32 [ sub (i32 ptrtoint (ptr @bpf_skb_load_helper_32_no_cache to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), %39 ], [ sub (i32 ptrtoint (ptr @bpf_skb_load_helper_16_no_cache to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), %38 ], [ sub (i32 ptrtoint (ptr @bpf_skb_load_helper_8_no_cache to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), %29 ]
  %42 = getelementptr %struct.bpf_insn, ptr %30, i32 2
  store i8 -123, ptr %31, align 4
  %43 = getelementptr %struct.bpf_insn, ptr %30, i32 1, i32 1
  store i8 0, ptr %43, align 1
  %44 = getelementptr %struct.bpf_insn, ptr %30, i32 1, i32 2
  store i16 0, ptr %44, align 2
  %45 = getelementptr %struct.bpf_insn, ptr %30, i32 1, i32 3
  store i32 %41, ptr %45, align 4
  br label %46

46:                                               ; preds = %40, %29
  %47 = phi ptr [ %31, %29 ], [ %42, %40 ]
  %48 = getelementptr %struct.bpf_insn, ptr %47, i32 1
  store i8 117, ptr %47, align 4
  %49 = getelementptr inbounds i8, ptr %47, i32 1
  store i8 0, ptr %49, align 1
  %50 = getelementptr inbounds i8, ptr %47, i32 2
  store i16 2, ptr %50, align 2
  %51 = getelementptr inbounds i8, ptr %47, i32 4
  store i32 0, ptr %51, align 4
  %52 = getelementptr %struct.bpf_insn, ptr %47, i32 2
  store i8 -84, ptr %48, align 4
  %53 = getelementptr %struct.bpf_insn, ptr %47, i32 1, i32 1
  store i8 0, ptr %53, align 1
  %54 = getelementptr %struct.bpf_insn, ptr %47, i32 1, i32 2
  store i16 0, ptr %54, align 2
  %55 = getelementptr %struct.bpf_insn, ptr %47, i32 1, i32 3
  store i32 0, ptr %55, align 4
  %56 = getelementptr %struct.bpf_insn, ptr %47, i32 3
  store i8 -107, ptr %52, align 4
  %57 = getelementptr %struct.bpf_insn, ptr %47, i32 2, i32 1
  store i8 0, ptr %57, align 1
  %58 = getelementptr %struct.bpf_insn, ptr %47, i32 2, i32 2
  store i16 0, ptr %58, align 2
  %59 = getelementptr %struct.bpf_insn, ptr %47, i32 2, i32 3
  store i32 0, ptr %59, align 4
  %60 = ptrtoint ptr %56 to i32
  %61 = ptrtoint ptr %1 to i32
  %62 = sub i32 %60, %61
  %63 = ashr exact i32 %62, 3
  ret i32 %63
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @bpf_convert_ctx_access(i32 noundef %0, ptr noundef readonly %1, ptr noundef %2, ptr nocapture noundef %3, ptr noundef writeonly %4) #15 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %424 [
    i32 0, label %9
    i32 16, label %16
    i32 28, label %23
    i32 32, label %30
    i32 36, label %43
    i32 40, label %50
    i32 68, label %71
    i32 8, label %78
    i32 4, label %91
    i32 12, label %104
    i32 20, label %123
    i32 24, label %136
    i32 48, label %143
    i32 49, label %143
    i32 50, label %143
    i32 51, label %143
    i32 52, label %143
    i32 53, label %143
    i32 54, label %143
    i32 55, label %143
    i32 56, label %143
    i32 57, label %143
    i32 58, label %143
    i32 59, label %143
    i32 60, label %143
    i32 61, label %143
    i32 62, label %143
    i32 63, label %143
    i32 64, label %143
    i32 65, label %143
    i32 66, label %143
    i32 67, label %143
    i32 72, label %170
    i32 76, label %183
    i32 140, label %190
    i32 80, label %197
    i32 44, label %204
    i32 84, label %220
    i32 88, label %239
    i32 92, label %254
    i32 96, label %269
    i32 100, label %284
    i32 101, label %284
    i32 102, label %284
    i32 103, label %284
    i32 104, label %284
    i32 105, label %284
    i32 106, label %284
    i32 107, label %284
    i32 108, label %284
    i32 109, label %284
    i32 110, label %284
    i32 111, label %284
    i32 112, label %284
    i32 116, label %300
    i32 117, label %300
    i32 118, label %300
    i32 119, label %300
    i32 120, label %300
    i32 121, label %300
    i32 122, label %300
    i32 123, label %300
    i32 124, label %300
    i32 125, label %300
    i32 126, label %300
    i32 127, label %300
    i32 128, label %300
    i32 132, label %316
    i32 136, label %337
    i32 152, label %352
    i32 164, label %365
    i32 176, label %380
    i32 160, label %395
    i32 168, label %402
    i32 184, label %409
  ]

9:                                                ; preds = %5
  %10 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %11 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %13 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %12, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 80, ptr %14, align 2
  %15 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %15, align 4
  br label %424

16:                                               ; preds = %5
  %17 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %18 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %19 = load i8, ptr %18, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %20 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %19, ptr %20, align 1
  %21 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 136, ptr %21, align 2
  %22 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %22, align 4
  br label %424

23:                                               ; preds = %5
  %24 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %25 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %26 = load i8, ptr %25, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %27 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %26, ptr %27, align 1
  %28 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 116, ptr %28, align 2
  %29 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %29, align 4
  br label %424

30:                                               ; preds = %5
  %31 = icmp eq i32 %0, 2
  %32 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %33 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %34 = load i8, ptr %33, align 1
  store i32 4, ptr %4, align 4
  br i1 %31, label %35, label %39

35:                                               ; preds = %30
  store i8 99, ptr %2, align 4
  %36 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %34, ptr %36, align 1
  %37 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 104, ptr %37, align 2
  %38 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %38, align 4
  br label %424

39:                                               ; preds = %30
  store i8 97, ptr %2, align 4
  %40 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %34, ptr %40, align 1
  %41 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 104, ptr %41, align 2
  %42 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %42, align 4
  br label %424

43:                                               ; preds = %5
  %44 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %45 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %46 = load i8, ptr %45, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %47 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %46, ptr %47, align 1
  %48 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 108, ptr %48, align 2
  %49 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %49, align 4
  br label %424

50:                                               ; preds = %5
  %51 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %52 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %53 = load i8, ptr %52, align 1
  store i8 97, ptr %2, align 4
  %54 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %53, ptr %54, align 1
  %55 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %55, align 2
  %56 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %56, align 4
  %57 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %58 = load i8, ptr %52, align 1
  %59 = and i8 %58, 15
  store i8 21, ptr %51, align 4
  %60 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %59, ptr %60, align 1
  %61 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %61, align 2
  %62 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %62, align 4
  %63 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %64 = load i8, ptr %52, align 1
  %65 = and i8 %64, 15
  %66 = shl i8 %64, 4
  %67 = or i8 %65, %66
  store i32 4, ptr %4, align 4
  store i8 97, ptr %57, align 4
  %68 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %67, ptr %68, align 1
  %69 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 124, ptr %69, align 2
  %70 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %70, align 4
  br label %424

71:                                               ; preds = %5
  %72 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %73 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %74 = load i8, ptr %73, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %75 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %74, ptr %75, align 1
  %76 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 112, ptr %76, align 2
  %77 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %77, align 4
  br label %424

78:                                               ; preds = %5
  %79 = icmp eq i32 %0, 2
  %80 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %81 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %82 = load i8, ptr %81, align 1
  store i32 4, ptr %4, align 4
  br i1 %79, label %83, label %87

83:                                               ; preds = %78
  store i8 99, ptr %2, align 4
  %84 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %82, ptr %84, align 1
  %85 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 124, ptr %85, align 2
  %86 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %86, align 4
  br label %424

87:                                               ; preds = %78
  store i8 97, ptr %2, align 4
  %88 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %82, ptr %88, align 1
  %89 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 124, ptr %89, align 2
  %90 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %90, align 4
  br label %424

91:                                               ; preds = %5
  store i32 1, ptr %4, align 4
  %92 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %93 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %94 = load i8, ptr %93, align 1
  store i8 113, ptr %2, align 4
  %95 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %94, ptr %95, align 1
  %96 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 96, ptr %96, align 2
  %97 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %97, align 4
  %98 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %99 = load i8, ptr %93, align 1
  %100 = and i8 %99, 15
  store i8 84, ptr %92, align 4
  %101 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %100, ptr %101, align 1
  %102 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %102, align 2
  %103 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 7, ptr %103, align 4
  br label %424

104:                                              ; preds = %5
  %105 = icmp eq i32 %0, 2
  %106 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %107 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %108 = load i8, ptr %107, align 1
  br i1 %105, label %109, label %119

109:                                              ; preds = %104
  %110 = lshr i8 %108, 4
  store i8 53, ptr %2, align 4
  %111 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %110, ptr %111, align 1
  %112 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 1, ptr %112, align 2
  %113 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 65535, ptr %113, align 4
  %114 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %115 = load i8, ptr %107, align 1
  store i32 2, ptr %4, align 4
  store i8 107, ptr %106, align 4
  %116 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %115, ptr %116, align 1
  %117 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 92, ptr %117, align 2
  %118 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %118, align 4
  br label %424

119:                                              ; preds = %104
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %120 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %108, ptr %120, align 1
  %121 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 92, ptr %121, align 2
  %122 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %122, align 4
  br label %424

123:                                              ; preds = %5
  store i32 1, ptr %4, align 4
  %124 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %125 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %126 = load i8, ptr %125, align 1
  store i8 113, ptr %2, align 4
  %127 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %126, ptr %127, align 1
  %128 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 98, ptr %128, align 2
  %129 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %129, align 4
  %130 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %131 = load i8, ptr %125, align 1
  %132 = and i8 %131, 15
  store i8 84, ptr %124, align 4
  %133 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %132, ptr %133, align 1
  %134 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %134, align 2
  %135 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 1, ptr %135, align 4
  br label %424

136:                                              ; preds = %5
  %137 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %138 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %139 = load i8, ptr %138, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %140 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %139, ptr %140, align 1
  %141 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 118, ptr %141, align 2
  %142 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %142, align 4
  br label %424

143:                                              ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %144 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 1
  %145 = load i16, ptr %144, align 2
  %146 = or i16 %145, 8
  store i16 %146, ptr %144, align 2
  %147 = load i16, ptr %6, align 2
  %148 = zext i16 %147 to i32
  %149 = add nsw i32 %148, -16
  %150 = icmp eq i32 %0, 2
  %151 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %152 = load i8, ptr %1, align 4
  %153 = and i8 %152, 24
  br i1 %150, label %154, label %162

154:                                              ; preds = %143
  %155 = or i8 %153, 99
  %156 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %157 = load i8, ptr %156, align 1
  %158 = trunc i32 %149 to i16
  store i8 %155, ptr %2, align 4
  %159 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %157, ptr %159, align 1
  %160 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %158, ptr %160, align 2
  %161 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %161, align 4
  br label %424

162:                                              ; preds = %143
  %163 = or i8 %153, 97
  %164 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %165 = load i8, ptr %164, align 1
  %166 = trunc i32 %149 to i16
  store i8 %163, ptr %2, align 4
  %167 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %165, ptr %167, align 1
  %168 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %166, ptr %168, align 2
  %169 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %169, align 4
  br label %424

170:                                              ; preds = %5
  store i32 2, ptr %4, align 4
  %171 = icmp eq i32 %0, 2
  %172 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %173 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %174 = load i8, ptr %173, align 1
  br i1 %171, label %175, label %179

175:                                              ; preds = %170
  store i8 107, ptr %2, align 4
  %176 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %174, ptr %176, align 1
  %177 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 30, ptr %177, align 2
  %178 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %178, align 4
  br label %424

179:                                              ; preds = %170
  store i8 105, ptr %2, align 4
  %180 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %174, ptr %180, align 1
  %181 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 30, ptr %181, align 2
  %182 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %182, align 4
  br label %424

183:                                              ; preds = %5
  %184 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %185 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %186 = load i8, ptr %185, align 1
  store i8 97, ptr %2, align 4
  %187 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %186, ptr %187, align 1
  %188 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 156, ptr %188, align 2
  %189 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %189, align 4
  br label %424

190:                                              ; preds = %5
  %191 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %192 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %193 = load i8, ptr %192, align 1
  store i8 97, ptr %2, align 4
  %194 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %193, ptr %194, align 1
  %195 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 52, ptr %195, align 2
  %196 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %196, align 4
  br label %424

197:                                              ; preds = %5
  %198 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %199 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %200 = load i8, ptr %199, align 1
  store i8 97, ptr %2, align 4
  %201 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %200, ptr %201, align 1
  %202 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 56, ptr %202, align 2
  %203 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %203, align 4
  br label %424

204:                                              ; preds = %5
  store i32 2, ptr %4, align 4
  %205 = icmp eq i32 %0, 2
  %206 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %207 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %208 = load i8, ptr %207, align 1
  %209 = and i8 %208, 15
  br i1 %205, label %210, label %216

210:                                              ; preds = %204
  %211 = shl i8 %208, 4
  %212 = or i8 %209, %211
  store i8 -65, ptr %2, align 4
  %213 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %212, ptr %213, align 1
  %214 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %214, align 2
  %215 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %215, align 4
  br label %424

216:                                              ; preds = %204
  store i8 -73, ptr %2, align 4
  %217 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %209, ptr %217, align 1
  %218 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %218, align 2
  %219 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %219, align 4
  br label %424

220:                                              ; preds = %5
  %221 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %222 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %223 = load i8, ptr %222, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %224 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %223, ptr %224, align 1
  %225 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 120, ptr %225, align 2
  %226 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %226, align 4
  %227 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %228 = load i8, ptr %222, align 1
  %229 = and i8 %228, 15
  store i8 53, ptr %221, align 4
  %230 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %229, ptr %230, align 1
  %231 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %231, align 2
  %232 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 17, ptr %232, align 4
  %233 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %234 = load i8, ptr %222, align 1
  %235 = and i8 %234, 15
  store i8 -73, ptr %227, align 4
  %236 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %235, ptr %236, align 1
  %237 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 0, ptr %237, align 2
  %238 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %238, align 4
  br label %424

239:                                              ; preds = %5
  %240 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %241 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %242 = load i8, ptr %241, align 1
  store i8 97, ptr %2, align 4
  %243 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %242, ptr %243, align 1
  %244 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %244, align 2
  %245 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %245, align 4
  %246 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %247 = load i8, ptr %241, align 1
  %248 = and i8 %247, 15
  %249 = shl i8 %247, 4
  %250 = or i8 %248, %249
  store i32 2, ptr %4, align 4
  store i8 105, ptr %240, align 4
  %251 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %250, ptr %251, align 1
  %252 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 16, ptr %252, align 2
  %253 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %253, align 4
  br label %424

254:                                              ; preds = %5
  %255 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %256 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %257 = load i8, ptr %256, align 1
  store i8 97, ptr %2, align 4
  %258 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %257, ptr %258, align 1
  %259 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %259, align 2
  %260 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %260, align 4
  %261 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %262 = load i8, ptr %256, align 1
  %263 = and i8 %262, 15
  %264 = shl i8 %262, 4
  %265 = or i8 %263, %264
  store i32 4, ptr %4, align 4
  store i8 97, ptr %255, align 4
  %266 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %265, ptr %266, align 1
  %267 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %267, align 2
  %268 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %268, align 4
  br label %424

269:                                              ; preds = %5
  %270 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %271 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %272 = load i8, ptr %271, align 1
  store i8 97, ptr %2, align 4
  %273 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %272, ptr %273, align 1
  %274 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %274, align 2
  %275 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %275, align 4
  %276 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %277 = load i8, ptr %271, align 1
  %278 = and i8 %277, 15
  %279 = shl i8 %277, 4
  %280 = or i8 %278, %279
  store i32 4, ptr %4, align 4
  store i8 97, ptr %270, align 4
  %281 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %280, ptr %281, align 1
  %282 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %282, align 2
  %283 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %283, align 4
  br label %424

284:                                              ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %285 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %286 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %287 = load i8, ptr %286, align 1
  store i8 97, ptr %2, align 4
  %288 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %287, ptr %288, align 1
  %289 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %289, align 2
  %290 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %290, align 4
  %291 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %292 = load i8, ptr %286, align 1
  %293 = and i8 %292, 15
  %294 = shl i8 %292, 4
  %295 = or i8 %293, %294
  %296 = add i16 %7, -64
  store i8 97, ptr %285, align 4
  %297 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %295, ptr %297, align 1
  %298 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %296, ptr %298, align 2
  %299 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %299, align 4
  br label %424

300:                                              ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %301 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %302 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %303 = load i8, ptr %302, align 1
  store i8 97, ptr %2, align 4
  %304 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %303, ptr %304, align 1
  %305 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %305, align 2
  %306 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %306, align 4
  %307 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %308 = load i8, ptr %302, align 1
  %309 = and i8 %308, 15
  %310 = shl i8 %308, 4
  %311 = or i8 %309, %310
  %312 = add i16 %7, -64
  store i8 97, ptr %301, align 4
  %313 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %311, ptr %313, align 1
  %314 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %312, ptr %314, align 2
  %315 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %315, align 4
  br label %424

316:                                              ; preds = %5
  %317 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %318 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %319 = load i8, ptr %318, align 1
  store i8 97, ptr %2, align 4
  %320 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %319, ptr %320, align 1
  %321 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %321, align 2
  %322 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %322, align 4
  %323 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %324 = load i8, ptr %318, align 1
  %325 = and i8 %324, 15
  %326 = shl i8 %324, 4
  %327 = or i8 %325, %326
  store i32 2, ptr %4, align 4
  store i8 105, ptr %317, align 4
  %328 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %327, ptr %328, align 1
  %329 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 12, ptr %329, align 2
  %330 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %330, align 4
  %331 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %332 = load i8, ptr %318, align 1
  %333 = and i8 %332, 15
  store i8 100, ptr %323, align 4
  %334 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %333, ptr %334, align 1
  %335 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 0, ptr %335, align 2
  %336 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 16, ptr %336, align 4
  br label %424

337:                                              ; preds = %5
  %338 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %339 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %340 = load i8, ptr %339, align 1
  store i8 97, ptr %2, align 4
  %341 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %340, ptr %341, align 1
  %342 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %342, align 2
  %343 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %343, align 4
  %344 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %345 = load i8, ptr %339, align 1
  %346 = and i8 %345, 15
  %347 = shl i8 %345, 4
  %348 = or i8 %346, %347
  store i32 2, ptr %4, align 4
  store i8 105, ptr %338, align 4
  %349 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %348, ptr %349, align 1
  %350 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 14, ptr %350, align 2
  %351 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %351, align 4
  br label %424

352:                                              ; preds = %5
  %353 = icmp eq i32 %0, 2
  %354 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %355 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %356 = load i8, ptr %355, align 1
  store i32 8, ptr %4, align 4
  br i1 %353, label %357, label %361

357:                                              ; preds = %352
  store i8 123, ptr %2, align 4
  %358 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %356, ptr %358, align 1
  %359 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %359, align 2
  %360 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %360, align 4
  br label %424

361:                                              ; preds = %352
  store i8 121, ptr %2, align 4
  %362 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %356, ptr %362, align 1
  %363 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %363, align 2
  %364 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %364, align 4
  br label %424

365:                                              ; preds = %5
  %366 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %367 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %368 = load i8, ptr %367, align 1
  store i8 97, ptr %2, align 4
  %369 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %368, ptr %369, align 1
  %370 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 148, ptr %370, align 2
  %371 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %371, align 4
  %372 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %373 = load i8, ptr %367, align 1
  %374 = and i8 %373, 15
  %375 = shl i8 %373, 4
  %376 = or i8 %374, %375
  store i32 2, ptr %4, align 4
  store i8 105, ptr %366, align 4
  %377 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %376, ptr %377, align 1
  %378 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 6, ptr %378, align 2
  %379 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %379, align 4
  br label %424

380:                                              ; preds = %5
  %381 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %382 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %383 = load i8, ptr %382, align 1
  store i8 97, ptr %2, align 4
  %384 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %383, ptr %384, align 1
  %385 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 148, ptr %385, align 2
  %386 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %386, align 4
  %387 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %388 = load i8, ptr %382, align 1
  %389 = and i8 %388, 15
  %390 = shl i8 %388, 4
  %391 = or i8 %389, %390
  store i32 2, ptr %4, align 4
  store i8 105, ptr %381, align 4
  %392 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %391, ptr %392, align 1
  %393 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %393, align 2
  %394 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %394, align 4
  br label %424

395:                                              ; preds = %5
  store i32 4, ptr %4, align 4
  %396 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %397 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %398 = load i8, ptr %397, align 1
  store i8 97, ptr %2, align 4
  %399 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %398, ptr %399, align 1
  %400 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 24, ptr %400, align 2
  %401 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %401, align 4
  br label %424

402:                                              ; preds = %5
  %403 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %404 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %405 = load i8, ptr %404, align 1
  store i8 97, ptr %2, align 4
  %406 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %405, ptr %406, align 1
  %407 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %407, align 2
  %408 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %408, align 4
  br label %424

409:                                              ; preds = %5
  %410 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %411 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %412 = load i8, ptr %411, align 1
  store i8 97, ptr %2, align 4
  %413 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %412, ptr %413, align 1
  %414 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 148, ptr %414, align 2
  %415 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %415, align 4
  %416 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %417 = load i8, ptr %411, align 1
  %418 = and i8 %417, 15
  %419 = shl i8 %417, 4
  %420 = or i8 %418, %419
  store i32 8, ptr %4, align 4
  store i8 121, ptr %410, align 4
  %421 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %420, ptr %421, align 1
  %422 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 16, ptr %422, align 2
  %423 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %423, align 4
  br label %424

424:                                              ; preds = %409, %402, %395, %380, %365, %361, %357, %337, %316, %300, %284, %269, %254, %239, %220, %216, %210, %197, %190, %183, %179, %175, %162, %154, %136, %123, %119, %109, %91, %87, %83, %71, %50, %43, %39, %35, %23, %16, %9, %5
  %425 = phi ptr [ %2, %5 ], [ %416, %409 ], [ %403, %402 ], [ %396, %395 ], [ %387, %380 ], [ %372, %365 ], [ %354, %357 ], [ %354, %361 ], [ %344, %337 ], [ %331, %316 ], [ %307, %300 ], [ %291, %284 ], [ %276, %269 ], [ %261, %254 ], [ %246, %239 ], [ %233, %220 ], [ %206, %210 ], [ %206, %216 ], [ %198, %197 ], [ %191, %190 ], [ %184, %183 ], [ %172, %175 ], [ %172, %179 ], [ %151, %154 ], [ %151, %162 ], [ %137, %136 ], [ %130, %123 ], [ %114, %109 ], [ %106, %119 ], [ %98, %91 ], [ %80, %83 ], [ %80, %87 ], [ %72, %71 ], [ %63, %50 ], [ %44, %43 ], [ %32, %35 ], [ %32, %39 ], [ %24, %23 ], [ %17, %16 ], [ %10, %9 ]
  %426 = ptrtoint ptr %425 to i32
  %427 = ptrtoint ptr %2 to i32
  %428 = sub i32 %426, %427
  %429 = ashr exact i32 %428, 3
  ret i32 %429
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @bpf_prog_test_run_skb(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readnone %2) #19 {
  ret i32 -524
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @tc_cls_act_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %82 [
    i32 9, label %84
    i32 26, label %3
    i32 68, label %4
    i32 39, label %5
    i32 28, label %6
    i32 40, label %7
    i32 135, label %8
    i32 10, label %9
    i32 11, label %10
    i32 13, label %11
    i32 17, label %12
    i32 18, label %13
    i32 19, label %14
    i32 31, label %15
    i32 32, label %16
    i32 50, label %17
    i32 38, label %18
    i32 43, label %19
    i32 20, label %20
    i32 21, label %21
    i32 29, label %37
    i32 30, label %38
    i32 23, label %54
    i32 152, label %55
    i32 155, label %56
    i32 24, label %57
    i32 34, label %58
    i32 41, label %59
    i32 48, label %60
    i32 25, label %61
    i32 8, label %62
    i32 33, label %63
    i32 46, label %64
    i32 47, label %65
    i32 69, label %66
    i32 163, label %67
    i32 95, label %68
    i32 107, label %69
    i32 108, label %70
    i32 66, label %71
    i32 84, label %72
    i32 85, label %73
    i32 86, label %74
    i32 96, label %75
    i32 98, label %76
    i32 99, label %77
    i32 100, label %78
    i32 97, label %79
    i32 110, label %80
    i32 124, label %81
  ]

3:                                                ; preds = %2
  br label %84

4:                                                ; preds = %2
  br label %84

5:                                                ; preds = %2
  br label %84

6:                                                ; preds = %2
  br label %84

7:                                                ; preds = %2
  br label %84

8:                                                ; preds = %2
  br label %84

9:                                                ; preds = %2
  br label %84

10:                                               ; preds = %2
  br label %84

11:                                               ; preds = %2
  br label %84

12:                                               ; preds = %2
  br label %84

13:                                               ; preds = %2
  br label %84

14:                                               ; preds = %2
  br label %84

15:                                               ; preds = %2
  br label %84

16:                                               ; preds = %2
  br label %84

17:                                               ; preds = %2
  br label %84

18:                                               ; preds = %2
  br label %84

19:                                               ; preds = %2
  br label %84

20:                                               ; preds = %2
  br label %84

21:                                               ; preds = %2
  %22 = load ptr, ptr @md_dst, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %84

24:                                               ; preds = %21
  %25 = tail call ptr @metadata_dst_alloc_percpu(i8 noundef zeroext -1, i32 noundef 0, i32 noundef 3264) #31
  %26 = icmp eq ptr %25, null
  br i1 %26, label %84, label %27

27:                                               ; preds = %24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !59
  %28 = ptrtoint ptr %25 to i32
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @md_dst) #31, !srcloc !23
  br label %29

29:                                               ; preds = %29, %27
  %30 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr nonnull @md_dst, i32 0, i32 %28) #31, !srcloc !45
  %31 = extractvalue { i32, i32 } %30, 0
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %29

33:                                               ; preds = %29
  %34 = extractvalue { i32, i32 } %30, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !60
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %84, label %36

36:                                               ; preds = %33
  tail call void @metadata_dst_free_percpu(ptr noundef nonnull %25) #31
  br label %84

37:                                               ; preds = %2
  br label %84

38:                                               ; preds = %2
  %39 = load ptr, ptr @md_dst, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %84

41:                                               ; preds = %38
  %42 = tail call ptr @metadata_dst_alloc_percpu(i8 noundef zeroext -1, i32 noundef 0, i32 noundef 3264) #31
  %43 = icmp eq ptr %42, null
  br i1 %43, label %84, label %44

44:                                               ; preds = %41
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !59
  %45 = ptrtoint ptr %42 to i32
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @md_dst) #31, !srcloc !23
  br label %46

46:                                               ; preds = %46, %44
  %47 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr nonnull @md_dst, i32 0, i32 %45) #31, !srcloc !45
  %48 = extractvalue { i32, i32 } %47, 0
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %46

50:                                               ; preds = %46
  %51 = extractvalue { i32, i32 } %47, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !60
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %84, label %53

53:                                               ; preds = %50
  tail call void @metadata_dst_free_percpu(ptr noundef nonnull %42) #31
  br label %84

54:                                               ; preds = %2
  br label %84

55:                                               ; preds = %2
  br label %84

56:                                               ; preds = %2
  br label %84

57:                                               ; preds = %2
  br label %84

58:                                               ; preds = %2
  br label %84

59:                                               ; preds = %2
  br label %84

60:                                               ; preds = %2
  br label %84

61:                                               ; preds = %2
  br label %84

62:                                               ; preds = %2
  br label %84

63:                                               ; preds = %2
  br label %84

64:                                               ; preds = %2
  br label %84

65:                                               ; preds = %2
  br label %84

66:                                               ; preds = %2
  br label %84

67:                                               ; preds = %2
  br label %84

68:                                               ; preds = %2
  br label %84

69:                                               ; preds = %2
  br label %84

70:                                               ; preds = %2
  br label %84

71:                                               ; preds = %2
  br label %84

72:                                               ; preds = %2
  br label %84

73:                                               ; preds = %2
  br label %84

74:                                               ; preds = %2
  br label %84

75:                                               ; preds = %2
  br label %84

76:                                               ; preds = %2
  br label %84

77:                                               ; preds = %2
  br label %84

78:                                               ; preds = %2
  br label %84

79:                                               ; preds = %2
  br label %84

80:                                               ; preds = %2
  br label %84

81:                                               ; preds = %2
  br label %84

82:                                               ; preds = %2
  %83 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %84

84:                                               ; preds = %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53, %50, %41, %38, %37, %36, %33, %24, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %85 = phi ptr [ %83, %82 ], [ @bpf_sk_assign_proto, %81 ], [ @bpf_tcp_gen_syncookie_proto, %80 ], [ @bpf_skb_ecn_set_ce_proto, %79 ], [ @bpf_tcp_check_syncookie_proto, %78 ], [ @bpf_skc_lookup_tcp_proto, %77 ], [ @bpf_get_listener_sock_proto, %76 ], [ @bpf_tcp_sock_proto, %75 ], [ @bpf_sk_release_proto, %74 ], [ @bpf_sk_lookup_udp_proto, %73 ], [ @bpf_sk_lookup_tcp_proto, %72 ], [ @bpf_skb_get_xfrm_state_proto, %71 ], [ @bpf_sk_storage_delete_proto, %70 ], [ @bpf_sk_storage_get_proto, %69 ], [ @bpf_sk_fullsock_proto, %68 ], [ @bpf_skb_check_mtu_proto, %67 ], [ @bpf_skb_fib_lookup_proto, %66 ], [ @bpf_get_socket_uid_proto, %65 ], [ @bpf_get_socket_cookie_proto, %64 ], [ @bpf_skb_under_cgroup_proto, %63 ], [ @bpf_get_smp_processor_id_proto, %62 ], [ @bpf_skb_event_output_proto, %61 ], [ @bpf_set_hash_proto, %60 ], [ @bpf_set_hash_invalid_proto, %59 ], [ @bpf_get_hash_recalc_proto, %58 ], [ @bpf_get_route_realm_proto, %57 ], [ @bpf_redirect_peer_proto, %56 ], [ @bpf_redirect_neigh_proto, %55 ], [ @bpf_redirect_proto, %54 ], [ @bpf_skb_get_tunnel_opt_proto, %37 ], [ @bpf_skb_get_tunnel_key_proto, %20 ], [ @bpf_skb_change_head_proto, %19 ], [ @bpf_skb_change_tail_proto, %18 ], [ @bpf_skb_adjust_room_proto, %17 ], [ @bpf_skb_change_type_proto, %16 ], [ @bpf_skb_change_proto_proto, %15 ], [ @bpf_skb_vlan_pop_proto, %14 ], [ @bpf_skb_vlan_push_proto, %13 ], [ @bpf_get_cgroup_classid_proto, %12 ], [ @bpf_clone_redirect_proto, %11 ], [ @bpf_l4_csum_replace_proto, %10 ], [ @bpf_l3_csum_replace_proto, %9 ], [ @bpf_csum_level_proto, %8 ], [ @bpf_csum_update_proto, %7 ], [ @bpf_csum_diff_proto, %6 ], [ @bpf_skb_pull_data_proto, %5 ], [ @bpf_skb_load_bytes_relative_proto, %4 ], [ @bpf_skb_load_bytes_proto, %3 ], [ @bpf_skb_store_bytes_proto, %2 ], [ null, %24 ], [ @bpf_skb_set_tunnel_key_proto, %36 ], [ @bpf_skb_set_tunnel_key_proto, %33 ], [ @bpf_skb_set_tunnel_key_proto, %21 ], [ null, %41 ], [ @bpf_skb_set_tunnel_opt_proto, %53 ], [ @bpf_skb_set_tunnel_opt_proto, %50 ], [ @bpf_skb_set_tunnel_opt_proto, %38 ]
  ret ptr %85
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @tc_cls_act_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #17 {
  %6 = icmp eq i32 %2, 2
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  switch i32 %0, label %15 [
    i32 12, label %8
    i32 13, label %8
    i32 14, label %8
    i32 15, label %8
    i32 152, label %8
    i32 153, label %8
    i32 154, label %8
    i32 155, label %8
    i32 156, label %8
    i32 157, label %8
    i32 158, label %8
    i32 159, label %8
    i32 48, label %8
    i32 49, label %8
    i32 50, label %8
    i32 51, label %8
    i32 52, label %8
    i32 53, label %8
    i32 54, label %8
    i32 55, label %8
    i32 56, label %8
    i32 57, label %8
    i32 58, label %8
    i32 59, label %8
    i32 60, label %8
    i32 61, label %8
    i32 62, label %8
    i32 63, label %8
    i32 64, label %8
    i32 65, label %8
    i32 66, label %8
    i32 67, label %8
    i32 72, label %8
    i32 73, label %8
    i32 74, label %8
    i32 75, label %8
    i32 32, label %8
    i32 33, label %8
    i32 34, label %8
    i32 35, label %8
    i32 44, label %8
    i32 45, label %8
    i32 46, label %8
    i32 47, label %8
    i32 8, label %8
    i32 9, label %8
    i32 10, label %8
    i32 11, label %8
  ]

8:                                                ; preds = %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %5
  switch i32 %0, label %13 [
    i32 76, label %11
    i32 77, label %11
    i32 78, label %11
    i32 79, label %11
    i32 140, label %9
    i32 141, label %9
    i32 142, label %9
    i32 143, label %9
    i32 80, label %10
    i32 81, label %10
    i32 82, label %10
    i32 83, label %10
    i32 88, label %15
    i32 89, label %15
    i32 90, label %15
    i32 91, label %15
    i32 92, label %15
    i32 93, label %15
    i32 94, label %15
    i32 95, label %15
    i32 96, label %15
    i32 97, label %15
    i32 98, label %15
    i32 99, label %15
    i32 100, label %15
    i32 101, label %15
    i32 102, label %15
    i32 103, label %15
    i32 104, label %15
    i32 105, label %15
    i32 106, label %15
    i32 107, label %15
    i32 108, label %15
    i32 109, label %15
    i32 110, label %15
    i32 111, label %15
    i32 112, label %15
    i32 113, label %15
    i32 114, label %15
    i32 115, label %15
    i32 116, label %15
    i32 117, label %15
    i32 118, label %15
    i32 119, label %15
    i32 120, label %15
    i32 121, label %15
    i32 122, label %15
    i32 123, label %15
    i32 124, label %15
    i32 125, label %15
    i32 126, label %15
    i32 127, label %15
    i32 128, label %15
    i32 129, label %15
    i32 130, label %15
    i32 131, label %15
    i32 132, label %15
    i32 133, label %15
    i32 134, label %15
    i32 135, label %15
    i32 136, label %15
    i32 137, label %15
    i32 138, label %15
    i32 139, label %15
  ]

9:                                                ; preds = %8, %8, %8, %8
  br label %11

10:                                               ; preds = %8, %8, %8, %8
  br label %11

11:                                               ; preds = %10, %9, %8, %8, %8, %8
  %12 = phi i32 [ 9, %10 ], [ 7, %9 ], [ 8, %8 ], [ 8, %8 ], [ 8, %8 ], [ 8, %8 ]
  store i32 %12, ptr %4, align 4
  br label %13

13:                                               ; preds = %11, %8
  %14 = tail call fastcc zeroext i1 @bpf_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %4)
  br label %15

15:                                               ; preds = %13, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %7
  %16 = phi i1 [ %14, %13 ], [ false, %7 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ], [ false, %8 ]
  ret i1 %16
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @tc_cls_act_prologue(ptr noundef writeonly %0, i1 noundef zeroext %1, ptr nocapture noundef readonly %2) #15 {
  br i1 %1, label %4, label %47

4:                                                ; preds = %3
  %5 = getelementptr %struct.bpf_insn, ptr %0, i32 1
  store i8 113, ptr %0, align 4
  %6 = getelementptr inbounds i8, ptr %0, i32 1
  store i8 22, ptr %6, align 1
  %7 = getelementptr inbounds i8, ptr %0, i32 2
  store i16 94, ptr %7, align 2
  %8 = getelementptr inbounds i8, ptr %0, i32 4
  store i32 0, ptr %8, align 4
  %9 = getelementptr %struct.bpf_insn, ptr %0, i32 2
  store i8 84, ptr %5, align 4
  %10 = getelementptr %struct.bpf_insn, ptr %0, i32 1, i32 1
  store i8 6, ptr %10, align 1
  %11 = getelementptr %struct.bpf_insn, ptr %0, i32 1, i32 2
  store i16 0, ptr %11, align 2
  %12 = getelementptr %struct.bpf_insn, ptr %0, i32 1, i32 3
  store i32 1, ptr %12, align 4
  %13 = getelementptr %struct.bpf_insn, ptr %0, i32 3
  store i8 21, ptr %9, align 4
  %14 = getelementptr %struct.bpf_insn, ptr %0, i32 2, i32 1
  store i8 6, ptr %14, align 1
  %15 = getelementptr %struct.bpf_insn, ptr %0, i32 2, i32 2
  store i16 7, ptr %15, align 2
  %16 = getelementptr %struct.bpf_insn, ptr %0, i32 2, i32 3
  store i32 0, ptr %16, align 4
  %17 = getelementptr %struct.bpf_insn, ptr %0, i32 4
  store i8 -65, ptr %13, align 4
  %18 = getelementptr %struct.bpf_insn, ptr %0, i32 3, i32 1
  store i8 22, ptr %18, align 1
  %19 = getelementptr %struct.bpf_insn, ptr %0, i32 3, i32 2
  store i16 0, ptr %19, align 2
  %20 = getelementptr %struct.bpf_insn, ptr %0, i32 3, i32 3
  store i32 0, ptr %20, align 4
  %21 = getelementptr %struct.bpf_insn, ptr %0, i32 5
  store i8 -81, ptr %17, align 4
  %22 = getelementptr %struct.bpf_insn, ptr %0, i32 4, i32 1
  store i8 34, ptr %22, align 1
  %23 = getelementptr %struct.bpf_insn, ptr %0, i32 4, i32 2
  store i16 0, ptr %23, align 2
  %24 = getelementptr %struct.bpf_insn, ptr %0, i32 4, i32 3
  store i32 0, ptr %24, align 4
  %25 = getelementptr %struct.bpf_insn, ptr %0, i32 6
  store i8 -123, ptr %21, align 4
  %26 = getelementptr %struct.bpf_insn, ptr %0, i32 5, i32 1
  store i8 0, ptr %26, align 1
  %27 = getelementptr %struct.bpf_insn, ptr %0, i32 5, i32 2
  store i16 0, ptr %27, align 2
  %28 = getelementptr %struct.bpf_insn, ptr %0, i32 5, i32 3
  store i32 39, ptr %28, align 4
  %29 = getelementptr %struct.bpf_insn, ptr %0, i32 7
  store i8 21, ptr %25, align 4
  %30 = getelementptr %struct.bpf_insn, ptr %0, i32 6, i32 1
  store i8 0, ptr %30, align 1
  %31 = getelementptr %struct.bpf_insn, ptr %0, i32 6, i32 2
  store i16 2, ptr %31, align 2
  %32 = getelementptr %struct.bpf_insn, ptr %0, i32 6, i32 3
  store i32 0, ptr %32, align 4
  %33 = getelementptr %struct.bpf_insn, ptr %0, i32 8
  store i8 -76, ptr %29, align 4
  %34 = getelementptr %struct.bpf_insn, ptr %0, i32 7, i32 1
  store i8 0, ptr %34, align 1
  %35 = getelementptr %struct.bpf_insn, ptr %0, i32 7, i32 2
  store i16 0, ptr %35, align 2
  %36 = getelementptr %struct.bpf_insn, ptr %0, i32 7, i32 3
  store i32 2, ptr %36, align 4
  %37 = getelementptr %struct.bpf_insn, ptr %0, i32 9
  store i8 -107, ptr %33, align 4
  %38 = getelementptr %struct.bpf_insn, ptr %0, i32 8, i32 1
  store i8 0, ptr %38, align 1
  %39 = getelementptr %struct.bpf_insn, ptr %0, i32 8, i32 2
  store i16 0, ptr %39, align 2
  %40 = getelementptr %struct.bpf_insn, ptr %0, i32 8, i32 3
  store i32 0, ptr %40, align 4
  %41 = getelementptr %struct.bpf_insn, ptr %0, i32 10
  store i8 -65, ptr %37, align 4
  %42 = getelementptr %struct.bpf_insn, ptr %0, i32 9, i32 1
  store i8 97, ptr %42, align 1
  %43 = getelementptr %struct.bpf_insn, ptr %0, i32 9, i32 2
  store i16 0, ptr %43, align 2
  %44 = getelementptr %struct.bpf_insn, ptr %0, i32 9, i32 3
  store i32 0, ptr %44, align 4
  %45 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 1
  %46 = load i64, ptr %45, align 4
  store i64 %46, ptr %41, align 4
  br label %47

47:                                               ; preds = %4, %3
  %48 = phi i32 [ 11, %4 ], [ 0, %3 ]
  ret i32 %48
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @tc_cls_act_convert_ctx_access(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef %3, ptr noundef %4) #15 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = icmp eq i16 %7, 40
  br i1 %8, label %9, label %23

9:                                                ; preds = %5
  %10 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %11 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  store i8 97, ptr %2, align 4
  %13 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %12, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %14, align 2
  %15 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %15, align 4
  %16 = load i8, ptr %11, align 1
  %17 = and i8 %16, 15
  %18 = shl i8 %16, 4
  %19 = or i8 %17, %18
  store i32 4, ptr %4, align 4
  store i8 97, ptr %10, align 4
  %20 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %19, ptr %20, align 1
  %21 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 124, ptr %21, align 2
  %22 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %22, align 4
  br label %25

23:                                               ; preds = %5
  %24 = tail call i32 @bpf_convert_ctx_access(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  br label %25

25:                                               ; preds = %23, %9
  %26 = phi i32 [ 2, %9 ], [ %24, %23 ]
  ret i32 %26
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal zeroext i1 @bpf_prog_test_check_kfunc_call(i32 noundef %0, ptr nocapture noundef readnone %1) #19 {
  ret i1 false
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @xdp_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %18 [
    i32 25, label %20
    i32 8, label %3
    i32 28, label %4
    i32 44, label %5
    i32 54, label %6
    i32 23, label %7
    i32 51, label %8
    i32 65, label %9
    i32 69, label %10
    i32 163, label %11
    i32 85, label %12
    i32 84, label %13
    i32 86, label %14
    i32 99, label %15
    i32 100, label %16
    i32 110, label %17
  ]

3:                                                ; preds = %2
  br label %20

4:                                                ; preds = %2
  br label %20

5:                                                ; preds = %2
  br label %20

6:                                                ; preds = %2
  br label %20

7:                                                ; preds = %2
  br label %20

8:                                                ; preds = %2
  br label %20

9:                                                ; preds = %2
  br label %20

10:                                               ; preds = %2
  br label %20

11:                                               ; preds = %2
  br label %20

12:                                               ; preds = %2
  br label %20

13:                                               ; preds = %2
  br label %20

14:                                               ; preds = %2
  br label %20

15:                                               ; preds = %2
  br label %20

16:                                               ; preds = %2
  br label %20

17:                                               ; preds = %2
  br label %20

18:                                               ; preds = %2
  %19 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %20

20:                                               ; preds = %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %21 = phi ptr [ %19, %18 ], [ @bpf_tcp_gen_syncookie_proto, %17 ], [ @bpf_tcp_check_syncookie_proto, %16 ], [ @bpf_xdp_skc_lookup_tcp_proto, %15 ], [ @bpf_sk_release_proto, %14 ], [ @bpf_xdp_sk_lookup_tcp_proto, %13 ], [ @bpf_xdp_sk_lookup_udp_proto, %12 ], [ @bpf_xdp_check_mtu_proto, %11 ], [ @bpf_xdp_fib_lookup_proto, %10 ], [ @bpf_xdp_adjust_tail_proto, %9 ], [ @bpf_xdp_redirect_map_proto, %8 ], [ @bpf_xdp_redirect_proto, %7 ], [ @bpf_xdp_adjust_meta_proto, %6 ], [ @bpf_xdp_adjust_head_proto, %5 ], [ @bpf_csum_diff_proto, %4 ], [ @bpf_get_smp_processor_id_proto, %3 ], [ @bpf_xdp_event_output_proto, %2 ]
  ret ptr %21
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal zeroext i1 @xdp_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr nocapture noundef writeonly %4) #15 {
  %6 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 3
  %7 = load i32, ptr %6, align 4
  %8 = icmp ne i32 %7, 33
  %9 = icmp eq i32 %0, 20
  %10 = and i1 %9, %8
  %11 = icmp eq i32 %2, 2
  %12 = or i1 %11, %10
  br i1 %12, label %25, label %13

13:                                               ; preds = %5
  switch i32 %0, label %16 [
    i32 0, label %18
    i32 8, label %14
    i32 4, label %15
  ]

14:                                               ; preds = %13
  br label %18

15:                                               ; preds = %13
  br label %18

16:                                               ; preds = %13
  %17 = icmp ugt i32 %0, 23
  br i1 %17, label %25, label %20

18:                                               ; preds = %15, %14, %13
  %19 = phi i32 [ 7, %14 ], [ 9, %15 ], [ 8, %13 ]
  store i32 %19, ptr %4, align 4
  br label %20

20:                                               ; preds = %18, %16
  %21 = srem i32 %0, %1
  %22 = icmp eq i32 %21, 0
  %23 = icmp eq i32 %1, 4
  %24 = and i1 %23, %22
  br label %25

25:                                               ; preds = %20, %16, %5
  %26 = phi i1 [ false, %5 ], [ false, %16 ], [ %24, %20 ]
  ret i1 %26
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @bpf_noop_prologue(ptr nocapture noundef readnone %0, i1 noundef zeroext %1, ptr nocapture noundef readnone %2) #9 {
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @xdp_convert_ctx_access(i32 noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4) #14 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  %9 = tail call i32 @llvm.fshl.i32(i32 %8, i32 %8, i32 30)
  switch i32 %9, label %95 [
    i32 0, label %10
    i32 2, label %17
    i32 1, label %24
    i32 3, label %31
    i32 4, label %54
    i32 5, label %69
  ]

10:                                               ; preds = %5
  %11 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %12 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %13 = load i8, ptr %12, align 1
  store i8 97, ptr %2, align 4
  %14 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %13, ptr %14, align 1
  %15 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %15, align 2
  %16 = getelementptr inbounds i8, ptr %2, i32 4
  br label %92

17:                                               ; preds = %5
  %18 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %19 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %20 = load i8, ptr %19, align 1
  store i8 97, ptr %2, align 4
  %21 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %20, ptr %21, align 1
  %22 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %22, align 2
  %23 = getelementptr inbounds i8, ptr %2, i32 4
  br label %92

24:                                               ; preds = %5
  %25 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %26 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %27 = load i8, ptr %26, align 1
  store i8 97, ptr %2, align 4
  %28 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %27, ptr %28, align 1
  %29 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %29, align 2
  %30 = getelementptr inbounds i8, ptr %2, i32 4
  br label %92

31:                                               ; preds = %5
  %32 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %33 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %34 = load i8, ptr %33, align 1
  store i8 97, ptr %2, align 4
  %35 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %34, ptr %35, align 1
  %36 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %36, align 2
  %37 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %37, align 4
  %38 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %39 = load i8, ptr %33, align 1
  %40 = and i8 %39, 15
  %41 = shl i8 %39, 4
  %42 = or i8 %40, %41
  store i8 97, ptr %32, align 4
  %43 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %42, ptr %43, align 1
  %44 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %44, align 2
  %45 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %45, align 4
  %46 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %47 = load i8, ptr %33, align 1
  %48 = and i8 %47, 15
  %49 = shl i8 %47, 4
  %50 = or i8 %48, %49
  store i8 97, ptr %38, align 4
  %51 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %50, ptr %51, align 1
  %52 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 124, ptr %52, align 2
  %53 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  br label %92

54:                                               ; preds = %5
  %55 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %56 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %57 = load i8, ptr %56, align 1
  store i8 97, ptr %2, align 4
  %58 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %57, ptr %58, align 1
  %59 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %59, align 2
  %60 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %60, align 4
  %61 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %62 = load i8, ptr %56, align 1
  %63 = and i8 %62, 15
  %64 = shl i8 %62, 4
  %65 = or i8 %63, %64
  store i8 97, ptr %55, align 4
  %66 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %65, ptr %66, align 1
  %67 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %67, align 2
  %68 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %92

69:                                               ; preds = %5
  %70 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %71 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %72 = load i8, ptr %71, align 1
  store i8 97, ptr %2, align 4
  %73 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %72, ptr %73, align 1
  %74 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 20, ptr %74, align 2
  %75 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %75, align 4
  %76 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %77 = load i8, ptr %71, align 1
  %78 = and i8 %77, 15
  %79 = shl i8 %77, 4
  %80 = or i8 %78, %79
  store i8 97, ptr %70, align 4
  %81 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %80, ptr %81, align 1
  %82 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %82, align 2
  %83 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %83, align 4
  %84 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %85 = load i8, ptr %71, align 1
  %86 = and i8 %85, 15
  %87 = shl i8 %85, 4
  %88 = or i8 %86, %87
  store i8 97, ptr %76, align 4
  %89 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %88, ptr %89, align 1
  %90 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 124, ptr %90, align 2
  %91 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  br label %92

92:                                               ; preds = %69, %54, %31, %24, %17, %10
  %93 = phi ptr [ %91, %69 ], [ %68, %54 ], [ %53, %31 ], [ %30, %24 ], [ %23, %17 ], [ %16, %10 ]
  %94 = phi ptr [ %84, %69 ], [ %61, %54 ], [ %46, %31 ], [ %25, %24 ], [ %18, %17 ], [ %11, %10 ]
  store i32 0, ptr %93, align 4
  br label %95

95:                                               ; preds = %92, %5
  %96 = phi ptr [ %2, %5 ], [ %94, %92 ]
  %97 = ptrtoint ptr %96 to i32
  %98 = ptrtoint ptr %2 to i32
  %99 = sub i32 %97, %98
  %100 = ashr exact i32 %99, 3
  ret i32 %100
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @bpf_prog_test_run_xdp(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readnone %2) #19 {
  ret i32 -524
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @cg_skb_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %14 [
    i32 81, label %16
    i32 95, label %3
    i32 107, label %4
    i32 108, label %5
    i32 25, label %6
    i32 84, label %7
    i32 85, label %8
    i32 86, label %9
    i32 99, label %10
    i32 96, label %11
    i32 98, label %12
    i32 97, label %13
  ]

3:                                                ; preds = %2
  br label %16

4:                                                ; preds = %2
  br label %16

5:                                                ; preds = %2
  br label %16

6:                                                ; preds = %2
  br label %16

7:                                                ; preds = %2
  br label %16

8:                                                ; preds = %2
  br label %16

9:                                                ; preds = %2
  br label %16

10:                                               ; preds = %2
  br label %16

11:                                               ; preds = %2
  br label %16

12:                                               ; preds = %2
  br label %16

13:                                               ; preds = %2
  br label %16

14:                                               ; preds = %2
  %15 = tail call ptr @sk_filter_func_proto(i32 noundef %0, ptr noundef %1)
  br label %16

16:                                               ; preds = %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %17 = phi ptr [ %15, %14 ], [ @bpf_skb_ecn_set_ce_proto, %13 ], [ @bpf_get_listener_sock_proto, %12 ], [ @bpf_tcp_sock_proto, %11 ], [ @bpf_skc_lookup_tcp_proto, %10 ], [ @bpf_sk_release_proto, %9 ], [ @bpf_sk_lookup_udp_proto, %8 ], [ @bpf_sk_lookup_tcp_proto, %7 ], [ @bpf_skb_event_output_proto, %6 ], [ @bpf_sk_storage_delete_proto, %5 ], [ @bpf_sk_storage_get_proto, %4 ], [ @bpf_sk_fullsock_proto, %3 ], [ @bpf_get_local_storage_proto, %2 ]
  ret ptr %17
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal zeroext i1 @cg_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #0 {
  switch i32 %0, label %10 [
    i32 160, label %25
    i32 161, label %25
    i32 162, label %25
    i32 163, label %25
    i32 140, label %25
    i32 141, label %25
    i32 142, label %25
    i32 143, label %25
    i32 72, label %25
    i32 73, label %25
    i32 74, label %25
    i32 75, label %25
    i32 80, label %6
    i32 81, label %6
    i32 82, label %6
    i32 83, label %6
    i32 76, label %6
    i32 77, label %6
    i32 78, label %6
    i32 79, label %6
  ]

6:                                                ; preds = %5, %5, %5, %5, %5, %5, %5, %5
  %7 = tail call zeroext i1 @capable(i32 noundef 39) #31
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @capable(i32 noundef 21) #31
  br i1 %9, label %10, label %25

10:                                               ; preds = %8, %6, %5
  %11 = icmp eq i32 %2, 2
  br i1 %11, label %12, label %17

12:                                               ; preds = %10
  switch i32 %0, label %25 [
    i32 48, label %17
    i32 49, label %17
    i32 50, label %17
    i32 51, label %17
    i32 52, label %17
    i32 53, label %17
    i32 54, label %17
    i32 55, label %17
    i32 56, label %17
    i32 57, label %17
    i32 58, label %17
    i32 59, label %17
    i32 60, label %17
    i32 61, label %17
    i32 62, label %17
    i32 63, label %17
    i32 64, label %17
    i32 65, label %17
    i32 66, label %17
    i32 67, label %17
    i32 32, label %17
    i32 33, label %17
    i32 34, label %17
    i32 35, label %17
    i32 8, label %17
    i32 9, label %17
    i32 10, label %17
    i32 11, label %17
    i32 152, label %13
    i32 153, label %13
    i32 154, label %13
    i32 155, label %13
    i32 156, label %13
    i32 157, label %13
    i32 158, label %13
    i32 159, label %13
  ]

13:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12
  %14 = tail call zeroext i1 @capable(i32 noundef 39) #31
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @capable(i32 noundef 21) #31
  br i1 %16, label %17, label %25

17:                                               ; preds = %15, %13, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %10
  %18 = add i32 %0, -76
  %19 = icmp ult i32 %18, 8
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = getelementptr inbounds [8 x i32], ptr @switch.table.lwt_is_valid_access, i32 0, i32 %18
  %22 = load i32, ptr %21, align 4
  store i32 %22, ptr %4, align 4
  br label %23

23:                                               ; preds = %20, %17
  %24 = tail call fastcc zeroext i1 @bpf_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %4)
  br label %25

25:                                               ; preds = %23, %15, %12, %8, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %26 = phi i1 [ %24, %23 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %8 ], [ false, %15 ], [ false, %12 ]
  ret i1 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @lwt_in_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %11 [
    i32 73, label %14
    i32 26, label %13
    i32 39, label %3
    i32 28, label %4
    i32 17, label %5
    i32 24, label %6
    i32 34, label %7
    i32 25, label %8
    i32 8, label %9
    i32 33, label %10
  ]

3:                                                ; preds = %2
  br label %14

4:                                                ; preds = %2
  br label %14

5:                                                ; preds = %2
  br label %14

6:                                                ; preds = %2
  br label %14

7:                                                ; preds = %2
  br label %14

8:                                                ; preds = %2
  br label %14

9:                                                ; preds = %2
  br label %14

10:                                               ; preds = %2
  br label %14

11:                                               ; preds = %2
  %12 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0) #31
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %15 = phi ptr [ @bpf_lwt_in_push_encap_proto, %2 ], [ %12, %11 ], [ @bpf_skb_under_cgroup_proto, %10 ], [ @bpf_get_smp_processor_id_proto, %9 ], [ @bpf_skb_event_output_proto, %8 ], [ @bpf_get_hash_recalc_proto, %7 ], [ @bpf_get_route_realm_proto, %6 ], [ @bpf_get_cgroup_classid_proto, %5 ], [ @bpf_csum_diff_proto, %4 ], [ @bpf_skb_pull_data_proto, %3 ], [ @bpf_skb_load_bytes_proto, %13 ]
  ret ptr %15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @lwt_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #17 {
  switch i32 %0, label %6 [
    i32 184, label %17
    i32 185, label %17
    i32 186, label %17
    i32 187, label %17
    i32 188, label %17
    i32 189, label %17
    i32 190, label %17
    i32 191, label %17
    i32 160, label %17
    i32 161, label %17
    i32 162, label %17
    i32 163, label %17
    i32 152, label %17
    i32 153, label %17
    i32 154, label %17
    i32 155, label %17
    i32 156, label %17
    i32 157, label %17
    i32 158, label %17
    i32 159, label %17
    i32 140, label %17
    i32 141, label %17
    i32 142, label %17
    i32 143, label %17
    i32 88, label %17
    i32 89, label %17
    i32 90, label %17
    i32 91, label %17
    i32 92, label %17
    i32 93, label %17
    i32 94, label %17
    i32 95, label %17
    i32 96, label %17
    i32 97, label %17
    i32 98, label %17
    i32 99, label %17
    i32 100, label %17
    i32 101, label %17
    i32 102, label %17
    i32 103, label %17
    i32 104, label %17
    i32 105, label %17
    i32 106, label %17
    i32 107, label %17
    i32 108, label %17
    i32 109, label %17
    i32 110, label %17
    i32 111, label %17
    i32 112, label %17
    i32 113, label %17
    i32 114, label %17
    i32 115, label %17
    i32 116, label %17
    i32 117, label %17
    i32 118, label %17
    i32 119, label %17
    i32 120, label %17
    i32 121, label %17
    i32 122, label %17
    i32 123, label %17
    i32 124, label %17
    i32 125, label %17
    i32 126, label %17
    i32 127, label %17
    i32 128, label %17
    i32 129, label %17
    i32 130, label %17
    i32 131, label %17
    i32 132, label %17
    i32 133, label %17
    i32 134, label %17
    i32 135, label %17
    i32 136, label %17
    i32 137, label %17
    i32 138, label %17
    i32 139, label %17
    i32 72, label %17
    i32 73, label %17
    i32 74, label %17
    i32 75, label %17
  ]

6:                                                ; preds = %5
  %7 = icmp eq i32 %2, 2
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  switch i32 %0, label %17 [
    i32 48, label %9
    i32 49, label %9
    i32 50, label %9
    i32 51, label %9
    i32 52, label %9
    i32 53, label %9
    i32 54, label %9
    i32 55, label %9
    i32 56, label %9
    i32 57, label %9
    i32 58, label %9
    i32 59, label %9
    i32 60, label %9
    i32 61, label %9
    i32 62, label %9
    i32 63, label %9
    i32 64, label %9
    i32 65, label %9
    i32 66, label %9
    i32 67, label %9
    i32 32, label %9
    i32 33, label %9
    i32 34, label %9
    i32 35, label %9
    i32 8, label %9
    i32 9, label %9
    i32 10, label %9
    i32 11, label %9
  ]

9:                                                ; preds = %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %6
  %10 = add i32 %0, -76
  %11 = icmp ult i32 %10, 8
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = getelementptr inbounds [8 x i32], ptr @switch.table.lwt_is_valid_access, i32 0, i32 %10
  %14 = load i32, ptr %13, align 4
  store i32 %14, ptr %4, align 4
  br label %15

15:                                               ; preds = %12, %9
  %16 = tail call fastcc zeroext i1 @bpf_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %4)
  br label %17

17:                                               ; preds = %15, %8, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %18 = phi i1 [ %16, %15 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %8 ]
  ret i1 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @lwt_out_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %11 [
    i32 26, label %13
    i32 39, label %3
    i32 28, label %4
    i32 17, label %5
    i32 24, label %6
    i32 34, label %7
    i32 25, label %8
    i32 8, label %9
    i32 33, label %10
  ]

3:                                                ; preds = %2
  br label %13

4:                                                ; preds = %2
  br label %13

5:                                                ; preds = %2
  br label %13

6:                                                ; preds = %2
  br label %13

7:                                                ; preds = %2
  br label %13

8:                                                ; preds = %2
  br label %13

9:                                                ; preds = %2
  br label %13

10:                                               ; preds = %2
  br label %13

11:                                               ; preds = %2
  %12 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %13

13:                                               ; preds = %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %14 = phi ptr [ %12, %11 ], [ @bpf_skb_under_cgroup_proto, %10 ], [ @bpf_get_smp_processor_id_proto, %9 ], [ @bpf_skb_event_output_proto, %8 ], [ @bpf_get_hash_recalc_proto, %7 ], [ @bpf_get_route_realm_proto, %6 ], [ @bpf_get_cgroup_classid_proto, %5 ], [ @bpf_csum_diff_proto, %4 ], [ @bpf_skb_pull_data_proto, %3 ], [ @bpf_skb_load_bytes_proto, %2 ]
  ret ptr %14
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @lwt_xmit_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %55 [
    i32 20, label %58
    i32 21, label %3
    i32 29, label %19
    i32 30, label %20
    i32 23, label %36
    i32 13, label %37
    i32 38, label %38
    i32 43, label %39
    i32 9, label %40
    i32 40, label %41
    i32 135, label %42
    i32 10, label %43
    i32 11, label %44
    i32 41, label %45
    i32 73, label %46
    i32 26, label %57
    i32 39, label %47
    i32 28, label %48
    i32 17, label %49
    i32 24, label %50
    i32 34, label %51
    i32 25, label %52
    i32 8, label %53
    i32 33, label %54
  ]

3:                                                ; preds = %2
  %4 = load ptr, ptr @md_dst, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %58

6:                                                ; preds = %3
  %7 = tail call ptr @metadata_dst_alloc_percpu(i8 noundef zeroext -1, i32 noundef 0, i32 noundef 3264) #31
  %8 = icmp eq ptr %7, null
  br i1 %8, label %58, label %9

9:                                                ; preds = %6
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !59
  %10 = ptrtoint ptr %7 to i32
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @md_dst) #31, !srcloc !23
  br label %11

11:                                               ; preds = %11, %9
  %12 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr nonnull @md_dst, i32 0, i32 %10) #31, !srcloc !45
  %13 = extractvalue { i32, i32 } %12, 0
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = extractvalue { i32, i32 } %12, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !60
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %58, label %18

18:                                               ; preds = %15
  tail call void @metadata_dst_free_percpu(ptr noundef nonnull %7) #31
  br label %58

19:                                               ; preds = %2
  br label %58

20:                                               ; preds = %2
  %21 = load ptr, ptr @md_dst, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %58

23:                                               ; preds = %20
  %24 = tail call ptr @metadata_dst_alloc_percpu(i8 noundef zeroext -1, i32 noundef 0, i32 noundef 3264) #31
  %25 = icmp eq ptr %24, null
  br i1 %25, label %58, label %26

26:                                               ; preds = %23
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !59
  %27 = ptrtoint ptr %24 to i32
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @md_dst) #31, !srcloc !23
  br label %28

28:                                               ; preds = %28, %26
  %29 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr nonnull @md_dst, i32 0, i32 %27) #31, !srcloc !45
  %30 = extractvalue { i32, i32 } %29, 0
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %28

32:                                               ; preds = %28
  %33 = extractvalue { i32, i32 } %29, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !60
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %58, label %35

35:                                               ; preds = %32
  tail call void @metadata_dst_free_percpu(ptr noundef nonnull %24) #31
  br label %58

36:                                               ; preds = %2
  br label %58

37:                                               ; preds = %2
  br label %58

38:                                               ; preds = %2
  br label %58

39:                                               ; preds = %2
  br label %58

40:                                               ; preds = %2
  br label %58

41:                                               ; preds = %2
  br label %58

42:                                               ; preds = %2
  br label %58

43:                                               ; preds = %2
  br label %58

44:                                               ; preds = %2
  br label %58

45:                                               ; preds = %2
  br label %58

46:                                               ; preds = %2
  br label %58

47:                                               ; preds = %2
  br label %58

48:                                               ; preds = %2
  br label %58

49:                                               ; preds = %2
  br label %58

50:                                               ; preds = %2
  br label %58

51:                                               ; preds = %2
  br label %58

52:                                               ; preds = %2
  br label %58

53:                                               ; preds = %2
  br label %58

54:                                               ; preds = %2
  br label %58

55:                                               ; preds = %2
  %56 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0) #31
  br label %58

57:                                               ; preds = %2
  br label %58

58:                                               ; preds = %57, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %32, %23, %20, %19, %18, %15, %6, %3, %2
  %59 = phi ptr [ @bpf_lwt_xmit_push_encap_proto, %46 ], [ @bpf_set_hash_invalid_proto, %45 ], [ @bpf_l4_csum_replace_proto, %44 ], [ @bpf_l3_csum_replace_proto, %43 ], [ @bpf_csum_level_proto, %42 ], [ @bpf_csum_update_proto, %41 ], [ @bpf_skb_store_bytes_proto, %40 ], [ @bpf_skb_change_head_proto, %39 ], [ @bpf_skb_change_tail_proto, %38 ], [ @bpf_clone_redirect_proto, %37 ], [ @bpf_redirect_proto, %36 ], [ @bpf_skb_get_tunnel_opt_proto, %19 ], [ @bpf_skb_get_tunnel_key_proto, %2 ], [ null, %6 ], [ @bpf_skb_set_tunnel_key_proto, %18 ], [ @bpf_skb_set_tunnel_key_proto, %15 ], [ @bpf_skb_set_tunnel_key_proto, %3 ], [ null, %23 ], [ @bpf_skb_set_tunnel_opt_proto, %35 ], [ @bpf_skb_set_tunnel_opt_proto, %32 ], [ @bpf_skb_set_tunnel_opt_proto, %20 ], [ %56, %55 ], [ @bpf_skb_under_cgroup_proto, %54 ], [ @bpf_get_smp_processor_id_proto, %53 ], [ @bpf_skb_event_output_proto, %52 ], [ @bpf_get_hash_recalc_proto, %51 ], [ @bpf_get_route_realm_proto, %50 ], [ @bpf_get_cgroup_classid_proto, %49 ], [ @bpf_csum_diff_proto, %48 ], [ @bpf_skb_pull_data_proto, %47 ], [ @bpf_skb_load_bytes_proto, %57 ]
  ret ptr %59
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @lwt_seg6local_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %11 [
    i32 26, label %13
    i32 39, label %3
    i32 28, label %4
    i32 17, label %5
    i32 24, label %6
    i32 34, label %7
    i32 25, label %8
    i32 8, label %9
    i32 33, label %10
  ]

3:                                                ; preds = %2
  br label %13

4:                                                ; preds = %2
  br label %13

5:                                                ; preds = %2
  br label %13

6:                                                ; preds = %2
  br label %13

7:                                                ; preds = %2
  br label %13

8:                                                ; preds = %2
  br label %13

9:                                                ; preds = %2
  br label %13

10:                                               ; preds = %2
  br label %13

11:                                               ; preds = %2
  %12 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0) #31
  br label %13

13:                                               ; preds = %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %14 = phi ptr [ %12, %11 ], [ @bpf_skb_under_cgroup_proto, %10 ], [ @bpf_get_smp_processor_id_proto, %9 ], [ @bpf_skb_event_output_proto, %8 ], [ @bpf_get_hash_recalc_proto, %7 ], [ @bpf_get_route_realm_proto, %6 ], [ @bpf_get_cgroup_classid_proto, %5 ], [ @bpf_csum_diff_proto, %4 ], [ @bpf_skb_pull_data_proto, %3 ], [ @bpf_skb_load_bytes_proto, %2 ]
  ret ptr %14
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal ptr @sock_filter_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #9 {
  switch i32 %0, label %13 [
    i32 15, label %14
    i32 81, label %3
    i32 46, label %4
    i32 122, label %5
    i32 25, label %6
    i32 14, label %7
    i32 16, label %8
    i32 80, label %9
    i32 123, label %10
    i32 107, label %11
    i32 160, label %12
  ]

3:                                                ; preds = %2
  br label %14

4:                                                ; preds = %2
  br label %14

5:                                                ; preds = %2
  br label %14

6:                                                ; preds = %2
  br label %14

7:                                                ; preds = %2
  br label %14

8:                                                ; preds = %2
  br label %14

9:                                                ; preds = %2
  br label %14

10:                                               ; preds = %2
  br label %14

11:                                               ; preds = %2
  br label %14

12:                                               ; preds = %2
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %15 = phi ptr [ null, %13 ], [ @bpf_ktime_get_coarse_ns_proto, %12 ], [ @bpf_sk_storage_get_cg_sock_proto, %11 ], [ @bpf_get_current_ancestor_cgroup_id_proto, %10 ], [ @bpf_get_current_cgroup_id_proto, %9 ], [ @bpf_get_current_comm_proto, %8 ], [ @bpf_get_current_pid_tgid_proto, %7 ], [ @bpf_event_output_data_proto, %6 ], [ @bpf_get_netns_cookie_sock_proto, %5 ], [ @bpf_get_socket_cookie_sock_proto, %4 ], [ @bpf_get_local_storage_proto, %3 ], [ @bpf_get_current_uid_gid_proto, %2 ]
  ret ptr %15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal zeroext i1 @sock_filter_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr nocapture noundef writeonly %4) #14 {
  %6 = tail call zeroext i1 @bpf_sock_is_valid_access(i32 noundef %0, i32 noundef %1, i32 undef, ptr noundef %4)
  br i1 %6, label %7, label %23

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 3
  %9 = load i32, ptr %8, align 4
  switch i32 %0, label %21 [
    i32 0, label %10
    i32 16, label %10
    i32 20, label %10
    i32 24, label %14
    i32 25, label %14
    i32 26, label %14
    i32 27, label %14
    i32 28, label %16
    i32 29, label %16
    i32 30, label %16
    i32 31, label %16
    i32 32, label %16
    i32 33, label %16
    i32 34, label %16
    i32 35, label %16
    i32 36, label %16
    i32 37, label %16
    i32 38, label %16
    i32 39, label %16
    i32 40, label %16
    i32 41, label %16
    i32 42, label %16
    i32 43, label %16
    i32 44, label %18
    i32 45, label %18
    i32 46, label %18
    i32 47, label %18
  ]

10:                                               ; preds = %7, %7, %7
  %11 = add i32 %9, -2
  %12 = and i32 %11, -33
  %13 = icmp eq i32 %12, 0
  br label %23

14:                                               ; preds = %7, %7, %7, %7
  %15 = icmp eq i32 %9, 12
  br i1 %15, label %21, label %23

16:                                               ; preds = %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7
  %17 = icmp eq i32 %9, 13
  br i1 %17, label %21, label %23

18:                                               ; preds = %7, %7, %7, %7
  %19 = and i32 %9, -2
  %20 = icmp eq i32 %19, 12
  br i1 %20, label %21, label %23

21:                                               ; preds = %18, %16, %14, %7
  %22 = icmp eq i32 %2, 1
  br label %23

23:                                               ; preds = %21, %18, %16, %14, %10, %5
  %24 = phi i1 [ false, %5 ], [ %22, %21 ], [ %13, %10 ], [ false, %14 ], [ false, %16 ], [ false, %18 ]
  ret i1 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @sock_addr_func_proto(i32 noundef %0, ptr nocapture noundef readonly %1) #0 {
  switch i32 %0, label %33 [
    i32 15, label %41
    i32 64, label %3
    i32 46, label %9
    i32 122, label %10
    i32 81, label %11
    i32 25, label %12
    i32 14, label %13
    i32 16, label %14
    i32 80, label %15
    i32 123, label %16
    i32 84, label %17
    i32 85, label %18
    i32 86, label %19
    i32 99, label %20
    i32 107, label %21
    i32 108, label %22
    i32 49, label %23
    i32 57, label %28
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, -2
  %7 = icmp eq i32 %6, 10
  %8 = select i1 %7, ptr @bpf_bind_proto, ptr null
  br label %41

9:                                                ; preds = %2
  br label %41

10:                                               ; preds = %2
  br label %41

11:                                               ; preds = %2
  br label %41

12:                                               ; preds = %2
  br label %41

13:                                               ; preds = %2
  br label %41

14:                                               ; preds = %2
  br label %41

15:                                               ; preds = %2
  br label %41

16:                                               ; preds = %2
  br label %41

17:                                               ; preds = %2
  br label %41

18:                                               ; preds = %2
  br label %41

19:                                               ; preds = %2
  br label %41

20:                                               ; preds = %2
  br label %41

21:                                               ; preds = %2
  br label %41

22:                                               ; preds = %2
  br label %41

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 3
  %25 = load i32, ptr %24, align 4
  %26 = add i32 %25, -8
  %27 = icmp ult i32 %26, 25
  br i1 %27, label %35, label %41

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 3
  %30 = load i32, ptr %29, align 4
  %31 = add i32 %30, -8
  %32 = icmp ult i32 %31, 25
  br i1 %32, label %38, label %41

33:                                               ; preds = %2
  %34 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %41

35:                                               ; preds = %23
  %36 = getelementptr inbounds [25 x ptr], ptr @switch.table.sock_addr_func_proto, i32 0, i32 %26
  %37 = load ptr, ptr %36, align 4
  br label %41

38:                                               ; preds = %28
  %39 = getelementptr inbounds [25 x ptr], ptr @switch.table.sock_addr_func_proto.20, i32 0, i32 %31
  %40 = load ptr, ptr %39, align 4
  br label %41

41:                                               ; preds = %38, %35, %33, %28, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %3, %2
  %42 = phi ptr [ %34, %33 ], [ @bpf_sk_storage_delete_proto, %22 ], [ @bpf_sk_storage_get_proto, %21 ], [ @bpf_sock_addr_skc_lookup_tcp_proto, %20 ], [ @bpf_sk_release_proto, %19 ], [ @bpf_sock_addr_sk_lookup_udp_proto, %18 ], [ @bpf_sock_addr_sk_lookup_tcp_proto, %17 ], [ @bpf_get_current_ancestor_cgroup_id_proto, %16 ], [ @bpf_get_current_cgroup_id_proto, %15 ], [ @bpf_get_current_comm_proto, %14 ], [ @bpf_get_current_pid_tgid_proto, %13 ], [ @bpf_event_output_data_proto, %12 ], [ @bpf_get_local_storage_proto, %11 ], [ @bpf_get_netns_cookie_sock_addr_proto, %10 ], [ @bpf_get_socket_cookie_sock_addr_proto, %9 ], [ @bpf_get_current_uid_gid_proto, %2 ], [ %8, %3 ], [ %37, %35 ], [ null, %23 ], [ %40, %38 ], [ null, %28 ]
  ret ptr %42
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal zeroext i1 @sock_addr_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr nocapture noundef writeonly %4) #14 {
  %6 = icmp ugt i32 %0, 71
  br i1 %6, label %72, label %7

7:                                                ; preds = %5
  %8 = srem i32 %0, %1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %72

10:                                               ; preds = %7
  switch i32 %0, label %25 [
    i32 4, label %11
    i32 5, label %11
    i32 6, label %11
    i32 7, label %11
    i32 8, label %14
    i32 9, label %14
    i32 10, label %14
    i32 11, label %14
    i32 12, label %14
    i32 13, label %14
    i32 14, label %14
    i32 15, label %14
    i32 16, label %14
    i32 17, label %14
    i32 18, label %14
    i32 19, label %14
    i32 20, label %14
    i32 21, label %14
    i32 22, label %14
    i32 23, label %14
    i32 40, label %17
    i32 41, label %17
    i32 42, label %17
    i32 43, label %17
    i32 44, label %21
    i32 45, label %21
    i32 46, label %21
    i32 47, label %21
    i32 48, label %21
    i32 49, label %21
    i32 50, label %21
    i32 51, label %21
    i32 52, label %21
    i32 53, label %21
    i32 54, label %21
    i32 55, label %21
    i32 56, label %21
    i32 57, label %21
    i32 58, label %21
    i32 59, label %21
  ]

11:                                               ; preds = %10, %10, %10, %10
  %12 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 3
  %13 = load i32, ptr %12, align 4
  switch i32 %13, label %72 [
    i32 8, label %25
    i32 10, label %25
    i32 29, label %25
    i32 31, label %25
    i32 14, label %25
    i32 19, label %25
  ]

14:                                               ; preds = %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10
  %15 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 3
  %16 = load i32, ptr %15, align 4
  switch i32 %16, label %72 [
    i32 9, label %25
    i32 11, label %25
    i32 30, label %25
    i32 32, label %25
    i32 15, label %25
    i32 20, label %25
  ]

17:                                               ; preds = %10, %10, %10, %10
  %18 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 14
  br i1 %20, label %25, label %72

21:                                               ; preds = %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10
  %22 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 3
  %23 = load i32, ptr %22, align 4
  %24 = icmp eq i32 %23, 15
  br i1 %24, label %25, label %72

25:                                               ; preds = %21, %17, %14, %14, %14, %14, %14, %14, %11, %11, %11, %11, %11, %11, %10
  switch i32 %0, label %67 [
    i32 24, label %26
    i32 25, label %26
    i32 26, label %26
    i32 27, label %26
    i32 44, label %26
    i32 45, label %26
    i32 46, label %26
    i32 47, label %26
    i32 48, label %26
    i32 49, label %26
    i32 50, label %26
    i32 51, label %26
    i32 52, label %26
    i32 53, label %26
    i32 54, label %26
    i32 55, label %26
    i32 56, label %26
    i32 57, label %26
    i32 58, label %26
    i32 59, label %26
    i32 40, label %26
    i32 41, label %26
    i32 42, label %26
    i32 43, label %26
    i32 8, label %26
    i32 9, label %26
    i32 10, label %26
    i32 11, label %26
    i32 12, label %26
    i32 13, label %26
    i32 14, label %26
    i32 15, label %26
    i32 16, label %26
    i32 17, label %26
    i32 18, label %26
    i32 19, label %26
    i32 20, label %26
    i32 21, label %26
    i32 22, label %26
    i32 23, label %26
    i32 4, label %26
    i32 5, label %26
    i32 6, label %26
    i32 7, label %26
    i32 64, label %62
  ]

26:                                               ; preds = %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25
  %27 = icmp eq i32 %2, 1
  br i1 %27, label %28, label %47

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.bpf_insn_access_aux, ptr %4, i32 0, i32 1
  store i32 4, ptr %29, align 4
  %30 = icmp eq i32 %1, 8
  %31 = add nsw i32 %0, -8
  %32 = icmp ult i32 %31, 9
  %33 = and i1 %32, %30
  %34 = and i32 %0, 7
  %35 = icmp eq i32 %34, 0
  %36 = and i1 %35, %33
  br i1 %36, label %72, label %37

37:                                               ; preds = %28
  %38 = add nsw i32 %0, -44
  %39 = icmp ult i32 %38, 9
  %40 = and i1 %39, %30
  %41 = and i1 %35, %40
  br i1 %41, label %72, label %42

42:                                               ; preds = %37
  %43 = icmp ult i32 %1, 5
  %44 = tail call i32 @llvm.ctpop.i32(i32 %1) #31, !range !37
  %45 = icmp ult i32 %44, 2
  %46 = and i1 %43, %45
  br i1 %46, label %71, label %72

47:                                               ; preds = %26
  %48 = icmp eq i32 %1, 8
  %49 = add nsw i32 %0, -8
  %50 = icmp ult i32 %49, 9
  %51 = and i1 %50, %48
  %52 = and i32 %0, 7
  %53 = icmp eq i32 %52, 0
  %54 = and i1 %53, %51
  br i1 %54, label %72, label %55

55:                                               ; preds = %47
  %56 = add nsw i32 %0, -44
  %57 = icmp ult i32 %56, 9
  %58 = and i1 %57, %48
  %59 = and i1 %53, %58
  br i1 %59, label %72, label %60

60:                                               ; preds = %55
  %61 = icmp eq i32 %1, 4
  br i1 %61, label %71, label %72

62:                                               ; preds = %25
  %63 = icmp eq i32 %2, 1
  %64 = icmp eq i32 %1, 8
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  store i32 11, ptr %4, align 4
  br label %71

67:                                               ; preds = %25
  %68 = icmp eq i32 %2, 1
  %69 = icmp eq i32 %1, 4
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %72

71:                                               ; preds = %67, %66, %60, %42
  br label %72

72:                                               ; preds = %71, %67, %62, %60, %55, %47, %42, %37, %28, %21, %17, %14, %11, %7, %5
  %73 = phi i1 [ true, %71 ], [ false, %5 ], [ false, %7 ], [ false, %11 ], [ false, %14 ], [ false, %17 ], [ false, %21 ], [ true, %28 ], [ true, %37 ], [ true, %47 ], [ true, %55 ], [ false, %60 ], [ false, %62 ], [ false, %67 ], [ false, %42 ]
  ret i1 %73
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @sock_addr_convert_ctx_access(i32 noundef %0, ptr noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #0 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %425 [
    i32 0, label %9
    i32 4, label %24
    i32 8, label %92
    i32 9, label %92
    i32 10, label %92
    i32 11, label %92
    i32 12, label %92
    i32 13, label %92
    i32 14, label %92
    i32 15, label %92
    i32 16, label %92
    i32 17, label %92
    i32 18, label %92
    i32 19, label %92
    i32 20, label %92
    i32 21, label %92
    i32 22, label %92
    i32 23, label %92
    i32 24, label %160
    i32 28, label %231
    i32 32, label %246
    i32 36, label %261
    i32 40, label %276
    i32 44, label %344
    i32 45, label %344
    i32 46, label %344
    i32 47, label %344
    i32 48, label %344
    i32 49, label %344
    i32 50, label %344
    i32 51, label %344
    i32 52, label %344
    i32 53, label %344
    i32 54, label %344
    i32 55, label %344
    i32 56, label %344
    i32 57, label %344
    i32 58, label %344
    i32 59, label %344
    i32 64, label %415
  ]

9:                                                ; preds = %5
  %10 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %11 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  store i8 97, ptr %2, align 4
  %13 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %12, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %14, align 2
  %15 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %15, align 4
  %16 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %17 = load i8, ptr %11, align 1
  %18 = and i8 %17, 15
  %19 = shl i8 %17, 4
  %20 = or i8 %18, %19
  store i32 2, ptr %4, align 4
  store i8 105, ptr %10, align 4
  %21 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %20, ptr %21, align 1
  %22 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %22, align 2
  %23 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

24:                                               ; preds = %5
  %25 = icmp eq i32 %0, 2
  br i1 %25, label %26, label %74

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %28 = load i8, ptr %27, align 1
  %29 = and i8 %28, -16
  %30 = icmp eq i8 %29, -112
  %31 = and i8 %28, 15
  %32 = icmp eq i8 %31, 9
  %33 = or i1 %30, %32
  %34 = select i1 %33, i32 8, i32 9
  %35 = lshr i8 %28, 4
  %36 = zext i8 %35 to i32
  %37 = icmp eq i32 %34, %36
  %38 = zext i8 %31 to i32
  %39 = icmp eq i32 %34, %38
  %40 = select i1 %37, i1 true, i1 %39
  %41 = sext i1 %40 to i32
  %42 = add nsw i32 %34, %41
  %43 = trunc i32 %42 to i8
  %44 = shl nuw i8 %43, 4
  %45 = or i8 %44, %31
  store i8 123, ptr %2, align 4
  %46 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %45, ptr %46, align 1
  %47 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %47, align 2
  %48 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %48, align 4
  %49 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %50 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %51 = load i8, ptr %27, align 1
  %52 = shl i8 %51, 4
  %53 = or i8 %52, %43
  store i8 97, ptr %49, align 4
  %54 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %53, ptr %54, align 1
  %55 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %55, align 2
  %56 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %56, align 4
  %57 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %58 = load i8, ptr %1, align 4
  %59 = and i8 %58, 24
  %60 = or i8 %59, 99
  %61 = load i8, ptr %27, align 1
  %62 = and i8 %61, -16
  %63 = or i8 %62, %43
  store i32 4, ptr %4, align 4
  store i8 %60, ptr %50, align 4
  %64 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %63, ptr %64, align 1
  %65 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 4, ptr %65, align 2
  %66 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %66, align 4
  %67 = getelementptr %struct.bpf_insn, ptr %2, i32 4
  %68 = load i8, ptr %27, align 1
  %69 = shl i8 %68, 4
  %70 = or i8 %69, %43
  store i8 121, ptr %57, align 4
  %71 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 1
  store i8 %70, ptr %71, align 1
  %72 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 2
  store i16 8, ptr %72, align 2
  %73 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 3
  br label %422

74:                                               ; preds = %24
  %75 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %76 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %77 = load i8, ptr %76, align 1
  store i8 97, ptr %2, align 4
  %78 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %77, ptr %78, align 1
  %79 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %79, align 2
  %80 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %80, align 4
  %81 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %82 = load i8, ptr %1, align 4
  %83 = and i8 %82, 24
  %84 = or i8 %83, 97
  %85 = load i8, ptr %76, align 1
  %86 = and i8 %85, 15
  %87 = shl i8 %85, 4
  %88 = or i8 %86, %87
  store i32 4, ptr %4, align 4
  store i8 %84, ptr %75, align 4
  %89 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %88, ptr %89, align 1
  %90 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %90, align 2
  %91 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

92:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %93 = icmp eq i32 %0, 2
  br i1 %93, label %94, label %142

94:                                               ; preds = %92
  %95 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %96 = load i8, ptr %95, align 1
  %97 = and i8 %96, -16
  %98 = icmp eq i8 %97, -112
  %99 = and i8 %96, 15
  %100 = icmp eq i8 %99, 9
  %101 = or i1 %98, %100
  %102 = select i1 %101, i32 8, i32 9
  %103 = lshr i8 %96, 4
  %104 = zext i8 %103 to i32
  %105 = icmp eq i32 %102, %104
  %106 = zext i8 %99 to i32
  %107 = icmp eq i32 %102, %106
  %108 = select i1 %105, i1 true, i1 %107
  %109 = sext i1 %108 to i32
  %110 = add nsw i32 %102, %109
  %111 = trunc i32 %110 to i8
  %112 = shl nuw i8 %111, 4
  %113 = or i8 %112, %99
  store i8 123, ptr %2, align 4
  %114 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %113, ptr %114, align 1
  %115 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %115, align 2
  %116 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %116, align 4
  %117 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %118 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %119 = load i8, ptr %95, align 1
  %120 = shl i8 %119, 4
  %121 = or i8 %120, %111
  store i8 97, ptr %117, align 4
  %122 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %121, ptr %122, align 1
  %123 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %123, align 2
  %124 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %124, align 4
  %125 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %126 = load i8, ptr %1, align 4
  %127 = and i8 %126, 24
  %128 = or i8 %127, 99
  %129 = load i8, ptr %95, align 1
  %130 = and i8 %129, -16
  %131 = or i8 %130, %111
  store i32 4, ptr %4, align 4
  store i8 %128, ptr %118, align 4
  %132 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %131, ptr %132, align 1
  %133 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 %7, ptr %133, align 2
  %134 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %134, align 4
  %135 = getelementptr %struct.bpf_insn, ptr %2, i32 4
  %136 = load i8, ptr %95, align 1
  %137 = shl i8 %136, 4
  %138 = or i8 %137, %111
  store i8 121, ptr %125, align 4
  %139 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 1
  store i8 %138, ptr %139, align 1
  %140 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 2
  store i16 8, ptr %140, align 2
  %141 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 3
  br label %422

142:                                              ; preds = %92
  %143 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %144 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %145 = load i8, ptr %144, align 1
  store i8 97, ptr %2, align 4
  %146 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %145, ptr %146, align 1
  %147 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %147, align 2
  %148 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %148, align 4
  %149 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %150 = load i8, ptr %1, align 4
  %151 = and i8 %150, 24
  %152 = or i8 %151, 97
  %153 = load i8, ptr %144, align 1
  %154 = and i8 %153, 15
  %155 = shl i8 %153, 4
  %156 = or i8 %154, %155
  store i32 4, ptr %4, align 4
  store i8 %152, ptr %143, align 4
  %157 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %156, ptr %157, align 1
  %158 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %7, ptr %158, align 2
  %159 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

160:                                              ; preds = %5
  %161 = load i8, ptr %1, align 4
  %162 = and i8 %161, 24
  %163 = icmp eq i8 %162, 16
  br i1 %163, label %167, label %164

164:                                              ; preds = %160
  %165 = trunc i8 %162 to i5
  switch i5 %165, label %166 [
    i5 8, label %167
    i5 0, label %167
    i5 -8, label %167
  ]

166:                                              ; preds = %164
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 9345, i32 noundef 9, ptr noundef null) #31
  br label %167

167:                                              ; preds = %166, %164, %164, %164, %160
  %168 = icmp eq i32 %0, 2
  br i1 %168, label %169, label %215

169:                                              ; preds = %167
  %170 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %171 = load i8, ptr %170, align 1
  %172 = and i8 %171, -16
  %173 = icmp eq i8 %172, -112
  %174 = and i8 %171, 15
  %175 = icmp eq i8 %174, 9
  %176 = or i1 %173, %175
  %177 = select i1 %176, i32 8, i32 9
  %178 = lshr i8 %171, 4
  %179 = zext i8 %178 to i32
  %180 = icmp eq i32 %177, %179
  %181 = zext i8 %174 to i32
  %182 = icmp eq i32 %177, %181
  %183 = select i1 %180, i1 true, i1 %182
  %184 = sext i1 %183 to i32
  %185 = add nsw i32 %177, %184
  %186 = trunc i32 %185 to i8
  %187 = shl nuw i8 %186, 4
  %188 = or i8 %187, %174
  store i8 123, ptr %2, align 4
  %189 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %188, ptr %189, align 1
  %190 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %190, align 2
  %191 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %191, align 4
  %192 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %193 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %194 = load i8, ptr %170, align 1
  %195 = shl i8 %194, 4
  %196 = or i8 %195, %186
  store i8 97, ptr %193, align 4
  %197 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %196, ptr %197, align 1
  %198 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %198, align 2
  %199 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %199, align 4
  %200 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %201 = select i1 %163, i8 115, i8 107
  %202 = load i8, ptr %170, align 1
  %203 = and i8 %202, -16
  %204 = or i8 %203, %186
  store i32 2, ptr %4, align 4
  store i8 %201, ptr %192, align 4
  %205 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %204, ptr %205, align 1
  %206 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 2, ptr %206, align 2
  %207 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %207, align 4
  %208 = getelementptr %struct.bpf_insn, ptr %2, i32 4
  %209 = load i8, ptr %170, align 1
  %210 = shl i8 %209, 4
  %211 = or i8 %210, %186
  store i8 121, ptr %200, align 4
  %212 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 1
  store i8 %211, ptr %212, align 1
  %213 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 2
  store i16 8, ptr %213, align 2
  %214 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 3
  br label %422

215:                                              ; preds = %167
  %216 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %217 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %218 = load i8, ptr %217, align 1
  store i8 97, ptr %2, align 4
  %219 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %218, ptr %219, align 1
  %220 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %220, align 2
  %221 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %221, align 4
  %222 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %223 = select i1 %163, i8 113, i8 105
  %224 = load i8, ptr %217, align 1
  %225 = and i8 %224, 15
  %226 = shl i8 %224, 4
  %227 = or i8 %225, %226
  store i32 2, ptr %4, align 4
  store i8 %223, ptr %216, align 4
  %228 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %227, ptr %228, align 1
  %229 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 2, ptr %229, align 2
  %230 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

231:                                              ; preds = %5
  %232 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %233 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %234 = load i8, ptr %233, align 1
  store i8 97, ptr %2, align 4
  %235 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %234, ptr %235, align 1
  %236 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %236, align 2
  %237 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %237, align 4
  %238 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %239 = load i8, ptr %233, align 1
  %240 = and i8 %239, 15
  %241 = shl i8 %239, 4
  %242 = or i8 %240, %241
  store i32 2, ptr %4, align 4
  store i8 105, ptr %232, align 4
  %243 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %242, ptr %243, align 1
  %244 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 16, ptr %244, align 2
  %245 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

246:                                              ; preds = %5
  %247 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %248 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %249 = load i8, ptr %248, align 1
  store i8 97, ptr %2, align 4
  %250 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %249, ptr %250, align 1
  %251 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %251, align 2
  %252 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %252, align 4
  %253 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %254 = load i8, ptr %248, align 1
  %255 = and i8 %254, 15
  %256 = shl i8 %254, 4
  %257 = or i8 %255, %256
  store i32 2, ptr %4, align 4
  store i8 105, ptr %247, align 4
  %258 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %257, ptr %258, align 1
  %259 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 378, ptr %259, align 2
  %260 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

261:                                              ; preds = %5
  %262 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %263 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %264 = load i8, ptr %263, align 1
  store i8 97, ptr %2, align 4
  %265 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %264, ptr %265, align 1
  %266 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %266, align 2
  %267 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %267, align 4
  %268 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %269 = load i8, ptr %263, align 1
  %270 = and i8 %269, 15
  %271 = shl i8 %269, 4
  %272 = or i8 %270, %271
  store i32 2, ptr %4, align 4
  store i8 105, ptr %262, align 4
  %273 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %272, ptr %273, align 1
  %274 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 380, ptr %274, align 2
  %275 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

276:                                              ; preds = %5
  %277 = icmp eq i32 %0, 2
  br i1 %277, label %278, label %326

278:                                              ; preds = %276
  %279 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %280 = load i8, ptr %279, align 1
  %281 = and i8 %280, -16
  %282 = icmp eq i8 %281, -112
  %283 = and i8 %280, 15
  %284 = icmp eq i8 %283, 9
  %285 = or i1 %282, %284
  %286 = select i1 %285, i32 8, i32 9
  %287 = lshr i8 %280, 4
  %288 = zext i8 %287 to i32
  %289 = icmp eq i32 %286, %288
  %290 = zext i8 %283 to i32
  %291 = icmp eq i32 %286, %290
  %292 = select i1 %289, i1 true, i1 %291
  %293 = sext i1 %292 to i32
  %294 = add nsw i32 %286, %293
  %295 = trunc i32 %294 to i8
  %296 = shl nuw i8 %295, 4
  %297 = or i8 %296, %283
  store i8 123, ptr %2, align 4
  %298 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %297, ptr %298, align 1
  %299 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %299, align 2
  %300 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %300, align 4
  %301 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %302 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %303 = load i8, ptr %279, align 1
  %304 = shl i8 %303, 4
  %305 = or i8 %304, %295
  store i8 97, ptr %301, align 4
  %306 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %305, ptr %306, align 1
  %307 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 16, ptr %307, align 2
  %308 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %308, align 4
  %309 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %310 = load i8, ptr %1, align 4
  %311 = and i8 %310, 24
  %312 = or i8 %311, 99
  %313 = load i8, ptr %279, align 1
  %314 = and i8 %313, -16
  %315 = or i8 %314, %295
  store i32 4, ptr %4, align 4
  store i8 %312, ptr %302, align 4
  %316 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %315, ptr %316, align 1
  %317 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 0, ptr %317, align 2
  %318 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %318, align 4
  %319 = getelementptr %struct.bpf_insn, ptr %2, i32 4
  %320 = load i8, ptr %279, align 1
  %321 = shl i8 %320, 4
  %322 = or i8 %321, %295
  store i8 121, ptr %309, align 4
  %323 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 1
  store i8 %322, ptr %323, align 1
  %324 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 2
  store i16 8, ptr %324, align 2
  %325 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 3
  br label %422

326:                                              ; preds = %276
  %327 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %328 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %329 = load i8, ptr %328, align 1
  store i8 97, ptr %2, align 4
  %330 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %329, ptr %330, align 1
  %331 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %331, align 2
  %332 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %332, align 4
  %333 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %334 = load i8, ptr %1, align 4
  %335 = and i8 %334, 24
  %336 = or i8 %335, 97
  %337 = load i8, ptr %328, align 1
  %338 = and i8 %337, 15
  %339 = shl i8 %337, 4
  %340 = or i8 %338, %339
  store i32 4, ptr %4, align 4
  store i8 %336, ptr %327, align 4
  %341 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %340, ptr %341, align 1
  %342 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %342, align 2
  %343 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

344:                                              ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %345 = add nsw i32 %8, -44
  %346 = icmp eq i32 %0, 2
  br i1 %346, label %347, label %396

347:                                              ; preds = %344
  %348 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %349 = load i8, ptr %348, align 1
  %350 = and i8 %349, -16
  %351 = icmp eq i8 %350, -112
  %352 = and i8 %349, 15
  %353 = icmp eq i8 %352, 9
  %354 = or i1 %351, %353
  %355 = select i1 %354, i32 8, i32 9
  %356 = lshr i8 %349, 4
  %357 = zext i8 %356 to i32
  %358 = icmp eq i32 %355, %357
  %359 = zext i8 %352 to i32
  %360 = icmp eq i32 %355, %359
  %361 = select i1 %358, i1 true, i1 %360
  %362 = sext i1 %361 to i32
  %363 = add nsw i32 %355, %362
  %364 = trunc i32 %363 to i8
  %365 = shl nuw i8 %364, 4
  %366 = or i8 %365, %352
  store i8 123, ptr %2, align 4
  %367 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %366, ptr %367, align 1
  %368 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %368, align 2
  %369 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %369, align 4
  %370 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %371 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %372 = load i8, ptr %348, align 1
  %373 = shl i8 %372, 4
  %374 = or i8 %373, %364
  store i8 97, ptr %370, align 4
  %375 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %374, ptr %375, align 1
  %376 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 16, ptr %376, align 2
  %377 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %377, align 4
  %378 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %379 = load i8, ptr %1, align 4
  %380 = and i8 %379, 24
  %381 = or i8 %380, 99
  %382 = load i8, ptr %348, align 1
  %383 = and i8 %382, -16
  %384 = or i8 %383, %364
  store i32 4, ptr %4, align 4
  %385 = trunc i32 %345 to i16
  store i8 %381, ptr %371, align 4
  %386 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %384, ptr %386, align 1
  %387 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 %385, ptr %387, align 2
  %388 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %388, align 4
  %389 = getelementptr %struct.bpf_insn, ptr %2, i32 4
  %390 = load i8, ptr %348, align 1
  %391 = shl i8 %390, 4
  %392 = or i8 %391, %364
  store i8 121, ptr %378, align 4
  %393 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 1
  store i8 %392, ptr %393, align 1
  %394 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 2
  store i16 8, ptr %394, align 2
  %395 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 3
  br label %422

396:                                              ; preds = %344
  %397 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %398 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %399 = load i8, ptr %398, align 1
  store i8 97, ptr %2, align 4
  %400 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %399, ptr %400, align 1
  %401 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %401, align 2
  %402 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %402, align 4
  %403 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %404 = load i8, ptr %1, align 4
  %405 = and i8 %404, 24
  %406 = or i8 %405, 97
  %407 = load i8, ptr %398, align 1
  %408 = and i8 %407, 15
  %409 = shl i8 %407, 4
  %410 = or i8 %408, %409
  store i32 4, ptr %4, align 4
  %411 = trunc i32 %345 to i16
  store i8 %406, ptr %397, align 4
  %412 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %410, ptr %412, align 1
  %413 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %411, ptr %413, align 2
  %414 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %422

415:                                              ; preds = %5
  %416 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %417 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %418 = load i8, ptr %417, align 1
  store i8 97, ptr %2, align 4
  %419 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %418, ptr %419, align 1
  %420 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %420, align 2
  %421 = getelementptr inbounds i8, ptr %2, i32 4
  br label %422

422:                                              ; preds = %415, %396, %347, %326, %278, %261, %246, %231, %215, %169, %142, %94, %74, %26, %9
  %423 = phi ptr [ %395, %347 ], [ %414, %396 ], [ %325, %278 ], [ %343, %326 ], [ %214, %169 ], [ %230, %215 ], [ %141, %94 ], [ %159, %142 ], [ %73, %26 ], [ %91, %74 ], [ %421, %415 ], [ %275, %261 ], [ %260, %246 ], [ %245, %231 ], [ %23, %9 ]
  %424 = phi ptr [ %389, %347 ], [ %403, %396 ], [ %319, %278 ], [ %333, %326 ], [ %208, %169 ], [ %222, %215 ], [ %135, %94 ], [ %149, %142 ], [ %67, %26 ], [ %81, %74 ], [ %416, %415 ], [ %268, %261 ], [ %253, %246 ], [ %238, %231 ], [ %16, %9 ]
  store i32 0, ptr %423, align 4
  br label %425

425:                                              ; preds = %422, %5
  %426 = phi ptr [ %2, %5 ], [ %424, %422 ]
  %427 = ptrtoint ptr %426 to i32
  %428 = ptrtoint ptr %2 to i32
  %429 = sub i32 %427, %428
  %430 = ashr exact i32 %429, 3
  ret i32 %430
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @sock_ops_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %17 [
    i32 49, label %19
    i32 57, label %3
    i32 59, label %4
    i32 53, label %5
    i32 70, label %6
    i32 46, label %7
    i32 81, label %8
    i32 25, label %9
    i32 107, label %10
    i32 108, label %11
    i32 122, label %12
    i32 142, label %13
    i32 143, label %14
    i32 144, label %15
    i32 96, label %16
  ]

3:                                                ; preds = %2
  br label %19

4:                                                ; preds = %2
  br label %19

5:                                                ; preds = %2
  br label %19

6:                                                ; preds = %2
  br label %19

7:                                                ; preds = %2
  br label %19

8:                                                ; preds = %2
  br label %19

9:                                                ; preds = %2
  br label %19

10:                                               ; preds = %2
  br label %19

11:                                               ; preds = %2
  br label %19

12:                                               ; preds = %2
  br label %19

13:                                               ; preds = %2
  br label %19

14:                                               ; preds = %2
  br label %19

15:                                               ; preds = %2
  br label %19

16:                                               ; preds = %2
  br label %19

17:                                               ; preds = %2
  %18 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %19

19:                                               ; preds = %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %20 = phi ptr [ %18, %17 ], [ @bpf_tcp_sock_proto, %16 ], [ @bpf_sock_ops_reserve_hdr_opt_proto, %15 ], [ @bpf_sock_ops_store_hdr_opt_proto, %14 ], [ @bpf_sock_ops_load_hdr_opt_proto, %13 ], [ @bpf_get_netns_cookie_sock_ops_proto, %12 ], [ @bpf_sk_storage_delete_proto, %11 ], [ @bpf_sk_storage_get_proto, %10 ], [ @bpf_event_output_data_proto, %9 ], [ @bpf_get_local_storage_proto, %8 ], [ @bpf_get_socket_cookie_sock_ops_proto, %7 ], [ @bpf_sock_hash_update_proto, %6 ], [ @bpf_sock_map_update_proto, %5 ], [ @bpf_sock_ops_cb_flags_set_proto, %4 ], [ @bpf_sock_ops_getsockopt_proto, %3 ], [ @bpf_sock_ops_setsockopt_proto, %2 ]
  ret ptr %20
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @sock_ops_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #17 {
  %6 = icmp ugt i32 %0, 215
  br i1 %6, label %35, label %7

7:                                                ; preds = %5
  %8 = srem i32 %0, %1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %7
  %11 = icmp eq i32 %2, 2
  br i1 %11, label %12, label %15

12:                                               ; preds = %10
  switch i32 %0, label %35 [
    i32 4, label %13
    i32 164, label %13
  ]

13:                                               ; preds = %12, %12
  %14 = icmp eq i32 %1, 4
  br i1 %14, label %34, label %35

15:                                               ; preds = %10
  switch i32 %0, label %30 [
    i32 168, label %16
    i32 169, label %16
    i32 170, label %16
    i32 171, label %16
    i32 172, label %16
    i32 173, label %16
    i32 174, label %16
    i32 175, label %16
    i32 176, label %16
    i32 177, label %16
    i32 178, label %16
    i32 179, label %16
    i32 180, label %16
    i32 181, label %16
    i32 182, label %16
    i32 183, label %16
    i32 184, label %18
    i32 192, label %20
    i32 200, label %22
    i32 212, label %24
  ]

16:                                               ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15
  %17 = icmp eq i32 %1, 8
  br i1 %17, label %34, label %35

18:                                               ; preds = %15
  %19 = icmp eq i32 %1, 8
  br i1 %19, label %32, label %35

20:                                               ; preds = %15
  %21 = icmp eq i32 %1, 8
  br i1 %21, label %32, label %35

22:                                               ; preds = %15
  %23 = icmp eq i32 %1, 8
  br i1 %23, label %32, label %35

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.bpf_insn_access_aux, ptr %4, i32 0, i32 1
  store i32 4, ptr %25, align 4
  %26 = icmp ult i32 %1, 5
  br i1 %26, label %27, label %35

27:                                               ; preds = %24
  %28 = tail call i32 @llvm.ctpop.i32(i32 %1) #31, !range !37
  %29 = icmp ult i32 %28, 2
  br label %35

30:                                               ; preds = %15
  %31 = icmp eq i32 %1, 4
  br i1 %31, label %34, label %35

32:                                               ; preds = %22, %20, %18
  %33 = phi i32 [ 267, %18 ], [ 8, %20 ], [ 9, %22 ]
  store i32 %33, ptr %4, align 4
  br label %34

34:                                               ; preds = %32, %30, %16, %13
  br label %35

35:                                               ; preds = %34, %30, %27, %24, %22, %20, %18, %16, %13, %12, %7, %5
  %36 = phi i1 [ true, %34 ], [ false, %5 ], [ false, %7 ], [ false, %13 ], [ false, %12 ], [ false, %16 ], [ false, %18 ], [ false, %20 ], [ false, %22 ], [ false, %30 ], [ false, %24 ], [ %29, %27 ]
  ret i1 %36
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @sock_ops_convert_ctx_access(i32 noundef %0, ptr noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #7 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %2386 [
    i32 0, label %9
    i32 4, label %16
    i32 5, label %16
    i32 6, label %16
    i32 7, label %16
    i32 8, label %16
    i32 9, label %16
    i32 10, label %16
    i32 11, label %16
    i32 12, label %16
    i32 13, label %16
    i32 14, label %16
    i32 15, label %16
    i32 16, label %16
    i32 20, label %29
    i32 24, label %44
    i32 28, label %59
    i32 32, label %74
    i32 33, label %74
    i32 34, label %74
    i32 35, label %74
    i32 36, label %74
    i32 37, label %74
    i32 38, label %74
    i32 39, label %74
    i32 40, label %74
    i32 41, label %74
    i32 42, label %74
    i32 43, label %74
    i32 44, label %74
    i32 48, label %90
    i32 49, label %90
    i32 50, label %90
    i32 51, label %90
    i32 52, label %90
    i32 53, label %90
    i32 54, label %90
    i32 55, label %90
    i32 56, label %90
    i32 57, label %90
    i32 58, label %90
    i32 59, label %90
    i32 60, label %90
    i32 64, label %106
    i32 68, label %127
    i32 72, label %142
    i32 88, label %149
    i32 92, label %164
    i32 84, label %179
    i32 164, label %266
    i32 76, label %410
    i32 80, label %497
    i32 96, label %584
    i32 100, label %671
    i32 104, label %758
    i32 108, label %845
    i32 112, label %932
    i32 116, label %1019
    i32 120, label %1106
    i32 124, label %1193
    i32 128, label %1280
    i32 132, label %1367
    i32 136, label %1454
    i32 140, label %1541
    i32 144, label %1628
    i32 148, label %1715
    i32 152, label %1802
    i32 156, label %1889
    i32 160, label %1976
    i32 168, label %2063
    i32 176, label %2150
    i32 184, label %2237
    i32 200, label %2316
    i32 192, label %2323
    i32 208, label %2344
    i32 212, label %2365
  ]

9:                                                ; preds = %5
  %10 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %11 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  store i8 113, ptr %2, align 4
  %13 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %12, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 32, ptr %14, align 2
  %15 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %15, align 4
  br label %2386

16:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %17 = icmp eq i32 %0, 2
  %18 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %19 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %20 = load i8, ptr %19, align 1
  br i1 %17, label %21, label %25

21:                                               ; preds = %16
  store i8 99, ptr %2, align 4
  %22 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %20, ptr %22, align 1
  %23 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %7, ptr %23, align 2
  %24 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %24, align 4
  br label %2386

25:                                               ; preds = %16
  store i8 97, ptr %2, align 4
  %26 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %20, ptr %26, align 1
  %27 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %7, ptr %27, align 2
  %28 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %28, align 4
  br label %2386

29:                                               ; preds = %5
  %30 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %31 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %32 = load i8, ptr %31, align 1
  store i8 97, ptr %2, align 4
  %33 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %32, ptr %33, align 1
  %34 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %34, align 2
  %35 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %35, align 4
  %36 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %37 = load i8, ptr %31, align 1
  %38 = and i8 %37, 15
  %39 = shl i8 %37, 4
  %40 = or i8 %38, %39
  store i8 105, ptr %30, align 4
  %41 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %40, ptr %41, align 1
  %42 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 16, ptr %42, align 2
  %43 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %43, align 4
  br label %2386

44:                                               ; preds = %5
  %45 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %46 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %47 = load i8, ptr %46, align 1
  store i8 97, ptr %2, align 4
  %48 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %47, ptr %48, align 1
  %49 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %49, align 2
  %50 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %50, align 4
  %51 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %52 = load i8, ptr %46, align 1
  %53 = and i8 %52, 15
  %54 = shl i8 %52, 4
  %55 = or i8 %53, %54
  store i8 97, ptr %45, align 4
  %56 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %55, ptr %56, align 1
  %57 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %57, align 2
  %58 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %58, align 4
  br label %2386

59:                                               ; preds = %5
  %60 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %61 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %62 = load i8, ptr %61, align 1
  store i8 97, ptr %2, align 4
  %63 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %62, ptr %63, align 1
  %64 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %64, align 2
  %65 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %65, align 4
  %66 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %67 = load i8, ptr %61, align 1
  %68 = and i8 %67, 15
  %69 = shl i8 %67, 4
  %70 = or i8 %68, %69
  store i8 97, ptr %60, align 4
  %71 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %70, ptr %71, align 1
  %72 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %72, align 2
  %73 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %73, align 4
  br label %2386

74:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %75 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %76 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %77 = load i8, ptr %76, align 1
  store i8 97, ptr %2, align 4
  %78 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %77, ptr %78, align 1
  %79 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %79, align 2
  %80 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %80, align 4
  %81 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %82 = load i8, ptr %76, align 1
  %83 = and i8 %82, 15
  %84 = shl i8 %82, 4
  %85 = or i8 %83, %84
  %86 = add i16 %7, 4
  store i8 97, ptr %75, align 4
  %87 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %85, ptr %87, align 1
  %88 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %86, ptr %88, align 2
  %89 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %89, align 4
  br label %2386

90:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %91 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %92 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %93 = load i8, ptr %92, align 1
  store i8 97, ptr %2, align 4
  %94 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %93, ptr %94, align 1
  %95 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %95, align 2
  %96 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %96, align 4
  %97 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %98 = load i8, ptr %92, align 1
  %99 = and i8 %98, 15
  %100 = shl i8 %98, 4
  %101 = or i8 %99, %100
  %102 = add i16 %7, 4
  store i8 97, ptr %91, align 4
  %103 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %101, ptr %103, align 1
  %104 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %102, ptr %104, align 2
  %105 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %105, align 4
  br label %2386

106:                                              ; preds = %5
  %107 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %108 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %109 = load i8, ptr %108, align 1
  store i8 97, ptr %2, align 4
  %110 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %109, ptr %110, align 1
  %111 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %111, align 2
  %112 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %112, align 4
  %113 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %114 = load i8, ptr %108, align 1
  %115 = and i8 %114, 15
  %116 = shl i8 %114, 4
  %117 = or i8 %115, %116
  store i8 105, ptr %107, align 4
  %118 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %117, ptr %118, align 1
  %119 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 12, ptr %119, align 2
  %120 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %120, align 4
  %121 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %122 = load i8, ptr %108, align 1
  %123 = and i8 %122, 15
  store i8 100, ptr %113, align 4
  %124 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %123, ptr %124, align 1
  %125 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 0, ptr %125, align 2
  %126 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 16, ptr %126, align 4
  br label %2386

127:                                              ; preds = %5
  %128 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %129 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %130 = load i8, ptr %129, align 1
  store i8 97, ptr %2, align 4
  %131 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %130, ptr %131, align 1
  %132 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %132, align 2
  %133 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %133, align 4
  %134 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %135 = load i8, ptr %129, align 1
  %136 = and i8 %135, 15
  %137 = shl i8 %135, 4
  %138 = or i8 %136, %137
  store i8 105, ptr %128, align 4
  %139 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %138, ptr %139, align 1
  %140 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 14, ptr %140, align 2
  %141 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %141, align 4
  br label %2386

142:                                              ; preds = %5
  %143 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %144 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %145 = load i8, ptr %144, align 1
  store i8 113, ptr %2, align 4
  %146 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %145, ptr %146, align 1
  %147 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 33, ptr %147, align 2
  %148 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %148, align 4
  br label %2386

149:                                              ; preds = %5
  %150 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %151 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %152 = load i8, ptr %151, align 1
  store i8 97, ptr %2, align 4
  %153 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %152, ptr %153, align 1
  %154 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %154, align 2
  %155 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %155, align 4
  %156 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %157 = load i8, ptr %151, align 1
  %158 = and i8 %157, 15
  %159 = shl i8 %157, 4
  %160 = or i8 %158, %159
  store i8 113, ptr %150, align 4
  %161 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %160, ptr %161, align 1
  %162 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 18, ptr %162, align 2
  %163 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %163, align 4
  br label %2386

164:                                              ; preds = %5
  %165 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %166 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %167 = load i8, ptr %166, align 1
  store i8 97, ptr %2, align 4
  %168 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %167, ptr %168, align 1
  %169 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %169, align 2
  %170 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %170, align 4
  %171 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %172 = load i8, ptr %166, align 1
  %173 = and i8 %172, 15
  %174 = shl i8 %172, 4
  %175 = or i8 %173, %174
  store i8 97, ptr %165, align 4
  %176 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %175, ptr %176, align 1
  %177 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1248, ptr %177, align 2
  %178 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %178, align 4
  br label %2386

179:                                              ; preds = %5
  %180 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %181 = load i8, ptr %180, align 1
  %182 = and i8 %181, 15
  %183 = zext i8 %182 to i32
  %184 = icmp eq i8 %182, 9
  %185 = and i8 %181, -16
  %186 = icmp eq i8 %185, -112
  %187 = or i1 %184, %186
  %188 = select i1 %187, i32 8, i32 9
  %189 = icmp eq i32 %188, %183
  %190 = lshr i8 %181, 4
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %188, %191
  %193 = select i1 %189, i1 true, i1 %192
  %194 = sext i1 %193 to i32
  %195 = add nsw i32 %188, %194
  %196 = icmp eq i8 %182, %190
  br i1 %196, label %197, label %207

197:                                              ; preds = %179
  %198 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %199 = trunc i32 %195 to i8
  %200 = shl nuw i8 %199, 4
  %201 = or i8 %200, %182
  store i8 123, ptr %2, align 4
  %202 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %201, ptr %202, align 1
  %203 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %203, align 2
  %204 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %204, align 4
  %205 = load i8, ptr %180, align 1
  %206 = and i8 %205, -16
  br label %207

207:                                              ; preds = %197, %179
  %208 = phi i8 [ %199, %197 ], [ %182, %179 ]
  %209 = phi i8 [ %206, %197 ], [ %185, %179 ]
  %210 = phi i16 [ 4, %197 ], [ 2, %179 ]
  %211 = phi ptr [ %198, %197 ], [ %2, %179 ]
  %212 = getelementptr %struct.bpf_insn, ptr %211, i32 1
  %213 = or i8 %209, %208
  store i8 113, ptr %211, align 4
  %214 = getelementptr inbounds i8, ptr %211, i32 1
  store i8 %213, ptr %214, align 1
  %215 = getelementptr inbounds i8, ptr %211, i32 2
  store i16 33, ptr %215, align 2
  %216 = getelementptr inbounds i8, ptr %211, i32 4
  store i32 0, ptr %216, align 4
  %217 = getelementptr %struct.bpf_insn, ptr %211, i32 2
  store i8 21, ptr %212, align 4
  %218 = getelementptr %struct.bpf_insn, ptr %211, i32 1, i32 1
  store i8 %208, ptr %218, align 1
  %219 = getelementptr %struct.bpf_insn, ptr %211, i32 1, i32 2
  store i16 %210, ptr %219, align 2
  %220 = getelementptr %struct.bpf_insn, ptr %211, i32 1, i32 3
  store i32 0, ptr %220, align 4
  %221 = load i8, ptr %180, align 1
  %222 = and i8 %221, 15
  %223 = lshr i8 %221, 4
  %224 = icmp eq i8 %222, %223
  br i1 %224, label %225, label %234

225:                                              ; preds = %207
  %226 = getelementptr %struct.bpf_insn, ptr %211, i32 3
  %227 = trunc i32 %195 to i8
  %228 = and i8 %221, -16
  %229 = or i8 %228, %227
  store i8 121, ptr %217, align 4
  %230 = getelementptr %struct.bpf_insn, ptr %211, i32 2, i32 1
  store i8 %229, ptr %230, align 1
  %231 = getelementptr %struct.bpf_insn, ptr %211, i32 2, i32 2
  store i16 40, ptr %231, align 2
  %232 = getelementptr %struct.bpf_insn, ptr %211, i32 2, i32 3
  store i32 0, ptr %232, align 4
  %233 = load i8, ptr %180, align 1
  br label %234

234:                                              ; preds = %225, %207
  %235 = phi i8 [ %233, %225 ], [ %221, %207 ]
  %236 = phi ptr [ %226, %225 ], [ %217, %207 ]
  %237 = getelementptr %struct.bpf_insn, ptr %236, i32 1
  store i8 97, ptr %236, align 4
  %238 = getelementptr inbounds i8, ptr %236, i32 1
  store i8 %235, ptr %238, align 1
  %239 = getelementptr inbounds i8, ptr %236, i32 2
  store i16 0, ptr %239, align 2
  %240 = getelementptr inbounds i8, ptr %236, i32 4
  store i32 0, ptr %240, align 4
  %241 = getelementptr %struct.bpf_insn, ptr %236, i32 2
  %242 = load i8, ptr %180, align 1
  %243 = and i8 %242, 15
  %244 = shl i8 %242, 4
  %245 = or i8 %243, %244
  store i8 113, ptr %237, align 4
  %246 = getelementptr %struct.bpf_insn, ptr %236, i32 1, i32 1
  store i8 %245, ptr %246, align 1
  %247 = getelementptr %struct.bpf_insn, ptr %236, i32 1, i32 2
  store i16 1668, ptr %247, align 2
  %248 = getelementptr %struct.bpf_insn, ptr %236, i32 1, i32 3
  store i32 0, ptr %248, align 4
  %249 = load i8, ptr %180, align 1
  %250 = and i8 %249, 15
  %251 = lshr i8 %249, 4
  %252 = icmp eq i8 %250, %251
  br i1 %252, label %253, label %2386

253:                                              ; preds = %234
  %254 = getelementptr %struct.bpf_insn, ptr %236, i32 3
  store i8 5, ptr %241, align 4
  %255 = getelementptr %struct.bpf_insn, ptr %236, i32 2, i32 1
  store i8 0, ptr %255, align 1
  %256 = getelementptr %struct.bpf_insn, ptr %236, i32 2, i32 2
  store i16 1, ptr %256, align 2
  %257 = getelementptr %struct.bpf_insn, ptr %236, i32 2, i32 3
  store i32 0, ptr %257, align 4
  %258 = getelementptr %struct.bpf_insn, ptr %236, i32 4
  %259 = trunc i32 %195 to i8
  %260 = load i8, ptr %180, align 1
  %261 = and i8 %260, -16
  %262 = or i8 %261, %259
  store i8 121, ptr %254, align 4
  %263 = getelementptr %struct.bpf_insn, ptr %236, i32 3, i32 1
  store i8 %262, ptr %263, align 1
  %264 = getelementptr %struct.bpf_insn, ptr %236, i32 3, i32 2
  store i16 40, ptr %264, align 2
  %265 = getelementptr %struct.bpf_insn, ptr %236, i32 3, i32 3
  store i32 0, ptr %265, align 4
  br label %2386

266:                                              ; preds = %5
  %267 = icmp eq i32 %0, 2
  %268 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %269 = load i8, ptr %268, align 1
  %270 = and i8 %269, 15
  br i1 %267, label %271, label %326

271:                                              ; preds = %266
  %272 = icmp eq i8 %270, 9
  %273 = and i8 %269, -16
  %274 = icmp eq i8 %273, -112
  %275 = or i1 %272, %274
  %276 = select i1 %275, i32 8, i32 9
  %277 = zext i8 %270 to i32
  %278 = icmp eq i32 %276, %277
  br i1 %278, label %283, label %279

279:                                              ; preds = %271
  %280 = lshr i8 %269, 4
  %281 = zext i8 %280 to i32
  %282 = icmp eq i32 %276, %281
  br i1 %282, label %283, label %285

283:                                              ; preds = %279, %271
  %284 = add nsw i32 %276, -1
  br label %285

285:                                              ; preds = %283, %279
  %286 = phi i32 [ %284, %283 ], [ %276, %279 ]
  %287 = trunc i32 %286 to i8
  %288 = shl nuw i8 %287, 4
  %289 = or i8 %288, %270
  store i8 123, ptr %2, align 4
  %290 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %289, ptr %290, align 1
  %291 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %291, align 2
  %292 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %292, align 4
  %293 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %294 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %295 = load i8, ptr %268, align 1
  %296 = shl i8 %295, 4
  %297 = or i8 %296, %287
  store i8 113, ptr %293, align 4
  %298 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %297, ptr %298, align 1
  %299 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 33, ptr %299, align 2
  %300 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %300, align 4
  store i8 21, ptr %294, align 4
  %301 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %287, ptr %301, align 1
  %302 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 2, ptr %302, align 2
  %303 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %303, align 4
  %304 = getelementptr %struct.bpf_insn, ptr %2, i32 4
  %305 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %306 = load i8, ptr %268, align 1
  %307 = shl i8 %306, 4
  %308 = or i8 %307, %287
  store i8 97, ptr %305, align 4
  %309 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 1
  store i8 %308, ptr %309, align 1
  %310 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 2
  store i16 0, ptr %310, align 2
  %311 = getelementptr %struct.bpf_insn, ptr %2, i32 3, i32 3
  store i32 0, ptr %311, align 4
  %312 = getelementptr %struct.bpf_insn, ptr %2, i32 5
  %313 = load i8, ptr %268, align 1
  %314 = and i8 %313, -16
  %315 = or i8 %314, %287
  store i8 99, ptr %304, align 4
  %316 = getelementptr %struct.bpf_insn, ptr %2, i32 4, i32 1
  store i8 %315, ptr %316, align 1
  %317 = getelementptr %struct.bpf_insn, ptr %2, i32 4, i32 2
  store i16 372, ptr %317, align 2
  %318 = getelementptr %struct.bpf_insn, ptr %2, i32 4, i32 3
  store i32 0, ptr %318, align 4
  %319 = getelementptr %struct.bpf_insn, ptr %2, i32 6
  %320 = load i8, ptr %268, align 1
  %321 = shl i8 %320, 4
  %322 = or i8 %321, %287
  store i8 121, ptr %312, align 4
  %323 = getelementptr %struct.bpf_insn, ptr %2, i32 5, i32 1
  store i8 %322, ptr %323, align 1
  %324 = getelementptr %struct.bpf_insn, ptr %2, i32 5, i32 2
  store i16 40, ptr %324, align 2
  %325 = getelementptr %struct.bpf_insn, ptr %2, i32 5, i32 3
  store i32 0, ptr %325, align 4
  br label %2386

326:                                              ; preds = %266
  %327 = zext i8 %270 to i32
  %328 = icmp eq i8 %270, 9
  %329 = and i8 %269, -16
  %330 = icmp eq i8 %329, -112
  %331 = or i1 %328, %330
  %332 = select i1 %331, i32 8, i32 9
  %333 = icmp eq i32 %332, %327
  %334 = lshr i8 %269, 4
  %335 = zext i8 %334 to i32
  %336 = icmp eq i32 %332, %335
  %337 = select i1 %333, i1 true, i1 %336
  %338 = sext i1 %337 to i32
  %339 = add nsw i32 %332, %338
  %340 = icmp eq i8 %270, %334
  br i1 %340, label %341, label %351

341:                                              ; preds = %326
  %342 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %343 = trunc i32 %339 to i8
  %344 = shl nuw i8 %343, 4
  %345 = or i8 %344, %270
  store i8 123, ptr %2, align 4
  %346 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %345, ptr %346, align 1
  %347 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %347, align 2
  %348 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %348, align 4
  %349 = load i8, ptr %268, align 1
  %350 = and i8 %349, -16
  br label %351

351:                                              ; preds = %341, %326
  %352 = phi i8 [ %343, %341 ], [ %270, %326 ]
  %353 = phi i8 [ %350, %341 ], [ %329, %326 ]
  %354 = phi i16 [ 4, %341 ], [ 2, %326 ]
  %355 = phi ptr [ %342, %341 ], [ %2, %326 ]
  %356 = getelementptr %struct.bpf_insn, ptr %355, i32 1
  %357 = or i8 %353, %352
  store i8 113, ptr %355, align 4
  %358 = getelementptr inbounds i8, ptr %355, i32 1
  store i8 %357, ptr %358, align 1
  %359 = getelementptr inbounds i8, ptr %355, i32 2
  store i16 33, ptr %359, align 2
  %360 = getelementptr inbounds i8, ptr %355, i32 4
  store i32 0, ptr %360, align 4
  %361 = getelementptr %struct.bpf_insn, ptr %355, i32 2
  store i8 21, ptr %356, align 4
  %362 = getelementptr %struct.bpf_insn, ptr %355, i32 1, i32 1
  store i8 %352, ptr %362, align 1
  %363 = getelementptr %struct.bpf_insn, ptr %355, i32 1, i32 2
  store i16 %354, ptr %363, align 2
  %364 = getelementptr %struct.bpf_insn, ptr %355, i32 1, i32 3
  store i32 0, ptr %364, align 4
  %365 = load i8, ptr %268, align 1
  %366 = and i8 %365, 15
  %367 = lshr i8 %365, 4
  %368 = icmp eq i8 %366, %367
  br i1 %368, label %369, label %378

369:                                              ; preds = %351
  %370 = getelementptr %struct.bpf_insn, ptr %355, i32 3
  %371 = trunc i32 %339 to i8
  %372 = and i8 %365, -16
  %373 = or i8 %372, %371
  store i8 121, ptr %361, align 4
  %374 = getelementptr %struct.bpf_insn, ptr %355, i32 2, i32 1
  store i8 %373, ptr %374, align 1
  %375 = getelementptr %struct.bpf_insn, ptr %355, i32 2, i32 2
  store i16 40, ptr %375, align 2
  %376 = getelementptr %struct.bpf_insn, ptr %355, i32 2, i32 3
  store i32 0, ptr %376, align 4
  %377 = load i8, ptr %268, align 1
  br label %378

378:                                              ; preds = %369, %351
  %379 = phi i8 [ %377, %369 ], [ %365, %351 ]
  %380 = phi ptr [ %370, %369 ], [ %361, %351 ]
  %381 = getelementptr %struct.bpf_insn, ptr %380, i32 1
  store i8 97, ptr %380, align 4
  %382 = getelementptr inbounds i8, ptr %380, i32 1
  store i8 %379, ptr %382, align 1
  %383 = getelementptr inbounds i8, ptr %380, i32 2
  store i16 0, ptr %383, align 2
  %384 = getelementptr inbounds i8, ptr %380, i32 4
  store i32 0, ptr %384, align 4
  %385 = getelementptr %struct.bpf_insn, ptr %380, i32 2
  %386 = load i8, ptr %268, align 1
  %387 = and i8 %386, 15
  %388 = shl i8 %386, 4
  %389 = or i8 %387, %388
  store i8 97, ptr %381, align 4
  %390 = getelementptr %struct.bpf_insn, ptr %380, i32 1, i32 1
  store i8 %389, ptr %390, align 1
  %391 = getelementptr %struct.bpf_insn, ptr %380, i32 1, i32 2
  store i16 372, ptr %391, align 2
  %392 = getelementptr %struct.bpf_insn, ptr %380, i32 1, i32 3
  store i32 0, ptr %392, align 4
  %393 = load i8, ptr %268, align 1
  %394 = and i8 %393, 15
  %395 = lshr i8 %393, 4
  %396 = icmp eq i8 %394, %395
  br i1 %396, label %397, label %2386

397:                                              ; preds = %378
  %398 = getelementptr %struct.bpf_insn, ptr %380, i32 3
  store i8 5, ptr %385, align 4
  %399 = getelementptr %struct.bpf_insn, ptr %380, i32 2, i32 1
  store i8 0, ptr %399, align 1
  %400 = getelementptr %struct.bpf_insn, ptr %380, i32 2, i32 2
  store i16 1, ptr %400, align 2
  %401 = getelementptr %struct.bpf_insn, ptr %380, i32 2, i32 3
  store i32 0, ptr %401, align 4
  %402 = getelementptr %struct.bpf_insn, ptr %380, i32 4
  %403 = trunc i32 %339 to i8
  %404 = load i8, ptr %268, align 1
  %405 = and i8 %404, -16
  %406 = or i8 %405, %403
  store i8 121, ptr %398, align 4
  %407 = getelementptr %struct.bpf_insn, ptr %380, i32 3, i32 1
  store i8 %406, ptr %407, align 1
  %408 = getelementptr %struct.bpf_insn, ptr %380, i32 3, i32 2
  store i16 40, ptr %408, align 2
  %409 = getelementptr %struct.bpf_insn, ptr %380, i32 3, i32 3
  store i32 0, ptr %409, align 4
  br label %2386

410:                                              ; preds = %5
  %411 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %412 = load i8, ptr %411, align 1
  %413 = and i8 %412, 15
  %414 = zext i8 %413 to i32
  %415 = icmp eq i8 %413, 9
  %416 = and i8 %412, -16
  %417 = icmp eq i8 %416, -112
  %418 = or i1 %415, %417
  %419 = select i1 %418, i32 8, i32 9
  %420 = icmp eq i32 %419, %414
  %421 = lshr i8 %412, 4
  %422 = zext i8 %421 to i32
  %423 = icmp eq i32 %419, %422
  %424 = select i1 %420, i1 true, i1 %423
  %425 = sext i1 %424 to i32
  %426 = add nsw i32 %419, %425
  %427 = icmp eq i8 %413, %421
  br i1 %427, label %428, label %438

428:                                              ; preds = %410
  %429 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %430 = trunc i32 %426 to i8
  %431 = shl nuw i8 %430, 4
  %432 = or i8 %431, %413
  store i8 123, ptr %2, align 4
  %433 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %432, ptr %433, align 1
  %434 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %434, align 2
  %435 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %435, align 4
  %436 = load i8, ptr %411, align 1
  %437 = and i8 %436, -16
  br label %438

438:                                              ; preds = %428, %410
  %439 = phi i8 [ %430, %428 ], [ %413, %410 ]
  %440 = phi i8 [ %437, %428 ], [ %416, %410 ]
  %441 = phi i16 [ 4, %428 ], [ 2, %410 ]
  %442 = phi ptr [ %429, %428 ], [ %2, %410 ]
  %443 = getelementptr %struct.bpf_insn, ptr %442, i32 1
  %444 = or i8 %440, %439
  store i8 113, ptr %442, align 4
  %445 = getelementptr inbounds i8, ptr %442, i32 1
  store i8 %444, ptr %445, align 1
  %446 = getelementptr inbounds i8, ptr %442, i32 2
  store i16 33, ptr %446, align 2
  %447 = getelementptr inbounds i8, ptr %442, i32 4
  store i32 0, ptr %447, align 4
  %448 = getelementptr %struct.bpf_insn, ptr %442, i32 2
  store i8 21, ptr %443, align 4
  %449 = getelementptr %struct.bpf_insn, ptr %442, i32 1, i32 1
  store i8 %439, ptr %449, align 1
  %450 = getelementptr %struct.bpf_insn, ptr %442, i32 1, i32 2
  store i16 %441, ptr %450, align 2
  %451 = getelementptr %struct.bpf_insn, ptr %442, i32 1, i32 3
  store i32 0, ptr %451, align 4
  %452 = load i8, ptr %411, align 1
  %453 = and i8 %452, 15
  %454 = lshr i8 %452, 4
  %455 = icmp eq i8 %453, %454
  br i1 %455, label %456, label %465

456:                                              ; preds = %438
  %457 = getelementptr %struct.bpf_insn, ptr %442, i32 3
  %458 = trunc i32 %426 to i8
  %459 = and i8 %452, -16
  %460 = or i8 %459, %458
  store i8 121, ptr %448, align 4
  %461 = getelementptr %struct.bpf_insn, ptr %442, i32 2, i32 1
  store i8 %460, ptr %461, align 1
  %462 = getelementptr %struct.bpf_insn, ptr %442, i32 2, i32 2
  store i16 40, ptr %462, align 2
  %463 = getelementptr %struct.bpf_insn, ptr %442, i32 2, i32 3
  store i32 0, ptr %463, align 4
  %464 = load i8, ptr %411, align 1
  br label %465

465:                                              ; preds = %456, %438
  %466 = phi i8 [ %464, %456 ], [ %452, %438 ]
  %467 = phi ptr [ %457, %456 ], [ %448, %438 ]
  %468 = getelementptr %struct.bpf_insn, ptr %467, i32 1
  store i8 97, ptr %467, align 4
  %469 = getelementptr inbounds i8, ptr %467, i32 1
  store i8 %466, ptr %469, align 1
  %470 = getelementptr inbounds i8, ptr %467, i32 2
  store i16 0, ptr %470, align 2
  %471 = getelementptr inbounds i8, ptr %467, i32 4
  store i32 0, ptr %471, align 4
  %472 = getelementptr %struct.bpf_insn, ptr %467, i32 2
  %473 = load i8, ptr %411, align 1
  %474 = and i8 %473, 15
  %475 = shl i8 %473, 4
  %476 = or i8 %474, %475
  store i8 97, ptr %468, align 4
  %477 = getelementptr %struct.bpf_insn, ptr %467, i32 1, i32 1
  store i8 %476, ptr %477, align 1
  %478 = getelementptr %struct.bpf_insn, ptr %467, i32 1, i32 2
  store i16 1328, ptr %478, align 2
  %479 = getelementptr %struct.bpf_insn, ptr %467, i32 1, i32 3
  store i32 0, ptr %479, align 4
  %480 = load i8, ptr %411, align 1
  %481 = and i8 %480, 15
  %482 = lshr i8 %480, 4
  %483 = icmp eq i8 %481, %482
  br i1 %483, label %484, label %2386

484:                                              ; preds = %465
  %485 = getelementptr %struct.bpf_insn, ptr %467, i32 3
  store i8 5, ptr %472, align 4
  %486 = getelementptr %struct.bpf_insn, ptr %467, i32 2, i32 1
  store i8 0, ptr %486, align 1
  %487 = getelementptr %struct.bpf_insn, ptr %467, i32 2, i32 2
  store i16 1, ptr %487, align 2
  %488 = getelementptr %struct.bpf_insn, ptr %467, i32 2, i32 3
  store i32 0, ptr %488, align 4
  %489 = getelementptr %struct.bpf_insn, ptr %467, i32 4
  %490 = trunc i32 %426 to i8
  %491 = load i8, ptr %411, align 1
  %492 = and i8 %491, -16
  %493 = or i8 %492, %490
  store i8 121, ptr %485, align 4
  %494 = getelementptr %struct.bpf_insn, ptr %467, i32 3, i32 1
  store i8 %493, ptr %494, align 1
  %495 = getelementptr %struct.bpf_insn, ptr %467, i32 3, i32 2
  store i16 40, ptr %495, align 2
  %496 = getelementptr %struct.bpf_insn, ptr %467, i32 3, i32 3
  store i32 0, ptr %496, align 4
  br label %2386

497:                                              ; preds = %5
  %498 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %499 = load i8, ptr %498, align 1
  %500 = and i8 %499, 15
  %501 = zext i8 %500 to i32
  %502 = icmp eq i8 %500, 9
  %503 = and i8 %499, -16
  %504 = icmp eq i8 %503, -112
  %505 = or i1 %502, %504
  %506 = select i1 %505, i32 8, i32 9
  %507 = icmp eq i32 %506, %501
  %508 = lshr i8 %499, 4
  %509 = zext i8 %508 to i32
  %510 = icmp eq i32 %506, %509
  %511 = select i1 %507, i1 true, i1 %510
  %512 = sext i1 %511 to i32
  %513 = add nsw i32 %506, %512
  %514 = icmp eq i8 %500, %508
  br i1 %514, label %515, label %525

515:                                              ; preds = %497
  %516 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %517 = trunc i32 %513 to i8
  %518 = shl nuw i8 %517, 4
  %519 = or i8 %518, %500
  store i8 123, ptr %2, align 4
  %520 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %519, ptr %520, align 1
  %521 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %521, align 2
  %522 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %522, align 4
  %523 = load i8, ptr %498, align 1
  %524 = and i8 %523, -16
  br label %525

525:                                              ; preds = %515, %497
  %526 = phi i8 [ %517, %515 ], [ %500, %497 ]
  %527 = phi i8 [ %524, %515 ], [ %503, %497 ]
  %528 = phi i16 [ 4, %515 ], [ 2, %497 ]
  %529 = phi ptr [ %516, %515 ], [ %2, %497 ]
  %530 = getelementptr %struct.bpf_insn, ptr %529, i32 1
  %531 = or i8 %527, %526
  store i8 113, ptr %529, align 4
  %532 = getelementptr inbounds i8, ptr %529, i32 1
  store i8 %531, ptr %532, align 1
  %533 = getelementptr inbounds i8, ptr %529, i32 2
  store i16 33, ptr %533, align 2
  %534 = getelementptr inbounds i8, ptr %529, i32 4
  store i32 0, ptr %534, align 4
  %535 = getelementptr %struct.bpf_insn, ptr %529, i32 2
  store i8 21, ptr %530, align 4
  %536 = getelementptr %struct.bpf_insn, ptr %529, i32 1, i32 1
  store i8 %526, ptr %536, align 1
  %537 = getelementptr %struct.bpf_insn, ptr %529, i32 1, i32 2
  store i16 %528, ptr %537, align 2
  %538 = getelementptr %struct.bpf_insn, ptr %529, i32 1, i32 3
  store i32 0, ptr %538, align 4
  %539 = load i8, ptr %498, align 1
  %540 = and i8 %539, 15
  %541 = lshr i8 %539, 4
  %542 = icmp eq i8 %540, %541
  br i1 %542, label %543, label %552

543:                                              ; preds = %525
  %544 = getelementptr %struct.bpf_insn, ptr %529, i32 3
  %545 = trunc i32 %513 to i8
  %546 = and i8 %539, -16
  %547 = or i8 %546, %545
  store i8 121, ptr %535, align 4
  %548 = getelementptr %struct.bpf_insn, ptr %529, i32 2, i32 1
  store i8 %547, ptr %548, align 1
  %549 = getelementptr %struct.bpf_insn, ptr %529, i32 2, i32 2
  store i16 40, ptr %549, align 2
  %550 = getelementptr %struct.bpf_insn, ptr %529, i32 2, i32 3
  store i32 0, ptr %550, align 4
  %551 = load i8, ptr %498, align 1
  br label %552

552:                                              ; preds = %543, %525
  %553 = phi i8 [ %551, %543 ], [ %539, %525 ]
  %554 = phi ptr [ %544, %543 ], [ %535, %525 ]
  %555 = getelementptr %struct.bpf_insn, ptr %554, i32 1
  store i8 97, ptr %554, align 4
  %556 = getelementptr inbounds i8, ptr %554, i32 1
  store i8 %553, ptr %556, align 1
  %557 = getelementptr inbounds i8, ptr %554, i32 2
  store i16 0, ptr %557, align 2
  %558 = getelementptr inbounds i8, ptr %554, i32 4
  store i32 0, ptr %558, align 4
  %559 = getelementptr %struct.bpf_insn, ptr %554, i32 2
  %560 = load i8, ptr %498, align 1
  %561 = and i8 %560, 15
  %562 = shl i8 %560, 4
  %563 = or i8 %561, %562
  store i8 97, ptr %555, align 4
  %564 = getelementptr %struct.bpf_insn, ptr %554, i32 1, i32 1
  store i8 %563, ptr %564, align 1
  %565 = getelementptr %struct.bpf_insn, ptr %554, i32 1, i32 2
  store i16 1224, ptr %565, align 2
  %566 = getelementptr %struct.bpf_insn, ptr %554, i32 1, i32 3
  store i32 0, ptr %566, align 4
  %567 = load i8, ptr %498, align 1
  %568 = and i8 %567, 15
  %569 = lshr i8 %567, 4
  %570 = icmp eq i8 %568, %569
  br i1 %570, label %571, label %2386

571:                                              ; preds = %552
  %572 = getelementptr %struct.bpf_insn, ptr %554, i32 3
  store i8 5, ptr %559, align 4
  %573 = getelementptr %struct.bpf_insn, ptr %554, i32 2, i32 1
  store i8 0, ptr %573, align 1
  %574 = getelementptr %struct.bpf_insn, ptr %554, i32 2, i32 2
  store i16 1, ptr %574, align 2
  %575 = getelementptr %struct.bpf_insn, ptr %554, i32 2, i32 3
  store i32 0, ptr %575, align 4
  %576 = getelementptr %struct.bpf_insn, ptr %554, i32 4
  %577 = trunc i32 %513 to i8
  %578 = load i8, ptr %498, align 1
  %579 = and i8 %578, -16
  %580 = or i8 %579, %577
  store i8 121, ptr %572, align 4
  %581 = getelementptr %struct.bpf_insn, ptr %554, i32 3, i32 1
  store i8 %580, ptr %581, align 1
  %582 = getelementptr %struct.bpf_insn, ptr %554, i32 3, i32 2
  store i16 40, ptr %582, align 2
  %583 = getelementptr %struct.bpf_insn, ptr %554, i32 3, i32 3
  store i32 0, ptr %583, align 4
  br label %2386

584:                                              ; preds = %5
  %585 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %586 = load i8, ptr %585, align 1
  %587 = and i8 %586, 15
  %588 = zext i8 %587 to i32
  %589 = icmp eq i8 %587, 9
  %590 = and i8 %586, -16
  %591 = icmp eq i8 %590, -112
  %592 = or i1 %589, %591
  %593 = select i1 %592, i32 8, i32 9
  %594 = icmp eq i32 %593, %588
  %595 = lshr i8 %586, 4
  %596 = zext i8 %595 to i32
  %597 = icmp eq i32 %593, %596
  %598 = select i1 %594, i1 true, i1 %597
  %599 = sext i1 %598 to i32
  %600 = add nsw i32 %593, %599
  %601 = icmp eq i8 %587, %595
  br i1 %601, label %602, label %612

602:                                              ; preds = %584
  %603 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %604 = trunc i32 %600 to i8
  %605 = shl nuw i8 %604, 4
  %606 = or i8 %605, %587
  store i8 123, ptr %2, align 4
  %607 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %606, ptr %607, align 1
  %608 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %608, align 2
  %609 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %609, align 4
  %610 = load i8, ptr %585, align 1
  %611 = and i8 %610, -16
  br label %612

612:                                              ; preds = %602, %584
  %613 = phi i8 [ %604, %602 ], [ %587, %584 ]
  %614 = phi i8 [ %611, %602 ], [ %590, %584 ]
  %615 = phi i16 [ 4, %602 ], [ 2, %584 ]
  %616 = phi ptr [ %603, %602 ], [ %2, %584 ]
  %617 = getelementptr %struct.bpf_insn, ptr %616, i32 1
  %618 = or i8 %614, %613
  store i8 113, ptr %616, align 4
  %619 = getelementptr inbounds i8, ptr %616, i32 1
  store i8 %618, ptr %619, align 1
  %620 = getelementptr inbounds i8, ptr %616, i32 2
  store i16 33, ptr %620, align 2
  %621 = getelementptr inbounds i8, ptr %616, i32 4
  store i32 0, ptr %621, align 4
  %622 = getelementptr %struct.bpf_insn, ptr %616, i32 2
  store i8 21, ptr %617, align 4
  %623 = getelementptr %struct.bpf_insn, ptr %616, i32 1, i32 1
  store i8 %613, ptr %623, align 1
  %624 = getelementptr %struct.bpf_insn, ptr %616, i32 1, i32 2
  store i16 %615, ptr %624, align 2
  %625 = getelementptr %struct.bpf_insn, ptr %616, i32 1, i32 3
  store i32 0, ptr %625, align 4
  %626 = load i8, ptr %585, align 1
  %627 = and i8 %626, 15
  %628 = lshr i8 %626, 4
  %629 = icmp eq i8 %627, %628
  br i1 %629, label %630, label %639

630:                                              ; preds = %612
  %631 = getelementptr %struct.bpf_insn, ptr %616, i32 3
  %632 = trunc i32 %600 to i8
  %633 = and i8 %626, -16
  %634 = or i8 %633, %632
  store i8 121, ptr %622, align 4
  %635 = getelementptr %struct.bpf_insn, ptr %616, i32 2, i32 1
  store i8 %634, ptr %635, align 1
  %636 = getelementptr %struct.bpf_insn, ptr %616, i32 2, i32 2
  store i16 40, ptr %636, align 2
  %637 = getelementptr %struct.bpf_insn, ptr %616, i32 2, i32 3
  store i32 0, ptr %637, align 4
  %638 = load i8, ptr %585, align 1
  br label %639

639:                                              ; preds = %630, %612
  %640 = phi i8 [ %638, %630 ], [ %626, %612 ]
  %641 = phi ptr [ %631, %630 ], [ %622, %612 ]
  %642 = getelementptr %struct.bpf_insn, ptr %641, i32 1
  store i8 97, ptr %641, align 4
  %643 = getelementptr inbounds i8, ptr %641, i32 1
  store i8 %640, ptr %643, align 1
  %644 = getelementptr inbounds i8, ptr %641, i32 2
  store i16 0, ptr %644, align 2
  %645 = getelementptr inbounds i8, ptr %641, i32 4
  store i32 0, ptr %645, align 4
  %646 = getelementptr %struct.bpf_insn, ptr %641, i32 2
  %647 = load i8, ptr %585, align 1
  %648 = and i8 %647, 15
  %649 = shl i8 %647, 4
  %650 = or i8 %648, %649
  store i8 97, ptr %642, align 4
  %651 = getelementptr %struct.bpf_insn, ptr %641, i32 1, i32 1
  store i8 %650, ptr %651, align 1
  %652 = getelementptr %struct.bpf_insn, ptr %641, i32 1, i32 2
  store i16 1324, ptr %652, align 2
  %653 = getelementptr %struct.bpf_insn, ptr %641, i32 1, i32 3
  store i32 0, ptr %653, align 4
  %654 = load i8, ptr %585, align 1
  %655 = and i8 %654, 15
  %656 = lshr i8 %654, 4
  %657 = icmp eq i8 %655, %656
  br i1 %657, label %658, label %2386

658:                                              ; preds = %639
  %659 = getelementptr %struct.bpf_insn, ptr %641, i32 3
  store i8 5, ptr %646, align 4
  %660 = getelementptr %struct.bpf_insn, ptr %641, i32 2, i32 1
  store i8 0, ptr %660, align 1
  %661 = getelementptr %struct.bpf_insn, ptr %641, i32 2, i32 2
  store i16 1, ptr %661, align 2
  %662 = getelementptr %struct.bpf_insn, ptr %641, i32 2, i32 3
  store i32 0, ptr %662, align 4
  %663 = getelementptr %struct.bpf_insn, ptr %641, i32 4
  %664 = trunc i32 %600 to i8
  %665 = load i8, ptr %585, align 1
  %666 = and i8 %665, -16
  %667 = or i8 %666, %664
  store i8 121, ptr %659, align 4
  %668 = getelementptr %struct.bpf_insn, ptr %641, i32 3, i32 1
  store i8 %667, ptr %668, align 1
  %669 = getelementptr %struct.bpf_insn, ptr %641, i32 3, i32 2
  store i16 40, ptr %669, align 2
  %670 = getelementptr %struct.bpf_insn, ptr %641, i32 3, i32 3
  store i32 0, ptr %670, align 4
  br label %2386

671:                                              ; preds = %5
  %672 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %673 = load i8, ptr %672, align 1
  %674 = and i8 %673, 15
  %675 = zext i8 %674 to i32
  %676 = icmp eq i8 %674, 9
  %677 = and i8 %673, -16
  %678 = icmp eq i8 %677, -112
  %679 = or i1 %676, %678
  %680 = select i1 %679, i32 8, i32 9
  %681 = icmp eq i32 %680, %675
  %682 = lshr i8 %673, 4
  %683 = zext i8 %682 to i32
  %684 = icmp eq i32 %680, %683
  %685 = select i1 %681, i1 true, i1 %684
  %686 = sext i1 %685 to i32
  %687 = add nsw i32 %680, %686
  %688 = icmp eq i8 %674, %682
  br i1 %688, label %689, label %699

689:                                              ; preds = %671
  %690 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %691 = trunc i32 %687 to i8
  %692 = shl nuw i8 %691, 4
  %693 = or i8 %692, %674
  store i8 123, ptr %2, align 4
  %694 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %693, ptr %694, align 1
  %695 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %695, align 2
  %696 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %696, align 4
  %697 = load i8, ptr %672, align 1
  %698 = and i8 %697, -16
  br label %699

699:                                              ; preds = %689, %671
  %700 = phi i8 [ %691, %689 ], [ %674, %671 ]
  %701 = phi i8 [ %698, %689 ], [ %677, %671 ]
  %702 = phi i16 [ 4, %689 ], [ 2, %671 ]
  %703 = phi ptr [ %690, %689 ], [ %2, %671 ]
  %704 = getelementptr %struct.bpf_insn, ptr %703, i32 1
  %705 = or i8 %701, %700
  store i8 113, ptr %703, align 4
  %706 = getelementptr inbounds i8, ptr %703, i32 1
  store i8 %705, ptr %706, align 1
  %707 = getelementptr inbounds i8, ptr %703, i32 2
  store i16 33, ptr %707, align 2
  %708 = getelementptr inbounds i8, ptr %703, i32 4
  store i32 0, ptr %708, align 4
  %709 = getelementptr %struct.bpf_insn, ptr %703, i32 2
  store i8 21, ptr %704, align 4
  %710 = getelementptr %struct.bpf_insn, ptr %703, i32 1, i32 1
  store i8 %700, ptr %710, align 1
  %711 = getelementptr %struct.bpf_insn, ptr %703, i32 1, i32 2
  store i16 %702, ptr %711, align 2
  %712 = getelementptr %struct.bpf_insn, ptr %703, i32 1, i32 3
  store i32 0, ptr %712, align 4
  %713 = load i8, ptr %672, align 1
  %714 = and i8 %713, 15
  %715 = lshr i8 %713, 4
  %716 = icmp eq i8 %714, %715
  br i1 %716, label %717, label %726

717:                                              ; preds = %699
  %718 = getelementptr %struct.bpf_insn, ptr %703, i32 3
  %719 = trunc i32 %687 to i8
  %720 = and i8 %713, -16
  %721 = or i8 %720, %719
  store i8 121, ptr %709, align 4
  %722 = getelementptr %struct.bpf_insn, ptr %703, i32 2, i32 1
  store i8 %721, ptr %722, align 1
  %723 = getelementptr %struct.bpf_insn, ptr %703, i32 2, i32 2
  store i16 40, ptr %723, align 2
  %724 = getelementptr %struct.bpf_insn, ptr %703, i32 2, i32 3
  store i32 0, ptr %724, align 4
  %725 = load i8, ptr %672, align 1
  br label %726

726:                                              ; preds = %717, %699
  %727 = phi i8 [ %725, %717 ], [ %713, %699 ]
  %728 = phi ptr [ %718, %717 ], [ %709, %699 ]
  %729 = getelementptr %struct.bpf_insn, ptr %728, i32 1
  store i8 97, ptr %728, align 4
  %730 = getelementptr inbounds i8, ptr %728, i32 1
  store i8 %727, ptr %730, align 1
  %731 = getelementptr inbounds i8, ptr %728, i32 2
  store i16 0, ptr %731, align 2
  %732 = getelementptr inbounds i8, ptr %728, i32 4
  store i32 0, ptr %732, align 4
  %733 = getelementptr %struct.bpf_insn, ptr %728, i32 2
  %734 = load i8, ptr %672, align 1
  %735 = and i8 %734, 15
  %736 = shl i8 %734, 4
  %737 = or i8 %735, %736
  store i8 97, ptr %729, align 4
  %738 = getelementptr %struct.bpf_insn, ptr %728, i32 1, i32 1
  store i8 %737, ptr %738, align 1
  %739 = getelementptr %struct.bpf_insn, ptr %728, i32 1, i32 2
  store i16 1032, ptr %739, align 2
  %740 = getelementptr %struct.bpf_insn, ptr %728, i32 1, i32 3
  store i32 0, ptr %740, align 4
  %741 = load i8, ptr %672, align 1
  %742 = and i8 %741, 15
  %743 = lshr i8 %741, 4
  %744 = icmp eq i8 %742, %743
  br i1 %744, label %745, label %2386

745:                                              ; preds = %726
  %746 = getelementptr %struct.bpf_insn, ptr %728, i32 3
  store i8 5, ptr %733, align 4
  %747 = getelementptr %struct.bpf_insn, ptr %728, i32 2, i32 1
  store i8 0, ptr %747, align 1
  %748 = getelementptr %struct.bpf_insn, ptr %728, i32 2, i32 2
  store i16 1, ptr %748, align 2
  %749 = getelementptr %struct.bpf_insn, ptr %728, i32 2, i32 3
  store i32 0, ptr %749, align 4
  %750 = getelementptr %struct.bpf_insn, ptr %728, i32 4
  %751 = trunc i32 %687 to i8
  %752 = load i8, ptr %672, align 1
  %753 = and i8 %752, -16
  %754 = or i8 %753, %751
  store i8 121, ptr %746, align 4
  %755 = getelementptr %struct.bpf_insn, ptr %728, i32 3, i32 1
  store i8 %754, ptr %755, align 1
  %756 = getelementptr %struct.bpf_insn, ptr %728, i32 3, i32 2
  store i16 40, ptr %756, align 2
  %757 = getelementptr %struct.bpf_insn, ptr %728, i32 3, i32 3
  store i32 0, ptr %757, align 4
  br label %2386

758:                                              ; preds = %5
  %759 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %760 = load i8, ptr %759, align 1
  %761 = and i8 %760, 15
  %762 = zext i8 %761 to i32
  %763 = icmp eq i8 %761, 9
  %764 = and i8 %760, -16
  %765 = icmp eq i8 %764, -112
  %766 = or i1 %763, %765
  %767 = select i1 %766, i32 8, i32 9
  %768 = icmp eq i32 %767, %762
  %769 = lshr i8 %760, 4
  %770 = zext i8 %769 to i32
  %771 = icmp eq i32 %767, %770
  %772 = select i1 %768, i1 true, i1 %771
  %773 = sext i1 %772 to i32
  %774 = add nsw i32 %767, %773
  %775 = icmp eq i8 %761, %769
  br i1 %775, label %776, label %786

776:                                              ; preds = %758
  %777 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %778 = trunc i32 %774 to i8
  %779 = shl nuw i8 %778, 4
  %780 = or i8 %779, %761
  store i8 123, ptr %2, align 4
  %781 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %780, ptr %781, align 1
  %782 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %782, align 2
  %783 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %783, align 4
  %784 = load i8, ptr %759, align 1
  %785 = and i8 %784, -16
  br label %786

786:                                              ; preds = %776, %758
  %787 = phi i8 [ %778, %776 ], [ %761, %758 ]
  %788 = phi i8 [ %785, %776 ], [ %764, %758 ]
  %789 = phi i16 [ 4, %776 ], [ 2, %758 ]
  %790 = phi ptr [ %777, %776 ], [ %2, %758 ]
  %791 = getelementptr %struct.bpf_insn, ptr %790, i32 1
  %792 = or i8 %788, %787
  store i8 113, ptr %790, align 4
  %793 = getelementptr inbounds i8, ptr %790, i32 1
  store i8 %792, ptr %793, align 1
  %794 = getelementptr inbounds i8, ptr %790, i32 2
  store i16 33, ptr %794, align 2
  %795 = getelementptr inbounds i8, ptr %790, i32 4
  store i32 0, ptr %795, align 4
  %796 = getelementptr %struct.bpf_insn, ptr %790, i32 2
  store i8 21, ptr %791, align 4
  %797 = getelementptr %struct.bpf_insn, ptr %790, i32 1, i32 1
  store i8 %787, ptr %797, align 1
  %798 = getelementptr %struct.bpf_insn, ptr %790, i32 1, i32 2
  store i16 %789, ptr %798, align 2
  %799 = getelementptr %struct.bpf_insn, ptr %790, i32 1, i32 3
  store i32 0, ptr %799, align 4
  %800 = load i8, ptr %759, align 1
  %801 = and i8 %800, 15
  %802 = lshr i8 %800, 4
  %803 = icmp eq i8 %801, %802
  br i1 %803, label %804, label %813

804:                                              ; preds = %786
  %805 = getelementptr %struct.bpf_insn, ptr %790, i32 3
  %806 = trunc i32 %774 to i8
  %807 = and i8 %800, -16
  %808 = or i8 %807, %806
  store i8 121, ptr %796, align 4
  %809 = getelementptr %struct.bpf_insn, ptr %790, i32 2, i32 1
  store i8 %808, ptr %809, align 1
  %810 = getelementptr %struct.bpf_insn, ptr %790, i32 2, i32 2
  store i16 40, ptr %810, align 2
  %811 = getelementptr %struct.bpf_insn, ptr %790, i32 2, i32 3
  store i32 0, ptr %811, align 4
  %812 = load i8, ptr %759, align 1
  br label %813

813:                                              ; preds = %804, %786
  %814 = phi i8 [ %812, %804 ], [ %800, %786 ]
  %815 = phi ptr [ %805, %804 ], [ %796, %786 ]
  %816 = getelementptr %struct.bpf_insn, ptr %815, i32 1
  store i8 97, ptr %815, align 4
  %817 = getelementptr inbounds i8, ptr %815, i32 1
  store i8 %814, ptr %817, align 1
  %818 = getelementptr inbounds i8, ptr %815, i32 2
  store i16 0, ptr %818, align 2
  %819 = getelementptr inbounds i8, ptr %815, i32 4
  store i32 0, ptr %819, align 4
  %820 = getelementptr %struct.bpf_insn, ptr %815, i32 2
  %821 = load i8, ptr %759, align 1
  %822 = and i8 %821, 15
  %823 = shl i8 %821, 4
  %824 = or i8 %822, %823
  store i8 97, ptr %816, align 4
  %825 = getelementptr %struct.bpf_insn, ptr %815, i32 1, i32 1
  store i8 %824, ptr %825, align 1
  %826 = getelementptr %struct.bpf_insn, ptr %815, i32 1, i32 2
  store i16 1044, ptr %826, align 2
  %827 = getelementptr %struct.bpf_insn, ptr %815, i32 1, i32 3
  store i32 0, ptr %827, align 4
  %828 = load i8, ptr %759, align 1
  %829 = and i8 %828, 15
  %830 = lshr i8 %828, 4
  %831 = icmp eq i8 %829, %830
  br i1 %831, label %832, label %2386

832:                                              ; preds = %813
  %833 = getelementptr %struct.bpf_insn, ptr %815, i32 3
  store i8 5, ptr %820, align 4
  %834 = getelementptr %struct.bpf_insn, ptr %815, i32 2, i32 1
  store i8 0, ptr %834, align 1
  %835 = getelementptr %struct.bpf_insn, ptr %815, i32 2, i32 2
  store i16 1, ptr %835, align 2
  %836 = getelementptr %struct.bpf_insn, ptr %815, i32 2, i32 3
  store i32 0, ptr %836, align 4
  %837 = getelementptr %struct.bpf_insn, ptr %815, i32 4
  %838 = trunc i32 %774 to i8
  %839 = load i8, ptr %759, align 1
  %840 = and i8 %839, -16
  %841 = or i8 %840, %838
  store i8 121, ptr %833, align 4
  %842 = getelementptr %struct.bpf_insn, ptr %815, i32 3, i32 1
  store i8 %841, ptr %842, align 1
  %843 = getelementptr %struct.bpf_insn, ptr %815, i32 3, i32 2
  store i16 40, ptr %843, align 2
  %844 = getelementptr %struct.bpf_insn, ptr %815, i32 3, i32 3
  store i32 0, ptr %844, align 4
  br label %2386

845:                                              ; preds = %5
  %846 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %847 = load i8, ptr %846, align 1
  %848 = and i8 %847, 15
  %849 = zext i8 %848 to i32
  %850 = icmp eq i8 %848, 9
  %851 = and i8 %847, -16
  %852 = icmp eq i8 %851, -112
  %853 = or i1 %850, %852
  %854 = select i1 %853, i32 8, i32 9
  %855 = icmp eq i32 %854, %849
  %856 = lshr i8 %847, 4
  %857 = zext i8 %856 to i32
  %858 = icmp eq i32 %854, %857
  %859 = select i1 %855, i1 true, i1 %858
  %860 = sext i1 %859 to i32
  %861 = add nsw i32 %854, %860
  %862 = icmp eq i8 %848, %856
  br i1 %862, label %863, label %873

863:                                              ; preds = %845
  %864 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %865 = trunc i32 %861 to i8
  %866 = shl nuw i8 %865, 4
  %867 = or i8 %866, %848
  store i8 123, ptr %2, align 4
  %868 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %867, ptr %868, align 1
  %869 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %869, align 2
  %870 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %870, align 4
  %871 = load i8, ptr %846, align 1
  %872 = and i8 %871, -16
  br label %873

873:                                              ; preds = %863, %845
  %874 = phi i8 [ %865, %863 ], [ %848, %845 ]
  %875 = phi i8 [ %872, %863 ], [ %851, %845 ]
  %876 = phi i16 [ 4, %863 ], [ 2, %845 ]
  %877 = phi ptr [ %864, %863 ], [ %2, %845 ]
  %878 = getelementptr %struct.bpf_insn, ptr %877, i32 1
  %879 = or i8 %875, %874
  store i8 113, ptr %877, align 4
  %880 = getelementptr inbounds i8, ptr %877, i32 1
  store i8 %879, ptr %880, align 1
  %881 = getelementptr inbounds i8, ptr %877, i32 2
  store i16 33, ptr %881, align 2
  %882 = getelementptr inbounds i8, ptr %877, i32 4
  store i32 0, ptr %882, align 4
  %883 = getelementptr %struct.bpf_insn, ptr %877, i32 2
  store i8 21, ptr %878, align 4
  %884 = getelementptr %struct.bpf_insn, ptr %877, i32 1, i32 1
  store i8 %874, ptr %884, align 1
  %885 = getelementptr %struct.bpf_insn, ptr %877, i32 1, i32 2
  store i16 %876, ptr %885, align 2
  %886 = getelementptr %struct.bpf_insn, ptr %877, i32 1, i32 3
  store i32 0, ptr %886, align 4
  %887 = load i8, ptr %846, align 1
  %888 = and i8 %887, 15
  %889 = lshr i8 %887, 4
  %890 = icmp eq i8 %888, %889
  br i1 %890, label %891, label %900

891:                                              ; preds = %873
  %892 = getelementptr %struct.bpf_insn, ptr %877, i32 3
  %893 = trunc i32 %861 to i8
  %894 = and i8 %887, -16
  %895 = or i8 %894, %893
  store i8 121, ptr %883, align 4
  %896 = getelementptr %struct.bpf_insn, ptr %877, i32 2, i32 1
  store i8 %895, ptr %896, align 1
  %897 = getelementptr %struct.bpf_insn, ptr %877, i32 2, i32 2
  store i16 40, ptr %897, align 2
  %898 = getelementptr %struct.bpf_insn, ptr %877, i32 2, i32 3
  store i32 0, ptr %898, align 4
  %899 = load i8, ptr %846, align 1
  br label %900

900:                                              ; preds = %891, %873
  %901 = phi i8 [ %899, %891 ], [ %887, %873 ]
  %902 = phi ptr [ %892, %891 ], [ %883, %873 ]
  %903 = getelementptr %struct.bpf_insn, ptr %902, i32 1
  store i8 97, ptr %902, align 4
  %904 = getelementptr inbounds i8, ptr %902, i32 1
  store i8 %901, ptr %904, align 1
  %905 = getelementptr inbounds i8, ptr %902, i32 2
  store i16 0, ptr %905, align 2
  %906 = getelementptr inbounds i8, ptr %902, i32 4
  store i32 0, ptr %906, align 4
  %907 = getelementptr %struct.bpf_insn, ptr %902, i32 2
  %908 = load i8, ptr %846, align 1
  %909 = and i8 %908, 15
  %910 = shl i8 %908, 4
  %911 = or i8 %909, %910
  store i8 97, ptr %903, align 4
  %912 = getelementptr %struct.bpf_insn, ptr %902, i32 1, i32 1
  store i8 %911, ptr %912, align 1
  %913 = getelementptr %struct.bpf_insn, ptr %902, i32 1, i32 2
  store i16 1076, ptr %913, align 2
  %914 = getelementptr %struct.bpf_insn, ptr %902, i32 1, i32 3
  store i32 0, ptr %914, align 4
  %915 = load i8, ptr %846, align 1
  %916 = and i8 %915, 15
  %917 = lshr i8 %915, 4
  %918 = icmp eq i8 %916, %917
  br i1 %918, label %919, label %2386

919:                                              ; preds = %900
  %920 = getelementptr %struct.bpf_insn, ptr %902, i32 3
  store i8 5, ptr %907, align 4
  %921 = getelementptr %struct.bpf_insn, ptr %902, i32 2, i32 1
  store i8 0, ptr %921, align 1
  %922 = getelementptr %struct.bpf_insn, ptr %902, i32 2, i32 2
  store i16 1, ptr %922, align 2
  %923 = getelementptr %struct.bpf_insn, ptr %902, i32 2, i32 3
  store i32 0, ptr %923, align 4
  %924 = getelementptr %struct.bpf_insn, ptr %902, i32 4
  %925 = trunc i32 %861 to i8
  %926 = load i8, ptr %846, align 1
  %927 = and i8 %926, -16
  %928 = or i8 %927, %925
  store i8 121, ptr %920, align 4
  %929 = getelementptr %struct.bpf_insn, ptr %902, i32 3, i32 1
  store i8 %928, ptr %929, align 1
  %930 = getelementptr %struct.bpf_insn, ptr %902, i32 3, i32 2
  store i16 40, ptr %930, align 2
  %931 = getelementptr %struct.bpf_insn, ptr %902, i32 3, i32 3
  store i32 0, ptr %931, align 4
  br label %2386

932:                                              ; preds = %5
  %933 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %934 = load i8, ptr %933, align 1
  %935 = and i8 %934, 15
  %936 = zext i8 %935 to i32
  %937 = icmp eq i8 %935, 9
  %938 = and i8 %934, -16
  %939 = icmp eq i8 %938, -112
  %940 = or i1 %937, %939
  %941 = select i1 %940, i32 8, i32 9
  %942 = icmp eq i32 %941, %936
  %943 = lshr i8 %934, 4
  %944 = zext i8 %943 to i32
  %945 = icmp eq i32 %941, %944
  %946 = select i1 %942, i1 true, i1 %945
  %947 = sext i1 %946 to i32
  %948 = add nsw i32 %941, %947
  %949 = icmp eq i8 %935, %943
  br i1 %949, label %950, label %960

950:                                              ; preds = %932
  %951 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %952 = trunc i32 %948 to i8
  %953 = shl nuw i8 %952, 4
  %954 = or i8 %953, %935
  store i8 123, ptr %2, align 4
  %955 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %954, ptr %955, align 1
  %956 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %956, align 2
  %957 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %957, align 4
  %958 = load i8, ptr %933, align 1
  %959 = and i8 %958, -16
  br label %960

960:                                              ; preds = %950, %932
  %961 = phi i8 [ %952, %950 ], [ %935, %932 ]
  %962 = phi i8 [ %959, %950 ], [ %938, %932 ]
  %963 = phi i16 [ 4, %950 ], [ 2, %932 ]
  %964 = phi ptr [ %951, %950 ], [ %2, %932 ]
  %965 = getelementptr %struct.bpf_insn, ptr %964, i32 1
  %966 = or i8 %962, %961
  store i8 113, ptr %964, align 4
  %967 = getelementptr inbounds i8, ptr %964, i32 1
  store i8 %966, ptr %967, align 1
  %968 = getelementptr inbounds i8, ptr %964, i32 2
  store i16 33, ptr %968, align 2
  %969 = getelementptr inbounds i8, ptr %964, i32 4
  store i32 0, ptr %969, align 4
  %970 = getelementptr %struct.bpf_insn, ptr %964, i32 2
  store i8 21, ptr %965, align 4
  %971 = getelementptr %struct.bpf_insn, ptr %964, i32 1, i32 1
  store i8 %961, ptr %971, align 1
  %972 = getelementptr %struct.bpf_insn, ptr %964, i32 1, i32 2
  store i16 %963, ptr %972, align 2
  %973 = getelementptr %struct.bpf_insn, ptr %964, i32 1, i32 3
  store i32 0, ptr %973, align 4
  %974 = load i8, ptr %933, align 1
  %975 = and i8 %974, 15
  %976 = lshr i8 %974, 4
  %977 = icmp eq i8 %975, %976
  br i1 %977, label %978, label %987

978:                                              ; preds = %960
  %979 = getelementptr %struct.bpf_insn, ptr %964, i32 3
  %980 = trunc i32 %948 to i8
  %981 = and i8 %974, -16
  %982 = or i8 %981, %980
  store i8 121, ptr %970, align 4
  %983 = getelementptr %struct.bpf_insn, ptr %964, i32 2, i32 1
  store i8 %982, ptr %983, align 1
  %984 = getelementptr %struct.bpf_insn, ptr %964, i32 2, i32 2
  store i16 40, ptr %984, align 2
  %985 = getelementptr %struct.bpf_insn, ptr %964, i32 2, i32 3
  store i32 0, ptr %985, align 4
  %986 = load i8, ptr %933, align 1
  br label %987

987:                                              ; preds = %978, %960
  %988 = phi i8 [ %986, %978 ], [ %974, %960 ]
  %989 = phi ptr [ %979, %978 ], [ %970, %960 ]
  %990 = getelementptr %struct.bpf_insn, ptr %989, i32 1
  store i8 97, ptr %989, align 4
  %991 = getelementptr inbounds i8, ptr %989, i32 1
  store i8 %988, ptr %991, align 1
  %992 = getelementptr inbounds i8, ptr %989, i32 2
  store i16 0, ptr %992, align 2
  %993 = getelementptr inbounds i8, ptr %989, i32 4
  store i32 0, ptr %993, align 4
  %994 = getelementptr %struct.bpf_insn, ptr %989, i32 2
  %995 = load i8, ptr %933, align 1
  %996 = and i8 %995, 15
  %997 = shl i8 %995, 4
  %998 = or i8 %996, %997
  store i8 97, ptr %990, align 4
  %999 = getelementptr %struct.bpf_insn, ptr %989, i32 1, i32 1
  store i8 %998, ptr %999, align 1
  %1000 = getelementptr %struct.bpf_insn, ptr %989, i32 1, i32 2
  store i16 1132, ptr %1000, align 2
  %1001 = getelementptr %struct.bpf_insn, ptr %989, i32 1, i32 3
  store i32 0, ptr %1001, align 4
  %1002 = load i8, ptr %933, align 1
  %1003 = and i8 %1002, 15
  %1004 = lshr i8 %1002, 4
  %1005 = icmp eq i8 %1003, %1004
  br i1 %1005, label %1006, label %2386

1006:                                             ; preds = %987
  %1007 = getelementptr %struct.bpf_insn, ptr %989, i32 3
  store i8 5, ptr %994, align 4
  %1008 = getelementptr %struct.bpf_insn, ptr %989, i32 2, i32 1
  store i8 0, ptr %1008, align 1
  %1009 = getelementptr %struct.bpf_insn, ptr %989, i32 2, i32 2
  store i16 1, ptr %1009, align 2
  %1010 = getelementptr %struct.bpf_insn, ptr %989, i32 2, i32 3
  store i32 0, ptr %1010, align 4
  %1011 = getelementptr %struct.bpf_insn, ptr %989, i32 4
  %1012 = trunc i32 %948 to i8
  %1013 = load i8, ptr %933, align 1
  %1014 = and i8 %1013, -16
  %1015 = or i8 %1014, %1012
  store i8 121, ptr %1007, align 4
  %1016 = getelementptr %struct.bpf_insn, ptr %989, i32 3, i32 1
  store i8 %1015, ptr %1016, align 1
  %1017 = getelementptr %struct.bpf_insn, ptr %989, i32 3, i32 2
  store i16 40, ptr %1017, align 2
  %1018 = getelementptr %struct.bpf_insn, ptr %989, i32 3, i32 3
  store i32 0, ptr %1018, align 4
  br label %2386

1019:                                             ; preds = %5
  %1020 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1021 = load i8, ptr %1020, align 1
  %1022 = and i8 %1021, 15
  %1023 = zext i8 %1022 to i32
  %1024 = icmp eq i8 %1022, 9
  %1025 = and i8 %1021, -16
  %1026 = icmp eq i8 %1025, -112
  %1027 = or i1 %1024, %1026
  %1028 = select i1 %1027, i32 8, i32 9
  %1029 = icmp eq i32 %1028, %1023
  %1030 = lshr i8 %1021, 4
  %1031 = zext i8 %1030 to i32
  %1032 = icmp eq i32 %1028, %1031
  %1033 = select i1 %1029, i1 true, i1 %1032
  %1034 = sext i1 %1033 to i32
  %1035 = add nsw i32 %1028, %1034
  %1036 = icmp eq i8 %1022, %1030
  br i1 %1036, label %1037, label %1047

1037:                                             ; preds = %1019
  %1038 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1039 = trunc i32 %1035 to i8
  %1040 = shl nuw i8 %1039, 4
  %1041 = or i8 %1040, %1022
  store i8 123, ptr %2, align 4
  %1042 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1041, ptr %1042, align 1
  %1043 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1043, align 2
  %1044 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1044, align 4
  %1045 = load i8, ptr %1020, align 1
  %1046 = and i8 %1045, -16
  br label %1047

1047:                                             ; preds = %1037, %1019
  %1048 = phi i8 [ %1039, %1037 ], [ %1022, %1019 ]
  %1049 = phi i8 [ %1046, %1037 ], [ %1025, %1019 ]
  %1050 = phi i16 [ 4, %1037 ], [ 2, %1019 ]
  %1051 = phi ptr [ %1038, %1037 ], [ %2, %1019 ]
  %1052 = getelementptr %struct.bpf_insn, ptr %1051, i32 1
  %1053 = or i8 %1049, %1048
  store i8 113, ptr %1051, align 4
  %1054 = getelementptr inbounds i8, ptr %1051, i32 1
  store i8 %1053, ptr %1054, align 1
  %1055 = getelementptr inbounds i8, ptr %1051, i32 2
  store i16 33, ptr %1055, align 2
  %1056 = getelementptr inbounds i8, ptr %1051, i32 4
  store i32 0, ptr %1056, align 4
  %1057 = getelementptr %struct.bpf_insn, ptr %1051, i32 2
  store i8 21, ptr %1052, align 4
  %1058 = getelementptr %struct.bpf_insn, ptr %1051, i32 1, i32 1
  store i8 %1048, ptr %1058, align 1
  %1059 = getelementptr %struct.bpf_insn, ptr %1051, i32 1, i32 2
  store i16 %1050, ptr %1059, align 2
  %1060 = getelementptr %struct.bpf_insn, ptr %1051, i32 1, i32 3
  store i32 0, ptr %1060, align 4
  %1061 = load i8, ptr %1020, align 1
  %1062 = and i8 %1061, 15
  %1063 = lshr i8 %1061, 4
  %1064 = icmp eq i8 %1062, %1063
  br i1 %1064, label %1065, label %1074

1065:                                             ; preds = %1047
  %1066 = getelementptr %struct.bpf_insn, ptr %1051, i32 3
  %1067 = trunc i32 %1035 to i8
  %1068 = and i8 %1061, -16
  %1069 = or i8 %1068, %1067
  store i8 121, ptr %1057, align 4
  %1070 = getelementptr %struct.bpf_insn, ptr %1051, i32 2, i32 1
  store i8 %1069, ptr %1070, align 1
  %1071 = getelementptr %struct.bpf_insn, ptr %1051, i32 2, i32 2
  store i16 40, ptr %1071, align 2
  %1072 = getelementptr %struct.bpf_insn, ptr %1051, i32 2, i32 3
  store i32 0, ptr %1072, align 4
  %1073 = load i8, ptr %1020, align 1
  br label %1074

1074:                                             ; preds = %1065, %1047
  %1075 = phi i8 [ %1073, %1065 ], [ %1061, %1047 ]
  %1076 = phi ptr [ %1066, %1065 ], [ %1057, %1047 ]
  %1077 = getelementptr %struct.bpf_insn, ptr %1076, i32 1
  store i8 97, ptr %1076, align 4
  %1078 = getelementptr inbounds i8, ptr %1076, i32 1
  store i8 %1075, ptr %1078, align 1
  %1079 = getelementptr inbounds i8, ptr %1076, i32 2
  store i16 0, ptr %1079, align 2
  %1080 = getelementptr inbounds i8, ptr %1076, i32 4
  store i32 0, ptr %1080, align 4
  %1081 = getelementptr %struct.bpf_insn, ptr %1076, i32 2
  %1082 = load i8, ptr %1020, align 1
  %1083 = and i8 %1082, 15
  %1084 = shl i8 %1082, 4
  %1085 = or i8 %1083, %1084
  store i8 113, ptr %1077, align 4
  %1086 = getelementptr %struct.bpf_insn, ptr %1076, i32 1, i32 1
  store i8 %1085, ptr %1086, align 1
  %1087 = getelementptr %struct.bpf_insn, ptr %1076, i32 1, i32 2
  store i16 1286, ptr %1087, align 2
  %1088 = getelementptr %struct.bpf_insn, ptr %1076, i32 1, i32 3
  store i32 0, ptr %1088, align 4
  %1089 = load i8, ptr %1020, align 1
  %1090 = and i8 %1089, 15
  %1091 = lshr i8 %1089, 4
  %1092 = icmp eq i8 %1090, %1091
  br i1 %1092, label %1093, label %2386

1093:                                             ; preds = %1074
  %1094 = getelementptr %struct.bpf_insn, ptr %1076, i32 3
  store i8 5, ptr %1081, align 4
  %1095 = getelementptr %struct.bpf_insn, ptr %1076, i32 2, i32 1
  store i8 0, ptr %1095, align 1
  %1096 = getelementptr %struct.bpf_insn, ptr %1076, i32 2, i32 2
  store i16 1, ptr %1096, align 2
  %1097 = getelementptr %struct.bpf_insn, ptr %1076, i32 2, i32 3
  store i32 0, ptr %1097, align 4
  %1098 = getelementptr %struct.bpf_insn, ptr %1076, i32 4
  %1099 = trunc i32 %1035 to i8
  %1100 = load i8, ptr %1020, align 1
  %1101 = and i8 %1100, -16
  %1102 = or i8 %1101, %1099
  store i8 121, ptr %1094, align 4
  %1103 = getelementptr %struct.bpf_insn, ptr %1076, i32 3, i32 1
  store i8 %1102, ptr %1103, align 1
  %1104 = getelementptr %struct.bpf_insn, ptr %1076, i32 3, i32 2
  store i16 40, ptr %1104, align 2
  %1105 = getelementptr %struct.bpf_insn, ptr %1076, i32 3, i32 3
  store i32 0, ptr %1105, align 4
  br label %2386

1106:                                             ; preds = %5
  %1107 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1108 = load i8, ptr %1107, align 1
  %1109 = and i8 %1108, 15
  %1110 = zext i8 %1109 to i32
  %1111 = icmp eq i8 %1109, 9
  %1112 = and i8 %1108, -16
  %1113 = icmp eq i8 %1112, -112
  %1114 = or i1 %1111, %1113
  %1115 = select i1 %1114, i32 8, i32 9
  %1116 = icmp eq i32 %1115, %1110
  %1117 = lshr i8 %1108, 4
  %1118 = zext i8 %1117 to i32
  %1119 = icmp eq i32 %1115, %1118
  %1120 = select i1 %1116, i1 true, i1 %1119
  %1121 = sext i1 %1120 to i32
  %1122 = add nsw i32 %1115, %1121
  %1123 = icmp eq i8 %1109, %1117
  br i1 %1123, label %1124, label %1134

1124:                                             ; preds = %1106
  %1125 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1126 = trunc i32 %1122 to i8
  %1127 = shl nuw i8 %1126, 4
  %1128 = or i8 %1127, %1109
  store i8 123, ptr %2, align 4
  %1129 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1128, ptr %1129, align 1
  %1130 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1130, align 2
  %1131 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1131, align 4
  %1132 = load i8, ptr %1107, align 1
  %1133 = and i8 %1132, -16
  br label %1134

1134:                                             ; preds = %1124, %1106
  %1135 = phi i8 [ %1126, %1124 ], [ %1109, %1106 ]
  %1136 = phi i8 [ %1133, %1124 ], [ %1112, %1106 ]
  %1137 = phi i16 [ 4, %1124 ], [ 2, %1106 ]
  %1138 = phi ptr [ %1125, %1124 ], [ %2, %1106 ]
  %1139 = getelementptr %struct.bpf_insn, ptr %1138, i32 1
  %1140 = or i8 %1136, %1135
  store i8 113, ptr %1138, align 4
  %1141 = getelementptr inbounds i8, ptr %1138, i32 1
  store i8 %1140, ptr %1141, align 1
  %1142 = getelementptr inbounds i8, ptr %1138, i32 2
  store i16 33, ptr %1142, align 2
  %1143 = getelementptr inbounds i8, ptr %1138, i32 4
  store i32 0, ptr %1143, align 4
  %1144 = getelementptr %struct.bpf_insn, ptr %1138, i32 2
  store i8 21, ptr %1139, align 4
  %1145 = getelementptr %struct.bpf_insn, ptr %1138, i32 1, i32 1
  store i8 %1135, ptr %1145, align 1
  %1146 = getelementptr %struct.bpf_insn, ptr %1138, i32 1, i32 2
  store i16 %1137, ptr %1146, align 2
  %1147 = getelementptr %struct.bpf_insn, ptr %1138, i32 1, i32 3
  store i32 0, ptr %1147, align 4
  %1148 = load i8, ptr %1107, align 1
  %1149 = and i8 %1148, 15
  %1150 = lshr i8 %1148, 4
  %1151 = icmp eq i8 %1149, %1150
  br i1 %1151, label %1152, label %1161

1152:                                             ; preds = %1134
  %1153 = getelementptr %struct.bpf_insn, ptr %1138, i32 3
  %1154 = trunc i32 %1122 to i8
  %1155 = and i8 %1148, -16
  %1156 = or i8 %1155, %1154
  store i8 121, ptr %1144, align 4
  %1157 = getelementptr %struct.bpf_insn, ptr %1138, i32 2, i32 1
  store i8 %1156, ptr %1157, align 1
  %1158 = getelementptr %struct.bpf_insn, ptr %1138, i32 2, i32 2
  store i16 40, ptr %1158, align 2
  %1159 = getelementptr %struct.bpf_insn, ptr %1138, i32 2, i32 3
  store i32 0, ptr %1159, align 4
  %1160 = load i8, ptr %1107, align 1
  br label %1161

1161:                                             ; preds = %1152, %1134
  %1162 = phi i8 [ %1160, %1152 ], [ %1148, %1134 ]
  %1163 = phi ptr [ %1153, %1152 ], [ %1144, %1134 ]
  %1164 = getelementptr %struct.bpf_insn, ptr %1163, i32 1
  store i8 97, ptr %1163, align 4
  %1165 = getelementptr inbounds i8, ptr %1163, i32 1
  store i8 %1162, ptr %1165, align 1
  %1166 = getelementptr inbounds i8, ptr %1163, i32 2
  store i16 0, ptr %1166, align 2
  %1167 = getelementptr inbounds i8, ptr %1163, i32 4
  store i32 0, ptr %1167, align 4
  %1168 = getelementptr %struct.bpf_insn, ptr %1163, i32 2
  %1169 = load i8, ptr %1107, align 1
  %1170 = and i8 %1169, 15
  %1171 = shl i8 %1169, 4
  %1172 = or i8 %1170, %1171
  store i8 97, ptr %1164, align 4
  %1173 = getelementptr %struct.bpf_insn, ptr %1163, i32 1, i32 1
  store i8 %1172, ptr %1173, align 1
  %1174 = getelementptr %struct.bpf_insn, ptr %1163, i32 1, i32 2
  store i16 1392, ptr %1174, align 2
  %1175 = getelementptr %struct.bpf_insn, ptr %1163, i32 1, i32 3
  store i32 0, ptr %1175, align 4
  %1176 = load i8, ptr %1107, align 1
  %1177 = and i8 %1176, 15
  %1178 = lshr i8 %1176, 4
  %1179 = icmp eq i8 %1177, %1178
  br i1 %1179, label %1180, label %2386

1180:                                             ; preds = %1161
  %1181 = getelementptr %struct.bpf_insn, ptr %1163, i32 3
  store i8 5, ptr %1168, align 4
  %1182 = getelementptr %struct.bpf_insn, ptr %1163, i32 2, i32 1
  store i8 0, ptr %1182, align 1
  %1183 = getelementptr %struct.bpf_insn, ptr %1163, i32 2, i32 2
  store i16 1, ptr %1183, align 2
  %1184 = getelementptr %struct.bpf_insn, ptr %1163, i32 2, i32 3
  store i32 0, ptr %1184, align 4
  %1185 = getelementptr %struct.bpf_insn, ptr %1163, i32 4
  %1186 = trunc i32 %1122 to i8
  %1187 = load i8, ptr %1107, align 1
  %1188 = and i8 %1187, -16
  %1189 = or i8 %1188, %1186
  store i8 121, ptr %1181, align 4
  %1190 = getelementptr %struct.bpf_insn, ptr %1163, i32 3, i32 1
  store i8 %1189, ptr %1190, align 1
  %1191 = getelementptr %struct.bpf_insn, ptr %1163, i32 3, i32 2
  store i16 40, ptr %1191, align 2
  %1192 = getelementptr %struct.bpf_insn, ptr %1163, i32 3, i32 3
  store i32 0, ptr %1192, align 4
  br label %2386

1193:                                             ; preds = %5
  %1194 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1195 = load i8, ptr %1194, align 1
  %1196 = and i8 %1195, 15
  %1197 = zext i8 %1196 to i32
  %1198 = icmp eq i8 %1196, 9
  %1199 = and i8 %1195, -16
  %1200 = icmp eq i8 %1199, -112
  %1201 = or i1 %1198, %1200
  %1202 = select i1 %1201, i32 8, i32 9
  %1203 = icmp eq i32 %1202, %1197
  %1204 = lshr i8 %1195, 4
  %1205 = zext i8 %1204 to i32
  %1206 = icmp eq i32 %1202, %1205
  %1207 = select i1 %1203, i1 true, i1 %1206
  %1208 = sext i1 %1207 to i32
  %1209 = add nsw i32 %1202, %1208
  %1210 = icmp eq i8 %1196, %1204
  br i1 %1210, label %1211, label %1221

1211:                                             ; preds = %1193
  %1212 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1213 = trunc i32 %1209 to i8
  %1214 = shl nuw i8 %1213, 4
  %1215 = or i8 %1214, %1196
  store i8 123, ptr %2, align 4
  %1216 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1215, ptr %1216, align 1
  %1217 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1217, align 2
  %1218 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1218, align 4
  %1219 = load i8, ptr %1194, align 1
  %1220 = and i8 %1219, -16
  br label %1221

1221:                                             ; preds = %1211, %1193
  %1222 = phi i8 [ %1213, %1211 ], [ %1196, %1193 ]
  %1223 = phi i8 [ %1220, %1211 ], [ %1199, %1193 ]
  %1224 = phi i16 [ 4, %1211 ], [ 2, %1193 ]
  %1225 = phi ptr [ %1212, %1211 ], [ %2, %1193 ]
  %1226 = getelementptr %struct.bpf_insn, ptr %1225, i32 1
  %1227 = or i8 %1223, %1222
  store i8 113, ptr %1225, align 4
  %1228 = getelementptr inbounds i8, ptr %1225, i32 1
  store i8 %1227, ptr %1228, align 1
  %1229 = getelementptr inbounds i8, ptr %1225, i32 2
  store i16 33, ptr %1229, align 2
  %1230 = getelementptr inbounds i8, ptr %1225, i32 4
  store i32 0, ptr %1230, align 4
  %1231 = getelementptr %struct.bpf_insn, ptr %1225, i32 2
  store i8 21, ptr %1226, align 4
  %1232 = getelementptr %struct.bpf_insn, ptr %1225, i32 1, i32 1
  store i8 %1222, ptr %1232, align 1
  %1233 = getelementptr %struct.bpf_insn, ptr %1225, i32 1, i32 2
  store i16 %1224, ptr %1233, align 2
  %1234 = getelementptr %struct.bpf_insn, ptr %1225, i32 1, i32 3
  store i32 0, ptr %1234, align 4
  %1235 = load i8, ptr %1194, align 1
  %1236 = and i8 %1235, 15
  %1237 = lshr i8 %1235, 4
  %1238 = icmp eq i8 %1236, %1237
  br i1 %1238, label %1239, label %1248

1239:                                             ; preds = %1221
  %1240 = getelementptr %struct.bpf_insn, ptr %1225, i32 3
  %1241 = trunc i32 %1209 to i8
  %1242 = and i8 %1235, -16
  %1243 = or i8 %1242, %1241
  store i8 121, ptr %1231, align 4
  %1244 = getelementptr %struct.bpf_insn, ptr %1225, i32 2, i32 1
  store i8 %1243, ptr %1244, align 1
  %1245 = getelementptr %struct.bpf_insn, ptr %1225, i32 2, i32 2
  store i16 40, ptr %1245, align 2
  %1246 = getelementptr %struct.bpf_insn, ptr %1225, i32 2, i32 3
  store i32 0, ptr %1246, align 4
  %1247 = load i8, ptr %1194, align 1
  br label %1248

1248:                                             ; preds = %1239, %1221
  %1249 = phi i8 [ %1247, %1239 ], [ %1235, %1221 ]
  %1250 = phi ptr [ %1240, %1239 ], [ %1231, %1221 ]
  %1251 = getelementptr %struct.bpf_insn, ptr %1250, i32 1
  store i8 97, ptr %1250, align 4
  %1252 = getelementptr inbounds i8, ptr %1250, i32 1
  store i8 %1249, ptr %1252, align 1
  %1253 = getelementptr inbounds i8, ptr %1250, i32 2
  store i16 0, ptr %1253, align 2
  %1254 = getelementptr inbounds i8, ptr %1250, i32 4
  store i32 0, ptr %1254, align 4
  %1255 = getelementptr %struct.bpf_insn, ptr %1250, i32 2
  %1256 = load i8, ptr %1194, align 1
  %1257 = and i8 %1256, 15
  %1258 = shl i8 %1256, 4
  %1259 = or i8 %1257, %1258
  store i8 97, ptr %1251, align 4
  %1260 = getelementptr %struct.bpf_insn, ptr %1250, i32 1, i32 1
  store i8 %1259, ptr %1260, align 1
  %1261 = getelementptr %struct.bpf_insn, ptr %1250, i32 1, i32 2
  store i16 1396, ptr %1261, align 2
  %1262 = getelementptr %struct.bpf_insn, ptr %1250, i32 1, i32 3
  store i32 0, ptr %1262, align 4
  %1263 = load i8, ptr %1194, align 1
  %1264 = and i8 %1263, 15
  %1265 = lshr i8 %1263, 4
  %1266 = icmp eq i8 %1264, %1265
  br i1 %1266, label %1267, label %2386

1267:                                             ; preds = %1248
  %1268 = getelementptr %struct.bpf_insn, ptr %1250, i32 3
  store i8 5, ptr %1255, align 4
  %1269 = getelementptr %struct.bpf_insn, ptr %1250, i32 2, i32 1
  store i8 0, ptr %1269, align 1
  %1270 = getelementptr %struct.bpf_insn, ptr %1250, i32 2, i32 2
  store i16 1, ptr %1270, align 2
  %1271 = getelementptr %struct.bpf_insn, ptr %1250, i32 2, i32 3
  store i32 0, ptr %1271, align 4
  %1272 = getelementptr %struct.bpf_insn, ptr %1250, i32 4
  %1273 = trunc i32 %1209 to i8
  %1274 = load i8, ptr %1194, align 1
  %1275 = and i8 %1274, -16
  %1276 = or i8 %1275, %1273
  store i8 121, ptr %1268, align 4
  %1277 = getelementptr %struct.bpf_insn, ptr %1250, i32 3, i32 1
  store i8 %1276, ptr %1277, align 1
  %1278 = getelementptr %struct.bpf_insn, ptr %1250, i32 3, i32 2
  store i16 40, ptr %1278, align 2
  %1279 = getelementptr %struct.bpf_insn, ptr %1250, i32 3, i32 3
  store i32 0, ptr %1279, align 4
  br label %2386

1280:                                             ; preds = %5
  %1281 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1282 = load i8, ptr %1281, align 1
  %1283 = and i8 %1282, 15
  %1284 = zext i8 %1283 to i32
  %1285 = icmp eq i8 %1283, 9
  %1286 = and i8 %1282, -16
  %1287 = icmp eq i8 %1286, -112
  %1288 = or i1 %1285, %1287
  %1289 = select i1 %1288, i32 8, i32 9
  %1290 = icmp eq i32 %1289, %1284
  %1291 = lshr i8 %1282, 4
  %1292 = zext i8 %1291 to i32
  %1293 = icmp eq i32 %1289, %1292
  %1294 = select i1 %1290, i1 true, i1 %1293
  %1295 = sext i1 %1294 to i32
  %1296 = add nsw i32 %1289, %1295
  %1297 = icmp eq i8 %1283, %1291
  br i1 %1297, label %1298, label %1308

1298:                                             ; preds = %1280
  %1299 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1300 = trunc i32 %1296 to i8
  %1301 = shl nuw i8 %1300, 4
  %1302 = or i8 %1301, %1283
  store i8 123, ptr %2, align 4
  %1303 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1302, ptr %1303, align 1
  %1304 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1304, align 2
  %1305 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1305, align 4
  %1306 = load i8, ptr %1281, align 1
  %1307 = and i8 %1306, -16
  br label %1308

1308:                                             ; preds = %1298, %1280
  %1309 = phi i8 [ %1300, %1298 ], [ %1283, %1280 ]
  %1310 = phi i8 [ %1307, %1298 ], [ %1286, %1280 ]
  %1311 = phi i16 [ 4, %1298 ], [ 2, %1280 ]
  %1312 = phi ptr [ %1299, %1298 ], [ %2, %1280 ]
  %1313 = getelementptr %struct.bpf_insn, ptr %1312, i32 1
  %1314 = or i8 %1310, %1309
  store i8 113, ptr %1312, align 4
  %1315 = getelementptr inbounds i8, ptr %1312, i32 1
  store i8 %1314, ptr %1315, align 1
  %1316 = getelementptr inbounds i8, ptr %1312, i32 2
  store i16 33, ptr %1316, align 2
  %1317 = getelementptr inbounds i8, ptr %1312, i32 4
  store i32 0, ptr %1317, align 4
  %1318 = getelementptr %struct.bpf_insn, ptr %1312, i32 2
  store i8 21, ptr %1313, align 4
  %1319 = getelementptr %struct.bpf_insn, ptr %1312, i32 1, i32 1
  store i8 %1309, ptr %1319, align 1
  %1320 = getelementptr %struct.bpf_insn, ptr %1312, i32 1, i32 2
  store i16 %1311, ptr %1320, align 2
  %1321 = getelementptr %struct.bpf_insn, ptr %1312, i32 1, i32 3
  store i32 0, ptr %1321, align 4
  %1322 = load i8, ptr %1281, align 1
  %1323 = and i8 %1322, 15
  %1324 = lshr i8 %1322, 4
  %1325 = icmp eq i8 %1323, %1324
  br i1 %1325, label %1326, label %1335

1326:                                             ; preds = %1308
  %1327 = getelementptr %struct.bpf_insn, ptr %1312, i32 3
  %1328 = trunc i32 %1296 to i8
  %1329 = and i8 %1322, -16
  %1330 = or i8 %1329, %1328
  store i8 121, ptr %1318, align 4
  %1331 = getelementptr %struct.bpf_insn, ptr %1312, i32 2, i32 1
  store i8 %1330, ptr %1331, align 1
  %1332 = getelementptr %struct.bpf_insn, ptr %1312, i32 2, i32 2
  store i16 40, ptr %1332, align 2
  %1333 = getelementptr %struct.bpf_insn, ptr %1312, i32 2, i32 3
  store i32 0, ptr %1333, align 4
  %1334 = load i8, ptr %1281, align 1
  br label %1335

1335:                                             ; preds = %1326, %1308
  %1336 = phi i8 [ %1334, %1326 ], [ %1322, %1308 ]
  %1337 = phi ptr [ %1327, %1326 ], [ %1318, %1308 ]
  %1338 = getelementptr %struct.bpf_insn, ptr %1337, i32 1
  store i8 97, ptr %1337, align 4
  %1339 = getelementptr inbounds i8, ptr %1337, i32 1
  store i8 %1336, ptr %1339, align 1
  %1340 = getelementptr inbounds i8, ptr %1337, i32 2
  store i16 0, ptr %1340, align 2
  %1341 = getelementptr inbounds i8, ptr %1337, i32 4
  store i32 0, ptr %1341, align 4
  %1342 = getelementptr %struct.bpf_insn, ptr %1337, i32 2
  %1343 = load i8, ptr %1281, align 1
  %1344 = and i8 %1343, 15
  %1345 = shl i8 %1343, 4
  %1346 = or i8 %1344, %1345
  store i8 97, ptr %1338, align 4
  %1347 = getelementptr %struct.bpf_insn, ptr %1337, i32 1, i32 1
  store i8 %1346, ptr %1347, align 1
  %1348 = getelementptr %struct.bpf_insn, ptr %1337, i32 1, i32 2
  store i16 1268, ptr %1348, align 2
  %1349 = getelementptr %struct.bpf_insn, ptr %1337, i32 1, i32 3
  store i32 0, ptr %1349, align 4
  %1350 = load i8, ptr %1281, align 1
  %1351 = and i8 %1350, 15
  %1352 = lshr i8 %1350, 4
  %1353 = icmp eq i8 %1351, %1352
  br i1 %1353, label %1354, label %2386

1354:                                             ; preds = %1335
  %1355 = getelementptr %struct.bpf_insn, ptr %1337, i32 3
  store i8 5, ptr %1342, align 4
  %1356 = getelementptr %struct.bpf_insn, ptr %1337, i32 2, i32 1
  store i8 0, ptr %1356, align 1
  %1357 = getelementptr %struct.bpf_insn, ptr %1337, i32 2, i32 2
  store i16 1, ptr %1357, align 2
  %1358 = getelementptr %struct.bpf_insn, ptr %1337, i32 2, i32 3
  store i32 0, ptr %1358, align 4
  %1359 = getelementptr %struct.bpf_insn, ptr %1337, i32 4
  %1360 = trunc i32 %1296 to i8
  %1361 = load i8, ptr %1281, align 1
  %1362 = and i8 %1361, -16
  %1363 = or i8 %1362, %1360
  store i8 121, ptr %1355, align 4
  %1364 = getelementptr %struct.bpf_insn, ptr %1337, i32 3, i32 1
  store i8 %1363, ptr %1364, align 1
  %1365 = getelementptr %struct.bpf_insn, ptr %1337, i32 3, i32 2
  store i16 40, ptr %1365, align 2
  %1366 = getelementptr %struct.bpf_insn, ptr %1337, i32 3, i32 3
  store i32 0, ptr %1366, align 4
  br label %2386

1367:                                             ; preds = %5
  %1368 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1369 = load i8, ptr %1368, align 1
  %1370 = and i8 %1369, 15
  %1371 = zext i8 %1370 to i32
  %1372 = icmp eq i8 %1370, 9
  %1373 = and i8 %1369, -16
  %1374 = icmp eq i8 %1373, -112
  %1375 = or i1 %1372, %1374
  %1376 = select i1 %1375, i32 8, i32 9
  %1377 = icmp eq i32 %1376, %1371
  %1378 = lshr i8 %1369, 4
  %1379 = zext i8 %1378 to i32
  %1380 = icmp eq i32 %1376, %1379
  %1381 = select i1 %1377, i1 true, i1 %1380
  %1382 = sext i1 %1381 to i32
  %1383 = add nsw i32 %1376, %1382
  %1384 = icmp eq i8 %1370, %1378
  br i1 %1384, label %1385, label %1395

1385:                                             ; preds = %1367
  %1386 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1387 = trunc i32 %1383 to i8
  %1388 = shl nuw i8 %1387, 4
  %1389 = or i8 %1388, %1370
  store i8 123, ptr %2, align 4
  %1390 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1389, ptr %1390, align 1
  %1391 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1391, align 2
  %1392 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1392, align 4
  %1393 = load i8, ptr %1368, align 1
  %1394 = and i8 %1393, -16
  br label %1395

1395:                                             ; preds = %1385, %1367
  %1396 = phi i8 [ %1387, %1385 ], [ %1370, %1367 ]
  %1397 = phi i8 [ %1394, %1385 ], [ %1373, %1367 ]
  %1398 = phi i16 [ 4, %1385 ], [ 2, %1367 ]
  %1399 = phi ptr [ %1386, %1385 ], [ %2, %1367 ]
  %1400 = getelementptr %struct.bpf_insn, ptr %1399, i32 1
  %1401 = or i8 %1397, %1396
  store i8 113, ptr %1399, align 4
  %1402 = getelementptr inbounds i8, ptr %1399, i32 1
  store i8 %1401, ptr %1402, align 1
  %1403 = getelementptr inbounds i8, ptr %1399, i32 2
  store i16 33, ptr %1403, align 2
  %1404 = getelementptr inbounds i8, ptr %1399, i32 4
  store i32 0, ptr %1404, align 4
  %1405 = getelementptr %struct.bpf_insn, ptr %1399, i32 2
  store i8 21, ptr %1400, align 4
  %1406 = getelementptr %struct.bpf_insn, ptr %1399, i32 1, i32 1
  store i8 %1396, ptr %1406, align 1
  %1407 = getelementptr %struct.bpf_insn, ptr %1399, i32 1, i32 2
  store i16 %1398, ptr %1407, align 2
  %1408 = getelementptr %struct.bpf_insn, ptr %1399, i32 1, i32 3
  store i32 0, ptr %1408, align 4
  %1409 = load i8, ptr %1368, align 1
  %1410 = and i8 %1409, 15
  %1411 = lshr i8 %1409, 4
  %1412 = icmp eq i8 %1410, %1411
  br i1 %1412, label %1413, label %1422

1413:                                             ; preds = %1395
  %1414 = getelementptr %struct.bpf_insn, ptr %1399, i32 3
  %1415 = trunc i32 %1383 to i8
  %1416 = and i8 %1409, -16
  %1417 = or i8 %1416, %1415
  store i8 121, ptr %1405, align 4
  %1418 = getelementptr %struct.bpf_insn, ptr %1399, i32 2, i32 1
  store i8 %1417, ptr %1418, align 1
  %1419 = getelementptr %struct.bpf_insn, ptr %1399, i32 2, i32 2
  store i16 40, ptr %1419, align 2
  %1420 = getelementptr %struct.bpf_insn, ptr %1399, i32 2, i32 3
  store i32 0, ptr %1420, align 4
  %1421 = load i8, ptr %1368, align 1
  br label %1422

1422:                                             ; preds = %1413, %1395
  %1423 = phi i8 [ %1421, %1413 ], [ %1409, %1395 ]
  %1424 = phi ptr [ %1414, %1413 ], [ %1405, %1395 ]
  %1425 = getelementptr %struct.bpf_insn, ptr %1424, i32 1
  store i8 97, ptr %1424, align 4
  %1426 = getelementptr inbounds i8, ptr %1424, i32 1
  store i8 %1423, ptr %1426, align 1
  %1427 = getelementptr inbounds i8, ptr %1424, i32 2
  store i16 0, ptr %1427, align 2
  %1428 = getelementptr inbounds i8, ptr %1424, i32 4
  store i32 0, ptr %1428, align 4
  %1429 = getelementptr %struct.bpf_insn, ptr %1424, i32 2
  %1430 = load i8, ptr %1368, align 1
  %1431 = and i8 %1430, 15
  %1432 = shl i8 %1430, 4
  %1433 = or i8 %1431, %1432
  store i8 97, ptr %1425, align 4
  %1434 = getelementptr %struct.bpf_insn, ptr %1424, i32 1, i32 1
  store i8 %1433, ptr %1434, align 1
  %1435 = getelementptr %struct.bpf_insn, ptr %1424, i32 1, i32 2
  store i16 1272, ptr %1435, align 2
  %1436 = getelementptr %struct.bpf_insn, ptr %1424, i32 1, i32 3
  store i32 0, ptr %1436, align 4
  %1437 = load i8, ptr %1368, align 1
  %1438 = and i8 %1437, 15
  %1439 = lshr i8 %1437, 4
  %1440 = icmp eq i8 %1438, %1439
  br i1 %1440, label %1441, label %2386

1441:                                             ; preds = %1422
  %1442 = getelementptr %struct.bpf_insn, ptr %1424, i32 3
  store i8 5, ptr %1429, align 4
  %1443 = getelementptr %struct.bpf_insn, ptr %1424, i32 2, i32 1
  store i8 0, ptr %1443, align 1
  %1444 = getelementptr %struct.bpf_insn, ptr %1424, i32 2, i32 2
  store i16 1, ptr %1444, align 2
  %1445 = getelementptr %struct.bpf_insn, ptr %1424, i32 2, i32 3
  store i32 0, ptr %1445, align 4
  %1446 = getelementptr %struct.bpf_insn, ptr %1424, i32 4
  %1447 = trunc i32 %1383 to i8
  %1448 = load i8, ptr %1368, align 1
  %1449 = and i8 %1448, -16
  %1450 = or i8 %1449, %1447
  store i8 121, ptr %1442, align 4
  %1451 = getelementptr %struct.bpf_insn, ptr %1424, i32 3, i32 1
  store i8 %1450, ptr %1451, align 1
  %1452 = getelementptr %struct.bpf_insn, ptr %1424, i32 3, i32 2
  store i16 40, ptr %1452, align 2
  %1453 = getelementptr %struct.bpf_insn, ptr %1424, i32 3, i32 3
  store i32 0, ptr %1453, align 4
  br label %2386

1454:                                             ; preds = %5
  %1455 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1456 = load i8, ptr %1455, align 1
  %1457 = and i8 %1456, 15
  %1458 = zext i8 %1457 to i32
  %1459 = icmp eq i8 %1457, 9
  %1460 = and i8 %1456, -16
  %1461 = icmp eq i8 %1460, -112
  %1462 = or i1 %1459, %1461
  %1463 = select i1 %1462, i32 8, i32 9
  %1464 = icmp eq i32 %1463, %1458
  %1465 = lshr i8 %1456, 4
  %1466 = zext i8 %1465 to i32
  %1467 = icmp eq i32 %1463, %1466
  %1468 = select i1 %1464, i1 true, i1 %1467
  %1469 = sext i1 %1468 to i32
  %1470 = add nsw i32 %1463, %1469
  %1471 = icmp eq i8 %1457, %1465
  br i1 %1471, label %1472, label %1482

1472:                                             ; preds = %1454
  %1473 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1474 = trunc i32 %1470 to i8
  %1475 = shl nuw i8 %1474, 4
  %1476 = or i8 %1475, %1457
  store i8 123, ptr %2, align 4
  %1477 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1476, ptr %1477, align 1
  %1478 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1478, align 2
  %1479 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1479, align 4
  %1480 = load i8, ptr %1455, align 1
  %1481 = and i8 %1480, -16
  br label %1482

1482:                                             ; preds = %1472, %1454
  %1483 = phi i8 [ %1474, %1472 ], [ %1457, %1454 ]
  %1484 = phi i8 [ %1481, %1472 ], [ %1460, %1454 ]
  %1485 = phi i16 [ 4, %1472 ], [ 2, %1454 ]
  %1486 = phi ptr [ %1473, %1472 ], [ %2, %1454 ]
  %1487 = getelementptr %struct.bpf_insn, ptr %1486, i32 1
  %1488 = or i8 %1484, %1483
  store i8 113, ptr %1486, align 4
  %1489 = getelementptr inbounds i8, ptr %1486, i32 1
  store i8 %1488, ptr %1489, align 1
  %1490 = getelementptr inbounds i8, ptr %1486, i32 2
  store i16 33, ptr %1490, align 2
  %1491 = getelementptr inbounds i8, ptr %1486, i32 4
  store i32 0, ptr %1491, align 4
  %1492 = getelementptr %struct.bpf_insn, ptr %1486, i32 2
  store i8 21, ptr %1487, align 4
  %1493 = getelementptr %struct.bpf_insn, ptr %1486, i32 1, i32 1
  store i8 %1483, ptr %1493, align 1
  %1494 = getelementptr %struct.bpf_insn, ptr %1486, i32 1, i32 2
  store i16 %1485, ptr %1494, align 2
  %1495 = getelementptr %struct.bpf_insn, ptr %1486, i32 1, i32 3
  store i32 0, ptr %1495, align 4
  %1496 = load i8, ptr %1455, align 1
  %1497 = and i8 %1496, 15
  %1498 = lshr i8 %1496, 4
  %1499 = icmp eq i8 %1497, %1498
  br i1 %1499, label %1500, label %1509

1500:                                             ; preds = %1482
  %1501 = getelementptr %struct.bpf_insn, ptr %1486, i32 3
  %1502 = trunc i32 %1470 to i8
  %1503 = and i8 %1496, -16
  %1504 = or i8 %1503, %1502
  store i8 121, ptr %1492, align 4
  %1505 = getelementptr %struct.bpf_insn, ptr %1486, i32 2, i32 1
  store i8 %1504, ptr %1505, align 1
  %1506 = getelementptr %struct.bpf_insn, ptr %1486, i32 2, i32 2
  store i16 40, ptr %1506, align 2
  %1507 = getelementptr %struct.bpf_insn, ptr %1486, i32 2, i32 3
  store i32 0, ptr %1507, align 4
  %1508 = load i8, ptr %1455, align 1
  br label %1509

1509:                                             ; preds = %1500, %1482
  %1510 = phi i8 [ %1508, %1500 ], [ %1496, %1482 ]
  %1511 = phi ptr [ %1501, %1500 ], [ %1492, %1482 ]
  %1512 = getelementptr %struct.bpf_insn, ptr %1511, i32 1
  store i8 97, ptr %1511, align 4
  %1513 = getelementptr inbounds i8, ptr %1511, i32 1
  store i8 %1510, ptr %1513, align 1
  %1514 = getelementptr inbounds i8, ptr %1511, i32 2
  store i16 0, ptr %1514, align 2
  %1515 = getelementptr inbounds i8, ptr %1511, i32 4
  store i32 0, ptr %1515, align 4
  %1516 = getelementptr %struct.bpf_insn, ptr %1511, i32 2
  %1517 = load i8, ptr %1455, align 1
  %1518 = and i8 %1517, 15
  %1519 = shl i8 %1517, 4
  %1520 = or i8 %1518, %1519
  store i8 97, ptr %1512, align 4
  %1521 = getelementptr %struct.bpf_insn, ptr %1511, i32 1, i32 1
  store i8 %1520, ptr %1521, align 1
  %1522 = getelementptr %struct.bpf_insn, ptr %1511, i32 1, i32 2
  store i16 1648, ptr %1522, align 2
  %1523 = getelementptr %struct.bpf_insn, ptr %1511, i32 1, i32 3
  store i32 0, ptr %1523, align 4
  %1524 = load i8, ptr %1455, align 1
  %1525 = and i8 %1524, 15
  %1526 = lshr i8 %1524, 4
  %1527 = icmp eq i8 %1525, %1526
  br i1 %1527, label %1528, label %2386

1528:                                             ; preds = %1509
  %1529 = getelementptr %struct.bpf_insn, ptr %1511, i32 3
  store i8 5, ptr %1516, align 4
  %1530 = getelementptr %struct.bpf_insn, ptr %1511, i32 2, i32 1
  store i8 0, ptr %1530, align 1
  %1531 = getelementptr %struct.bpf_insn, ptr %1511, i32 2, i32 2
  store i16 1, ptr %1531, align 2
  %1532 = getelementptr %struct.bpf_insn, ptr %1511, i32 2, i32 3
  store i32 0, ptr %1532, align 4
  %1533 = getelementptr %struct.bpf_insn, ptr %1511, i32 4
  %1534 = trunc i32 %1470 to i8
  %1535 = load i8, ptr %1455, align 1
  %1536 = and i8 %1535, -16
  %1537 = or i8 %1536, %1534
  store i8 121, ptr %1529, align 4
  %1538 = getelementptr %struct.bpf_insn, ptr %1511, i32 3, i32 1
  store i8 %1537, ptr %1538, align 1
  %1539 = getelementptr %struct.bpf_insn, ptr %1511, i32 3, i32 2
  store i16 40, ptr %1539, align 2
  %1540 = getelementptr %struct.bpf_insn, ptr %1511, i32 3, i32 3
  store i32 0, ptr %1540, align 4
  br label %2386

1541:                                             ; preds = %5
  %1542 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1543 = load i8, ptr %1542, align 1
  %1544 = and i8 %1543, 15
  %1545 = zext i8 %1544 to i32
  %1546 = icmp eq i8 %1544, 9
  %1547 = and i8 %1543, -16
  %1548 = icmp eq i8 %1547, -112
  %1549 = or i1 %1546, %1548
  %1550 = select i1 %1549, i32 8, i32 9
  %1551 = icmp eq i32 %1550, %1545
  %1552 = lshr i8 %1543, 4
  %1553 = zext i8 %1552 to i32
  %1554 = icmp eq i32 %1550, %1553
  %1555 = select i1 %1551, i1 true, i1 %1554
  %1556 = sext i1 %1555 to i32
  %1557 = add nsw i32 %1550, %1556
  %1558 = icmp eq i8 %1544, %1552
  br i1 %1558, label %1559, label %1569

1559:                                             ; preds = %1541
  %1560 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1561 = trunc i32 %1557 to i8
  %1562 = shl nuw i8 %1561, 4
  %1563 = or i8 %1562, %1544
  store i8 123, ptr %2, align 4
  %1564 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1563, ptr %1564, align 1
  %1565 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1565, align 2
  %1566 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1566, align 4
  %1567 = load i8, ptr %1542, align 1
  %1568 = and i8 %1567, -16
  br label %1569

1569:                                             ; preds = %1559, %1541
  %1570 = phi i8 [ %1561, %1559 ], [ %1544, %1541 ]
  %1571 = phi i8 [ %1568, %1559 ], [ %1547, %1541 ]
  %1572 = phi i16 [ 4, %1559 ], [ 2, %1541 ]
  %1573 = phi ptr [ %1560, %1559 ], [ %2, %1541 ]
  %1574 = getelementptr %struct.bpf_insn, ptr %1573, i32 1
  %1575 = or i8 %1571, %1570
  store i8 113, ptr %1573, align 4
  %1576 = getelementptr inbounds i8, ptr %1573, i32 1
  store i8 %1575, ptr %1576, align 1
  %1577 = getelementptr inbounds i8, ptr %1573, i32 2
  store i16 33, ptr %1577, align 2
  %1578 = getelementptr inbounds i8, ptr %1573, i32 4
  store i32 0, ptr %1578, align 4
  %1579 = getelementptr %struct.bpf_insn, ptr %1573, i32 2
  store i8 21, ptr %1574, align 4
  %1580 = getelementptr %struct.bpf_insn, ptr %1573, i32 1, i32 1
  store i8 %1570, ptr %1580, align 1
  %1581 = getelementptr %struct.bpf_insn, ptr %1573, i32 1, i32 2
  store i16 %1572, ptr %1581, align 2
  %1582 = getelementptr %struct.bpf_insn, ptr %1573, i32 1, i32 3
  store i32 0, ptr %1582, align 4
  %1583 = load i8, ptr %1542, align 1
  %1584 = and i8 %1583, 15
  %1585 = lshr i8 %1583, 4
  %1586 = icmp eq i8 %1584, %1585
  br i1 %1586, label %1587, label %1596

1587:                                             ; preds = %1569
  %1588 = getelementptr %struct.bpf_insn, ptr %1573, i32 3
  %1589 = trunc i32 %1557 to i8
  %1590 = and i8 %1583, -16
  %1591 = or i8 %1590, %1589
  store i8 121, ptr %1579, align 4
  %1592 = getelementptr %struct.bpf_insn, ptr %1573, i32 2, i32 1
  store i8 %1591, ptr %1592, align 1
  %1593 = getelementptr %struct.bpf_insn, ptr %1573, i32 2, i32 2
  store i16 40, ptr %1593, align 2
  %1594 = getelementptr %struct.bpf_insn, ptr %1573, i32 2, i32 3
  store i32 0, ptr %1594, align 4
  %1595 = load i8, ptr %1542, align 1
  br label %1596

1596:                                             ; preds = %1587, %1569
  %1597 = phi i8 [ %1595, %1587 ], [ %1583, %1569 ]
  %1598 = phi ptr [ %1588, %1587 ], [ %1579, %1569 ]
  %1599 = getelementptr %struct.bpf_insn, ptr %1598, i32 1
  store i8 97, ptr %1598, align 4
  %1600 = getelementptr inbounds i8, ptr %1598, i32 1
  store i8 %1597, ptr %1600, align 1
  %1601 = getelementptr inbounds i8, ptr %1598, i32 2
  store i16 0, ptr %1601, align 2
  %1602 = getelementptr inbounds i8, ptr %1598, i32 4
  store i32 0, ptr %1602, align 4
  %1603 = getelementptr %struct.bpf_insn, ptr %1598, i32 2
  %1604 = load i8, ptr %1542, align 1
  %1605 = and i8 %1604, 15
  %1606 = shl i8 %1604, 4
  %1607 = or i8 %1605, %1606
  store i8 97, ptr %1599, align 4
  %1608 = getelementptr %struct.bpf_insn, ptr %1598, i32 1, i32 1
  store i8 %1607, ptr %1608, align 1
  %1609 = getelementptr %struct.bpf_insn, ptr %1598, i32 1, i32 2
  store i16 1024, ptr %1609, align 2
  %1610 = getelementptr %struct.bpf_insn, ptr %1598, i32 1, i32 3
  store i32 0, ptr %1610, align 4
  %1611 = load i8, ptr %1542, align 1
  %1612 = and i8 %1611, 15
  %1613 = lshr i8 %1611, 4
  %1614 = icmp eq i8 %1612, %1613
  br i1 %1614, label %1615, label %2386

1615:                                             ; preds = %1596
  %1616 = getelementptr %struct.bpf_insn, ptr %1598, i32 3
  store i8 5, ptr %1603, align 4
  %1617 = getelementptr %struct.bpf_insn, ptr %1598, i32 2, i32 1
  store i8 0, ptr %1617, align 1
  %1618 = getelementptr %struct.bpf_insn, ptr %1598, i32 2, i32 2
  store i16 1, ptr %1618, align 2
  %1619 = getelementptr %struct.bpf_insn, ptr %1598, i32 2, i32 3
  store i32 0, ptr %1619, align 4
  %1620 = getelementptr %struct.bpf_insn, ptr %1598, i32 4
  %1621 = trunc i32 %1557 to i8
  %1622 = load i8, ptr %1542, align 1
  %1623 = and i8 %1622, -16
  %1624 = or i8 %1623, %1621
  store i8 121, ptr %1616, align 4
  %1625 = getelementptr %struct.bpf_insn, ptr %1598, i32 3, i32 1
  store i8 %1624, ptr %1625, align 1
  %1626 = getelementptr %struct.bpf_insn, ptr %1598, i32 3, i32 2
  store i16 40, ptr %1626, align 2
  %1627 = getelementptr %struct.bpf_insn, ptr %1598, i32 3, i32 3
  store i32 0, ptr %1627, align 4
  br label %2386

1628:                                             ; preds = %5
  %1629 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1630 = load i8, ptr %1629, align 1
  %1631 = and i8 %1630, 15
  %1632 = zext i8 %1631 to i32
  %1633 = icmp eq i8 %1631, 9
  %1634 = and i8 %1630, -16
  %1635 = icmp eq i8 %1634, -112
  %1636 = or i1 %1633, %1635
  %1637 = select i1 %1636, i32 8, i32 9
  %1638 = icmp eq i32 %1637, %1632
  %1639 = lshr i8 %1630, 4
  %1640 = zext i8 %1639 to i32
  %1641 = icmp eq i32 %1637, %1640
  %1642 = select i1 %1638, i1 true, i1 %1641
  %1643 = sext i1 %1642 to i32
  %1644 = add nsw i32 %1637, %1643
  %1645 = icmp eq i8 %1631, %1639
  br i1 %1645, label %1646, label %1656

1646:                                             ; preds = %1628
  %1647 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1648 = trunc i32 %1644 to i8
  %1649 = shl nuw i8 %1648, 4
  %1650 = or i8 %1649, %1631
  store i8 123, ptr %2, align 4
  %1651 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1650, ptr %1651, align 1
  %1652 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1652, align 2
  %1653 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1653, align 4
  %1654 = load i8, ptr %1629, align 1
  %1655 = and i8 %1654, -16
  br label %1656

1656:                                             ; preds = %1646, %1628
  %1657 = phi i8 [ %1648, %1646 ], [ %1631, %1628 ]
  %1658 = phi i8 [ %1655, %1646 ], [ %1634, %1628 ]
  %1659 = phi i16 [ 4, %1646 ], [ 2, %1628 ]
  %1660 = phi ptr [ %1647, %1646 ], [ %2, %1628 ]
  %1661 = getelementptr %struct.bpf_insn, ptr %1660, i32 1
  %1662 = or i8 %1658, %1657
  store i8 113, ptr %1660, align 4
  %1663 = getelementptr inbounds i8, ptr %1660, i32 1
  store i8 %1662, ptr %1663, align 1
  %1664 = getelementptr inbounds i8, ptr %1660, i32 2
  store i16 33, ptr %1664, align 2
  %1665 = getelementptr inbounds i8, ptr %1660, i32 4
  store i32 0, ptr %1665, align 4
  %1666 = getelementptr %struct.bpf_insn, ptr %1660, i32 2
  store i8 21, ptr %1661, align 4
  %1667 = getelementptr %struct.bpf_insn, ptr %1660, i32 1, i32 1
  store i8 %1657, ptr %1667, align 1
  %1668 = getelementptr %struct.bpf_insn, ptr %1660, i32 1, i32 2
  store i16 %1659, ptr %1668, align 2
  %1669 = getelementptr %struct.bpf_insn, ptr %1660, i32 1, i32 3
  store i32 0, ptr %1669, align 4
  %1670 = load i8, ptr %1629, align 1
  %1671 = and i8 %1670, 15
  %1672 = lshr i8 %1670, 4
  %1673 = icmp eq i8 %1671, %1672
  br i1 %1673, label %1674, label %1683

1674:                                             ; preds = %1656
  %1675 = getelementptr %struct.bpf_insn, ptr %1660, i32 3
  %1676 = trunc i32 %1644 to i8
  %1677 = and i8 %1670, -16
  %1678 = or i8 %1677, %1676
  store i8 121, ptr %1666, align 4
  %1679 = getelementptr %struct.bpf_insn, ptr %1660, i32 2, i32 1
  store i8 %1678, ptr %1679, align 1
  %1680 = getelementptr %struct.bpf_insn, ptr %1660, i32 2, i32 2
  store i16 40, ptr %1680, align 2
  %1681 = getelementptr %struct.bpf_insn, ptr %1660, i32 2, i32 3
  store i32 0, ptr %1681, align 4
  %1682 = load i8, ptr %1629, align 1
  br label %1683

1683:                                             ; preds = %1674, %1656
  %1684 = phi i8 [ %1682, %1674 ], [ %1670, %1656 ]
  %1685 = phi ptr [ %1675, %1674 ], [ %1666, %1656 ]
  %1686 = getelementptr %struct.bpf_insn, ptr %1685, i32 1
  store i8 97, ptr %1685, align 4
  %1687 = getelementptr inbounds i8, ptr %1685, i32 1
  store i8 %1684, ptr %1687, align 1
  %1688 = getelementptr inbounds i8, ptr %1685, i32 2
  store i16 0, ptr %1688, align 2
  %1689 = getelementptr inbounds i8, ptr %1685, i32 4
  store i32 0, ptr %1689, align 4
  %1690 = getelementptr %struct.bpf_insn, ptr %1685, i32 2
  %1691 = load i8, ptr %1629, align 1
  %1692 = and i8 %1691, 15
  %1693 = shl i8 %1691, 4
  %1694 = or i8 %1692, %1693
  store i8 97, ptr %1686, align 4
  %1695 = getelementptr %struct.bpf_insn, ptr %1685, i32 1, i32 1
  store i8 %1694, ptr %1695, align 1
  %1696 = getelementptr %struct.bpf_insn, ptr %1685, i32 1, i32 2
  store i16 1028, ptr %1696, align 2
  %1697 = getelementptr %struct.bpf_insn, ptr %1685, i32 1, i32 3
  store i32 0, ptr %1697, align 4
  %1698 = load i8, ptr %1629, align 1
  %1699 = and i8 %1698, 15
  %1700 = lshr i8 %1698, 4
  %1701 = icmp eq i8 %1699, %1700
  br i1 %1701, label %1702, label %2386

1702:                                             ; preds = %1683
  %1703 = getelementptr %struct.bpf_insn, ptr %1685, i32 3
  store i8 5, ptr %1690, align 4
  %1704 = getelementptr %struct.bpf_insn, ptr %1685, i32 2, i32 1
  store i8 0, ptr %1704, align 1
  %1705 = getelementptr %struct.bpf_insn, ptr %1685, i32 2, i32 2
  store i16 1, ptr %1705, align 2
  %1706 = getelementptr %struct.bpf_insn, ptr %1685, i32 2, i32 3
  store i32 0, ptr %1706, align 4
  %1707 = getelementptr %struct.bpf_insn, ptr %1685, i32 4
  %1708 = trunc i32 %1644 to i8
  %1709 = load i8, ptr %1629, align 1
  %1710 = and i8 %1709, -16
  %1711 = or i8 %1710, %1708
  store i8 121, ptr %1703, align 4
  %1712 = getelementptr %struct.bpf_insn, ptr %1685, i32 3, i32 1
  store i8 %1711, ptr %1712, align 1
  %1713 = getelementptr %struct.bpf_insn, ptr %1685, i32 3, i32 2
  store i16 40, ptr %1713, align 2
  %1714 = getelementptr %struct.bpf_insn, ptr %1685, i32 3, i32 3
  store i32 0, ptr %1714, align 4
  br label %2386

1715:                                             ; preds = %5
  %1716 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1717 = load i8, ptr %1716, align 1
  %1718 = and i8 %1717, 15
  %1719 = zext i8 %1718 to i32
  %1720 = icmp eq i8 %1718, 9
  %1721 = and i8 %1717, -16
  %1722 = icmp eq i8 %1721, -112
  %1723 = or i1 %1720, %1722
  %1724 = select i1 %1723, i32 8, i32 9
  %1725 = icmp eq i32 %1724, %1719
  %1726 = lshr i8 %1717, 4
  %1727 = zext i8 %1726 to i32
  %1728 = icmp eq i32 %1724, %1727
  %1729 = select i1 %1725, i1 true, i1 %1728
  %1730 = sext i1 %1729 to i32
  %1731 = add nsw i32 %1724, %1730
  %1732 = icmp eq i8 %1718, %1726
  br i1 %1732, label %1733, label %1743

1733:                                             ; preds = %1715
  %1734 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1735 = trunc i32 %1731 to i8
  %1736 = shl nuw i8 %1735, 4
  %1737 = or i8 %1736, %1718
  store i8 123, ptr %2, align 4
  %1738 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1737, ptr %1738, align 1
  %1739 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1739, align 2
  %1740 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1740, align 4
  %1741 = load i8, ptr %1716, align 1
  %1742 = and i8 %1741, -16
  br label %1743

1743:                                             ; preds = %1733, %1715
  %1744 = phi i8 [ %1735, %1733 ], [ %1718, %1715 ]
  %1745 = phi i8 [ %1742, %1733 ], [ %1721, %1715 ]
  %1746 = phi i16 [ 4, %1733 ], [ 2, %1715 ]
  %1747 = phi ptr [ %1734, %1733 ], [ %2, %1715 ]
  %1748 = getelementptr %struct.bpf_insn, ptr %1747, i32 1
  %1749 = or i8 %1745, %1744
  store i8 113, ptr %1747, align 4
  %1750 = getelementptr inbounds i8, ptr %1747, i32 1
  store i8 %1749, ptr %1750, align 1
  %1751 = getelementptr inbounds i8, ptr %1747, i32 2
  store i16 33, ptr %1751, align 2
  %1752 = getelementptr inbounds i8, ptr %1747, i32 4
  store i32 0, ptr %1752, align 4
  %1753 = getelementptr %struct.bpf_insn, ptr %1747, i32 2
  store i8 21, ptr %1748, align 4
  %1754 = getelementptr %struct.bpf_insn, ptr %1747, i32 1, i32 1
  store i8 %1744, ptr %1754, align 1
  %1755 = getelementptr %struct.bpf_insn, ptr %1747, i32 1, i32 2
  store i16 %1746, ptr %1755, align 2
  %1756 = getelementptr %struct.bpf_insn, ptr %1747, i32 1, i32 3
  store i32 0, ptr %1756, align 4
  %1757 = load i8, ptr %1716, align 1
  %1758 = and i8 %1757, 15
  %1759 = lshr i8 %1757, 4
  %1760 = icmp eq i8 %1758, %1759
  br i1 %1760, label %1761, label %1770

1761:                                             ; preds = %1743
  %1762 = getelementptr %struct.bpf_insn, ptr %1747, i32 3
  %1763 = trunc i32 %1731 to i8
  %1764 = and i8 %1757, -16
  %1765 = or i8 %1764, %1763
  store i8 121, ptr %1753, align 4
  %1766 = getelementptr %struct.bpf_insn, ptr %1747, i32 2, i32 1
  store i8 %1765, ptr %1766, align 1
  %1767 = getelementptr %struct.bpf_insn, ptr %1747, i32 2, i32 2
  store i16 40, ptr %1767, align 2
  %1768 = getelementptr %struct.bpf_insn, ptr %1747, i32 2, i32 3
  store i32 0, ptr %1768, align 4
  %1769 = load i8, ptr %1716, align 1
  br label %1770

1770:                                             ; preds = %1761, %1743
  %1771 = phi i8 [ %1769, %1761 ], [ %1757, %1743 ]
  %1772 = phi ptr [ %1762, %1761 ], [ %1753, %1743 ]
  %1773 = getelementptr %struct.bpf_insn, ptr %1772, i32 1
  store i8 97, ptr %1772, align 4
  %1774 = getelementptr inbounds i8, ptr %1772, i32 1
  store i8 %1771, ptr %1774, align 1
  %1775 = getelementptr inbounds i8, ptr %1772, i32 2
  store i16 0, ptr %1775, align 2
  %1776 = getelementptr inbounds i8, ptr %1772, i32 4
  store i32 0, ptr %1776, align 4
  %1777 = getelementptr %struct.bpf_insn, ptr %1772, i32 2
  %1778 = load i8, ptr %1716, align 1
  %1779 = and i8 %1778, 15
  %1780 = shl i8 %1778, 4
  %1781 = or i8 %1779, %1780
  store i8 97, ptr %1773, align 4
  %1782 = getelementptr %struct.bpf_insn, ptr %1772, i32 1, i32 1
  store i8 %1781, ptr %1782, align 1
  %1783 = getelementptr %struct.bpf_insn, ptr %1772, i32 1, i32 2
  store i16 1048, ptr %1783, align 2
  %1784 = getelementptr %struct.bpf_insn, ptr %1772, i32 1, i32 3
  store i32 0, ptr %1784, align 4
  %1785 = load i8, ptr %1716, align 1
  %1786 = and i8 %1785, 15
  %1787 = lshr i8 %1785, 4
  %1788 = icmp eq i8 %1786, %1787
  br i1 %1788, label %1789, label %2386

1789:                                             ; preds = %1770
  %1790 = getelementptr %struct.bpf_insn, ptr %1772, i32 3
  store i8 5, ptr %1777, align 4
  %1791 = getelementptr %struct.bpf_insn, ptr %1772, i32 2, i32 1
  store i8 0, ptr %1791, align 1
  %1792 = getelementptr %struct.bpf_insn, ptr %1772, i32 2, i32 2
  store i16 1, ptr %1792, align 2
  %1793 = getelementptr %struct.bpf_insn, ptr %1772, i32 2, i32 3
  store i32 0, ptr %1793, align 4
  %1794 = getelementptr %struct.bpf_insn, ptr %1772, i32 4
  %1795 = trunc i32 %1731 to i8
  %1796 = load i8, ptr %1716, align 1
  %1797 = and i8 %1796, -16
  %1798 = or i8 %1797, %1795
  store i8 121, ptr %1790, align 4
  %1799 = getelementptr %struct.bpf_insn, ptr %1772, i32 3, i32 1
  store i8 %1798, ptr %1799, align 1
  %1800 = getelementptr %struct.bpf_insn, ptr %1772, i32 3, i32 2
  store i16 40, ptr %1800, align 2
  %1801 = getelementptr %struct.bpf_insn, ptr %1772, i32 3, i32 3
  store i32 0, ptr %1801, align 4
  br label %2386

1802:                                             ; preds = %5
  %1803 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1804 = load i8, ptr %1803, align 1
  %1805 = and i8 %1804, 15
  %1806 = zext i8 %1805 to i32
  %1807 = icmp eq i8 %1805, 9
  %1808 = and i8 %1804, -16
  %1809 = icmp eq i8 %1808, -112
  %1810 = or i1 %1807, %1809
  %1811 = select i1 %1810, i32 8, i32 9
  %1812 = icmp eq i32 %1811, %1806
  %1813 = lshr i8 %1804, 4
  %1814 = zext i8 %1813 to i32
  %1815 = icmp eq i32 %1811, %1814
  %1816 = select i1 %1812, i1 true, i1 %1815
  %1817 = sext i1 %1816 to i32
  %1818 = add nsw i32 %1811, %1817
  %1819 = icmp eq i8 %1805, %1813
  br i1 %1819, label %1820, label %1830

1820:                                             ; preds = %1802
  %1821 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1822 = trunc i32 %1818 to i8
  %1823 = shl nuw i8 %1822, 4
  %1824 = or i8 %1823, %1805
  store i8 123, ptr %2, align 4
  %1825 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1824, ptr %1825, align 1
  %1826 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1826, align 2
  %1827 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1827, align 4
  %1828 = load i8, ptr %1803, align 1
  %1829 = and i8 %1828, -16
  br label %1830

1830:                                             ; preds = %1820, %1802
  %1831 = phi i8 [ %1822, %1820 ], [ %1805, %1802 ]
  %1832 = phi i8 [ %1829, %1820 ], [ %1808, %1802 ]
  %1833 = phi i16 [ 4, %1820 ], [ 2, %1802 ]
  %1834 = phi ptr [ %1821, %1820 ], [ %2, %1802 ]
  %1835 = getelementptr %struct.bpf_insn, ptr %1834, i32 1
  %1836 = or i8 %1832, %1831
  store i8 113, ptr %1834, align 4
  %1837 = getelementptr inbounds i8, ptr %1834, i32 1
  store i8 %1836, ptr %1837, align 1
  %1838 = getelementptr inbounds i8, ptr %1834, i32 2
  store i16 33, ptr %1838, align 2
  %1839 = getelementptr inbounds i8, ptr %1834, i32 4
  store i32 0, ptr %1839, align 4
  %1840 = getelementptr %struct.bpf_insn, ptr %1834, i32 2
  store i8 21, ptr %1835, align 4
  %1841 = getelementptr %struct.bpf_insn, ptr %1834, i32 1, i32 1
  store i8 %1831, ptr %1841, align 1
  %1842 = getelementptr %struct.bpf_insn, ptr %1834, i32 1, i32 2
  store i16 %1833, ptr %1842, align 2
  %1843 = getelementptr %struct.bpf_insn, ptr %1834, i32 1, i32 3
  store i32 0, ptr %1843, align 4
  %1844 = load i8, ptr %1803, align 1
  %1845 = and i8 %1844, 15
  %1846 = lshr i8 %1844, 4
  %1847 = icmp eq i8 %1845, %1846
  br i1 %1847, label %1848, label %1857

1848:                                             ; preds = %1830
  %1849 = getelementptr %struct.bpf_insn, ptr %1834, i32 3
  %1850 = trunc i32 %1818 to i8
  %1851 = and i8 %1844, -16
  %1852 = or i8 %1851, %1850
  store i8 121, ptr %1840, align 4
  %1853 = getelementptr %struct.bpf_insn, ptr %1834, i32 2, i32 1
  store i8 %1852, ptr %1853, align 1
  %1854 = getelementptr %struct.bpf_insn, ptr %1834, i32 2, i32 2
  store i16 40, ptr %1854, align 2
  %1855 = getelementptr %struct.bpf_insn, ptr %1834, i32 2, i32 3
  store i32 0, ptr %1855, align 4
  %1856 = load i8, ptr %1803, align 1
  br label %1857

1857:                                             ; preds = %1848, %1830
  %1858 = phi i8 [ %1856, %1848 ], [ %1844, %1830 ]
  %1859 = phi ptr [ %1849, %1848 ], [ %1840, %1830 ]
  %1860 = getelementptr %struct.bpf_insn, ptr %1859, i32 1
  store i8 97, ptr %1859, align 4
  %1861 = getelementptr inbounds i8, ptr %1859, i32 1
  store i8 %1858, ptr %1861, align 1
  %1862 = getelementptr inbounds i8, ptr %1859, i32 2
  store i16 0, ptr %1862, align 2
  %1863 = getelementptr inbounds i8, ptr %1859, i32 4
  store i32 0, ptr %1863, align 4
  %1864 = getelementptr %struct.bpf_insn, ptr %1859, i32 2
  %1865 = load i8, ptr %1803, align 1
  %1866 = and i8 %1865, 15
  %1867 = shl i8 %1865, 4
  %1868 = or i8 %1866, %1867
  store i8 97, ptr %1860, align 4
  %1869 = getelementptr %struct.bpf_insn, ptr %1859, i32 1, i32 1
  store i8 %1868, ptr %1869, align 1
  %1870 = getelementptr %struct.bpf_insn, ptr %1859, i32 1, i32 2
  store i16 1052, ptr %1870, align 2
  %1871 = getelementptr %struct.bpf_insn, ptr %1859, i32 1, i32 3
  store i32 0, ptr %1871, align 4
  %1872 = load i8, ptr %1803, align 1
  %1873 = and i8 %1872, 15
  %1874 = lshr i8 %1872, 4
  %1875 = icmp eq i8 %1873, %1874
  br i1 %1875, label %1876, label %2386

1876:                                             ; preds = %1857
  %1877 = getelementptr %struct.bpf_insn, ptr %1859, i32 3
  store i8 5, ptr %1864, align 4
  %1878 = getelementptr %struct.bpf_insn, ptr %1859, i32 2, i32 1
  store i8 0, ptr %1878, align 1
  %1879 = getelementptr %struct.bpf_insn, ptr %1859, i32 2, i32 2
  store i16 1, ptr %1879, align 2
  %1880 = getelementptr %struct.bpf_insn, ptr %1859, i32 2, i32 3
  store i32 0, ptr %1880, align 4
  %1881 = getelementptr %struct.bpf_insn, ptr %1859, i32 4
  %1882 = trunc i32 %1818 to i8
  %1883 = load i8, ptr %1803, align 1
  %1884 = and i8 %1883, -16
  %1885 = or i8 %1884, %1882
  store i8 121, ptr %1877, align 4
  %1886 = getelementptr %struct.bpf_insn, ptr %1859, i32 3, i32 1
  store i8 %1885, ptr %1886, align 1
  %1887 = getelementptr %struct.bpf_insn, ptr %1859, i32 3, i32 2
  store i16 40, ptr %1887, align 2
  %1888 = getelementptr %struct.bpf_insn, ptr %1859, i32 3, i32 3
  store i32 0, ptr %1888, align 4
  br label %2386

1889:                                             ; preds = %5
  %1890 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1891 = load i8, ptr %1890, align 1
  %1892 = and i8 %1891, 15
  %1893 = zext i8 %1892 to i32
  %1894 = icmp eq i8 %1892, 9
  %1895 = and i8 %1891, -16
  %1896 = icmp eq i8 %1895, -112
  %1897 = or i1 %1894, %1896
  %1898 = select i1 %1897, i32 8, i32 9
  %1899 = icmp eq i32 %1898, %1893
  %1900 = lshr i8 %1891, 4
  %1901 = zext i8 %1900 to i32
  %1902 = icmp eq i32 %1898, %1901
  %1903 = select i1 %1899, i1 true, i1 %1902
  %1904 = sext i1 %1903 to i32
  %1905 = add nsw i32 %1898, %1904
  %1906 = icmp eq i8 %1892, %1900
  br i1 %1906, label %1907, label %1917

1907:                                             ; preds = %1889
  %1908 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1909 = trunc i32 %1905 to i8
  %1910 = shl nuw i8 %1909, 4
  %1911 = or i8 %1910, %1892
  store i8 123, ptr %2, align 4
  %1912 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1911, ptr %1912, align 1
  %1913 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %1913, align 2
  %1914 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %1914, align 4
  %1915 = load i8, ptr %1890, align 1
  %1916 = and i8 %1915, -16
  br label %1917

1917:                                             ; preds = %1907, %1889
  %1918 = phi i8 [ %1909, %1907 ], [ %1892, %1889 ]
  %1919 = phi i8 [ %1916, %1907 ], [ %1895, %1889 ]
  %1920 = phi i16 [ 4, %1907 ], [ 2, %1889 ]
  %1921 = phi ptr [ %1908, %1907 ], [ %2, %1889 ]
  %1922 = getelementptr %struct.bpf_insn, ptr %1921, i32 1
  %1923 = or i8 %1919, %1918
  store i8 113, ptr %1921, align 4
  %1924 = getelementptr inbounds i8, ptr %1921, i32 1
  store i8 %1923, ptr %1924, align 1
  %1925 = getelementptr inbounds i8, ptr %1921, i32 2
  store i16 33, ptr %1925, align 2
  %1926 = getelementptr inbounds i8, ptr %1921, i32 4
  store i32 0, ptr %1926, align 4
  %1927 = getelementptr %struct.bpf_insn, ptr %1921, i32 2
  store i8 21, ptr %1922, align 4
  %1928 = getelementptr %struct.bpf_insn, ptr %1921, i32 1, i32 1
  store i8 %1918, ptr %1928, align 1
  %1929 = getelementptr %struct.bpf_insn, ptr %1921, i32 1, i32 2
  store i16 %1920, ptr %1929, align 2
  %1930 = getelementptr %struct.bpf_insn, ptr %1921, i32 1, i32 3
  store i32 0, ptr %1930, align 4
  %1931 = load i8, ptr %1890, align 1
  %1932 = and i8 %1931, 15
  %1933 = lshr i8 %1931, 4
  %1934 = icmp eq i8 %1932, %1933
  br i1 %1934, label %1935, label %1944

1935:                                             ; preds = %1917
  %1936 = getelementptr %struct.bpf_insn, ptr %1921, i32 3
  %1937 = trunc i32 %1905 to i8
  %1938 = and i8 %1931, -16
  %1939 = or i8 %1938, %1937
  store i8 121, ptr %1927, align 4
  %1940 = getelementptr %struct.bpf_insn, ptr %1921, i32 2, i32 1
  store i8 %1939, ptr %1940, align 1
  %1941 = getelementptr %struct.bpf_insn, ptr %1921, i32 2, i32 2
  store i16 40, ptr %1941, align 2
  %1942 = getelementptr %struct.bpf_insn, ptr %1921, i32 2, i32 3
  store i32 0, ptr %1942, align 4
  %1943 = load i8, ptr %1890, align 1
  br label %1944

1944:                                             ; preds = %1935, %1917
  %1945 = phi i8 [ %1943, %1935 ], [ %1931, %1917 ]
  %1946 = phi ptr [ %1936, %1935 ], [ %1927, %1917 ]
  %1947 = getelementptr %struct.bpf_insn, ptr %1946, i32 1
  store i8 97, ptr %1946, align 4
  %1948 = getelementptr inbounds i8, ptr %1946, i32 1
  store i8 %1945, ptr %1948, align 1
  %1949 = getelementptr inbounds i8, ptr %1946, i32 2
  store i16 0, ptr %1949, align 2
  %1950 = getelementptr inbounds i8, ptr %1946, i32 4
  store i32 0, ptr %1950, align 4
  %1951 = getelementptr %struct.bpf_insn, ptr %1946, i32 2
  %1952 = load i8, ptr %1890, align 1
  %1953 = and i8 %1952, 15
  %1954 = shl i8 %1952, 4
  %1955 = or i8 %1953, %1954
  store i8 97, ptr %1947, align 4
  %1956 = getelementptr %struct.bpf_insn, ptr %1946, i32 1, i32 1
  store i8 %1955, ptr %1956, align 1
  %1957 = getelementptr %struct.bpf_insn, ptr %1946, i32 1, i32 2
  store i16 1416, ptr %1957, align 2
  %1958 = getelementptr %struct.bpf_insn, ptr %1946, i32 1, i32 3
  store i32 0, ptr %1958, align 4
  %1959 = load i8, ptr %1890, align 1
  %1960 = and i8 %1959, 15
  %1961 = lshr i8 %1959, 4
  %1962 = icmp eq i8 %1960, %1961
  br i1 %1962, label %1963, label %2386

1963:                                             ; preds = %1944
  %1964 = getelementptr %struct.bpf_insn, ptr %1946, i32 3
  store i8 5, ptr %1951, align 4
  %1965 = getelementptr %struct.bpf_insn, ptr %1946, i32 2, i32 1
  store i8 0, ptr %1965, align 1
  %1966 = getelementptr %struct.bpf_insn, ptr %1946, i32 2, i32 2
  store i16 1, ptr %1966, align 2
  %1967 = getelementptr %struct.bpf_insn, ptr %1946, i32 2, i32 3
  store i32 0, ptr %1967, align 4
  %1968 = getelementptr %struct.bpf_insn, ptr %1946, i32 4
  %1969 = trunc i32 %1905 to i8
  %1970 = load i8, ptr %1890, align 1
  %1971 = and i8 %1970, -16
  %1972 = or i8 %1971, %1969
  store i8 121, ptr %1964, align 4
  %1973 = getelementptr %struct.bpf_insn, ptr %1946, i32 3, i32 1
  store i8 %1972, ptr %1973, align 1
  %1974 = getelementptr %struct.bpf_insn, ptr %1946, i32 3, i32 2
  store i16 40, ptr %1974, align 2
  %1975 = getelementptr %struct.bpf_insn, ptr %1946, i32 3, i32 3
  store i32 0, ptr %1975, align 4
  br label %2386

1976:                                             ; preds = %5
  %1977 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %1978 = load i8, ptr %1977, align 1
  %1979 = and i8 %1978, 15
  %1980 = zext i8 %1979 to i32
  %1981 = icmp eq i8 %1979, 9
  %1982 = and i8 %1978, -16
  %1983 = icmp eq i8 %1982, -112
  %1984 = or i1 %1981, %1983
  %1985 = select i1 %1984, i32 8, i32 9
  %1986 = icmp eq i32 %1985, %1980
  %1987 = lshr i8 %1978, 4
  %1988 = zext i8 %1987 to i32
  %1989 = icmp eq i32 %1985, %1988
  %1990 = select i1 %1986, i1 true, i1 %1989
  %1991 = sext i1 %1990 to i32
  %1992 = add nsw i32 %1985, %1991
  %1993 = icmp eq i8 %1979, %1987
  br i1 %1993, label %1994, label %2004

1994:                                             ; preds = %1976
  %1995 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %1996 = trunc i32 %1992 to i8
  %1997 = shl nuw i8 %1996, 4
  %1998 = or i8 %1997, %1979
  store i8 123, ptr %2, align 4
  %1999 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %1998, ptr %1999, align 1
  %2000 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %2000, align 2
  %2001 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2001, align 4
  %2002 = load i8, ptr %1977, align 1
  %2003 = and i8 %2002, -16
  br label %2004

2004:                                             ; preds = %1994, %1976
  %2005 = phi i8 [ %1996, %1994 ], [ %1979, %1976 ]
  %2006 = phi i8 [ %2003, %1994 ], [ %1982, %1976 ]
  %2007 = phi i16 [ 4, %1994 ], [ 2, %1976 ]
  %2008 = phi ptr [ %1995, %1994 ], [ %2, %1976 ]
  %2009 = getelementptr %struct.bpf_insn, ptr %2008, i32 1
  %2010 = or i8 %2006, %2005
  store i8 113, ptr %2008, align 4
  %2011 = getelementptr inbounds i8, ptr %2008, i32 1
  store i8 %2010, ptr %2011, align 1
  %2012 = getelementptr inbounds i8, ptr %2008, i32 2
  store i16 33, ptr %2012, align 2
  %2013 = getelementptr inbounds i8, ptr %2008, i32 4
  store i32 0, ptr %2013, align 4
  %2014 = getelementptr %struct.bpf_insn, ptr %2008, i32 2
  store i8 21, ptr %2009, align 4
  %2015 = getelementptr %struct.bpf_insn, ptr %2008, i32 1, i32 1
  store i8 %2005, ptr %2015, align 1
  %2016 = getelementptr %struct.bpf_insn, ptr %2008, i32 1, i32 2
  store i16 %2007, ptr %2016, align 2
  %2017 = getelementptr %struct.bpf_insn, ptr %2008, i32 1, i32 3
  store i32 0, ptr %2017, align 4
  %2018 = load i8, ptr %1977, align 1
  %2019 = and i8 %2018, 15
  %2020 = lshr i8 %2018, 4
  %2021 = icmp eq i8 %2019, %2020
  br i1 %2021, label %2022, label %2031

2022:                                             ; preds = %2004
  %2023 = getelementptr %struct.bpf_insn, ptr %2008, i32 3
  %2024 = trunc i32 %1992 to i8
  %2025 = and i8 %2018, -16
  %2026 = or i8 %2025, %2024
  store i8 121, ptr %2014, align 4
  %2027 = getelementptr %struct.bpf_insn, ptr %2008, i32 2, i32 1
  store i8 %2026, ptr %2027, align 1
  %2028 = getelementptr %struct.bpf_insn, ptr %2008, i32 2, i32 2
  store i16 40, ptr %2028, align 2
  %2029 = getelementptr %struct.bpf_insn, ptr %2008, i32 2, i32 3
  store i32 0, ptr %2029, align 4
  %2030 = load i8, ptr %1977, align 1
  br label %2031

2031:                                             ; preds = %2022, %2004
  %2032 = phi i8 [ %2030, %2022 ], [ %2018, %2004 ]
  %2033 = phi ptr [ %2023, %2022 ], [ %2014, %2004 ]
  %2034 = getelementptr %struct.bpf_insn, ptr %2033, i32 1
  store i8 97, ptr %2033, align 4
  %2035 = getelementptr inbounds i8, ptr %2033, i32 1
  store i8 %2032, ptr %2035, align 1
  %2036 = getelementptr inbounds i8, ptr %2033, i32 2
  store i16 0, ptr %2036, align 2
  %2037 = getelementptr inbounds i8, ptr %2033, i32 4
  store i32 0, ptr %2037, align 4
  %2038 = getelementptr %struct.bpf_insn, ptr %2033, i32 2
  %2039 = load i8, ptr %1977, align 1
  %2040 = and i8 %2039, 15
  %2041 = shl i8 %2039, 4
  %2042 = or i8 %2040, %2041
  store i8 97, ptr %2034, align 4
  %2043 = getelementptr %struct.bpf_insn, ptr %2033, i32 1, i32 1
  store i8 %2042, ptr %2043, align 1
  %2044 = getelementptr %struct.bpf_insn, ptr %2033, i32 1, i32 2
  store i16 1420, ptr %2044, align 2
  %2045 = getelementptr %struct.bpf_insn, ptr %2033, i32 1, i32 3
  store i32 0, ptr %2045, align 4
  %2046 = load i8, ptr %1977, align 1
  %2047 = and i8 %2046, 15
  %2048 = lshr i8 %2046, 4
  %2049 = icmp eq i8 %2047, %2048
  br i1 %2049, label %2050, label %2386

2050:                                             ; preds = %2031
  %2051 = getelementptr %struct.bpf_insn, ptr %2033, i32 3
  store i8 5, ptr %2038, align 4
  %2052 = getelementptr %struct.bpf_insn, ptr %2033, i32 2, i32 1
  store i8 0, ptr %2052, align 1
  %2053 = getelementptr %struct.bpf_insn, ptr %2033, i32 2, i32 2
  store i16 1, ptr %2053, align 2
  %2054 = getelementptr %struct.bpf_insn, ptr %2033, i32 2, i32 3
  store i32 0, ptr %2054, align 4
  %2055 = getelementptr %struct.bpf_insn, ptr %2033, i32 4
  %2056 = trunc i32 %1992 to i8
  %2057 = load i8, ptr %1977, align 1
  %2058 = and i8 %2057, -16
  %2059 = or i8 %2058, %2056
  store i8 121, ptr %2051, align 4
  %2060 = getelementptr %struct.bpf_insn, ptr %2033, i32 3, i32 1
  store i8 %2059, ptr %2060, align 1
  %2061 = getelementptr %struct.bpf_insn, ptr %2033, i32 3, i32 2
  store i16 40, ptr %2061, align 2
  %2062 = getelementptr %struct.bpf_insn, ptr %2033, i32 3, i32 3
  store i32 0, ptr %2062, align 4
  br label %2386

2063:                                             ; preds = %5
  %2064 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %2065 = load i8, ptr %2064, align 1
  %2066 = and i8 %2065, 15
  %2067 = zext i8 %2066 to i32
  %2068 = icmp eq i8 %2066, 9
  %2069 = and i8 %2065, -16
  %2070 = icmp eq i8 %2069, -112
  %2071 = or i1 %2068, %2070
  %2072 = select i1 %2071, i32 8, i32 9
  %2073 = icmp eq i32 %2072, %2067
  %2074 = lshr i8 %2065, 4
  %2075 = zext i8 %2074 to i32
  %2076 = icmp eq i32 %2072, %2075
  %2077 = select i1 %2073, i1 true, i1 %2076
  %2078 = sext i1 %2077 to i32
  %2079 = add nsw i32 %2072, %2078
  %2080 = icmp eq i8 %2066, %2074
  br i1 %2080, label %2081, label %2091

2081:                                             ; preds = %2063
  %2082 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %2083 = trunc i32 %2079 to i8
  %2084 = shl nuw i8 %2083, 4
  %2085 = or i8 %2084, %2066
  store i8 123, ptr %2, align 4
  %2086 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %2085, ptr %2086, align 1
  %2087 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %2087, align 2
  %2088 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2088, align 4
  %2089 = load i8, ptr %2064, align 1
  %2090 = and i8 %2089, -16
  br label %2091

2091:                                             ; preds = %2081, %2063
  %2092 = phi i8 [ %2083, %2081 ], [ %2066, %2063 ]
  %2093 = phi i8 [ %2090, %2081 ], [ %2069, %2063 ]
  %2094 = phi i16 [ 4, %2081 ], [ 2, %2063 ]
  %2095 = phi ptr [ %2082, %2081 ], [ %2, %2063 ]
  %2096 = getelementptr %struct.bpf_insn, ptr %2095, i32 1
  %2097 = or i8 %2093, %2092
  store i8 113, ptr %2095, align 4
  %2098 = getelementptr inbounds i8, ptr %2095, i32 1
  store i8 %2097, ptr %2098, align 1
  %2099 = getelementptr inbounds i8, ptr %2095, i32 2
  store i16 33, ptr %2099, align 2
  %2100 = getelementptr inbounds i8, ptr %2095, i32 4
  store i32 0, ptr %2100, align 4
  %2101 = getelementptr %struct.bpf_insn, ptr %2095, i32 2
  store i8 21, ptr %2096, align 4
  %2102 = getelementptr %struct.bpf_insn, ptr %2095, i32 1, i32 1
  store i8 %2092, ptr %2102, align 1
  %2103 = getelementptr %struct.bpf_insn, ptr %2095, i32 1, i32 2
  store i16 %2094, ptr %2103, align 2
  %2104 = getelementptr %struct.bpf_insn, ptr %2095, i32 1, i32 3
  store i32 0, ptr %2104, align 4
  %2105 = load i8, ptr %2064, align 1
  %2106 = and i8 %2105, 15
  %2107 = lshr i8 %2105, 4
  %2108 = icmp eq i8 %2106, %2107
  br i1 %2108, label %2109, label %2118

2109:                                             ; preds = %2091
  %2110 = getelementptr %struct.bpf_insn, ptr %2095, i32 3
  %2111 = trunc i32 %2079 to i8
  %2112 = and i8 %2105, -16
  %2113 = or i8 %2112, %2111
  store i8 121, ptr %2101, align 4
  %2114 = getelementptr %struct.bpf_insn, ptr %2095, i32 2, i32 1
  store i8 %2113, ptr %2114, align 1
  %2115 = getelementptr %struct.bpf_insn, ptr %2095, i32 2, i32 2
  store i16 40, ptr %2115, align 2
  %2116 = getelementptr %struct.bpf_insn, ptr %2095, i32 2, i32 3
  store i32 0, ptr %2116, align 4
  %2117 = load i8, ptr %2064, align 1
  br label %2118

2118:                                             ; preds = %2109, %2091
  %2119 = phi i8 [ %2117, %2109 ], [ %2105, %2091 ]
  %2120 = phi ptr [ %2110, %2109 ], [ %2101, %2091 ]
  %2121 = getelementptr %struct.bpf_insn, ptr %2120, i32 1
  store i8 97, ptr %2120, align 4
  %2122 = getelementptr inbounds i8, ptr %2120, i32 1
  store i8 %2119, ptr %2122, align 1
  %2123 = getelementptr inbounds i8, ptr %2120, i32 2
  store i16 0, ptr %2123, align 2
  %2124 = getelementptr inbounds i8, ptr %2120, i32 4
  store i32 0, ptr %2124, align 4
  %2125 = getelementptr %struct.bpf_insn, ptr %2120, i32 2
  %2126 = load i8, ptr %2064, align 1
  %2127 = and i8 %2126, 15
  %2128 = shl i8 %2126, 4
  %2129 = or i8 %2127, %2128
  store i8 121, ptr %2121, align 4
  %2130 = getelementptr %struct.bpf_insn, ptr %2120, i32 1, i32 1
  store i8 %2129, ptr %2130, align 1
  %2131 = getelementptr %struct.bpf_insn, ptr %2120, i32 1, i32 2
  store i16 1016, ptr %2131, align 2
  %2132 = getelementptr %struct.bpf_insn, ptr %2120, i32 1, i32 3
  store i32 0, ptr %2132, align 4
  %2133 = load i8, ptr %2064, align 1
  %2134 = and i8 %2133, 15
  %2135 = lshr i8 %2133, 4
  %2136 = icmp eq i8 %2134, %2135
  br i1 %2136, label %2137, label %2386

2137:                                             ; preds = %2118
  %2138 = getelementptr %struct.bpf_insn, ptr %2120, i32 3
  store i8 5, ptr %2125, align 4
  %2139 = getelementptr %struct.bpf_insn, ptr %2120, i32 2, i32 1
  store i8 0, ptr %2139, align 1
  %2140 = getelementptr %struct.bpf_insn, ptr %2120, i32 2, i32 2
  store i16 1, ptr %2140, align 2
  %2141 = getelementptr %struct.bpf_insn, ptr %2120, i32 2, i32 3
  store i32 0, ptr %2141, align 4
  %2142 = getelementptr %struct.bpf_insn, ptr %2120, i32 4
  %2143 = trunc i32 %2079 to i8
  %2144 = load i8, ptr %2064, align 1
  %2145 = and i8 %2144, -16
  %2146 = or i8 %2145, %2143
  store i8 121, ptr %2138, align 4
  %2147 = getelementptr %struct.bpf_insn, ptr %2120, i32 3, i32 1
  store i8 %2146, ptr %2147, align 1
  %2148 = getelementptr %struct.bpf_insn, ptr %2120, i32 3, i32 2
  store i16 40, ptr %2148, align 2
  %2149 = getelementptr %struct.bpf_insn, ptr %2120, i32 3, i32 3
  store i32 0, ptr %2149, align 4
  br label %2386

2150:                                             ; preds = %5
  %2151 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %2152 = load i8, ptr %2151, align 1
  %2153 = and i8 %2152, 15
  %2154 = zext i8 %2153 to i32
  %2155 = icmp eq i8 %2153, 9
  %2156 = and i8 %2152, -16
  %2157 = icmp eq i8 %2156, -112
  %2158 = or i1 %2155, %2157
  %2159 = select i1 %2158, i32 8, i32 9
  %2160 = icmp eq i32 %2159, %2154
  %2161 = lshr i8 %2152, 4
  %2162 = zext i8 %2161 to i32
  %2163 = icmp eq i32 %2159, %2162
  %2164 = select i1 %2160, i1 true, i1 %2163
  %2165 = sext i1 %2164 to i32
  %2166 = add nsw i32 %2159, %2165
  %2167 = icmp eq i8 %2153, %2161
  br i1 %2167, label %2168, label %2178

2168:                                             ; preds = %2150
  %2169 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %2170 = trunc i32 %2166 to i8
  %2171 = shl nuw i8 %2170, 4
  %2172 = or i8 %2171, %2153
  store i8 123, ptr %2, align 4
  %2173 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %2172, ptr %2173, align 1
  %2174 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %2174, align 2
  %2175 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2175, align 4
  %2176 = load i8, ptr %2151, align 1
  %2177 = and i8 %2176, -16
  br label %2178

2178:                                             ; preds = %2168, %2150
  %2179 = phi i8 [ %2170, %2168 ], [ %2153, %2150 ]
  %2180 = phi i8 [ %2177, %2168 ], [ %2156, %2150 ]
  %2181 = phi i16 [ 4, %2168 ], [ 2, %2150 ]
  %2182 = phi ptr [ %2169, %2168 ], [ %2, %2150 ]
  %2183 = getelementptr %struct.bpf_insn, ptr %2182, i32 1
  %2184 = or i8 %2180, %2179
  store i8 113, ptr %2182, align 4
  %2185 = getelementptr inbounds i8, ptr %2182, i32 1
  store i8 %2184, ptr %2185, align 1
  %2186 = getelementptr inbounds i8, ptr %2182, i32 2
  store i16 33, ptr %2186, align 2
  %2187 = getelementptr inbounds i8, ptr %2182, i32 4
  store i32 0, ptr %2187, align 4
  %2188 = getelementptr %struct.bpf_insn, ptr %2182, i32 2
  store i8 21, ptr %2183, align 4
  %2189 = getelementptr %struct.bpf_insn, ptr %2182, i32 1, i32 1
  store i8 %2179, ptr %2189, align 1
  %2190 = getelementptr %struct.bpf_insn, ptr %2182, i32 1, i32 2
  store i16 %2181, ptr %2190, align 2
  %2191 = getelementptr %struct.bpf_insn, ptr %2182, i32 1, i32 3
  store i32 0, ptr %2191, align 4
  %2192 = load i8, ptr %2151, align 1
  %2193 = and i8 %2192, 15
  %2194 = lshr i8 %2192, 4
  %2195 = icmp eq i8 %2193, %2194
  br i1 %2195, label %2196, label %2205

2196:                                             ; preds = %2178
  %2197 = getelementptr %struct.bpf_insn, ptr %2182, i32 3
  %2198 = trunc i32 %2166 to i8
  %2199 = and i8 %2192, -16
  %2200 = or i8 %2199, %2198
  store i8 121, ptr %2188, align 4
  %2201 = getelementptr %struct.bpf_insn, ptr %2182, i32 2, i32 1
  store i8 %2200, ptr %2201, align 1
  %2202 = getelementptr %struct.bpf_insn, ptr %2182, i32 2, i32 2
  store i16 40, ptr %2202, align 2
  %2203 = getelementptr %struct.bpf_insn, ptr %2182, i32 2, i32 3
  store i32 0, ptr %2203, align 4
  %2204 = load i8, ptr %2151, align 1
  br label %2205

2205:                                             ; preds = %2196, %2178
  %2206 = phi i8 [ %2204, %2196 ], [ %2192, %2178 ]
  %2207 = phi ptr [ %2197, %2196 ], [ %2188, %2178 ]
  %2208 = getelementptr %struct.bpf_insn, ptr %2207, i32 1
  store i8 97, ptr %2207, align 4
  %2209 = getelementptr inbounds i8, ptr %2207, i32 1
  store i8 %2206, ptr %2209, align 1
  %2210 = getelementptr inbounds i8, ptr %2207, i32 2
  store i16 0, ptr %2210, align 2
  %2211 = getelementptr inbounds i8, ptr %2207, i32 4
  store i32 0, ptr %2211, align 4
  %2212 = getelementptr %struct.bpf_insn, ptr %2207, i32 2
  %2213 = load i8, ptr %2151, align 1
  %2214 = and i8 %2213, 15
  %2215 = shl i8 %2213, 4
  %2216 = or i8 %2214, %2215
  store i8 121, ptr %2208, align 4
  %2217 = getelementptr %struct.bpf_insn, ptr %2207, i32 1, i32 1
  store i8 %2216, ptr %2217, align 1
  %2218 = getelementptr %struct.bpf_insn, ptr %2207, i32 1, i32 2
  store i16 1064, ptr %2218, align 2
  %2219 = getelementptr %struct.bpf_insn, ptr %2207, i32 1, i32 3
  store i32 0, ptr %2219, align 4
  %2220 = load i8, ptr %2151, align 1
  %2221 = and i8 %2220, 15
  %2222 = lshr i8 %2220, 4
  %2223 = icmp eq i8 %2221, %2222
  br i1 %2223, label %2224, label %2386

2224:                                             ; preds = %2205
  %2225 = getelementptr %struct.bpf_insn, ptr %2207, i32 3
  store i8 5, ptr %2212, align 4
  %2226 = getelementptr %struct.bpf_insn, ptr %2207, i32 2, i32 1
  store i8 0, ptr %2226, align 1
  %2227 = getelementptr %struct.bpf_insn, ptr %2207, i32 2, i32 2
  store i16 1, ptr %2227, align 2
  %2228 = getelementptr %struct.bpf_insn, ptr %2207, i32 2, i32 3
  store i32 0, ptr %2228, align 4
  %2229 = getelementptr %struct.bpf_insn, ptr %2207, i32 4
  %2230 = trunc i32 %2166 to i8
  %2231 = load i8, ptr %2151, align 1
  %2232 = and i8 %2231, -16
  %2233 = or i8 %2232, %2230
  store i8 121, ptr %2225, align 4
  %2234 = getelementptr %struct.bpf_insn, ptr %2207, i32 3, i32 1
  store i8 %2233, ptr %2234, align 1
  %2235 = getelementptr %struct.bpf_insn, ptr %2207, i32 3, i32 2
  store i16 40, ptr %2235, align 2
  %2236 = getelementptr %struct.bpf_insn, ptr %2207, i32 3, i32 3
  store i32 0, ptr %2236, align 4
  br label %2386

2237:                                             ; preds = %5
  %2238 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %2239 = load i8, ptr %2238, align 1
  %2240 = and i8 %2239, 15
  %2241 = zext i8 %2240 to i32
  %2242 = icmp eq i8 %2240, 9
  %2243 = and i8 %2239, -16
  %2244 = icmp eq i8 %2243, -112
  %2245 = or i1 %2242, %2244
  %2246 = select i1 %2245, i32 8, i32 9
  %2247 = icmp eq i32 %2246, %2241
  %2248 = lshr i8 %2239, 4
  %2249 = zext i8 %2248 to i32
  %2250 = icmp eq i32 %2246, %2249
  %2251 = select i1 %2247, i1 true, i1 %2250
  %2252 = sext i1 %2251 to i32
  %2253 = add nsw i32 %2246, %2252
  %2254 = icmp eq i8 %2240, %2248
  br i1 %2254, label %2255, label %2265

2255:                                             ; preds = %2237
  %2256 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %2257 = trunc i32 %2253 to i8
  %2258 = shl nuw i8 %2257, 4
  %2259 = or i8 %2258, %2240
  store i8 123, ptr %2, align 4
  %2260 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %2259, ptr %2260, align 1
  %2261 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 40, ptr %2261, align 2
  %2262 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2262, align 4
  %2263 = load i8, ptr %2238, align 1
  %2264 = and i8 %2263, -16
  br label %2265

2265:                                             ; preds = %2255, %2237
  %2266 = phi i8 [ %2257, %2255 ], [ %2240, %2237 ]
  %2267 = phi i8 [ %2264, %2255 ], [ %2243, %2237 ]
  %2268 = phi i16 [ 3, %2255 ], [ 1, %2237 ]
  %2269 = phi ptr [ %2256, %2255 ], [ %2, %2237 ]
  %2270 = getelementptr %struct.bpf_insn, ptr %2269, i32 1
  %2271 = or i8 %2267, %2266
  store i8 113, ptr %2269, align 4
  %2272 = getelementptr inbounds i8, ptr %2269, i32 1
  store i8 %2271, ptr %2272, align 1
  %2273 = getelementptr inbounds i8, ptr %2269, i32 2
  store i16 33, ptr %2273, align 2
  %2274 = getelementptr inbounds i8, ptr %2269, i32 4
  store i32 0, ptr %2274, align 4
  %2275 = getelementptr %struct.bpf_insn, ptr %2269, i32 2
  store i8 21, ptr %2270, align 4
  %2276 = getelementptr %struct.bpf_insn, ptr %2269, i32 1, i32 1
  store i8 %2266, ptr %2276, align 1
  %2277 = getelementptr %struct.bpf_insn, ptr %2269, i32 1, i32 2
  store i16 %2268, ptr %2277, align 2
  %2278 = getelementptr %struct.bpf_insn, ptr %2269, i32 1, i32 3
  store i32 0, ptr %2278, align 4
  %2279 = load i8, ptr %2238, align 1
  %2280 = and i8 %2279, 15
  %2281 = lshr i8 %2279, 4
  %2282 = icmp eq i8 %2280, %2281
  br i1 %2282, label %2283, label %2292

2283:                                             ; preds = %2265
  %2284 = getelementptr %struct.bpf_insn, ptr %2269, i32 3
  %2285 = trunc i32 %2253 to i8
  %2286 = and i8 %2279, -16
  %2287 = or i8 %2286, %2285
  store i8 121, ptr %2275, align 4
  %2288 = getelementptr %struct.bpf_insn, ptr %2269, i32 2, i32 1
  store i8 %2287, ptr %2288, align 1
  %2289 = getelementptr %struct.bpf_insn, ptr %2269, i32 2, i32 2
  store i16 40, ptr %2289, align 2
  %2290 = getelementptr %struct.bpf_insn, ptr %2269, i32 2, i32 3
  store i32 0, ptr %2290, align 4
  %2291 = load i8, ptr %2238, align 1
  br label %2292

2292:                                             ; preds = %2283, %2265
  %2293 = phi i8 [ %2291, %2283 ], [ %2279, %2265 ]
  %2294 = phi ptr [ %2284, %2283 ], [ %2275, %2265 ]
  %2295 = getelementptr %struct.bpf_insn, ptr %2294, i32 1
  store i8 97, ptr %2294, align 4
  %2296 = getelementptr inbounds i8, ptr %2294, i32 1
  store i8 %2293, ptr %2296, align 1
  %2297 = getelementptr inbounds i8, ptr %2294, i32 2
  store i16 0, ptr %2297, align 2
  %2298 = getelementptr inbounds i8, ptr %2294, i32 4
  store i32 0, ptr %2298, align 4
  %2299 = load i8, ptr %2238, align 1
  %2300 = and i8 %2299, 15
  %2301 = lshr i8 %2299, 4
  %2302 = icmp eq i8 %2300, %2301
  br i1 %2302, label %2303, label %2386

2303:                                             ; preds = %2292
  %2304 = getelementptr %struct.bpf_insn, ptr %2294, i32 2
  store i8 5, ptr %2295, align 4
  %2305 = getelementptr %struct.bpf_insn, ptr %2294, i32 1, i32 1
  store i8 0, ptr %2305, align 1
  %2306 = getelementptr %struct.bpf_insn, ptr %2294, i32 1, i32 2
  store i16 1, ptr %2306, align 2
  %2307 = getelementptr %struct.bpf_insn, ptr %2294, i32 1, i32 3
  store i32 0, ptr %2307, align 4
  %2308 = getelementptr %struct.bpf_insn, ptr %2294, i32 3
  %2309 = trunc i32 %2253 to i8
  %2310 = load i8, ptr %2238, align 1
  %2311 = and i8 %2310, -16
  %2312 = or i8 %2311, %2309
  store i8 121, ptr %2304, align 4
  %2313 = getelementptr %struct.bpf_insn, ptr %2294, i32 2, i32 1
  store i8 %2312, ptr %2313, align 1
  %2314 = getelementptr %struct.bpf_insn, ptr %2294, i32 2, i32 2
  store i16 40, ptr %2314, align 2
  %2315 = getelementptr %struct.bpf_insn, ptr %2294, i32 2, i32 3
  store i32 0, ptr %2315, align 4
  br label %2386

2316:                                             ; preds = %5
  %2317 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %2318 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %2319 = load i8, ptr %2318, align 1
  store i8 97, ptr %2, align 4
  %2320 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %2319, ptr %2320, align 1
  %2321 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 28, ptr %2321, align 2
  %2322 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2322, align 4
  br label %2386

2323:                                             ; preds = %5
  %2324 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %2325 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %2326 = load i8, ptr %2325, align 1
  store i8 97, ptr %2, align 4
  %2327 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %2326, ptr %2327, align 1
  %2328 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 24, ptr %2328, align 2
  %2329 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2329, align 4
  %2330 = load i8, ptr %2325, align 1
  %2331 = and i8 %2330, 15
  store i8 21, ptr %2324, align 4
  %2332 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %2331, ptr %2332, align 1
  %2333 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %2333, align 2
  %2334 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %2334, align 4
  %2335 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %2336 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %2337 = load i8, ptr %2325, align 1
  %2338 = and i8 %2337, 15
  %2339 = shl i8 %2337, 4
  %2340 = or i8 %2338, %2339
  store i8 97, ptr %2335, align 4
  %2341 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %2340, ptr %2341, align 1
  %2342 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 156, ptr %2342, align 2
  %2343 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %2343, align 4
  br label %2386

2344:                                             ; preds = %5
  %2345 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %2346 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %2347 = load i8, ptr %2346, align 1
  store i8 97, ptr %2, align 4
  %2348 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %2347, ptr %2348, align 1
  %2349 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 24, ptr %2349, align 2
  %2350 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2350, align 4
  %2351 = load i8, ptr %2346, align 1
  %2352 = and i8 %2351, 15
  store i8 21, ptr %2345, align 4
  %2353 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %2352, ptr %2353, align 1
  %2354 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %2354, align 2
  %2355 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %2355, align 4
  %2356 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %2357 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %2358 = load i8, ptr %2346, align 1
  %2359 = and i8 %2358, 15
  %2360 = shl i8 %2358, 4
  %2361 = or i8 %2359, %2360
  store i8 97, ptr %2356, align 4
  %2362 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %2361, ptr %2362, align 1
  %2363 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 80, ptr %2363, align 2
  %2364 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %2364, align 4
  br label %2386

2365:                                             ; preds = %5
  store i32 1, ptr %4, align 4
  %2366 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %2367 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %2368 = load i8, ptr %2367, align 1
  store i8 97, ptr %2, align 4
  %2369 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %2368, ptr %2369, align 1
  %2370 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 24, ptr %2370, align 2
  %2371 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %2371, align 4
  %2372 = load i8, ptr %2367, align 1
  %2373 = and i8 %2372, 15
  store i8 21, ptr %2366, align 4
  %2374 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %2373, ptr %2374, align 1
  %2375 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %2375, align 2
  %2376 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %2376, align 4
  %2377 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %2378 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %2379 = load i8, ptr %2367, align 1
  %2380 = and i8 %2379, 15
  %2381 = shl i8 %2379, 4
  %2382 = or i8 %2380, %2381
  store i8 113, ptr %2377, align 4
  %2383 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %2382, ptr %2383, align 1
  %2384 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 36, ptr %2384, align 2
  %2385 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 0, ptr %2385, align 4
  br label %2386

2386:                                             ; preds = %2365, %2344, %2323, %2316, %2303, %2292, %2224, %2205, %2137, %2118, %2050, %2031, %1963, %1944, %1876, %1857, %1789, %1770, %1702, %1683, %1615, %1596, %1528, %1509, %1441, %1422, %1354, %1335, %1267, %1248, %1180, %1161, %1093, %1074, %1006, %987, %919, %900, %832, %813, %745, %726, %658, %639, %571, %552, %484, %465, %397, %378, %285, %253, %234, %164, %149, %142, %127, %106, %90, %74, %59, %44, %29, %25, %21, %9, %5
  %2387 = phi ptr [ %2, %5 ], [ %2378, %2365 ], [ %2357, %2344 ], [ %2336, %2323 ], [ %2317, %2316 ], [ %319, %285 ], [ %171, %164 ], [ %156, %149 ], [ %143, %142 ], [ %134, %127 ], [ %121, %106 ], [ %97, %90 ], [ %81, %74 ], [ %66, %59 ], [ %51, %44 ], [ %36, %29 ], [ %18, %21 ], [ %18, %25 ], [ %10, %9 ], [ %258, %253 ], [ %241, %234 ], [ %402, %397 ], [ %385, %378 ], [ %489, %484 ], [ %472, %465 ], [ %576, %571 ], [ %559, %552 ], [ %663, %658 ], [ %646, %639 ], [ %750, %745 ], [ %733, %726 ], [ %837, %832 ], [ %820, %813 ], [ %924, %919 ], [ %907, %900 ], [ %1011, %1006 ], [ %994, %987 ], [ %1098, %1093 ], [ %1081, %1074 ], [ %1185, %1180 ], [ %1168, %1161 ], [ %1272, %1267 ], [ %1255, %1248 ], [ %1359, %1354 ], [ %1342, %1335 ], [ %1446, %1441 ], [ %1429, %1422 ], [ %1533, %1528 ], [ %1516, %1509 ], [ %1620, %1615 ], [ %1603, %1596 ], [ %1707, %1702 ], [ %1690, %1683 ], [ %1794, %1789 ], [ %1777, %1770 ], [ %1881, %1876 ], [ %1864, %1857 ], [ %1968, %1963 ], [ %1951, %1944 ], [ %2055, %2050 ], [ %2038, %2031 ], [ %2142, %2137 ], [ %2125, %2118 ], [ %2229, %2224 ], [ %2212, %2205 ], [ %2308, %2303 ], [ %2295, %2292 ]
  %2388 = ptrtoint ptr %2387 to i32
  %2389 = ptrtoint ptr %2 to i32
  %2390 = sub i32 %2388, %2389
  %2391 = ashr exact i32 %2390, 3
  ret i32 %2391
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @sk_skb_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %17 [
    i32 9, label %19
    i32 26, label %3
    i32 39, label %4
    i32 38, label %5
    i32 43, label %6
    i32 50, label %7
    i32 46, label %8
    i32 47, label %9
    i32 52, label %10
    i32 72, label %11
    i32 25, label %12
    i32 84, label %13
    i32 85, label %14
    i32 86, label %15
    i32 99, label %16
  ]

3:                                                ; preds = %2
  br label %19

4:                                                ; preds = %2
  br label %19

5:                                                ; preds = %2
  br label %19

6:                                                ; preds = %2
  br label %19

7:                                                ; preds = %2
  br label %19

8:                                                ; preds = %2
  br label %19

9:                                                ; preds = %2
  br label %19

10:                                               ; preds = %2
  br label %19

11:                                               ; preds = %2
  br label %19

12:                                               ; preds = %2
  br label %19

13:                                               ; preds = %2
  br label %19

14:                                               ; preds = %2
  br label %19

15:                                               ; preds = %2
  br label %19

16:                                               ; preds = %2
  br label %19

17:                                               ; preds = %2
  %18 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %19

19:                                               ; preds = %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %20 = phi ptr [ %18, %17 ], [ @bpf_skc_lookup_tcp_proto, %16 ], [ @bpf_sk_release_proto, %15 ], [ @bpf_sk_lookup_udp_proto, %14 ], [ @bpf_sk_lookup_tcp_proto, %13 ], [ @bpf_skb_event_output_proto, %12 ], [ @bpf_sk_redirect_hash_proto, %11 ], [ @bpf_sk_redirect_map_proto, %10 ], [ @bpf_get_socket_uid_proto, %9 ], [ @bpf_get_socket_cookie_proto, %8 ], [ @sk_skb_adjust_room_proto, %7 ], [ @sk_skb_change_head_proto, %6 ], [ @sk_skb_change_tail_proto, %5 ], [ @sk_skb_pull_data_proto, %4 ], [ @bpf_skb_load_bytes_proto, %3 ], [ @bpf_skb_store_bytes_proto, %2 ]
  ret ptr %20
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @sk_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #17 {
  switch i32 %0, label %6 [
    i32 184, label %15
    i32 185, label %15
    i32 186, label %15
    i32 187, label %15
    i32 188, label %15
    i32 189, label %15
    i32 190, label %15
    i32 191, label %15
    i32 160, label %15
    i32 161, label %15
    i32 162, label %15
    i32 163, label %15
    i32 152, label %15
    i32 153, label %15
    i32 154, label %15
    i32 155, label %15
    i32 156, label %15
    i32 157, label %15
    i32 158, label %15
    i32 159, label %15
    i32 140, label %15
    i32 141, label %15
    i32 142, label %15
    i32 143, label %15
    i32 72, label %15
    i32 73, label %15
    i32 74, label %15
    i32 75, label %15
  ]

6:                                                ; preds = %5
  %7 = icmp eq i32 %2, 2
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  switch i32 %0, label %15 [
    i32 32, label %9
    i32 33, label %9
    i32 34, label %9
    i32 35, label %9
    i32 44, label %9
    i32 45, label %9
    i32 46, label %9
    i32 47, label %9
  ]

9:                                                ; preds = %8, %8, %8, %8, %8, %8, %8, %8, %6
  switch i32 %0, label %13 [
    i32 8, label %15
    i32 9, label %15
    i32 10, label %15
    i32 11, label %15
    i32 76, label %11
    i32 77, label %11
    i32 78, label %11
    i32 79, label %11
    i32 80, label %10
    i32 81, label %10
    i32 82, label %10
    i32 83, label %10
  ]

10:                                               ; preds = %9, %9, %9, %9
  br label %11

11:                                               ; preds = %10, %9, %9, %9, %9
  %12 = phi i32 [ 9, %10 ], [ 8, %9 ], [ 8, %9 ], [ 8, %9 ], [ 8, %9 ]
  store i32 %12, ptr %4, align 4
  br label %13

13:                                               ; preds = %11, %9
  %14 = tail call fastcc zeroext i1 @bpf_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %4)
  br label %15

15:                                               ; preds = %13, %9, %9, %9, %9, %8, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %16 = phi i1 [ %14, %13 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %5 ], [ false, %8 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ]
  ret i1 %16
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @sk_skb_prologue(ptr noundef writeonly %0, i1 noundef zeroext %1, ptr nocapture noundef readonly %2) #15 {
  br i1 %1, label %4, label %47

4:                                                ; preds = %3
  %5 = getelementptr %struct.bpf_insn, ptr %0, i32 1
  store i8 113, ptr %0, align 4
  %6 = getelementptr inbounds i8, ptr %0, i32 1
  store i8 22, ptr %6, align 1
  %7 = getelementptr inbounds i8, ptr %0, i32 2
  store i16 94, ptr %7, align 2
  %8 = getelementptr inbounds i8, ptr %0, i32 4
  store i32 0, ptr %8, align 4
  %9 = getelementptr %struct.bpf_insn, ptr %0, i32 2
  store i8 84, ptr %5, align 4
  %10 = getelementptr %struct.bpf_insn, ptr %0, i32 1, i32 1
  store i8 6, ptr %10, align 1
  %11 = getelementptr %struct.bpf_insn, ptr %0, i32 1, i32 2
  store i16 0, ptr %11, align 2
  %12 = getelementptr %struct.bpf_insn, ptr %0, i32 1, i32 3
  store i32 1, ptr %12, align 4
  %13 = getelementptr %struct.bpf_insn, ptr %0, i32 3
  store i8 21, ptr %9, align 4
  %14 = getelementptr %struct.bpf_insn, ptr %0, i32 2, i32 1
  store i8 6, ptr %14, align 1
  %15 = getelementptr %struct.bpf_insn, ptr %0, i32 2, i32 2
  store i16 7, ptr %15, align 2
  %16 = getelementptr %struct.bpf_insn, ptr %0, i32 2, i32 3
  store i32 0, ptr %16, align 4
  %17 = getelementptr %struct.bpf_insn, ptr %0, i32 4
  store i8 -65, ptr %13, align 4
  %18 = getelementptr %struct.bpf_insn, ptr %0, i32 3, i32 1
  store i8 22, ptr %18, align 1
  %19 = getelementptr %struct.bpf_insn, ptr %0, i32 3, i32 2
  store i16 0, ptr %19, align 2
  %20 = getelementptr %struct.bpf_insn, ptr %0, i32 3, i32 3
  store i32 0, ptr %20, align 4
  %21 = getelementptr %struct.bpf_insn, ptr %0, i32 5
  store i8 -81, ptr %17, align 4
  %22 = getelementptr %struct.bpf_insn, ptr %0, i32 4, i32 1
  store i8 34, ptr %22, align 1
  %23 = getelementptr %struct.bpf_insn, ptr %0, i32 4, i32 2
  store i16 0, ptr %23, align 2
  %24 = getelementptr %struct.bpf_insn, ptr %0, i32 4, i32 3
  store i32 0, ptr %24, align 4
  %25 = getelementptr %struct.bpf_insn, ptr %0, i32 6
  store i8 -123, ptr %21, align 4
  %26 = getelementptr %struct.bpf_insn, ptr %0, i32 5, i32 1
  store i8 0, ptr %26, align 1
  %27 = getelementptr %struct.bpf_insn, ptr %0, i32 5, i32 2
  store i16 0, ptr %27, align 2
  %28 = getelementptr %struct.bpf_insn, ptr %0, i32 5, i32 3
  store i32 39, ptr %28, align 4
  %29 = getelementptr %struct.bpf_insn, ptr %0, i32 7
  store i8 21, ptr %25, align 4
  %30 = getelementptr %struct.bpf_insn, ptr %0, i32 6, i32 1
  store i8 0, ptr %30, align 1
  %31 = getelementptr %struct.bpf_insn, ptr %0, i32 6, i32 2
  store i16 2, ptr %31, align 2
  %32 = getelementptr %struct.bpf_insn, ptr %0, i32 6, i32 3
  store i32 0, ptr %32, align 4
  %33 = getelementptr %struct.bpf_insn, ptr %0, i32 8
  store i8 -76, ptr %29, align 4
  %34 = getelementptr %struct.bpf_insn, ptr %0, i32 7, i32 1
  store i8 0, ptr %34, align 1
  %35 = getelementptr %struct.bpf_insn, ptr %0, i32 7, i32 2
  store i16 0, ptr %35, align 2
  %36 = getelementptr %struct.bpf_insn, ptr %0, i32 7, i32 3
  store i32 0, ptr %36, align 4
  %37 = getelementptr %struct.bpf_insn, ptr %0, i32 9
  store i8 -107, ptr %33, align 4
  %38 = getelementptr %struct.bpf_insn, ptr %0, i32 8, i32 1
  store i8 0, ptr %38, align 1
  %39 = getelementptr %struct.bpf_insn, ptr %0, i32 8, i32 2
  store i16 0, ptr %39, align 2
  %40 = getelementptr %struct.bpf_insn, ptr %0, i32 8, i32 3
  store i32 0, ptr %40, align 4
  %41 = getelementptr %struct.bpf_insn, ptr %0, i32 10
  store i8 -65, ptr %37, align 4
  %42 = getelementptr %struct.bpf_insn, ptr %0, i32 9, i32 1
  store i8 97, ptr %42, align 1
  %43 = getelementptr %struct.bpf_insn, ptr %0, i32 9, i32 2
  store i16 0, ptr %43, align 2
  %44 = getelementptr %struct.bpf_insn, ptr %0, i32 9, i32 3
  store i32 0, ptr %44, align 4
  %45 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 1
  %46 = load i64, ptr %45, align 4
  store i64 %46, ptr %41, align 4
  br label %47

47:                                               ; preds = %4, %3
  %48 = phi i32 [ 11, %4 ], [ 0, %3 ]
  ret i32 %48
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @sk_skb_convert_ctx_access(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef %3, ptr noundef %4) #5 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %112 [
    i32 80, label %9
    i32 48, label %85
    i32 49, label %85
    i32 50, label %85
    i32 51, label %85
    i32 52, label %85
    i32 53, label %85
    i32 54, label %85
    i32 55, label %85
    i32 56, label %85
    i32 57, label %85
    i32 58, label %85
    i32 59, label %85
    i32 60, label %85
    i32 61, label %85
    i32 62, label %85
    i32 63, label %85
    i32 64, label %85
    i32 65, label %85
    i32 66, label %85
    i32 67, label %85
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %11 = load i8, ptr %10, align 1
  %12 = lshr i8 %11, 4
  %13 = and i8 %11, 15
  %14 = icmp eq i8 %12, %13
  br i1 %14, label %15, label %29

15:                                               ; preds = %9
  %16 = icmp eq i8 %12, 9
  %17 = select i1 %16, i32 8, i32 9
  %18 = zext i8 %12 to i32
  %19 = icmp eq i32 %17, %18
  %20 = sext i1 %19 to i32
  %21 = add nsw i32 %17, %20
  %22 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %23 = trunc i32 %21 to i8
  %24 = tail call i8 @llvm.fshl.i8(i8 %23, i8 %11, i8 4) #31
  store i8 123, ptr %2, align 4
  %25 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %24, ptr %25, align 1
  %26 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 56, ptr %26, align 2
  %27 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %27, align 4
  %28 = load i8, ptr %10, align 1
  br label %29

29:                                               ; preds = %15, %9
  %30 = phi i8 [ %23, %15 ], [ %13, %9 ]
  %31 = phi i8 [ %28, %15 ], [ %11, %9 ]
  %32 = phi ptr [ %22, %15 ], [ %2, %9 ]
  %33 = getelementptr %struct.bpf_insn, ptr %32, i32 1
  %34 = and i8 %31, -16
  %35 = or i8 %34, %30
  store i8 97, ptr %32, align 4
  %36 = getelementptr inbounds i8, ptr %32, i32 1
  store i8 %35, ptr %36, align 1
  %37 = getelementptr inbounds i8, ptr %32, i32 2
  store i16 156, ptr %37, align 2
  %38 = getelementptr inbounds i8, ptr %32, i32 4
  store i32 0, ptr %38, align 4
  %39 = getelementptr %struct.bpf_insn, ptr %32, i32 2
  %40 = load i8, ptr %10, align 1
  %41 = and i8 %40, -16
  %42 = or i8 %41, 11
  store i8 97, ptr %33, align 4
  %43 = getelementptr %struct.bpf_insn, ptr %32, i32 1, i32 1
  store i8 %42, ptr %43, align 1
  %44 = getelementptr %struct.bpf_insn, ptr %32, i32 1, i32 2
  store i16 80, ptr %44, align 2
  %45 = getelementptr %struct.bpf_insn, ptr %32, i32 1, i32 3
  store i32 0, ptr %45, align 4
  %46 = or i8 %30, -80
  store i8 15, ptr %39, align 4
  %47 = getelementptr %struct.bpf_insn, ptr %32, i32 2, i32 1
  store i8 %46, ptr %47, align 1
  %48 = getelementptr %struct.bpf_insn, ptr %32, i32 2, i32 2
  store i16 0, ptr %48, align 2
  %49 = getelementptr %struct.bpf_insn, ptr %32, i32 2, i32 3
  store i32 0, ptr %49, align 4
  %50 = getelementptr %struct.bpf_insn, ptr %32, i32 3
  %51 = getelementptr %struct.bpf_insn, ptr %32, i32 4
  %52 = load i8, ptr %10, align 1
  %53 = and i8 %52, -16
  %54 = or i8 %53, 11
  store i8 97, ptr %50, align 4
  %55 = getelementptr %struct.bpf_insn, ptr %32, i32 3, i32 1
  store i8 %54, ptr %55, align 1
  %56 = getelementptr %struct.bpf_insn, ptr %32, i32 3, i32 2
  store i16 84, ptr %56, align 2
  %57 = getelementptr %struct.bpf_insn, ptr %32, i32 3, i32 3
  store i32 0, ptr %57, align 4
  %58 = getelementptr %struct.bpf_insn, ptr %32, i32 5
  store i8 31, ptr %51, align 4
  %59 = getelementptr %struct.bpf_insn, ptr %32, i32 4, i32 1
  store i8 %46, ptr %59, align 1
  %60 = getelementptr %struct.bpf_insn, ptr %32, i32 4, i32 2
  store i16 0, ptr %60, align 2
  %61 = getelementptr %struct.bpf_insn, ptr %32, i32 4, i32 3
  store i32 0, ptr %61, align 4
  %62 = load i8, ptr %10, align 1
  %63 = lshr i8 %62, 4
  %64 = and i8 %62, 15
  %65 = icmp eq i8 %63, %64
  br i1 %65, label %66, label %117

66:                                               ; preds = %29
  %67 = getelementptr %struct.bpf_insn, ptr %32, i32 6
  %68 = and i8 %62, -16
  %69 = or i8 %68, 11
  store i8 -65, ptr %58, align 4
  %70 = getelementptr %struct.bpf_insn, ptr %32, i32 5, i32 1
  store i8 %69, ptr %70, align 1
  %71 = getelementptr %struct.bpf_insn, ptr %32, i32 5, i32 2
  store i16 0, ptr %71, align 2
  %72 = getelementptr %struct.bpf_insn, ptr %32, i32 5, i32 3
  store i32 0, ptr %72, align 4
  %73 = getelementptr %struct.bpf_insn, ptr %32, i32 7
  %74 = load i8, ptr %10, align 1
  %75 = and i8 %74, 15
  %76 = shl nuw i8 %30, 4
  %77 = or i8 %75, %76
  store i8 -65, ptr %67, align 4
  %78 = getelementptr %struct.bpf_insn, ptr %32, i32 6, i32 1
  store i8 %77, ptr %78, align 1
  %79 = getelementptr %struct.bpf_insn, ptr %32, i32 6, i32 2
  store i16 0, ptr %79, align 2
  %80 = getelementptr %struct.bpf_insn, ptr %32, i32 6, i32 3
  store i32 0, ptr %80, align 4
  %81 = getelementptr %struct.bpf_insn, ptr %32, i32 8
  store i8 121, ptr %73, align 4
  %82 = getelementptr %struct.bpf_insn, ptr %32, i32 7, i32 1
  store i8 %46, ptr %82, align 1
  %83 = getelementptr %struct.bpf_insn, ptr %32, i32 7, i32 2
  store i16 56, ptr %83, align 2
  %84 = getelementptr %struct.bpf_insn, ptr %32, i32 7, i32 3
  br label %114

85:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %86 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 1
  %87 = load i16, ptr %86, align 2
  %88 = or i16 %87, 8
  store i16 %88, ptr %86, align 2
  %89 = load i16, ptr %6, align 2
  %90 = zext i16 %89 to i32
  %91 = add nsw i32 %90, -24
  %92 = icmp eq i32 %0, 2
  %93 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %94 = load i8, ptr %1, align 4
  %95 = and i8 %94, 24
  br i1 %92, label %96, label %104

96:                                               ; preds = %85
  %97 = or i8 %95, 99
  %98 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %99 = load i8, ptr %98, align 1
  %100 = trunc i32 %91 to i16
  store i8 %97, ptr %2, align 4
  %101 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %99, ptr %101, align 1
  %102 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %100, ptr %102, align 2
  %103 = getelementptr inbounds i8, ptr %2, i32 4
  br label %114

104:                                              ; preds = %85
  %105 = or i8 %95, 97
  %106 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %107 = load i8, ptr %106, align 1
  %108 = trunc i32 %91 to i16
  store i8 %105, ptr %2, align 4
  %109 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %107, ptr %109, align 1
  %110 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %108, ptr %110, align 2
  %111 = getelementptr inbounds i8, ptr %2, i32 4
  br label %114

112:                                              ; preds = %5
  %113 = tail call i32 @bpf_convert_ctx_access(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  br label %123

114:                                              ; preds = %104, %96, %66
  %115 = phi ptr [ %84, %66 ], [ %103, %96 ], [ %111, %104 ]
  %116 = phi ptr [ %81, %66 ], [ %93, %96 ], [ %93, %104 ]
  store i32 0, ptr %115, align 4
  br label %117

117:                                              ; preds = %114, %29
  %118 = phi ptr [ %58, %29 ], [ %116, %114 ]
  %119 = ptrtoint ptr %118 to i32
  %120 = ptrtoint ptr %2 to i32
  %121 = sub i32 %119, %120
  %122 = ashr exact i32 %121, 3
  br label %123

123:                                              ; preds = %117, %112
  %124 = phi i32 [ %113, %112 ], [ %122, %117 ]
  ret i32 %124
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @sk_msg_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %17 [
    i32 60, label %19
    i32 71, label %3
    i32 61, label %4
    i32 62, label %5
    i32 63, label %6
    i32 90, label %7
    i32 91, label %8
    i32 25, label %9
    i32 15, label %10
    i32 14, label %11
    i32 107, label %12
    i32 108, label %13
    i32 122, label %14
    i32 80, label %15
    i32 123, label %16
  ]

3:                                                ; preds = %2
  br label %19

4:                                                ; preds = %2
  br label %19

5:                                                ; preds = %2
  br label %19

6:                                                ; preds = %2
  br label %19

7:                                                ; preds = %2
  br label %19

8:                                                ; preds = %2
  br label %19

9:                                                ; preds = %2
  br label %19

10:                                               ; preds = %2
  br label %19

11:                                               ; preds = %2
  br label %19

12:                                               ; preds = %2
  br label %19

13:                                               ; preds = %2
  br label %19

14:                                               ; preds = %2
  br label %19

15:                                               ; preds = %2
  br label %19

16:                                               ; preds = %2
  br label %19

17:                                               ; preds = %2
  %18 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %19

19:                                               ; preds = %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %20 = phi ptr [ %18, %17 ], [ @bpf_get_current_ancestor_cgroup_id_proto, %16 ], [ @bpf_get_current_cgroup_id_proto, %15 ], [ @bpf_get_netns_cookie_sk_msg_proto, %14 ], [ @bpf_sk_storage_delete_proto, %13 ], [ @bpf_sk_storage_get_proto, %12 ], [ @bpf_get_current_pid_tgid_proto, %11 ], [ @bpf_get_current_uid_gid_proto, %10 ], [ @bpf_event_output_data_proto, %9 ], [ @bpf_msg_pop_data_proto, %8 ], [ @bpf_msg_push_data_proto, %7 ], [ @bpf_msg_pull_data_proto, %6 ], [ @bpf_msg_cork_bytes_proto, %5 ], [ @bpf_msg_apply_bytes_proto, %4 ], [ @bpf_msg_redirect_hash_proto, %3 ], [ @bpf_msg_redirect_map_proto, %2 ]
  ret ptr %20
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @sk_msg_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #20 {
  %6 = icmp eq i32 %2, 2
  br i1 %6, label %21, label %7

7:                                                ; preds = %5
  %8 = srem i32 %0, %1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %7
  switch i32 %0, label %21 [
    i32 0, label %11
    i32 8, label %13
    i32 72, label %15
    i32 68, label %18
    i32 69, label %18
    i32 70, label %18
    i32 71, label %18
    i32 64, label %18
    i32 65, label %18
    i32 66, label %18
    i32 67, label %18
    i32 60, label %18
    i32 61, label %18
    i32 62, label %18
    i32 63, label %18
    i32 44, label %18
    i32 45, label %18
    i32 46, label %18
    i32 47, label %18
    i32 48, label %18
    i32 49, label %18
    i32 50, label %18
    i32 51, label %18
    i32 52, label %18
    i32 53, label %18
    i32 54, label %18
    i32 55, label %18
    i32 56, label %18
    i32 57, label %18
    i32 58, label %18
    i32 59, label %18
    i32 28, label %18
    i32 29, label %18
    i32 30, label %18
    i32 31, label %18
    i32 32, label %18
    i32 33, label %18
    i32 34, label %18
    i32 35, label %18
    i32 36, label %18
    i32 37, label %18
    i32 38, label %18
    i32 39, label %18
    i32 40, label %18
    i32 41, label %18
    i32 42, label %18
    i32 43, label %18
    i32 24, label %18
    i32 25, label %18
    i32 26, label %18
    i32 27, label %18
    i32 20, label %18
    i32 21, label %18
    i32 22, label %18
    i32 23, label %18
    i32 16, label %18
    i32 17, label %18
    i32 18, label %18
    i32 19, label %18
  ]

11:                                               ; preds = %10
  store i32 8, ptr %4, align 4
  %12 = icmp eq i32 %1, 8
  br i1 %12, label %20, label %21

13:                                               ; preds = %10
  store i32 9, ptr %4, align 4
  %14 = icmp eq i32 %1, 8
  br i1 %14, label %20, label %21

15:                                               ; preds = %10
  %16 = icmp eq i32 %1, 8
  br i1 %16, label %17, label %21

17:                                               ; preds = %15
  store i32 11, ptr %4, align 4
  br label %20

18:                                               ; preds = %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10
  %19 = icmp eq i32 %1, 4
  br i1 %19, label %20, label %21

20:                                               ; preds = %18, %17, %13, %11
  br label %21

21:                                               ; preds = %20, %18, %15, %13, %11, %10, %7, %5
  %22 = phi i1 [ true, %20 ], [ false, %5 ], [ false, %7 ], [ false, %11 ], [ false, %13 ], [ false, %15 ], [ false, %18 ], [ false, %10 ]
  ret i1 %22
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @sk_msg_convert_ctx_access(i32 noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4) #15 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %150 [
    i32 0, label %9
    i32 8, label %16
    i32 16, label %23
    i32 20, label %38
    i32 24, label %53
    i32 28, label %68
    i32 29, label %68
    i32 30, label %68
    i32 31, label %68
    i32 32, label %68
    i32 33, label %68
    i32 34, label %68
    i32 35, label %68
    i32 36, label %68
    i32 37, label %68
    i32 38, label %68
    i32 39, label %68
    i32 40, label %68
    i32 44, label %84
    i32 45, label %84
    i32 46, label %84
    i32 47, label %84
    i32 48, label %84
    i32 49, label %84
    i32 50, label %84
    i32 51, label %84
    i32 52, label %84
    i32 53, label %84
    i32 54, label %84
    i32 55, label %84
    i32 56, label %84
    i32 60, label %100
    i32 64, label %121
    i32 68, label %136
    i32 72, label %143
  ]

9:                                                ; preds = %5
  %10 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %11 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  store i8 97, ptr %2, align 4
  %13 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %12, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 404, ptr %14, align 2
  %15 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %15, align 4
  br label %150

16:                                               ; preds = %5
  %17 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %18 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %19 = load i8, ptr %18, align 1
  store i8 97, ptr %2, align 4
  %20 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %19, ptr %20, align 1
  %21 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 408, ptr %21, align 2
  %22 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %22, align 4
  br label %150

23:                                               ; preds = %5
  %24 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %25 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %26 = load i8, ptr %25, align 1
  store i8 97, ptr %2, align 4
  %27 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %26, ptr %27, align 1
  %28 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %28, align 2
  %29 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %29, align 4
  %30 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %31 = load i8, ptr %25, align 1
  %32 = and i8 %31, 15
  %33 = shl i8 %31, 4
  %34 = or i8 %32, %33
  store i8 105, ptr %24, align 4
  %35 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %34, ptr %35, align 1
  %36 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 16, ptr %36, align 2
  %37 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %37, align 4
  br label %150

38:                                               ; preds = %5
  %39 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %40 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %41 = load i8, ptr %40, align 1
  store i8 97, ptr %2, align 4
  %42 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %41, ptr %42, align 1
  %43 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %43, align 2
  %44 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %44, align 4
  %45 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %46 = load i8, ptr %40, align 1
  %47 = and i8 %46, 15
  %48 = shl i8 %46, 4
  %49 = or i8 %47, %48
  store i8 97, ptr %39, align 4
  %50 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %49, ptr %50, align 1
  %51 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 0, ptr %51, align 2
  %52 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %52, align 4
  br label %150

53:                                               ; preds = %5
  %54 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %55 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %56 = load i8, ptr %55, align 1
  store i8 97, ptr %2, align 4
  %57 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %56, ptr %57, align 1
  %58 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %58, align 2
  %59 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %59, align 4
  %60 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %61 = load i8, ptr %55, align 1
  %62 = and i8 %61, 15
  %63 = shl i8 %61, 4
  %64 = or i8 %62, %63
  store i8 97, ptr %54, align 4
  %65 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %64, ptr %65, align 1
  %66 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 4, ptr %66, align 2
  %67 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %67, align 4
  br label %150

68:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %69 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %70 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %71 = load i8, ptr %70, align 1
  store i8 97, ptr %2, align 4
  %72 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %71, ptr %72, align 1
  %73 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %73, align 2
  %74 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %74, align 4
  %75 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %76 = load i8, ptr %70, align 1
  %77 = and i8 %76, 15
  %78 = shl i8 %76, 4
  %79 = or i8 %77, %78
  %80 = add i16 %7, 8
  store i8 97, ptr %69, align 4
  %81 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %79, ptr %81, align 1
  %82 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %80, ptr %82, align 2
  %83 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %83, align 4
  br label %150

84:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %85 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %86 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %87 = load i8, ptr %86, align 1
  store i8 97, ptr %2, align 4
  %88 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %87, ptr %88, align 1
  %89 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %89, align 2
  %90 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %90, align 4
  %91 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %92 = load i8, ptr %86, align 1
  %93 = and i8 %92, 15
  %94 = shl i8 %92, 4
  %95 = or i8 %93, %94
  %96 = add i16 %7, 8
  store i8 97, ptr %85, align 4
  %97 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %95, ptr %97, align 1
  %98 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 %96, ptr %98, align 2
  %99 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %99, align 4
  br label %150

100:                                              ; preds = %5
  %101 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %102 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %103 = load i8, ptr %102, align 1
  store i8 97, ptr %2, align 4
  %104 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %103, ptr %104, align 1
  %105 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %105, align 2
  %106 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %106, align 4
  %107 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %108 = load i8, ptr %102, align 1
  %109 = and i8 %108, 15
  %110 = shl i8 %108, 4
  %111 = or i8 %109, %110
  store i8 105, ptr %101, align 4
  %112 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %111, ptr %112, align 1
  %113 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 12, ptr %113, align 2
  %114 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %114, align 4
  %115 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %116 = load i8, ptr %102, align 1
  %117 = and i8 %116, 15
  store i8 100, ptr %107, align 4
  %118 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %117, ptr %118, align 1
  %119 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 0, ptr %119, align 2
  %120 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  store i32 16, ptr %120, align 4
  br label %150

121:                                              ; preds = %5
  %122 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %123 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %124 = load i8, ptr %123, align 1
  store i8 97, ptr %2, align 4
  %125 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %124, ptr %125, align 1
  %126 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %126, align 2
  %127 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %127, align 4
  %128 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %129 = load i8, ptr %123, align 1
  %130 = and i8 %129, 15
  %131 = shl i8 %129, 4
  %132 = or i8 %130, %131
  store i8 105, ptr %122, align 4
  %133 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %132, ptr %133, align 1
  %134 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 14, ptr %134, align 2
  %135 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %135, align 4
  br label %150

136:                                              ; preds = %5
  %137 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %138 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %139 = load i8, ptr %138, align 1
  store i8 97, ptr %2, align 4
  %140 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %139, ptr %140, align 1
  %141 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %141, align 2
  %142 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %142, align 4
  br label %150

143:                                              ; preds = %5
  %144 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %145 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %146 = load i8, ptr %145, align 1
  store i8 97, ptr %2, align 4
  %147 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %146, ptr %147, align 1
  %148 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 432, ptr %148, align 2
  %149 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %149, align 4
  br label %150

150:                                              ; preds = %143, %136, %121, %100, %84, %68, %53, %38, %23, %16, %9, %5
  %151 = phi ptr [ %2, %5 ], [ %144, %143 ], [ %137, %136 ], [ %128, %121 ], [ %115, %100 ], [ %91, %84 ], [ %75, %68 ], [ %60, %53 ], [ %45, %38 ], [ %30, %23 ], [ %17, %16 ], [ %10, %9 ]
  %152 = ptrtoint ptr %151 to i32
  %153 = ptrtoint ptr %2 to i32
  %154 = sub i32 %152, %153
  %155 = ashr exact i32 %154, 3
  ret i32 %155
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @flow_dissector_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = icmp eq i32 %0, 26
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %6

6:                                                ; preds = %4, %2
  %7 = phi ptr [ %5, %4 ], [ @bpf_flow_dissector_load_bytes_proto, %2 ]
  ret ptr %7
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @flow_dissector_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #20 {
  %6 = icmp ugt i32 %0, 191
  %7 = icmp eq i32 %2, 2
  %8 = or i1 %6, %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  switch i32 %0, label %18 [
    i32 76, label %10
    i32 77, label %10
    i32 78, label %10
    i32 79, label %10
    i32 80, label %12
    i32 81, label %12
    i32 82, label %12
    i32 83, label %12
    i32 144, label %14
    i32 145, label %14
    i32 146, label %14
    i32 147, label %14
    i32 148, label %14
    i32 149, label %14
    i32 150, label %14
    i32 151, label %14
  ]

10:                                               ; preds = %9, %9, %9, %9
  %11 = icmp eq i32 %1, 4
  br i1 %11, label %16, label %18

12:                                               ; preds = %9, %9, %9, %9
  %13 = icmp eq i32 %1, 4
  br i1 %13, label %16, label %18

14:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9
  %15 = icmp eq i32 %1, 8
  br i1 %15, label %16, label %18

16:                                               ; preds = %14, %12, %10
  %17 = phi i32 [ 8, %10 ], [ 9, %12 ], [ 10, %14 ]
  store i32 %17, ptr %4, align 4
  br label %18

18:                                               ; preds = %16, %14, %12, %10, %9, %5
  %19 = phi i1 [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %14 ], [ false, %9 ], [ true, %16 ]
  ret i1 %19
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @flow_dissector_convert_ctx_access(i32 noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef readnone %4) #15 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %19 [
    i32 76, label %11
    i32 80, label %9
    i32 144, label %10
  ]

9:                                                ; preds = %5
  br label %11

10:                                               ; preds = %5
  br label %11

11:                                               ; preds = %10, %9, %5
  %12 = phi i16 [ 0, %10 ], [ 12, %9 ], [ 8, %5 ]
  %13 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %14 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %15 = load i8, ptr %14, align 1
  store i8 97, ptr %2, align 4
  %16 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %15, ptr %16, align 1
  %17 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 %12, ptr %17, align 2
  %18 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %18, align 4
  br label %19

19:                                               ; preds = %11, %5
  %20 = phi ptr [ %2, %5 ], [ %13, %11 ]
  %21 = ptrtoint ptr %20 to i32
  %22 = ptrtoint ptr %2 to i32
  %23 = sub i32 %21, %22
  %24 = ashr exact i32 %23, 3
  ret i32 %24
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @bpf_prog_test_run_flow_dissector(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readnone %2) #19 {
  ret i32 -524
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @sk_detach_filter(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 13
  %3 = load volatile i32, ptr %2, align 4
  %4 = and i32 %3, 2097152
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 16
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  store volatile ptr null, ptr %7, align 8
  %11 = getelementptr inbounds %struct.sk_filter, ptr %8, i32 0, i32 2
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.bpf_prog, ptr %12, i32 0, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = shl i32 %14, 3
  %16 = add i32 %15, 48
  %17 = tail call i32 @llvm.umax.i32(i32 %16, i32 48) #31
  %18 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 20
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %18) #31, !srcloc !23
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 %17, ptr elementtype(i32) %18) #31, !srcloc !24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !25
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %8) #31, !srcloc !23
  %20 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %8, ptr nonnull %8, i32 1, ptr nonnull elementtype(i32) %8) #31, !srcloc !26
  %21 = extractvalue { i32, i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %10
  %24 = icmp sgt i32 %21, 0
  br i1 %24, label %28, label %25, !prof !10

25:                                               ; preds = %23
  tail call void @refcount_warn_saturate(ptr noundef nonnull %8, i32 noundef 3) #31
  br label %28

26:                                               ; preds = %10
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !27
  %27 = getelementptr inbounds %struct.sk_filter, ptr %8, i32 0, i32 1
  tail call void @call_rcu(ptr noundef %27, ptr noundef nonnull @sk_filter_release_rcu) #31
  br label %28

28:                                               ; preds = %26, %25, %23, %6, %1
  %29 = phi i32 [ -1, %1 ], [ -2, %6 ], [ 0, %23 ], [ 0, %25 ], [ 0, %26 ]
  ret i32 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @sk_get_filter(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  tail call void @lock_sock_nested(ptr noundef %0, i32 noundef 0) #31
  %4 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %39, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sk_filter, ptr %5, i32 0, i32 2
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.bpf_prog, ptr %9, i32 0, i32 11
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %39, label %13

13:                                               ; preds = %7
  %14 = load i16, ptr %11, align 4
  %15 = zext i16 %14 to i32
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %13
  %18 = icmp ugt i32 %15, %2
  br i1 %18, label %39, label %19

19:                                               ; preds = %17
  %20 = shl nuw nsw i32 %15, 3
  %21 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1, i32 %20, i32 -1090519040) #30, !srcloc !61
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.sock_fprog_kern, ptr %11, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = tail call ptr @llvm.thread.pointer() #31
  %28 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 3
  %29 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %28) #21, !srcloc !11
  %30 = and i32 %29, -13
  %31 = or i32 %30, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %31) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  %32 = tail call i32 @arm_copy_to_user(ptr noundef %1, ptr noundef %26, i32 noundef %20) #31
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %29) #31, !srcloc !12
  tail call void asm sideeffect "isb ", "~{memory}"() #31, !srcloc !13
  br label %33

33:                                               ; preds = %24, %19
  %34 = phi i32 [ %32, %24 ], [ %20, %19 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = load i16, ptr %11, align 4
  %38 = zext i16 %37 to i32
  br label %39

39:                                               ; preds = %36, %33, %17, %13, %7, %3
  %40 = phi i32 [ -22, %17 ], [ -14, %33 ], [ %38, %36 ], [ %15, %13 ], [ -13, %7 ], [ 0, %3 ]
  tail call void @release_sock(ptr noundef %0) #31
  ret i32 %40
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_sock(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @bpf_run_sk_reuseport(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) local_unnamed_addr #0 {
  %7 = alloca %struct.sk_reuseport_kern, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #31
  %8 = getelementptr inbounds i8, ptr %7, i32 28
  store i32 0, ptr %8, align 4, !annotation !22
  store ptr %3, ptr %7, align 4
  %9 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 1
  store ptr %1, ptr %9, align 4
  %10 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 2
  store ptr null, ptr %10, align 4
  %11 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 3
  store ptr %4, ptr %11, align 4
  %12 = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 17
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 5
  %15 = load i32, ptr %14, align 8
  %16 = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 6
  %17 = load i32, ptr %16, align 4
  %18 = sub i32 %15, %17
  %19 = getelementptr i8, ptr %13, i32 %18
  %20 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 4
  store ptr %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 5
  store i32 %5, ptr %21, align 4
  %22 = getelementptr inbounds %struct.sock_reuseport, ptr %0, i32 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 6
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.sock_reuseport, ptr %0, i32 0, i32 6
  %26 = load i8, ptr %25, align 4
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 7
  store i8 %27, ptr %28, align 4
  %29 = load volatile i32, ptr @bpf_stats_enabled_key, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %59, !prof !18

31:                                               ; preds = %6
  %32 = tail call i64 @sched_clock() #31
  %33 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 1
  %34 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 0, i32 9
  %35 = load ptr, ptr %34, align 4
  %36 = call i32 %35(ptr noundef nonnull %7, ptr noundef %33) #31
  %37 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 0, i32 7
  %38 = load ptr, ptr %37, align 4
  %39 = ptrtoint ptr %38 to i32
  %40 = call i32 @llvm.read_register.i32(metadata !0) #31
  %41 = inttoptr i32 %40 to ptr
  %42 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %41) #21, !srcloc !15
  %43 = add i32 %42, %39
  %44 = inttoptr i32 %43 to ptr
  %45 = getelementptr inbounds %struct.bpf_prog_stats, ptr %44, i32 0, i32 3
  %46 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #31, !srcloc !14
  %47 = load i32, ptr %45, align 4
  %48 = add i32 %47, 1
  store i32 %48, ptr %45, align 4
  call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !19
  %49 = load i64, ptr %44, align 8
  %50 = add i64 %49, 1
  store i64 %50, ptr %44, align 8
  %51 = getelementptr inbounds %struct.bpf_prog_stats, ptr %44, i32 0, i32 1
  %52 = call i64 @sched_clock() #31
  %53 = sub i64 %52, %32
  %54 = and i64 %53, 4294967295
  %55 = load i64, ptr %51, align 8
  %56 = add i64 %54, %55
  store i64 %56, ptr %51, align 8
  call void asm sideeffect "dmb ishst", "~{memory}"() #31, !srcloc !20
  %57 = load i32, ptr %45, align 4
  %58 = add i32 %57, 1
  store i32 %58, ptr %45, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %46) #31, !srcloc !16
  br label %64

59:                                               ; preds = %6
  %60 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 1
  %61 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 0, i32 9
  %62 = load ptr, ptr %61, align 4
  %63 = call i32 %62(ptr noundef nonnull %7, ptr noundef %60) #31
  br label %64

64:                                               ; preds = %59, %31
  %65 = phi i32 [ %36, %31 ], [ %63, %59 ]
  %66 = icmp eq i32 %65, 1
  %67 = load ptr, ptr %10, align 4
  %68 = select i1 %66, ptr %67, ptr inttoptr (i32 -111 to ptr)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #31
  ret ptr %68
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @sk_select_reuseport(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = trunc i64 %2 to i32
  %11 = inttoptr i32 %10 to ptr
  %12 = getelementptr inbounds %struct.bpf_map, ptr %9, i32 0, i32 2
  %13 = load i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 20
  %15 = load ptr, ptr %9, align 64
  %16 = getelementptr inbounds %struct.bpf_map_ops, ptr %15, i32 0, i32 12
  %17 = load ptr, ptr %16, align 4
  %18 = tail call ptr %17(ptr noundef %9, ptr noundef %11) #31
  %19 = icmp eq ptr %18, null
  br i1 %19, label %71, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 81
  %22 = load volatile ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %48

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 4
  %26 = load volatile i8, ptr %25, align 2
  %27 = zext i8 %26 to i32
  %28 = shl nuw i32 1, %27
  %29 = and i32 %28, -4161
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 13
  %33 = load volatile i32, ptr %32, align 4
  %34 = and i32 %33, 8388608
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %45

36:                                               ; preds = %31, %24
  %37 = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 19
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !25
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %37) #31, !srcloc !23
  %38 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %37, ptr %37, i32 1, ptr elementtype(i32) %37) #31, !srcloc !26
  %39 = extractvalue { i32, i32, i32 } %38, 0
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = icmp sgt i32 %39, 0
  br i1 %42, label %45, label %43, !prof !10

43:                                               ; preds = %41
  tail call void @refcount_warn_saturate(ptr noundef %37, i32 noundef 3) #31
  br label %45

44:                                               ; preds = %36
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !27
  tail call void @sk_free(ptr noundef nonnull %18) #31
  br label %45

45:                                               ; preds = %44, %43, %41, %31
  %46 = select i1 %14, i32 -2, i32 -22
  %47 = sext i32 %46 to i64
  br label %71

48:                                               ; preds = %20
  %49 = getelementptr inbounds %struct.sock_reuseport, ptr %22, i32 0, i32 5
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 6
  %52 = load i32, ptr %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %69, label %54, !prof !10

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 1
  %56 = load ptr, ptr %55, align 4
  %57 = getelementptr inbounds %struct.sock, ptr %56, i32 0, i32 46
  %58 = load i16, ptr %57, align 4
  %59 = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 46
  %60 = load i16, ptr %59, align 4
  %61 = icmp eq i16 %58, %60
  br i1 %61, label %62, label %71

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.sock_common, ptr %56, i32 0, i32 3
  %64 = load i16, ptr %63, align 8
  %65 = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 3
  %66 = load i16, ptr %65, align 8
  %67 = icmp eq i16 %64, %66
  %68 = select i1 %67, i64 -77, i64 -97
  br label %71

69:                                               ; preds = %48
  %70 = getelementptr inbounds %struct.sk_reuseport_kern, ptr %7, i32 0, i32 2
  store ptr %18, ptr %70, align 4
  br label %71

71:                                               ; preds = %69, %62, %54, %45, %5
  %72 = phi i64 [ 0, %69 ], [ %47, %45 ], [ -2, %5 ], [ -91, %54 ], [ %68, %62 ]
  ret i64 %72
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @sk_reuseport_load_bytes(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = load ptr, ptr %7, align 4
  %13 = icmp ugt i32 %8, 65535
  br i1 %13, label %37, label %14, !prof !18

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 5
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 6
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, %8
  %20 = sub i32 %16, %19
  %21 = icmp slt i32 %20, %11
  br i1 %21, label %26, label %22, !prof !18

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 17
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr i8, ptr %24, i32 %8
  br label %31

26:                                               ; preds = %14
  %27 = icmp eq ptr %12, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %26
  %29 = tail call i32 @skb_copy_bits(ptr noundef nonnull %12, i32 noundef %8, ptr noundef %10, i32 noundef %11) #31
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %28, %22
  %32 = phi ptr [ %25, %22 ], [ %10, %28 ]
  %33 = icmp eq ptr %32, null
  br i1 %33, label %37, label %34, !prof !18

34:                                               ; preds = %31
  %35 = icmp eq ptr %32, %10
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %10, ptr nonnull align 1 %32, i32 %11, i1 false) #31
  br label %38

37:                                               ; preds = %31, %28, %26, %5
  tail call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 %11, i1 false) #31
  br label %38

38:                                               ; preds = %37, %36, %34
  %39 = phi i64 [ -14, %37 ], [ 0, %36 ], [ 0, %34 ]
  ret i64 %39
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @sk_reuseport_load_bytes_relative(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) #5 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i32 %9 to ptr
  %11 = trunc i64 %3 to i32
  %12 = load ptr, ptr %7, align 4
  %13 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 14
  %14 = load ptr, ptr %13, align 8
  %15 = icmp ugt i32 %8, 65535
  br i1 %15, label %35, label %16, !prof !18

16:                                               ; preds = %5
  %17 = trunc i64 %4 to i32
  switch i32 %17, label %35 [
    i32 0, label %18
    i32 1, label %22
  ]

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 13, i32 0, i32 19
  %20 = load i16, ptr %19, align 2
  %21 = icmp eq i16 %20, -1
  br i1 %21, label %35, label %25, !prof !18

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 13, i32 0, i32 18
  %24 = load i16, ptr %23, align 4
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi i16 [ %24, %22 ], [ %20, %18 ]
  %27 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 16
  %28 = load ptr, ptr %27, align 8
  %29 = zext i16 %26 to i32
  %30 = getelementptr i8, ptr %28, i32 %29
  %31 = getelementptr i8, ptr %30, i32 %8
  %32 = getelementptr i8, ptr %31, i32 %11
  %33 = icmp ugt ptr %32, %14
  br i1 %33, label %35, label %34, !prof !18

34:                                               ; preds = %25
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %10, ptr align 1 %31, i32 %11, i1 false) #31
  br label %36

35:                                               ; preds = %25, %18, %16, %5
  tail call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 %11, i1 false) #31
  br label %36

36:                                               ; preds = %35, %34
  %37 = phi i64 [ -14, %35 ], [ 0, %34 ]
  ret i64 %37
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal ptr @sk_reuseport_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #9 {
  switch i32 %0, label %7 [
    i32 82, label %8
    i32 26, label %3
    i32 68, label %4
    i32 46, label %5
    i32 160, label %6
  ]

3:                                                ; preds = %2
  br label %8

4:                                                ; preds = %2
  br label %8

5:                                                ; preds = %2
  br label %8

6:                                                ; preds = %2
  br label %8

7:                                                ; preds = %2
  br label %8

8:                                                ; preds = %7, %6, %5, %4, %3, %2
  %9 = phi ptr [ null, %7 ], [ @bpf_ktime_get_coarse_ns_proto, %6 ], [ @bpf_get_socket_ptr_cookie_proto, %5 ], [ @sk_reuseport_load_bytes_relative_proto, %4 ], [ @sk_reuseport_load_bytes_proto, %3 ], [ @sk_select_reuseport_proto, %2 ]
  ret ptr %9
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @sk_reuseport_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #17 {
  %6 = icmp ugt i32 %0, 55
  br i1 %6, label %31, label %7

7:                                                ; preds = %5
  %8 = srem i32 %0, %1
  %9 = icmp ne i32 %8, 0
  %10 = icmp ne i32 %2, 1
  %11 = or i1 %10, %9
  br i1 %11, label %31, label %12

12:                                               ; preds = %7
  switch i32 %0, label %31 [
    i32 0, label %13
    i32 8, label %15
    i32 32, label %17
    i32 40, label %19
    i32 48, label %21
    i32 20, label %23
    i32 21, label %23
    i32 22, label %23
    i32 23, label %23
    i32 16, label %25
    i32 17, label %25
    i32 18, label %25
    i32 19, label %25
    i32 28, label %25
    i32 29, label %25
    i32 30, label %25
    i32 31, label %25
    i32 24, label %25
    i32 25, label %25
    i32 26, label %25
    i32 27, label %25
  ]

13:                                               ; preds = %12
  store i32 8, ptr %4, align 4
  %14 = icmp eq i32 %1, 8
  br label %31

15:                                               ; preds = %12
  store i32 9, ptr %4, align 4
  %16 = icmp eq i32 %1, 8
  br label %31

17:                                               ; preds = %12
  %18 = icmp eq i32 %1, 4
  br label %31

19:                                               ; preds = %12
  store i32 11, ptr %4, align 4
  %20 = icmp eq i32 %1, 8
  br label %31

21:                                               ; preds = %12
  store i32 268, ptr %4, align 4
  %22 = icmp eq i32 %1, 8
  br label %31

23:                                               ; preds = %12, %12, %12, %12
  %24 = icmp ult i32 %1, 2
  br i1 %24, label %31, label %25

25:                                               ; preds = %23, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12
  %26 = getelementptr inbounds %struct.bpf_insn_access_aux, ptr %4, i32 0, i32 1
  store i32 4, ptr %26, align 4
  %27 = icmp ult i32 %1, 5
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = tail call i32 @llvm.ctpop.i32(i32 %1) #31, !range !37
  %30 = icmp ult i32 %29, 2
  br label %31

31:                                               ; preds = %28, %25, %23, %21, %19, %17, %15, %13, %12, %7, %5
  %32 = phi i1 [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ false, %7 ], [ false, %5 ], [ false, %23 ], [ false, %12 ], [ false, %25 ], [ %30, %28 ]
  ret i1 %32
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @sk_reuseport_convert_ctx_access(i32 noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #14 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  %9 = tail call i32 @llvm.fshl.i32(i32 %8, i32 %8, i32 30)
  switch i32 %9, label %108 [
    i32 0, label %10
    i32 4, label %25
    i32 5, label %40
    i32 6, label %55
    i32 2, label %70
    i32 8, label %77
    i32 7, label %84
    i32 10, label %91
    i32 12, label %98
  ]

10:                                               ; preds = %5
  %11 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %12 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %13 = load i8, ptr %12, align 1
  store i8 97, ptr %2, align 4
  %14 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %13, ptr %14, align 1
  %15 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %15, align 2
  %16 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %16, align 4
  %17 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %18 = load i8, ptr %12, align 1
  %19 = and i8 %18, 15
  %20 = shl i8 %18, 4
  %21 = or i8 %19, %20
  store i32 4, ptr %4, align 4
  store i8 97, ptr %11, align 4
  %22 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %21, ptr %22, align 1
  %23 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 156, ptr %23, align 2
  %24 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %105

25:                                               ; preds = %5
  %26 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %27 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %28 = load i8, ptr %27, align 1
  store i8 97, ptr %2, align 4
  %29 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %28, ptr %29, align 1
  %30 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %30, align 2
  %31 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %31, align 4
  %32 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %33 = load i8, ptr %27, align 1
  %34 = and i8 %33, 15
  %35 = shl i8 %33, 4
  %36 = or i8 %34, %35
  store i32 4, ptr %4, align 4
  store i8 97, ptr %26, align 4
  %37 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %36, ptr %37, align 1
  %38 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 80, ptr %38, align 2
  %39 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %105

40:                                               ; preds = %5
  %41 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %42 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %43 = load i8, ptr %42, align 1
  store i8 97, ptr %2, align 4
  %44 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %43, ptr %44, align 1
  %45 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %45, align 2
  %46 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %46, align 4
  %47 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %48 = load i8, ptr %42, align 1
  %49 = and i8 %48, 15
  %50 = shl i8 %48, 4
  %51 = or i8 %49, %50
  store i32 2, ptr %4, align 4
  store i8 105, ptr %41, align 4
  %52 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %51, ptr %52, align 1
  %53 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 136, ptr %53, align 2
  %54 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %105

55:                                               ; preds = %5
  %56 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %57 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %58 = load i8, ptr %57, align 1
  store i8 97, ptr %2, align 4
  %59 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %58, ptr %59, align 1
  %60 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %60, align 2
  %61 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %61, align 4
  %62 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %63 = load i8, ptr %57, align 1
  %64 = and i8 %63, 15
  %65 = shl i8 %63, 4
  %66 = or i8 %64, %65
  store i32 2, ptr %4, align 4
  store i8 105, ptr %56, align 4
  %67 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %66, ptr %67, align 1
  %68 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 380, ptr %68, align 2
  %69 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  br label %105

70:                                               ; preds = %5
  %71 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %72 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %73 = load i8, ptr %72, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %74 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %73, ptr %74, align 1
  %75 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %75, align 2
  %76 = getelementptr inbounds i8, ptr %2, i32 4
  br label %105

77:                                               ; preds = %5
  %78 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %79 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %80 = load i8, ptr %79, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %81 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %80, ptr %81, align 1
  %82 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 20, ptr %82, align 2
  %83 = getelementptr inbounds i8, ptr %2, i32 4
  br label %105

84:                                               ; preds = %5
  %85 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %86 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %87 = load i8, ptr %86, align 1
  store i32 1, ptr %4, align 4
  store i8 113, ptr %2, align 4
  %88 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %87, ptr %88, align 1
  %89 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 28, ptr %89, align 2
  %90 = getelementptr inbounds i8, ptr %2, i32 4
  br label %105

91:                                               ; preds = %5
  %92 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %93 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %94 = load i8, ptr %93, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %95 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %94, ptr %95, align 1
  %96 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %96, align 2
  %97 = getelementptr inbounds i8, ptr %2, i32 4
  br label %105

98:                                               ; preds = %5
  %99 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %100 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %101 = load i8, ptr %100, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %102 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %101, ptr %102, align 1
  %103 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %103, align 2
  %104 = getelementptr inbounds i8, ptr %2, i32 4
  br label %105

105:                                              ; preds = %98, %91, %84, %77, %70, %55, %40, %25, %10
  %106 = phi ptr [ %104, %98 ], [ %97, %91 ], [ %90, %84 ], [ %83, %77 ], [ %76, %70 ], [ %69, %55 ], [ %54, %40 ], [ %39, %25 ], [ %24, %10 ]
  %107 = phi ptr [ %99, %98 ], [ %92, %91 ], [ %85, %84 ], [ %78, %77 ], [ %71, %70 ], [ %62, %55 ], [ %47, %40 ], [ %32, %25 ], [ %17, %10 ]
  store i32 0, ptr %106, align 4
  br label %108

108:                                              ; preds = %105, %5
  %109 = phi ptr [ %2, %5 ], [ %107, %105 ]
  %110 = ptrtoint ptr %109 to i32
  %111 = ptrtoint ptr %2 to i32
  %112 = sub i32 %110, %111
  %113 = ashr exact i32 %112, 3
  ret i32 %113
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_sk_lookup_assign(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = trunc i64 %1 to i32
  %9 = inttoptr i32 %8 to ptr
  %10 = icmp ult i64 %2, 4
  br i1 %10, label %11, label %73, !prof !10

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %62, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.sock_common, ptr %9, i32 0, i32 4
  %15 = load volatile i8, ptr %14, align 2
  %16 = zext i8 %15 to i32
  %17 = shl nuw i32 1, %16
  %18 = and i32 %17, -4161
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %73, label %20, !prof !62

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.sock_common, ptr %9, i32 0, i32 13
  %22 = load volatile i32, ptr %21, align 4
  %23 = and i32 %22, 8388608
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %73, label %25, !prof !18

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 45
  %27 = load i16, ptr %26, align 2
  switch i16 %27, label %28 [
    i16 1, label %31
    i16 2, label %38
  ]

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 46
  %30 = load i16, ptr %29, align 4
  br label %45

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 46
  %33 = load i16, ptr %32, align 4
  %34 = icmp eq i16 %33, 6
  br i1 %34, label %35, label %45

35:                                               ; preds = %31
  %36 = load volatile i8, ptr %14, align 2
  %37 = icmp eq i8 %36, 10
  br i1 %37, label %45, label %73, !prof !10

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 46
  %40 = load i16, ptr %39, align 4
  %41 = icmp eq i16 %40, 17
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = load volatile i8, ptr %14, align 2
  %44 = icmp eq i8 %43, 7
  br i1 %44, label %45, label %73, !prof !10

45:                                               ; preds = %42, %38, %35, %31, %28
  %46 = phi i16 [ %30, %28 ], [ %33, %31 ], [ 6, %35 ], [ 17, %42 ], [ %40, %38 ]
  %47 = getelementptr inbounds %struct.bpf_sk_lookup_kern, ptr %7, i32 0, i32 1
  %48 = load i16, ptr %47, align 2
  %49 = icmp eq i16 %46, %48
  br i1 %49, label %50, label %73

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.sock_common, ptr %9, i32 0, i32 3
  %52 = load i16, ptr %51, align 8
  %53 = load i16, ptr %7, align 4
  %54 = icmp eq i16 %52, %53
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = icmp eq i16 %52, 2
  br i1 %56, label %73, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.sock_common, ptr %9, i32 0, i32 5
  %59 = load i8, ptr %58, align 1
  %60 = and i8 %59, 32
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %73

62:                                               ; preds = %57, %50, %11
  %63 = getelementptr inbounds %struct.bpf_sk_lookup_kern, ptr %7, i32 0, i32 6
  %64 = load ptr, ptr %63, align 4
  %65 = icmp ne ptr %64, null
  %66 = and i64 %2, 1
  %67 = icmp eq i64 %66, 0
  %68 = and i1 %67, %65
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  store ptr %9, ptr %63, align 4
  %70 = getelementptr inbounds %struct.bpf_sk_lookup_kern, ptr %7, i32 0, i32 8
  %71 = trunc i64 %2 to i8
  %72 = lshr i8 %71, 1
  store i8 %72, ptr %70, align 4
  br label %73

73:                                               ; preds = %69, %62, %57, %55, %45, %42, %35, %20, %13, %5
  %74 = phi i64 [ 0, %69 ], [ -22, %5 ], [ -94, %20 ], [ -94, %35 ], [ -94, %42 ], [ -91, %45 ], [ -97, %57 ], [ -97, %55 ], [ -17, %62 ], [ -94, %13 ]
  ret i64 %74
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @bpf_prog_test_run_sk_lookup(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readnone %2) #19 {
  ret i32 -524
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @sk_lookup_func_proto(i32 noundef %0, ptr nocapture noundef readnone %1) #0 {
  switch i32 %0, label %5 [
    i32 25, label %7
    i32 124, label %3
    i32 86, label %4
  ]

3:                                                ; preds = %2
  br label %7

4:                                                ; preds = %2
  br label %7

5:                                                ; preds = %2
  %6 = tail call fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0)
  br label %7

7:                                                ; preds = %5, %4, %3, %2
  %8 = phi ptr [ %6, %5 ], [ @bpf_sk_release_proto, %4 ], [ @bpf_sk_lookup_assign_proto, %3 ], [ @bpf_event_output_data_proto, %2 ]
  ret ptr %8
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal zeroext i1 @sk_lookup_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #17 {
  %6 = icmp ugt i32 %0, 71
  br i1 %6, label %21, label %7

7:                                                ; preds = %5
  %8 = srem i32 %0, %1
  %9 = icmp eq i32 %8, 0
  %10 = icmp eq i32 %2, 1
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %21

12:                                               ; preds = %7
  switch i32 %0, label %21 [
    i32 0, label %13
    i32 64, label %15
    i32 65, label %15
    i32 66, label %15
    i32 67, label %15
    i32 60, label %15
    i32 61, label %15
    i32 62, label %15
    i32 63, label %15
    i32 36, label %15
    i32 37, label %15
    i32 38, label %15
    i32 39, label %15
    i32 44, label %15
    i32 45, label %15
    i32 46, label %15
    i32 47, label %15
    i32 48, label %15
    i32 49, label %15
    i32 50, label %15
    i32 51, label %15
    i32 52, label %15
    i32 53, label %15
    i32 54, label %15
    i32 55, label %15
    i32 56, label %15
    i32 57, label %15
    i32 58, label %15
    i32 59, label %15
    i32 20, label %15
    i32 21, label %15
    i32 22, label %15
    i32 23, label %15
    i32 24, label %15
    i32 25, label %15
    i32 26, label %15
    i32 27, label %15
    i32 28, label %15
    i32 29, label %15
    i32 30, label %15
    i32 31, label %15
    i32 32, label %15
    i32 33, label %15
    i32 34, label %15
    i32 35, label %15
    i32 40, label %15
    i32 41, label %15
    i32 42, label %15
    i32 43, label %15
    i32 16, label %15
    i32 17, label %15
    i32 18, label %15
    i32 19, label %15
    i32 12, label %15
    i32 13, label %15
    i32 14, label %15
    i32 15, label %15
    i32 8, label %15
    i32 9, label %15
    i32 10, label %15
    i32 11, label %15
  ]

13:                                               ; preds = %12
  store i32 267, ptr %4, align 4
  %14 = icmp eq i32 %1, 8
  br label %21

15:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12
  %16 = getelementptr inbounds %struct.bpf_insn_access_aux, ptr %4, i32 0, i32 1
  store i32 4, ptr %16, align 4
  %17 = icmp ult i32 %1, 5
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = tail call i32 @llvm.ctpop.i32(i32 %1) #31, !range !37
  %20 = icmp ult i32 %19, 2
  br label %21

21:                                               ; preds = %18, %15, %13, %12, %7, %5
  %22 = phi i1 [ %14, %13 ], [ false, %5 ], [ false, %7 ], [ false, %12 ], [ false, %15 ], [ %20, %18 ]
  ret i1 %22
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @sk_lookup_convert_ctx_access(i32 noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readnone %3, ptr nocapture noundef writeonly %4) #15 {
  %6 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = sext i16 %7 to i32
  switch i32 %8, label %112 [
    i32 0, label %9
    i32 8, label %16
    i32 12, label %23
    i32 16, label %30
    i32 40, label %37
    i32 20, label %44
    i32 21, label %44
    i32 22, label %44
    i32 23, label %44
    i32 24, label %44
    i32 25, label %44
    i32 26, label %44
    i32 27, label %44
    i32 28, label %44
    i32 29, label %44
    i32 30, label %44
    i32 31, label %44
    i32 32, label %44
    i32 33, label %44
    i32 34, label %44
    i32 35, label %44
    i32 44, label %66
    i32 45, label %66
    i32 46, label %66
    i32 47, label %66
    i32 48, label %66
    i32 49, label %66
    i32 50, label %66
    i32 51, label %66
    i32 52, label %66
    i32 53, label %66
    i32 54, label %66
    i32 55, label %66
    i32 56, label %66
    i32 57, label %66
    i32 58, label %66
    i32 59, label %66
    i32 36, label %88
    i32 60, label %95
    i32 64, label %102
  ]

9:                                                ; preds = %5
  %10 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %11 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %12 = load i8, ptr %11, align 1
  store i8 97, ptr %2, align 4
  %13 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %12, ptr %13, align 1
  %14 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 24, ptr %14, align 2
  %15 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

16:                                               ; preds = %5
  %17 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %18 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %19 = load i8, ptr %18, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %20 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %19, ptr %20, align 1
  %21 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 0, ptr %21, align 2
  %22 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

23:                                               ; preds = %5
  %24 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %25 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %26 = load i8, ptr %25, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %27 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %26, ptr %27, align 1
  %28 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 2, ptr %28, align 2
  %29 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

30:                                               ; preds = %5
  %31 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %32 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %33 = load i8, ptr %32, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %34 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %33, ptr %34, align 1
  %35 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 8, ptr %35, align 2
  %36 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

37:                                               ; preds = %5
  %38 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %39 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %40 = load i8, ptr %39, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %41 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %40, ptr %41, align 1
  %42 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 12, ptr %42, align 2
  %43 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

44:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  store i32 4, ptr %4, align 4
  %45 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %46 = add i16 %7, -20
  %47 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %48 = load i8, ptr %47, align 1
  store i8 97, ptr %2, align 4
  %49 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %48, ptr %49, align 1
  %50 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 16, ptr %50, align 2
  %51 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %51, align 4
  %52 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %53 = load i8, ptr %47, align 1
  %54 = and i8 %53, 15
  store i8 21, ptr %45, align 4
  %55 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %54, ptr %55, align 1
  %56 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %56, align 2
  %57 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %57, align 4
  %58 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %59 = load i8, ptr %47, align 1
  %60 = and i8 %59, 15
  %61 = shl i8 %59, 4
  %62 = or i8 %60, %61
  store i8 97, ptr %52, align 4
  %63 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %62, ptr %63, align 1
  %64 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 %46, ptr %64, align 2
  %65 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  br label %109

66:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  store i32 4, ptr %4, align 4
  %67 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %68 = add i16 %7, -44
  %69 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %70 = load i8, ptr %69, align 1
  store i8 97, ptr %2, align 4
  %71 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %70, ptr %71, align 1
  %72 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 20, ptr %72, align 2
  %73 = getelementptr inbounds i8, ptr %2, i32 4
  store i32 0, ptr %73, align 4
  %74 = getelementptr %struct.bpf_insn, ptr %2, i32 2
  %75 = load i8, ptr %69, align 1
  %76 = and i8 %75, 15
  store i8 21, ptr %67, align 4
  %77 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 1
  store i8 %76, ptr %77, align 1
  %78 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 2
  store i16 1, ptr %78, align 2
  %79 = getelementptr %struct.bpf_insn, ptr %2, i32 1, i32 3
  store i32 0, ptr %79, align 4
  %80 = getelementptr %struct.bpf_insn, ptr %2, i32 3
  %81 = load i8, ptr %69, align 1
  %82 = and i8 %81, 15
  %83 = shl i8 %81, 4
  %84 = or i8 %82, %83
  store i8 97, ptr %74, align 4
  %85 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 1
  store i8 %84, ptr %85, align 1
  %86 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 2
  store i16 %68, ptr %86, align 2
  %87 = getelementptr %struct.bpf_insn, ptr %2, i32 2, i32 3
  br label %109

88:                                               ; preds = %5
  %89 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %90 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %91 = load i8, ptr %90, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %92 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %91, ptr %92, align 1
  %93 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 4, ptr %93, align 2
  %94 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

95:                                               ; preds = %5
  %96 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %97 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %98 = load i8, ptr %97, align 1
  store i32 2, ptr %4, align 4
  store i8 105, ptr %2, align 4
  %99 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %98, ptr %99, align 1
  %100 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 6, ptr %100, align 2
  %101 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

102:                                              ; preds = %5
  %103 = getelementptr %struct.bpf_insn, ptr %2, i32 1
  %104 = getelementptr inbounds %struct.bpf_insn, ptr %1, i32 0, i32 1
  %105 = load i8, ptr %104, align 1
  store i32 4, ptr %4, align 4
  store i8 97, ptr %2, align 4
  %106 = getelementptr inbounds i8, ptr %2, i32 1
  store i8 %105, ptr %106, align 1
  %107 = getelementptr inbounds i8, ptr %2, i32 2
  store i16 28, ptr %107, align 2
  %108 = getelementptr inbounds i8, ptr %2, i32 4
  br label %109

109:                                              ; preds = %102, %95, %88, %66, %44, %37, %30, %23, %16, %9
  %110 = phi ptr [ %108, %102 ], [ %101, %95 ], [ %94, %88 ], [ %87, %66 ], [ %65, %44 ], [ %43, %37 ], [ %36, %30 ], [ %29, %23 ], [ %22, %16 ], [ %15, %9 ]
  %111 = phi ptr [ %103, %102 ], [ %96, %95 ], [ %89, %88 ], [ %80, %66 ], [ %58, %44 ], [ %38, %37 ], [ %31, %30 ], [ %24, %23 ], [ %17, %16 ], [ %10, %9 ]
  store i32 0, ptr %110, align 4
  br label %112

112:                                              ; preds = %109, %5
  %113 = phi ptr [ %2, %5 ], [ %111, %109 ]
  %114 = ptrtoint ptr %113 to i32
  %115 = ptrtoint ptr %2 to i32
  %116 = sub i32 %114, %115
  %117 = ashr exact i32 %116, 3
  ret i32 %117
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local void @bpf_prog_change_xdp(ptr nocapture noundef %0, ptr nocapture noundef %1) local_unnamed_addr #9 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skc_to_tcp6_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %11 = load volatile i8, ptr %10, align 2
  %12 = zext i8 %11 to i32
  %13 = shl nuw i32 1, %12
  %14 = and i32 %13, -4161
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 46
  %18 = load i16, ptr %17, align 4
  %19 = icmp eq i16 %18, 6
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 3
  %22 = load i16, ptr %21, align 8
  %23 = icmp eq i16 %22, 10
  %24 = and i64 %0, 4294967295
  %25 = select i1 %23, i64 %24, i64 0
  br label %26

26:                                               ; preds = %20, %16, %9, %5
  %27 = phi i64 [ 0, %16 ], [ 0, %9 ], [ 0, %5 ], [ %25, %20 ]
  ret i64 %27
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skc_to_tcp_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %11 = load volatile i8, ptr %10, align 2
  %12 = zext i8 %11 to i32
  %13 = shl nuw i32 1, %12
  %14 = and i32 %13, -4161
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 46
  %18 = load i16, ptr %17, align 4
  %19 = icmp eq i16 %18, 6
  %20 = and i64 %0, 4294967295
  %21 = select i1 %19, i64 %20, i64 0
  br label %22

22:                                               ; preds = %16, %9, %5
  %23 = phi i64 [ 0, %9 ], [ 0, %5 ], [ %21, %16 ]
  ret i64 %23
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skc_to_tcp_timewait_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 8
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, @tcp_prot
  %13 = icmp eq ptr %11, @tcpv6_prot
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %20

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %17 = load volatile i8, ptr %16, align 2
  %18 = icmp eq i8 %17, 6
  %19 = select i1 %18, i32 %6, i32 0
  br label %20

20:                                               ; preds = %15, %9, %5
  %21 = phi i32 [ 0, %5 ], [ %19, %15 ], [ 0, %9 ]
  %22 = zext i32 %21 to i64
  ret i64 %22
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skc_to_tcp_request_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 8
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, @tcp_prot
  %13 = icmp eq ptr %11, @tcpv6_prot
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %20

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %17 = load volatile i8, ptr %16, align 2
  %18 = icmp eq i8 %17, 12
  %19 = select i1 %18, i32 %6, i32 0
  br label %20

20:                                               ; preds = %15, %9, %5
  %21 = phi i32 [ 0, %5 ], [ %19, %15 ], [ 0, %9 ]
  %22 = zext i32 %21 to i64
  ret i64 %22
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skc_to_udp6_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %11 = load volatile i8, ptr %10, align 2
  %12 = zext i8 %11 to i32
  %13 = shl nuw i32 1, %12
  %14 = and i32 %13, -4161
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 46
  %18 = load i16, ptr %17, align 4
  %19 = icmp eq i16 %18, 17
  br i1 %19, label %20, label %30

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 45
  %22 = load i16, ptr %21, align 2
  %23 = icmp eq i16 %22, 2
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 3
  %26 = load i16, ptr %25, align 8
  %27 = icmp eq i16 %26, 10
  %28 = and i64 %0, 4294967295
  %29 = select i1 %27, i64 %28, i64 0
  br label %30

30:                                               ; preds = %24, %20, %16, %9, %5
  %31 = phi i64 [ 0, %20 ], [ 0, %16 ], [ 0, %9 ], [ 0, %5 ], [ %29, %24 ]
  ret i64 %31
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i64 @bpf_skc_to_unix_sock(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #6 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %11 = load volatile i8, ptr %10, align 2
  %12 = zext i8 %11 to i32
  %13 = shl nuw i32 1, %12
  %14 = and i32 %13, -4161
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 3
  %18 = load i16, ptr %17, align 8
  %19 = icmp eq i16 %18, 1
  %20 = and i64 %0, 4294967295
  %21 = select i1 %19, i64 %20, i64 0
  br label %22

22:                                               ; preds = %16, %9, %5
  %23 = phi i64 [ 0, %9 ], [ 0, %5 ], [ %21, %16 ]
  ret i64 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @bpf_sock_from_file(i64 noundef %0, i64 %1, i64 %2, i64 %3, i64 %4) #0 {
  %6 = trunc i64 %0 to i32
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call ptr @sock_from_file(ptr noundef %7) #31
  %9 = ptrtoint ptr %8 to i32
  %10 = zext i32 %9 to i64
  ret i64 %10
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #21

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_disable() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_enable() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___pskb_trim(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_get_poff(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nla_find(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_internal_load_pointer_neg_helper(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #22

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @sk_filter_release_rcu(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 8
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 2
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 11
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.sock_fprog_kern, ptr %9, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void @kfree(ptr noundef %13) #31
  tail call void @kfree(ptr noundef nonnull %9) #31
  br label %14

14:                                               ; preds = %11, %7
  tail call void @bpf_prog_free(ptr noundef %3) #31
  br label %15

15:                                               ; preds = %14, %1
  %16 = getelementptr i8, ptr %0, i32 -4
  tail call void @kfree(ptr noundef %16) #31
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_jit_compile(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #22

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #23

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #24

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #22

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @bpf_convert_filter(ptr noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr nocapture noundef %3, ptr nocapture noundef %4) unnamed_addr #0 {
  %6 = alloca [32 x %struct.bpf_insn], align 4
  %7 = alloca ptr, align 4
  %8 = alloca %struct.sock_filter, align 8
  %9 = add i32 %1, -4097
  %10 = icmp ult i32 %9, -4096
  br i1 %10, label %619, label %11

11:                                               ; preds = %5
  %12 = icmp eq ptr %2, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 1
  %15 = shl nuw nsw i32 %1, 2
  %16 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %15, i32 noundef 11712) #32
  %17 = icmp eq ptr %16, null
  br i1 %17, label %619, label %18

18:                                               ; preds = %13, %11
  %19 = phi ptr [ %16, %13 ], [ null, %11 ]
  %20 = phi ptr [ %14, %13 ], [ null, %11 ]
  %21 = getelementptr %struct.bpf_insn, ptr %20, i32 1
  %22 = getelementptr inbounds i8, ptr %20, i32 1
  %23 = getelementptr inbounds i8, ptr %20, i32 2
  %24 = getelementptr inbounds i8, ptr %20, i32 4
  %25 = getelementptr %struct.bpf_insn, ptr %20, i32 2
  %26 = getelementptr %struct.bpf_insn, ptr %20, i32 1, i32 1
  %27 = getelementptr %struct.bpf_insn, ptr %20, i32 1, i32 2
  %28 = getelementptr %struct.bpf_insn, ptr %20, i32 1, i32 3
  %29 = getelementptr %struct.bpf_insn, ptr %20, i32 3
  %30 = getelementptr %struct.bpf_insn, ptr %20, i32 2, i32 1
  %31 = getelementptr %struct.bpf_insn, ptr %20, i32 2, i32 2
  %32 = getelementptr %struct.bpf_insn, ptr %20, i32 2, i32 3
  %33 = getelementptr %struct.bpf_insn, ptr %20, i32 4
  %34 = getelementptr %struct.bpf_insn, ptr %20, i32 3, i32 1
  %35 = getelementptr %struct.bpf_insn, ptr %20, i32 3, i32 2
  %36 = getelementptr %struct.bpf_insn, ptr %20, i32 3, i32 3
  %37 = getelementptr %struct.bpf_insn, ptr %20, i32 5
  %38 = getelementptr %struct.bpf_insn, ptr %20, i32 4, i32 1
  %39 = getelementptr %struct.bpf_insn, ptr %20, i32 4, i32 2
  %40 = getelementptr %struct.bpf_insn, ptr %20, i32 4, i32 3
  %41 = getelementptr %struct.bpf_insn, ptr %20, i32 6
  %42 = getelementptr %struct.bpf_insn, ptr %20, i32 5, i32 1
  %43 = getelementptr %struct.bpf_insn, ptr %20, i32 5, i32 2
  %44 = getelementptr %struct.bpf_insn, ptr %20, i32 5, i32 3
  %45 = getelementptr %struct.bpf_insn, ptr %20, i32 7
  %46 = getelementptr %struct.bpf_insn, ptr %20, i32 6, i32 1
  %47 = getelementptr %struct.bpf_insn, ptr %20, i32 6, i32 2
  %48 = getelementptr %struct.bpf_insn, ptr %20, i32 6, i32 3
  %49 = icmp eq ptr %19, null
  %50 = ptrtoint ptr %20 to i32
  %51 = getelementptr inbounds %struct.bpf_prog, ptr %2, i32 0, i32 10
  %52 = getelementptr inbounds %struct.sock_filter, ptr %8, i32 0, i32 3
  %53 = ptrtoint ptr %6 to i32
  br label %54

54:                                               ; preds = %611, %18
  %55 = phi i32 [ 0, %18 ], [ %612, %611 ]
  %56 = phi i32 [ 0, %18 ], [ %603, %611 ]
  br i1 %12, label %61, label %57

57:                                               ; preds = %54
  store i8 -84, ptr %20, align 4
  store i8 0, ptr %22, align 1
  store i16 0, ptr %23, align 2
  store i32 0, ptr %24, align 4
  store i8 -84, ptr %21, align 4
  store i8 119, ptr %26, align 1
  store i16 0, ptr %27, align 2
  store i32 0, ptr %28, align 4
  store i8 -65, ptr %25, align 4
  store i8 22, ptr %30, align 1
  store i16 0, ptr %31, align 2
  store i32 0, ptr %32, align 4
  %58 = load i8, ptr %4, align 1, !range !30
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  store i8 97, ptr %29, align 4
  store i8 104, ptr %34, align 1
  store i16 156, ptr %35, align 2
  store i32 0, ptr %36, align 4
  store i8 97, ptr %33, align 4
  store i8 105, ptr %38, align 1
  store i16 80, ptr %39, align 2
  store i32 0, ptr %40, align 4
  store i8 97, ptr %37, align 4
  store i8 98, ptr %42, align 1
  store i16 84, ptr %43, align 2
  store i32 0, ptr %44, align 4
  store i8 28, ptr %41, align 4
  store i8 41, ptr %46, align 1
  store i16 0, ptr %47, align 2
  store i32 0, ptr %48, align 4
  br label %61

61:                                               ; preds = %60, %57, %54
  %62 = phi ptr [ %29, %54 ], [ %29, %57 ], [ %45, %60 ]
  br label %63

63:                                               ; preds = %591, %61
  %64 = phi i32 [ %598, %591 ], [ 0, %61 ]
  %65 = phi ptr [ %596, %591 ], [ %62, %61 ]
  %66 = phi ptr [ %597, %591 ], [ %0, %61 ]
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %6) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(256) %6, i8 0, i32 256, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #31
  store ptr %6, ptr %7, align 4
  br i1 %49, label %72, label %67

67:                                               ; preds = %63
  %68 = ptrtoint ptr %65 to i32
  %69 = sub i32 %68, %50
  %70 = ashr exact i32 %69, 3
  %71 = getelementptr i32, ptr %19, i32 %64
  store i32 %70, ptr %71, align 4
  br label %72

72:                                               ; preds = %67, %63
  %73 = load i16, ptr %66, align 4
  switch i16 %73, label %590 [
    i16 12, label %74
    i16 4, label %74
    i16 28, label %74
    i16 20, label %74
    i16 92, label %74
    i16 84, label %74
    i16 76, label %74
    i16 68, label %74
    i16 108, label %74
    i16 100, label %74
    i16 124, label %74
    i16 116, label %74
    i16 172, label %74
    i16 164, label %74
    i16 44, label %74
    i16 36, label %74
    i16 60, label %74
    i16 52, label %74
    i16 156, label %74
    i16 148, label %74
    i16 132, label %74
    i16 32, label %74
    i16 40, label %74
    i16 48, label %74
    i16 64, label %74
    i16 72, label %74
    i16 80, label %74
    i16 5, label %245
    i16 21, label %274
    i16 29, label %274
    i16 69, label %274
    i16 77, label %274
    i16 37, label %274
    i16 45, label %274
    i16 53, label %274
    i16 61, label %274
    i16 177, label %459
    i16 22, label %493
    i16 6, label %493
    i16 2, label %509
    i16 3, label %509
    i16 96, label %531
    i16 97, label %531
    i16 0, label %544
    i16 1, label %544
    i16 7, label %553
    i16 135, label %558
    i16 128, label %563
    i16 129, label %563
    i16 33, label %571
  ]

74:                                               ; preds = %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72
  %75 = and i16 %73, 231
  %76 = icmp eq i16 %75, 32
  br i1 %76, label %77, label %202

77:                                               ; preds = %74
  %78 = load ptr, ptr %7, align 4
  %79 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %80 = load i32, ptr %79, align 4
  %81 = add i32 %80, 4096
  %82 = call i32 @llvm.fshl.i32(i32 %81, i32 %81, i32 30) #31
  switch i32 %82, label %194 [
    i32 0, label %83
    i32 1, label %91
    i32 2, label %99
    i32 7, label %99
    i32 5, label %122
    i32 8, label %126
    i32 6, label %130
    i32 11, label %134
    i32 12, label %138
    i32 15, label %146
    i32 13, label %154
    i32 3, label %154
    i32 4, label %154
    i32 9, label %154
    i32 14, label %154
    i32 10, label %190
  ]

83:                                               ; preds = %77
  %84 = getelementptr %struct.bpf_insn, ptr %78, i32 1
  store i8 105, ptr %78, align 4
  %85 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %85, align 1
  %86 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 136, ptr %86, align 2
  %87 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %87, align 4
  store i8 -36, ptr %84, align 4
  %88 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 1
  store i8 0, ptr %88, align 1
  %89 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 2
  store i16 0, ptr %89, align 2
  %90 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 3
  store i32 16, ptr %90, align 4
  br label %200

91:                                               ; preds = %77
  %92 = getelementptr %struct.bpf_insn, ptr %78, i32 1
  store i8 113, ptr %78, align 4
  %93 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %93, align 1
  %94 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 96, ptr %94, align 2
  %95 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %95, align 4
  store i8 84, ptr %92, align 4
  %96 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 1
  store i8 0, ptr %96, align 1
  %97 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 2
  store i16 0, ptr %97, align 2
  %98 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 3
  store i32 7, ptr %98, align 4
  br label %200

99:                                               ; preds = %77, %77
  %100 = getelementptr %struct.bpf_insn, ptr %78, i32 1
  store i8 97, ptr %78, align 4
  %101 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 98, ptr %101, align 1
  %102 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 8, ptr %102, align 2
  %103 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %103, align 4
  %104 = getelementptr %struct.bpf_insn, ptr %78, i32 2
  store i8 85, ptr %100, align 4
  %105 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 1
  store i8 2, ptr %105, align 1
  %106 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 2
  store i16 1, ptr %106, align 2
  %107 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 3
  store i32 0, ptr %107, align 4
  %108 = getelementptr %struct.bpf_insn, ptr %78, i32 3
  store i8 -107, ptr %104, align 4
  %109 = getelementptr %struct.bpf_insn, ptr %78, i32 2, i32 1
  store i8 0, ptr %109, align 1
  %110 = getelementptr %struct.bpf_insn, ptr %78, i32 2, i32 2
  store i16 0, ptr %110, align 2
  %111 = getelementptr %struct.bpf_insn, ptr %78, i32 2, i32 3
  store i32 0, ptr %111, align 4
  %112 = load i32, ptr %79, align 4
  %113 = icmp eq i32 %112, -4088
  br i1 %113, label %114, label %118

114:                                              ; preds = %99
  store i8 97, ptr %108, align 4
  %115 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 1
  store i8 32, ptr %115, align 1
  %116 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 2
  store i16 124, ptr %116, align 2
  %117 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 3
  store i32 0, ptr %117, align 4
  br label %200

118:                                              ; preds = %99
  store i8 105, ptr %108, align 4
  %119 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 1
  store i8 32, ptr %119, align 1
  %120 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 2
  store i16 208, ptr %120, align 2
  %121 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 3
  store i32 0, ptr %121, align 4
  br label %200

122:                                              ; preds = %77
  store i8 97, ptr %78, align 4
  %123 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %123, align 1
  %124 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 124, ptr %124, align 2
  %125 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %125, align 4
  br label %200

126:                                              ; preds = %77
  store i8 97, ptr %78, align 4
  %127 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %127, align 1
  %128 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 112, ptr %128, align 2
  %129 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %129, align 4
  br label %200

130:                                              ; preds = %77
  store i8 105, ptr %78, align 4
  %131 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %131, align 1
  %132 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 92, ptr %132, align 2
  %133 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %133, align 4
  br label %200

134:                                              ; preds = %77
  store i8 105, ptr %78, align 4
  %135 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %135, align 1
  %136 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 118, ptr %136, align 2
  %137 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %137, align 4
  br label %200

138:                                              ; preds = %77
  %139 = getelementptr %struct.bpf_insn, ptr %78, i32 1
  store i8 113, ptr %78, align 4
  %140 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %140, align 1
  %141 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 98, ptr %141, align 2
  %142 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %142, align 4
  store i8 84, ptr %139, align 4
  %143 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 1
  store i8 0, ptr %143, align 1
  %144 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 2
  store i16 0, ptr %144, align 2
  %145 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 3
  store i32 1, ptr %145, align 4
  br label %200

146:                                              ; preds = %77
  %147 = getelementptr %struct.bpf_insn, ptr %78, i32 1
  store i8 105, ptr %78, align 4
  %148 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 96, ptr %148, align 1
  %149 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 116, ptr %149, align 2
  %150 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %150, align 4
  store i8 -36, ptr %147, align 4
  %151 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 1
  store i8 0, ptr %151, align 1
  %152 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 2
  store i16 0, ptr %152, align 2
  %153 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 3
  store i32 16, ptr %153, align 4
  br label %200

154:                                              ; preds = %77, %77, %77, %77, %77
  %155 = getelementptr %struct.bpf_insn, ptr %78, i32 1
  store i8 -65, ptr %78, align 4
  %156 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 97, ptr %156, align 1
  %157 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 0, ptr %157, align 2
  %158 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %158, align 4
  %159 = getelementptr %struct.bpf_insn, ptr %78, i32 2
  store i8 -65, ptr %155, align 4
  %160 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 1
  store i8 2, ptr %160, align 1
  %161 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 2
  store i16 0, ptr %161, align 2
  %162 = getelementptr %struct.bpf_insn, ptr %78, i32 1, i32 3
  store i32 0, ptr %162, align 4
  %163 = getelementptr %struct.bpf_insn, ptr %78, i32 3
  store i8 -65, ptr %159, align 4
  %164 = getelementptr %struct.bpf_insn, ptr %78, i32 2, i32 1
  store i8 115, ptr %164, align 1
  %165 = getelementptr %struct.bpf_insn, ptr %78, i32 2, i32 2
  store i16 0, ptr %165, align 2
  %166 = getelementptr %struct.bpf_insn, ptr %78, i32 2, i32 3
  store i32 0, ptr %166, align 4
  %167 = load i32, ptr %79, align 4
  %168 = add i32 %167, 4084
  %169 = call i32 @llvm.fshl.i32(i32 %168, i32 %168, i32 30) #31
  switch i32 %169, label %200 [
    i32 10, label %170
    i32 0, label %174
    i32 1, label %178
    i32 6, label %182
    i32 11, label %186
  ]

170:                                              ; preds = %154
  store i8 -123, ptr %163, align 4
  %171 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 1
  store i8 0, ptr %171, align 1
  %172 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 2
  store i16 0, ptr %172, align 2
  %173 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 3
  store i32 sub (i32 ptrtoint (ptr @bpf_skb_get_pay_offset to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), ptr %173, align 4
  br label %200

174:                                              ; preds = %154
  store i8 -123, ptr %163, align 4
  %175 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 1
  store i8 0, ptr %175, align 1
  %176 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 2
  store i16 0, ptr %176, align 2
  %177 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 3
  store i32 sub (i32 ptrtoint (ptr @bpf_skb_get_nlattr to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), ptr %177, align 4
  br label %200

178:                                              ; preds = %154
  store i8 -123, ptr %163, align 4
  %179 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 1
  store i8 0, ptr %179, align 1
  %180 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 2
  store i16 0, ptr %180, align 2
  %181 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 3
  store i32 sub (i32 ptrtoint (ptr @bpf_skb_get_nlattr_nest to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), ptr %181, align 4
  br label %200

182:                                              ; preds = %154
  store i8 -123, ptr %163, align 4
  %183 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 1
  store i8 0, ptr %183, align 1
  %184 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 2
  store i16 0, ptr %184, align 2
  %185 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 3
  store i32 sub (i32 ptrtoint (ptr @bpf_get_raw_cpu_id to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), ptr %185, align 4
  br label %200

186:                                              ; preds = %154
  store i8 -123, ptr %163, align 4
  %187 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 1
  store i8 0, ptr %187, align 1
  %188 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 2
  store i16 0, ptr %188, align 2
  %189 = getelementptr %struct.bpf_insn, ptr %78, i32 3, i32 3
  store i32 sub (i32 ptrtoint (ptr @bpf_user_rnd_u32 to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), ptr %189, align 4
  call void @bpf_user_rnd_init_once() #31
  br label %200

190:                                              ; preds = %77
  store i8 -84, ptr %78, align 4
  %191 = getelementptr inbounds i8, ptr %78, i32 1
  store i8 112, ptr %191, align 1
  %192 = getelementptr inbounds i8, ptr %78, i32 2
  store i16 0, ptr %192, align 2
  %193 = getelementptr inbounds i8, ptr %78, i32 4
  store i32 0, ptr %193, align 4
  br label %200

194:                                              ; preds = %77
  %195 = call i64 @__bpf_call_base(i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #31
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %199, !prof !10

197:                                              ; preds = %194
  %198 = load i16, ptr %66, align 4
  br label %202

199:                                              ; preds = %194
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/filter.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 459, 0\0A.popsection", ""() #31, !srcloc !63
  unreachable

200:                                              ; preds = %190, %186, %182, %178, %174, %170, %154, %146, %138, %134, %130, %126, %122, %118, %114, %91, %83
  %201 = phi ptr [ %78, %190 ], [ %163, %154 ], [ %163, %186 ], [ %163, %182 ], [ %163, %178 ], [ %163, %174 ], [ %163, %170 ], [ %147, %146 ], [ %139, %138 ], [ %78, %134 ], [ %78, %130 ], [ %78, %126 ], [ %78, %122 ], [ %108, %114 ], [ %108, %118 ], [ %92, %91 ], [ %84, %83 ]
  store ptr %201, ptr %7, align 4
  br label %582

202:                                              ; preds = %197, %74
  %203 = phi i16 [ %198, %197 ], [ %73, %74 ]
  %204 = and i16 %203, 7
  %205 = icmp eq i16 %204, 0
  br i1 %205, label %206, label %211

206:                                              ; preds = %202
  %207 = call fastcc zeroext i1 @convert_bpf_ld_abs(ptr noundef %66, ptr noundef nonnull %7)
  br i1 %207, label %208, label %209

208:                                              ; preds = %206
  store i8 1, ptr %4, align 1
  br label %582

209:                                              ; preds = %206
  %210 = load i16, ptr %66, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i16 [ %210, %209 ], [ %203, %202 ]
  %213 = trunc i16 %212 to i8
  switch i16 %212, label %237 [
    i16 60, label %214
    i16 156, label %214
  ]

214:                                              ; preds = %211, %211
  %215 = load ptr, ptr %7, align 4
  %216 = getelementptr %struct.bpf_insn, ptr %215, i32 1
  store ptr %216, ptr %7, align 4
  store i8 -68, ptr %215, align 4
  %217 = getelementptr inbounds i8, ptr %215, i32 1
  store i8 119, ptr %217, align 1
  %218 = getelementptr inbounds i8, ptr %215, i32 2
  store i16 0, ptr %218, align 2
  %219 = getelementptr inbounds i8, ptr %215, i32 4
  store i32 0, ptr %219, align 4
  %220 = load ptr, ptr %7, align 4
  %221 = getelementptr %struct.bpf_insn, ptr %220, i32 1
  store ptr %221, ptr %7, align 4
  store i8 85, ptr %220, align 4
  %222 = getelementptr inbounds i8, ptr %220, i32 1
  store i8 7, ptr %222, align 1
  %223 = getelementptr inbounds i8, ptr %220, i32 2
  store i16 2, ptr %223, align 2
  %224 = getelementptr inbounds i8, ptr %220, i32 4
  store i32 0, ptr %224, align 4
  %225 = load ptr, ptr %7, align 4
  %226 = getelementptr %struct.bpf_insn, ptr %225, i32 1
  store ptr %226, ptr %7, align 4
  store i8 -84, ptr %225, align 4
  %227 = getelementptr inbounds i8, ptr %225, i32 1
  store i8 0, ptr %227, align 1
  %228 = getelementptr inbounds i8, ptr %225, i32 2
  store i16 0, ptr %228, align 2
  %229 = getelementptr inbounds i8, ptr %225, i32 4
  store i32 0, ptr %229, align 4
  %230 = load ptr, ptr %7, align 4
  %231 = getelementptr %struct.bpf_insn, ptr %230, i32 1
  store ptr %231, ptr %7, align 4
  store i8 -107, ptr %230, align 4
  %232 = getelementptr inbounds i8, ptr %230, i32 1
  store i8 0, ptr %232, align 1
  %233 = getelementptr inbounds i8, ptr %230, i32 2
  store i16 0, ptr %233, align 2
  %234 = getelementptr inbounds i8, ptr %230, i32 4
  store i32 0, ptr %234, align 4
  %235 = load i16, ptr %66, align 4
  %236 = trunc i16 %235 to i8
  br label %237

237:                                              ; preds = %214, %211
  %238 = phi i8 [ %213, %211 ], [ %236, %214 ]
  %239 = load ptr, ptr %7, align 4
  %240 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %241 = load i32, ptr %240, align 4
  store i8 %238, ptr %239, align 4
  %242 = getelementptr inbounds i8, ptr %239, i32 1
  store i8 112, ptr %242, align 1
  %243 = getelementptr inbounds i8, ptr %239, i32 2
  store i16 0, ptr %243, align 2
  %244 = getelementptr inbounds i8, ptr %239, i32 4
  store i32 %241, ptr %244, align 4
  br label %582

245:                                              ; preds = %72
  %246 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %247 = load i32, ptr %246, align 4
  %248 = add nuw nsw i32 %64, 1
  %249 = add i32 %248, %247
  %250 = load ptr, ptr %7, align 4
  store i8 5, ptr %250, align 4
  %251 = icmp sge i32 %249, %1
  %252 = icmp slt i32 %249, 0
  %253 = or i1 %251, %252
  br i1 %253, label %590, label %254

254:                                              ; preds = %245
  br i1 %49, label %262, label %255

255:                                              ; preds = %254
  %256 = getelementptr i32, ptr %19, i32 %249
  %257 = load i32, ptr %256, align 4
  %258 = getelementptr i32, ptr %19, i32 %64
  %259 = load i32, ptr %258, align 4
  %260 = xor i32 %259, -1
  %261 = add i32 %257, %260
  br label %262

262:                                              ; preds = %255, %254
  %263 = phi i32 [ %261, %255 ], [ 0, %254 ]
  %264 = load ptr, ptr %7, align 4
  %265 = ptrtoint ptr %264 to i32
  %266 = sub i32 %265, %53
  %267 = ashr exact i32 %266, 3
  %268 = sub i32 %263, %267
  %269 = add i32 %268, -32768
  %270 = icmp ult i32 %269, -65536
  br i1 %270, label %590, label %271

271:                                              ; preds = %262
  %272 = trunc i32 %268 to i16
  %273 = getelementptr inbounds %struct.bpf_insn, ptr %264, i32 0, i32 2
  store i16 %272, ptr %273, align 2
  br label %582

274:                                              ; preds = %72, %72, %72, %72, %72, %72, %72, %72
  %275 = and i16 %73, 8
  %276 = icmp eq i16 %275, 0
  br i1 %276, label %277, label %295

277:                                              ; preds = %274
  %278 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %279 = load i32, ptr %278, align 4
  %280 = icmp slt i32 %279, 0
  br i1 %280, label %281, label %295

281:                                              ; preds = %277
  %282 = load ptr, ptr %7, align 4
  %283 = getelementptr %struct.bpf_insn, ptr %282, i32 1
  store ptr %283, ptr %7, align 4
  store i8 -76, ptr %282, align 4
  %284 = getelementptr inbounds i8, ptr %282, i32 1
  store i8 2, ptr %284, align 1
  %285 = getelementptr inbounds i8, ptr %282, i32 2
  store i16 0, ptr %285, align 2
  %286 = getelementptr inbounds i8, ptr %282, i32 4
  store i32 %279, ptr %286, align 4
  %287 = load ptr, ptr %7, align 4
  %288 = getelementptr inbounds %struct.bpf_insn, ptr %287, i32 0, i32 1
  %289 = load i8, ptr %288, align 1
  %290 = and i8 %289, -16
  store i8 %290, ptr %288, align 1
  %291 = load ptr, ptr %7, align 4
  %292 = getelementptr inbounds %struct.bpf_insn, ptr %291, i32 0, i32 1
  %293 = load i8, ptr %292, align 1
  %294 = and i8 %293, 15
  br label %312

295:                                              ; preds = %277, %274
  %296 = load ptr, ptr %7, align 4
  %297 = getelementptr inbounds %struct.bpf_insn, ptr %296, i32 0, i32 1
  %298 = load i8, ptr %297, align 1
  %299 = and i8 %298, -16
  store i8 %299, ptr %297, align 1
  %300 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %301 = load i32, ptr %300, align 4
  %302 = load ptr, ptr %7, align 4
  %303 = getelementptr inbounds %struct.bpf_insn, ptr %302, i32 0, i32 3
  store i32 %301, ptr %303, align 4
  %304 = load i16, ptr %66, align 4
  %305 = trunc i16 %304 to i8
  %306 = and i8 %305, 8
  %307 = icmp eq i8 %306, 0
  %308 = select i1 %307, i8 0, i8 112
  %309 = getelementptr inbounds %struct.bpf_insn, ptr %302, i32 0, i32 1
  %310 = load i8, ptr %309, align 1
  %311 = and i8 %310, 15
  br label %312

312:                                              ; preds = %295, %281
  %313 = phi i8 [ %311, %295 ], [ 32, %281 ]
  %314 = phi i8 [ %308, %295 ], [ %294, %281 ]
  %315 = phi ptr [ %309, %295 ], [ %292, %281 ]
  %316 = phi i8 [ %306, %295 ], [ 8, %281 ]
  %317 = or i8 %314, %313
  store i8 %317, ptr %315, align 1
  %318 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 2
  %319 = load i8, ptr %318, align 1
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %321, label %356

321:                                              ; preds = %312
  %322 = load i16, ptr %66, align 4
  %323 = trunc i16 %322 to i8
  %324 = and i8 %323, -16
  %325 = or i8 %316, %324
  %326 = or i8 %325, 5
  %327 = load ptr, ptr %7, align 4
  store i8 %326, ptr %327, align 4
  %328 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 1
  %329 = load i8, ptr %328, align 2
  %330 = zext i8 %329 to i32
  %331 = add nuw nsw i32 %64, 1
  %332 = add nuw i32 %331, %330
  %333 = icmp sge i32 %332, %1
  %334 = icmp slt i32 %332, 0
  %335 = or i1 %333, %334
  br i1 %335, label %590, label %336

336:                                              ; preds = %321
  br i1 %49, label %344, label %337

337:                                              ; preds = %336
  %338 = getelementptr i32, ptr %19, i32 %332
  %339 = load i32, ptr %338, align 4
  %340 = getelementptr i32, ptr %19, i32 %64
  %341 = load i32, ptr %340, align 4
  %342 = xor i32 %341, -1
  %343 = add i32 %339, %342
  br label %344

344:                                              ; preds = %337, %336
  %345 = phi i32 [ %343, %337 ], [ 0, %336 ]
  %346 = load ptr, ptr %7, align 4
  %347 = ptrtoint ptr %346 to i32
  %348 = sub i32 %347, %53
  %349 = ashr exact i32 %348, 3
  %350 = sub i32 %345, %349
  %351 = add i32 %350, -32768
  %352 = icmp ult i32 %351, -65536
  br i1 %352, label %590, label %353

353:                                              ; preds = %344
  %354 = trunc i32 %350 to i16
  %355 = getelementptr inbounds %struct.bpf_insn, ptr %346, i32 0, i32 2
  store i16 %354, ptr %355, align 2
  br label %582

356:                                              ; preds = %312
  %357 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 1
  %358 = load i8, ptr %357, align 2
  %359 = icmp eq i8 %358, 0
  %360 = load i16, ptr %66, align 4
  %361 = trunc i16 %360 to i8
  %362 = and i8 %361, -16
  br i1 %359, label %363, label %401

363:                                              ; preds = %356
  switch i8 %362, label %401 [
    i8 16, label %364
    i8 32, label %367
    i8 48, label %370
  ]

364:                                              ; preds = %363
  %365 = or i8 %316, 85
  %366 = load ptr, ptr %7, align 4
  store i8 %365, ptr %366, align 4
  br label %373

367:                                              ; preds = %363
  %368 = or i8 %316, -75
  %369 = load ptr, ptr %7, align 4
  store i8 %368, ptr %369, align 4
  br label %373

370:                                              ; preds = %363
  %371 = or i8 %316, -91
  %372 = load ptr, ptr %7, align 4
  store i8 %371, ptr %372, align 4
  br label %373

373:                                              ; preds = %370, %367, %364
  %374 = load i8, ptr %318, align 1
  %375 = zext i8 %374 to i32
  %376 = add nuw nsw i32 %64, 1
  %377 = add nuw i32 %376, %375
  %378 = icmp sge i32 %377, %1
  %379 = icmp slt i32 %377, 0
  %380 = or i1 %378, %379
  br i1 %380, label %590, label %381

381:                                              ; preds = %373
  br i1 %49, label %389, label %382

382:                                              ; preds = %381
  %383 = getelementptr i32, ptr %19, i32 %377
  %384 = load i32, ptr %383, align 4
  %385 = getelementptr i32, ptr %19, i32 %64
  %386 = load i32, ptr %385, align 4
  %387 = xor i32 %386, -1
  %388 = add i32 %384, %387
  br label %389

389:                                              ; preds = %382, %381
  %390 = phi i32 [ %388, %382 ], [ 0, %381 ]
  %391 = load ptr, ptr %7, align 4
  %392 = ptrtoint ptr %391 to i32
  %393 = sub i32 %392, %53
  %394 = ashr exact i32 %393, 3
  %395 = sub i32 %390, %394
  %396 = add i32 %395, -32768
  %397 = icmp ult i32 %396, -65536
  br i1 %397, label %590, label %398

398:                                              ; preds = %389
  %399 = trunc i32 %395 to i16
  %400 = getelementptr inbounds %struct.bpf_insn, ptr %391, i32 0, i32 2
  store i16 %399, ptr %400, align 2
  br label %582

401:                                              ; preds = %363, %356
  %402 = zext i8 %358 to i32
  %403 = add nuw nsw i32 %64, 1
  %404 = add nuw i32 %403, %402
  %405 = or i8 %316, %362
  %406 = or i8 %405, 5
  %407 = load ptr, ptr %7, align 4
  store i8 %406, ptr %407, align 4
  %408 = icmp sge i32 %404, %1
  %409 = icmp slt i32 %404, 0
  %410 = or i1 %408, %409
  br i1 %410, label %590, label %411

411:                                              ; preds = %401
  br i1 %49, label %419, label %412

412:                                              ; preds = %411
  %413 = getelementptr i32, ptr %19, i32 %404
  %414 = load i32, ptr %413, align 4
  %415 = getelementptr i32, ptr %19, i32 %64
  %416 = load i32, ptr %415, align 4
  %417 = xor i32 %416, -1
  %418 = add i32 %414, %417
  br label %419

419:                                              ; preds = %412, %411
  %420 = phi i32 [ %418, %412 ], [ 0, %411 ]
  %421 = load ptr, ptr %7, align 4
  %422 = ptrtoint ptr %421 to i32
  %423 = sub i32 %422, %53
  %424 = ashr exact i32 %423, 3
  %425 = sub i32 %420, %424
  %426 = add i32 %425, -32768
  %427 = icmp ult i32 %426, -65536
  br i1 %427, label %590, label %428

428:                                              ; preds = %419
  %429 = trunc i32 %425 to i16
  %430 = getelementptr inbounds %struct.bpf_insn, ptr %421, i32 0, i32 2
  store i16 %429, ptr %430, align 2
  %431 = load ptr, ptr %7, align 4
  %432 = getelementptr %struct.bpf_insn, ptr %431, i32 1
  store ptr %432, ptr %7, align 4
  store i8 5, ptr %432, align 4
  %433 = load i8, ptr %318, align 1
  %434 = zext i8 %433 to i32
  %435 = add nuw i32 %403, %434
  %436 = icmp sge i32 %435, %1
  %437 = icmp slt i32 %435, 0
  %438 = or i1 %436, %437
  br i1 %438, label %590, label %439

439:                                              ; preds = %428
  br i1 %49, label %447, label %440

440:                                              ; preds = %439
  %441 = getelementptr i32, ptr %19, i32 %435
  %442 = load i32, ptr %441, align 4
  %443 = getelementptr i32, ptr %19, i32 %64
  %444 = load i32, ptr %443, align 4
  %445 = xor i32 %444, -1
  %446 = add i32 %442, %445
  br label %447

447:                                              ; preds = %440, %439
  %448 = phi i32 [ %446, %440 ], [ 0, %439 ]
  %449 = load ptr, ptr %7, align 4
  %450 = ptrtoint ptr %449 to i32
  %451 = sub i32 %450, %53
  %452 = ashr exact i32 %451, 3
  %453 = sub i32 %448, %452
  %454 = add i32 %453, -32768
  %455 = icmp ult i32 %454, -65536
  br i1 %455, label %590, label %456

456:                                              ; preds = %447
  %457 = trunc i32 %453 to i16
  %458 = getelementptr inbounds %struct.bpf_insn, ptr %449, i32 0, i32 2
  store i16 %457, ptr %458, align 2
  br label %582

459:                                              ; preds = %72
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #31
  store i64 48, ptr %8, align 8, !annotation !22
  %460 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %461 = load i32, ptr %460, align 4
  store i32 %461, ptr %52, align 4
  store i8 1, ptr %4, align 1
  %462 = load ptr, ptr %7, align 4
  %463 = getelementptr %struct.bpf_insn, ptr %462, i32 1
  store ptr %463, ptr %7, align 4
  store i8 -65, ptr %462, align 4
  %464 = getelementptr inbounds i8, ptr %462, i32 1
  store i8 7, ptr %464, align 1
  %465 = getelementptr inbounds i8, ptr %462, i32 2
  store i16 0, ptr %465, align 2
  %466 = getelementptr inbounds i8, ptr %462, i32 4
  store i32 0, ptr %466, align 4
  %467 = call fastcc zeroext i1 @convert_bpf_ld_abs(ptr noundef nonnull %8, ptr noundef nonnull %7)
  %468 = load ptr, ptr %7, align 4
  %469 = getelementptr %struct.bpf_insn, ptr %468, i32 1
  %470 = getelementptr %struct.bpf_insn, ptr %468, i32 2
  store ptr %470, ptr %7, align 4
  store i8 84, ptr %469, align 4
  %471 = getelementptr %struct.bpf_insn, ptr %468, i32 1, i32 1
  store i8 0, ptr %471, align 1
  %472 = getelementptr %struct.bpf_insn, ptr %468, i32 1, i32 2
  store i16 0, ptr %472, align 2
  %473 = getelementptr %struct.bpf_insn, ptr %468, i32 1, i32 3
  store i32 15, ptr %473, align 4
  %474 = load ptr, ptr %7, align 4
  %475 = getelementptr %struct.bpf_insn, ptr %474, i32 1
  store ptr %475, ptr %7, align 4
  store i8 100, ptr %474, align 4
  %476 = getelementptr inbounds i8, ptr %474, i32 1
  store i8 0, ptr %476, align 1
  %477 = getelementptr inbounds i8, ptr %474, i32 2
  store i16 0, ptr %477, align 2
  %478 = getelementptr inbounds i8, ptr %474, i32 4
  store i32 2, ptr %478, align 4
  %479 = load ptr, ptr %7, align 4
  %480 = getelementptr %struct.bpf_insn, ptr %479, i32 1
  store ptr %480, ptr %7, align 4
  store i8 -65, ptr %479, align 4
  %481 = getelementptr inbounds i8, ptr %479, i32 1
  store i8 114, ptr %481, align 1
  %482 = getelementptr inbounds i8, ptr %479, i32 2
  store i16 0, ptr %482, align 2
  %483 = getelementptr inbounds i8, ptr %479, i32 4
  store i32 0, ptr %483, align 4
  %484 = load ptr, ptr %7, align 4
  %485 = getelementptr %struct.bpf_insn, ptr %484, i32 1
  store ptr %485, ptr %7, align 4
  store i8 -65, ptr %484, align 4
  %486 = getelementptr inbounds i8, ptr %484, i32 1
  store i8 7, ptr %486, align 1
  %487 = getelementptr inbounds i8, ptr %484, i32 2
  store i16 0, ptr %487, align 2
  %488 = getelementptr inbounds i8, ptr %484, i32 4
  store i32 0, ptr %488, align 4
  %489 = load ptr, ptr %7, align 4
  store i8 -65, ptr %489, align 4
  %490 = getelementptr inbounds i8, ptr %489, i32 1
  store i8 32, ptr %490, align 1
  %491 = getelementptr inbounds i8, ptr %489, i32 2
  store i16 0, ptr %491, align 2
  %492 = getelementptr inbounds i8, ptr %489, i32 4
  store i32 0, ptr %492, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #31
  br label %582

493:                                              ; preds = %72, %72
  %494 = and i16 %73, 24
  %495 = icmp eq i16 %494, 0
  br i1 %495, label %496, label %504

496:                                              ; preds = %493
  %497 = load ptr, ptr %7, align 4
  %498 = getelementptr %struct.bpf_insn, ptr %497, i32 1
  store ptr %498, ptr %7, align 4
  %499 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %500 = load i32, ptr %499, align 4
  store i8 -76, ptr %497, align 4
  %501 = getelementptr inbounds i8, ptr %497, i32 1
  store i8 0, ptr %501, align 1
  %502 = getelementptr inbounds i8, ptr %497, i32 2
  store i16 0, ptr %502, align 2
  %503 = getelementptr inbounds i8, ptr %497, i32 4
  store i32 %500, ptr %503, align 4
  br label %504

504:                                              ; preds = %496, %493
  %505 = load ptr, ptr %7, align 4
  store i8 -107, ptr %505, align 4
  %506 = getelementptr inbounds i8, ptr %505, i32 1
  store i8 0, ptr %506, align 1
  %507 = getelementptr inbounds i8, ptr %505, i32 2
  store i16 0, ptr %507, align 2
  %508 = getelementptr inbounds i8, ptr %505, i32 4
  store i32 0, ptr %508, align 4
  br label %582

509:                                              ; preds = %72, %72
  %510 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %511 = load i32, ptr %510, align 4
  %512 = shl i32 %511, 2
  %513 = add i32 %512, 4
  %514 = load ptr, ptr %7, align 4
  %515 = icmp eq i16 %73, 2
  %516 = select i1 %515, i8 10, i8 122
  %517 = trunc i32 %512 to i16
  %518 = sub nuw nsw i16 -4, %517
  store i8 99, ptr %514, align 4
  %519 = getelementptr inbounds i8, ptr %514, i32 1
  store i8 %516, ptr %519, align 1
  %520 = getelementptr inbounds i8, ptr %514, i32 2
  store i16 %518, ptr %520, align 2
  %521 = getelementptr inbounds i8, ptr %514, i32 4
  store i32 0, ptr %521, align 4
  br i1 %12, label %522, label %525

522:                                              ; preds = %509
  %523 = load ptr, ptr %7, align 4
  %524 = getelementptr %struct.bpf_insn, ptr %523, i32 1
  br label %591

525:                                              ; preds = %509
  %526 = load ptr, ptr %51, align 4
  %527 = getelementptr inbounds %struct.bpf_prog_aux, ptr %526, i32 0, i32 6
  %528 = load i32, ptr %527, align 4
  %529 = icmp ult i32 %528, %513
  br i1 %529, label %530, label %579

530:                                              ; preds = %525
  store i32 %513, ptr %527, align 4
  br label %579

531:                                              ; preds = %72, %72
  %532 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %533 = load i32, ptr %532, align 4
  %534 = load ptr, ptr %7, align 4
  %535 = and i16 %73, 7
  %536 = icmp eq i16 %535, 0
  %537 = select i1 %536, i8 -96, i8 -89
  %538 = trunc i32 %533 to i16
  %539 = mul i16 %538, -4
  %540 = add i16 %539, -4
  store i8 97, ptr %534, align 4
  %541 = getelementptr inbounds i8, ptr %534, i32 1
  store i8 %537, ptr %541, align 1
  %542 = getelementptr inbounds i8, ptr %534, i32 2
  store i16 %540, ptr %542, align 2
  %543 = getelementptr inbounds i8, ptr %534, i32 4
  store i32 0, ptr %543, align 4
  br label %582

544:                                              ; preds = %72, %72
  %545 = load ptr, ptr %7, align 4
  %546 = icmp eq i16 %73, 0
  %547 = select i1 %546, i8 0, i8 7
  %548 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %549 = load i32, ptr %548, align 4
  store i8 -76, ptr %545, align 4
  %550 = getelementptr inbounds i8, ptr %545, i32 1
  store i8 %547, ptr %550, align 1
  %551 = getelementptr inbounds i8, ptr %545, i32 2
  store i16 0, ptr %551, align 2
  %552 = getelementptr inbounds i8, ptr %545, i32 4
  store i32 %549, ptr %552, align 4
  br label %582

553:                                              ; preds = %72
  %554 = load ptr, ptr %7, align 4
  store i8 -65, ptr %554, align 4
  %555 = getelementptr inbounds i8, ptr %554, i32 1
  store i8 7, ptr %555, align 1
  %556 = getelementptr inbounds i8, ptr %554, i32 2
  store i16 0, ptr %556, align 2
  %557 = getelementptr inbounds i8, ptr %554, i32 4
  store i32 0, ptr %557, align 4
  br label %582

558:                                              ; preds = %72
  %559 = load ptr, ptr %7, align 4
  store i8 -65, ptr %559, align 4
  %560 = getelementptr inbounds i8, ptr %559, i32 1
  store i8 112, ptr %560, align 1
  %561 = getelementptr inbounds i8, ptr %559, i32 2
  store i16 0, ptr %561, align 2
  %562 = getelementptr inbounds i8, ptr %559, i32 4
  store i32 0, ptr %562, align 4
  br label %582

563:                                              ; preds = %72, %72
  %564 = load ptr, ptr %7, align 4
  %565 = and i16 %73, 7
  %566 = icmp eq i16 %565, 0
  %567 = select i1 %566, i8 96, i8 103
  store i8 97, ptr %564, align 4
  %568 = getelementptr inbounds i8, ptr %564, i32 1
  store i8 %567, ptr %568, align 1
  %569 = getelementptr inbounds i8, ptr %564, i32 2
  store i16 80, ptr %569, align 2
  %570 = getelementptr inbounds i8, ptr %564, i32 4
  store i32 0, ptr %570, align 4
  br label %582

571:                                              ; preds = %72
  %572 = load ptr, ptr %7, align 4
  %573 = getelementptr inbounds %struct.sock_filter, ptr %66, i32 0, i32 3
  %574 = load i32, ptr %573, align 4
  %575 = trunc i32 %574 to i16
  store i8 97, ptr %572, align 4
  %576 = getelementptr inbounds i8, ptr %572, i32 1
  store i8 96, ptr %576, align 1
  %577 = getelementptr inbounds i8, ptr %572, i32 2
  store i16 %575, ptr %577, align 2
  %578 = getelementptr inbounds i8, ptr %572, i32 4
  store i32 0, ptr %578, align 4
  br label %582

579:                                              ; preds = %530, %525
  %580 = load ptr, ptr %7, align 4
  %581 = getelementptr %struct.bpf_insn, ptr %580, i32 1
  store ptr %581, ptr %7, align 4
  br label %585

582:                                              ; preds = %571, %563, %558, %553, %544, %531, %504, %459, %456, %398, %353, %271, %237, %208, %200
  %583 = load ptr, ptr %7, align 4
  %584 = getelementptr %struct.bpf_insn, ptr %583, i32 1
  store ptr %584, ptr %7, align 4
  br i1 %12, label %591, label %585

585:                                              ; preds = %582, %579
  %586 = phi ptr [ %581, %579 ], [ %584, %582 ]
  %587 = ptrtoint ptr %586 to i32
  %588 = sub i32 %587, %53
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %65, ptr nonnull align 4 %6, i32 %588, i1 false)
  %589 = load ptr, ptr %7, align 4
  br label %591

590:                                              ; preds = %447, %428, %419, %401, %389, %373, %344, %321, %262, %245, %72
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %6) #31
  br label %618

591:                                              ; preds = %585, %582, %522
  %592 = phi ptr [ %524, %522 ], [ %589, %585 ], [ %584, %582 ]
  %593 = ptrtoint ptr %592 to i32
  %594 = sub i32 %593, %53
  %595 = ashr exact i32 %594, 3
  %596 = getelementptr %struct.bpf_insn, ptr %65, i32 %595
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #31
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %6) #31
  %597 = getelementptr %struct.sock_filter, ptr %66, i32 1
  %598 = add nuw nsw i32 %64, 1
  %599 = icmp eq i32 %598, %1
  br i1 %599, label %600, label %63

600:                                              ; preds = %591
  %601 = ptrtoint ptr %596 to i32
  %602 = sub i32 %601, %50
  %603 = ashr exact i32 %602, 3
  br i1 %12, label %604, label %609

604:                                              ; preds = %600
  store i32 %603, ptr %3, align 4
  %605 = load i8, ptr %4, align 1, !range !30
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %619, label %607

607:                                              ; preds = %604
  %608 = add nsw i32 %603, 4
  store i32 %608, ptr %3, align 4
  br label %619

609:                                              ; preds = %600
  %610 = icmp eq i32 %56, %603
  br i1 %610, label %614, label %611

611:                                              ; preds = %609
  %612 = add nuw nsw i32 %55, 1
  %613 = icmp eq i32 %612, 3
  br i1 %613, label %618, label %54

614:                                              ; preds = %609
  call void @kfree(ptr noundef %19) #31
  %615 = load i32, ptr %3, align 4
  %616 = icmp eq i32 %615, %56
  br i1 %616, label %619, label %617, !prof !10

617:                                              ; preds = %614
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/filter.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 894, 0\0A.popsection", ""() #31, !srcloc !64
  unreachable

618:                                              ; preds = %611, %590
  call void @kfree(ptr noundef %19) #31
  br label %619

619:                                              ; preds = %618, %614, %607, %604, %13, %5
  %620 = phi i32 [ -22, %618 ], [ -22, %5 ], [ -12, %13 ], [ 0, %607 ], [ 0, %604 ], [ 0, %614 ]
  ret i32 %620
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_prog_realloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_prog_select_runtime(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @convert_bpf_ld_abs(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) unnamed_addr #7 {
  %3 = load i16, ptr %0, align 4
  %4 = and i16 %3, 24
  %5 = lshr exact i16 %4, 3
  %6 = xor i16 %5, 2
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds [4 x i32], ptr @switch.table.convert_bpf_ld_abs, i32 0, i32 %7
  %9 = load i32, ptr %8, align 4
  %10 = and i16 %3, 16
  %11 = icmp eq i16 %10, 0
  %12 = and i16 %3, 224
  %13 = icmp eq i16 %12, 64
  %14 = load ptr, ptr %1, align 4
  %15 = getelementptr inbounds %struct.sock_filter, ptr %0, i32 0, i32 3
  %16 = load i32, ptr %15, align 4
  %17 = xor i1 %13, true
  %18 = icmp sgt i32 %16, -1
  %19 = select i1 %17, i1 %18, i1 false
  br i1 %19, label %20, label %82

20:                                               ; preds = %2
  %21 = icmp ult i32 %16, 32768
  %22 = getelementptr %struct.bpf_insn, ptr %14, i32 1
  store i8 -65, ptr %14, align 4
  %23 = getelementptr inbounds i8, ptr %14, i32 1
  store i8 -110, ptr %23, align 1
  %24 = getelementptr inbounds i8, ptr %14, i32 2
  store i16 0, ptr %24, align 2
  %25 = getelementptr inbounds i8, ptr %14, i32 4
  store i32 0, ptr %25, align 4
  %26 = icmp eq i32 %16, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = getelementptr %struct.bpf_insn, ptr %14, i32 2
  store i8 23, ptr %22, align 4
  %29 = getelementptr %struct.bpf_insn, ptr %14, i32 1, i32 1
  store i8 2, ptr %29, align 1
  %30 = getelementptr %struct.bpf_insn, ptr %14, i32 1, i32 2
  store i16 0, ptr %30, align 2
  %31 = getelementptr %struct.bpf_insn, ptr %14, i32 1, i32 3
  store i32 %16, ptr %31, align 4
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi ptr [ %28, %27 ], [ %22, %20 ]
  %34 = getelementptr %struct.bpf_insn, ptr %33, i32 1
  %35 = select i1 %11, i16 3, i16 2
  %36 = select i1 %21, i16 0, i16 2
  %37 = add nuw nsw i16 %36, %35
  store i8 -59, ptr %33, align 4
  %38 = getelementptr inbounds i8, ptr %33, i32 1
  store i8 2, ptr %38, align 1
  %39 = getelementptr inbounds i8, ptr %33, i32 2
  store i16 %37, ptr %39, align 2
  %40 = getelementptr inbounds i8, ptr %33, i32 4
  store i32 %9, ptr %40, align 4
  %41 = getelementptr %struct.bpf_insn, ptr %33, i32 2
  br i1 %21, label %42, label %48

42:                                               ; preds = %32
  %43 = load i16, ptr %0, align 4
  %44 = trunc i16 %43 to i8
  %45 = and i8 %44, 24
  %46 = or i8 %45, 97
  %47 = trunc i32 %16 to i16
  store i8 %46, ptr %34, align 4
  br label %61

48:                                               ; preds = %32
  store i8 -65, ptr %34, align 4
  %49 = getelementptr %struct.bpf_insn, ptr %33, i32 1, i32 1
  store i8 -126, ptr %49, align 1
  %50 = getelementptr %struct.bpf_insn, ptr %33, i32 1, i32 2
  store i16 0, ptr %50, align 2
  %51 = getelementptr %struct.bpf_insn, ptr %33, i32 1, i32 3
  store i32 0, ptr %51, align 4
  %52 = getelementptr %struct.bpf_insn, ptr %33, i32 3
  store i8 7, ptr %41, align 4
  %53 = getelementptr %struct.bpf_insn, ptr %33, i32 2, i32 1
  store i8 2, ptr %53, align 1
  %54 = getelementptr %struct.bpf_insn, ptr %33, i32 2, i32 2
  store i16 0, ptr %54, align 2
  %55 = getelementptr %struct.bpf_insn, ptr %33, i32 2, i32 3
  store i32 %16, ptr %55, align 4
  %56 = getelementptr %struct.bpf_insn, ptr %33, i32 4
  %57 = load i16, ptr %0, align 4
  %58 = trunc i16 %57 to i8
  %59 = and i8 %58, 24
  %60 = or i8 %59, 97
  store i8 %60, ptr %52, align 4
  br label %61

61:                                               ; preds = %48, %42
  %62 = phi i32 [ 3, %48 ], [ 1, %42 ]
  %63 = phi i8 [ 32, %48 ], [ -128, %42 ]
  %64 = phi i16 [ 0, %48 ], [ %47, %42 ]
  %65 = phi ptr [ %56, %48 ], [ %41, %42 ]
  %66 = getelementptr %struct.bpf_insn, ptr %33, i32 %62, i32 1
  store i8 %63, ptr %66, align 1
  %67 = getelementptr %struct.bpf_insn, ptr %33, i32 %62, i32 2
  store i16 %64, ptr %67, align 2
  %68 = getelementptr %struct.bpf_insn, ptr %33, i32 %62, i32 3
  store i32 0, ptr %68, align 4
  %69 = trunc i16 %4 to i5
  switch i5 %69, label %76 [
    i5 8, label %70
    i5 0, label %70
  ]

70:                                               ; preds = %61, %61
  %71 = getelementptr %struct.bpf_insn, ptr %65, i32 1
  %72 = shl nuw nsw i32 %9, 3
  store i8 -36, ptr %65, align 4
  %73 = getelementptr inbounds i8, ptr %65, i32 1
  store i8 0, ptr %73, align 1
  %74 = getelementptr inbounds i8, ptr %65, i32 2
  store i16 0, ptr %74, align 2
  %75 = getelementptr inbounds i8, ptr %65, i32 4
  store i32 %72, ptr %75, align 4
  br label %76

76:                                               ; preds = %70, %61
  %77 = phi ptr [ %71, %70 ], [ %65, %61 ]
  %78 = getelementptr %struct.bpf_insn, ptr %77, i32 1
  store i8 5, ptr %77, align 4
  %79 = getelementptr inbounds i8, ptr %77, i32 1
  store i8 0, ptr %79, align 1
  %80 = getelementptr inbounds i8, ptr %77, i32 2
  store i16 8, ptr %80, align 2
  %81 = getelementptr inbounds i8, ptr %77, i32 4
  store i32 0, ptr %81, align 4
  br label %82

82:                                               ; preds = %76, %2
  %83 = phi ptr [ %78, %76 ], [ %14, %2 ]
  %84 = getelementptr %struct.bpf_insn, ptr %83, i32 1
  store i8 -65, ptr %83, align 4
  %85 = getelementptr inbounds i8, ptr %83, i32 1
  store i8 97, ptr %85, align 1
  %86 = getelementptr inbounds i8, ptr %83, i32 2
  store i16 0, ptr %86, align 2
  %87 = getelementptr inbounds i8, ptr %83, i32 4
  store i32 0, ptr %87, align 4
  %88 = getelementptr %struct.bpf_insn, ptr %83, i32 2
  store i8 -65, ptr %84, align 4
  %89 = getelementptr %struct.bpf_insn, ptr %83, i32 1, i32 1
  store i8 -126, ptr %89, align 1
  %90 = getelementptr %struct.bpf_insn, ptr %83, i32 1, i32 2
  store i16 0, ptr %90, align 2
  %91 = getelementptr %struct.bpf_insn, ptr %83, i32 1, i32 3
  store i32 0, ptr %91, align 4
  %92 = getelementptr %struct.bpf_insn, ptr %83, i32 3
  store i8 -65, ptr %88, align 4
  %93 = getelementptr %struct.bpf_insn, ptr %83, i32 2, i32 1
  store i8 -109, ptr %93, align 1
  %94 = getelementptr %struct.bpf_insn, ptr %83, i32 2, i32 2
  store i16 0, ptr %94, align 2
  %95 = getelementptr %struct.bpf_insn, ptr %83, i32 2, i32 3
  store i32 0, ptr %95, align 4
  %96 = getelementptr %struct.bpf_insn, ptr %83, i32 4
  br i1 %13, label %98, label %97

97:                                               ; preds = %82
  store i8 -73, ptr %92, align 4
  br label %106

98:                                               ; preds = %82
  store i8 -65, ptr %92, align 4
  %99 = getelementptr %struct.bpf_insn, ptr %83, i32 3, i32 1
  store i8 116, ptr %99, align 1
  %100 = getelementptr %struct.bpf_insn, ptr %83, i32 3, i32 2
  store i16 0, ptr %100, align 2
  %101 = getelementptr %struct.bpf_insn, ptr %83, i32 3, i32 3
  store i32 0, ptr %101, align 4
  %102 = load i32, ptr %15, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %98
  %105 = getelementptr %struct.bpf_insn, ptr %83, i32 5
  store i8 7, ptr %96, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ 4, %104 ], [ 3, %97 ]
  %108 = phi ptr [ %105, %104 ], [ %96, %97 ]
  %109 = getelementptr %struct.bpf_insn, ptr %83, i32 %107, i32 1
  store i8 4, ptr %109, align 1
  %110 = getelementptr %struct.bpf_insn, ptr %83, i32 %107, i32 2
  store i16 0, ptr %110, align 2
  %111 = getelementptr %struct.bpf_insn, ptr %83, i32 %107, i32 3
  store i32 %16, ptr %111, align 4
  br label %112

112:                                              ; preds = %106, %98
  %113 = phi ptr [ %96, %98 ], [ %108, %106 ]
  %114 = load i16, ptr %0, align 4
  %115 = and i16 %114, 24
  %116 = zext i16 %115 to i32
  switch i32 %116, label %136 [
    i32 16, label %119
    i32 8, label %117
    i32 0, label %118
  ]

117:                                              ; preds = %112
  br label %119

118:                                              ; preds = %112
  br label %119

119:                                              ; preds = %118, %117, %112
  %120 = phi i32 [ sub (i32 ptrtoint (ptr @bpf_skb_load_helper_32 to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), %118 ], [ sub (i32 ptrtoint (ptr @bpf_skb_load_helper_16 to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), %117 ], [ sub (i32 ptrtoint (ptr @bpf_skb_load_helper_8 to i32), i32 ptrtoint (ptr @__bpf_call_base to i32)), %112 ]
  store i8 -123, ptr %113, align 4
  %121 = getelementptr inbounds i8, ptr %113, i32 1
  store i8 0, ptr %121, align 1
  %122 = getelementptr inbounds i8, ptr %113, i32 2
  store i16 0, ptr %122, align 2
  %123 = getelementptr inbounds i8, ptr %113, i32 4
  store i32 %120, ptr %123, align 4
  %124 = getelementptr %struct.bpf_insn, ptr %113, i32 1
  %125 = getelementptr %struct.bpf_insn, ptr %113, i32 2
  store i8 117, ptr %124, align 4
  %126 = getelementptr %struct.bpf_insn, ptr %113, i32 1, i32 1
  store i8 0, ptr %126, align 1
  %127 = getelementptr %struct.bpf_insn, ptr %113, i32 1, i32 2
  store i16 2, ptr %127, align 2
  %128 = getelementptr %struct.bpf_insn, ptr %113, i32 1, i32 3
  store i32 0, ptr %128, align 4
  %129 = getelementptr %struct.bpf_insn, ptr %113, i32 3
  store i8 -84, ptr %125, align 4
  %130 = getelementptr %struct.bpf_insn, ptr %113, i32 2, i32 1
  store i8 0, ptr %130, align 1
  %131 = getelementptr %struct.bpf_insn, ptr %113, i32 2, i32 2
  store i16 0, ptr %131, align 2
  %132 = getelementptr %struct.bpf_insn, ptr %113, i32 2, i32 3
  store i32 0, ptr %132, align 4
  store i8 -107, ptr %129, align 4
  %133 = getelementptr %struct.bpf_insn, ptr %113, i32 3, i32 1
  store i8 0, ptr %133, align 1
  %134 = getelementptr %struct.bpf_insn, ptr %113, i32 3, i32 2
  store i16 0, ptr %134, align 2
  %135 = getelementptr %struct.bpf_insn, ptr %113, i32 3, i32 3
  store i32 0, ptr %135, align 4
  store ptr %129, ptr %1, align 4
  br label %136

136:                                              ; preds = %119, %112
  %137 = phi i1 [ true, %119 ], [ false, %112 ]
  ret i1 %137
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__bpf_call_base(i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @bpf_get_raw_cpu_id(i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @bpf_user_rnd_u32(i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_user_rnd_init_once() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #25

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_ensure_writable(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @csum_partial(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @inet_proto_csum_replace_by_diff(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @inet_proto_csum_replace4(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_clone(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_pull(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ip_route_output_flow(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dst_release(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_expand_head(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @neigh_output(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #11 {
  %4 = getelementptr inbounds %struct.neighbour, ptr %0, i32 0, i32 20
  br i1 %2, label %76, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.neighbour, ptr %0, i32 0, i32 12
  %7 = load volatile i8, ptr %6, align 4
  %8 = and i8 %7, -62
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %76, label %10

10:                                               ; preds = %5
  %11 = load volatile i32, ptr %4, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %76, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.neighbour, ptr %0, i32 0, i32 20, i32 1
  %15 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %16 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 16
  %17 = getelementptr inbounds %struct.neighbour, ptr %0, i32 0, i32 20, i32 2
  br label %18

18:                                               ; preds = %51, %13
  %19 = load volatile i32, ptr %14, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %22, %18
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !65
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #31, !srcloc !66
  %23 = load volatile i32, ptr %14, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %22

26:                                               ; preds = %22, %18
  %27 = phi i32 [ %19, %18 ], [ %23, %22 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !67
  %28 = load volatile i32, ptr %4, align 4
  %29 = icmp ult i32 %28, 17
  br i1 %29, label %30, label %39, !prof !10

30:                                               ; preds = %26
  %31 = load ptr, ptr %15, align 4
  %32 = load ptr, ptr %16, align 8
  %33 = ptrtoint ptr %31 to i32
  %34 = ptrtoint ptr %32 to i32
  %35 = sub i32 %33, %34
  %36 = icmp ugt i32 %35, 15
  br i1 %36, label %37, label %51, !prof !10

37:                                               ; preds = %30
  %38 = getelementptr i8, ptr %31, i32 -16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %38, ptr noundef align 4 dereferenceable(16) %17, i32 16, i1 false) #31
  br label %51

39:                                               ; preds = %26
  %40 = add i32 %28, 15
  %41 = and i32 %40, -16
  %42 = load ptr, ptr %15, align 4
  %43 = load ptr, ptr %16, align 8
  %44 = ptrtoint ptr %42 to i32
  %45 = ptrtoint ptr %43 to i32
  %46 = sub i32 %44, %45
  %47 = icmp ult i32 %46, %41
  br i1 %47, label %51, label %48, !prof !18

48:                                               ; preds = %39
  %49 = sub i32 0, %41
  %50 = getelementptr i8, ptr %42, i32 %49
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %50, ptr align 4 %17, i32 %41, i1 false) #31
  br label %51

51:                                               ; preds = %48, %39, %37, %30
  %52 = phi i32 [ 16, %37 ], [ 16, %30 ], [ %41, %48 ], [ %41, %39 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !68
  %53 = load volatile i32, ptr %14, align 4
  %54 = icmp eq i32 %53, %27
  br i1 %54, label %55, label %18

55:                                               ; preds = %51
  %56 = load ptr, ptr %15, align 4
  %57 = load ptr, ptr %16, align 8
  %58 = ptrtoint ptr %56 to i32
  %59 = ptrtoint ptr %57 to i32
  %60 = sub i32 %58, %59
  %61 = icmp ult i32 %60, %52
  %62 = load i1, ptr @neigh_hh_output.__already_done, align 1
  %63 = xor i1 %62, true
  %64 = select i1 %61, i1 %63, i1 false
  br i1 %64, label %65, label %66, !prof !18

65:                                               ; preds = %55
  store i1 true, ptr @neigh_hh_output.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.10, i32 noundef 527, i32 noundef 9, ptr noundef null) #31
  br label %66

66:                                               ; preds = %65, %55
  br i1 %61, label %67, label %68

67:                                               ; preds = %66
  tail call void @kfree_skb_reason(ptr noundef %1, i32 noundef 0) #31
  br label %80

68:                                               ; preds = %66
  %69 = load ptr, ptr %15, align 4
  %70 = sub i32 0, %28
  %71 = getelementptr i8, ptr %69, i32 %70
  store ptr %71, ptr %15, align 4
  %72 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 5
  %73 = load i32, ptr %72, align 8
  %74 = add i32 %73, %28
  store i32 %74, ptr %72, align 8
  %75 = tail call i32 @dev_queue_xmit(ptr noundef %1) #31
  br label %80

76:                                               ; preds = %10, %5, %3
  %77 = getelementptr inbounds %struct.neighbour, ptr %0, i32 0, i32 21
  %78 = load ptr, ptr %77, align 4
  %79 = tail call i32 %78(ptr noundef %0, ptr noundef %1) #31
  br label %80

80:                                               ; preds = %76, %68, %67
  %81 = phi i32 [ %79, %76 ], [ 1, %67 ], [ %75, %68 ]
  ret i32 %81
}

; Function Attrs: inlinehint nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @__ipv6_neigh_lookup_noref_stub(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #26 {
  %3 = load ptr, ptr @ipv6_stub, align 4
  %4 = getelementptr inbounds %struct.ipv6_stub, ptr %3, i32 0, i32 20
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.neigh_table, ptr %5, i32 0, i32 31
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.neigh_hash_table, ptr %7, i32 0, i32 2
  %9 = load i32, ptr %1, align 4
  %10 = ptrtoint ptr %0 to i32
  %11 = xor i32 %9, %10
  %12 = load i32, ptr %8, align 4
  %13 = mul i32 %11, %12
  %14 = getelementptr i32, ptr %1, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr %struct.neigh_hash_table, ptr %7, i32 0, i32 2, i32 1
  %17 = load i32, ptr %16, align 4
  %18 = mul i32 %17, %15
  %19 = add i32 %18, %13
  %20 = getelementptr i32, ptr %1, i32 2
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr %struct.neigh_hash_table, ptr %7, i32 0, i32 2, i32 2
  %23 = load i32, ptr %22, align 4
  %24 = mul i32 %23, %21
  %25 = add i32 %19, %24
  %26 = getelementptr i32, ptr %1, i32 3
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr %struct.neigh_hash_table, ptr %7, i32 0, i32 2, i32 3
  %29 = load i32, ptr %28, align 4
  %30 = mul i32 %29, %27
  %31 = add i32 %25, %30
  %32 = getelementptr inbounds %struct.neigh_hash_table, ptr %7, i32 0, i32 1
  %33 = load i32, ptr %32, align 4
  %34 = sub i32 32, %33
  %35 = lshr i32 %31, %34
  %36 = load ptr, ptr %7, align 4
  %37 = getelementptr ptr, ptr %36, i32 %35
  %38 = load volatile ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %65, label %40

40:                                               ; preds = %62, %2
  %41 = phi ptr [ %63, %62 ], [ %38, %2 ]
  %42 = getelementptr inbounds %struct.neighbour, ptr %41, i32 0, i32 26
  %43 = load ptr, ptr %42, align 4
  %44 = icmp eq ptr %43, %0
  br i1 %44, label %45, label %62

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.neighbour, ptr %41, i32 0, i32 28
  %47 = load i32, ptr %46, align 4
  %48 = xor i32 %47, %9
  %49 = getelementptr %struct.neighbour, ptr %41, i32 1, i32 1
  %50 = load i32, ptr %49, align 4
  %51 = xor i32 %50, %15
  %52 = or i32 %51, %48
  %53 = getelementptr %struct.neighbour, ptr %41, i32 1, i32 2
  %54 = load i32, ptr %53, align 4
  %55 = xor i32 %54, %21
  %56 = or i32 %52, %55
  %57 = getelementptr %struct.neighbour, ptr %41, i32 1, i32 3
  %58 = load i32, ptr %57, align 4
  %59 = xor i32 %58, %27
  %60 = or i32 %56, %59
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %45, %40
  %63 = load volatile ptr, ptr %41, align 4
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %40

65:                                               ; preds = %62, %45, %2
  %66 = phi ptr [ null, %2 ], [ %41, %45 ], [ null, %62 ]
  ret ptr %66
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__neigh_create(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #11 {
  br label %1

1:                                                ; preds = %0
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %1) to i32), i32 noundef 512) #31
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_queue_xmit(ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_forward_skb_nomtu(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_rx(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_scrub_packet(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @msg_zerocopy_callback(ptr noundef, ptr noundef, i1 noundef zeroext) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_ubufs(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__sk_mem_reclaim(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__skb_get_hash(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_vlan_push(ptr noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_vlan_pop(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_push(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i32(ptr nocapture writeonly, ptr nocapture readonly, i32, i1 immarg) #4

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @bpf_skb_net_hdr_pop(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 17
  %5 = load i16, ptr %4, align 2
  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %7 = load i16, ptr %6, align 4
  %8 = add i32 %2, %1
  %9 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %10 = load i32, ptr %9, align 8
  %11 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %12 = load i32, ptr %11, align 4
  %13 = sub i32 %10, %12
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %21, !prof !18

15:                                               ; preds = %3
  %16 = icmp ult i32 %10, %8
  br i1 %16, label %68, label %17, !prof !18

17:                                               ; preds = %15
  %18 = sub i32 %8, %13
  %19 = tail call ptr @__pskb_pull_tail(ptr noundef %0, i32 noundef %18) #31
  %20 = icmp eq ptr %19, null
  br i1 %20, label %68, label %21, !prof !18

21:                                               ; preds = %17, %3
  %22 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %25 = load i16, ptr %24, align 8
  %26 = lshr i16 %25, 5
  %27 = trunc i16 %26 to i2
  switch i2 %27, label %49 [
    i2 -2, label %28
    i2 -1, label %36
  ]

28:                                               ; preds = %21
  %29 = getelementptr i8, ptr %23, i32 %1
  %30 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %31 = load i32, ptr %30, align 4
  %32 = sub i32 0, %31
  %33 = tail call i32 @csum_partial(ptr noundef %29, i32 noundef %2, i32 noundef %32) #31
  %34 = sub i32 0, %33
  store i32 %34, ptr %30, align 4
  %35 = load ptr, ptr %22, align 4
  br label %49

36:                                               ; preds = %21
  %37 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %38 = load i16, ptr %37, align 4
  %39 = zext i16 %38 to i32
  %40 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %41 = load ptr, ptr %40, align 8
  %42 = ptrtoint ptr %23 to i32
  %43 = ptrtoint ptr %41 to i32
  %44 = sub i32 %39, %42
  %45 = add i32 %44, %43
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %36
  %48 = and i16 %25, -97
  store i16 %48, ptr %24, align 8
  br label %49

49:                                               ; preds = %47, %36, %28, %21
  %50 = phi ptr [ %23, %21 ], [ %35, %28 ], [ %23, %36 ], [ %23, %47 ]
  %51 = getelementptr i8, ptr %50, i32 %2
  tail call void @llvm.memmove.p0.p0.i32(ptr align 1 %51, ptr align 1 %50, i32 %1, i1 false) #31
  %52 = load i32, ptr %9, align 8
  %53 = sub i32 %52, %2
  store i32 %53, ptr %9, align 8
  %54 = load i32, ptr %11, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %56, label %57, !prof !18

56:                                               ; preds = %49
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #31, !srcloc !36
  unreachable

57:                                               ; preds = %49
  %58 = load ptr, ptr %22, align 4
  %59 = getelementptr i8, ptr %58, i32 %2
  store ptr %59, ptr %22, align 4
  %60 = icmp eq i16 %5, %7
  %61 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 19
  %62 = load i16, ptr %61, align 2
  %63 = trunc i32 %2 to i16
  %64 = add i16 %62, %63
  store i16 %64, ptr %61, align 2
  %65 = load i16, ptr %6, align 4
  %66 = add i16 %65, %63
  store i16 %66, ptr %6, align 4
  br i1 %60, label %67, label %68

67:                                               ; preds = %57
  store i16 %66, ptr %4, align 2
  br label %68

68:                                               ; preds = %67, %57, %17, %15
  %69 = phi i32 [ 0, %57 ], [ 0, %67 ], [ -12, %17 ], [ -12, %15 ]
  ret i32 %69
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__pskb_pull_tail(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__bpf_skb_change_tail(ptr noundef %0, i32 noundef %1, i64 noundef %2) unnamed_addr #11 {
  %4 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 18
  %7 = load i16, ptr %6, align 4
  %8 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 17
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 17
  %12 = load i16, ptr %11, align 2
  %13 = icmp eq i16 %12, -1
  %14 = select i1 %13, i16 %7, i16 %12
  %15 = zext i16 %14 to i32
  %16 = getelementptr i8, ptr %5, i32 %15
  %17 = ptrtoint ptr %16 to i32
  %18 = sub i32 %17, %10
  %19 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13
  %20 = load i16, ptr %19, align 8
  %21 = and i16 %20, 96
  %22 = icmp eq i16 %21, 96
  br i1 %22, label %23, label %35

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 13, i32 0, i32 4
  %25 = load i16, ptr %24, align 4
  %26 = zext i16 %25 to i32
  %27 = ptrtoint ptr %5 to i32
  %28 = getelementptr inbounds %struct.anon.53, ptr %24, i32 0, i32 1
  %29 = load i16, ptr %28, align 2
  %30 = zext i16 %29 to i32
  %31 = add i32 %27, 2
  %32 = sub i32 %31, %10
  %33 = add i32 %32, %26
  %34 = add i32 %33, %30
  br label %35

35:                                               ; preds = %23, %3
  %36 = phi i32 [ %34, %23 ], [ %18, %3 ]
  %37 = icmp ne i64 %2, 0
  %38 = icmp ugt i32 %1, 16128
  %39 = or i1 %38, %37
  %40 = icmp ugt i32 %36, %1
  %41 = select i1 %39, i1 true, i1 %40
  br i1 %41, label %122, label %42, !prof !69

42:                                               ; preds = %35
  %43 = and i16 %20, 8192
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %122

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 5
  %47 = load i32, ptr %46, align 8
  %48 = tail call i32 @skb_ensure_writable(ptr noundef %0, i32 noundef %47) #31
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %122

50:                                               ; preds = %45
  %51 = load i32, ptr %46, align 8
  %52 = icmp ult i32 %51, %1
  br i1 %52, label %53, label %94

53:                                               ; preds = %50
  %54 = load i16, ptr %19, align 8
  %55 = and i16 %54, 96
  %56 = icmp eq i16 %55, 64
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = and i16 %54, -97
  store i16 %58, ptr %19, align 8
  br label %59

59:                                               ; preds = %57, %53
  %60 = sub i32 %1, %51
  %61 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %62 = load i32, ptr %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %73

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %66 = load ptr, ptr %65, align 4
  %67 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  %68 = load ptr, ptr %67, align 8
  %69 = ptrtoint ptr %66 to i32
  %70 = ptrtoint ptr %68 to i32
  %71 = sub i32 %69, %70
  %72 = icmp ult i32 %71, %60
  br i1 %72, label %75, label %87

73:                                               ; preds = %59
  %74 = icmp eq i32 %51, %1
  br i1 %74, label %85, label %77

75:                                               ; preds = %64
  %76 = sub i32 %70, %69
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i32 [ %76, %75 ], [ 0, %73 ]
  %79 = add i32 %78, %60
  %80 = tail call i32 @pskb_expand_head(ptr noundef %0, i32 noundef 0, i32 noundef %79, i32 noundef 2592) #31
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %122

82:                                               ; preds = %77
  %83 = load i32, ptr %61, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85, !prof !10

85:                                               ; preds = %82, %73
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 2789, i32 noundef 9, ptr noundef null) #31
  %86 = load ptr, ptr %8, align 4
  br label %91

87:                                               ; preds = %82, %64
  store i32 %1, ptr %46, align 8
  %88 = load ptr, ptr %8, align 4
  %89 = getelementptr i8, ptr %88, i32 %1
  %90 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  store ptr %89, ptr %90, align 8
  br label %91

91:                                               ; preds = %87, %85
  %92 = phi ptr [ %86, %85 ], [ %88, %87 ]
  %93 = getelementptr i8, ptr %92, i32 %51
  tail call void @llvm.memset.p0.i32(ptr align 1 %93, i8 0, i32 %60, i1 false) #31
  br label %111

94:                                               ; preds = %50
  %95 = icmp ugt i32 %51, %1
  br i1 %95, label %96, label %111

96:                                               ; preds = %94
  %97 = load i16, ptr %19, align 8
  %98 = and i16 %97, 96
  %99 = icmp eq i16 %98, 64
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = and i16 %97, -97
  store i16 %101, ptr %19, align 8
  br label %102

102:                                              ; preds = %100, %96
  %103 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 6
  %104 = load i32, ptr %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106, !prof !10

106:                                              ; preds = %102
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 2789, i32 noundef 9, ptr noundef null) #31
  br label %111

107:                                              ; preds = %102
  store i32 %1, ptr %46, align 8
  %108 = load ptr, ptr %8, align 4
  %109 = getelementptr i8, ptr %108, i32 %1
  %110 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 14
  store ptr %109, ptr %110, align 8
  br label %111

111:                                              ; preds = %107, %106, %94, %91
  %112 = getelementptr inbounds %struct.sk_buff, ptr %0, i32 0, i32 15
  %113 = load ptr, ptr %112, align 4
  %114 = getelementptr inbounds %struct.skb_shared_info, ptr %113, i32 0, i32 4
  %115 = load i16, ptr %114, align 4
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %111
  store i16 0, ptr %114, align 4
  %118 = load ptr, ptr %112, align 4
  %119 = getelementptr inbounds %struct.skb_shared_info, ptr %118, i32 0, i32 5
  store i16 0, ptr %119, align 2
  %120 = load ptr, ptr %112, align 4
  %121 = getelementptr inbounds %struct.skb_shared_info, ptr %120, i32 0, i32 8
  store i32 0, ptr %121, align 8
  br label %122

122:                                              ; preds = %117, %111, %77, %45, %42, %35
  %123 = phi i32 [ -524, %42 ], [ %48, %45 ], [ 0, %117 ], [ 0, %111 ], [ -22, %35 ], [ %80, %77 ]
  ret i32 %123
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdp_convert_zc_to_xdp_frame(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_warn(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xdp_redirect(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xdp_redirect_err(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @bpf_event_output(ptr noundef, i64 noundef, ptr noundef, i64 noundef, ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @bpf_skb_copy(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 5
  %6 = load i32, ptr %5, align 8
  %7 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 6
  %8 = load i32, ptr %7, align 4
  %9 = add i32 %8, %2
  %10 = sub i32 %6, %9
  %11 = icmp slt i32 %10, %3
  br i1 %11, label %16, label %12, !prof !18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.sk_buff, ptr %1, i32 0, i32 17
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %14, i32 %2
  br label %21

16:                                               ; preds = %4
  %17 = icmp eq ptr %1, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %16
  %19 = tail call i32 @skb_copy_bits(ptr noundef nonnull %1, i32 noundef %2, ptr noundef %0, i32 noundef %3) #31
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %18, %12
  %22 = phi ptr [ %15, %12 ], [ %0, %18 ]
  %23 = icmp eq ptr %22, null
  br i1 %23, label %27, label %24, !prof !18

24:                                               ; preds = %21
  %25 = icmp eq ptr %22, %0
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %0, ptr nonnull align 1 %22, i32 %3, i1 false)
  br label %27

27:                                               ; preds = %26, %24, %21, %18, %16
  %28 = phi i32 [ %3, %21 ], [ 0, %26 ], [ 0, %24 ], [ %3, %16 ], [ %3, %18 ]
  ret i32 %28
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #22

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @bpf_xdp_copy(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #14 {
  %5 = getelementptr i8, ptr %1, i32 %2
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %0, ptr align 1 %5, i32 %3, i1 false)
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__sock_gen_cookie(ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @_bpf_setsockopt(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4) unnamed_addr #0 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %6, i8 0, i32 16, i1 false), !annotation !22
  %8 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 4
  %9 = load volatile i8, ptr %8, align 2
  %10 = zext i8 %9 to i32
  %11 = shl nuw i32 1, %10
  %12 = and i32 %11, -4161
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %245, label %14

14:                                               ; preds = %5
  switch i32 %1, label %245 [
    i32 1, label %15
    i32 0, label %116
    i32 41, label %133
    i32 6, label %160
  ]

15:                                               ; preds = %14
  %16 = icmp ne i32 %4, 4
  %17 = icmp ne i32 %2, 25
  %18 = and i1 %17, %16
  br i1 %18, label %245, label %19

19:                                               ; preds = %15
  %20 = load i32, ptr %3, align 4
  %21 = icmp ne i32 %20, 0
  %22 = zext i1 %21 to i32
  switch i32 %2, label %245 [
    i32 8, label %23
    i32 7, label %33
    i32 47, label %43
    i32 12, label %57
    i32 18, label %59
    i32 36, label %64
    i32 25, label %69
    i32 62, label %92
    i32 9, label %97
    i32 15, label %110
  ]

23:                                               ; preds = %19
  %24 = load i32, ptr @sysctl_rmem_max, align 4
  %25 = tail call i32 @llvm.umin.i32(i32 %20, i32 %24)
  %26 = tail call i32 @llvm.smin.i32(i32 %25, i32 1073741823)
  %27 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 43
  %28 = load i8, ptr %27, align 8
  %29 = or i8 %28, 32
  store i8 %29, ptr %27, align 8
  %30 = shl i32 %26, 1
  %31 = tail call i32 @llvm.smax.i32(i32 %30, i32 2240)
  %32 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 15
  store volatile i32 %31, ptr %32, align 4
  br label %245

33:                                               ; preds = %19
  %34 = load i32, ptr @sysctl_wmem_max, align 4
  %35 = tail call i32 @llvm.umin.i32(i32 %20, i32 %34)
  %36 = tail call i32 @llvm.smin.i32(i32 %35, i32 1073741823)
  %37 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 43
  %38 = load i8, ptr %37, align 8
  %39 = or i8 %38, 16
  store i8 %39, ptr %37, align 8
  %40 = shl i32 %36, 1
  %41 = tail call i32 @llvm.smax.i32(i32 %40, i32 4480)
  %42 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 21
  store volatile i32 %41, ptr %42, align 8
  br label %245

43:                                               ; preds = %19
  %44 = icmp eq i32 %20, -1
  br i1 %44, label %52, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 30
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !70
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %46) #31, !srcloc !23
  br label %47

47:                                               ; preds = %47, %45
  %48 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %46, i32 0, i32 1) #31, !srcloc !45
  %49 = extractvalue { i32, i32 } %48, 0
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %47

51:                                               ; preds = %47
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !71
  br label %52

52:                                               ; preds = %51, %43
  %53 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 36
  store i32 %20, ptr %53, align 8
  %54 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 35
  %55 = load i32, ptr %54, align 4
  %56 = tail call i32 @llvm.umin.i32(i32 %55, i32 %20)
  store i32 %56, ptr %54, align 4
  br label %245

57:                                               ; preds = %19
  %58 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 33
  store i32 %20, ptr %58, align 4
  br label %245

59:                                               ; preds = %19
  %60 = tail call i32 @llvm.umin.i32(i32 %20, i32 2147483647)
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, i32 1, i32 %60
  %63 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 6
  store volatile i32 %62, ptr %63, align 4
  br label %245

64:                                               ; preds = %19
  %65 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 34
  %66 = load i32, ptr %65, align 8
  %67 = icmp eq i32 %66, %20
  br i1 %67, label %245, label %68

68:                                               ; preds = %64
  store i32 %20, ptr %65, align 8
  tail call fastcc void @sk_dst_reset(ptr noundef %0)
  br label %245

69:                                               ; preds = %19
  %70 = tail call i32 @llvm.smin.i32(i32 %4, i32 15)
  %71 = call ptr @strncpy(ptr noundef nonnull %6, ptr noundef %3, i32 noundef %70)
  %72 = getelementptr [16 x i8], ptr %6, i32 0, i32 %70
  store i8 0, ptr %72, align 1
  %73 = load i8, ptr %6, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %92, label %75

75:                                               ; preds = %69
  %76 = call ptr @dev_get_by_name(ptr noundef nonnull @init_net, ptr noundef nonnull %6) #31
  %77 = icmp eq ptr %76, null
  br i1 %77, label %245, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.net_device, ptr %76, i32 0, i32 17
  %80 = load i32, ptr %79, align 4
  %81 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #31, !srcloc !14
  %82 = getelementptr inbounds %struct.net_device, ptr %76, i32 0, i32 99
  %83 = load ptr, ptr %82, align 8
  %84 = ptrtoint ptr %83 to i32
  %85 = call i32 @llvm.read_register.i32(metadata !0) #31
  %86 = inttoptr i32 %85 to ptr
  %87 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %86) #21, !srcloc !15
  %88 = add i32 %87, %84
  %89 = inttoptr i32 %88 to ptr
  %90 = load i32, ptr %89, align 4
  %91 = add i32 %90, -1
  store i32 %91, ptr %89, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %81) #31, !srcloc !16
  br label %92

92:                                               ; preds = %78, %69, %19
  %93 = phi i32 [ 0, %19 ], [ 0, %69 ], [ %80, %78 ]
  %94 = icmp eq i32 %2, 62
  %95 = select i1 %94, i32 %20, i32 %93
  %96 = call i32 @sock_bindtoindex(ptr noundef %0, i32 noundef %95, i1 noundef zeroext false) #31
  br label %245

97:                                               ; preds = %19
  %98 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 8
  %99 = load ptr, ptr %98, align 8
  %100 = getelementptr inbounds %struct.proto, ptr %99, i32 0, i32 11
  %101 = load ptr, ptr %100, align 4
  %102 = icmp eq ptr %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %97
  tail call void %101(ptr noundef %0, i32 noundef %22) #31
  br label %104

104:                                              ; preds = %103, %97
  %105 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 13
  %106 = load i32, ptr %105, align 4
  %107 = and i32 %106, -9
  %108 = select i1 %21, i32 8, i32 0
  %109 = or i32 %107, %108
  store i32 %109, ptr %105, align 4
  br label %245

110:                                              ; preds = %19
  %111 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 5
  %112 = load i8, ptr %111, align 1
  %113 = select i1 %21, i8 16, i8 0
  %114 = and i8 %112, -17
  %115 = or i8 %114, %113
  store i8 %115, ptr %111, align 1
  br label %245

116:                                              ; preds = %14
  %117 = icmp eq i32 %4, 4
  br i1 %117, label %118, label %245

118:                                              ; preds = %116
  %119 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 3
  %120 = load i16, ptr %119, align 8
  %121 = icmp eq i16 %120, 2
  br i1 %121, label %122, label %245

122:                                              ; preds = %118
  %123 = load i32, ptr %3, align 4
  %124 = icmp ne i32 %2, 1
  %125 = add i32 %123, -256
  %126 = icmp ult i32 %125, -257
  %127 = select i1 %124, i1 true, i1 %126
  br i1 %127, label %245, label %128

128:                                              ; preds = %122
  %129 = icmp eq i32 %123, -1
  %130 = trunc i32 %123 to i8
  %131 = select i1 %129, i8 0, i8 %130
  %132 = getelementptr inbounds %struct.inet_sock, ptr %0, i32 0, i32 8
  store i8 %131, ptr %132, align 4
  br label %245

133:                                              ; preds = %14
  %134 = icmp eq i32 %4, 4
  br i1 %134, label %135, label %245

135:                                              ; preds = %133
  %136 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 3
  %137 = load i16, ptr %136, align 8
  %138 = icmp eq i16 %137, 10
  br i1 %138, label %139, label %245

139:                                              ; preds = %135
  %140 = load i32, ptr %3, align 4
  %141 = icmp ne i32 %2, 67
  %142 = add i32 %140, -256
  %143 = icmp ult i32 %142, -257
  %144 = select i1 %141, i1 true, i1 %143
  br i1 %144, label %245, label %145

145:                                              ; preds = %139
  %146 = load volatile i8, ptr %8, align 2
  %147 = zext i8 %146 to i32
  %148 = shl nuw i32 1, %147
  %149 = and i32 %148, -4161
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %struct.inet_sock, ptr %0, i32 0, i32 1
  %153 = load ptr, ptr %152, align 8
  br label %154

154:                                              ; preds = %151, %145
  %155 = phi ptr [ %153, %151 ], [ null, %145 ]
  %156 = icmp eq i32 %140, -1
  %157 = trunc i32 %140 to i8
  %158 = select i1 %156, i8 0, i8 %157
  %159 = getelementptr inbounds %struct.ipv6_pinfo, ptr %155, i32 0, i32 11
  store i8 %158, ptr %159, align 1
  br label %245

160:                                              ; preds = %14
  %161 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 8
  %162 = load ptr, ptr %161, align 8
  %163 = getelementptr inbounds %struct.proto, ptr %162, i32 0, i32 9
  %164 = load ptr, ptr %163, align 4
  %165 = icmp eq ptr %164, @tcp_setsockopt
  br i1 %165, label %166, label %245

166:                                              ; preds = %160
  %167 = icmp eq i32 %2, 13
  br i1 %167, label %168, label %173

168:                                              ; preds = %166
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %7, i8 0, i32 15, i1 false), !annotation !22
  %169 = tail call i32 @llvm.smin.i32(i32 %4, i32 15)
  %170 = call ptr @strncpy(ptr noundef nonnull %7, ptr noundef %3, i32 noundef %169)
  %171 = getelementptr inbounds [16 x i8], ptr %7, i32 0, i32 15
  store i8 0, ptr %171, align 1
  %172 = call i32 @tcp_set_congestion_control(ptr noundef %0, ptr noundef nonnull %7, i1 noundef zeroext false, i1 noundef zeroext true) #31
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #31
  br label %245

173:                                              ; preds = %166
  %174 = icmp eq i32 %4, 4
  br i1 %174, label %175, label %245

175:                                              ; preds = %173
  %176 = load i32, ptr %3, align 4
  switch i32 %2, label %245 [
    i32 1001, label %177
    i32 1002, label %190
    i32 1003, label %195
    i32 1004, label %201
    i32 27, label %207
    i32 4, label %215
    i32 5, label %217
    i32 6, label %223
    i32 7, label %229
    i32 18, label %235
    i32 25, label %239
    i32 10, label %243
  ]

177:                                              ; preds = %175
  %178 = icmp slt i32 %176, 1
  br i1 %178, label %245, label %179

179:                                              ; preds = %177
  %180 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 12
  %181 = load i32, ptr %180, align 4
  %182 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 39
  %183 = load i8, ptr %182, align 1
  %184 = lshr i8 %183, 2
  %185 = and i8 %184, 1
  %186 = zext i8 %185 to i32
  %187 = icmp ugt i32 %181, %186
  br i1 %187, label %245, label %188

188:                                              ; preds = %179
  %189 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 63
  store i32 %176, ptr %189, align 8
  br label %245

190:                                              ; preds = %175
  %191 = icmp slt i32 %176, 1
  br i1 %191, label %245, label %192

192:                                              ; preds = %190
  %193 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 65
  store i32 %176, ptr %193, align 8
  %194 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 62
  store i32 %176, ptr %194, align 4
  br label %245

195:                                              ; preds = %175
  %196 = tail call i32 @__usecs_to_jiffies(i32 noundef %176) #31
  %197 = add i32 %196, -21
  %198 = icmp ult i32 %197, -19
  br i1 %198, label %245, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.inet_connection_sock, ptr %0, i32 0, i32 8
  store i32 %196, ptr %200, align 4
  br label %245

201:                                              ; preds = %175
  %202 = tail call i32 @__usecs_to_jiffies(i32 noundef %176) #31
  %203 = add i32 %202, -21
  %204 = icmp ult i32 %203, -19
  br i1 %204, label %245, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.inet_connection_sock, ptr %0, i32 0, i32 7
  store i32 %202, ptr %206, align 8
  br label %245

207:                                              ; preds = %175
  %208 = icmp ugt i32 %176, 1
  br i1 %208, label %245, label %209

209:                                              ; preds = %207
  %210 = trunc i32 %176 to i8
  %211 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 39
  %212 = load i8, ptr %211, align 1
  %213 = and i8 %212, -4
  %214 = or i8 %213, %210
  store i8 %214, ptr %211, align 1
  br label %245

215:                                              ; preds = %175
  %216 = tail call i32 @tcp_sock_set_keepidle_locked(ptr noundef %0, i32 noundef %176) #31
  br label %245

217:                                              ; preds = %175
  %218 = add i32 %176, -32768
  %219 = icmp ult i32 %218, -32767
  br i1 %219, label %245, label %220

220:                                              ; preds = %217
  %221 = mul nuw nsw i32 %176, 100
  %222 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 105
  store i32 %221, ptr %222, align 4
  br label %245

223:                                              ; preds = %175
  %224 = add i32 %176, -128
  %225 = icmp ult i32 %224, -127
  br i1 %225, label %245, label %226

226:                                              ; preds = %223
  %227 = trunc i32 %176 to i8
  %228 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 57
  store i8 %227, ptr %228, align 1
  br label %245

229:                                              ; preds = %175
  %230 = add i32 %176, -128
  %231 = icmp ult i32 %230, -127
  br i1 %231, label %245, label %232

232:                                              ; preds = %229
  %233 = trunc i32 %176 to i8
  %234 = getelementptr inbounds %struct.inet_connection_sock, ptr %0, i32 0, i32 21
  store i8 %233, ptr %234, align 8
  br label %245

235:                                              ; preds = %175
  %236 = icmp slt i32 %176, 0
  br i1 %236, label %245, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds %struct.inet_connection_sock, ptr %0, i32 0, i32 27
  store i32 %176, ptr %238, align 4
  br label %245

239:                                              ; preds = %175
  %240 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 81
  store i32 %176, ptr %240, align 8
  %241 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 77
  %242 = load ptr, ptr %241, align 4
  tail call void %242(ptr noundef %0) #31
  br label %245

243:                                              ; preds = %175
  %244 = tail call i32 @tcp_set_window_clamp(ptr noundef %0, i32 noundef %176) #31
  br label %245

245:                                              ; preds = %243, %239, %237, %235, %232, %229, %226, %223, %220, %217, %215, %209, %207, %205, %201, %199, %195, %192, %190, %188, %179, %177, %175, %173, %168, %160, %154, %139, %135, %133, %128, %122, %118, %116, %110, %104, %92, %75, %68, %64, %59, %57, %52, %33, %23, %19, %15, %14, %5
  %246 = phi i32 [ -22, %5 ], [ -22, %15 ], [ -22, %118 ], [ -22, %116 ], [ -22, %135 ], [ -22, %133 ], [ -22, %201 ], [ -22, %195 ], [ -22, %173 ], [ 0, %110 ], [ 0, %104 ], [ %96, %92 ], [ 0, %68 ], [ 0, %64 ], [ 0, %59 ], [ 0, %57 ], [ 0, %52 ], [ 0, %33 ], [ 0, %23 ], [ 0, %128 ], [ 0, %154 ], [ %172, %168 ], [ -22, %19 ], [ -22, %122 ], [ -22, %139 ], [ -22, %14 ], [ -22, %160 ], [ -19, %75 ], [ -22, %175 ], [ -22, %235 ], [ -22, %229 ], [ -22, %223 ], [ -22, %217 ], [ -22, %207 ], [ -22, %190 ], [ -22, %177 ], [ -22, %179 ], [ 0, %188 ], [ 0, %192 ], [ 0, %199 ], [ 0, %205 ], [ 0, %209 ], [ %216, %215 ], [ 0, %220 ], [ 0, %226 ], [ 0, %232 ], [ 0, %237 ], [ 0, %239 ], [ %244, %243 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #31
  ret i32 %246
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @sk_dst_reset(ptr noundef %0) unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 16
  store i16 -1, ptr %2, align 4
  %3 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 29
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 19
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !72
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %4) #31, !srcloc !23
  %5 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %4) #31, !srcloc !73
  %6 = extractvalue { i32, i32 } %5, 0
  %7 = inttoptr i32 %6 to ptr
  tail call void asm sideeffect "dmb ish", "~{memory}"() #31, !srcloc !74
  tail call void @dst_release(ptr noundef %7) #31
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #28

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_get_by_name(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_bindtoindex(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_setsockopt(ptr noundef, i32 noundef, i32 noundef, [2 x i32], i32 noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_set_congestion_control(ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_sock_set_keepidle_locked(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_set_window_clamp(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__usecs_to_jiffies(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc i32 @_bpf_getsockopt(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) unnamed_addr #13 {
  %6 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 4
  %7 = load volatile i8, ptr %6, align 2
  %8 = zext i8 %7 to i32
  %9 = shl nuw i32 1, %8
  %10 = and i32 %9, -4161
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %106, label %12

12:                                               ; preds = %5
  switch i32 %1, label %106 [
    i32 1, label %13
    i32 6, label %37
    i32 0, label %72
    i32 41, label %84
  ]

13:                                               ; preds = %12
  %14 = icmp eq i32 %4, 4
  br i1 %14, label %15, label %106

15:                                               ; preds = %13
  switch i32 %2, label %106 [
    i32 8, label %16
    i32 7, label %19
    i32 36, label %22
    i32 12, label %25
    i32 62, label %28
    i32 15, label %31
  ]

16:                                               ; preds = %15
  %17 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 15
  %18 = load i32, ptr %17, align 4
  store i32 %18, ptr %3, align 4
  br label %107

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 21
  %21 = load i32, ptr %20, align 8
  store i32 %21, ptr %3, align 4
  br label %107

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 34
  %24 = load i32, ptr %23, align 8
  store i32 %24, ptr %3, align 4
  br label %107

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.sock, ptr %0, i32 0, i32 33
  %27 = load i32, ptr %26, align 4
  store i32 %27, ptr %3, align 4
  br label %107

28:                                               ; preds = %15
  %29 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 6
  %30 = load i32, ptr %29, align 4
  store i32 %30, ptr %3, align 4
  br label %107

31:                                               ; preds = %15
  %32 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 5
  %33 = load i8, ptr %32, align 1
  %34 = lshr i8 %33, 4
  %35 = and i8 %34, 1
  %36 = zext i8 %35 to i32
  store i32 %36, ptr %3, align 4
  br label %107

37:                                               ; preds = %12
  %38 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 8
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds %struct.proto, ptr %39, i32 0, i32 10
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, @tcp_getsockopt
  br i1 %42, label %43, label %106

43:                                               ; preds = %37
  switch i32 %2, label %106 [
    i32 13, label %44
    i32 28, label %55
  ]

44:                                               ; preds = %43
  %45 = getelementptr inbounds %struct.inet_connection_sock, ptr %0, i32 0, i32 10
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  %48 = icmp slt i32 %4, 2
  %49 = or i1 %48, %47
  br i1 %49, label %106, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.tcp_congestion_ops, ptr %46, i32 0, i32 11
  %52 = tail call ptr @strncpy(ptr noundef %3, ptr noundef %51, i32 noundef %4)
  %53 = add nsw i32 %4, -1
  %54 = getelementptr i8, ptr %3, i32 %53
  store i8 0, ptr %54, align 1
  br label %107

55:                                               ; preds = %43
  %56 = icmp slt i32 %4, 1
  br i1 %56, label %106, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.tcp_sock, ptr %0, i32 0, i32 117
  %59 = load ptr, ptr %58, align 4
  %60 = icmp eq ptr %59, null
  br i1 %60, label %106, label %61

61:                                               ; preds = %57
  %62 = load i32, ptr %59, align 4
  %63 = getelementptr inbounds %struct.saved_syn, ptr %59, i32 0, i32 1
  %64 = load i32, ptr %63, align 4
  %65 = add i32 %64, %62
  %66 = getelementptr inbounds %struct.saved_syn, ptr %59, i32 0, i32 2
  %67 = load i32, ptr %66, align 4
  %68 = add i32 %65, %67
  %69 = icmp ult i32 %68, %4
  br i1 %69, label %106, label %70

70:                                               ; preds = %61
  %71 = getelementptr inbounds %struct.saved_syn, ptr %59, i32 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %3, ptr align 4 %71, i32 %4, i1 false)
  br label %107

72:                                               ; preds = %12
  %73 = icmp eq i32 %4, 4
  br i1 %73, label %74, label %106

74:                                               ; preds = %72
  %75 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 3
  %76 = load i16, ptr %75, align 8
  %77 = icmp eq i16 %76, 2
  %78 = icmp eq i32 %2, 1
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %106

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.inet_sock, ptr %0, i32 0, i32 8
  %82 = load i8, ptr %81, align 4
  %83 = zext i8 %82 to i32
  store i32 %83, ptr %3, align 4
  br label %107

84:                                               ; preds = %12
  %85 = load volatile i8, ptr %6, align 2
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 1, %86
  %88 = and i32 %87, -4161
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.inet_sock, ptr %0, i32 0, i32 1
  %92 = load ptr, ptr %91, align 8
  br label %93

93:                                               ; preds = %90, %84
  %94 = phi ptr [ %92, %90 ], [ null, %84 ]
  %95 = icmp eq i32 %4, 4
  br i1 %95, label %96, label %106

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.sock_common, ptr %0, i32 0, i32 3
  %98 = load i16, ptr %97, align 8
  %99 = icmp eq i16 %98, 10
  %100 = icmp eq i32 %2, 67
  %101 = and i1 %100, %99
  br i1 %101, label %102, label %106

102:                                              ; preds = %96
  %103 = getelementptr inbounds %struct.ipv6_pinfo, ptr %94, i32 0, i32 11
  %104 = load i8, ptr %103, align 1
  %105 = zext i8 %104 to i32
  store i32 %105, ptr %3, align 4
  br label %107

106:                                              ; preds = %96, %93, %74, %72, %61, %57, %55, %44, %43, %37, %15, %13, %12, %5
  tail call void @llvm.memset.p0.i32(ptr align 1 %3, i8 0, i32 %4, i1 false)
  br label %107

107:                                              ; preds = %106, %102, %80, %70, %50, %31, %28, %25, %22, %19, %16
  %108 = phi i32 [ -22, %106 ], [ 0, %102 ], [ 0, %80 ], [ 0, %16 ], [ 0, %19 ], [ 0, %22 ], [ 0, %25 ], [ 0, %28 ], [ 0, %31 ], [ 0, %50 ], [ 0, %70 ]
  ret i32 %108
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_getsockopt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc i32 @bpf_sock_ops_get_syn(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.bpf_sock_ops_kern, ptr %0, i32 0, i32 2
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %58, label %7

7:                                                ; preds = %3
  switch i32 %1, label %40 [
    i32 1005, label %8
    i32 1006, label %22
  ]

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 17
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 16
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 13, i32 0, i32 17
  %14 = load i16, ptr %13, align 2
  %15 = zext i16 %14 to i32
  %16 = getelementptr i8, ptr %12, i32 %15
  %17 = getelementptr inbounds %struct.tcphdr, ptr %16, i32 0, i32 4
  %18 = load i16, ptr %17, align 4
  %19 = lshr i16 %18, 2
  %20 = and i16 %19, 60
  %21 = zext i16 %20 to i32
  br label %98

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 16
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 13, i32 0, i32 18
  %26 = load i16, ptr %25, align 4
  %27 = zext i16 %26 to i32
  %28 = getelementptr i8, ptr %24, i32 %27
  %29 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 13, i32 0, i32 17
  %30 = load i16, ptr %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %31, %27
  %33 = getelementptr i8, ptr %24, i32 %31
  %34 = getelementptr inbounds %struct.tcphdr, ptr %33, i32 0, i32 4
  %35 = load i16, ptr %34, align 4
  %36 = lshr i16 %35, 2
  %37 = and i16 %36, 60
  %38 = zext i16 %37 to i32
  %39 = add nsw i32 %32, %38
  br label %98

40:                                               ; preds = %7
  %41 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 16
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 13, i32 0, i32 19
  %44 = load i16, ptr %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr i8, ptr %42, i32 %45
  %47 = getelementptr inbounds %struct.sk_buff, ptr %5, i32 0, i32 13, i32 0, i32 17
  %48 = load i16, ptr %47, align 2
  %49 = zext i16 %48 to i32
  %50 = getelementptr i8, ptr %42, i32 %49
  %51 = getelementptr inbounds %struct.tcphdr, ptr %50, i32 0, i32 4
  %52 = load i16, ptr %51, align 4
  %53 = lshr i16 %52, 2
  %54 = and i16 %53, 60
  %55 = zext i16 %54 to i32
  %56 = sub nsw i32 %49, %45
  %57 = add nsw i32 %56, %55
  br label %98

58:                                               ; preds = %3
  %59 = load ptr, ptr %0, align 8
  %60 = getelementptr inbounds %struct.sock_common, ptr %59, i32 0, i32 4
  %61 = load volatile i8, ptr %60, align 2
  %62 = icmp eq i8 %61, 12
  %63 = getelementptr inbounds %struct.request_sock, ptr %59, i32 0, i32 9
  %64 = getelementptr inbounds %struct.tcp_sock, ptr %59, i32 0, i32 117
  %65 = select i1 %62, ptr %63, ptr %64
  %66 = load ptr, ptr %65, align 4
  %67 = icmp eq ptr %66, null
  br i1 %67, label %101, label %68

68:                                               ; preds = %58
  switch i32 %1, label %87 [
    i32 1005, label %69
    i32 1006, label %78
  ]

69:                                               ; preds = %68
  %70 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 3
  %71 = load i32, ptr %66, align 4
  %72 = getelementptr i8, ptr %70, i32 %71
  %73 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 1
  %74 = load i32, ptr %73, align 4
  %75 = getelementptr i8, ptr %72, i32 %74
  %76 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 2
  %77 = load i32, ptr %76, align 4
  br label %98

78:                                               ; preds = %68
  %79 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 3
  %80 = load i32, ptr %66, align 4
  %81 = getelementptr i8, ptr %79, i32 %80
  %82 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 1
  %83 = load i32, ptr %82, align 4
  %84 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 2
  %85 = load i32, ptr %84, align 4
  %86 = add i32 %85, %83
  br label %98

87:                                               ; preds = %68
  %88 = load i32, ptr %66, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 3
  %92 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 1
  %93 = load i32, ptr %92, align 4
  %94 = add i32 %93, %88
  %95 = getelementptr inbounds %struct.saved_syn, ptr %66, i32 0, i32 2
  %96 = load i32, ptr %95, align 4
  %97 = add i32 %94, %96
  br label %98

98:                                               ; preds = %90, %78, %69, %40, %22, %8
  %99 = phi ptr [ %10, %8 ], [ %28, %22 ], [ %46, %40 ], [ %91, %90 ], [ %81, %78 ], [ %75, %69 ]
  %100 = phi i32 [ %21, %8 ], [ %39, %22 ], [ %57, %40 ], [ %97, %90 ], [ %86, %78 ], [ %77, %69 ]
  store ptr %99, ptr %2, align 4
  br label %101

101:                                              ; preds = %98, %87, %58
  %102 = phi i32 [ %100, %98 ], [ -2, %87 ], [ -2, %58 ]
  ret i32 %102
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__inet_bind(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @bpf_ipv4_fib_lookup(ptr nocapture noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca %struct.fib_result, align 4
  %5 = alloca %struct.flowi4, align 8
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %4) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(28) %4, i8 0, i32 28, i1 false), !annotation !22
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %5) #31
  %6 = getelementptr inbounds i8, ptr %5, i32 8
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(56) %6, i8 0, i32 48, i1 false), !annotation !22
  %7 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 5
  %8 = load i32, ptr %7, align 4
  %9 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %8) #31
  %10 = icmp eq ptr %9, null
  br i1 %10, label %185, label %11, !prof !18

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 68
  %13 = load volatile ptr, ptr %12, align 16
  %14 = icmp eq ptr %13, null
  br i1 %14, label %185, label %15, !prof !18

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.in_device, ptr %13, i32 0, i32 21, i32 1
  %17 = load i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %185, label %19, !prof !18

19:                                               ; preds = %15
  %20 = and i32 %1, 2
  %21 = icmp eq i32 %20, 0
  %22 = load i32, ptr %7, align 4
  %23 = select i1 %21, i32 %22, i32 1
  %24 = select i1 %21, i32 0, i32 %22
  %25 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 1
  store i32 %23, ptr %25, align 4
  store i32 %24, ptr %5, align 8
  %26 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 6
  %27 = load i8, ptr %26, align 4
  %28 = and i8 %27, 28
  %29 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 3
  store i8 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 4
  store i8 0, ptr %30, align 1
  %31 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 6
  store i8 0, ptr %31, align 1
  %32 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 1
  %33 = load i8, ptr %32, align 1
  %34 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 5
  store i8 %33, ptr %34, align 2
  %35 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 8
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.flowi4, ptr %5, i32 0, i32 2
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 7
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.flowi4, ptr %5, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 2
  %42 = load i16, ptr %41, align 2
  %43 = getelementptr inbounds %struct.flowi4, ptr %5, i32 0, i32 3
  %44 = getelementptr inbounds %struct.anon.125, ptr %43, i32 0, i32 1
  store i16 %42, ptr %44, align 2
  %45 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 3
  %46 = load i16, ptr %45, align 4
  store i16 %46, ptr %43, align 8
  %47 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 10
  store i32 0, ptr %47, align 8
  %48 = and i32 %1, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %19
  %51 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 35, i32 12), align 64
  %52 = load volatile ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %185, label %54, !prof !18

54:                                               ; preds = %50
  %55 = call i32 @fib_table_lookup(ptr noundef nonnull %52, ptr noundef nonnull %5, ptr noundef nonnull %4, i32 noundef 1) #31
  br label %68

56:                                               ; preds = %19
  %57 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 2
  store i32 0, ptr %57, align 8
  %58 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 7
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(16) %58, i8 0, i64 16, i1 false)
  tail call void asm sideeffect "", "~{memory}"() #31, !srcloc !17
  %59 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 35, i32 12), align 64
  %60 = load volatile ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = call i32 @fib_table_lookup(ptr noundef nonnull %60, ptr noundef nonnull %5, ptr noundef nonnull %4, i32 noundef 1) #31
  %64 = icmp eq i32 %63, -11
  %65 = select i1 %64, i32 -101, i32 %63
  br label %66

66:                                               ; preds = %62, %56
  %67 = phi i32 [ -101, %56 ], [ %65, %62 ]
  call void asm sideeffect "", "~{memory}"() #31, !srcloc !21
  br label %68

68:                                               ; preds = %66, %54
  %69 = phi i32 [ %55, %54 ], [ %67, %66 ]
  switch i32 %69, label %72 [
    i32 0, label %73
    i32 -22, label %185
    i32 -113, label %70
    i32 -13, label %71
  ]

70:                                               ; preds = %68
  br label %185

71:                                               ; preds = %68
  br label %185

72:                                               ; preds = %68
  br label %185

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.fib_result, ptr %4, i32 0, i32 3
  %75 = load i8, ptr %74, align 2
  %76 = icmp eq i8 %75, 1
  br i1 %76, label %77, label %185

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.fib_result, ptr %4, i32 0, i32 7
  %79 = load ptr, ptr %78, align 4
  %80 = getelementptr inbounds %struct.fib_info, ptr %79, i32 0, i32 18
  %81 = load ptr, ptr %80, align 4
  %82 = icmp eq ptr %81, null
  br i1 %82, label %97, label %83, !prof !10

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.nexthop, ptr %81, i32 0, i32 9
  %85 = load i8, ptr %84, align 2, !range !30
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %104, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.nexthop, ptr %81, i32 0, i32 12
  %89 = load volatile ptr, ptr %88, align 4
  %90 = getelementptr inbounds %struct.nh_group, ptr %89, i32 0, i32 2
  %91 = load i8, ptr %90, align 2, !range !30
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %104, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.nh_group, ptr %89, i32 0, i32 1
  %95 = load i16, ptr %94, align 4
  %96 = zext i16 %95 to i32
  br label %100

97:                                               ; preds = %77
  %98 = getelementptr inbounds %struct.fib_info, ptr %79, i32 0, i32 15
  %99 = load i32, ptr %98, align 4
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i32 [ %99, %97 ], [ %96, %93 ]
  %102 = icmp ugt i32 %101, 1
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @fib_select_path(ptr noundef nonnull @init_net, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef null) #31
  br label %104

104:                                              ; preds = %103, %100, %87, %83
  br i1 %2, label %105, label %114

105:                                              ; preds = %104
  %106 = load i32, ptr %35, align 4
  %107 = call i32 @ip_mtu_from_fib_result(ptr noundef nonnull %4, i32 noundef %106) #31
  %108 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 4
  %109 = load i16, ptr %108, align 2
  %110 = zext i16 %109 to i32
  %111 = icmp ult i32 %107, %110
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = trunc i32 %107 to i16
  store i16 %113, ptr %108, align 2
  br label %185

114:                                              ; preds = %105, %104
  %115 = phi i32 [ %107, %105 ], [ 0, %104 ]
  %116 = getelementptr inbounds %struct.fib_result, ptr %4, i32 0, i32 6
  %117 = load ptr, ptr %116, align 4
  %118 = getelementptr inbounds %struct.fib_nh_common, ptr %117, i32 0, i32 7
  %119 = load ptr, ptr %118, align 4
  %120 = icmp eq ptr %119, null
  br i1 %120, label %121, label %185

121:                                              ; preds = %114
  %122 = load ptr, ptr %117, align 4
  %123 = load ptr, ptr %78, align 4
  %124 = getelementptr inbounds %struct.fib_info, ptr %123, i32 0, i32 13
  %125 = load i32, ptr %124, align 4
  store i32 %125, ptr %26, align 4
  %126 = getelementptr inbounds %struct.net_device, ptr %122, i32 0, i32 17
  %127 = load i32, ptr %126, align 4
  store i32 %127, ptr %7, align 4
  %128 = getelementptr inbounds %struct.fib_nh_common, ptr %117, i32 0, i32 5
  %129 = load i8, ptr %128, align 2
  switch i8 %129, label %132 [
    i8 10, label %168
    i8 0, label %130
  ], !prof !75

130:                                              ; preds = %121
  %131 = load i32, ptr %35, align 4
  br label %135

132:                                              ; preds = %121
  %133 = getelementptr inbounds %struct.fib_nh_common, ptr %117, i32 0, i32 8
  %134 = load i32, ptr %133, align 4
  store i32 %134, ptr %35, align 4
  br label %135

135:                                              ; preds = %132, %130
  %136 = phi i32 [ %131, %130 ], [ %134, %132 ]
  %137 = getelementptr inbounds %struct.net_device, ptr %122, i32 0, i32 14
  %138 = load i32, ptr %137, align 8
  %139 = and i32 %138, 24
  %140 = icmp eq i32 %139, 0
  %141 = select i1 %140, i32 %136, i32 0
  %142 = load volatile ptr, ptr getelementptr inbounds (%struct.neigh_table, ptr @arp_tbl, i32 0, i32 31), align 4
  %143 = getelementptr inbounds %struct.neigh_hash_table, ptr %142, i32 0, i32 2
  %144 = ptrtoint ptr %122 to i32
  %145 = xor i32 %141, %144
  %146 = load i32, ptr %143, align 4
  %147 = mul i32 %145, %146
  %148 = getelementptr inbounds %struct.neigh_hash_table, ptr %142, i32 0, i32 1
  %149 = load i32, ptr %148, align 4
  %150 = sub i32 32, %149
  %151 = lshr i32 %147, %150
  %152 = load ptr, ptr %142, align 4
  %153 = getelementptr ptr, ptr %152, i32 %151
  %154 = load volatile ptr, ptr %153, align 4
  %155 = icmp eq ptr %154, null
  br i1 %155, label %185, label %156

156:                                              ; preds = %165, %135
  %157 = phi ptr [ %166, %165 ], [ %154, %135 ]
  %158 = getelementptr inbounds %struct.neighbour, ptr %157, i32 0, i32 26
  %159 = load ptr, ptr %158, align 4
  %160 = icmp eq ptr %159, %122
  br i1 %160, label %161, label %165

161:                                              ; preds = %156
  %162 = getelementptr inbounds %struct.neighbour, ptr %157, i32 0, i32 28
  %163 = load i32, ptr %162, align 8
  %164 = icmp eq i32 %163, %141
  br i1 %164, label %172, label %165

165:                                              ; preds = %161, %156
  %166 = load volatile ptr, ptr %157, align 4
  %167 = icmp eq ptr %166, null
  br i1 %167, label %185, label %156

168:                                              ; preds = %121
  store i8 10, ptr %0, align 4
  %169 = getelementptr inbounds %struct.fib_nh_common, ptr %117, i32 0, i32 8
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %35, ptr noundef align 4 dereferenceable(16) %169, i32 16, i1 false)
  %170 = call fastcc ptr @__ipv6_neigh_lookup_noref_stub(ptr noundef %122, ptr noundef %35)
  %171 = icmp eq ptr %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %168, %161
  %173 = phi ptr [ %170, %168 ], [ %157, %161 ]
  %174 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 12
  %175 = getelementptr inbounds %struct.neighbour, ptr %173, i32 0, i32 19
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 2 dereferenceable(6) %174, ptr noundef align 8 dereferenceable(6) %175, i32 6, i1 false) #31
  %176 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 11
  %177 = getelementptr inbounds %struct.net_device, ptr %122, i32 0, i32 72
  %178 = load ptr, ptr %177, align 32
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(6) %176, ptr noundef align 1 dereferenceable(6) %178, i32 6, i1 false) #31
  %179 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 10
  store i16 0, ptr %179, align 2
  %180 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 9
  store i16 0, ptr %180, align 4
  %181 = icmp eq i32 %115, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %172
  %183 = trunc i32 %115 to i16
  %184 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 4
  store i16 %183, ptr %184, align 2
  br label %185

185:                                              ; preds = %182, %172, %168, %165, %135, %114, %112, %73, %72, %71, %70, %68, %50, %15, %11, %3
  %186 = phi i32 [ 2, %70 ], [ 3, %71 ], [ 4, %72 ], [ 8, %112 ], [ -19, %3 ], [ 5, %15 ], [ 1, %68 ], [ 4, %73 ], [ 6, %114 ], [ 7, %168 ], [ 5, %11 ], [ 0, %172 ], [ 0, %182 ], [ 4, %50 ], [ 7, %135 ], [ 7, %165 ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %4) #31
  ret i32 %186
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @bpf_ipv6_fib_lookup(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca %struct.fib6_result, align 4
  %5 = alloca %struct.flowi6, align 8
  %6 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 7
  %7 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #31
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #31
  %8 = getelementptr inbounds i8, ptr %5, i32 8
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(88) %8, i8 0, i32 80, i1 false), !annotation !22
  %9 = tail call i32 @__ipv6_addr_type(ptr noundef %7) #31
  %10 = and i32 %9, 50
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %143

12:                                               ; preds = %3
  %13 = tail call i32 @__ipv6_addr_type(ptr noundef %6) #31
  %14 = and i32 %13, 50
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %143

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 5
  %18 = load i32, ptr %17, align 4
  %19 = tail call ptr @dev_get_by_index_rcu(ptr noundef nonnull @init_net, i32 noundef %18) #31
  %20 = icmp eq ptr %19, null
  br i1 %20, label %143, label %21, !prof !18

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.net_device, ptr %19, i32 0, i32 69
  %23 = load volatile ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %143, label %25, !prof !18

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.inet6_dev, ptr %23, i32 0, i32 32
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %143, label %29, !prof !18

29:                                               ; preds = %25
  %30 = and i32 %1, 2
  %31 = icmp eq i32 %30, 0
  %32 = load i32, ptr %17, align 4
  %33 = select i1 %31, i32 %32, i32 1
  %34 = select i1 %31, i32 0, i32 %32
  %35 = shl nuw nsw i32 %30, 1
  %36 = xor i32 %35, 4
  %37 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 1
  store i32 %33, ptr %37, align 4
  store i32 %34, ptr %5, align 8
  %38 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 6
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.flowi6, ptr %5, i32 0, i32 3
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 4
  store i8 0, ptr %41, align 1
  %42 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 6
  store i8 0, ptr %42, align 1
  %43 = getelementptr inbounds %struct.flowi6, ptr %5, i32 0, i32 5
  store i32 0, ptr %43, align 8
  %44 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 1
  %45 = load i8, ptr %44, align 1
  %46 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 5
  store i8 %45, ptr %46, align 2
  %47 = getelementptr inbounds %struct.flowi6, ptr %5, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(16) %47, ptr noundef align 4 dereferenceable(16) %7, i32 16, i1 false)
  %48 = getelementptr inbounds %struct.flowi6, ptr %5, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(16) %48, ptr noundef align 4 dereferenceable(16) %6, i32 16, i1 false)
  %49 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 2
  %50 = load i16, ptr %49, align 2
  %51 = getelementptr inbounds %struct.flowi6, ptr %5, i32 0, i32 4
  %52 = getelementptr inbounds %struct.anon.125, ptr %51, i32 0, i32 1
  store i16 %50, ptr %52, align 2
  %53 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 3
  %54 = load i16, ptr %53, align 4
  store i16 %54, ptr %51, align 4
  %55 = and i32 %1, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %29
  %58 = load ptr, ptr @ipv6_stub, align 4
  %59 = getelementptr inbounds %struct.ipv6_stub, ptr %58, i32 0, i32 4
  %60 = load ptr, ptr %59, align 4
  %61 = tail call ptr %60(ptr noundef nonnull @init_net, i32 noundef 254) #31
  %62 = icmp eq ptr %61, null
  br i1 %62, label %143, label %63, !prof !18

63:                                               ; preds = %57
  %64 = load ptr, ptr @ipv6_stub, align 4
  %65 = getelementptr inbounds %struct.ipv6_stub, ptr %64, i32 0, i32 6
  %66 = load ptr, ptr %65, align 4
  %67 = call i32 %66(ptr noundef nonnull @init_net, ptr noundef nonnull %61, i32 noundef %32, ptr noundef nonnull %5, ptr noundef nonnull %4, i32 noundef %36) #31
  br label %75

68:                                               ; preds = %29
  %69 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 2
  store i32 0, ptr %69, align 8
  %70 = getelementptr inbounds %struct.flowi_common, ptr %5, i32 0, i32 7
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(16) %70, i8 0, i64 16, i1 false)
  %71 = load ptr, ptr @ipv6_stub, align 4
  %72 = getelementptr inbounds %struct.ipv6_stub, ptr %71, i32 0, i32 5
  %73 = load ptr, ptr %72, align 4
  %74 = call i32 %73(ptr noundef nonnull @init_net, i32 noundef %32, ptr noundef nonnull %5, ptr noundef nonnull %4, i32 noundef %36) #31
  br label %75

75:                                               ; preds = %68, %63
  %76 = phi i32 [ %67, %63 ], [ %74, %68 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %143, !prof !10

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.fib6_result, ptr %4, i32 0, i32 1
  %80 = load ptr, ptr %79, align 4
  %81 = icmp eq ptr %80, null
  %82 = icmp ugt ptr %80, inttoptr (i32 -4096 to ptr)
  %83 = or i1 %81, %82
  %84 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 36, i32 6), align 16
  %85 = icmp eq ptr %80, %84
  %86 = select i1 %83, i1 true, i1 %85
  br i1 %86, label %143, label %87, !prof !42

87:                                               ; preds = %78
  %88 = getelementptr inbounds %struct.fib6_result, ptr %4, i32 0, i32 3
  %89 = load i8, ptr %88, align 4
  switch i8 %89, label %92 [
    i8 1, label %93
    i8 6, label %143
    i8 7, label %90
    i8 8, label %91
  ]

90:                                               ; preds = %87
  br label %143

91:                                               ; preds = %87
  br label %143

92:                                               ; preds = %87
  br label %143

93:                                               ; preds = %87
  %94 = load ptr, ptr @ipv6_stub, align 4
  %95 = getelementptr inbounds %struct.ipv6_stub, ptr %94, i32 0, i32 7
  %96 = load ptr, ptr %95, align 4
  %97 = load i32, ptr %5, align 8
  %98 = icmp ne i32 %97, 0
  call void %96(ptr noundef nonnull @init_net, ptr noundef nonnull %4, ptr noundef nonnull %5, i32 noundef %97, i1 noundef zeroext %98, ptr noundef null, i32 noundef %36) #31
  br i1 %2, label %99, label %110

99:                                               ; preds = %93
  %100 = load ptr, ptr @ipv6_stub, align 4
  %101 = getelementptr inbounds %struct.ipv6_stub, ptr %100, i32 0, i32 8
  %102 = load ptr, ptr %101, align 4
  %103 = call i32 %102(ptr noundef nonnull %4, ptr noundef %7, ptr noundef %6) #31
  %104 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 4
  %105 = load i16, ptr %104, align 2
  %106 = zext i16 %105 to i32
  %107 = icmp ult i32 %103, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %99
  %109 = trunc i32 %103 to i16
  store i16 %109, ptr %104, align 2
  br label %143

110:                                              ; preds = %99, %93
  %111 = phi i32 [ %103, %99 ], [ 0, %93 ]
  %112 = load ptr, ptr %4, align 4
  %113 = getelementptr inbounds %struct.fib_nh_common, ptr %112, i32 0, i32 7
  %114 = load ptr, ptr %113, align 4
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %143

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.fib_nh_common, ptr %112, i32 0, i32 5
  %118 = load i8, ptr %117, align 2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.fib_nh_common, ptr %112, i32 0, i32 8
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(16) %7, ptr noundef align 4 dereferenceable(16) %121, i32 16, i1 false)
  br label %122

122:                                              ; preds = %120, %116
  %123 = load ptr, ptr %112, align 4
  %124 = load ptr, ptr %79, align 4
  %125 = getelementptr inbounds %struct.fib6_info, ptr %124, i32 0, i32 12
  %126 = load i32, ptr %125, align 4
  store i32 %126, ptr %38, align 4
  %127 = getelementptr inbounds %struct.net_device, ptr %123, i32 0, i32 17
  %128 = load i32, ptr %127, align 4
  store i32 %128, ptr %17, align 4
  %129 = call fastcc ptr @__ipv6_neigh_lookup_noref_stub(ptr noundef %123, ptr noundef %7)
  %130 = icmp eq ptr %129, null
  br i1 %130, label %143, label %131

131:                                              ; preds = %122
  %132 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 12
  %133 = getelementptr inbounds %struct.neighbour, ptr %129, i32 0, i32 19
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 2 dereferenceable(6) %132, ptr noundef align 8 dereferenceable(6) %133, i32 6, i1 false) #31
  %134 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 11
  %135 = getelementptr inbounds %struct.net_device, ptr %123, i32 0, i32 72
  %136 = load ptr, ptr %135, align 32
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 4 dereferenceable(6) %134, ptr noundef align 1 dereferenceable(6) %136, i32 6, i1 false) #31
  %137 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 10
  store i16 0, ptr %137, align 2
  %138 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 9
  store i16 0, ptr %138, align 4
  %139 = icmp eq i32 %111, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %131
  %141 = trunc i32 %111 to i16
  %142 = getelementptr inbounds %struct.bpf_fib_lookup, ptr %0, i32 0, i32 4
  store i16 %141, ptr %142, align 2
  br label %143

143:                                              ; preds = %140, %131, %122, %110, %108, %92, %91, %90, %87, %78, %75, %57, %25, %21, %16, %12, %3
  %144 = phi i32 [ 4, %92 ], [ 3, %91 ], [ 2, %90 ], [ 8, %108 ], [ 4, %12 ], [ 4, %3 ], [ -19, %16 ], [ 5, %25 ], [ 1, %87 ], [ 6, %110 ], [ 7, %122 ], [ 5, %21 ], [ 4, %78 ], [ 4, %75 ], [ 0, %131 ], [ 0, %140 ], [ 4, %57 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #31
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #31
  ret i32 %144
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fib_table_lookup(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @fib_select_path(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ip_mtu_from_fib_result(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__ipv6_addr_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_skb_forwardable(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @skb_gso_validate_network_len(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @sk_lookup(ptr noundef %0, ptr noundef %1, i32 noundef %2, i8 noundef zeroext %3, i8 noundef zeroext %4) unnamed_addr #0 {
  %6 = icmp eq i8 %3, 2
  br i1 %6, label %7, label %24

7:                                                ; preds = %5
  %8 = load i32, ptr %1, align 4
  %9 = getelementptr inbounds %struct.anon.209, ptr %1, i32 0, i32 1
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i8 %4, 6
  %12 = getelementptr inbounds %struct.anon.209, ptr %1, i32 0, i32 2
  %13 = load i16, ptr %12, align 4
  %14 = getelementptr inbounds %struct.anon.209, ptr %1, i32 0, i32 3
  %15 = load i16, ptr %14, align 2
  br i1 %11, label %16, label %22

16:                                               ; preds = %7
  %17 = tail call i16 @llvm.bswap.i16(i16 %15) #31
  %18 = tail call ptr @__inet_lookup_established(ptr noundef %0, ptr noundef nonnull @tcp_hashinfo, i32 noundef %8, i16 noundef zeroext %13, i32 noundef %10, i16 noundef zeroext %17, i32 noundef %2, i32 noundef 0) #31
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %59

20:                                               ; preds = %16
  %21 = tail call ptr @__inet_lookup_listener(ptr noundef %0, ptr noundef nonnull @tcp_hashinfo, ptr noundef null, i32 noundef 0, i32 noundef %8, i16 noundef zeroext %13, i32 noundef %10, i16 noundef zeroext %17, i32 noundef %2, i32 noundef 0) #31
  br label %48

22:                                               ; preds = %7
  %23 = tail call ptr @__udp4_lib_lookup(ptr noundef %0, i32 noundef %8, i16 noundef zeroext %13, i32 noundef %10, i16 noundef zeroext %15, i32 noundef %2, i32 noundef 0, ptr noundef nonnull @udp_table, ptr noundef null) #31
  br label %48

24:                                               ; preds = %5
  %25 = getelementptr inbounds %struct.anon.210, ptr %1, i32 0, i32 1
  %26 = icmp eq i8 %4, 6
  br i1 %26, label %27, label %37

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.anon.210, ptr %1, i32 0, i32 2
  %29 = load i16, ptr %28, align 4
  %30 = getelementptr inbounds %struct.anon.210, ptr %1, i32 0, i32 3
  %31 = load i16, ptr %30, align 2
  %32 = tail call i16 @llvm.bswap.i16(i16 %31)
  %33 = tail call ptr @__inet6_lookup_established(ptr noundef %0, ptr noundef nonnull @tcp_hashinfo, ptr noundef %1, i16 noundef zeroext %29, ptr noundef %25, i16 noundef zeroext %32, i32 noundef %2, i32 noundef 0) #31
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %59

35:                                               ; preds = %27
  %36 = tail call ptr @inet6_lookup_listener(ptr noundef %0, ptr noundef nonnull @tcp_hashinfo, ptr noundef null, i32 noundef 0, ptr noundef %1, i16 noundef zeroext %29, ptr noundef %25, i16 noundef zeroext %32, i32 noundef %2, i32 noundef 0) #31
  br label %48

37:                                               ; preds = %24
  %38 = load ptr, ptr @ipv6_bpf_stub, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %59, label %40, !prof !18

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.ipv6_bpf_stub, ptr %38, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.anon.210, ptr %1, i32 0, i32 2
  %44 = load i16, ptr %43, align 4
  %45 = getelementptr inbounds %struct.anon.210, ptr %1, i32 0, i32 3
  %46 = load i16, ptr %45, align 2
  %47 = tail call ptr %42(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %44, ptr noundef %25, i16 noundef zeroext %46, i32 noundef %2, i32 noundef 0, ptr noundef nonnull @udp_table, ptr noundef null) #31
  br label %48

48:                                               ; preds = %40, %35, %22, %20
  %49 = phi ptr [ %23, %22 ], [ %47, %40 ], [ %21, %20 ], [ %36, %35 ]
  %50 = icmp eq ptr %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.sock_common, ptr %49, i32 0, i32 13
  %53 = load volatile i32, ptr %52, align 4
  %54 = and i32 %53, 8388608
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59, !prof !18

56:                                               ; preds = %51
  %57 = load i1, ptr @sk_lookup.__already_done, align 1
  br i1 %57, label %59, label %58, !prof !10

58:                                               ; preds = %56
  store i1 true, ptr @sk_lookup.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.11, i32 noundef 6209, i32 noundef 9, ptr noundef nonnull @.str.17) #31
  br label %59

59:                                               ; preds = %58, %56, %51, %48, %37, %27, %16
  %60 = phi ptr [ %49, %51 ], [ null, %58 ], [ null, %56 ], [ null, %48 ], [ %33, %27 ], [ %18, %16 ], [ null, %37 ]
  ret ptr %60
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_net_ns_by_id(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__udp4_lib_lookup(ptr noundef, i32 noundef, i16 noundef zeroext, i32 noundef, i16 noundef zeroext, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__inet_lookup_established(ptr noundef, ptr noundef, i32 noundef, i16 noundef zeroext, i32 noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__inet_lookup_listener(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext, i32 noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__inet6_lookup_established(ptr noundef, ptr noundef, ptr noundef, i16 noundef zeroext, ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @inet6_lookup_listener(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i16 noundef zeroext, ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @bpf_sk_lookup(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i8 noundef zeroext %3, i64 noundef %4, i64 noundef %5) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.anon.44, ptr %0, i32 0, i32 2
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 17
  %12 = load i32, ptr %11, align 4
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %12, %10 ], [ 0, %6 ]
  switch i32 %2, label %50 [
    i32 12, label %16
    i32 36, label %15
  ]

15:                                               ; preds = %13
  br label %16

16:                                               ; preds = %15, %13
  %17 = phi i8 [ 2, %13 ], [ 10, %15 ]
  %18 = icmp eq i64 %5, 0
  br i1 %18, label %19, label %50, !prof !58

19:                                               ; preds = %16
  %20 = and i64 %4, 2147483648
  %21 = icmp eq i64 %20, 0
  %22 = icmp ugt i64 %4, 2147483647
  %23 = and i1 %22, %21
  br i1 %23, label %50, label %24, !prof !18

24:                                               ; preds = %19
  %25 = trunc i64 %4 to i32
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = tail call ptr @get_net_ns_by_id(ptr noundef nonnull @init_net, i32 noundef %25) #31
  %29 = icmp eq ptr %28, null
  br i1 %29, label %50, label %30, !prof !18

30:                                               ; preds = %27, %24
  %31 = phi ptr [ @init_net, %24 ], [ %28, %27 ]
  %32 = tail call fastcc ptr @sk_lookup(ptr noundef nonnull %31, ptr noundef %1, i32 noundef %14, i8 noundef zeroext %17, i8 noundef zeroext %3) #31
  %33 = icmp eq ptr %32, null
  br i1 %33, label %50, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.sock_common, ptr %32, i32 0, i32 4
  %36 = load volatile i8, ptr %35, align 2
  %37 = icmp eq i8 %36, 12
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.sock_common, ptr %32, i32 0, i32 13
  %40 = load ptr, ptr %39, align 8
  br label %41

41:                                               ; preds = %38, %34
  %42 = phi ptr [ %40, %38 ], [ %32, %34 ]
  %43 = getelementptr inbounds %struct.sock_common, ptr %42, i32 0, i32 4
  %44 = load volatile i8, ptr %43, align 2
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 1, %45
  %47 = and i32 %46, -4161
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %41
  tail call void @sock_gen_put(ptr noundef %42) #31
  br label %50

50:                                               ; preds = %49, %41, %30, %27, %19, %16, %13
  %51 = phi ptr [ null, %49 ], [ %42, %41 ], [ null, %30 ], [ null, %19 ], [ null, %27 ], [ null, %16 ], [ null, %13 ]
  ret ptr %51
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_gen_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @bpf_sk_base_func_proto(i32 noundef %0) unnamed_addr #0 {
  switch i32 %0, label %7 [
    i32 136, label %8
    i32 137, label %2
    i32 138, label %3
    i32 139, label %4
    i32 140, label %5
    i32 178, label %6
    i32 160, label %14
  ]

2:                                                ; preds = %1
  br label %8

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  br label %8

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %14

8:                                                ; preds = %6, %5, %4, %3, %2, %1
  %9 = phi ptr [ @bpf_skc_to_unix_sock_proto, %6 ], [ @bpf_skc_to_udp6_sock_proto, %5 ], [ @bpf_skc_to_tcp_request_sock_proto, %4 ], [ @bpf_skc_to_tcp_timewait_sock_proto, %3 ], [ @bpf_skc_to_tcp_sock_proto, %2 ], [ @bpf_skc_to_tcp6_sock_proto, %1 ]
  %10 = tail call zeroext i1 @capable(i32 noundef 38) #31
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @capable(i32 noundef 21) #31
  br i1 %12, label %13, label %14

13:                                               ; preds = %11, %8
  br label %14

14:                                               ; preds = %13, %11, %7, %1
  %15 = phi ptr [ null, %7 ], [ @bpf_ktime_get_coarse_ns_proto, %1 ], [ %9, %13 ], [ null, %11 ]
  ret ptr %15
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal fastcc zeroext i1 @bpf_skb_is_valid_access(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef writeonly %3) unnamed_addr #17 {
  %5 = icmp ugt i32 %0, 191
  br i1 %5, label %37, label %6

6:                                                ; preds = %4
  %7 = srem i32 %0, %1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %37

9:                                                ; preds = %6
  switch i32 %0, label %26 [
    i32 48, label %10
    i32 49, label %10
    i32 50, label %10
    i32 51, label %10
    i32 52, label %10
    i32 53, label %10
    i32 54, label %10
    i32 55, label %10
    i32 56, label %10
    i32 57, label %10
    i32 58, label %10
    i32 59, label %10
    i32 60, label %10
    i32 61, label %10
    i32 62, label %10
    i32 63, label %10
    i32 64, label %10
    i32 65, label %10
    i32 66, label %10
    i32 67, label %10
    i32 80, label %13
    i32 81, label %13
    i32 82, label %13
    i32 83, label %13
    i32 140, label %13
    i32 141, label %13
    i32 142, label %13
    i32 143, label %13
    i32 76, label %13
    i32 77, label %13
    i32 78, label %13
    i32 79, label %13
    i32 96, label %13
    i32 97, label %13
    i32 98, label %13
    i32 99, label %13
    i32 92, label %13
    i32 93, label %13
    i32 94, label %13
    i32 95, label %13
    i32 116, label %13
    i32 117, label %13
    i32 118, label %13
    i32 119, label %13
    i32 120, label %13
    i32 121, label %13
    i32 122, label %13
    i32 123, label %13
    i32 124, label %13
    i32 125, label %13
    i32 126, label %13
    i32 127, label %13
    i32 128, label %13
    i32 129, label %13
    i32 130, label %13
    i32 131, label %13
    i32 100, label %13
    i32 101, label %13
    i32 102, label %13
    i32 103, label %13
    i32 104, label %13
    i32 105, label %13
    i32 106, label %13
    i32 107, label %13
    i32 108, label %13
    i32 109, label %13
    i32 110, label %13
    i32 111, label %13
    i32 112, label %13
    i32 113, label %13
    i32 114, label %13
    i32 115, label %13
    i32 144, label %37
    i32 145, label %37
    i32 146, label %37
    i32 147, label %37
    i32 148, label %37
    i32 149, label %37
    i32 150, label %37
    i32 151, label %37
    i32 184, label %15
    i32 185, label %15
    i32 186, label %15
    i32 187, label %15
    i32 188, label %15
    i32 189, label %15
    i32 190, label %15
    i32 191, label %15
    i32 152, label %19
    i32 153, label %19
    i32 154, label %19
    i32 155, label %19
    i32 156, label %19
    i32 157, label %19
    i32 158, label %19
    i32 159, label %19
    i32 168, label %21
    i32 180, label %37
    i32 181, label %37
    i32 182, label %37
    i32 183, label %37
  ]

10:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9
  %11 = add i32 %1, %0
  %12 = icmp ugt i32 %11, 68
  br i1 %12, label %37, label %36

13:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9
  %14 = icmp eq i32 %1, 4
  br i1 %14, label %36, label %37

15:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9
  %16 = icmp eq i32 %2, 2
  %17 = icmp ne i32 %1, 8
  %18 = or i1 %17, %16
  br i1 %18, label %37, label %36

19:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9
  %20 = icmp eq i32 %1, 8
  br i1 %20, label %36, label %37

21:                                               ; preds = %9
  %22 = icmp eq i32 %2, 2
  %23 = icmp ne i32 %1, 8
  %24 = or i1 %23, %22
  br i1 %24, label %37, label %25

25:                                               ; preds = %21
  store i32 268, ptr %3, align 4
  br label %36

26:                                               ; preds = %9
  %27 = icmp eq i32 %2, 2
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = icmp eq i32 %1, 4
  br i1 %29, label %36, label %37

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.bpf_insn_access_aux, ptr %3, i32 0, i32 1
  store i32 4, ptr %31, align 4
  %32 = icmp ult i32 %1, 5
  %33 = tail call i32 @llvm.ctpop.i32(i32 %1) #31, !range !37
  %34 = icmp ult i32 %33, 2
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %30, %28, %25, %19, %15, %13, %10
  br label %37

37:                                               ; preds = %36, %30, %28, %21, %19, %15, %13, %10, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %6, %4
  %38 = phi i1 [ true, %36 ], [ false, %4 ], [ false, %6 ], [ false, %10 ], [ false, %13 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %15 ], [ false, %19 ], [ false, %21 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %28 ], [ false, %30 ]
  ret i1 %38
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @metadata_dst_alloc_percpu(i8 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @metadata_dst_free_percpu(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_sock_nested(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sock_from_file(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #22

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #29

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.fshl.i8(i8, i8, i8) #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #22

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { argmemonly nofree nounwind willreturn writeonly }
attributes #3 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nounwind willreturn }
attributes #5 = { mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nofree nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { nounwind readonly }
attributes #22 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #23 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #26 = { inlinehint nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #27 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #28 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #29 = { argmemonly nofree nounwind readonly willreturn }
attributes #30 = { nounwind readnone }
attributes #31 = { nounwind }
attributes #32 = { nounwind allocsize(0) }
attributes #33 = { nounwind allocsize(2) }
attributes #34 = { cold nounwind }
attributes #35 = { nounwind readonly willreturn }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{i64 2152042358, i64 2152042383}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{i64 4534409}
!12 = !{i64 4534606}
!13 = !{i64 2152019885}
!14 = !{i64 574154, i64 574215}
!15 = !{i64 581259}
!16 = !{i64 577171}
!17 = !{i64 2149343314}
!18 = !{!"branch_weights", i32 1, i32 2000}
!19 = !{i64 2149680834}
!20 = !{i64 2149681135}
!21 = !{i64 2149343531}
!22 = !{!"auto-init"}
!23 = !{i64 545407, i64 2148046973, i64 2148046999, i64 2148047046, i64 2148047068, i64 2148047096, i64 2148047116}
!24 = !{i64 2148123031, i64 2148123057, i64 2148123086, i64 2148123120, i64 2148123151, i64 2148123174}
!25 = !{i64 2148222330}
!26 = !{i64 2148124489, i64 2148124521, i64 2148124550, i64 2148124584, i64 2148124615, i64 2148124638}
!27 = !{i64 2149292947}
!28 = !{i64 494559, i64 494583, i64 494604, i64 494621, i64 494638}
!29 = !{i64 2148120674, i64 2148120700, i64 2148120729, i64 2148120763, i64 2148120794, i64 2148120817}
!30 = !{i8 0, i8 2}
!31 = !{i64 2158685728}
!32 = !{i64 5604299}
!33 = !{!"branch_weights", i32 2000, i32 2002}
!34 = !{i64 2149157084}
!35 = !{!"branch_weights", i32 1, i32 4000, i32 1}
!36 = !{i64 2153579286, i64 2153579774, i64 2153579323, i64 2153579379, i64 2153579413, i64 2153579437, i64 2153579478, i64 2153579499, i64 2153579527, i64 2153579561}
!37 = !{i32 0, i32 33}
!38 = !{i64 2148221329}
!39 = !{i64 2148123715, i64 2148123747, i64 2148123776, i64 2148123810, i64 2148123841, i64 2148123864}
!40 = !{i64 2148221532}
!41 = !{i64 2153358313, i64 2153358805, i64 2153358350, i64 2153358406, i64 2153358440, i64 2153358464, i64 2153358505, i64 2153358526, i64 2153358554, i64 2153358588}
!42 = !{!"branch_weights", i32 4001, i32 4000000}
!43 = !{!"branch_weights", i32 6002, i32 8002000}
!44 = !{i64 2158989315}
!45 = !{i64 630662, i64 630683, i64 630706, i64 630725, i64 630744}
!46 = !{i64 2158989702}
!47 = !{i64 2158052480}
!48 = !{i64 2158052710}
!49 = !{!"branch_weights", i32 2146410443, i32 1073205}
!50 = !{i64 2158034138}
!51 = !{i64 2158034360}
!52 = !{!"branch_weights", i32 1, i32 8000, i32 1, i32 1, i32 1}
!53 = !{i64 2148120181}
!54 = !{i64 495065, i64 495090, i64 495112, i64 495128, i64 495140, i64 495160, i64 495184, i64 495200, i64 495212}
!55 = !{i64 2148120307}
!56 = !{i64 2155621589}
!57 = !{i64 2155621637}
!58 = !{!"branch_weights", i32 4000000, i32 4001}
!59 = !{i64 2159068067}
!60 = !{i64 2159068454}
!61 = !{i64 2152042936, i64 2152042961}
!62 = !{!"branch_weights", i32 1073205, i32 2146410443}
!63 = !{i64 2158645545, i64 2158646027, i64 2158645582, i64 2158645638, i64 2158645672, i64 2158645696, i64 2158645737, i64 2158645758, i64 2158645786, i64 2158645820}
!64 = !{i64 2158669005, i64 2158669487, i64 2158669042, i64 2158669098, i64 2158669132, i64 2158669156, i64 2158669197, i64 2158669218, i64 2158669246, i64 2158669280}
!65 = !{i64 2149693958}
!66 = !{i64 2149693800}
!67 = !{i64 2149694102}
!68 = !{i64 2149680535}
!69 = !{!"branch_weights", i32 6003000, i32 -294967296}
!70 = !{i64 2159169695}
!71 = !{i64 2159170098}
!72 = !{i64 2155545061}
!73 = !{i64 627938, i64 627955, i64 627979, i64 628005, i64 628023}
!74 = !{i64 2155545380}
!75 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
